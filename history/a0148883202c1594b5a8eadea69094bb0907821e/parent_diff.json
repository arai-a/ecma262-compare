{"from": {"secList": ["sec-abstract-module-records", "sec-code-realms"], "secData": {"sec-abstract-module-records": {"num": "15.2.1.15", "title": "#sec-abstract-module-records Abstract Module Records", "html": "<emu-clause id=\"sec-abstract-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-module-records\">#sec-abstract-module-records</span> Abstract Module Records</h1>\n        <p>A  <dfn>Module Record</dfn> encapsulates structural information about the imports and exports of a single module. This information is used to link the imports and exports of sets of connected modules. A Module Record includes four fields that are only used when evaluating a module.</p>\n        <p>For specification purposes Module Record values are values of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> specification type and can be thought of as existing in a simple object-oriented hierarchy where Module Record is an abstract class with both abstract and concrete subclasses. This specification defines the abstract subclass named <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> and its concrete subclass named <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>. Other specifications and implementations may define additional Module Record subclasses corresponding to alternative module definition facilities that they defined.</p>\n        <p>Module Record defines the fields listed in  <emu-xref href=\"#table-36\"><a href=\"#table-36\" class=\"excluded-xref\" excluded-id=\"table-36\">#table-36</a></emu-xref>. All Module Definition subclasses include at least those fields. Module Record also defines the abstract method list in  <emu-xref href=\"#table-37\"><a href=\"#table-37\" class=\"excluded-xref\" excluded-id=\"table-37\">#table-37</a></emu-xref>. All Module definition subclasses must provide concrete implementations of these abstract methods.</p>\n        <emu-table id=\"table-36\" caption=\"Module Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-36\">#table-36</span>: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <thead>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                [[Realm]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> within which this module was created. <emu-val>undefined</emu-val> if not yet assigned.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Environment]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> containing the top level bindings for this module. This field is set when the module is linked.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Namespace]]\n              \n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                The Module Namespace Object (<emu-xref href=\"#sec-module-namespace-objects\"><a href=\"#sec-module-namespace-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</a></emu-xref>) if one has been created for this module. Otherwise <emu-val>undefined</emu-val>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[HostDefined]]\n              \n              </td>\n              <td>\n                Any, default value is <emu-val>undefined</emu-val>.\n              \n              </td>\n              <td>\n                Field reserved for use by host environments that need to associate additional information with a module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-table id=\"table-37\" caption=\"Abstract Methods of Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-37\">#table-37</span>: Abstract Methods of Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              \n              </th>\n              <th>\n                Purpose\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                GetExportedNames([<var>exportStarSet</var>])\n              \n              </td>\n              <td>\n                Return a list of all names that are either directly or indirectly exported from this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                ResolveExport(<var>exportName</var> [, <var>resolveSet</var>])\n              \n              </td>\n              <td>\n                <p>Return the binding of a name exported by this module. Bindings are represented by a  <dfn id=\"resolvedbinding-record\">ResolvedBinding Record</dfn>, of the form { [[Module]]: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, [[BindingName]]: String }. If the export is a Module Namespace Object without a direct binding in any module, [[BindingName]] will be set to <emu-val>\"*namespace*\"</emu-val>. Return <emu-val>null</emu-val> if the name cannot be resolved, or <emu-val>\"ambiguous\"</emu-val> if multiple bindings were found.</p>\n                <p>Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result if it completes normally.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Link()\n              \n              </td>\n              <td>\n                <p>Prepare the module for evaluation by transitively resolving all module dependencies and creating a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Evaluate()\n              \n              </td>\n              <td>\n                <p>If this module has already been evaluated successfully, return <emu-val>undefined</emu-val>; if it has already been evaluated unsuccessfully, throw the exception that was produced. Otherwise, transitively evaluate all module dependencies of this module and then evaluate this module.</p>\n                <p>Link must have completed successfully prior to invoking this method.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-code-realms": {"num": "8.2", "title": "#sec-code-realms Realms", "html": "<emu-clause id=\"sec-code-realms\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-code-realms\">#sec-code-realms</span> Realms</h1>\n    <p>Before it is evaluated, all ECMAScript code must be associated with a  <dfn id=\"realm\">realm</dfn>. Conceptually, a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> consists of a set of intrinsic objects, an ECMAScript <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref>, all of the ECMAScript code that is loaded within the scope of that <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref>, and other associated state and resources.</p>\n    <p>A <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> is represented in this specification as a  <dfn id=\"realm-record\">Realm Record</dfn> with the fields specified in  <emu-xref href=\"#table-21\"><a href=\"#table-21\" class=\"excluded-xref\" excluded-id=\"table-21\">#table-21</a></emu-xref>:</p>\n    <emu-table id=\"table-21\" caption=\"Realm Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-21\">#table-21</span>: <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> Fields</figcaption>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Field Name\n          \n          </th>\n          <th>\n            Value\n          \n          </th>\n          <th>\n            Meaning\n          \n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[Intrinsics]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> whose field names are intrinsic keys and whose values are objects\n          \n          </td>\n          <td>\n            The intrinsic values used by code associated with this <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[GlobalObject]]\n          \n          </td>\n          <td>\n            Object\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> for this <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[GlobalEnv]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref> for this <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[TemplateMap]]\n          \n          </td>\n          <td>\n            A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Site]]: <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, [[Array]]: Object }.\n          \n          </td>\n          <td>\n            <p>Template objects are canonicalized separately for each <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> using its <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>'s [[TemplateMap]]. Each [[Site]] value is a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> that is a <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt>. The associated [[Array]] value is the corresponding template object that is passed to a tag function.</p>\n            <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">Once a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> becomes unreachable, the corresponding [[Array]] is also unreachable, and it would be unobservable if an implementation removed the pair from the [[TemplateMap]] list.</div></emu-note>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HostDefined]]\n          \n          </td>\n          <td>\n            Any, default value is <emu-val>undefined</emu-val>.\n          \n          </td>\n          <td>\n            Field reserved for use by host environments that need to associate additional information with a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.\n          \n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n\n    <div id=\"excluded-sec-createrealm\"><h1><span class=\"secnum\">8.2.1</span>#sec-createrealm CreateRealm ( )</h1>...</div><div id=\"excluded-sec-createintrinsics\"><h1><span class=\"secnum\">8.2.2</span>#sec-createintrinsics CreateIntrinsics ( realmRec )</h1>...</div><div id=\"excluded-sec-setrealmglobalobject\"><h1><span class=\"secnum\">8.2.3</span>#sec-setrealmglobalobject SetRealmGlobalObject ( realmRec, globalObj, thisValue )</h1>...</div><div id=\"excluded-sec-setdefaultglobalbindings\"><h1><span class=\"secnum\">8.2.4</span>#sec-setdefaultglobalbindings SetDefaultGlobalBindings ( realmRec )</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-2": "Table 3", "table-3": "Table 4", "table-21": "Table 22", "table-36": "Table 38", "table-37": "Table 39"}}, "to": {"secList": ["sec-abstract-module-records", "sec-code-realms"], "secData": {"sec-abstract-module-records": {"num": "15.2.1.15", "title": "#sec-abstract-module-records Abstract Module Records", "html": "<emu-clause id=\"sec-abstract-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-module-records\">#sec-abstract-module-records</span> Abstract Module Records</h1>\n        <p>A  <dfn>Module Record</dfn> encapsulates structural information about the imports and exports of a single module. This information is used to link the imports and exports of sets of connected modules. A Module Record includes four fields that are only used when evaluating a module.</p>\n        <p>For specification purposes Module Record values are values of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> specification type and can be thought of as existing in a simple object-oriented hierarchy where Module Record is an abstract class with both abstract and concrete subclasses. This specification defines the abstract subclass named <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> and its concrete subclass named <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>. Other specifications and implementations may define additional Module Record subclasses corresponding to alternative module definition facilities that they defined.</p>\n        <p>Module Record defines the fields listed in  <emu-xref href=\"#table-36\"><a href=\"#table-36\" class=\"excluded-xref\" excluded-id=\"table-36\">#table-36</a></emu-xref>. All Module Definition subclasses include at least those fields. Module Record also defines the abstract method list in  <emu-xref href=\"#table-37\"><a href=\"#table-37\" class=\"excluded-xref\" excluded-id=\"table-37\">#table-37</a></emu-xref>. All Module definition subclasses must provide concrete implementations of these abstract methods.</p>\n        <emu-table id=\"table-36\" caption=\"Module Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-36\">#table-36</span>: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <thead>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                [[Realm]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> within which this module was created. <emu-val>undefined</emu-val> if not yet assigned.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Environment]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> containing the top level bindings for this module. This field is set when the module is linked.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Namespace]]\n              \n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                The Module Namespace Object (<emu-xref href=\"#sec-module-namespace-objects\"><a href=\"#sec-module-namespace-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</a></emu-xref>) if one has been created for this module. Otherwise <emu-val>undefined</emu-val>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[HostDefined]]\n              \n              </td>\n              <td>\n                Any, default value is <emu-val>undefined</emu-val>.\n              \n              </td>\n              <td>\n                Field reserved for use by host environments that need to associate additional information with a module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-table id=\"table-37\" caption=\"Abstract Methods of Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-37\">#table-37</span>: Abstract Methods of Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              \n              </th>\n              <th>\n                Purpose\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                GetExportedNames([<var>exportStarSet</var>])\n              \n              </td>\n              <td>\n                Return a list of all names that are either directly or indirectly exported from this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                ResolveExport(<var>exportName</var> [, <var>resolveSet</var>])\n              \n              </td>\n              <td>\n                <p>Return the binding of a name exported by this module. Bindings are represented by a  <dfn id=\"resolvedbinding-record\">ResolvedBinding Record</dfn>, of the form { [[Module]]: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, [[BindingName]]: String }. If the export is a Module Namespace Object without a direct binding in any module, [[BindingName]] will be set to <emu-val>\"*namespace*\"</emu-val>. Return <emu-val>null</emu-val> if the name cannot be resolved, or <emu-val>\"ambiguous\"</emu-val> if multiple bindings were found.</p>\n                <p>Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result if it completes normally.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Link()\n              \n              </td>\n              <td>\n                <p>Prepare the module for evaluation by transitively resolving all module dependencies and creating a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Evaluate()\n              \n              </td>\n              <td>\n                <p>If this module has already been evaluated successfully, return <emu-val>undefined</emu-val>; if it has already been evaluated unsuccessfully, throw the exception that was produced. Otherwise, transitively evaluate all module dependencies of this module and then evaluate this module.</p>\n                <p>Link must have completed successfully prior to invoking this method.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-code-realms": {"num": "8.2", "title": "#sec-code-realms Realms", "html": "<emu-clause id=\"sec-code-realms\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-code-realms\">#sec-code-realms</span> Realms</h1>\n    <p>Before it is evaluated, all ECMAScript code must be associated with a  <dfn id=\"realm\">realm</dfn>. Conceptually, a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> consists of a set of intrinsic objects, an ECMAScript <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref>, all of the ECMAScript code that is loaded within the scope of that <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref>, and other associated state and resources.</p>\n    <p>A <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> is represented in this specification as a  <dfn id=\"realm-record\">Realm Record</dfn> with the fields specified in  <emu-xref href=\"#table-21\"><a href=\"#table-21\" class=\"excluded-xref\" excluded-id=\"table-21\">#table-21</a></emu-xref>:</p>\n    <emu-table id=\"table-21\" caption=\"Realm Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-21\">#table-21</span>: <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> Fields</figcaption>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Field Name\n          \n          </th>\n          <th>\n            Value\n          \n          </th>\n          <th>\n            Meaning\n          \n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[Intrinsics]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> whose field names are intrinsic keys and whose values are objects\n          \n          </td>\n          <td>\n            The intrinsic values used by code associated with this <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[GlobalObject]]\n          \n          </td>\n          <td>\n            Object\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> for this <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[GlobalEnv]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref> for this <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[TemplateMap]]\n          \n          </td>\n          <td>\n            A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Site]]: <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, [[Array]]: Object }.\n          \n          </td>\n          <td>\n            <p>Template objects are canonicalized separately for each <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> using its <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>'s [[TemplateMap]]. Each [[Site]] value is a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> that is a <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt>. The associated [[Array]] value is the corresponding template object that is passed to a tag function.</p>\n            <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">Once a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> becomes unreachable, the corresponding [[Array]] is also unreachable, and it would be unobservable if an implementation removed the pair from the [[TemplateMap]] list.</div></emu-note>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HostDefined]]\n          \n          </td>\n          <td>\n            Any, default value is <emu-val>undefined</emu-val>.\n          \n          </td>\n          <td>\n            Field reserved for use by host environments that need to associate additional information with a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.\n          \n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n\n    <div id=\"excluded-sec-createrealm\"><h1><span class=\"secnum\">8.2.1</span>#sec-createrealm CreateRealm ( )</h1>...</div><div id=\"excluded-sec-createintrinsics\"><h1><span class=\"secnum\">8.2.2</span>#sec-createintrinsics CreateIntrinsics ( realmRec )</h1>...</div><div id=\"excluded-sec-setrealmglobalobject\"><h1><span class=\"secnum\">8.2.3</span>#sec-setrealmglobalobject SetRealmGlobalObject ( realmRec, globalObj, thisValue )</h1>...</div><div id=\"excluded-sec-setdefaultglobalbindings\"><h1><span class=\"secnum\">8.2.4</span>#sec-setdefaultglobalbindings SetDefaultGlobalBindings ( realmRec )</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-2": "Table 3", "table-3": "Table 4", "table-21": "Table 22", "table-36": "Table 38", "table-37": "Table 39"}}}