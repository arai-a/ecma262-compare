{"from": {"secList": ["sec-reserved-words", "sec-future-reserved-words", "sec-grammar-notation", "sec-identifiers-runtime-semantics-evaluation", "sec-keywords", "sec-lexical-grammar", "sec-async-function-definitions", "sec-reference-specification-type", "sec-strict-mode-of-ecmascript", "sec-names-and-keywords", "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions", "sec-conformance", "sec-resolvethisbinding", "sec-getthisenvironment"], "secData": {"sec-reserved-words": {"num": "11.6.2", "title": "#sec-reserved-words Reserved Words", "html": "<emu-clause id=\"sec-reserved-words\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reserved-words\">#sec-reserved-words</span> Reserved Words</h1>\n      <p>A reserved word is an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that cannot be used as an <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ReservedWord\" type=\"lexical\" id=\"prod-ReservedWord\">\n    <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a3926e03\"><emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9d71bdc1\"><emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"54f84188\"><emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3508e1fd\"><emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> definitions are specified as literal sequences of specific <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> elements. A code point in a <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> cannot be expressed by a <code>\\</code> <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-keywords\"><h1><span class=\"secnum\">11.6.2.1</span>#sec-keywords Keywords</h1>...</div><div id=\"excluded-sec-future-reserved-words\"><h1><span class=\"secnum\">11.6.2.2</span>#sec-future-reserved-words Future Reserved Words</h1>...</div></emu-clause>\n  "}, "sec-future-reserved-words": {"num": "11.6.2.2", "title": "#sec-future-reserved-words Future Reserved Words", "html": "<emu-clause id=\"sec-future-reserved-words\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-future-reserved-words\">#sec-future-reserved-words</span> Future Reserved Words</h1>\n        <p>The following tokens are reserved for use as keywords in future language extensions.</p>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"FutureReservedWord\" type=\"lexical\" id=\"prod-FutureReservedWord\">\n    <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4fb2fe95\"><emu-t>enum</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Use of the following tokens within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is also reserved. That usage is restricted using static semantic restrictions (see  <emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>) rather than the lexical grammar:</p>\n          <figure>\n            <table class=\"lightweight-table\">\n              <tbody>\n              <tr>\n                <td>\n                  <code>implements</code>\n                \n                </td>\n                <td>\n                  <code>package</code>\n                \n                </td>\n                <td>\n                  <code>protected</code>\n                \n                </td>\n                <td>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>interface</code>\n                \n                </td>\n                <td>\n                  <code>private</code>\n                \n                </td>\n                <td>\n                  <code>public</code>\n                \n                </td>\n                <td>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-grammar-notation": {"num": "5.1.5", "title": "#sec-grammar-notation Grammar Notation", "html": "<emu-clause id=\"sec-grammar-notation\" namespace=\"grammar-notation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-grammar-notation\">#sec-grammar-notation</span> Grammar Notation</h1>\n      <p>Terminal symbols of the lexical, RegExp, and numeric string grammars are shown in <code>fixed width</code> font, both in the productions of the grammars and throughout this specification whenever the text directly refers to such a terminal symbol. These are to appear in a script exactly as written. All terminal symbol code points specified in this way are to be understood as the appropriate Unicode code points from the Basic Latin range, as opposed to any similar-looking code points from other Unicode ranges.</p>\n      <p>Nonterminal symbols are shown in  <i>italic</i> type. The definition of a nonterminal (also called a &#8220;production&#8221;) is introduced by the name of the nonterminal being defined followed by one or more colons. (The number of colons indicates to which grammar the production belongs.) One or more alternative right-hand sides for the nonterminal then follow on succeeding lines. For example, the syntactic definition:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"WhileStatement\" id=\"prod-grammar-notation-WhileStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-WhileStatement\">WhileStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f7627bf3\"><emu-t>while</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>states that the nonterminal <emu-nt><a href=\"#prod-grammar-notation-WhileStatement\">WhileStatement</a></emu-nt> represents the token <code>while</code>, followed by a left parenthesis token, followed by an <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>, followed by a right parenthesis token, followed by a <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>. The occurrences of <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> and <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> are themselves nonterminals. As another example, the syntactic definition:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"ArgumentList\" id=\"prod-grammar-notation-ArgumentList\">\n    <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d4fc7da4\"><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7ff23fee\"><emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>states that an <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt> may represent either a single <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> or an <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt>, followed by a comma, followed by an <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>. This definition of <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt> is recursive, that is, it is defined in terms of itself. The result is that an <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt> may contain any positive number of arguments, separated by commas, where each argument expression is an <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>. Such recursive definitions of nonterminals are common.</p>\n      <p>The subscripted suffix &#8220;<sub>opt</sub>&#8221;, which may appear after a terminal or nonterminal, indicates an optional symbol. The alternative containing the optional symbol actually specifies two right-hand sides, one that omits the optional element and one that includes it. This means that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\" id=\"prod-grammar-notation-VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0b9344a8\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"89becb83\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"IterationStatement\" id=\"prod-grammar-notation-IterationStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"93c07e45\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>;</emu-t><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"180d57b5\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-t>;</emu-t><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"0acd6093\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>which in turn is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"00273dd7\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-t>;</emu-t><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d4b04297\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-t>;</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e8d15924\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7f2cbdb0\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>so, in this example, the nonterminal <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt> actually has four alternative right-hand sides.</p>\n      <p>A production may be parameterized by a subscripted annotation of the form &#8220;<sub>[parameters]</sub>&#8221;, which may appear as a suffix to the nonterminal symbol defined by the production. &#8220;<sub>parameters</sub>&#8221; may be either a single name or a comma separated list of names. A parameterized production is shorthand for a set of productions defining all combinations of the parameter names, preceded by an underscore, appended to the parameterized nonterminal symbol. This means that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return\" id=\"prod-grammar-notation-StatementList\">\n    <emu-nt params=\"Return\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\" id=\"prod-grammar-notation-StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return, In\">\n    <emu-nt params=\"Return, In\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return, In]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_In\" id=\"prod-grammar-notation-StatementList_In\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_In\">StatementList_In</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return_In\" id=\"prod-grammar-notation-StatementList_Return_In\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return_In\">StatementList_Return_In</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>Multiple parameters produce a combinatory number of productions, not all of which are necessarily referenced in a complete grammar.</p>\n      <p>References to nonterminals on the right-hand side of a production can also be parameterized. For example:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"abb21bdc\"><emu-nt params=\"+In\"><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a><emu-mods><emu-params>[+In]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is equivalent to saying:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"93a8206f\"><emu-nt>ExpressionStatement_In</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"70147e05\"><emu-nt params=\"~In\"><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a><emu-mods><emu-params>[~In]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is equivalent to:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>A nonterminal reference may have both a parameter list and an &#8220;<sub>opt</sub>&#8221; suffix. For example:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"363e22bb\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt params=\"+In\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"693077fa\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt>Initializer_In</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>Prefixing a parameter name with &#8220;<sub>?</sub>&#8221; on a right-hand side nonterminal reference makes that parameter value dependent upon the occurrence of the parameter name on the reference to the current production's left-hand side symbol. For example:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\" params=\"In\">\n    <emu-nt params=\"In\"><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dde5478d\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt params=\"?In\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89becb83\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"VariableDeclaration_In\" id=\"prod-grammar-notation-VariableDeclaration_In\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration_In\">VariableDeclaration_In</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"693077fa\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt>Initializer_In</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>If a right-hand side alternative is prefixed with &#8220;[+parameter]&#8221; that alternative is only available if the named parameter was used in referencing the production's nonterminal symbol. If a right-hand side alternative is prefixed with &#8220;[~parameter]&#8221; that alternative is only available if the named parameter was  <em>not</em> used in referencing the production's nonterminal symbol. This means that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return\">\n    <emu-nt params=\"Return\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a712bea8\" constraints=\"+Return\"><emu-constraints>[+Return]</emu-constraints><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return\">\n    <emu-nt params=\"Return\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9abebc34\" constraints=\"~Return\"><emu-constraints>[~Return]</emu-constraints><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>When the words &#8220;<b>one of</b>&#8221; follow the colon(s) in a grammar definition, they signify that each of the terminal symbols on the following line or lines is an alternative definition. For example, the lexical grammar for ECMAScript contains the production:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\" id=\"prod-grammar-notation-NonZeroDigit\">\n    <emu-nt><a href=\"#prod-grammar-notation-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>which is merely a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"NonZeroDigit\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-grammar-notation-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n    <emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n    <emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n    <emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n    <emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n    <emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n    <emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n    <emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n    <emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>If the phrase &#8220;[empty]&#8221; appears as the right-hand side of a production, it indicates that the production's right-hand side contains no terminals or nonterminals.</p>\n      <p>If the phrase &#8220;[lookahead &#8713; <var>set</var>]&#8221; appears in the right-hand side of a production, it indicates that the production may not be used if the immediately following input token sequence is a member of the given <var>set</var>. The <var>set</var> can be written as a comma separated list of one or two element terminal sequences enclosed in curly brackets. For convenience, the set can also be written as a nonterminal, in which case it represents the set of all terminals to which that nonterminal could expand. If the <var>set</var> consists of a single terminal the phrase &#8220;[lookahead &#8800; <var>terminal</var>]&#8221; may be used.</p>\n      <p>For example, given the definitions:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-grammar-notation-DecimalDigit\">\n    <emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalDigits\" type=\"lexical\" id=\"prod-grammar-notation-DecimalDigits\">\n    <emu-nt><a href=\"#prod-grammar-notation-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-grammar-notation-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>the definition:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"LookaheadExample\" type=\"lexical\" id=\"prod-grammar-notation-LookaheadExample\">\n    <emu-nt><a href=\"#prod-grammar-notation-LookaheadExample\">LookaheadExample</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e21e12ce\"><emu-t>n</emu-t><emu-gann>[lookahead &#8713; { <emu-t>1</emu-t>, <emu-t>3</emu-t>, <emu-t>5</emu-t>, <emu-t>7</emu-t>, <emu-t>9</emu-t> }]</emu-gann><emu-nt><a href=\"#prod-grammar-notation-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"195cbc6c\"><emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n      <p>matches either the letter <code>n</code> followed by one or more decimal digits the first of which is even, or a decimal digit not followed by another decimal digit.</p>\n      <p>Similarly, if the phrase &#8220;[lookahead &#8712; <var>set</var>]&#8221; appears in the right-hand side of a production, it indicates that the production may only be used if the immediately following input token sequence is a member of the given <var>set</var>. If the <var>set</var> consists of a single terminal the phrase &#8220;[lookahead = <var>terminal</var>]&#8221; may be used.</p>\n      <p>If the phrase &#8220;[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]&#8221; appears in the right-hand side of a production of the syntactic grammar, it indicates that the production is  <em>a restricted production</em>: it may not be used if a <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> occurs in the input stream at the indicated position. For example, the production:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"ThrowStatement\" id=\"prod-grammar-notation-ThrowStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-ThrowStatement\">ThrowStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ff4ec866\"><emu-t>throw</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>indicates that the production may not be used if a <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> occurs in the script between the <code>throw</code> token and the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</p>\n      <p>Unless the presence of a <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> is forbidden by a restricted production, any number of occurrences of <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> may appear between any two consecutive tokens in the stream of input elements without affecting the syntactic acceptability of the script.</p>\n      <p>When an alternative in a production of the lexical grammar or the numeric string grammar appears to be a multi-code point token, it represents the sequence of code points that would make up such a token.</p>\n      <p>The right-hand side of a production may specify that certain expansions are not permitted by using the phrase &#8220;<b>but not</b>&#8221; and then indicating the expansions to be excluded. For example, the production:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"Identifier\" type=\"lexical\" id=\"prod-grammar-notation-Identifier\">\n    <emu-nt><a href=\"#prod-grammar-notation-Identifier\">Identifier</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bfa5c374\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production></emu-grammar>\n      <p>means that the nonterminal <emu-nt><a href=\"#prod-grammar-notation-Identifier\">Identifier</a></emu-nt> may be replaced by any sequence of code points that could replace <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> provided that the same sequence of code points could not replace <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt>.</p>\n      <p>Finally, a few nonterminal symbols are described by a descriptive phrase in sans-serif type in cases where it would be impractical to list all the alternatives:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"SourceCharacter\" type=\"lexical\" id=\"prod-grammar-notation-SourceCharacter\">\n    <emu-nt><a href=\"#prod-grammar-notation-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production></emu-grammar>\n    </emu-clause>\n  "}, "sec-identifiers-runtime-semantics-evaluation": {"num": "12.1.6", "title": "#sec-identifiers-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-identifiers-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-identifiers-runtime-semantics-evaluation\">#sec-identifiers-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06b6ace8\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(StringValue of <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d1df3360\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<code>\"yield\"</code>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"857d4354\"><emu-t>await</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<code>\"await\"</code>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>The result of evaluating an <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> is always a value of type <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>In <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>, the keyword <code>yield</code> may be used as an identifier. Evaluating the <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> resolves the binding of <code>yield</code> as if it was an <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>. Early Error restriction ensures that such an evaluation only can occur for <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-keywords": {"num": "11.6.2.1", "title": "#sec-keywords Keywords", "html": "<emu-clause id=\"sec-keywords\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-keywords\">#sec-keywords</span> Keywords</h1>\n        <p>The following tokens are ECMAScript keywords and may not be used as <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>s in ECMAScript programs.</p>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"Keyword\" type=\"lexical\" oneof=\"\" id=\"prod-Keyword\">\n    <emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>await</emu-t><emu-t>break</emu-t><emu-t>case</emu-t><emu-t>catch</emu-t><emu-t>class</emu-t><emu-t>const</emu-t><emu-t>continue</emu-t><emu-t>debugger</emu-t><emu-t>default</emu-t><emu-t>delete</emu-t><emu-t>do</emu-t><emu-t>else</emu-t><emu-t>export</emu-t><emu-t>extends</emu-t><emu-t>finally</emu-t><emu-t>for</emu-t><emu-t>function</emu-t><emu-t>if</emu-t><emu-t>import</emu-t><emu-t>in</emu-t><emu-t>instanceof</emu-t><emu-t>new</emu-t><emu-t>return</emu-t><emu-t>super</emu-t><emu-t>switch</emu-t><emu-t>this</emu-t><emu-t>throw</emu-t><emu-t>try</emu-t><emu-t>typeof</emu-t><emu-t>var</emu-t><emu-t>void</emu-t><emu-t>while</emu-t><emu-t>with</emu-t><emu-t>yield</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>In some contexts <code>yield</code> and <code>await</code> are given the semantics of an <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>. See  <emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>. In <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, <code>let</code> and <code>static</code> are treated as reserved words through static semantic restrictions (see  <emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-let-and-const-declarations-static-semantics-early-errors\"><a href=\"#sec-let-and-const-declarations-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-let-and-const-declarations-static-semantics-early-errors\">#sec-let-and-const-declarations-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-early-errors\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-early-errors\">#sec-for-in-and-for-of-statements-static-semantics-early-errors</a></emu-xref>, and  <emu-xref href=\"#sec-class-definitions-static-semantics-early-errors\"><a href=\"#sec-class-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-class-definitions-static-semantics-early-errors\">#sec-class-definitions-static-semantics-early-errors</a></emu-xref>) rather than the lexical grammar.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-lexical-grammar": {"num": "A.1", "title": "#sec-lexical-grammar Lexical Grammar", "html": "<emu-annex id=\"sec-lexical-grammar\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lexical-grammar\">#sec-lexical-grammar</span> Lexical Grammar</h1>\n    <emu-production name=\"SourceCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementDiv\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementDiv\">InputElementDiv</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExp\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExp\">InputElementRegExp</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExpOrTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExpOrTemplateTail\">InputElementRegExpOrTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementTemplateTail\">InputElementTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"WhiteSpace\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"819ea3fd\"><emu-gprose>&lt;TAB&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"156dc7da\"><emu-gprose>&lt;VT&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"77b516c0\"><emu-gprose>&lt;FF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6a85afed\"><emu-gprose>&lt;SP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"63dd44af\"><emu-gprose>&lt;NBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"b09e901a\"><emu-gprose>&lt;ZWNBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"e7de22a4\"><emu-gprose>&lt;USP&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminatorSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"64077750\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gann>[lookahead &#8800; <emu-gprose>&lt;LF&gt;</emu-gprose>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"Comment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b221187a\"><emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"49272b29\"><emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1e164ceb\"><emu-t>/*</emu-t><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>*/</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"24a6effb\"><emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"PostAsteriskCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25615007\"><emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9452de17\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotForwardSlashOrAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1dd7e7ae\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>/</emu-t> or <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"53edd61c\"><emu-t>//</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4521d447\"><emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CommonToken\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ee18f3d6\"><emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3ec1ae06\"><emu-nt><a href=\"#prod-Template\">Template</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierName\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"434685ab\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"700c1cee\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e41f30c8\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Start&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDContinue\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"db14546f\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Continue&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"ReservedWord\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a3926e03\"><emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9d71bdc1\"><emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"54f84188\"><emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3508e1fd\"><emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Keyword\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>await</emu-t><emu-t>break</emu-t><emu-t>case</emu-t><emu-t>catch</emu-t><emu-t>class</emu-t><emu-t>const</emu-t><emu-t>continue</emu-t><emu-t>debugger</emu-t><emu-t>default</emu-t><emu-t>delete</emu-t><emu-t>do</emu-t><emu-t>else</emu-t><emu-t>export</emu-t><emu-t>extends</emu-t><emu-t>finally</emu-t><emu-t>for</emu-t><emu-t>function</emu-t><emu-t>if</emu-t><emu-t>import</emu-t><emu-t>in</emu-t><emu-t>instanceof</emu-t><emu-t>new</emu-t><emu-t>return</emu-t><emu-t>super</emu-t><emu-t>switch</emu-t><emu-t>this</emu-t><emu-t>throw</emu-t><emu-t>try</emu-t><emu-t>typeof</emu-t><emu-t>var</emu-t><emu-t>void</emu-t><emu-t>while</emu-t><emu-t>with</emu-t><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FutureReservedWord\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4fb2fe95\"><emu-t>enum</emu-t></emu-rhs>\n</emu-production>\n    <p>The following tokens are also considered to be <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt>s when parsing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>:</p>\n    <p><emu-t>implements</emu-t> &#160;<emu-t>package</emu-t> &#160;<emu-t>protected</emu-t><br>\n      <emu-t>interface</emu-t> &#160;<emu-t>private</emu-t> &#160;<emu-t>public</emu-t>\n    </p>\n    <p>&#160;</p>\n    <emu-production name=\"Punctuator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>{</emu-t><emu-t>(</emu-t><emu-t>)</emu-t><emu-t>[</emu-t><emu-t>]</emu-t><emu-t>.</emu-t><emu-t>...</emu-t><emu-t>;</emu-t><emu-t>,</emu-t><emu-t>&lt;</emu-t><emu-t>&gt;</emu-t><emu-t>&lt;=</emu-t><emu-t>&gt;=</emu-t><emu-t>==</emu-t><emu-t>!=</emu-t><emu-t>===</emu-t><emu-t>!==</emu-t><emu-t>+</emu-t><emu-t>-</emu-t><emu-t>*</emu-t><emu-t>%</emu-t><emu-t>**</emu-t><emu-t>++</emu-t><emu-t>--</emu-t><emu-t>&lt;&lt;</emu-t><emu-t>&gt;&gt;</emu-t><emu-t>&gt;&gt;&gt;</emu-t><emu-t>&amp;</emu-t><emu-t>|</emu-t><emu-t>^</emu-t><emu-t>!</emu-t><emu-t>~</emu-t><emu-t>&amp;&amp;</emu-t><emu-t>||</emu-t><emu-t>?</emu-t><emu-t>:</emu-t><emu-t>=</emu-t><emu-t>+=</emu-t><emu-t>-=</emu-t><emu-t>*=</emu-t><emu-t>%=</emu-t><emu-t>**=</emu-t><emu-t>&lt;&lt;=</emu-t><emu-t>&gt;&gt;=</emu-t><emu-t>&gt;&gt;&gt;=</emu-t><emu-t>&amp;=</emu-t><emu-t>|=</emu-t><emu-t>^=</emu-t><emu-t>=&gt;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DivPunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3fd5f53\"><emu-t>/</emu-t></emu-rhs>\n    <emu-rhs a=\"2e077fe3\"><emu-t>/=</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RightBracePunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"255cb7fd\"><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NullLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"77b50868\"><emu-t>null</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"BooleanLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fa30b8c6\"><emu-t>true</emu-t></emu-rhs>\n    <emu-rhs a=\"23d2c69d\"><emu-t>false</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NumericLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2727f17d\"><emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68def506\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ddee4872\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"27fc8843\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BigIntLiteralSuffix\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"14b11fb6\"><emu-t>n</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fb5198a6\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"13dbaf21\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"SignedInteger\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"StringLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8bdabc77\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"17d28457\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineContinuation\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"CharacterEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonEscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"Hex4Digits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5778053b\"><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBody\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bba7969e\"><emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a9881cec\"><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFirstChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"da1b0c0a\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0c3ff14\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBackslashSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d7656bad\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionNonTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClass\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c1bc40a\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"76bdcb05\"><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7fd10851\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\\</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFlags\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"fceefdcd\"><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Template\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Template\">Template</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ab9a4b96\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"056f5c6b\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateHead\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bfb172fc\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateSubstitutionTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ccbc035d\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateMiddle\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37635b4e\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fcef5bc0\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f8c26ac5\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"03c3b542\"><emu-t>$</emu-t><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"372f5e0d\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-gmod>but not <emu-t>0</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotCodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5aeddbfc\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &gt; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"deeeb60d\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#8804; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-async-function-definitions": {"num": "14.7", "title": "#sec-async-function-definitions Async Function Definitions", "html": "<emu-clause id=\"sec-async-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</span> Async Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncFunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-AsyncFunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f512250e\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"fef042b8\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" id=\"prod-AsyncFunctionExpression\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c25b1d19\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"be6457e0\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncMethod\" params=\"Yield, Await\" id=\"prod-AsyncMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a922691e\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionBody\" id=\"prod-AsyncFunctionBody\">\n    <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8ff4dc7c\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"AwaitExpression\" params=\"Yield\" id=\"prod-AwaitExpression\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AwaitExpression\">AwaitExpression</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c19c56e7\"><emu-t>await</emu-t><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p><code>await</code> is parsed as an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> when the  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is present. The  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is present in the following contexts:</p>\n      <ul>\n        <li>In an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>. <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> in this position is a Syntax error via <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref>.</li>\n      </ul>\n      <p>When <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> and the  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is absent, <code>await</code> is parsed as a keyword and will be a Syntax error. When <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>, <code>await</code> may be parsed as an identifier when the  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is absent. This includes the following contexts:</p>\n      <ul>\n        <li>Anywhere outside of an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> or <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n      </ul>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>Unlike <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt>, it is a Syntax Error to omit the operand of an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt>. You must await something.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-async-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.7.1</span>#sec-async-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-BoundNames\"><h1><span class=\"secnum\">14.7.2</span>#sec-async-function-definitions-static-semantics-BoundNames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-ComputedPropertyContains\"><h1><span class=\"secnum\">14.7.3</span>#sec-async-function-definitions-static-semantics-ComputedPropertyContains Static Semantics: ComputedPropertyContains</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-Contains\"><h1><span class=\"secnum\">14.7.4</span>#sec-async-function-definitions-static-semantics-Contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-HasDirectSuper\"><h1><span class=\"secnum\">14.7.5</span>#sec-async-function-definitions-static-semantics-HasDirectSuper Static Semantics: HasDirectSuper</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-HasName\"><h1><span class=\"secnum\">14.7.6</span>#sec-async-function-definitions-static-semantics-HasName Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-IsConstantDeclaration\"><h1><span class=\"secnum\">14.7.7</span>#sec-async-function-definitions-static-semantics-IsConstantDeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-IsFunctionDefinition\"><h1><span class=\"secnum\">14.7.8</span>#sec-async-function-definitions-static-semantics-IsFunctionDefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-PropName\"><h1><span class=\"secnum\">14.7.9</span>#sec-async-function-definitions-static-semantics-PropName Static Semantics: PropName</h1>...</div><div id=\"excluded-sec-async-function-definitions-InstantiateFunctionObject\"><h1><span class=\"secnum\">14.7.10</span>#sec-async-function-definitions-InstantiateFunctionObject Runtime Semantics: InstantiateFunctionObject</h1>...</div><div id=\"excluded-sec-async-function-definitions-EvaluateBody\"><h1><span class=\"secnum\">14.7.11</span>#sec-async-function-definitions-EvaluateBody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-async-function-definitions-PropertyDefinitionEvaluation\"><h1><span class=\"secnum\">14.7.12</span>#sec-async-function-definitions-PropertyDefinitionEvaluation Runtime Semantics: PropertyDefinitionEvaluation</h1>...</div><div id=\"excluded-sec-async-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.7.13</span>#sec-async-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-async-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.7.14</span>#sec-async-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-reference-specification-type": {"num": "6.2.4", "title": "#sec-reference-specification-type The Reference Specification Type", "html": "<emu-clause id=\"sec-reference-specification-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reference-specification-type\">#sec-reference-specification-type</span> The Reference Specification Type</h1>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Reference type is used to explain the behaviour of such operators as <code>delete</code>, <code>typeof</code>, the assignment operators, the <code>super</code> keyword and other language features. For example, the left-hand operand of an assignment is expected to produce a reference.</p>\n      </div></emu-note>\n      <p>A  <dfn>Reference</dfn> is a resolved name or property binding. A Reference consists of three components, the base value component, the referenced name component, and the Boolean-valued strict reference flag. The base value component is either <emu-val>undefined</emu-val>, an Object, a Boolean, a String, a Symbol, a Number, or an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. A base value component of <emu-val>undefined</emu-val> indicates that the Reference could not be resolved to a binding. The referenced name component is a String or Symbol value.</p>\n      <p>A  <dfn id=\"super-reference\">Super Reference</dfn> is a Reference that is used to represent a name binding that was expressed using the super keyword. A <emu-xref href=\"#super-reference\"><a href=\"#super-reference\">Super Reference</a></emu-xref> has an additional thisValue component, and its base value component will never be an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</p>\n      <p>The following <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are used in this specification to operate on references:</p>\n\n      <div id=\"excluded-sec-getbase\"><h1><span class=\"secnum\">6.2.4.1</span>#sec-getbase GetBase ( V )</h1>...</div><div id=\"excluded-sec-getreferencedname\"><h1><span class=\"secnum\">6.2.4.2</span>#sec-getreferencedname GetReferencedName ( V )</h1>...</div><div id=\"excluded-sec-isstrictreference\"><h1><span class=\"secnum\">6.2.4.3</span>#sec-isstrictreference IsStrictReference ( V )</h1>...</div><div id=\"excluded-sec-hasprimitivebase\"><h1><span class=\"secnum\">6.2.4.4</span>#sec-hasprimitivebase HasPrimitiveBase ( V )</h1>...</div><div id=\"excluded-sec-ispropertyreference\"><h1><span class=\"secnum\">6.2.4.5</span>#sec-ispropertyreference IsPropertyReference ( V )</h1>...</div><div id=\"excluded-sec-isunresolvablereference\"><h1><span class=\"secnum\">6.2.4.6</span>#sec-isunresolvablereference IsUnresolvableReference ( V )</h1>...</div><div id=\"excluded-sec-issuperreference\"><h1><span class=\"secnum\">6.2.4.7</span>#sec-issuperreference IsSuperReference ( V )</h1>...</div><div id=\"excluded-sec-getvalue\"><h1><span class=\"secnum\">6.2.4.8</span>#sec-getvalue GetValue ( V )</h1>...</div><div id=\"excluded-sec-putvalue\"><h1><span class=\"secnum\">6.2.4.9</span>#sec-putvalue PutValue ( V, W )</h1>...</div><div id=\"excluded-sec-getthisvalue\"><h1><span class=\"secnum\">6.2.4.10</span>#sec-getthisvalue GetThisValue ( V )</h1>...</div><div id=\"excluded-sec-initializereferencedbinding\"><h1><span class=\"secnum\">6.2.4.11</span>#sec-initializereferencedbinding InitializeReferencedBinding ( V, W )</h1>...</div></emu-clause>\n\n    "}, "sec-strict-mode-of-ecmascript": {"num": "C", "title": "#sec-strict-mode-of-ecmascript The Strict Mode of EMAScript", "html": "<emu-annex id=\"sec-strict-mode-of-ecmascript\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-of-ecmascript\">#sec-strict-mode-of-ecmascript</span> The Strict Mode of ECMAScript</h1>\n  <p><b>The strict mode restriction and exceptions</b></p>\n  <ul>\n    <li>\n      <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code> are reserved words within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. (<emu-xref href=\"#sec-reserved-words\"><a href=\"#sec-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-reserved-words\">#sec-reserved-words</a></emu-xref>).\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include <emu-nt>LegacyOctalIntegerLiteral</emu-nt>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include <emu-nt>NonOctalDecimalIntegerLiteral</emu-nt>.\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, may not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-nt>LegacyOctalEscapeSequence</emu-nt> as described in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n    \n    </li>\n    <li>\n      Assignment to an undeclared identifier or otherwise unresolvable reference does not create a property in the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. When a simple assignment occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, its <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> must not evaluate to an unresolvable <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>. If it does a <emu-val>ReferenceError</emu-val> exception is thrown (<emu-xref href=\"#sec-putvalue\"><a href=\"#sec-putvalue\" class=\"excluded-xref\" excluded-id=\"sec-putvalue\">#sec-putvalue</a></emu-xref>). The <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> also may not be a reference to a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> with the attribute value { [[Writable]]: <emu-val>false</emu-val> }, to an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with the attribute value { [[Set]]: <emu-val>undefined</emu-val> }, nor to a non-existent property of an object whose [[Extensible]] internal slot has the value <emu-val>false</emu-val>. In these cases a <code>TypeError</code> exception is thrown (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>).\n    \n    </li>\n    <li>\n      An <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> with the StringValue <code>\"eval\"</code> or <code>\"arguments\"</code> may not appear as the <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> of an Assignment operator (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>) or of an <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt> (<emu-xref href=\"#sec-update-expressions\"><a href=\"#sec-update-expressions\" class=\"excluded-xref\" excluded-id=\"sec-update-expressions\">#sec-update-expressions</a></emu-xref>) or as the <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> operated upon by a Prefix Increment (<emu-xref href=\"#sec-prefix-increment-operator\"><a href=\"#sec-prefix-increment-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-increment-operator\">#sec-prefix-increment-operator</a></emu-xref>) or a Prefix Decrement (<emu-xref href=\"#sec-prefix-decrement-operator\"><a href=\"#sec-prefix-decrement-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-decrement-operator\">#sec-prefix-decrement-operator</a></emu-xref>) operator.\n    \n    </li>\n    <li>\n      Arguments objects for strict functions define a non-configurable <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> <code>\"callee\"</code> which throws a <emu-val>TypeError</emu-val> exception on access (<emu-xref href=\"#sec-createunmappedargumentsobject\"><a href=\"#sec-createunmappedargumentsobject\" class=\"excluded-xref\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</a></emu-xref>).\n    \n    </li>\n    <li>\n      Arguments objects for strict functions do not dynamically share their  <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property values with the corresponding formal parameter bindings of their functions. (<emu-xref href=\"#sec-arguments-exotic-objects\"><a href=\"#sec-arguments-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects\">#sec-arguments-exotic-objects</a></emu-xref>).\n    \n    </li>\n    <li>\n      For strict functions, if an arguments object is created the binding of the local identifier <code>arguments</code> to the arguments object is immutable and hence may not be the target of an assignment expression. (<emu-xref href=\"#sec-functiondeclarationinstantiation\"><a href=\"#sec-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the StringValue of a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <code>\"eval\"</code> or <code>\"arguments\"</code> within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      Strict mode eval code cannot instantiate variables or functions in the variable environment of the caller to eval. Instead, a new variable environment is created and that environment is used for declaration binding instantiation for the eval code (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>).\n    \n    </li>\n    <li>\n      If <emu-val>this</emu-val> is evaluated within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, then the <emu-val>this</emu-val> value is not coerced to an object. A <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is not converted to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> and primitive values are not converted to wrapper objects. The <emu-val>this</emu-val> value passed via a function call (including calls made using <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>) do not coerce the passed <emu-val>this</emu-val> value to an object (<emu-xref href=\"#sec-ordinarycallbindthis\"><a href=\"#sec-ordinarycallbindthis\" class=\"excluded-xref\" excluded-id=\"sec-ordinarycallbindthis\">#sec-ordinarycallbindthis</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.apply\"><a href=\"#sec-function.prototype.apply\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.apply\">#sec-function.prototype.apply</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.call\"><a href=\"#sec-function.prototype.call\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.call\">#sec-function.prototype.call</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name (<emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>TypeError</emu-val> is thrown if the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (<emu-xref href=\"#sec-delete-operator-runtime-semantics-evaluation\"><a href=\"#sec-delete-operator-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</a></emu-xref>).\n    \n    </li>\n    <li>\n      <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">Strict mode code</a></emu-xref> may not include a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt>. The occurrence of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> in such a context is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-with-statement-static-semantics-early-errors\"><a href=\"#sec-with-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-static-semantics-early-errors\">#sec-with-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if a <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and BoundNames of <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> contains either <code>eval</code> or <code>arguments</code> (<emu-xref href=\"#sec-try-statement-static-semantics-early-errors\"><a href=\"#sec-try-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-static-semantics-early-errors\">#sec-try-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> appears more than once in the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>. An attempt to create such a function using a <code>Function</code>, <code>Generator</code>, or <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-function-definitions-static-semantics-early-errors\"><a href=\"#sec-function-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-createdynamicfunction\"><a href=\"#sec-createdynamicfunction\" class=\"excluded-xref\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</a></emu-xref>).\n    \n    </li>\n    <li>\n      An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named <code>\"caller\"</code> or <code>\"arguments\"</code> of function instances.\n    \n    </li>\n  </ul>\n</emu-annex>\n\n"}, "sec-names-and-keywords": {"num": "11.6", "title": "#sec-names-and-keywords Names and Keywords", "html": "<emu-clause id=\"sec-names-and-keywords\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-names-and-keywords\">#sec-names-and-keywords</span> Names and Keywords</h1>\n    <p><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> and <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> are tokens that are interpreted according to the Default Identifier Syntax given in Unicode Standard Annex #31, Identifier and Pattern Syntax, with some small modifications. <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> is an enumerated subset of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. The syntactic grammar defines <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> as an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that is not a <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt>. The Unicode identifier grammar is based on character properties specified by the Unicode Standard. The Unicode code points in the specified categories in the latest version of the Unicode standard must be treated as in those categories by all conforming ECMAScript implementations. ECMAScript implementations may recognize identifier code points defined in later editions of the Unicode Standard.</p>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>This standard specifies specific code point additions: U+0024 (DOLLAR SIGN) and U+005F (LOW LINE) are permitted anywhere in an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>, and the code points U+200C (ZERO WIDTH NON-JOINER) and U+200D (ZERO WIDTH JOINER) are permitted anywhere after the first code point of an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</p>\n    </div></emu-note>\n    <p>Unicode escape sequences are permitted in an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>, where they contribute a single Unicode code point to the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. The code point is expressed by the <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt> of the <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> (see  <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>). The <code>\\</code> preceding the <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> and the <code>u</code> and <code>{ }</code> code units, if they appear, do not contribute code points to the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. A <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> cannot be used to put a code point into an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that would otherwise be illegal. In other words, if a <code>\\</code> <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> sequence were replaced by the <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> it contributes, the result must still be a valid <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that has the exact same sequence of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> elements as the original <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. All interpretations of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> within this specification are based upon their actual code points regardless of whether or not an escape sequence was used to contribute any particular code point.</p>\n    <p>Two <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>s that are canonically equivalent according to the Unicode standard are  <em>not</em> equal unless, after replacement of each <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt>, they are represented by the exact same sequence of code points.</p>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"IdentifierName\" type=\"lexical\" id=\"prod-IdentifierName\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"434685ab\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"700c1cee\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"IdentifierStart\" type=\"lexical\" id=\"prod-IdentifierStart\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"IdentifierPart\" type=\"lexical\" id=\"prod-IdentifierPart\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeIDStart\" type=\"lexical\" id=\"prod-UnicodeIDStart\">\n    <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e41f30c8\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Start&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeIDContinue\" type=\"lexical\" id=\"prod-UnicodeIDContinue\">\n    <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"db14546f\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Continue&#8221;</emu-gprose></emu-rhs>\n</emu-production></emu-grammar>\n    <p>The definitions of the nonterminal <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> is given in  <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>.</p>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The nonterminal <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt> derives <code>_</code> via <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt>.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>The sets of code points with Unicode properties &#8220;ID_Start&#8221; and &#8220;ID_Continue&#8221; include, respectively, the code points with Unicode properties &#8220;Other_ID_Start&#8221; and &#8220;Other_ID_Continue&#8221;.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-identifier-names\"><h1><span class=\"secnum\">11.6.1</span>#sec-identifier-names Identifier Names</h1>...</div><div id=\"excluded-sec-reserved-words\"><h1><span class=\"secnum\">11.6.2</span>#sec-reserved-words Reserved Words</h1>...</div></emu-clause>\n\n  "}, "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions": {"num": "E", "title": "#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions Additions and Changes That Introduce Incompatibilities with Prior ditions", "html": "<emu-annex id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions</span> Additions and Changes That Introduce Incompatibilities with Prior Editions</h1>\n  <p><emu-xref href=\"#sec-tonumber-applied-to-the-string-type\"><a href=\"#sec-tonumber-applied-to-the-string-type\" class=\"excluded-xref\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</a></emu-xref>: In ECMAScript 2015, <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to a String value now recognizes and converts <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> and <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> numeric strings. In previous editions such strings were converted to <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\" class=\"excluded-xref\" excluded-id=\"sec-reference-specification-type\">#sec-reference-specification-type</a></emu-xref>: In ECMAScript 2015, Function calls are not allowed to return a <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref> value.</p>\n  <p><emu-xref href=\"#sec-names-and-keywords\"><a href=\"#sec-names-and-keywords\" class=\"excluded-xref\" excluded-id=\"sec-names-and-keywords\">#sec-names-and-keywords</a></emu-xref>: In ECMAScript 2015, the valid code points for an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are specified in terms of the Unicode properties &#8220;ID_Start&#8221; and &#8220;ID_Continue&#8221;. In previous editions, the valid <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> or <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> code points were specified by enumerating various Unicode code point categories.</p>\n  <p><emu-xref href=\"#sec-rules-of-automatic-semicolon-insertion\"><a href=\"#sec-rules-of-automatic-semicolon-insertion\" class=\"excluded-xref\" excluded-id=\"sec-rules-of-automatic-semicolon-insertion\">#sec-rules-of-automatic-semicolon-insertion</a></emu-xref>: In ECMAScript 2015, Automatic Semicolon Insertion adds a semicolon at the end of a do-while statement if the semicolon is missing. This change aligns the specification with the actual behaviour of most existing implementations.</p>\n  <p><emu-xref href=\"#sec-object-initializer-static-semantics-early-errors\"><a href=\"#sec-object-initializer-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-static-semantics-early-errors\">#sec-object-initializer-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, it is no longer an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> to have duplicate property names in Object Initializers.</p>\n  <p><emu-xref href=\"#sec-assignment-operators-static-semantics-early-errors\"><a href=\"#sec-assignment-operators-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators-static-semantics-early-errors\">#sec-assignment-operators-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> containing an assignment to an immutable binding such as the function name of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> does not produce an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref>. Instead it produces a runtime error.</p>\n  <p><emu-xref href=\"#sec-block\"><a href=\"#sec-block\" class=\"excluded-xref\" excluded-id=\"sec-block\">#sec-block</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> beginning with the token let followed by the input elements <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> then <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions, automatic semicolon insertion would always insert a semicolon before the <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> input element.</p>\n  <p><emu-xref href=\"#sec-expression-statement\"><a href=\"#sec-expression-statement\" class=\"excluded-xref\" excluded-id=\"sec-expression-statement\">#sec-expression-statement</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt> beginning with the token <code>let</code> followed by the token <code>[</code> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a sequence would be the start of an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-if-statement-runtime-semantics-evaluation\"><a href=\"#sec-if-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-if-statement-runtime-semantics-evaluation\">#sec-if-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of an <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If no <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part is evaluated or if the evaluated <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the <code>(</code> token of a for statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the ( token of a for-in statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: Prior to ECMAScript 2015, an initialization expression could appear as part of the <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> that precedes the <code>in</code> keyword. In ECMAScript 2015, the <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt> in that same position does not allow the occurrence of such an initializer. In ECMAScript 2017, such an initializer is permitted only in <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, the completion value of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is not evaluated or if the final evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-with-statement-runtime-semantics-evaluation\"><a href=\"#sec-with-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-runtime-semantics-evaluation\">#sec-with-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-switch-statement-runtime-semantics-evaluation\"><a href=\"#sec-switch-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-switch-statement-runtime-semantics-evaluation\">#sec-switch-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt> part of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>: In ECMAScript 2015, it is an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> for a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause to contain a <code>var</code> declaration for the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter. In previous editions, such a variable declaration would be instantiated in the enclosing variable environment but the declaration's <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> value would be assigned to the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>,  <emu-xref href=\"#sec-evaldeclarationinstantiation\"><a href=\"#sec-evaldeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-evaldeclarationinstantiation\">#sec-evaldeclarationinstantiation</a></emu-xref>: In ECMAScript 2015, a runtime <emu-val>SyntaxError</emu-val> is thrown if a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause evaluates a non-strict direct <code>eval</code> whose eval code includes a <code>var</code> or <code>FunctionDeclaration</code> declaration that binds the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement-runtime-semantics-evaluation\"><a href=\"#sec-try-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-runtime-semantics-evaluation\">#sec-try-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a throw completion and it has a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> part that evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val> if there is no <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause or if its <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause evaluates to an <emu-const>empty</emu-const> normal completion.</p>\n  <p><emu-xref href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\"><a href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation\">#sec-method-definitions-runtime-semantics-propertydefinitionevaluation</a></emu-xref> In ECMAScript 2015, the function objects that are created as the values of the [[Get]] or [[Set]] attribute of accessor properties in an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> are not <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> functions and they do not have a <code>\"prototype\"</code> own property. In the previous edition, they were constructors and had a <code>\"prototype\"</code> property.</p>\n  <p><emu-xref href=\"#sec-object.freeze\"><a href=\"#sec-object.freeze\" class=\"excluded-xref\" excluded-id=\"sec-object.freeze\">#sec-object.freeze</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.freeze</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertydescriptor\"><a href=\"#sec-object.getownpropertydescriptor\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertydescriptor\">#sec-object.getownpropertydescriptor</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyDescriptor</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertynames\"><a href=\"#sec-object.getownpropertynames\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertynames\">#sec-object.getownpropertynames</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyNames</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getprototypeof\"><a href=\"#sec-object.getprototypeof\" class=\"excluded-xref\" excluded-id=\"sec-object.getprototypeof\">#sec-object.getprototypeof</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getPrototypeOf</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isextensible\"><a href=\"#sec-object.isextensible\" class=\"excluded-xref\" excluded-id=\"sec-object.isextensible\">#sec-object.isextensible</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isExtensible</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isfrozen\"><a href=\"#sec-object.isfrozen\" class=\"excluded-xref\" excluded-id=\"sec-object.isfrozen\">#sec-object.isfrozen</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isFrozen</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.issealed\"><a href=\"#sec-object.issealed\" class=\"excluded-xref\" excluded-id=\"sec-object.issealed\">#sec-object.issealed</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isSealed</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.keys\"><a href=\"#sec-object.keys\" class=\"excluded-xref\" excluded-id=\"sec-object.keys\">#sec-object.keys</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.keys</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.preventextensions\"><a href=\"#sec-object.preventextensions\" class=\"excluded-xref\" excluded-id=\"sec-object.preventextensions\">#sec-object.preventextensions</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.preventExtensions</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.seal\"><a href=\"#sec-object.seal\" class=\"excluded-xref\" excluded-id=\"sec-object.seal\">#sec-object.seal</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.seal</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-function.prototype.bind\"><a href=\"#sec-function.prototype.bind\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref> is set to the [[GetPrototypeOf]] value of its target function. In the previous edition, [[Prototype]] was always set to <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-function-instances-length\"><a href=\"#sec-function-instances-length\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-length\">#sec-function-instances-length</a></emu-xref>: In ECMAScript 2015, the <code>\"length\"</code> property of function instances is configurable. In previous editions it was non-configurable.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-nativeerror-constructors\"><a href=\"#sec-properties-of-the-nativeerror-constructors\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-nativeerror-constructors\">#sec-properties-of-the-nativeerror-constructors</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. In previous editions it was the Function prototype object.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</a></emu-xref> In ECMAScript 2015, the Date prototype object is not a Date instance. In previous editions it was a Date instance whose TimeValue was <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-string.prototype.localecompare\"><a href=\"#sec-string.prototype.localecompare\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.localecompare\">#sec-string.prototype.localecompare</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.localeCompare</code> function must treat Strings that are canonically equivalent according to the Unicode standard as being identical. In previous editions implementations were permitted to ignore canonical equivalence and could instead use a bit-wise comparison.</p>\n  <p><emu-xref href=\"#sec-string.prototype.tolowercase\"><a href=\"#sec-string.prototype.tolowercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.tolowercase\">#sec-string.prototype.tolowercase</a></emu-xref> and  <emu-xref href=\"#sec-string.prototype.touppercase\"><a href=\"#sec-string.prototype.touppercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.touppercase\">#sec-string.prototype.touppercase</a></emu-xref> In ECMAScript 2015, lowercase/upper conversion processing operates on code points. In previous editions such the conversion processing was only applied to individual code units. The only affected code points are those in the Deseret block of Unicode.</p>\n  <p><emu-xref href=\"#sec-string.prototype.trim\"><a href=\"#sec-string.prototype.trim\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.trim\">#sec-string.prototype.trim</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.trim</code> method is defined to recognize white space code points that may exists outside of the Unicode BMP. However, as of Unicode 7 no such code points are defined. In previous editions such code points would not have been recognized as white space.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref> In ECMAScript 2015, If the <var>pattern</var> argument is a RegExp instance and the <var>flags</var> argument is not <emu-val>undefined</emu-val>, a new RegExp instance is created just like <var>pattern</var> except that <var>pattern</var>'s flags are replaced by the argument <var>flags</var>. In previous editions a <emu-val>TypeError</emu-val> exception was thrown when <var>pattern</var> was a RegExp instance and <var>flags</var> was not <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, the RegExp prototype object is not a RegExp instance. In previous editions it was a RegExp instance whose pattern is the empty string.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, <code>\"source\"</code>, <code>\"global\"</code>, <code>\"ignoreCase\"</code>, and <code>\"multiline\"</code> are accessor properties defined on the RegExp prototype object. In previous editions they were data properties defined on RegExp instances.</p>\n</emu-annex>\n"}, "sec-conformance": {"num": "2", "title": "#sec-conformance Conformance", "html": "<emu-clause id=\"sec-conformance\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-conformance\">#sec-conformance</span> Conformance</h1>\n  <p>A conforming implementation of ECMAScript must provide and support all the types, values, objects, properties, functions, and program syntax and semantics described in this specification.</p>\n  <p>A conforming implementation of ECMAScript must interpret source text input in conformance with the latest version of the Unicode Standard and ISO/IEC 10646.</p>\n  <p>A conforming implementation of ECMAScript that provides an application programming interface (API) that supports programs that need to adapt to the linguistic and cultural conventions used by different human languages and countries must implement the interface defined by the most recent edition of ECMA-402 that is compatible with this specification.</p>\n  <p>A conforming implementation of ECMAScript may provide additional types, values, objects, properties, and functions beyond those described in this specification. In particular, a conforming implementation of ECMAScript may provide properties not described in this specification, and values for those properties, for objects that are described in this specification.</p>\n  <p>A conforming implementation of ECMAScript may support program and regular expression syntax not described in this specification. In particular, a conforming implementation of ECMAScript may support program syntax that makes use of the &#8220;future reserved words&#8221; listed in subclause  <emu-xref href=\"#sec-future-reserved-words\"><a href=\"#sec-future-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-future-reserved-words\">#sec-future-reserved-words</a></emu-xref> of this specification.</p>\n  <p>A conforming implementation of ECMAScript must not implement any extension that is listed as a Forbidden Extension in subclause  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>.</p>\n</emu-clause>\n\n"}, "sec-resolvethisbinding": {"num": "8.3.4", "title": "#sec-resolvethisbinding ResolveThisBinding ( )", "html": "<emu-clause id=\"sec-resolvethisbinding\" aoid=\"ResolveThisBinding\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-resolvethisbinding\">#sec-resolvethisbinding</span> ResolveThisBinding ( )</h1>\n      <p>The abstract operation ResolveThisBinding determines the binding of the keyword <code>this</code> using the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. ResolveThisBinding performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>envRec</var> be <emu-xref aoid=\"GetThisEnvironment\"><a href=\"#sec-getthisenvironment\">GetThisEnvironment</a></emu-xref>().</li><li>Return ? <var>envRec</var>.GetThisBinding().\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-getthisenvironment": {"num": "8.3.3", "title": "#sec-getthisenvironment GetThisEnvironment ( )", "html": "<emu-clause id=\"sec-getthisenvironment\" aoid=\"GetThisEnvironment\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getthisenvironment\">#sec-getthisenvironment</span> GetThisEnvironment ( )</h1>\n      <p>The abstract operation GetThisEnvironment finds the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that currently supplies the binding of the keyword <code>this</code>. GetThisEnvironment performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>lex</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Repeat,<ol><li>Let <var>envRec</var> be <var>lex</var>'s <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">EnvironmentRecord</a></emu-xref>.</li><li>Let <var>exists</var> be <var>envRec</var>.HasThisBinding().</li><li>If <var>exists</var> is <emu-val>true</emu-val>, return <var>envRec</var>.</li><li>Let <var>outer</var> be the value of <var>lex</var>'s outer environment reference.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>outer</var> is not <emu-val>null</emu-val>.</li><li>Set <var>lex</var> to <var>outer</var>.\n      </li></ol></li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The loop in step 2 will always terminate because the list of environments always ends with the <emu-xref href=\"#global-environment\"><a href=\"#global-environment\">global environment</a></emu-xref> which has a <code>this</code> binding.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-grammar-notation", "sec-identifiers-runtime-semantics-evaluation", "sec-lexical-grammar", "sec-async-function-definitions", "sec-reference-specification-type", "sec-strict-mode-of-ecmascript", "sec-names-and-keywords", "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions", "sec-conformance", "sec-resolvethisbinding", "sec-getthisenvironment"], "secData": {"sec-grammar-notation": {"num": "5.1.5", "title": "#sec-grammar-notation Grammar Notation", "html": "<emu-clause id=\"sec-grammar-notation\" namespace=\"grammar-notation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-grammar-notation\">#sec-grammar-notation</span> Grammar Notation</h1>\n      <p>Terminal symbols are shown in <code>fixed width</code> font, both in the productions of the grammars and throughout this specification whenever the text directly refers to such a terminal symbol. These are to appear in a script exactly as written. All terminal symbol code points specified in this way are to be understood as the appropriate Unicode code points from the Basic Latin range, as opposed to any similar-looking code points from other Unicode ranges. A code point in a terminal symbol cannot be expressed by a <code>\\</code> <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt>.</p>\n      <p>Nonterminal symbols are shown in  <i>italic</i> type. The definition of a nonterminal (also called a &#8220;production&#8221;) is introduced by the name of the nonterminal being defined followed by one or more colons. (The number of colons indicates to which grammar the production belongs.) One or more alternative right-hand sides for the nonterminal then follow on succeeding lines. For example, the syntactic definition:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"WhileStatement\" id=\"prod-grammar-notation-WhileStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-WhileStatement\">WhileStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f7627bf3\"><emu-t>while</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>states that the nonterminal <emu-nt><a href=\"#prod-grammar-notation-WhileStatement\">WhileStatement</a></emu-nt> represents the token <code>while</code>, followed by a left parenthesis token, followed by an <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>, followed by a right parenthesis token, followed by a <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>. The occurrences of <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> and <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> are themselves nonterminals. As another example, the syntactic definition:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"ArgumentList\" id=\"prod-grammar-notation-ArgumentList\">\n    <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d4fc7da4\"><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7ff23fee\"><emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>states that an <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt> may represent either a single <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> or an <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt>, followed by a comma, followed by an <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>. This definition of <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt> is recursive, that is, it is defined in terms of itself. The result is that an <emu-nt><a href=\"#prod-grammar-notation-ArgumentList\">ArgumentList</a></emu-nt> may contain any positive number of arguments, separated by commas, where each argument expression is an <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>. Such recursive definitions of nonterminals are common.</p>\n      <p>The subscripted suffix &#8220;<sub>opt</sub>&#8221;, which may appear after a terminal or nonterminal, indicates an optional symbol. The alternative containing the optional symbol actually specifies two right-hand sides, one that omits the optional element and one that includes it. This means that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\" id=\"prod-grammar-notation-VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0b9344a8\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"89becb83\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"IterationStatement\" id=\"prod-grammar-notation-IterationStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"93c07e45\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>;</emu-t><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"180d57b5\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-t>;</emu-t><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"0acd6093\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t><emu-nt optional=\"\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>which in turn is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"00273dd7\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-t>;</emu-t><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d4b04297\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-t>;</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e8d15924\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7f2cbdb0\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>so, in this example, the nonterminal <emu-nt><a href=\"#prod-grammar-notation-IterationStatement\">IterationStatement</a></emu-nt> actually has four alternative right-hand sides.</p>\n      <p>A production may be parameterized by a subscripted annotation of the form &#8220;<sub>[parameters]</sub>&#8221;, which may appear as a suffix to the nonterminal symbol defined by the production. &#8220;<sub>parameters</sub>&#8221; may be either a single name or a comma separated list of names. A parameterized production is shorthand for a set of productions defining all combinations of the parameter names, preceded by an underscore, appended to the parameterized nonterminal symbol. This means that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return\" id=\"prod-grammar-notation-StatementList\">\n    <emu-nt params=\"Return\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\" id=\"prod-grammar-notation-StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return, In\">\n    <emu-nt params=\"Return, In\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return, In]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_In\" id=\"prod-grammar-notation-StatementList_In\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_In\">StatementList_In</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return_In\" id=\"prod-grammar-notation-StatementList_Return_In\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return_In\">StatementList_Return_In</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>Multiple parameters produce a combinatory number of productions, not all of which are necessarily referenced in a complete grammar.</p>\n      <p>References to nonterminals on the right-hand side of a production can also be parameterized. For example:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"abb21bdc\"><emu-nt params=\"+In\"><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a><emu-mods><emu-params>[+In]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is equivalent to saying:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"93a8206f\"><emu-nt>ExpressionStatement_In</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"70147e05\"><emu-nt params=\"~In\"><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a><emu-mods><emu-params>[~In]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is equivalent to:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>A nonterminal reference may have both a parameter list and an &#8220;<sub>opt</sub>&#8221; suffix. For example:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"363e22bb\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt params=\"+In\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"693077fa\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt>Initializer_In</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>Prefixing a parameter name with &#8220;<sub>?</sub>&#8221; on a right-hand side nonterminal reference makes that parameter value dependent upon the occurrence of the parameter name on the reference to the current production's left-hand side symbol. For example:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\" params=\"In\">\n    <emu-nt params=\"In\"><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dde5478d\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt params=\"?In\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"VariableDeclaration\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration\">VariableDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89becb83\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"VariableDeclaration_In\" id=\"prod-grammar-notation-VariableDeclaration_In\">\n    <emu-nt><a href=\"#prod-grammar-notation-VariableDeclaration_In\">VariableDeclaration_In</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"693077fa\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt>Initializer_In</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>If a right-hand side alternative is prefixed with &#8220;[+parameter]&#8221; that alternative is only available if the named parameter was used in referencing the production's nonterminal symbol. If a right-hand side alternative is prefixed with &#8220;[~parameter]&#8221; that alternative is only available if the named parameter was  <em>not</em> used in referencing the production's nonterminal symbol. This means that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return\">\n    <emu-nt params=\"Return\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a712bea8\" constraints=\"+Return\"><emu-constraints>[+Return]</emu-constraints><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>and that:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\" params=\"Return\">\n    <emu-nt params=\"Return\"><a href=\"#prod-grammar-notation-StatementList\">StatementList</a><emu-mods><emu-params>[Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9abebc34\" constraints=\"~Return\"><emu-constraints>[~Return]</emu-constraints><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>is an abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"StatementList\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"aa6f7913\"><emu-nt><a href=\"#prod-ReturnStatement\">ReturnStatement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StatementList_Return\">\n    <emu-nt><a href=\"#prod-grammar-notation-StatementList_Return\">StatementList_Return</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82c424b7\"><emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>When the words &#8220;<b>one of</b>&#8221; follow the colon(s) in a grammar definition, they signify that each of the terminal symbols on the following line or lines is an alternative definition. For example, the lexical grammar for ECMAScript contains the production:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\" id=\"prod-grammar-notation-NonZeroDigit\">\n    <emu-nt><a href=\"#prod-grammar-notation-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>which is merely a convenient abbreviation for:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"NonZeroDigit\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-grammar-notation-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n    <emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n    <emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n    <emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n    <emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n    <emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n    <emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n    <emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n    <emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>If the phrase &#8220;[empty]&#8221; appears as the right-hand side of a production, it indicates that the production's right-hand side contains no terminals or nonterminals.</p>\n      <p>If the phrase &#8220;[lookahead &#8713; <var>set</var>]&#8221; appears in the right-hand side of a production, it indicates that the production may not be used if the immediately following input token sequence is a member of the given <var>set</var>. The <var>set</var> can be written as a comma separated list of one or two element terminal sequences enclosed in curly brackets. For convenience, the set can also be written as a nonterminal, in which case it represents the set of all terminals to which that nonterminal could expand. If the <var>set</var> consists of a single terminal the phrase &#8220;[lookahead &#8800; <var>terminal</var>]&#8221; may be used.</p>\n      <p>For example, given the definitions:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-grammar-notation-DecimalDigit\">\n    <emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalDigits\" type=\"lexical\" id=\"prod-grammar-notation-DecimalDigits\">\n    <emu-nt><a href=\"#prod-grammar-notation-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-grammar-notation-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>the definition:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"LookaheadExample\" type=\"lexical\" id=\"prod-grammar-notation-LookaheadExample\">\n    <emu-nt><a href=\"#prod-grammar-notation-LookaheadExample\">LookaheadExample</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e21e12ce\"><emu-t>n</emu-t><emu-gann>[lookahead &#8713; { <emu-t>1</emu-t>, <emu-t>3</emu-t>, <emu-t>5</emu-t>, <emu-t>7</emu-t>, <emu-t>9</emu-t> }]</emu-gann><emu-nt><a href=\"#prod-grammar-notation-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"195cbc6c\"><emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-grammar-notation-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n      <p>matches either the letter <code>n</code> followed by one or more decimal digits the first of which is even, or a decimal digit not followed by another decimal digit.</p>\n      <p>Similarly, if the phrase &#8220;[lookahead &#8712; <var>set</var>]&#8221; appears in the right-hand side of a production, it indicates that the production may only be used if the immediately following input token sequence is a member of the given <var>set</var>. If the <var>set</var> consists of a single terminal the phrase &#8220;[lookahead = <var>terminal</var>]&#8221; may be used.</p>\n      <p>If the phrase &#8220;[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]&#8221; appears in the right-hand side of a production of the syntactic grammar, it indicates that the production is  <em>a restricted production</em>: it may not be used if a <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> occurs in the input stream at the indicated position. For example, the production:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"ThrowStatement\" id=\"prod-grammar-notation-ThrowStatement\">\n    <emu-nt><a href=\"#prod-grammar-notation-ThrowStatement\">ThrowStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ff4ec866\"><emu-t>throw</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>indicates that the production may not be used if a <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> occurs in the script between the <code>throw</code> token and the <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</p>\n      <p>Unless the presence of a <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> is forbidden by a restricted production, any number of occurrences of <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> may appear between any two consecutive tokens in the stream of input elements without affecting the syntactic acceptability of the script.</p>\n      <p>When an alternative in a production of the lexical grammar or the numeric string grammar appears to be a multi-code point token, it represents the sequence of code points that would make up such a token.</p>\n      <p>The right-hand side of a production may specify that certain expansions are not permitted by using the phrase &#8220;<b>but not</b>&#8221; and then indicating the expansions to be excluded. For example, the production:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"Identifier\" type=\"lexical\" id=\"prod-grammar-notation-Identifier\">\n    <emu-nt><a href=\"#prod-grammar-notation-Identifier\">Identifier</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bfa5c374\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production></emu-grammar>\n      <p>means that the nonterminal <emu-nt><a href=\"#prod-grammar-notation-Identifier\">Identifier</a></emu-nt> may be replaced by any sequence of code points that could replace <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> provided that the same sequence of code points could not replace <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt>.</p>\n      <p>Finally, a few nonterminal symbols are described by a descriptive phrase in sans-serif type in cases where it would be impractical to list all the alternatives:</p>\n      <emu-grammar type=\"example\"><emu-production name=\"SourceCharacter\" type=\"lexical\" id=\"prod-grammar-notation-SourceCharacter\">\n    <emu-nt><a href=\"#prod-grammar-notation-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production></emu-grammar>\n    </emu-clause>\n  "}, "sec-identifiers-runtime-semantics-evaluation": {"num": "12.1.6", "title": "#sec-identifiers-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-identifiers-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-identifiers-runtime-semantics-evaluation\">#sec-identifiers-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06b6ace8\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(StringValue of <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d1df3360\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<code>\"yield\"</code>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"857d4354\"><emu-t>await</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<code>\"await\"</code>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>The result of evaluating an <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> is always a value of type <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>In <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>, the <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> <code>yield</code> may be used as an identifier. Evaluating the <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> resolves the binding of <code>yield</code> as if it was an <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>. Early Error restriction ensures that such an evaluation only can occur for <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-lexical-grammar": {"num": "A.1", "title": "#sec-lexical-grammar Lexical Grammar", "html": "<emu-annex id=\"sec-lexical-grammar\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lexical-grammar\">#sec-lexical-grammar</span> Lexical Grammar</h1>\n    <emu-production name=\"SourceCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementDiv\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementDiv\">InputElementDiv</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExp\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExp\">InputElementRegExp</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExpOrTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExpOrTemplateTail\">InputElementRegExpOrTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementTemplateTail\">InputElementTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"WhiteSpace\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"819ea3fd\"><emu-gprose>&lt;TAB&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"156dc7da\"><emu-gprose>&lt;VT&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"77b516c0\"><emu-gprose>&lt;FF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6a85afed\"><emu-gprose>&lt;SP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"63dd44af\"><emu-gprose>&lt;NBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"b09e901a\"><emu-gprose>&lt;ZWNBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"e7de22a4\"><emu-gprose>&lt;USP&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminatorSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"64077750\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gann>[lookahead &#8800; <emu-gprose>&lt;LF&gt;</emu-gprose>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"Comment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b221187a\"><emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"49272b29\"><emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1e164ceb\"><emu-t>/*</emu-t><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>*/</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"24a6effb\"><emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"PostAsteriskCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25615007\"><emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9452de17\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotForwardSlashOrAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1dd7e7ae\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>/</emu-t> or <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"53edd61c\"><emu-t>//</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4521d447\"><emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CommonToken\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ee18f3d6\"><emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3ec1ae06\"><emu-nt><a href=\"#prod-Template\">Template</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierName\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"434685ab\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"700c1cee\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e41f30c8\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Start&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDContinue\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"db14546f\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Continue&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"ReservedWord\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>await</emu-t><emu-t>break</emu-t><emu-t>case</emu-t><emu-t>catch</emu-t><emu-t>class</emu-t><emu-t>const</emu-t><emu-t>continue</emu-t><emu-t>debugger</emu-t><emu-t>default</emu-t><emu-t>delete</emu-t><emu-t>do</emu-t><emu-t>else</emu-t><emu-t>enum</emu-t><emu-t>export</emu-t><emu-t>extends</emu-t><emu-t>false</emu-t><emu-t>finally</emu-t><emu-t>for</emu-t><emu-t>function</emu-t><emu-t>if</emu-t><emu-t>import</emu-t><emu-t>in</emu-t><emu-t>instanceof</emu-t><emu-t>new</emu-t><emu-t>null</emu-t><emu-t>return</emu-t><emu-t>super</emu-t><emu-t>switch</emu-t><emu-t>this</emu-t><emu-t>throw</emu-t><emu-t>true</emu-t><emu-t>try</emu-t><emu-t>typeof</emu-t><emu-t>var</emu-t><emu-t>void</emu-t><emu-t>while</emu-t><emu-t>with</emu-t><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"Punctuator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>{</emu-t><emu-t>(</emu-t><emu-t>)</emu-t><emu-t>[</emu-t><emu-t>]</emu-t><emu-t>.</emu-t><emu-t>...</emu-t><emu-t>;</emu-t><emu-t>,</emu-t><emu-t>&lt;</emu-t><emu-t>&gt;</emu-t><emu-t>&lt;=</emu-t><emu-t>&gt;=</emu-t><emu-t>==</emu-t><emu-t>!=</emu-t><emu-t>===</emu-t><emu-t>!==</emu-t><emu-t>+</emu-t><emu-t>-</emu-t><emu-t>*</emu-t><emu-t>%</emu-t><emu-t>**</emu-t><emu-t>++</emu-t><emu-t>--</emu-t><emu-t>&lt;&lt;</emu-t><emu-t>&gt;&gt;</emu-t><emu-t>&gt;&gt;&gt;</emu-t><emu-t>&amp;</emu-t><emu-t>|</emu-t><emu-t>^</emu-t><emu-t>!</emu-t><emu-t>~</emu-t><emu-t>&amp;&amp;</emu-t><emu-t>||</emu-t><emu-t>?</emu-t><emu-t>:</emu-t><emu-t>=</emu-t><emu-t>+=</emu-t><emu-t>-=</emu-t><emu-t>*=</emu-t><emu-t>%=</emu-t><emu-t>**=</emu-t><emu-t>&lt;&lt;=</emu-t><emu-t>&gt;&gt;=</emu-t><emu-t>&gt;&gt;&gt;=</emu-t><emu-t>&amp;=</emu-t><emu-t>|=</emu-t><emu-t>^=</emu-t><emu-t>=&gt;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DivPunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3fd5f53\"><emu-t>/</emu-t></emu-rhs>\n    <emu-rhs a=\"2e077fe3\"><emu-t>/=</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RightBracePunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"255cb7fd\"><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NullLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"77b50868\"><emu-t>null</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"BooleanLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fa30b8c6\"><emu-t>true</emu-t></emu-rhs>\n    <emu-rhs a=\"23d2c69d\"><emu-t>false</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NumericLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2727f17d\"><emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68def506\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ddee4872\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"27fc8843\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BigIntLiteralSuffix\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"14b11fb6\"><emu-t>n</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fb5198a6\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"13dbaf21\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"SignedInteger\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"StringLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8bdabc77\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"17d28457\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineContinuation\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"CharacterEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonEscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"Hex4Digits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5778053b\"><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBody\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bba7969e\"><emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a9881cec\"><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFirstChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"da1b0c0a\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0c3ff14\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBackslashSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d7656bad\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionNonTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClass\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c1bc40a\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"76bdcb05\"><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7fd10851\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\\</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFlags\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"fceefdcd\"><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Template\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Template\">Template</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ab9a4b96\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"056f5c6b\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateHead\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bfb172fc\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateSubstitutionTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ccbc035d\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateMiddle\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37635b4e\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fcef5bc0\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f8c26ac5\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"03c3b542\"><emu-t>$</emu-t><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"372f5e0d\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-gmod>but not <emu-t>0</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotCodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5aeddbfc\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &gt; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"deeeb60d\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#8804; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-async-function-definitions": {"num": "14.7", "title": "#sec-async-function-definitions Async Function Definitions", "html": "<emu-clause id=\"sec-async-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</span> Async Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncFunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-AsyncFunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f512250e\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"fef042b8\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" id=\"prod-AsyncFunctionExpression\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c25b1d19\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"be6457e0\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-t>function</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncMethod\" params=\"Yield, Await\" id=\"prod-AsyncMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a922691e\"><emu-t>async</emu-t><emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionBody\" id=\"prod-AsyncFunctionBody\">\n    <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8ff4dc7c\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"AwaitExpression\" params=\"Yield\" id=\"prod-AwaitExpression\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AwaitExpression\">AwaitExpression</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c19c56e7\"><emu-t>await</emu-t><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p><code>await</code> is parsed as an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> when the  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is present. The  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is present in the following contexts:</p>\n      <ul>\n        <li>In an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>. <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> in this position is a Syntax error via <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref>.</li>\n      </ul>\n      <p>When <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> and the  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is absent, <code>await</code> is parsed as a <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> and will be a Syntax error. When <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>, <code>await</code> may be parsed as an identifier when the  <sub>[<emu-xref aoid=\"Await\"><a href=\"#await\">Await</a></emu-xref>]</sub> parameter is absent. This includes the following contexts:</p>\n      <ul>\n        <li>Anywhere outside of an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> or <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n      </ul>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>Unlike <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt>, it is a Syntax Error to omit the operand of an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt>. You must await something.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-async-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.7.1</span>#sec-async-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-BoundNames\"><h1><span class=\"secnum\">14.7.2</span>#sec-async-function-definitions-static-semantics-BoundNames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-ComputedPropertyContains\"><h1><span class=\"secnum\">14.7.3</span>#sec-async-function-definitions-static-semantics-ComputedPropertyContains Static Semantics: ComputedPropertyContains</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-Contains\"><h1><span class=\"secnum\">14.7.4</span>#sec-async-function-definitions-static-semantics-Contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-HasDirectSuper\"><h1><span class=\"secnum\">14.7.5</span>#sec-async-function-definitions-static-semantics-HasDirectSuper Static Semantics: HasDirectSuper</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-HasName\"><h1><span class=\"secnum\">14.7.6</span>#sec-async-function-definitions-static-semantics-HasName Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-IsConstantDeclaration\"><h1><span class=\"secnum\">14.7.7</span>#sec-async-function-definitions-static-semantics-IsConstantDeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-IsFunctionDefinition\"><h1><span class=\"secnum\">14.7.8</span>#sec-async-function-definitions-static-semantics-IsFunctionDefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-async-function-definitions-static-semantics-PropName\"><h1><span class=\"secnum\">14.7.9</span>#sec-async-function-definitions-static-semantics-PropName Static Semantics: PropName</h1>...</div><div id=\"excluded-sec-async-function-definitions-InstantiateFunctionObject\"><h1><span class=\"secnum\">14.7.10</span>#sec-async-function-definitions-InstantiateFunctionObject Runtime Semantics: InstantiateFunctionObject</h1>...</div><div id=\"excluded-sec-async-function-definitions-EvaluateBody\"><h1><span class=\"secnum\">14.7.11</span>#sec-async-function-definitions-EvaluateBody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-async-function-definitions-PropertyDefinitionEvaluation\"><h1><span class=\"secnum\">14.7.12</span>#sec-async-function-definitions-PropertyDefinitionEvaluation Runtime Semantics: PropertyDefinitionEvaluation</h1>...</div><div id=\"excluded-sec-async-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.7.13</span>#sec-async-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-async-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.7.14</span>#sec-async-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-reference-specification-type": {"num": "6.2.4", "title": "#sec-reference-specification-type The Reference Specification Type", "html": "<emu-clause id=\"sec-reference-specification-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reference-specification-type\">#sec-reference-specification-type</span> The Reference Specification Type</h1>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Reference type is used to explain the behaviour of such operators as <code>delete</code>, <code>typeof</code>, the assignment operators, the <code>super</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> and other language features. For example, the left-hand operand of an assignment is expected to produce a reference.</p>\n      </div></emu-note>\n      <p>A  <dfn>Reference</dfn> is a resolved name or property binding. A Reference consists of three components, the base value component, the referenced name component, and the Boolean-valued strict reference flag. The base value component is either <emu-val>undefined</emu-val>, an Object, a Boolean, a String, a Symbol, a Number, or an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. A base value component of <emu-val>undefined</emu-val> indicates that the Reference could not be resolved to a binding. The referenced name component is a String or Symbol value.</p>\n      <p>A  <dfn id=\"super-reference\">Super Reference</dfn> is a Reference that is used to represent a name binding that was expressed using the super <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref>. A <emu-xref href=\"#super-reference\"><a href=\"#super-reference\">Super Reference</a></emu-xref> has an additional thisValue component, and its base value component will never be an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</p>\n      <p>The following <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are used in this specification to operate on references:</p>\n\n      <div id=\"excluded-sec-getbase\"><h1><span class=\"secnum\">6.2.4.1</span>#sec-getbase GetBase ( V )</h1>...</div><div id=\"excluded-sec-getreferencedname\"><h1><span class=\"secnum\">6.2.4.2</span>#sec-getreferencedname GetReferencedName ( V )</h1>...</div><div id=\"excluded-sec-isstrictreference\"><h1><span class=\"secnum\">6.2.4.3</span>#sec-isstrictreference IsStrictReference ( V )</h1>...</div><div id=\"excluded-sec-hasprimitivebase\"><h1><span class=\"secnum\">6.2.4.4</span>#sec-hasprimitivebase HasPrimitiveBase ( V )</h1>...</div><div id=\"excluded-sec-ispropertyreference\"><h1><span class=\"secnum\">6.2.4.5</span>#sec-ispropertyreference IsPropertyReference ( V )</h1>...</div><div id=\"excluded-sec-isunresolvablereference\"><h1><span class=\"secnum\">6.2.4.6</span>#sec-isunresolvablereference IsUnresolvableReference ( V )</h1>...</div><div id=\"excluded-sec-issuperreference\"><h1><span class=\"secnum\">6.2.4.7</span>#sec-issuperreference IsSuperReference ( V )</h1>...</div><div id=\"excluded-sec-getvalue\"><h1><span class=\"secnum\">6.2.4.8</span>#sec-getvalue GetValue ( V )</h1>...</div><div id=\"excluded-sec-putvalue\"><h1><span class=\"secnum\">6.2.4.9</span>#sec-putvalue PutValue ( V, W )</h1>...</div><div id=\"excluded-sec-getthisvalue\"><h1><span class=\"secnum\">6.2.4.10</span>#sec-getthisvalue GetThisValue ( V )</h1>...</div><div id=\"excluded-sec-initializereferencedbinding\"><h1><span class=\"secnum\">6.2.4.11</span>#sec-initializereferencedbinding InitializeReferencedBinding ( V, W )</h1>...</div></emu-clause>\n\n    "}, "sec-strict-mode-of-ecmascript": {"num": "C", "title": "#sec-strict-mode-of-ecmascript The Strict Mode of EMAScript", "html": "<emu-annex id=\"sec-strict-mode-of-ecmascript\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-of-ecmascript\">#sec-strict-mode-of-ecmascript</span> The Strict Mode of ECMAScript</h1>\n  <p><b>The strict mode restriction and exceptions</b></p>\n  <ul>\n    <li>\n      <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code> are reserved words within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. (<emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-keywords-and-reserved-words\">#sec-keywords-and-reserved-words</a></emu-xref>).\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include <emu-nt>LegacyOctalIntegerLiteral</emu-nt>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include <emu-nt>NonOctalDecimalIntegerLiteral</emu-nt>.\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, may not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-nt>LegacyOctalEscapeSequence</emu-nt> as described in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n    \n    </li>\n    <li>\n      Assignment to an undeclared identifier or otherwise unresolvable reference does not create a property in the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. When a simple assignment occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, its <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> must not evaluate to an unresolvable <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>. If it does a <emu-val>ReferenceError</emu-val> exception is thrown (<emu-xref href=\"#sec-putvalue\"><a href=\"#sec-putvalue\" class=\"excluded-xref\" excluded-id=\"sec-putvalue\">#sec-putvalue</a></emu-xref>). The <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> also may not be a reference to a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> with the attribute value { [[Writable]]: <emu-val>false</emu-val> }, to an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with the attribute value { [[Set]]: <emu-val>undefined</emu-val> }, nor to a non-existent property of an object whose [[Extensible]] internal slot has the value <emu-val>false</emu-val>. In these cases a <code>TypeError</code> exception is thrown (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>).\n    \n    </li>\n    <li>\n      An <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> with the StringValue <code>\"eval\"</code> or <code>\"arguments\"</code> may not appear as the <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> of an Assignment operator (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>) or of an <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt> (<emu-xref href=\"#sec-update-expressions\"><a href=\"#sec-update-expressions\" class=\"excluded-xref\" excluded-id=\"sec-update-expressions\">#sec-update-expressions</a></emu-xref>) or as the <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> operated upon by a Prefix Increment (<emu-xref href=\"#sec-prefix-increment-operator\"><a href=\"#sec-prefix-increment-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-increment-operator\">#sec-prefix-increment-operator</a></emu-xref>) or a Prefix Decrement (<emu-xref href=\"#sec-prefix-decrement-operator\"><a href=\"#sec-prefix-decrement-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-decrement-operator\">#sec-prefix-decrement-operator</a></emu-xref>) operator.\n    \n    </li>\n    <li>\n      Arguments objects for strict functions define a non-configurable <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> <code>\"callee\"</code> which throws a <emu-val>TypeError</emu-val> exception on access (<emu-xref href=\"#sec-createunmappedargumentsobject\"><a href=\"#sec-createunmappedargumentsobject\" class=\"excluded-xref\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</a></emu-xref>).\n    \n    </li>\n    <li>\n      Arguments objects for strict functions do not dynamically share their  <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property values with the corresponding formal parameter bindings of their functions. (<emu-xref href=\"#sec-arguments-exotic-objects\"><a href=\"#sec-arguments-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects\">#sec-arguments-exotic-objects</a></emu-xref>).\n    \n    </li>\n    <li>\n      For strict functions, if an arguments object is created the binding of the local identifier <code>arguments</code> to the arguments object is immutable and hence may not be the target of an assignment expression. (<emu-xref href=\"#sec-functiondeclarationinstantiation\"><a href=\"#sec-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the StringValue of a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <code>\"eval\"</code> or <code>\"arguments\"</code> within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      Strict mode eval code cannot instantiate variables or functions in the variable environment of the caller to eval. Instead, a new variable environment is created and that environment is used for declaration binding instantiation for the eval code (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>).\n    \n    </li>\n    <li>\n      If <emu-val>this</emu-val> is evaluated within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, then the <emu-val>this</emu-val> value is not coerced to an object. A <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is not converted to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> and primitive values are not converted to wrapper objects. The <emu-val>this</emu-val> value passed via a function call (including calls made using <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>) do not coerce the passed <emu-val>this</emu-val> value to an object (<emu-xref href=\"#sec-ordinarycallbindthis\"><a href=\"#sec-ordinarycallbindthis\" class=\"excluded-xref\" excluded-id=\"sec-ordinarycallbindthis\">#sec-ordinarycallbindthis</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.apply\"><a href=\"#sec-function.prototype.apply\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.apply\">#sec-function.prototype.apply</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.call\"><a href=\"#sec-function.prototype.call\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.call\">#sec-function.prototype.call</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name (<emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>TypeError</emu-val> is thrown if the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (<emu-xref href=\"#sec-delete-operator-runtime-semantics-evaluation\"><a href=\"#sec-delete-operator-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</a></emu-xref>).\n    \n    </li>\n    <li>\n      <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">Strict mode code</a></emu-xref> may not include a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt>. The occurrence of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> in such a context is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-with-statement-static-semantics-early-errors\"><a href=\"#sec-with-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-static-semantics-early-errors\">#sec-with-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if a <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and BoundNames of <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> contains either <code>eval</code> or <code>arguments</code> (<emu-xref href=\"#sec-try-statement-static-semantics-early-errors\"><a href=\"#sec-try-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-static-semantics-early-errors\">#sec-try-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> appears more than once in the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>. An attempt to create such a function using a <code>Function</code>, <code>Generator</code>, or <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-function-definitions-static-semantics-early-errors\"><a href=\"#sec-function-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-createdynamicfunction\"><a href=\"#sec-createdynamicfunction\" class=\"excluded-xref\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</a></emu-xref>).\n    \n    </li>\n    <li>\n      An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named <code>\"caller\"</code> or <code>\"arguments\"</code> of function instances.\n    \n    </li>\n  </ul>\n</emu-annex>\n\n"}, "sec-names-and-keywords": {"num": "11.6", "title": "#sec-names-and-keywords Names and Keywords", "html": "<emu-clause id=\"sec-names-and-keywords\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-names-and-keywords\">#sec-names-and-keywords</span> Names and Keywords</h1>\n    <p><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> and <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> are tokens that are interpreted according to the Default Identifier Syntax given in Unicode Standard Annex #31, Identifier and Pattern Syntax, with some small modifications. <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> is an enumerated subset of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. The syntactic grammar defines <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> as an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that is not a <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt>. The Unicode identifier grammar is based on character properties specified by the Unicode Standard. The Unicode code points in the specified categories in the latest version of the Unicode standard must be treated as in those categories by all conforming ECMAScript implementations. ECMAScript implementations may recognize identifier code points defined in later editions of the Unicode Standard.</p>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>This standard specifies specific code point additions: U+0024 (DOLLAR SIGN) and U+005F (LOW LINE) are permitted anywhere in an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>, and the code points U+200C (ZERO WIDTH NON-JOINER) and U+200D (ZERO WIDTH JOINER) are permitted anywhere after the first code point of an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</p>\n    </div></emu-note>\n    <p>Unicode escape sequences are permitted in an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>, where they contribute a single Unicode code point to the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. The code point is expressed by the <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt> of the <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> (see  <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>). The <code>\\</code> preceding the <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> and the <code>u</code> and <code>{ }</code> code units, if they appear, do not contribute code points to the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. A <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> cannot be used to put a code point into an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that would otherwise be illegal. In other words, if a <code>\\</code> <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> sequence were replaced by the <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> it contributes, the result must still be a valid <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> that has the exact same sequence of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> elements as the original <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>. All interpretations of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> within this specification are based upon their actual code points regardless of whether or not an escape sequence was used to contribute any particular code point.</p>\n    <p>Two <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>s that are canonically equivalent according to the Unicode standard are  <em>not</em> equal unless, after replacement of each <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt>, they are represented by the exact same sequence of code points.</p>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"IdentifierName\" type=\"lexical\" id=\"prod-IdentifierName\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"434685ab\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"700c1cee\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"IdentifierStart\" type=\"lexical\" id=\"prod-IdentifierStart\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"IdentifierPart\" type=\"lexical\" id=\"prod-IdentifierPart\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeIDStart\" type=\"lexical\" id=\"prod-UnicodeIDStart\">\n    <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e41f30c8\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Start&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeIDContinue\" type=\"lexical\" id=\"prod-UnicodeIDContinue\">\n    <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"db14546f\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Continue&#8221;</emu-gprose></emu-rhs>\n</emu-production></emu-grammar>\n    <p>The definitions of the nonterminal <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> is given in  <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>.</p>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The nonterminal <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt> derives <code>_</code> via <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt>.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>The sets of code points with Unicode properties &#8220;ID_Start&#8221; and &#8220;ID_Continue&#8221; include, respectively, the code points with Unicode properties &#8220;Other_ID_Start&#8221; and &#8220;Other_ID_Continue&#8221;.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-identifier-names\"><h1><span class=\"secnum\">11.6.1</span>#sec-identifier-names Identifier Names</h1>...</div><div id=\"excluded-sec-keywords-and-reserved-words\"><h1><span class=\"secnum\">11.6.2</span>#sec-keywords-and-reserved-words Keywords and Reserved Words</h1>...</div></emu-clause>\n\n  "}, "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions": {"num": "E", "title": "#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions Additions and Changes That Introduce Incompatibilities with Prior ditions", "html": "<emu-annex id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions</span> Additions and Changes That Introduce Incompatibilities with Prior Editions</h1>\n  <p><emu-xref href=\"#sec-tonumber-applied-to-the-string-type\"><a href=\"#sec-tonumber-applied-to-the-string-type\" class=\"excluded-xref\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</a></emu-xref>: In ECMAScript 2015, <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to a String value now recognizes and converts <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> and <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> numeric strings. In previous editions such strings were converted to <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\" class=\"excluded-xref\" excluded-id=\"sec-reference-specification-type\">#sec-reference-specification-type</a></emu-xref>: In ECMAScript 2015, Function calls are not allowed to return a <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref> value.</p>\n  <p><emu-xref href=\"#sec-names-and-keywords\"><a href=\"#sec-names-and-keywords\" class=\"excluded-xref\" excluded-id=\"sec-names-and-keywords\">#sec-names-and-keywords</a></emu-xref>: In ECMAScript 2015, the valid code points for an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are specified in terms of the Unicode properties &#8220;ID_Start&#8221; and &#8220;ID_Continue&#8221;. In previous editions, the valid <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> or <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> code points were specified by enumerating various Unicode code point categories.</p>\n  <p><emu-xref href=\"#sec-rules-of-automatic-semicolon-insertion\"><a href=\"#sec-rules-of-automatic-semicolon-insertion\" class=\"excluded-xref\" excluded-id=\"sec-rules-of-automatic-semicolon-insertion\">#sec-rules-of-automatic-semicolon-insertion</a></emu-xref>: In ECMAScript 2015, Automatic Semicolon Insertion adds a semicolon at the end of a do-while statement if the semicolon is missing. This change aligns the specification with the actual behaviour of most existing implementations.</p>\n  <p><emu-xref href=\"#sec-object-initializer-static-semantics-early-errors\"><a href=\"#sec-object-initializer-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-static-semantics-early-errors\">#sec-object-initializer-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, it is no longer an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> to have duplicate property names in Object Initializers.</p>\n  <p><emu-xref href=\"#sec-assignment-operators-static-semantics-early-errors\"><a href=\"#sec-assignment-operators-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators-static-semantics-early-errors\">#sec-assignment-operators-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> containing an assignment to an immutable binding such as the function name of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> does not produce an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref>. Instead it produces a runtime error.</p>\n  <p><emu-xref href=\"#sec-block\"><a href=\"#sec-block\" class=\"excluded-xref\" excluded-id=\"sec-block\">#sec-block</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> beginning with the token let followed by the input elements <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> then <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions, automatic semicolon insertion would always insert a semicolon before the <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> input element.</p>\n  <p><emu-xref href=\"#sec-expression-statement\"><a href=\"#sec-expression-statement\" class=\"excluded-xref\" excluded-id=\"sec-expression-statement\">#sec-expression-statement</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt> beginning with the token <code>let</code> followed by the token <code>[</code> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a sequence would be the start of an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-if-statement-runtime-semantics-evaluation\"><a href=\"#sec-if-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-if-statement-runtime-semantics-evaluation\">#sec-if-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of an <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If no <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part is evaluated or if the evaluated <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the <code>(</code> token of a for statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the ( token of a for-in statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: Prior to ECMAScript 2015, an initialization expression could appear as part of the <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> that precedes the <code>in</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref>. In ECMAScript 2015, the <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt> in that same position does not allow the occurrence of such an initializer. In ECMAScript 2017, such an initializer is permitted only in <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, the completion value of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is not evaluated or if the final evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-with-statement-runtime-semantics-evaluation\"><a href=\"#sec-with-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-runtime-semantics-evaluation\">#sec-with-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-switch-statement-runtime-semantics-evaluation\"><a href=\"#sec-switch-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-switch-statement-runtime-semantics-evaluation\">#sec-switch-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt> part of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>: In ECMAScript 2015, it is an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> for a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause to contain a <code>var</code> declaration for the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter. In previous editions, such a variable declaration would be instantiated in the enclosing variable environment but the declaration's <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> value would be assigned to the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>,  <emu-xref href=\"#sec-evaldeclarationinstantiation\"><a href=\"#sec-evaldeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-evaldeclarationinstantiation\">#sec-evaldeclarationinstantiation</a></emu-xref>: In ECMAScript 2015, a runtime <emu-val>SyntaxError</emu-val> is thrown if a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause evaluates a non-strict direct <code>eval</code> whose eval code includes a <code>var</code> or <code>FunctionDeclaration</code> declaration that binds the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement-runtime-semantics-evaluation\"><a href=\"#sec-try-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-runtime-semantics-evaluation\">#sec-try-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a throw completion and it has a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> part that evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val> if there is no <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause or if its <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause evaluates to an <emu-const>empty</emu-const> normal completion.</p>\n  <p><emu-xref href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\"><a href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation\">#sec-method-definitions-runtime-semantics-propertydefinitionevaluation</a></emu-xref> In ECMAScript 2015, the function objects that are created as the values of the [[Get]] or [[Set]] attribute of accessor properties in an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> are not <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> functions and they do not have a <code>\"prototype\"</code> own property. In the previous edition, they were constructors and had a <code>\"prototype\"</code> property.</p>\n  <p><emu-xref href=\"#sec-object.freeze\"><a href=\"#sec-object.freeze\" class=\"excluded-xref\" excluded-id=\"sec-object.freeze\">#sec-object.freeze</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.freeze</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertydescriptor\"><a href=\"#sec-object.getownpropertydescriptor\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertydescriptor\">#sec-object.getownpropertydescriptor</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyDescriptor</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertynames\"><a href=\"#sec-object.getownpropertynames\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertynames\">#sec-object.getownpropertynames</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyNames</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getprototypeof\"><a href=\"#sec-object.getprototypeof\" class=\"excluded-xref\" excluded-id=\"sec-object.getprototypeof\">#sec-object.getprototypeof</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getPrototypeOf</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isextensible\"><a href=\"#sec-object.isextensible\" class=\"excluded-xref\" excluded-id=\"sec-object.isextensible\">#sec-object.isextensible</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isExtensible</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isfrozen\"><a href=\"#sec-object.isfrozen\" class=\"excluded-xref\" excluded-id=\"sec-object.isfrozen\">#sec-object.isfrozen</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isFrozen</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.issealed\"><a href=\"#sec-object.issealed\" class=\"excluded-xref\" excluded-id=\"sec-object.issealed\">#sec-object.issealed</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isSealed</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.keys\"><a href=\"#sec-object.keys\" class=\"excluded-xref\" excluded-id=\"sec-object.keys\">#sec-object.keys</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.keys</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.preventextensions\"><a href=\"#sec-object.preventextensions\" class=\"excluded-xref\" excluded-id=\"sec-object.preventextensions\">#sec-object.preventextensions</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.preventExtensions</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.seal\"><a href=\"#sec-object.seal\" class=\"excluded-xref\" excluded-id=\"sec-object.seal\">#sec-object.seal</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.seal</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-function.prototype.bind\"><a href=\"#sec-function.prototype.bind\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref> is set to the [[GetPrototypeOf]] value of its target function. In the previous edition, [[Prototype]] was always set to <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-function-instances-length\"><a href=\"#sec-function-instances-length\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-length\">#sec-function-instances-length</a></emu-xref>: In ECMAScript 2015, the <code>\"length\"</code> property of function instances is configurable. In previous editions it was non-configurable.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-nativeerror-constructors\"><a href=\"#sec-properties-of-the-nativeerror-constructors\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-nativeerror-constructors\">#sec-properties-of-the-nativeerror-constructors</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. In previous editions it was the Function prototype object.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</a></emu-xref> In ECMAScript 2015, the Date prototype object is not a Date instance. In previous editions it was a Date instance whose TimeValue was <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-string.prototype.localecompare\"><a href=\"#sec-string.prototype.localecompare\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.localecompare\">#sec-string.prototype.localecompare</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.localeCompare</code> function must treat Strings that are canonically equivalent according to the Unicode standard as being identical. In previous editions implementations were permitted to ignore canonical equivalence and could instead use a bit-wise comparison.</p>\n  <p><emu-xref href=\"#sec-string.prototype.tolowercase\"><a href=\"#sec-string.prototype.tolowercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.tolowercase\">#sec-string.prototype.tolowercase</a></emu-xref> and  <emu-xref href=\"#sec-string.prototype.touppercase\"><a href=\"#sec-string.prototype.touppercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.touppercase\">#sec-string.prototype.touppercase</a></emu-xref> In ECMAScript 2015, lowercase/upper conversion processing operates on code points. In previous editions such the conversion processing was only applied to individual code units. The only affected code points are those in the Deseret block of Unicode.</p>\n  <p><emu-xref href=\"#sec-string.prototype.trim\"><a href=\"#sec-string.prototype.trim\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.trim\">#sec-string.prototype.trim</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.trim</code> method is defined to recognize white space code points that may exists outside of the Unicode BMP. However, as of Unicode 7 no such code points are defined. In previous editions such code points would not have been recognized as white space.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref> In ECMAScript 2015, If the <var>pattern</var> argument is a RegExp instance and the <var>flags</var> argument is not <emu-val>undefined</emu-val>, a new RegExp instance is created just like <var>pattern</var> except that <var>pattern</var>'s flags are replaced by the argument <var>flags</var>. In previous editions a <emu-val>TypeError</emu-val> exception was thrown when <var>pattern</var> was a RegExp instance and <var>flags</var> was not <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, the RegExp prototype object is not a RegExp instance. In previous editions it was a RegExp instance whose pattern is the empty string.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, <code>\"source\"</code>, <code>\"global\"</code>, <code>\"ignoreCase\"</code>, and <code>\"multiline\"</code> are accessor properties defined on the RegExp prototype object. In previous editions they were data properties defined on RegExp instances.</p>\n</emu-annex>\n"}, "sec-conformance": {"num": "2", "title": "#sec-conformance Conformance", "html": "<emu-clause id=\"sec-conformance\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-conformance\">#sec-conformance</span> Conformance</h1>\n  <p>A conforming implementation of ECMAScript must provide and support all the types, values, objects, properties, functions, and program syntax and semantics described in this specification.</p>\n  <p>A conforming implementation of ECMAScript must interpret source text input in conformance with the latest version of the Unicode Standard and ISO/IEC 10646.</p>\n  <p>A conforming implementation of ECMAScript that provides an application programming interface (API) that supports programs that need to adapt to the linguistic and cultural conventions used by different human languages and countries must implement the interface defined by the most recent edition of ECMA-402 that is compatible with this specification.</p>\n  <p>A conforming implementation of ECMAScript may provide additional types, values, objects, properties, and functions beyond those described in this specification. In particular, a conforming implementation of ECMAScript may provide properties not described in this specification, and values for those properties, for objects that are described in this specification.</p>\n  <p>A conforming implementation of ECMAScript may support program and regular expression syntax not described in this specification. In particular, a conforming implementation of ECMAScript may support program syntax that makes use of any &#8220;future reserved words&#8221; noted in subclause  <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-keywords-and-reserved-words\">#sec-keywords-and-reserved-words</a></emu-xref> of this specification.</p>\n  <p>A conforming implementation of ECMAScript must not implement any extension that is listed as a Forbidden Extension in subclause  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>.</p>\n</emu-clause>\n\n"}, "sec-resolvethisbinding": {"num": "8.3.4", "title": "#sec-resolvethisbinding ResolveThisBinding ( )", "html": "<emu-clause id=\"sec-resolvethisbinding\" aoid=\"ResolveThisBinding\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-resolvethisbinding\">#sec-resolvethisbinding</span> ResolveThisBinding ( )</h1>\n      <p>The abstract operation ResolveThisBinding determines the binding of the <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> <code>this</code> using the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. ResolveThisBinding performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>envRec</var> be <emu-xref aoid=\"GetThisEnvironment\"><a href=\"#sec-getthisenvironment\">GetThisEnvironment</a></emu-xref>().</li><li>Return ? <var>envRec</var>.GetThisBinding().\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-getthisenvironment": {"num": "8.3.3", "title": "#sec-getthisenvironment GetThisEnvironment ( )", "html": "<emu-clause id=\"sec-getthisenvironment\" aoid=\"GetThisEnvironment\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getthisenvironment\">#sec-getthisenvironment</span> GetThisEnvironment ( )</h1>\n      <p>The abstract operation GetThisEnvironment finds the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that currently supplies the binding of the <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> <code>this</code>. GetThisEnvironment performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>lex</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Repeat,<ol><li>Let <var>envRec</var> be <var>lex</var>'s <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">EnvironmentRecord</a></emu-xref>.</li><li>Let <var>exists</var> be <var>envRec</var>.HasThisBinding().</li><li>If <var>exists</var> is <emu-val>true</emu-val>, return <var>envRec</var>.</li><li>Let <var>outer</var> be the value of <var>lex</var>'s outer environment reference.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>outer</var> is not <emu-val>null</emu-val>.</li><li>Set <var>lex</var> to <var>outer</var>.\n      </li></ol></li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The loop in step 2 will always terminate because the list of environments always ends with the <emu-xref href=\"#global-environment\"><a href=\"#global-environment\">global environment</a></emu-xref> which has a <code>this</code> binding.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}}