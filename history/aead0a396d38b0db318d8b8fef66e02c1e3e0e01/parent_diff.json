{"from": {"secList": ["sec-string.prototype.replaceall", "sec-string.prototype.replace"], "secData": {"sec-string.prototype.replaceall": {"num": "21.1.3.18", "title": "#sec-string.prototype.replaceall String.prototype.replaceAll ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replaceall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replaceall\">#sec-string.prototype.replaceall</span> String.prototype.replaceAll ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replaceAll</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>searchValue</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>searchValue</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@replace</a></emu-xref>).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>searchLength</var> be the length of <var>searchString</var>.</li><li>Let <var>advanceBy</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(1, <var>searchLength</var>).</li><li>Let <var>matchPositions</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>position</var> be !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, 0).</li><li>Repeat, while <var>position</var> is not -1,<ol><li>Append <var>position</var> to the end of <var>matchPositions</var>.</li><li>Set <var>position</var> to !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, <var>position</var> + <var>advanceBy</var>).</li></ol></li><li>Let <var>endOfLastMatch</var> be 0.</li><li>Let <var>result</var> be the empty String.</li><li>For each <var>position</var> in <var>matchPositions</var>, do<ol><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>searchString</var>, <var>position</var>, <var>string</var> &#187;)).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replaceValue</var>) is String.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replacement</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>searchString</var>, <var>string</var>, <var>position</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Let <var>stringSlice</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>endOfLastMatch</var> to <var>position</var>.</li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var>, <var>stringSlice</var>, and <var>replacement</var>.</li><li>Set <var>endOfLastMatch</var> to <var>position</var> + <var>searchLength</var>.</li></ol></li><li>If <var>endOfLastMatch</var> &lt; the length of <var>string</var>, then<ol><li>Let <var>tail</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>endOfLastMatch</var>.</li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and <var>tail</var>.</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-string.prototype.replace": {"num": "21.1.3.17", "title": "#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replace\">#sec-string.prototype.replace</span> String.prototype.replace ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replace</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@replace</a></emu-xref>).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>searchLen</var> be the length of <var>searchString</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>pos</var> be !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, 0).</li><li>If <var>pos</var> is -1, return <var>string</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>searchString</var>, <var>pos</var>, <var>string</var> &#187;).</li><li>Let <var>replStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replStr</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>searchString</var>, <var>string</var>, <var>pos</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Let <var>tailPos</var> be <var>pos</var> + <var>searchLen</var>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from 0 to <var>pos</var>, <var>replStr</var>, and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>tailPos</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>replace</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getsubstitution\"><h1><span class=\"secnum\">21.1.3.17.1</span>#sec-getsubstitution Runtime Semantics: GetSubstitution ( matched, str, position, captures, namedCaptures, replacement )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-string.prototype.replaceall", "sec-string.prototype.replace"], "secData": {"sec-string.prototype.replaceall": {"num": "21.1.3.18", "title": "#sec-string.prototype.replaceall String.prototype.replaceAll ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replaceall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replaceall\">#sec-string.prototype.replaceall</span> String.prototype.replaceAll ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replaceAll</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>searchValue</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>searchValue</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@replace</a></emu-xref>).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>searchLength</var> be the length of <var>searchString</var>.</li><li>Let <var>advanceBy</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(1, <var>searchLength</var>).</li><li>Let <var>matchPositions</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>position</var> be !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, 0).</li><li>Repeat, while <var>position</var> is not -1,<ol><li>Append <var>position</var> to the end of <var>matchPositions</var>.</li><li>Set <var>position</var> to !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, <var>position</var> + <var>advanceBy</var>).</li></ol></li><li>Let <var>endOfLastMatch</var> be 0.</li><li>Let <var>result</var> be the empty String.</li><li>For each <var>position</var> in <var>matchPositions</var>, do<ol><li>Let <var>preserved</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>endOfLastMatch</var> to <var>position</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>searchString</var>, <var>position</var>, <var>string</var> &#187;)).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replaceValue</var>) is String.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replacement</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>searchString</var>, <var>string</var>, <var>position</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var>, <var>preserved</var>, and <var>replacement</var>.</li><li>Set <var>endOfLastMatch</var> to <var>position</var> + <var>searchLength</var>.</li></ol></li><li>If <var>endOfLastMatch</var> &lt; the length of <var>string</var>, then<ol><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>endOfLastMatch</var>.</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-string.prototype.replace": {"num": "21.1.3.17", "title": "#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replace\">#sec-string.prototype.replace</span> String.prototype.replace ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replace</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@replace</a></emu-xref>).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>searchLength</var> be the length of <var>searchString</var>.</li><li>Let <var>position</var> be !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, 0).</li><li>If <var>position</var> is -1, return <var>string</var>.</li><li>Let <var>preserved</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from 0 to <var>position</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>searchString</var>, <var>position</var>, <var>string</var> &#187;)).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replaceValue</var>) is String.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replacement</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>searchString</var>, <var>string</var>, <var>position</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>preserved</var>, <var>replacement</var>, and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>position</var> + <var>searchLength</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>replace</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getsubstitution\"><h1><span class=\"secnum\">21.1.3.17.1</span>#sec-getsubstitution Runtime Semantics: GetSubstitution ( matched, str, position, captures, namedCaptures, replacement )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}}