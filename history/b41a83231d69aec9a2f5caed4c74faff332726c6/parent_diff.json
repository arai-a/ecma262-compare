{"from": {"secList": ["sec-proxy-object-internal-methods-and-internal-slots-delete-p", "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p"], "secData": {"sec-proxy-object-internal-methods-and-internal-slots-delete-p": {"num": "9.5.10", "title": "#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">#sec-proxy-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>When the [[Delete]] internal method of a Proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"deleteProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Delete]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Delete]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as a non-configurable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "9.5.6", "title": "#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>When the [[DefineOwnProperty]] internal method of a Proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"defineProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[DefineOwnProperty]](<var>P</var>, <var>Desc</var>).</li></ol></li><li>Let <var>descObj</var> be <emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>Desc</var>).</li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>descObj</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Let <var>settingConfigFalse</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else, let <var>settingConfigFalse</var> be <emu-val>false</emu-val>.</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>Desc</var>, <var>targetDesc</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[DefineOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[DefineOwnProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be added, if the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be non-configurable, unless there exists a corresponding non-configurable own property of the target object.\n          </li>\n          <li>\n            If a property has a corresponding target object property then applying the <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> of the property to the target object using [[DefineOwnProperty]] will not throw an exception.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "9.5.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>When the [[GetOwnProperty]] internal method of a Proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getOwnPropertyDescriptor\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li></ol></li><li>Let <var>trapResultObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>trapResultObj</var>) is neither Object nor Undefined, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>trapResultObj</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>resultDesc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>trapResultObj</var>).</li><li>Call <emu-xref aoid=\"CompletePropertyDescriptor\"><a href=\"#sec-completepropertydescriptor\">CompletePropertyDescriptor</a></emu-xref>(<var>resultDesc</var>).</li><li>Let <var>valid</var> be <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>resultDesc</var>, <var>targetDesc</var>).</li><li>If <var>valid</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>resultDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val> or <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>resultDesc</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetOwnProperty]] must be either an Object or <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be reported as existent, if it does not exist as an own property of the target object and the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be reported as non-configurable, if it does not exist as an own property of the target object or if it exists as a configurable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-proxy-object-internal-methods-and-internal-slots-delete-p", "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p"], "secData": {"sec-proxy-object-internal-methods-and-internal-slots-delete-p": {"num": "9.5.10", "title": "#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">#sec-proxy-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>When the [[Delete]] internal method of a Proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"deleteProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Delete]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Delete]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as an own property of the target object and the target object is non-extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "9.5.6", "title": "#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>When the [[DefineOwnProperty]] internal method of a Proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"defineProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[DefineOwnProperty]](<var>P</var>, <var>Desc</var>).</li></ol></li><li>Let <var>descObj</var> be <emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>Desc</var>).</li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>descObj</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Let <var>settingConfigFalse</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else, let <var>settingConfigFalse</var> be <emu-val>false</emu-val>.</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>Desc</var>, <var>targetDesc</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, and <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var> has a [[Writable]] field and <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[DefineOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[DefineOwnProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be added, if the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be non-configurable, unless there exists a corresponding non-configurable own property of the target object.\n          </li>\n          <li>\n            A non-configurable property cannot be non-writable, unless there exists a corresponding non-configurable, non-writable own property of the target object.\n          </li>\n          <li>\n            If a property has a corresponding target object property then applying the <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> of the property to the target object using [[DefineOwnProperty]] will not throw an exception.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "9.5.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>When the [[GetOwnProperty]] internal method of a Proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getOwnPropertyDescriptor\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li></ol></li><li>Let <var>trapResultObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>trapResultObj</var>) is neither Object nor Undefined, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>trapResultObj</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>resultDesc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>trapResultObj</var>).</li><li>Call <emu-xref aoid=\"CompletePropertyDescriptor\"><a href=\"#sec-completepropertydescriptor\">CompletePropertyDescriptor</a></emu-xref>(<var>resultDesc</var>).</li><li>Let <var>valid</var> be <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>resultDesc</var>, <var>targetDesc</var>).</li><li>If <var>valid</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>resultDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val> or <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>resultDesc</var> has a [[Writable]] field and <var>resultDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>resultDesc</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetOwnProperty]] must be either an Object or <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if the target object is not extensible, unless it does not exist as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as existent, if the target object is not extensible, unless it exists as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-configurable, unless it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as both non-configurable and non-writable, unless it exists as a non-configurable, non-writable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}}