{"from": {"secList": ["sec-toboolean", "sec-literals-string-literals"], "secData": {"sec-toboolean": {"num": "7.1.2", "title": "#sec-toboolean ToBoolean ( argument )", "html": "<emu-clause id=\"sec-toboolean\" aoid=\"ToBoolean\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toboolean\">#sec-toboolean</span> ToBoolean ( <var>argument</var> )</h1>\n      <p>The abstract operation ToBoolean takes argument <var>argument</var>. It converts <var>argument</var> to a value of type Boolean according to <emu-xref href=\"#table-toboolean-conversions\"><a href=\"#table-toboolean-conversions\" class=\"excluded-xref\" excluded-id=\"table-toboolean-conversions\">#table-toboolean-conversions</a></emu-xref>:</p>\n      <emu-table id=\"table-toboolean-conversions\" caption=\"ToBoolean Conversions\" oldids=\"table-10\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-toboolean-conversions\">#table-toboolean-conversions</span>: <emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref> Conversions</figcaption><span id=\"table-10\"></span>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            </th>\n            <th>\n              Result\n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            </td>\n            <td>\n              Return <var>argument</var>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>-0</emu-val><sub>&#120125;</sub>, or <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            </td>\n            <td>\n              If <var>argument</var> is the empty String (its length is zero), return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>0</emu-val><sub>&#8484;</sub>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n              <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n                <p>An alternate algorithm related to the [[IsHTMLDDA]] internal slot is mandated in section <emu-xref href=\"#sec-IsHTMLDDA-internal-slot-to-boolean\"><a href=\"#sec-IsHTMLDDA-internal-slot-to-boolean\" class=\"excluded-xref\" excluded-id=\"sec-IsHTMLDDA-internal-slot-to-boolean\">#sec-IsHTMLDDA-internal-slot-to-boolean</a></emu-xref>.</p>\n              </div></emu-note>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-literals-string-literals": {"num": "11.8.4", "title": "#sec-literals-string-literals String Literals", "html": "<emu-clause id=\"sec-literals-string-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</span> String Literals</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A string literal is zero or more Unicode code points enclosed in single or double quotes. Unicode code points may also be represented by an escape sequence. All code points may appear literally in a string literal except for the closing quote code points, U+005C (REVERSE SOLIDUS), U+000D (CARRIAGE RETURN), and U+000A (LINE FEED). Any code points may appear in the form of an escape sequence. String literals evaluate to ECMAScript String values. When generating these String values Unicode code points are UTF-16 encoded as defined in <emu-xref href=\"#sec-utf16encodecodepoint\"><a href=\"#sec-utf16encodecodepoint\" class=\"excluded-xref\" excluded-id=\"sec-utf16encodecodepoint\">#sec-utf16encodecodepoint</a></emu-xref>. Code points belonging to the Basic Multilingual Plane are encoded as a single code unit element of the string. All other code points are encoded as two code unit elements of the string.</p>\n      </div></emu-note>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"StringLiteral\" type=\"lexical\" id=\"prod-StringLiteral\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"15d8b1f1\">\n        <emu-t>\"</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>\"</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"82ecb3d9\">\n        <emu-t>'</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>'</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacters\" type=\"lexical\" id=\"prod-DoubleStringCharacters\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8bdabc77\">\n        <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacters\" type=\"lexical\" id=\"prod-SingleStringCharacters\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"17d28457\">\n        <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacter\" type=\"lexical\" id=\"prod-DoubleStringCharacter\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> <emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacter\" type=\"lexical\" id=\"prod-SingleStringCharacter\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> <emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LineContinuation\" type=\"lexical\" id=\"prod-LineContinuation\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c4893d63\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeSequence\" type=\"lexical\" id=\"prod-EscapeSequence\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\">\n        <emu-t>0</emu-t>\n        <emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann>\n    </emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" id=\"prod-CharacterEscapeSequence\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" id=\"prod-SingleEscapeCharacter\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-oneof>one of</emu-oneof> <emu-rhs><emu-t>'</emu-t> <emu-t>\"</emu-t> <emu-t>\\</emu-t> <emu-t>b</emu-t> <emu-t>f</emu-t> <emu-t>n</emu-t> <emu-t>r</emu-t> <emu-t>t</emu-t> <emu-t>v</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NonEscapeCharacter\" type=\"lexical\" id=\"prod-NonEscapeCharacter\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> <emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeCharacter\" type=\"lexical\" id=\"prod-EscapeCharacter\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"HexEscapeSequence\" type=\"lexical\" id=\"prod-HexEscapeSequence\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"d8ef973c\">\n        <emu-t>x</emu-t>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" id=\"prod-UnicodeEscapeSequence\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8072ad8d\">\n        <emu-t>u</emu-t>\n        <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"b98063ef\">\n        <emu-t>u{</emu-t>\n        <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"Hex4Digits\" type=\"lexical\" id=\"prod-Hex4Digits\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"0ba8de61\">\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>The definition of the nonterminal <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> is given in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>. <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> is defined in <emu-xref href=\"#sec-source-text\"><a href=\"#sec-source-text\" class=\"excluded-xref\" excluded-id=\"sec-source-text\">#sec-source-text</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>&lt;LF&gt; and &lt;CR&gt; cannot appear in a string literal, except as part of a <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> to produce the empty code points sequence. The proper way to include either in the String value of a string literal is to use an escape sequence such as <code>\\n</code> or <code>\\u000A</code>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-string-literals-static-semantics-stringvalue\"><h1><span class=\"secnum\">11.8.4.1</span>#sec-string-literals-static-semantics-stringvalue Static Semantics: StringValue</h1>...</div><div id=\"excluded-sec-static-semantics-sv\"><h1><span class=\"secnum\">11.8.4.2</span>#sec-static-semantics-sv Static Semantics: SV</h1>...</div><div id=\"excluded-sec-string-literals-static-semantics-mv\"><h1><span class=\"secnum\">11.8.4.3</span>#sec-string-literals-static-semantics-mv Static Semantics: MV</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-toboolean-conversions": "Table 11"}}, "to": {"secList": ["sec-toboolean", "sec-literals-string-literals"], "secData": {"sec-toboolean": {"num": "7.1.2", "title": "#sec-toboolean ToBoolean ( argument )", "html": "<emu-clause id=\"sec-toboolean\" aoid=\"ToBoolean\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toboolean\">#sec-toboolean</span> ToBoolean ( <var>argument</var> )</h1>\n      <p>The abstract operation ToBoolean takes argument <var>argument</var>. It converts <var>argument</var> to a value of type Boolean according to <emu-xref href=\"#table-toboolean-conversions\"><a href=\"#table-toboolean-conversions\" class=\"excluded-xref\" excluded-id=\"table-toboolean-conversions\">#table-toboolean-conversions</a></emu-xref>:</p>\n      <emu-table id=\"table-toboolean-conversions\" caption=\"ToBoolean Conversions\" oldids=\"table-10\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-toboolean-conversions\">#table-toboolean-conversions</span>: <emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref> Conversions</figcaption><span id=\"table-10\"></span>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            </th>\n            <th>\n              Result\n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            </td>\n            <td>\n              Return <var>argument</var>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>-0</emu-val><sub>&#120125;</sub>, or <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            </td>\n            <td>\n              If <var>argument</var> is the empty String (its length is 0), return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>0</emu-val><sub>&#8484;</sub>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n              <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n                <p>An alternate algorithm related to the [[IsHTMLDDA]] internal slot is mandated in section <emu-xref href=\"#sec-IsHTMLDDA-internal-slot-to-boolean\"><a href=\"#sec-IsHTMLDDA-internal-slot-to-boolean\" class=\"excluded-xref\" excluded-id=\"sec-IsHTMLDDA-internal-slot-to-boolean\">#sec-IsHTMLDDA-internal-slot-to-boolean</a></emu-xref>.</p>\n              </div></emu-note>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-literals-string-literals": {"num": "11.8.4", "title": "#sec-literals-string-literals String Literals", "html": "<emu-clause id=\"sec-literals-string-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</span> String Literals</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A string literal is 0 or more Unicode code points enclosed in single or double quotes. Unicode code points may also be represented by an escape sequence. All code points may appear literally in a string literal except for the closing quote code points, U+005C (REVERSE SOLIDUS), U+000D (CARRIAGE RETURN), and U+000A (LINE FEED). Any code points may appear in the form of an escape sequence. String literals evaluate to ECMAScript String values. When generating these String values Unicode code points are UTF-16 encoded as defined in <emu-xref href=\"#sec-utf16encodecodepoint\"><a href=\"#sec-utf16encodecodepoint\" class=\"excluded-xref\" excluded-id=\"sec-utf16encodecodepoint\">#sec-utf16encodecodepoint</a></emu-xref>. Code points belonging to the Basic Multilingual Plane are encoded as a single code unit element of the string. All other code points are encoded as two code unit elements of the string.</p>\n      </div></emu-note>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"StringLiteral\" type=\"lexical\" id=\"prod-StringLiteral\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"15d8b1f1\">\n        <emu-t>\"</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>\"</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"82ecb3d9\">\n        <emu-t>'</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>'</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacters\" type=\"lexical\" id=\"prod-DoubleStringCharacters\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8bdabc77\">\n        <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacters\" type=\"lexical\" id=\"prod-SingleStringCharacters\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"17d28457\">\n        <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacter\" type=\"lexical\" id=\"prod-DoubleStringCharacter\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> <emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacter\" type=\"lexical\" id=\"prod-SingleStringCharacter\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> <emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LineContinuation\" type=\"lexical\" id=\"prod-LineContinuation\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c4893d63\">\n        <emu-t>\\</emu-t>\n        <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeSequence\" type=\"lexical\" id=\"prod-EscapeSequence\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\">\n        <emu-t>0</emu-t>\n        <emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann>\n    </emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" id=\"prod-CharacterEscapeSequence\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" id=\"prod-SingleEscapeCharacter\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-oneof>one of</emu-oneof> <emu-rhs><emu-t>'</emu-t> <emu-t>\"</emu-t> <emu-t>\\</emu-t> <emu-t>b</emu-t> <emu-t>f</emu-t> <emu-t>n</emu-t> <emu-t>r</emu-t> <emu-t>t</emu-t> <emu-t>v</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NonEscapeCharacter\" type=\"lexical\" id=\"prod-NonEscapeCharacter\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> <emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeCharacter\" type=\"lexical\" id=\"prod-EscapeCharacter\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"HexEscapeSequence\" type=\"lexical\" id=\"prod-HexEscapeSequence\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"d8ef973c\">\n        <emu-t>x</emu-t>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" id=\"prod-UnicodeEscapeSequence\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8072ad8d\">\n        <emu-t>u</emu-t>\n        <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"b98063ef\">\n        <emu-t>u{</emu-t>\n        <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"Hex4Digits\" type=\"lexical\" id=\"prod-Hex4Digits\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"0ba8de61\">\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>The definition of the nonterminal <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> is given in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>. <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> is defined in <emu-xref href=\"#sec-source-text\"><a href=\"#sec-source-text\" class=\"excluded-xref\" excluded-id=\"sec-source-text\">#sec-source-text</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>&lt;LF&gt; and &lt;CR&gt; cannot appear in a string literal, except as part of a <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> to produce the empty code points sequence. The proper way to include either in the String value of a string literal is to use an escape sequence such as <code>\\n</code> or <code>\\u000A</code>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-string-literals-static-semantics-stringvalue\"><h1><span class=\"secnum\">11.8.4.1</span>#sec-string-literals-static-semantics-stringvalue Static Semantics: StringValue</h1>...</div><div id=\"excluded-sec-static-semantics-sv\"><h1><span class=\"secnum\">11.8.4.2</span>#sec-static-semantics-sv Static Semantics: SV</h1>...</div><div id=\"excluded-sec-string-literals-static-semantics-mv\"><h1><span class=\"secnum\">11.8.4.3</span>#sec-string-literals-static-semantics-mv Static Semantics: MV</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-toboolean-conversions": "Table 11"}}}