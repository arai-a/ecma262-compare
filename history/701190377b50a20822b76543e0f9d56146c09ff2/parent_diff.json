{"from": {"secList": ["sec-module-namespace-exotic-objects-defineownproperty-p-desc", "sec-integer-indexed-exotic-objects-delete-p", "sec-ordinary-object-internal-methods-and-internal-slots-preventextensions", "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-proxy-object-internal-methods-and-internal-slots-isextensible", "sec-integer-indexed-exotic-objects-set-p-v-receiver", "sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist", "sec-array-exotic-objects-defineownproperty-p-desc", "sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p", "sec-string-exotic-objects-getownproperty-p", "sec-module-namespace-exotic-objects-delete-p", "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v", "sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver", "sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p", "sec-built-in-function-objects-call-thisargument-argumentslist", "sec-bound-function-exotic-objects-construct-argumentslist-newtarget", "sec-module-namespace-exotic-objects-get-p-receiver", "sec-module-namespace-exotic-objects-set-p-v-receiver", "sec-module-namespace-exotic-objects-getownproperty-p", "sec-arguments-exotic-objects-getownproperty-p", "sec-proxy-object-internal-methods-and-internal-slots-delete-p", "sec-integer-indexed-exotic-objects-ownpropertykeys", "sec-integer-indexed-exotic-objects-hasproperty-p", "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys", "sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-ordinary-object-internal-methods-and-internal-slots-isextensible", "sec-ecmascript-function-objects-call-thisargument-argumentslist", "sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys", "sec-string-exotic-objects-defineownproperty-p-desc", "sec-bound-function-exotic-objects-call-thisargument-argumentslist", "sec-built-in-function-objects-construct-argumentslist-newtarget", "sec-integer-indexed-exotic-objects-get-p-receiver", "sec-arguments-exotic-objects-defineownproperty-p-desc", "sec-arguments-exotic-objects-get-p-receiver", "sec-integer-indexed-exotic-objects-getownproperty-p", "sec-string-exotic-objects-ownpropertykeys", "sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver", "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p", "sec-module-namespace-exotic-objects-ownpropertykeys", "sec-proxy-object-internal-methods-and-internal-slots-preventextensions", "sec-arguments-exotic-objects-delete-p", "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p", "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof", "sec-integer-indexed-exotic-objects-defineownproperty-p-desc", "sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof", "sec-module-namespace-exotic-objects-hasproperty-p", "sec-arguments-exotic-objects-set-p-v-receiver", "sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver", "sec-module-namespace-exotic-objects-isextensible", "sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v", "sec-immutable-prototype-exotic-objects-setprototypeof-v", "sec-ecmascript-function-objects-construct-argumentslist-newtarget", "sec-ordinary-object-internal-methods-and-internal-slots-delete-p", "sec-module-namespace-exotic-objects-setprototypeof-v", "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget", "sec-module-namespace-exotic-objects-preventextensions", "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver"], "secData": {"sec-module-namespace-exotic-objects-defineownproperty-p-desc": {"num": "9.4.6.5", "title": "#sec-module-namespace-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-defineownproperty-p-desc\">#sec-module-namespace-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>When the [[DefineOwnProperty]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Desc</var>).</li><li>Let <var>current</var> be ? <var>O</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>current</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Writable]] is present and has value <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Enumerable]] is present and has value <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Configurable]] is present and has value <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Value]] is present, return <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>Desc</var>.[[Value]], <var>current</var>.[[Value]]).</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-delete-p": {"num": "9.4.5.6", "title": "#sec-integer-indexed-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-delete-p\">#sec-integer-indexed-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>When the [[Delete]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>true</emu-val>; else return <emu-val>false</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-preventextensions": {"num": "9.1.4", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-preventextensions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-preventextensions\">#sec-ordinary-object-internal-methods-and-internal-slots-preventextensions</span> [[PreventExtensions]] ( )</h1>\n      <p>When the [[PreventExtensions]] internal method of <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryPreventExtensions\"><a href=\"#sec-ordinarypreventextensions\">OrdinaryPreventExtensions</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarypreventextensions\"><h1><span class=\"secnum\">9.1.4.1</span>#sec-ordinarypreventextensions OrdinaryPreventExtensions ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "9.5.6", "title": "#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>When the [[DefineOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"defineProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[DefineOwnProperty]](<var>P</var>, <var>Desc</var>).</li></ol></li><li>Let <var>descObj</var> be <emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>Desc</var>).</li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>descObj</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Let <var>settingConfigFalse</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else, let <var>settingConfigFalse</var> be <emu-val>false</emu-val>.</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>Desc</var>, <var>targetDesc</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, and <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var> has a [[Writable]] field and <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[DefineOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[DefineOwnProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be added, if the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be non-configurable, unless there exists a corresponding non-configurable own property of the target object.\n          </li>\n          <li>\n            A non-configurable property cannot be non-writable, unless there exists a corresponding non-configurable, non-writable own property of the target object.\n          </li>\n          <li>\n            If a property has a corresponding target object property then applying the <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> of the property to the target object using [[DefineOwnProperty]] will not throw an exception.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-isextensible": {"num": "9.5.3", "title": "#sec-proxy-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">#sec-proxy-object-internal-methods-and-internal-slots-isextensible</span> [[IsExtensible]] ( )</h1>\n      <p>When the [[IsExtensible]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"isExtensible\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>Let <var>targetResult</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>booleanTrapResult</var>, <var>targetResult</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[IsExtensible]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[IsExtensible]] is a Boolean value.\n          </li>\n          <li>\n            [[IsExtensible]] applied to the proxy object must return the same value as [[IsExtensible]] applied to the proxy object's target object with the same argument.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-set-p-v-receiver": {"num": "9.4.5.5", "title": "#sec-integer-indexed-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-set-p-v-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-set-p-v-receiver\">#sec-integer-indexed-exotic-objects-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n        <p>When the [[Set]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, value <var>V</var>, and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"IntegerIndexedElementSet\"><a href=\"#sec-integerindexedelementset\">IntegerIndexedElementSet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>, <var>V</var>).</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinarySet\"><a href=\"#sec-ordinaryset\">OrdinarySet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist": {"num": "9.5.12", "title": "#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\">#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with parameters <var>thisArgument</var> and <var>argumentsList</var>, a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"apply\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>target</var>, <var>thisArgument</var>, <var>argumentsList</var>).</li></ol></li><li>Let <var>argArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>argumentsList</var>).</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>thisArgument</var>, <var>argArray</var> &#187;).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> only has a [[Call]] internal method if the initial value of its [[ProxyTarget]] internal slot is an object that has a [[Call]] internal method.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array-exotic-objects-defineownproperty-p-desc": {"num": "9.4.2.1", "title": "#sec-array-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-array-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>When the [[DefineOwnProperty]] internal method of an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> <var>A</var> is called with property key <var>P</var>, and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <var>P</var> is <emu-val>\"length\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"ArraySetLength\"><a href=\"#sec-arraysetlength\">ArraySetLength</a></emu-xref>(<var>A</var>, <var>Desc</var>).</li></ol></li><li>Else if <var>P</var> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, then<ol><li>Let <var>oldLenDesc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>oldLenDesc</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLenDesc</var>.[[Configurable]] is <emu-val>false</emu-val>.</li><li>Let <var>oldLen</var> be <var>oldLenDesc</var>.[[Value]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLen</var> is a non-negative <emu-xref href=\"#integral-number\"><a href=\"#integral-number\">integral Number</a></emu-xref>.</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>).</li><li>If <var>index</var> &#8805; <var>oldLen</var> and <var>oldLenDesc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>succeeded</var> be !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> &#8805; <var>oldLen</var>, then<ol><li>Set <var>oldLenDesc</var>.[[Value]] to <var>index</var> + <emu-val>1</emu-val><sub>&#120125;</sub>.</li><li>Let <var>succeeded</var> be <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>oldLenDesc</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>succeeded</var> is <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "9.1.5", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>When the [[GetOwnProperty]] internal method of <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarygetownproperty\"><h1><span class=\"secnum\">9.1.5.1</span>#sec-ordinarygetownproperty OrdinaryGetOwnProperty ( O, P )</h1>...</div></emu-clause>\n\n    "}, "sec-string-exotic-objects-getownproperty-p": {"num": "9.4.3.1", "title": "#sec-string-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-string-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-exotic-objects-getownproperty-p\">#sec-string-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>When the [[GetOwnProperty]] internal method of a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> <var>S</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>desc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>).</li><li>If <var>desc</var> is not <emu-val>undefined</emu-val>, return <var>desc</var>.</li><li>Return !&#160;<emu-xref aoid=\"StringGetOwnProperty\"><a href=\"#sec-stringgetownproperty\">StringGetOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-delete-p": {"num": "9.4.6.9", "title": "#sec-module-namespace-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-delete-p\">#sec-module-namespace-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>When the [[Delete]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is an element of <var>exports</var>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v": {"num": "9.5.2", "title": "#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n      <p>When the [[SetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with argument <var>V</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Either <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Null.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"setPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[SetPrototypeOf]](<var>V</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>V</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[SetPrototypeOf]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[SetPrototypeOf]] is a Boolean value.\n          </li>\n          <li>\n            If the target object is not extensible, the argument value must be the same as the result of [[GetPrototypeOf]] applied to target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver": {"num": "9.5.8", "title": "#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n      <p>When the [[Get]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"get\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Get]](<var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>Receiver</var> &#187;).</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>trapResult</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Get]] is <emu-val>undefined</emu-val>, then<ol><li>If <var>trapResult</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Get]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            The value reported for a property must be <emu-val>undefined</emu-val> if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Get]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p": {"num": "9.1.7", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p\">#sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n      <p>When the [[HasProperty]] internal method of <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryhasproperty\"><h1><span class=\"secnum\">9.1.7.1</span>#sec-ordinaryhasproperty OrdinaryHasProperty ( O, P )</h1>...</div></emu-clause>\n\n    "}, "sec-built-in-function-objects-call-thisargument-argumentslist": {"num": "9.3.1", "title": "#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">#sec-built-in-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method for a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> is called with parameters <var>thisArgument</var> and <var>argumentsList</var>, a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>callerContext</var> is not already suspended, suspend <var>callerContext</var>.</li><li>Let <var>calleeContext</var> be a new <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>calleeContext</var> to <var>F</var>.</li><li>Let <var>calleeRealm</var> be <var>F</var>.[[Realm]].</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>calleeContext</var> to <var>calleeRealm</var>.</li><li>Set the ScriptOrModule of <var>calleeContext</var> to <emu-val>null</emu-val>.</li><li>Perform any necessary <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> initialization of <var>calleeContext</var>.</li><li>Push <var>calleeContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li id=\"step-call-builtin-function-result\">Let <var>result</var> be the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> that is the result of evaluating <var>F</var> in a manner that conforms to the specification of <var>F</var>. <var>thisArgument</var> is the <emu-val>this</emu-val> value, <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>.</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> it must not be destroyed if it has been suspended and retained by an accessible generator object for later resumption.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-bound-function-exotic-objects-construct-argumentslist-newtarget": {"num": "9.4.1.2", "title": "#sec-bound-function-exotic-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-bound-function-exotic-objects-construct-argumentslist-newtarget\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bound-function-exotic-objects-construct-argumentslist-newtarget\">#sec-bound-function-exotic-objects-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n        <p>When the [[Construct]] internal method of a <emu-xref href=\"#bound-function-exotic-object\"><a href=\"#bound-function-exotic-object\">bound function exotic object</a></emu-xref>, <var>F</var> that was created using the bind function is called with a list of arguments <var>argumentsList</var> and <var>newTarget</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>target</var> be <var>F</var>.[[BoundTargetFunction]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>.</li><li>Let <var>boundArgs</var> be <var>F</var>.[[BoundArguments]].</li><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>boundArgs</var>, followed by the elements of <var>argumentsList</var>.</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>F</var>, <var>newTarget</var>) is <emu-val>true</emu-val>, set <var>newTarget</var> to <var>target</var>.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>target</var>, <var>args</var>, <var>newTarget</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-get-p-receiver": {"num": "9.4.6.7", "title": "#sec-module-namespace-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-get-p-receiver\">#sec-module-namespace-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>When the [[Get]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is not an element of <var>exports</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>m</var> be <var>O</var>.[[Module]].</li><li>Let <var>binding</var> be ! <var>m</var>.ResolveExport(<var>P</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>binding</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li><li>Let <var>targetModule</var> be <var>binding</var>.[[Module]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetModule</var> is not <emu-val>undefined</emu-val>.</li><li>If <var>binding</var>.[[BindingName]] is <emu-val>\"*namespace*\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>targetModule</var>).</li></ol></li><li>Let <var>targetEnv</var> be <var>targetModule</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-val>undefined</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>binding</var>.[[BindingName]], <emu-val>true</emu-val>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ResolveExport is side-effect free. Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result. An implementation might choose to pre-compute or cache the ResolveExport results for the [[Exports]] of each <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-set-p-v-receiver": {"num": "9.4.6.8", "title": "#sec-module-namespace-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-set-p-v-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-set-p-v-receiver\">#sec-module-namespace-exotic-objects-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n        <p>When the [[Set]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, value <var>V</var>, and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-getownproperty-p": {"num": "9.4.6.4", "title": "#sec-module-namespace-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-getownproperty-p\">#sec-module-namespace-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>When the [[GetOwnProperty]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, return <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is not an element of <var>exports</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>value</var> be ? <var>O</var>.[[Get]](<var>P</var>, <var>O</var>).</li><li>Return PropertyDescriptor { [[Value]]: <var>value</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-getownproperty-p": {"num": "9.4.4.1", "title": "#sec-arguments-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-getownproperty-p\">#sec-arguments-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>The [[GetOwnProperty]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> when called with a property key <var>P</var> performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>args</var> be the arguments object.</li><li>Let <var>desc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>args</var>, <var>P</var>).</li><li>If <var>desc</var> is <emu-val>undefined</emu-val>, return <var>desc</var>.</li><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>If <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>desc</var>.[[Value]] to <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li><li>Return <var>desc</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-delete-p": {"num": "9.5.10", "title": "#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">#sec-proxy-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>When the [[Delete]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"deleteProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Delete]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Delete]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as an own property of the target object and the target object is non-extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-ownpropertykeys": {"num": "9.4.5.7", "title": "#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]]) is <emu-val>false</emu-val>, then<ol><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>O</var>.[[ArrayLength]], in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>)) as the last element of <var>keys</var>.</li></ol></li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-hasproperty-p": {"num": "9.4.5.2", "title": "#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>When the [[HasProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys": {"num": "9.5.11", "title": "#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n      <p>When the [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"ownKeys\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[OwnPropertyKeys]]().</li></ol></li><li>Let <var>trapResultArray</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"CreateListFromArrayLike\"><a href=\"#sec-createlistfromarraylike\">CreateListFromArrayLike</a></emu-xref>(<var>trapResultArray</var>, &#171; String, Symbol &#187;).</li><li>If <var>trapResult</var> contains any duplicate entries, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>targetKeys</var> be ? <var>target</var>.[[OwnPropertyKeys]]().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are only String and Symbol values.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> contains no duplicate entries.</li><li>Let <var>targetConfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>targetNonconfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>key</var> of <var>targetKeys</var>, do<ol><li>Let <var>desc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>key</var>).</li><li>If <var>desc</var> is not <emu-val>undefined</emu-val> and <var>desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Append <var>key</var> as an element of <var>targetNonconfigurableKeys</var>.</li></ol></li><li>Else,<ol><li>Append <var>key</var> as an element of <var>targetConfigurableKeys</var>.</li></ol></li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val> and <var>targetNonconfigurableKeys</var> is empty, then<ol><li>Return <var>trapResult</var>.</li></ol></li><li>Let <var>uncheckedResultKeys</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetNonconfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetConfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>uncheckedResultKeys</var> is not empty, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[OwnPropertyKeys]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[OwnPropertyKeys]] is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.\n          </li>\n          <li>\n            The returned <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> contains no duplicate entries.\n          </li>\n          <li>\n            The Type of each result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> element is either String or Symbol.\n          </li>\n          <li>\n            The result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain the keys of all non-configurable own properties of the target object.\n          </li>\n          <li>\n            If the target object is not extensible, then the result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain all the keys of the own properties of the target object and no other values.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "9.1.6", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>When the [[DefineOwnProperty]] internal method of <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarydefineownproperty\"><h1><span class=\"secnum\">9.1.6.1</span>#sec-ordinarydefineownproperty OrdinaryDefineOwnProperty ( O, P, Desc )</h1>...</div><div id=\"excluded-sec-iscompatiblepropertydescriptor\"><h1><span class=\"secnum\">9.1.6.2</span>#sec-iscompatiblepropertydescriptor IsCompatiblePropertyDescriptor ( Extensible, Desc, Current )</h1>...</div><div id=\"excluded-sec-validateandapplypropertydescriptor\"><h1><span class=\"secnum\">9.1.6.3</span>#sec-validateandapplypropertydescriptor ValidateAndApplyPropertyDescriptor ( O, P, extensible, Desc, current )</h1>...</div></emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-isextensible": {"num": "9.1.3", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-isextensible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-isextensible\">#sec-ordinary-object-internal-methods-and-internal-slots-isextensible</span> [[IsExtensible]] ( )</h1>\n      <p>When the [[IsExtensible]] internal method of <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryIsExtensible\"><a href=\"#sec-ordinaryisextensible\">OrdinaryIsExtensible</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryisextensible\"><h1><span class=\"secnum\">9.1.3.1</span>#sec-ordinaryisextensible OrdinaryIsExtensible ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-ecmascript-function-objects-call-thisargument-argumentslist": {"num": "9.2.1", "title": "#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method for an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> is called with parameters <var>thisArgument</var> and <var>argumentsList</var>, a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values. The following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li>If <var>F</var>.[[IsClassConstructor]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>calleeContext</var> be <emu-xref aoid=\"PrepareForOrdinaryCall\"><a href=\"#sec-prepareforordinarycall\">PrepareForOrdinaryCall</a></emu-xref>(<var>F</var>, <emu-val>undefined</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Perform <emu-xref aoid=\"OrdinaryCallBindThis\"><a href=\"#sec-ordinarycallbindthis\">OrdinaryCallBindThis</a></emu-xref>(<var>F</var>, <var>calleeContext</var>, <var>thisArgument</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryCallEvaluateBody\"><a href=\"#sec-ordinarycallevaluatebody\">OrdinaryCallEvaluateBody</a></emu-xref>(<var>F</var>, <var>argumentsList</var>).</li><li id=\"step-call-pop-context-stack\">Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>result</var>.[[Type]] is <emu-const>return</emu-const>, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>result</var>.[[Value]]).</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>result</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> in step <emu-xref href=\"#step-call-pop-context-stack\"><a href=\"#step-call-pop-context-stack\" class=\"excluded-xref\" excluded-id=\"step-call-pop-context-stack\">#step-call-pop-context-stack</a></emu-xref> it must not be destroyed if it is suspended and retained for later resumption by an accessible generator object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-prepareforordinarycall\"><h1><span class=\"secnum\">9.2.1.1</span>#sec-prepareforordinarycall PrepareForOrdinaryCall ( F, newTarget )</h1>...</div><div id=\"excluded-sec-ordinarycallbindthis\"><h1><span class=\"secnum\">9.2.1.2</span>#sec-ordinarycallbindthis OrdinaryCallBindThis ( F, calleeContext, thisArgument )</h1>...</div><div id=\"excluded-sec-ordinarycallevaluatebody\"><h1><span class=\"secnum\">9.2.1.3</span>#sec-ordinarycallevaluatebody OrdinaryCallEvaluateBody ( F, argumentsList )</h1>...</div></emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys": {"num": "9.1.11", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys\">#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n      <p>When the [[OwnPropertyKeys]] internal method of <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryOwnPropertyKeys\"><a href=\"#sec-ordinaryownpropertykeys\">OrdinaryOwnPropertyKeys</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryownpropertykeys\"><h1><span class=\"secnum\">9.1.11.1</span>#sec-ordinaryownpropertykeys OrdinaryOwnPropertyKeys ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-string-exotic-objects-defineownproperty-p-desc": {"num": "9.4.3.2", "title": "#sec-string-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-string-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-exotic-objects-defineownproperty-p-desc\">#sec-string-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>When the [[DefineOwnProperty]] internal method of a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> <var>S</var> is called with property key <var>P</var>, and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>stringDesc</var> be !&#160;<emu-xref aoid=\"StringGetOwnProperty\"><a href=\"#sec-stringgetownproperty\">StringGetOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>).</li><li>If <var>stringDesc</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>extensible</var> be <var>S</var>.[[Extensible]].</li><li>Return !&#160;<emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensible</var>, <var>Desc</var>, <var>stringDesc</var>).</li></ol></li><li>Return !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-bound-function-exotic-objects-call-thisargument-argumentslist": {"num": "9.4.1.1", "title": "#sec-bound-function-exotic-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-bound-function-exotic-objects-call-thisargument-argumentslist\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bound-function-exotic-objects-call-thisargument-argumentslist\">#sec-bound-function-exotic-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n        <p>When the [[Call]] internal method of a <emu-xref href=\"#bound-function-exotic-object\"><a href=\"#bound-function-exotic-object\">bound function exotic object</a></emu-xref>, <var>F</var>, which was created using the bind function is called with parameters <var>thisArgument</var> and <var>argumentsList</var>, a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>target</var> be <var>F</var>.[[BoundTargetFunction]].</li><li>Let <var>boundThis</var> be <var>F</var>.[[BoundThis]].</li><li>Let <var>boundArgs</var> be <var>F</var>.[[BoundArguments]].</li><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>boundArgs</var>, followed by the elements of <var>argumentsList</var>.</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>target</var>, <var>boundThis</var>, <var>args</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-built-in-function-objects-construct-argumentslist-newtarget": {"num": "9.3.2", "title": "#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-built-in-function-objects-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects-construct-argumentslist-newtarget\">#sec-built-in-function-objects-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method for built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> is called with parameters <var>argumentsList</var> and <var>newTarget</var>. The steps performed are the same as [[Call]] (see <emu-xref href=\"#sec-built-in-function-objects-call-thisargument-argumentslist\"><a href=\"#sec-built-in-function-objects-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">#sec-built-in-function-objects-call-thisargument-argumentslist</a></emu-xref>) except that step <emu-xref href=\"#step-call-builtin-function-result\"><a href=\"#step-call-builtin-function-result\" class=\"excluded-xref\" excluded-id=\"step-call-builtin-function-result\">#step-call-builtin-function-result</a></emu-xref> is replaced by:</p>\n      <emu-alg replaces-step=\"step-call-builtin-function-result\"><ol start=\"10\"><li>Let <var>result</var> be the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> that is the result of evaluating <var>F</var> in a manner that conforms to the specification of <var>F</var>. The <emu-val>this</emu-val> value is uninitialized, <var>argumentsList</var> provides the named parameters, and <var>newTarget</var> provides the NewTarget value.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-get-p-receiver": {"num": "9.4.5.4", "title": "#sec-integer-indexed-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-get-p-receiver\">#sec-integer-indexed-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>When the [[Get]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"IntegerIndexedElementGet\"><a href=\"#sec-integerindexedelementget\">IntegerIndexedElementGet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-defineownproperty-p-desc": {"num": "9.4.4.2", "title": "#sec-arguments-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">#sec-arguments-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>The [[DefineOwnProperty]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> when called with a property key <var>P</var> and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var> performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>args</var> be the arguments object.</li><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be <emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>Let <var>newArgDesc</var> be <var>Desc</var>.</li><li>If <var>isMapped</var> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var>.[[Value]] is not present and <var>Desc</var>.[[Writable]] is present and its value is <emu-val>false</emu-val>, then<ol><li>Set <var>newArgDesc</var> to a copy of <var>Desc</var>.</li><li>Set <var>newArgDesc</var>.[[Value]] to <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li></ol></li><li>Let <var>allowed</var> be ?&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>args</var>, <var>P</var>, <var>newArgDesc</var>).</li><li>If <var>allowed</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, then<ol><li>Call <var>map</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Else,<ol><li>If <var>Desc</var>.[[Value]] is present, then<ol><li>Let <var>setStatus</var> be <emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>map</var>, <var>P</var>, <var>Desc</var>.[[Value]], <emu-val>false</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>setStatus</var> is <emu-val>true</emu-val> because formal parameters mapped by argument objects are always writable.</li></ol></li><li>If <var>Desc</var>.[[Writable]] is present and its value is <emu-val>false</emu-val>, then<ol><li>Call <var>map</var>.[[Delete]](<var>P</var>).</li></ol></li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-get-p-receiver": {"num": "9.4.4.3", "title": "#sec-arguments-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-get-p-receiver\">#sec-arguments-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>The [[Get]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> when called with a property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var> performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>args</var> be the arguments object.</li><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>If <var>isMapped</var> is <emu-val>false</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>args</var>, <var>P</var>, <var>Receiver</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>map</var> contains a formal parameter mapping for <var>P</var>.</li><li>Return <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-getownproperty-p": {"num": "9.4.5.1", "title": "#sec-integer-indexed-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-getownproperty-p\">#sec-integer-indexed-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>When the [[GetOwnProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>value</var> be !&#160;<emu-xref aoid=\"IntegerIndexedElementGet\"><a href=\"#sec-integerindexedelementget\">IntegerIndexedElementGet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li><li>If <var>value</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Return the PropertyDescriptor { [[Value]]: <var>value</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li></ol></li></ol></li><li>Return <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-string-exotic-objects-ownpropertykeys": {"num": "9.4.3.3", "title": "#sec-string-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-string-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-exotic-objects-ownpropertykeys\">#sec-string-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>str</var> be <var>O</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>str</var>) is String.</li><li>Let <var>len</var> be the length of <var>str</var>.</li><li>For each non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>len</var>, in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>)) as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <var>P</var> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> and !&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>P</var>) &#8805; <var>len</var>, in ascending numeric index order, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver": {"num": "9.1.9", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver\">#sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n      <p>When the [[Set]] internal method of <var>O</var> is called with property key <var>P</var>, value <var>V</var>, and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinarySet\"><a href=\"#sec-ordinaryset\">OrdinarySet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryset\"><h1><span class=\"secnum\">9.1.9.1</span>#sec-ordinaryset OrdinarySet ( O, P, V, Receiver )</h1>...</div><div id=\"excluded-sec-ordinarysetwithowndescriptor\"><h1><span class=\"secnum\">9.1.9.2</span>#sec-ordinarysetwithowndescriptor OrdinarySetWithOwnDescriptor ( O, P, V, Receiver, ownDesc )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p": {"num": "9.5.7", "title": "#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n      <p>When the [[HasProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"has\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[HasProperty]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[HasProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[HasProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-ownpropertykeys": {"num": "9.4.6.10", "title": "#sec-module-namespace-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-ownpropertykeys\">#sec-module-namespace-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>exports</var> be a copy of <var>O</var>.[[Exports]].</li><li>Let <var>symbolKeys</var> be !&#160;<emu-xref aoid=\"OrdinaryOwnPropertyKeys\"><a href=\"#sec-ordinaryownpropertykeys\">OrdinaryOwnPropertyKeys</a></emu-xref>(<var>O</var>).</li><li>Append all the entries of <var>symbolKeys</var> to the end of <var>exports</var>.</li><li>Return <var>exports</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-preventextensions": {"num": "9.5.4", "title": "#sec-proxy-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">#sec-proxy-object-internal-methods-and-internal-slots-preventextensions</span> [[PreventExtensions]] ( )</h1>\n      <p>When the [[PreventExtensions]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"preventExtensions\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[PreventExtensions]]().</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[PreventExtensions]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[PreventExtensions]] is a Boolean value.\n          </li>\n          <li>\n            [[PreventExtensions]] applied to the proxy object only returns <emu-val>true</emu-val> if [[IsExtensible]] applied to the proxy object's target object is <emu-val>false</emu-val>.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-arguments-exotic-objects-delete-p": {"num": "9.4.4.5", "title": "#sec-arguments-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-delete-p\">#sec-arguments-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>The [[Delete]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> when called with a property key <var>P</var> performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>args</var> be the arguments object.</li><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>args</var>, <var>P</var>).</li><li>If <var>result</var> is <emu-val>true</emu-val> and <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>Call <var>map</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "9.5.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>When the [[GetOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getOwnPropertyDescriptor\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li></ol></li><li>Let <var>trapResultObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>trapResultObj</var>) is neither Object nor Undefined, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>trapResultObj</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>resultDesc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>trapResultObj</var>).</li><li>Call <emu-xref aoid=\"CompletePropertyDescriptor\"><a href=\"#sec-completepropertydescriptor\">CompletePropertyDescriptor</a></emu-xref>(<var>resultDesc</var>).</li><li>Let <var>valid</var> be <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>resultDesc</var>, <var>targetDesc</var>).</li><li>If <var>valid</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>resultDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val> or <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>resultDesc</var> has a [[Writable]] field and <var>resultDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>resultDesc</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetOwnProperty]] must be either an Object or <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if the target object is not extensible, unless it does not exist as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as existent, if the target object is not extensible, unless it exists as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-configurable, unless it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as both non-configurable and non-writable, unless it exists as a non-configurable, non-writable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof": {"num": "9.5.1", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof</span> [[GetPrototypeOf]] ( )</h1>\n      <p>When the [[GetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetPrototypeOf]]().</li></ol></li><li>Let <var>handlerProto</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handlerProto</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>handlerProto</var>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>handlerProto</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>handlerProto</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetPrototypeOf]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetPrototypeOf]] must be either an Object or <emu-val>null</emu-val>.\n          </li>\n          <li>\n            If the target object is not extensible, [[GetPrototypeOf]] applied to the proxy object must return the same value as [[GetPrototypeOf]] applied to the proxy object's target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-defineownproperty-p-desc": {"num": "9.4.5.3", "title": "#sec-integer-indexed-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-defineownproperty-p-desc\">#sec-integer-indexed-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>When the [[DefineOwnProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has an [[Enumerable]] field and if <var>Desc</var>.[[Enumerable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has a [[Writable]] field and if <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has a [[Value]] field, then<ol><li>Let <var>value</var> be <var>Desc</var>.[[Value]].</li><li>Return ?&#160;<emu-xref aoid=\"IntegerIndexedElementSet\"><a href=\"#sec-integerindexedelementset\">IntegerIndexedElementSet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>, <var>value</var>).</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof": {"num": "9.1.1", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\">#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof</span> [[GetPrototypeOf]] ( )</h1>\n      <p>When the [[GetPrototypeOf]] internal method of <var>O</var> is called, the following steps are taken:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryGetPrototypeOf\"><a href=\"#sec-ordinarygetprototypeof\">OrdinaryGetPrototypeOf</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarygetprototypeof\"><h1><span class=\"secnum\">9.1.1.1</span>#sec-ordinarygetprototypeof OrdinaryGetPrototypeOf ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-hasproperty-p": {"num": "9.4.6.6", "title": "#sec-module-namespace-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-hasproperty-p\">#sec-module-namespace-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>When the [[HasProperty]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, return <emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is an element of <var>exports</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-set-p-v-receiver": {"num": "9.4.4.4", "title": "#sec-arguments-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-set-p-v-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-set-p-v-receiver\">#sec-arguments-exotic-objects-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n        <p>The [[Set]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> when called with property key <var>P</var>, value <var>V</var>, and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var> performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>args</var> be the arguments object.</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>args</var>, <var>Receiver</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>isMapped</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li><li>If <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>setStatus</var> be <emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>map</var>, <var>P</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>setStatus</var> is <emu-val>true</emu-val> because formal parameters mapped by argument objects are always writable.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinarySet\"><a href=\"#sec-ordinaryset\">OrdinarySet</a></emu-xref>(<var>args</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver": {"num": "9.1.8", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver\">#sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n      <p>When the [[Get]] internal method of <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryget\"><h1><span class=\"secnum\">9.1.8.1</span>#sec-ordinaryget OrdinaryGet ( O, P, Receiver )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-isextensible": {"num": "9.4.6.2", "title": "#sec-module-namespace-exotic-objects-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-isextensible\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-isextensible\">#sec-module-namespace-exotic-objects-isextensible</span> [[IsExtensible]] ( )</h1>\n        <p>When the [[IsExtensible]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v": {"num": "9.1.2", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v\">#sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n      <p>When the [[SetPrototypeOf]] internal method of <var>O</var> is called with argument <var>V</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinarySetPrototypeOf\"><a href=\"#sec-ordinarysetprototypeof\">OrdinarySetPrototypeOf</a></emu-xref>(<var>O</var>, <var>V</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarysetprototypeof\"><h1><span class=\"secnum\">9.1.2.1</span>#sec-ordinarysetprototypeof OrdinarySetPrototypeOf ( O, V )</h1>...</div></emu-clause>\n\n    "}, "sec-immutable-prototype-exotic-objects-setprototypeof-v": {"num": "9.4.7.1", "title": "#sec-immutable-prototype-exotic-objects-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-immutable-prototype-exotic-objects-setprototypeof-v\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-immutable-prototype-exotic-objects-setprototypeof-v\">#sec-immutable-prototype-exotic-objects-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n        <p>When the [[SetPrototypeOf]] internal method of an <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref> <var>O</var> is called with argument <var>V</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"SetImmutablePrototype\"><a href=\"#sec-set-immutable-prototype\">SetImmutablePrototype</a></emu-xref>(<var>O</var>, <var>V</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ecmascript-function-objects-construct-argumentslist-newtarget": {"num": "9.2.2", "title": "#sec-ecmascript-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-ecmascript-function-objects-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects-construct-argumentslist-newtarget\">#sec-ecmascript-function-objects-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method for an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> is called with parameters <var>argumentsList</var> and <var>newTarget</var>. <var>argumentsList</var> is a possibly empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values. The following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newTarget</var>) is Object.</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>kind</var> be <var>F</var>.[[ConstructorKind]].</li><li>If <var>kind</var> is <emu-const>base</emu-const>, then<ol><li>Let <var>thisArgument</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Object.prototype%\"</emu-val>).</li></ol></li><li>Let <var>calleeContext</var> be <emu-xref aoid=\"PrepareForOrdinaryCall\"><a href=\"#sec-prepareforordinarycall\">PrepareForOrdinaryCall</a></emu-xref>(<var>F</var>, <var>newTarget</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>kind</var> is <emu-const>base</emu-const>, perform <emu-xref aoid=\"OrdinaryCallBindThis\"><a href=\"#sec-ordinarycallbindthis\">OrdinaryCallBindThis</a></emu-xref>(<var>F</var>, <var>calleeContext</var>, <var>thisArgument</var>).</li><li>Let <var>constructorEnv</var> be the LexicalEnvironment of <var>calleeContext</var>.</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryCallEvaluateBody\"><a href=\"#sec-ordinarycallevaluatebody\">OrdinaryCallEvaluateBody</a></emu-xref>(<var>F</var>, <var>argumentsList</var>).</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>result</var>.[[Type]] is <emu-const>return</emu-const>, then<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>.[[Value]]) is Object, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>result</var>.[[Value]]).</li><li>If <var>kind</var> is <emu-const>base</emu-const>, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>thisArgument</var>).</li><li>If <var>result</var>.[[Value]] is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else, <emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>result</var>).</li><li>Return ? <var>constructorEnv</var>.GetThisBinding().</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-delete-p": {"num": "9.1.10", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-delete-p\">#sec-ordinary-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>When the [[Delete]] internal method of <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarydelete\"><h1><span class=\"secnum\">9.1.10.1</span>#sec-ordinarydelete OrdinaryDelete ( O, P )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-setprototypeof-v": {"num": "9.4.6.1", "title": "#sec-module-namespace-exotic-objects-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-setprototypeof-v\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-setprototypeof-v\">#sec-module-namespace-exotic-objects-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n        <p>When the [[SetPrototypeOf]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with argument <var>V</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"SetImmutablePrototype\"><a href=\"#sec-set-immutable-prototype\">SetImmutablePrototype</a></emu-xref>(<var>O</var>, <var>V</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget": {"num": "9.5.13", "title": "#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with parameters <var>argumentsList</var> which is a possibly empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values and <var>newTarget</var>. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>.</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"construct\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>target</var>, <var>argumentsList</var>, <var>newTarget</var>).</li></ol></li><li>Let <var>argArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>argumentsList</var>).</li><li>Let <var>newObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>argArray</var>, <var>newTarget</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newObj</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>newObj</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> only has a [[Construct]] internal method if the initial value of its [[ProxyTarget]] internal slot is an object that has a [[Construct]] internal method.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>[[Construct]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Construct]] must be an Object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-preventextensions": {"num": "9.4.6.3", "title": "#sec-module-namespace-exotic-objects-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-preventextensions\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-preventextensions\">#sec-module-namespace-exotic-objects-preventextensions</span> [[PreventExtensions]] ( )</h1>\n        <p>When the [[PreventExtensions]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver": {"num": "9.5.9", "title": "#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n      <p>When the [[Set]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, value <var>V</var>, and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"set\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Set]](<var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>V</var>, <var>Receiver</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Set]] is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Set]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Set]] is a Boolean value.\n          </li>\n          <li>\n            Cannot change the value of a property to be different from the value of the corresponding target object property if the corresponding target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            Cannot set the value of a property if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Set]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-module-namespace-exotic-objects-defineownproperty-p-desc", "sec-integer-indexed-exotic-objects-delete-p", "sec-ordinary-object-internal-methods-and-internal-slots-preventextensions", "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-proxy-object-internal-methods-and-internal-slots-isextensible", "sec-integer-indexed-exotic-objects-set-p-v-receiver", "sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist", "sec-array-exotic-objects-defineownproperty-p-desc", "sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p", "sec-string-exotic-objects-getownproperty-p", "sec-module-namespace-exotic-objects-delete-p", "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v", "sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver", "sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p", "sec-built-in-function-objects-call-thisargument-argumentslist", "sec-bound-function-exotic-objects-construct-argumentslist-newtarget", "sec-module-namespace-exotic-objects-get-p-receiver", "sec-module-namespace-exotic-objects-set-p-v-receiver", "sec-module-namespace-exotic-objects-getownproperty-p", "sec-arguments-exotic-objects-getownproperty-p", "sec-proxy-object-internal-methods-and-internal-slots-delete-p", "sec-integer-indexed-exotic-objects-ownpropertykeys", "sec-integer-indexed-exotic-objects-hasproperty-p", "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys", "sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-ordinary-object-internal-methods-and-internal-slots-isextensible", "sec-ecmascript-function-objects-call-thisargument-argumentslist", "sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys", "sec-string-exotic-objects-defineownproperty-p-desc", "sec-bound-function-exotic-objects-call-thisargument-argumentslist", "sec-built-in-function-objects-construct-argumentslist-newtarget", "sec-integer-indexed-exotic-objects-get-p-receiver", "sec-arguments-exotic-objects-defineownproperty-p-desc", "sec-arguments-exotic-objects-get-p-receiver", "sec-integer-indexed-exotic-objects-getownproperty-p", "sec-string-exotic-objects-ownpropertykeys", "sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver", "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p", "sec-module-namespace-exotic-objects-ownpropertykeys", "sec-proxy-object-internal-methods-and-internal-slots-preventextensions", "sec-arguments-exotic-objects-delete-p", "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p", "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof", "sec-integer-indexed-exotic-objects-defineownproperty-p-desc", "sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof", "sec-module-namespace-exotic-objects-hasproperty-p", "sec-arguments-exotic-objects-set-p-v-receiver", "sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver", "sec-module-namespace-exotic-objects-isextensible", "sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v", "sec-immutable-prototype-exotic-objects-setprototypeof-v", "sec-ecmascript-function-objects-construct-argumentslist-newtarget", "sec-ordinary-object-internal-methods-and-internal-slots-delete-p", "sec-module-namespace-exotic-objects-setprototypeof-v", "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget", "sec-module-namespace-exotic-objects-preventextensions", "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver"], "secData": {"sec-module-namespace-exotic-objects-defineownproperty-p-desc": {"num": "9.4.6.5", "title": "#sec-module-namespace-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-defineownproperty-p-desc\">#sec-module-namespace-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>The [[DefineOwnProperty]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Desc</var>).</li><li>Let <var>current</var> be ? <var>O</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>current</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Writable]] is present and has value <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Enumerable]] is present and has value <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Configurable]] is present and has value <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var>.[[Value]] is present, return <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>Desc</var>.[[Value]], <var>current</var>.[[Value]]).</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-delete-p": {"num": "9.4.5.6", "title": "#sec-integer-indexed-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-delete-p\">#sec-integer-indexed-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>The [[Delete]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>true</emu-val>; else return <emu-val>false</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-preventextensions": {"num": "9.1.4", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-preventextensions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-preventextensions\">#sec-ordinary-object-internal-methods-and-internal-slots-preventextensions</span> [[PreventExtensions]] ( )</h1>\n      <p>The [[PreventExtensions]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryPreventExtensions\"><a href=\"#sec-ordinarypreventextensions\">OrdinaryPreventExtensions</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarypreventextensions\"><h1><span class=\"secnum\">9.1.4.1</span>#sec-ordinarypreventextensions OrdinaryPreventExtensions ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "9.5.6", "title": "#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>The [[DefineOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"defineProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[DefineOwnProperty]](<var>P</var>, <var>Desc</var>).</li></ol></li><li>Let <var>descObj</var> be <emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>Desc</var>).</li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>descObj</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Let <var>settingConfigFalse</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else, let <var>settingConfigFalse</var> be <emu-val>false</emu-val>.</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>Desc</var>, <var>targetDesc</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, and <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var> has a [[Writable]] field and <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[DefineOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[DefineOwnProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be added, if the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be non-configurable, unless there exists a corresponding non-configurable own property of the target object.\n          </li>\n          <li>\n            A non-configurable property cannot be non-writable, unless there exists a corresponding non-configurable, non-writable own property of the target object.\n          </li>\n          <li>\n            If a property has a corresponding target object property then applying the <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> of the property to the target object using [[DefineOwnProperty]] will not throw an exception.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-isextensible": {"num": "9.5.3", "title": "#sec-proxy-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">#sec-proxy-object-internal-methods-and-internal-slots-isextensible</span> [[IsExtensible]] ( )</h1>\n      <p>The [[IsExtensible]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"isExtensible\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>Let <var>targetResult</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>booleanTrapResult</var>, <var>targetResult</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[IsExtensible]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[IsExtensible]] is a Boolean value.\n          </li>\n          <li>\n            [[IsExtensible]] applied to the proxy object must return the same value as [[IsExtensible]] applied to the proxy object's target object with the same argument.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-set-p-v-receiver": {"num": "9.4.5.5", "title": "#sec-integer-indexed-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-set-p-v-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-set-p-v-receiver\">#sec-integer-indexed-exotic-objects-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n        <p>The [[Set]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"IntegerIndexedElementSet\"><a href=\"#sec-integerindexedelementset\">IntegerIndexedElementSet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>, <var>V</var>).</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinarySet\"><a href=\"#sec-ordinaryset\">OrdinarySet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist": {"num": "9.5.12", "title": "#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\">#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"apply\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>target</var>, <var>thisArgument</var>, <var>argumentsList</var>).</li></ol></li><li>Let <var>argArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>argumentsList</var>).</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>thisArgument</var>, <var>argArray</var> &#187;).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> only has a [[Call]] internal method if the initial value of its [[ProxyTarget]] internal slot is an object that has a [[Call]] internal method.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array-exotic-objects-defineownproperty-p-desc": {"num": "9.4.2.1", "title": "#sec-array-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-array-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>The [[DefineOwnProperty]] internal method of an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> <var>A</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <var>P</var> is <emu-val>\"length\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"ArraySetLength\"><a href=\"#sec-arraysetlength\">ArraySetLength</a></emu-xref>(<var>A</var>, <var>Desc</var>).</li></ol></li><li>Else if <var>P</var> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, then<ol><li>Let <var>oldLenDesc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>oldLenDesc</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLenDesc</var>.[[Configurable]] is <emu-val>false</emu-val>.</li><li>Let <var>oldLen</var> be <var>oldLenDesc</var>.[[Value]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLen</var> is a non-negative <emu-xref href=\"#integral-number\"><a href=\"#integral-number\">integral Number</a></emu-xref>.</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>).</li><li>If <var>index</var> &#8805; <var>oldLen</var> and <var>oldLenDesc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>succeeded</var> be !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> &#8805; <var>oldLen</var>, then<ol><li>Set <var>oldLenDesc</var>.[[Value]] to <var>index</var> + <emu-val>1</emu-val><sub>&#120125;</sub>.</li><li>Let <var>succeeded</var> be <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>oldLenDesc</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>succeeded</var> is <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "9.1.5", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>The [[GetOwnProperty]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarygetownproperty\"><h1><span class=\"secnum\">9.1.5.1</span>#sec-ordinarygetownproperty OrdinaryGetOwnProperty ( O, P )</h1>...</div></emu-clause>\n\n    "}, "sec-string-exotic-objects-getownproperty-p": {"num": "9.4.3.1", "title": "#sec-string-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-string-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-exotic-objects-getownproperty-p\">#sec-string-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>The [[GetOwnProperty]] internal method of a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> <var>S</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>desc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>).</li><li>If <var>desc</var> is not <emu-val>undefined</emu-val>, return <var>desc</var>.</li><li>Return !&#160;<emu-xref aoid=\"StringGetOwnProperty\"><a href=\"#sec-stringgetownproperty\">StringGetOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-delete-p": {"num": "9.4.6.9", "title": "#sec-module-namespace-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-delete-p\">#sec-module-namespace-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>The [[Delete]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is an element of <var>exports</var>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v": {"num": "9.5.2", "title": "#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n      <p>The [[SetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>V</var> (an Object or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Either <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Null.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"setPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[SetPrototypeOf]](<var>V</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>V</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[SetPrototypeOf]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[SetPrototypeOf]] is a Boolean value.\n          </li>\n          <li>\n            If the target object is not extensible, the argument value must be the same as the result of [[GetPrototypeOf]] applied to target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver": {"num": "9.5.8", "title": "#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n      <p>The [[Get]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"get\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Get]](<var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>Receiver</var> &#187;).</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>trapResult</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Get]] is <emu-val>undefined</emu-val>, then<ol><li>If <var>trapResult</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Get]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            The value reported for a property must be <emu-val>undefined</emu-val> if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Get]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p": {"num": "9.1.7", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p\">#sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n      <p>The [[HasProperty]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryhasproperty\"><h1><span class=\"secnum\">9.1.7.1</span>#sec-ordinaryhasproperty OrdinaryHasProperty ( O, P )</h1>...</div></emu-clause>\n\n    "}, "sec-built-in-function-objects-call-thisargument-argumentslist": {"num": "9.3.1", "title": "#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">#sec-built-in-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>callerContext</var> is not already suspended, suspend <var>callerContext</var>.</li><li>Let <var>calleeContext</var> be a new <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>calleeContext</var> to <var>F</var>.</li><li>Let <var>calleeRealm</var> be <var>F</var>.[[Realm]].</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>calleeContext</var> to <var>calleeRealm</var>.</li><li>Set the ScriptOrModule of <var>calleeContext</var> to <emu-val>null</emu-val>.</li><li>Perform any necessary <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> initialization of <var>calleeContext</var>.</li><li>Push <var>calleeContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li id=\"step-call-builtin-function-result\">Let <var>result</var> be the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> that is the result of evaluating <var>F</var> in a manner that conforms to the specification of <var>F</var>. <var>thisArgument</var> is the <emu-val>this</emu-val> value, <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>.</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> it must not be destroyed if it has been suspended and retained by an accessible generator object for later resumption.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-bound-function-exotic-objects-construct-argumentslist-newtarget": {"num": "9.4.1.2", "title": "#sec-bound-function-exotic-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-bound-function-exotic-objects-construct-argumentslist-newtarget\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bound-function-exotic-objects-construct-argumentslist-newtarget\">#sec-bound-function-exotic-objects-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n        <p>The [[Construct]] internal method of a <emu-xref href=\"#bound-function-exotic-object\"><a href=\"#bound-function-exotic-object\">bound function exotic object</a></emu-xref> <var>F</var> takes arguments <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values) and <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>target</var> be <var>F</var>.[[BoundTargetFunction]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>.</li><li>Let <var>boundArgs</var> be <var>F</var>.[[BoundArguments]].</li><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>boundArgs</var>, followed by the elements of <var>argumentsList</var>.</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>F</var>, <var>newTarget</var>) is <emu-val>true</emu-val>, set <var>newTarget</var> to <var>target</var>.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>target</var>, <var>args</var>, <var>newTarget</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-get-p-receiver": {"num": "9.4.6.7", "title": "#sec-module-namespace-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-get-p-receiver\">#sec-module-namespace-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>The [[Get]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is not an element of <var>exports</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>m</var> be <var>O</var>.[[Module]].</li><li>Let <var>binding</var> be ! <var>m</var>.ResolveExport(<var>P</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>binding</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li><li>Let <var>targetModule</var> be <var>binding</var>.[[Module]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetModule</var> is not <emu-val>undefined</emu-val>.</li><li>If <var>binding</var>.[[BindingName]] is <emu-val>\"*namespace*\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>targetModule</var>).</li></ol></li><li>Let <var>targetEnv</var> be <var>targetModule</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-val>undefined</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>binding</var>.[[BindingName]], <emu-val>true</emu-val>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ResolveExport is side-effect free. Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result. An implementation might choose to pre-compute or cache the ResolveExport results for the [[Exports]] of each <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-set-p-v-receiver": {"num": "9.4.6.8", "title": "#sec-module-namespace-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-set-p-v-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-set-p-v-receiver\">#sec-module-namespace-exotic-objects-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n        <p>The [[Set]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-getownproperty-p": {"num": "9.4.6.4", "title": "#sec-module-namespace-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-getownproperty-p\">#sec-module-namespace-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>The [[GetOwnProperty]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, return <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is not an element of <var>exports</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>value</var> be ? <var>O</var>.[[Get]](<var>P</var>, <var>O</var>).</li><li>Return PropertyDescriptor { [[Value]]: <var>value</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-getownproperty-p": {"num": "9.4.4.1", "title": "#sec-arguments-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-getownproperty-p\">#sec-arguments-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>The [[GetOwnProperty]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> <var>args</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>desc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>args</var>, <var>P</var>).</li><li>If <var>desc</var> is <emu-val>undefined</emu-val>, return <var>desc</var>.</li><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>If <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>desc</var>.[[Value]] to <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li><li>Return <var>desc</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-delete-p": {"num": "9.5.10", "title": "#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">#sec-proxy-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>The [[Delete]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"deleteProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Delete]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Delete]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as an own property of the target object and the target object is non-extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-ownpropertykeys": {"num": "9.4.5.7", "title": "#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>The [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]]) is <emu-val>false</emu-val>, then<ol><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>O</var>.[[ArrayLength]], in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>)) as the last element of <var>keys</var>.</li></ol></li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-hasproperty-p": {"num": "9.4.5.2", "title": "#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>The [[HasProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys": {"num": "9.5.11", "title": "#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n      <p>The [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"ownKeys\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[OwnPropertyKeys]]().</li></ol></li><li>Let <var>trapResultArray</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"CreateListFromArrayLike\"><a href=\"#sec-createlistfromarraylike\">CreateListFromArrayLike</a></emu-xref>(<var>trapResultArray</var>, &#171; String, Symbol &#187;).</li><li>If <var>trapResult</var> contains any duplicate entries, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>targetKeys</var> be ? <var>target</var>.[[OwnPropertyKeys]]().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are only String and Symbol values.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> contains no duplicate entries.</li><li>Let <var>targetConfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>targetNonconfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>key</var> of <var>targetKeys</var>, do<ol><li>Let <var>desc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>key</var>).</li><li>If <var>desc</var> is not <emu-val>undefined</emu-val> and <var>desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Append <var>key</var> as an element of <var>targetNonconfigurableKeys</var>.</li></ol></li><li>Else,<ol><li>Append <var>key</var> as an element of <var>targetConfigurableKeys</var>.</li></ol></li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val> and <var>targetNonconfigurableKeys</var> is empty, then<ol><li>Return <var>trapResult</var>.</li></ol></li><li>Let <var>uncheckedResultKeys</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetNonconfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetConfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>uncheckedResultKeys</var> is not empty, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[OwnPropertyKeys]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[OwnPropertyKeys]] is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.\n          </li>\n          <li>\n            The returned <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> contains no duplicate entries.\n          </li>\n          <li>\n            The Type of each result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> element is either String or Symbol.\n          </li>\n          <li>\n            The result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain the keys of all non-configurable own properties of the target object.\n          </li>\n          <li>\n            If the target object is not extensible, then the result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain all the keys of the own properties of the target object and no other values.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "9.1.6", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>The [[DefineOwnProperty]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarydefineownproperty\"><h1><span class=\"secnum\">9.1.6.1</span>#sec-ordinarydefineownproperty OrdinaryDefineOwnProperty ( O, P, Desc )</h1>...</div><div id=\"excluded-sec-iscompatiblepropertydescriptor\"><h1><span class=\"secnum\">9.1.6.2</span>#sec-iscompatiblepropertydescriptor IsCompatiblePropertyDescriptor ( Extensible, Desc, Current )</h1>...</div><div id=\"excluded-sec-validateandapplypropertydescriptor\"><h1><span class=\"secnum\">9.1.6.3</span>#sec-validateandapplypropertydescriptor ValidateAndApplyPropertyDescriptor ( O, P, extensible, Desc, current )</h1>...</div></emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-isextensible": {"num": "9.1.3", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-isextensible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-isextensible\">#sec-ordinary-object-internal-methods-and-internal-slots-isextensible</span> [[IsExtensible]] ( )</h1>\n      <p>The [[IsExtensible]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryIsExtensible\"><a href=\"#sec-ordinaryisextensible\">OrdinaryIsExtensible</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryisextensible\"><h1><span class=\"secnum\">9.1.3.1</span>#sec-ordinaryisextensible OrdinaryIsExtensible ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-ecmascript-function-objects-call-thisargument-argumentslist": {"num": "9.2.1", "title": "#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li>If <var>F</var>.[[IsClassConstructor]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>calleeContext</var> be <emu-xref aoid=\"PrepareForOrdinaryCall\"><a href=\"#sec-prepareforordinarycall\">PrepareForOrdinaryCall</a></emu-xref>(<var>F</var>, <emu-val>undefined</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Perform <emu-xref aoid=\"OrdinaryCallBindThis\"><a href=\"#sec-ordinarycallbindthis\">OrdinaryCallBindThis</a></emu-xref>(<var>F</var>, <var>calleeContext</var>, <var>thisArgument</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryCallEvaluateBody\"><a href=\"#sec-ordinarycallevaluatebody\">OrdinaryCallEvaluateBody</a></emu-xref>(<var>F</var>, <var>argumentsList</var>).</li><li id=\"step-call-pop-context-stack\">Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>result</var>.[[Type]] is <emu-const>return</emu-const>, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>result</var>.[[Value]]).</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>result</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> in step <emu-xref href=\"#step-call-pop-context-stack\"><a href=\"#step-call-pop-context-stack\" class=\"excluded-xref\" excluded-id=\"step-call-pop-context-stack\">#step-call-pop-context-stack</a></emu-xref> it must not be destroyed if it is suspended and retained for later resumption by an accessible generator object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-prepareforordinarycall\"><h1><span class=\"secnum\">9.2.1.1</span>#sec-prepareforordinarycall PrepareForOrdinaryCall ( F, newTarget )</h1>...</div><div id=\"excluded-sec-ordinarycallbindthis\"><h1><span class=\"secnum\">9.2.1.2</span>#sec-ordinarycallbindthis OrdinaryCallBindThis ( F, calleeContext, thisArgument )</h1>...</div><div id=\"excluded-sec-ordinarycallevaluatebody\"><h1><span class=\"secnum\">9.2.1.3</span>#sec-ordinarycallevaluatebody OrdinaryCallEvaluateBody ( F, argumentsList )</h1>...</div></emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys": {"num": "9.1.11", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys\">#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n      <p>The [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryOwnPropertyKeys\"><a href=\"#sec-ordinaryownpropertykeys\">OrdinaryOwnPropertyKeys</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryownpropertykeys\"><h1><span class=\"secnum\">9.1.11.1</span>#sec-ordinaryownpropertykeys OrdinaryOwnPropertyKeys ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-string-exotic-objects-defineownproperty-p-desc": {"num": "9.4.3.2", "title": "#sec-string-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-string-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-exotic-objects-defineownproperty-p-desc\">#sec-string-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>The [[DefineOwnProperty]] internal method of a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> <var>S</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>stringDesc</var> be !&#160;<emu-xref aoid=\"StringGetOwnProperty\"><a href=\"#sec-stringgetownproperty\">StringGetOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>).</li><li>If <var>stringDesc</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>extensible</var> be <var>S</var>.[[Extensible]].</li><li>Return !&#160;<emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensible</var>, <var>Desc</var>, <var>stringDesc</var>).</li></ol></li><li>Return !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>S</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-bound-function-exotic-objects-call-thisargument-argumentslist": {"num": "9.4.1.1", "title": "#sec-bound-function-exotic-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-bound-function-exotic-objects-call-thisargument-argumentslist\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bound-function-exotic-objects-call-thisargument-argumentslist\">#sec-bound-function-exotic-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n        <p>The [[Call]] internal method of a <emu-xref href=\"#bound-function-exotic-object\"><a href=\"#bound-function-exotic-object\">bound function exotic object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>target</var> be <var>F</var>.[[BoundTargetFunction]].</li><li>Let <var>boundThis</var> be <var>F</var>.[[BoundThis]].</li><li>Let <var>boundArgs</var> be <var>F</var>.[[BoundArguments]].</li><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>boundArgs</var>, followed by the elements of <var>argumentsList</var>.</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>target</var>, <var>boundThis</var>, <var>args</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-built-in-function-objects-construct-argumentslist-newtarget": {"num": "9.3.2", "title": "#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-built-in-function-objects-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects-construct-argumentslist-newtarget\">#sec-built-in-function-objects-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values) and <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). The steps performed are the same as [[Call]] (see <emu-xref href=\"#sec-built-in-function-objects-call-thisargument-argumentslist\"><a href=\"#sec-built-in-function-objects-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">#sec-built-in-function-objects-call-thisargument-argumentslist</a></emu-xref>) except that step <emu-xref href=\"#step-call-builtin-function-result\"><a href=\"#step-call-builtin-function-result\" class=\"excluded-xref\" excluded-id=\"step-call-builtin-function-result\">#step-call-builtin-function-result</a></emu-xref> is replaced by:</p>\n      <emu-alg replaces-step=\"step-call-builtin-function-result\"><ol start=\"10\"><li>Let <var>result</var> be the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> that is the result of evaluating <var>F</var> in a manner that conforms to the specification of <var>F</var>. The <emu-val>this</emu-val> value is uninitialized, <var>argumentsList</var> provides the named parameters, and <var>newTarget</var> provides the NewTarget value.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-get-p-receiver": {"num": "9.4.5.4", "title": "#sec-integer-indexed-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-get-p-receiver\">#sec-integer-indexed-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>The [[Get]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"IntegerIndexedElementGet\"><a href=\"#sec-integerindexedelementget\">IntegerIndexedElementGet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-defineownproperty-p-desc": {"num": "9.4.4.2", "title": "#sec-arguments-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">#sec-arguments-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>The [[DefineOwnProperty]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> <var>args</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be <emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>Let <var>newArgDesc</var> be <var>Desc</var>.</li><li>If <var>isMapped</var> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var>.[[Value]] is not present and <var>Desc</var>.[[Writable]] is present and its value is <emu-val>false</emu-val>, then<ol><li>Set <var>newArgDesc</var> to a copy of <var>Desc</var>.</li><li>Set <var>newArgDesc</var>.[[Value]] to <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li></ol></li><li>Let <var>allowed</var> be ?&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>args</var>, <var>P</var>, <var>newArgDesc</var>).</li><li>If <var>allowed</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, then<ol><li>Call <var>map</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Else,<ol><li>If <var>Desc</var>.[[Value]] is present, then<ol><li>Let <var>setStatus</var> be <emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>map</var>, <var>P</var>, <var>Desc</var>.[[Value]], <emu-val>false</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>setStatus</var> is <emu-val>true</emu-val> because formal parameters mapped by argument objects are always writable.</li></ol></li><li>If <var>Desc</var>.[[Writable]] is present and its value is <emu-val>false</emu-val>, then<ol><li>Call <var>map</var>.[[Delete]](<var>P</var>).</li></ol></li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-get-p-receiver": {"num": "9.4.4.3", "title": "#sec-arguments-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-get-p-receiver\">#sec-arguments-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>The [[Get]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> <var>args</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>If <var>isMapped</var> is <emu-val>false</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>args</var>, <var>P</var>, <var>Receiver</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>map</var> contains a formal parameter mapping for <var>P</var>.</li><li>Return <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-getownproperty-p": {"num": "9.4.5.1", "title": "#sec-integer-indexed-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-getownproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-getownproperty-p\">#sec-integer-indexed-exotic-objects-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n        <p>The [[GetOwnProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>value</var> be !&#160;<emu-xref aoid=\"IntegerIndexedElementGet\"><a href=\"#sec-integerindexedelementget\">IntegerIndexedElementGet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li><li>If <var>value</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Return the PropertyDescriptor { [[Value]]: <var>value</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li></ol></li></ol></li><li>Return <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-string-exotic-objects-ownpropertykeys": {"num": "9.4.3.3", "title": "#sec-string-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-string-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-exotic-objects-ownpropertykeys\">#sec-string-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>The [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>str</var> be <var>O</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>str</var>) is String.</li><li>Let <var>len</var> be the length of <var>str</var>.</li><li>For each non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>len</var>, in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>)) as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <var>P</var> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> and !&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>P</var>) &#8805; <var>len</var>, in ascending numeric index order, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver": {"num": "9.1.9", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver\">#sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n      <p>The [[Set]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinarySet\"><a href=\"#sec-ordinaryset\">OrdinarySet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryset\"><h1><span class=\"secnum\">9.1.9.1</span>#sec-ordinaryset OrdinarySet ( O, P, V, Receiver )</h1>...</div><div id=\"excluded-sec-ordinarysetwithowndescriptor\"><h1><span class=\"secnum\">9.1.9.2</span>#sec-ordinarysetwithowndescriptor OrdinarySetWithOwnDescriptor ( O, P, V, Receiver, ownDesc )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p": {"num": "9.5.7", "title": "#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n      <p>The [[HasProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"has\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[HasProperty]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[HasProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[HasProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-ownpropertykeys": {"num": "9.4.6.10", "title": "#sec-module-namespace-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-ownpropertykeys\">#sec-module-namespace-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>The [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>exports</var> be a copy of <var>O</var>.[[Exports]].</li><li>Let <var>symbolKeys</var> be !&#160;<emu-xref aoid=\"OrdinaryOwnPropertyKeys\"><a href=\"#sec-ordinaryownpropertykeys\">OrdinaryOwnPropertyKeys</a></emu-xref>(<var>O</var>).</li><li>Append all the entries of <var>symbolKeys</var> to the end of <var>exports</var>.</li><li>Return <var>exports</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-preventextensions": {"num": "9.5.4", "title": "#sec-proxy-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">#sec-proxy-object-internal-methods-and-internal-slots-preventextensions</span> [[PreventExtensions]] ( )</h1>\n      <p>The [[PreventExtensions]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"preventExtensions\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[PreventExtensions]]().</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[PreventExtensions]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[PreventExtensions]] is a Boolean value.\n          </li>\n          <li>\n            [[PreventExtensions]] applied to the proxy object only returns <emu-val>true</emu-val> if [[IsExtensible]] applied to the proxy object's target object is <emu-val>false</emu-val>.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-arguments-exotic-objects-delete-p": {"num": "9.4.4.5", "title": "#sec-arguments-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-delete-p\">#sec-arguments-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>The [[Delete]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> <var>args</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>args</var>, <var>P</var>).</li><li>If <var>result</var> is <emu-val>true</emu-val> and <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>Call <var>map</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "9.5.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>The [[GetOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getOwnPropertyDescriptor\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li></ol></li><li>Let <var>trapResultObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>trapResultObj</var>) is neither Object nor Undefined, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>trapResultObj</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>resultDesc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>trapResultObj</var>).</li><li>Call <emu-xref aoid=\"CompletePropertyDescriptor\"><a href=\"#sec-completepropertydescriptor\">CompletePropertyDescriptor</a></emu-xref>(<var>resultDesc</var>).</li><li>Let <var>valid</var> be <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>resultDesc</var>, <var>targetDesc</var>).</li><li>If <var>valid</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>resultDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val> or <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>resultDesc</var> has a [[Writable]] field and <var>resultDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>resultDesc</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetOwnProperty]] must be either an Object or <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if the target object is not extensible, unless it does not exist as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as existent, if the target object is not extensible, unless it exists as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-configurable, unless it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as both non-configurable and non-writable, unless it exists as a non-configurable, non-writable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof": {"num": "9.5.1", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof</span> [[GetPrototypeOf]] ( )</h1>\n      <p>The [[GetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetPrototypeOf]]().</li></ol></li><li>Let <var>handlerProto</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handlerProto</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>handlerProto</var>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>handlerProto</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>handlerProto</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetPrototypeOf]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetPrototypeOf]] must be either an Object or <emu-val>null</emu-val>.\n          </li>\n          <li>\n            If the target object is not extensible, [[GetPrototypeOf]] applied to the proxy object must return the same value as [[GetPrototypeOf]] applied to the proxy object's target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-defineownproperty-p-desc": {"num": "9.4.5.3", "title": "#sec-integer-indexed-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-defineownproperty-p-desc\">#sec-integer-indexed-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>The [[DefineOwnProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>Desc</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has an [[Enumerable]] field and if <var>Desc</var>.[[Enumerable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has a [[Writable]] field and if <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>Desc</var> has a [[Value]] field, then<ol><li>Let <var>value</var> be <var>Desc</var>.[[Value]].</li><li>Return ?&#160;<emu-xref aoid=\"IntegerIndexedElementSet\"><a href=\"#sec-integerindexedelementset\">IntegerIndexedElementSet</a></emu-xref>(<var>O</var>, <var>numericIndex</var>, <var>value</var>).</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Desc</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof": {"num": "9.1.1", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\">#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof</span> [[GetPrototypeOf]] ( )</h1>\n      <p>The [[GetPrototypeOf]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinaryGetPrototypeOf\"><a href=\"#sec-ordinarygetprototypeof\">OrdinaryGetPrototypeOf</a></emu-xref>(<var>O</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarygetprototypeof\"><h1><span class=\"secnum\">9.1.1.1</span>#sec-ordinarygetprototypeof OrdinaryGetPrototypeOf ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-hasproperty-p": {"num": "9.4.6.6", "title": "#sec-module-namespace-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-hasproperty-p\">#sec-module-namespace-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>The [[HasProperty]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, return <emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is an element of <var>exports</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arguments-exotic-objects-set-p-v-receiver": {"num": "9.4.4.4", "title": "#sec-arguments-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-arguments-exotic-objects-set-p-v-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arguments-exotic-objects-set-p-v-receiver\">#sec-arguments-exotic-objects-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n        <p>The [[Set]] internal method of an <emu-xref href=\"#arguments-exotic-object\"><a href=\"#arguments-exotic-object\">arguments exotic object</a></emu-xref> <var>args</var> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>args</var>, <var>Receiver</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>isMapped</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>map</var> be <var>args</var>.[[ParameterMap]].</li><li>Let <var>isMapped</var> be !&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>map</var>, <var>P</var>).</li></ol></li><li>If <var>isMapped</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>setStatus</var> be <emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>map</var>, <var>P</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>setStatus</var> is <emu-val>true</emu-val> because formal parameters mapped by argument objects are always writable.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinarySet\"><a href=\"#sec-ordinaryset\">OrdinarySet</a></emu-xref>(<var>args</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver": {"num": "9.1.8", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver\">#sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n      <p>The [[Get]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinaryget\"><h1><span class=\"secnum\">9.1.8.1</span>#sec-ordinaryget OrdinaryGet ( O, P, Receiver )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-isextensible": {"num": "9.4.6.2", "title": "#sec-module-namespace-exotic-objects-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-isextensible\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-isextensible\">#sec-module-namespace-exotic-objects-isextensible</span> [[IsExtensible]] ( )</h1>\n        <p>The [[IsExtensible]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> takes no arguments. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v": {"num": "9.1.2", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v\">#sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n      <p>The [[SetPrototypeOf]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes argument <var>V</var> (an Object or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return !&#160;<emu-xref aoid=\"OrdinarySetPrototypeOf\"><a href=\"#sec-ordinarysetprototypeof\">OrdinarySetPrototypeOf</a></emu-xref>(<var>O</var>, <var>V</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarysetprototypeof\"><h1><span class=\"secnum\">9.1.2.1</span>#sec-ordinarysetprototypeof OrdinarySetPrototypeOf ( O, V )</h1>...</div></emu-clause>\n\n    "}, "sec-immutable-prototype-exotic-objects-setprototypeof-v": {"num": "9.4.7.1", "title": "#sec-immutable-prototype-exotic-objects-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-immutable-prototype-exotic-objects-setprototypeof-v\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-immutable-prototype-exotic-objects-setprototypeof-v\">#sec-immutable-prototype-exotic-objects-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n        <p>The [[SetPrototypeOf]] internal method of an <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref> <var>O</var> takes argument <var>V</var> (an Object or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"SetImmutablePrototype\"><a href=\"#sec-set-immutable-prototype\">SetImmutablePrototype</a></emu-xref>(<var>O</var>, <var>V</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ecmascript-function-objects-construct-argumentslist-newtarget": {"num": "9.2.2", "title": "#sec-ecmascript-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-ecmascript-function-objects-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects-construct-argumentslist-newtarget\">#sec-ecmascript-function-objects-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values) and <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newTarget</var>) is Object.</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>kind</var> be <var>F</var>.[[ConstructorKind]].</li><li>If <var>kind</var> is <emu-const>base</emu-const>, then<ol><li>Let <var>thisArgument</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Object.prototype%\"</emu-val>).</li></ol></li><li>Let <var>calleeContext</var> be <emu-xref aoid=\"PrepareForOrdinaryCall\"><a href=\"#sec-prepareforordinarycall\">PrepareForOrdinaryCall</a></emu-xref>(<var>F</var>, <var>newTarget</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>kind</var> is <emu-const>base</emu-const>, perform <emu-xref aoid=\"OrdinaryCallBindThis\"><a href=\"#sec-ordinarycallbindthis\">OrdinaryCallBindThis</a></emu-xref>(<var>F</var>, <var>calleeContext</var>, <var>thisArgument</var>).</li><li>Let <var>constructorEnv</var> be the LexicalEnvironment of <var>calleeContext</var>.</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryCallEvaluateBody\"><a href=\"#sec-ordinarycallevaluatebody\">OrdinaryCallEvaluateBody</a></emu-xref>(<var>F</var>, <var>argumentsList</var>).</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>result</var>.[[Type]] is <emu-const>return</emu-const>, then<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>.[[Value]]) is Object, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>result</var>.[[Value]]).</li><li>If <var>kind</var> is <emu-const>base</emu-const>, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>thisArgument</var>).</li><li>If <var>result</var>.[[Value]] is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else, <emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>result</var>).</li><li>Return ? <var>constructorEnv</var>.GetThisBinding().</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ordinary-object-internal-methods-and-internal-slots-delete-p": {"num": "9.1.10", "title": "#sec-ordinary-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-ordinary-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-delete-p\">#sec-ordinary-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>The [[Delete]] internal method of an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-ordinarydelete\"><h1><span class=\"secnum\">9.1.10.1</span>#sec-ordinarydelete OrdinaryDelete ( O, P )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-setprototypeof-v": {"num": "9.4.6.1", "title": "#sec-module-namespace-exotic-objects-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-setprototypeof-v\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-setprototypeof-v\">#sec-module-namespace-exotic-objects-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n        <p>The [[SetPrototypeOf]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> takes argument <var>V</var> (an Object or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"SetImmutablePrototype\"><a href=\"#sec-set-immutable-prototype\">SetImmutablePrototype</a></emu-xref>(<var>O</var>, <var>V</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget": {"num": "9.5.13", "title": "#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values) and <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>.</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"construct\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>target</var>, <var>argumentsList</var>, <var>newTarget</var>).</li></ol></li><li>Let <var>argArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>argumentsList</var>).</li><li>Let <var>newObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>argArray</var>, <var>newTarget</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newObj</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>newObj</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> only has a [[Construct]] internal method if the initial value of its [[ProxyTarget]] internal slot is an object that has a [[Construct]] internal method.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>[[Construct]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Construct]] must be an Object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-module-namespace-exotic-objects-preventextensions": {"num": "9.4.6.3", "title": "#sec-module-namespace-exotic-objects-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-preventextensions\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-preventextensions\">#sec-module-namespace-exotic-objects-preventextensions</span> [[PreventExtensions]] ( )</h1>\n        <p>The [[PreventExtensions]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> takes no arguments. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver": {"num": "9.5.9", "title": "#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n      <p>The [[Set]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"set\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Set]](<var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>V</var>, <var>Receiver</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Set]] is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Set]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Set]] is a Boolean value.\n          </li>\n          <li>\n            Cannot change the value of a property to be different from the value of the corresponding target object property if the corresponding target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            Cannot set the value of a property if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Set]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}}