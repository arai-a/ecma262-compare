{"from": {"secList": ["sec-module-semantics-static-semantics-early-errors", "sec-source-text-module-records", "sec-exports-static-semantics-exportednames", "sec-cyclic-module-records", "sec-module-semantics", "sec-exports", "sec-moduledeclarationlinking", "sec-moduleevaluation", "sec-static-semantics-exportedbindings", "sec-module-semantics-static-semantics-exportednames"], "secData": {"sec-module-semantics-static-semantics-early-errors": {"num": "16.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the ExportedNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsDuplicateLabels\"><a href=\"#sec-static-semantics-containsduplicatelabels\">ContainsDuplicateLabels</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedBreakTarget\"><a href=\"#sec-static-semantics-containsundefinedbreaktarget\">ContainsUndefinedBreakTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedContinueTarget\"><a href=\"#sec-static-semantics-containsundefinedcontinuetarget\">ContainsUndefinedContinueTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate ExportedNames rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-source-text-module-records": {"num": "16.2.1.9", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, link, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in <emu-xref href=\"#table-additional-fields-of-source-text-module-records\"><a href=\"#table-additional-fields-of-source-text-module-records\" class=\"excluded-xref\" excluded-id=\"table-additional-fields-of-source-text-module-records\">#table-additional-fields-of-source-text-module-records</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-additional-fields-of-source-text-module-records\" caption=\"Additional Fields of Source Text Module Records\" oldids=\"table-38\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-fields-of-source-text-module-records\">#table-additional-fields-of-source-text-module-records</span>: Additional Fields of Source Text Module Records</figcaption><span id=\"table-38\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Context]]\n              </td>\n              <td>\n                An ECMAScript <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> associated with this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportMeta]]\n              </td>\n              <td>\n                Object\n              </td>\n              <td>\n                An object exposed through the <code>import.meta</code> meta property. It is <emu-const>empty</emu-const> until it is accessed by ECMAScript code.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to <code>export *</code> declarations that occur within the module, not including <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-importentry-record-fields\"><a href=\"#table-importentry-record-fields\" class=\"excluded-xref\" excluded-id=\"table-importentry-record-fields\">#table-importentry-record-fields</a></emu-xref>:</p>\n        <emu-table id=\"table-importentry-record-fields\" caption=\"ImportEntry Record Fields\" oldids=\"table-39\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-importentry-record-fields\">#table-importentry-record-fields</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption><span id=\"table-39\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <emu-val>\"*\"</emu-val> indicates that the import request is for the target module's namespace object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-import-forms-mapping-to-importentry-records\"><a href=\"#table-import-forms-mapping-to-importentry-records\" class=\"excluded-xref\" excluded-id=\"table-import-forms-mapping-to-importentry-records\">#table-import-forms-mapping-to-importentry-records</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-import-forms-mapping-to-importentry-records\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\" oldids=\"table-40\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-import-forms-mapping-to-importentry-records\">#table-import-forms-mapping-to-importentry-records</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption><span id=\"table-40\"></span>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-exportentry-records\"><a href=\"#table-exportentry-records\" class=\"excluded-xref\" excluded-id=\"table-exportentry-records\">#table-exportentry-records</a></emu-xref>:</p>\n        <emu-table id=\"table-exportentry-records\" caption=\"ExportEntry Record Fields\" oldids=\"table-41\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-exportentry-records\">#table-exportentry-records</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption><span id=\"table-41\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name used to export this binding by this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <emu-val>\"*\"</emu-val> indicates that the export request is for all exported bindings.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-export-forms-mapping-to-exportentry-records\"><a href=\"#table-export-forms-mapping-to-exportentry-records\" class=\"excluded-xref\" excluded-id=\"table-export-forms-mapping-to-exportentry-records\">#table-export-forms-mapping-to-exportentry-records</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-export-forms-mapping-to-exportentry-records\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\" oldids=\"table-42\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-export-forms-mapping-to-exportentry-records\">#table-export-forms-mapping-to-exportentry-records</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption><span id=\"table-42\"></span>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                </th>\n                <th>\n                  [[ExportName]]\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f() {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"f\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function () {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*default*\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*default*\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">16.2.1.9.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">16.2.1.9.2</span>#sec-getexportednames GetExportedNames ( [ exportStarSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">16.2.1.9.3</span>#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">16.2.1.9.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">16.2.1.9.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-exports-static-semantics-exportednames": {"num": "16.2.3.3", "title": "#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-exports-static-semantics-exportednames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportednames\">#sec-exports-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-see-also-para op=\"ExportedNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0a40575\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"76d083ed\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6c6de801\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"828f5ae3\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"71d1417e\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c3c3cb8d\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e1fe9c4f\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1907cd0c\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedNames of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedNames of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"a9552c46\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-cyclic-module-records": {"num": "16.2.1.8", "title": "#sec-cyclic-module-records Cyclic Module Records", "html": "<emu-clause id=\"sec-cyclic-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-cyclic-module-records\">#sec-cyclic-module-records</span> Cyclic Module Records</h1>\n        <p>A <dfn id=\"cyclic-module-record\">Cyclic Module Record</dfn> is used to represent information about a module that can participate in dependency cycles with other modules that are subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type. Module Records that are not subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type must not participate in dependency cycles with Source Text Module Records.</p>\n        <p>In addition to the fields defined in <emu-xref href=\"#table-module-record-fields\"><a href=\"#table-module-record-fields\" class=\"excluded-xref\" excluded-id=\"table-module-record-fields\">#table-module-record-fields</a></emu-xref> Cyclic Module Records have the additional fields listed in <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-fields\" caption=\"Additional Fields of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</span>: Additional Fields of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Field Name\n                </th>\n                <th>\n                  Value Type\n                </th>\n                <th>\n                  Meaning\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  [[Status]]\n                </td>\n                <td>\n                  <emu-const>unlinked</emu-const> | <emu-const>linking</emu-const> | <emu-const>linked</emu-const> | <emu-const>evaluating</emu-const> | <emu-const>evaluated</emu-const>\n                </td>\n                <td>\n                  Initially <emu-const>unlinked</emu-const>. Transitions to <emu-const>linking</emu-const>, <emu-const>linked</emu-const>, <emu-const>evaluating</emu-const>, <emu-const>evaluated</emu-const> (in that order) as the module progresses throughout its lifecycle.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[EvaluationError]]\n                </td>\n                <td>\n                  An <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> | <emu-val>undefined</emu-val>\n                </td>\n                <td>\n                  A completion of type <emu-const>throw</emu-const> representing the exception that occurred during evaluation. <emu-val>undefined</emu-val> if no exception occurred or if [[Status]] is not <emu-const>evaluated</emu-const>.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSIndex]]\n                </td>\n                <td>\n                  <emu-xref href=\"#integer\"><a href=\"#integer\">Integer</a></emu-xref> | <emu-val>undefined</emu-val>\n                </td>\n                <td>\n                  Auxiliary field used during Link and Evaluate only.\n                  If [[Status]] is <emu-const>linking</emu-const> or <emu-const>evaluating</emu-const>, this non-negative number records the point at which the module was first visited during the ongoing depth-first traversal of the dependency graph.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSAncestorIndex]]\n                </td>\n                <td>\n                  <emu-xref href=\"#integer\"><a href=\"#integer\">Integer</a></emu-xref> | <emu-val>undefined</emu-val>\n                </td>\n                <td>\n                  Auxiliary field used during Link and Evaluate only. If [[Status]] is <emu-const>linking</emu-const> or <emu-const>evaluating</emu-const>, this is either the module's own [[DFSIndex]] or that of an \"earlier\" module in the same strongly connected component.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[RequestedModules]]\n                </td>\n                <td>\n                  <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of String\n                </td>\n                <td>\n                  A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of all the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> strings used by the module represented by this record to request the importation of a module. The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is source code occurrence ordered.\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>In addition to the methods defined in <emu-xref href=\"#table-abstract-methods-of-module-records\"><a href=\"#table-abstract-methods-of-module-records\" class=\"excluded-xref\" excluded-id=\"table-abstract-methods-of-module-records\">#table-abstract-methods-of-module-records</a></emu-xref> Cyclic Module Records have the additional methods listed in <emu-xref href=\"#table-cyclic-module-methods\"><a href=\"#table-cyclic-module-methods\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-methods\" caption=\"Additional Abstract Methods of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</span>: Additional Abstract Methods of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Method\n                </th>\n                <th>\n                  Purpose\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"InitializeEnvironment\"><a href=\"#sec-source-text-module-record-initialize-environment\">InitializeEnvironment</a></emu-xref>()\n                </td>\n                <td>\n                  Initialize the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> of the module, including resolving all imported bindings, and create the module's <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"ExecuteModule\"><a href=\"#sec-source-text-module-record-execute-module\">ExecuteModule</a></emu-xref>()\n                </td>\n                <td>\n                  Evaluate the module's code within its <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-moduledeclarationlinking\"><h1><span class=\"secnum\">16.2.1.8.1</span>#sec-moduledeclarationlinking Link ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-moduleevaluation\"><h1><span class=\"secnum\">16.2.1.8.2</span>#sec-moduleevaluation Evaluate ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-example-cyclic-module-record-graphs\"><h1><span class=\"secnum\">16.2.1.8.3</span>#sec-example-cyclic-module-record-graphs Example Cyclic Module Record Graphs</h1>...</div></emu-clause>\n\n      "}, "sec-module-semantics": {"num": "16.2.1", "title": "#sec-module-semantics Module Semantics", "html": "<emu-clause id=\"sec-module-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics\">#sec-module-semantics</span> Module Semantics</h1>\n\n      <div id=\"excluded-sec-module-semantics-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.1.1</span>#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.1.2</span>#sec-module-semantics-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.1.3</span>#sec-module-semantics-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-importentries\"><h1><span class=\"secnum\">16.2.1.4</span>#sec-module-semantics-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-importedlocalnames\"><h1><span class=\"secnum\">16.2.1.5</span>#sec-importedlocalnames Static Semantics: ImportedLocalNames ( importEntries )</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-modulerequests\"><h1><span class=\"secnum\">16.2.1.6</span>#sec-module-semantics-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-abstract-module-records\"><h1><span class=\"secnum\">16.2.1.7</span>#sec-abstract-module-records Abstract Module Records</h1>...</div><div id=\"excluded-sec-cyclic-module-records\"><h1><span class=\"secnum\">16.2.1.8</span>#sec-cyclic-module-records Cyclic Module Records</h1>...</div><div id=\"excluded-sec-source-text-module-records\"><h1><span class=\"secnum\">16.2.1.9</span>#sec-source-text-module-records Source Text Module Records</h1>...</div><div id=\"excluded-sec-hostresolveimportedmodule\"><h1><span class=\"secnum\">16.2.1.10</span>#sec-hostresolveimportedmodule HostResolveImportedModule ( referencingScriptOrModule, specifier )</h1>...</div><div id=\"excluded-sec-hostimportmoduledynamically\"><h1><span class=\"secnum\">16.2.1.11</span>#sec-hostimportmoduledynamically HostImportModuleDynamically ( referencingScriptOrModule, specifier, promiseCapability )</h1>...</div><div id=\"excluded-sec-finishdynamicimport\"><h1><span class=\"secnum\">16.2.1.12</span>#sec-finishdynamicimport FinishDynamicImport ( referencingScriptOrModule, specifier, promiseCapability, completion )</h1>...</div><div id=\"excluded-sec-getmodulenamespace\"><h1><span class=\"secnum\">16.2.1.13</span>#sec-getmodulenamespace GetModuleNamespace ( module )</h1>...</div><div id=\"excluded-sec-module-semantics-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.1.14</span>#sec-module-semantics-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}, "sec-exports": {"num": "16.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0a40575\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"2762c7fe\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"696b8d6e\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6bc99b97\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"d298e1ba\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ae276654\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"e2a585b6\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"29b1414e\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"c16c88fe\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-exportedbindings\"><h1><span class=\"secnum\">16.2.3.2</span>#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.3.3</span>#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.3.4</span>#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">16.2.3.5</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-exports-static-semantics-modulerequests\"><h1><span class=\"secnum\">16.2.3.6</span>#sec-exports-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">16.2.3.7</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.3.8</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-moduledeclarationlinking": {"num": "16.2.1.8.1", "title": "#sec-moduledeclarationlinking Link ( ) Concrete Method", "html": "<emu-clause id=\"sec-moduledeclarationlinking\" oldids=\"sec-moduledeclarationinstantiation\"><span id=\"sec-moduledeclarationinstantiation\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-moduledeclarationlinking\">#sec-moduledeclarationlinking</span> Link ( ) Concrete Method</h1>\n          <p>The Link concrete method of a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>module</var> takes no arguments. On success, Link transitions this module's [[Status]] from <emu-const>unlinked</emu-const> to <emu-const>linked</emu-const>. On failure, an exception is thrown and this module's [[Status]] remains <emu-const>unlinked</emu-const>. (Most of the work is done by the auxiliary function <emu-xref aoid=\"InnerModuleLinking\"><a href=\"#sec-InnerModuleLinking\">InnerModuleLinking</a></emu-xref>.) It performs the following steps when called:</p>\n\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is not <emu-const>linking</emu-const> or <emu-const>evaluating</emu-const>.</li><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>result</var> be <emu-xref aoid=\"InnerModuleLinking\"><a href=\"#sec-InnerModuleLinking\">InnerModuleLinking</a></emu-xref>(<var>module</var>, <var>stack</var>, 0).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>For each <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>m</var> of <var>stack</var>, do<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>m</var>.[[Status]] is <emu-const>linking</emu-const>.</li><li>Set <var>m</var>.[[Status]] to <emu-const>unlinked</emu-const>.</li><li>Set <var>m</var>.[[Environment]] to <emu-val>undefined</emu-val>.</li><li>Set <var>m</var>.[[DFSIndex]] to <emu-val>undefined</emu-val>.</li><li>Set <var>m</var>.[[DFSAncestorIndex]] to <emu-val>undefined</emu-val>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>unlinked</emu-const>.</li><li>Return <var>result</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>linked</emu-const> or <emu-const>evaluated</emu-const>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>stack</var> is empty.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n\n          <div id=\"excluded-sec-InnerModuleLinking\"><h1><span class=\"secnum\">16.2.1.8.1.1</span>#sec-InnerModuleLinking InnerModuleLinking ( module, stack, index )</h1>...</div></emu-clause>\n\n        "}, "sec-moduleevaluation": {"num": "16.2.1.8.2", "title": "#sec-moduleevaluation Evaluate ( ) Concrete Method", "html": "<emu-clause id=\"sec-moduleevaluation\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-moduleevaluation\">#sec-moduleevaluation</span> Evaluate ( ) Concrete Method</h1>\n          <p>The Evaluate concrete method of a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>module</var> takes no arguments. Evaluate transitions this module's [[Status]] from <emu-const>linked</emu-const> to <emu-const>evaluated</emu-const>. If execution results in an exception, that exception is recorded in the [[EvaluationError]] field and rethrown by future invocations of Evaluate. (Most of the work is done by the auxiliary function <emu-xref aoid=\"InnerModuleEvaluation\"><a href=\"#sec-innermoduleevaluation\">InnerModuleEvaluation</a></emu-xref>.) It performs the following steps when called:</p>\n\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This call to Evaluate is not happening at the same time as another call to Evaluate within the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>linked</emu-const> or <emu-const>evaluated</emu-const>.</li><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>result</var> be <emu-xref aoid=\"InnerModuleEvaluation\"><a href=\"#sec-innermoduleevaluation\">InnerModuleEvaluation</a></emu-xref>(<var>module</var>, <var>stack</var>, 0).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>For each <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>m</var> of <var>stack</var>, do<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>m</var>.[[Status]] is <emu-const>evaluating</emu-const>.</li><li>Set <var>m</var>.[[Status]] to <emu-const>evaluated</emu-const>.</li><li>Set <var>m</var>.[[EvaluationError]] to <var>result</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>evaluated</emu-const> and <var>module</var>.[[EvaluationError]] is <var>result</var>.</li><li>Return <var>result</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>evaluated</emu-const> and <var>module</var>.[[EvaluationError]] is <emu-val>undefined</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>stack</var> is empty.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n\n          <div id=\"excluded-sec-innermoduleevaluation\"><h1><span class=\"secnum\">16.2.1.8.2.1</span>#sec-innermoduleevaluation InnerModuleEvaluation ( module, stack, index )</h1>...</div></emu-clause>\n\n        "}, "sec-static-semantics-exportedbindings": {"num": "16.2.3.2", "title": "#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings", "html": "<emu-clause id=\"sec-static-semantics-exportedbindings\" oldids=\"sec-module-semantics-static-semantics-exportedbindings,sec-exports-static-semantics-exportedbindings\" type=\"sdo\" aoid=\"ExportedBindings\"><span id=\"sec-exports-static-semantics-exportedbindings\"></span><span id=\"sec-module-semantics-static-semantics-exportedbindings\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportedbindings\">#sec-static-semantics-exportedbindings</span> Static Semantics: ExportedBindings</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedBindings are the locally bound names that are explicitly associated with a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>'s ExportedNames.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"75ddb725\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d791d1c9\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0a40575\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2762c7fe\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6c6de801\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"828f5ae3\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"71d1417e\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c3c3cb8d\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e1fe9c4f\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1907cd0c\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"a9552c46\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-semantics-static-semantics-exportednames": {"num": "16.2.1.2", "title": "#sec-module-semantics-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-exportednames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-exportednames\">#sec-module-semantics-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-see-also-para op=\"ExportedNames\"></emu-see-also-para>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedNames are the externally visible names that a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> explicitly maps to one of its local name bindings.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"75ddb725\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be ExportedNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedNames of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d791d1c9\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-module-record-fields": "Table 40", "table-abstract-methods-of-module-records": "Table 41", "table-cyclic-module-fields": "Table 42", "table-cyclic-module-methods": "Table 43", "table-additional-fields-of-source-text-module-records": "Table 44", "table-importentry-record-fields": "Table 45", "table-import-forms-mapping-to-importentry-records": "Table 46", "table-exportentry-records": "Table 47", "table-export-forms-mapping-to-exportentry-records": "Table 48"}}, "to": {"secList": ["sec-module-semantics-static-semantics-early-errors", "sec-source-text-module-records", "sec-cyclic-module-records", "sec-module-semantics", "sec-exports", "sec-static-semantics-exportednames", "sec-moduledeclarationlinking", "sec-moduleevaluation", "sec-static-semantics-exportedbindings"], "secData": {"sec-module-semantics-static-semantics-early-errors": {"num": "16.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsDuplicateLabels\"><a href=\"#sec-static-semantics-containsduplicatelabels\">ContainsDuplicateLabels</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedBreakTarget\"><a href=\"#sec-static-semantics-containsundefinedbreaktarget\">ContainsUndefinedBreakTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedContinueTarget\"><a href=\"#sec-static-semantics-containsundefinedcontinuetarget\">ContainsUndefinedContinueTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-source-text-module-records": {"num": "16.2.1.8", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, link, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in <emu-xref href=\"#table-additional-fields-of-source-text-module-records\"><a href=\"#table-additional-fields-of-source-text-module-records\" class=\"excluded-xref\" excluded-id=\"table-additional-fields-of-source-text-module-records\">#table-additional-fields-of-source-text-module-records</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-additional-fields-of-source-text-module-records\" caption=\"Additional Fields of Source Text Module Records\" oldids=\"table-38\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-fields-of-source-text-module-records\">#table-additional-fields-of-source-text-module-records</span>: Additional Fields of Source Text Module Records</figcaption><span id=\"table-38\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Context]]\n              </td>\n              <td>\n                An ECMAScript <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> associated with this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportMeta]]\n              </td>\n              <td>\n                Object\n              </td>\n              <td>\n                An object exposed through the <code>import.meta</code> meta property. It is <emu-const>empty</emu-const> until it is accessed by ECMAScript code.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to <code>export *</code> declarations that occur within the module, not including <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-importentry-record-fields\"><a href=\"#table-importentry-record-fields\" class=\"excluded-xref\" excluded-id=\"table-importentry-record-fields\">#table-importentry-record-fields</a></emu-xref>:</p>\n        <emu-table id=\"table-importentry-record-fields\" caption=\"ImportEntry Record Fields\" oldids=\"table-39\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-importentry-record-fields\">#table-importentry-record-fields</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption><span id=\"table-39\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <emu-val>\"*\"</emu-val> indicates that the import request is for the target module's namespace object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-import-forms-mapping-to-importentry-records\"><a href=\"#table-import-forms-mapping-to-importentry-records\" class=\"excluded-xref\" excluded-id=\"table-import-forms-mapping-to-importentry-records\">#table-import-forms-mapping-to-importentry-records</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-import-forms-mapping-to-importentry-records\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\" oldids=\"table-40\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-import-forms-mapping-to-importentry-records\">#table-import-forms-mapping-to-importentry-records</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption><span id=\"table-40\"></span>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-exportentry-records\"><a href=\"#table-exportentry-records\" class=\"excluded-xref\" excluded-id=\"table-exportentry-records\">#table-exportentry-records</a></emu-xref>:</p>\n        <emu-table id=\"table-exportentry-records\" caption=\"ExportEntry Record Fields\" oldids=\"table-41\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-exportentry-records\">#table-exportentry-records</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption><span id=\"table-41\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name used to export this binding by this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <emu-val>\"*\"</emu-val> indicates that the export request is for all exported bindings.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-export-forms-mapping-to-exportentry-records\"><a href=\"#table-export-forms-mapping-to-exportentry-records\" class=\"excluded-xref\" excluded-id=\"table-export-forms-mapping-to-exportentry-records\">#table-export-forms-mapping-to-exportentry-records</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-export-forms-mapping-to-exportentry-records\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\" oldids=\"table-42\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-export-forms-mapping-to-exportentry-records\">#table-export-forms-mapping-to-exportentry-records</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption><span id=\"table-42\"></span>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                </th>\n                <th>\n                  [[ExportName]]\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f() {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"f\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function () {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*default*\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*default*\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">16.2.1.8.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">16.2.1.8.2</span>#sec-getexportednames GetExportedNames ( [ exportStarSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">16.2.1.8.3</span>#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">16.2.1.8.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">16.2.1.8.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-cyclic-module-records": {"num": "16.2.1.7", "title": "#sec-cyclic-module-records Cyclic Module Records", "html": "<emu-clause id=\"sec-cyclic-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-cyclic-module-records\">#sec-cyclic-module-records</span> Cyclic Module Records</h1>\n        <p>A <dfn id=\"cyclic-module-record\">Cyclic Module Record</dfn> is used to represent information about a module that can participate in dependency cycles with other modules that are subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type. Module Records that are not subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type must not participate in dependency cycles with Source Text Module Records.</p>\n        <p>In addition to the fields defined in <emu-xref href=\"#table-module-record-fields\"><a href=\"#table-module-record-fields\" class=\"excluded-xref\" excluded-id=\"table-module-record-fields\">#table-module-record-fields</a></emu-xref> Cyclic Module Records have the additional fields listed in <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-fields\" caption=\"Additional Fields of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</span>: Additional Fields of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Field Name\n                </th>\n                <th>\n                  Value Type\n                </th>\n                <th>\n                  Meaning\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  [[Status]]\n                </td>\n                <td>\n                  <emu-const>unlinked</emu-const> | <emu-const>linking</emu-const> | <emu-const>linked</emu-const> | <emu-const>evaluating</emu-const> | <emu-const>evaluated</emu-const>\n                </td>\n                <td>\n                  Initially <emu-const>unlinked</emu-const>. Transitions to <emu-const>linking</emu-const>, <emu-const>linked</emu-const>, <emu-const>evaluating</emu-const>, <emu-const>evaluated</emu-const> (in that order) as the module progresses throughout its lifecycle.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[EvaluationError]]\n                </td>\n                <td>\n                  An <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> | <emu-val>undefined</emu-val>\n                </td>\n                <td>\n                  A completion of type <emu-const>throw</emu-const> representing the exception that occurred during evaluation. <emu-val>undefined</emu-val> if no exception occurred or if [[Status]] is not <emu-const>evaluated</emu-const>.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSIndex]]\n                </td>\n                <td>\n                  <emu-xref href=\"#integer\"><a href=\"#integer\">Integer</a></emu-xref> | <emu-val>undefined</emu-val>\n                </td>\n                <td>\n                  Auxiliary field used during Link and Evaluate only.\n                  If [[Status]] is <emu-const>linking</emu-const> or <emu-const>evaluating</emu-const>, this non-negative number records the point at which the module was first visited during the ongoing depth-first traversal of the dependency graph.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSAncestorIndex]]\n                </td>\n                <td>\n                  <emu-xref href=\"#integer\"><a href=\"#integer\">Integer</a></emu-xref> | <emu-val>undefined</emu-val>\n                </td>\n                <td>\n                  Auxiliary field used during Link and Evaluate only. If [[Status]] is <emu-const>linking</emu-const> or <emu-const>evaluating</emu-const>, this is either the module's own [[DFSIndex]] or that of an \"earlier\" module in the same strongly connected component.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[RequestedModules]]\n                </td>\n                <td>\n                  <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of String\n                </td>\n                <td>\n                  A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of all the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> strings used by the module represented by this record to request the importation of a module. The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is source code occurrence ordered.\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>In addition to the methods defined in <emu-xref href=\"#table-abstract-methods-of-module-records\"><a href=\"#table-abstract-methods-of-module-records\" class=\"excluded-xref\" excluded-id=\"table-abstract-methods-of-module-records\">#table-abstract-methods-of-module-records</a></emu-xref> Cyclic Module Records have the additional methods listed in <emu-xref href=\"#table-cyclic-module-methods\"><a href=\"#table-cyclic-module-methods\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-methods\" caption=\"Additional Abstract Methods of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</span>: Additional Abstract Methods of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Method\n                </th>\n                <th>\n                  Purpose\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"InitializeEnvironment\"><a href=\"#sec-source-text-module-record-initialize-environment\">InitializeEnvironment</a></emu-xref>()\n                </td>\n                <td>\n                  Initialize the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> of the module, including resolving all imported bindings, and create the module's <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"ExecuteModule\"><a href=\"#sec-source-text-module-record-execute-module\">ExecuteModule</a></emu-xref>()\n                </td>\n                <td>\n                  Evaluate the module's code within its <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-moduledeclarationlinking\"><h1><span class=\"secnum\">16.2.1.7.1</span>#sec-moduledeclarationlinking Link ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-moduleevaluation\"><h1><span class=\"secnum\">16.2.1.7.2</span>#sec-moduleevaluation Evaluate ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-example-cyclic-module-record-graphs\"><h1><span class=\"secnum\">16.2.1.7.3</span>#sec-example-cyclic-module-record-graphs Example Cyclic Module Record Graphs</h1>...</div></emu-clause>\n\n      "}, "sec-module-semantics": {"num": "16.2.1", "title": "#sec-module-semantics Module Semantics", "html": "<emu-clause id=\"sec-module-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics\">#sec-module-semantics</span> Module Semantics</h1>\n\n      <div id=\"excluded-sec-module-semantics-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.1.1</span>#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.1.2</span>#sec-module-semantics-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-importentries\"><h1><span class=\"secnum\">16.2.1.3</span>#sec-module-semantics-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-importedlocalnames\"><h1><span class=\"secnum\">16.2.1.4</span>#sec-importedlocalnames Static Semantics: ImportedLocalNames ( importEntries )</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-modulerequests\"><h1><span class=\"secnum\">16.2.1.5</span>#sec-module-semantics-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-abstract-module-records\"><h1><span class=\"secnum\">16.2.1.6</span>#sec-abstract-module-records Abstract Module Records</h1>...</div><div id=\"excluded-sec-cyclic-module-records\"><h1><span class=\"secnum\">16.2.1.7</span>#sec-cyclic-module-records Cyclic Module Records</h1>...</div><div id=\"excluded-sec-source-text-module-records\"><h1><span class=\"secnum\">16.2.1.8</span>#sec-source-text-module-records Source Text Module Records</h1>...</div><div id=\"excluded-sec-hostresolveimportedmodule\"><h1><span class=\"secnum\">16.2.1.9</span>#sec-hostresolveimportedmodule HostResolveImportedModule ( referencingScriptOrModule, specifier )</h1>...</div><div id=\"excluded-sec-hostimportmoduledynamically\"><h1><span class=\"secnum\">16.2.1.10</span>#sec-hostimportmoduledynamically HostImportModuleDynamically ( referencingScriptOrModule, specifier, promiseCapability )</h1>...</div><div id=\"excluded-sec-finishdynamicimport\"><h1><span class=\"secnum\">16.2.1.11</span>#sec-finishdynamicimport FinishDynamicImport ( referencingScriptOrModule, specifier, promiseCapability, completion )</h1>...</div><div id=\"excluded-sec-getmodulenamespace\"><h1><span class=\"secnum\">16.2.1.12</span>#sec-getmodulenamespace GetModuleNamespace ( module )</h1>...</div><div id=\"excluded-sec-module-semantics-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.1.13</span>#sec-module-semantics-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}, "sec-exports": {"num": "16.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0a40575\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"2762c7fe\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"696b8d6e\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6bc99b97\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"d298e1ba\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ae276654\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"e2a585b6\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"29b1414e\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"c16c88fe\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-exportedbindings\"><h1><span class=\"secnum\">16.2.3.2</span>#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.3.3</span>#sec-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.3.4</span>#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">16.2.3.5</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-exports-static-semantics-modulerequests\"><h1><span class=\"secnum\">16.2.3.6</span>#sec-exports-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">16.2.3.7</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.3.8</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-exportednames": {"num": "16.2.3.3", "title": "#sec-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-static-semantics-exportednames\" oldids=\"sec-module-semantics-static-semantics-exportednames,sec-exports-static-semantics-exportednames\" type=\"sdo\" aoid=\"ExportedNames\"><span id=\"sec-exports-static-semantics-exportednames\"></span><span id=\"sec-module-semantics-static-semantics-exportednames\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportednames\">#sec-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedNames are the externally visible names that a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> explicitly maps to one of its local name bindings.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"75ddb725\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d791d1c9\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0a40575\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"76d083ed\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6c6de801\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"828f5ae3\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"71d1417e\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c3c3cb8d\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e1fe9c4f\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1907cd0c\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"a9552c46\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-moduledeclarationlinking": {"num": "16.2.1.7.1", "title": "#sec-moduledeclarationlinking Link ( ) Concrete Method", "html": "<emu-clause id=\"sec-moduledeclarationlinking\" oldids=\"sec-moduledeclarationinstantiation\"><span id=\"sec-moduledeclarationinstantiation\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-moduledeclarationlinking\">#sec-moduledeclarationlinking</span> Link ( ) Concrete Method</h1>\n          <p>The Link concrete method of a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>module</var> takes no arguments. On success, Link transitions this module's [[Status]] from <emu-const>unlinked</emu-const> to <emu-const>linked</emu-const>. On failure, an exception is thrown and this module's [[Status]] remains <emu-const>unlinked</emu-const>. (Most of the work is done by the auxiliary function <emu-xref aoid=\"InnerModuleLinking\"><a href=\"#sec-InnerModuleLinking\">InnerModuleLinking</a></emu-xref>.) It performs the following steps when called:</p>\n\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is not <emu-const>linking</emu-const> or <emu-const>evaluating</emu-const>.</li><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>result</var> be <emu-xref aoid=\"InnerModuleLinking\"><a href=\"#sec-InnerModuleLinking\">InnerModuleLinking</a></emu-xref>(<var>module</var>, <var>stack</var>, 0).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>For each <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>m</var> of <var>stack</var>, do<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>m</var>.[[Status]] is <emu-const>linking</emu-const>.</li><li>Set <var>m</var>.[[Status]] to <emu-const>unlinked</emu-const>.</li><li>Set <var>m</var>.[[Environment]] to <emu-val>undefined</emu-val>.</li><li>Set <var>m</var>.[[DFSIndex]] to <emu-val>undefined</emu-val>.</li><li>Set <var>m</var>.[[DFSAncestorIndex]] to <emu-val>undefined</emu-val>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>unlinked</emu-const>.</li><li>Return <var>result</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>linked</emu-const> or <emu-const>evaluated</emu-const>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>stack</var> is empty.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n\n          <div id=\"excluded-sec-InnerModuleLinking\"><h1><span class=\"secnum\">16.2.1.7.1.1</span>#sec-InnerModuleLinking InnerModuleLinking ( module, stack, index )</h1>...</div></emu-clause>\n\n        "}, "sec-moduleevaluation": {"num": "16.2.1.7.2", "title": "#sec-moduleevaluation Evaluate ( ) Concrete Method", "html": "<emu-clause id=\"sec-moduleevaluation\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-moduleevaluation\">#sec-moduleevaluation</span> Evaluate ( ) Concrete Method</h1>\n          <p>The Evaluate concrete method of a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>module</var> takes no arguments. Evaluate transitions this module's [[Status]] from <emu-const>linked</emu-const> to <emu-const>evaluated</emu-const>. If execution results in an exception, that exception is recorded in the [[EvaluationError]] field and rethrown by future invocations of Evaluate. (Most of the work is done by the auxiliary function <emu-xref aoid=\"InnerModuleEvaluation\"><a href=\"#sec-innermoduleevaluation\">InnerModuleEvaluation</a></emu-xref>.) It performs the following steps when called:</p>\n\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This call to Evaluate is not happening at the same time as another call to Evaluate within the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>linked</emu-const> or <emu-const>evaluated</emu-const>.</li><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>result</var> be <emu-xref aoid=\"InnerModuleEvaluation\"><a href=\"#sec-innermoduleevaluation\">InnerModuleEvaluation</a></emu-xref>(<var>module</var>, <var>stack</var>, 0).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>For each <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>m</var> of <var>stack</var>, do<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>m</var>.[[Status]] is <emu-const>evaluating</emu-const>.</li><li>Set <var>m</var>.[[Status]] to <emu-const>evaluated</emu-const>.</li><li>Set <var>m</var>.[[EvaluationError]] to <var>result</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>evaluated</emu-const> and <var>module</var>.[[EvaluationError]] is <var>result</var>.</li><li>Return <var>result</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <emu-const>evaluated</emu-const> and <var>module</var>.[[EvaluationError]] is <emu-val>undefined</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>stack</var> is empty.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n\n          <div id=\"excluded-sec-innermoduleevaluation\"><h1><span class=\"secnum\">16.2.1.7.2.1</span>#sec-innermoduleevaluation InnerModuleEvaluation ( module, stack, index )</h1>...</div></emu-clause>\n\n        "}, "sec-static-semantics-exportedbindings": {"num": "16.2.3.2", "title": "#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings", "html": "<emu-clause id=\"sec-static-semantics-exportedbindings\" oldids=\"sec-module-semantics-static-semantics-exportedbindings,sec-exports-static-semantics-exportedbindings\" type=\"sdo\" aoid=\"ExportedBindings\"><span id=\"sec-exports-static-semantics-exportedbindings\"></span><span id=\"sec-module-semantics-static-semantics-exportedbindings\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportedbindings\">#sec-static-semantics-exportedbindings</span> Static Semantics: ExportedBindings</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedBindings are the locally bound names that are explicitly associated with a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>'s <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"75ddb725\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d791d1c9\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e0a40575\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2762c7fe\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6c6de801\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"828f5ae3\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"71d1417e\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c3c3cb8d\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e1fe9c4f\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1907cd0c\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"a9552c46\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-module-record-fields": "Table 40", "table-abstract-methods-of-module-records": "Table 41", "table-cyclic-module-fields": "Table 42", "table-cyclic-module-methods": "Table 43", "table-additional-fields-of-source-text-module-records": "Table 44", "table-importentry-record-fields": "Table 45", "table-import-forms-mapping-to-importentry-records": "Table 46", "table-exportentry-records": "Table 47", "table-export-forms-mapping-to-exportentry-records": "Table 48"}}}