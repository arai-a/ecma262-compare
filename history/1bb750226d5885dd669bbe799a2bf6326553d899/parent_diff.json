{"from": {"secList": ["sec-directive-prologues-and-the-use-strict-directive", "sec-strict-variant-of-ecmascript", "sec-strict-mode-code"], "secData": {"sec-directive-prologues-and-the-use-strict-directive": {"num": "14.1.1", "title": "#sec-directive-prologues-and-the-use-strict-directive Directive Prologues and the Use Strict Directive", "html": "<emu-clause id=\"sec-directive-prologues-and-the-use-strict-directive\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-directive-prologues-and-the-use-strict-directive\">#sec-directive-prologues-and-the-use-strict-directive</span> Directive Prologues and the Use Strict Directive</h1>\n      <p>A <dfn id=\"directive-prologue\">Directive Prologue</dfn> is the longest sequence of <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s occurring as the initial <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>s or <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>s of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, a <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt>, or a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> and where each <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in the sequence consists entirely of a <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> token followed by a semicolon. The semicolon may appear explicitly or may be inserted by automatic semicolon insertion. A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may be an empty sequence.</p>\n      <p>A <dfn id=\"use-strict-directive\">Use Strict Directive</dfn> is an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> is either of the exact code point sequences <code>\"use strict\"</code> or <code>'use strict'</code>. A <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> may not contain an <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> or <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt>.</p>\n      <p>A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may contain more than one <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>. However, an implementation may issue a warning if this occurs.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s of a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> are evaluated normally during evaluation of the containing production. Implementations may define implementation specific meanings for <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s which are not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which occur in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref>. If an appropriate notification mechanism exists, an implementation should issue a warning if it encounters in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> that is not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which does not have a meaning defined by the implementation.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-strict-variant-of-ecmascript": {"num": "4.3.2", "title": "#sec-strict-variant-of-ecmascript The Strict Variant of ECMAScript", "html": "<emu-clause id=\"sec-strict-variant-of-ecmascript\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-variant-of-ecmascript\">#sec-strict-variant-of-ecmascript</span> The Strict Variant of ECMAScript</h1>\n      <p>The ECMAScript Language recognizes the possibility that some users of the language may wish to restrict their usage of some features available in the language. They might do so in the interests of security, to avoid what they consider to be error-prone features, to get enhanced error checking, or for other reasons of their choosing. In support of this possibility, ECMAScript defines a strict variant of the language. The strict variant of the language excludes some specific syntactic and semantic features of the regular ECMAScript language and modifies the detailed semantics of some features. The strict variant also specifies additional error conditions that must be reported by throwing error exceptions in situations that are not specified as errors by the non-strict form of the language.</p>\n      <p>The strict variant of ECMAScript is commonly referred to as the <em>strict mode</em> of the language. Strict mode selection and use of the strict mode syntax and semantics of ECMAScript is explicitly made at the level of individual ECMAScript source text units. Because strict mode is selected at the level of a syntactic source text unit, strict mode only imposes restrictions that have local effect within such a source text unit. Strict mode does not restrict or modify any aspect of the ECMAScript semantics that must operate consistently across multiple source text units. A complete ECMAScript program may be composed of both strict mode and non-strict mode ECMAScript source text units. In this case, strict mode only applies when actually executing code that is defined within a strict mode source text unit.</p>\n      <p>In order to conform to this specification, an ECMAScript implementation must implement both the full unrestricted ECMAScript language and the strict variant of the ECMAScript language as defined by this specification. In addition, an implementation must support the combination of unrestricted and strict mode source text units into a single composite program.</p>\n    </emu-clause>\n  "}, "sec-strict-mode-code": {"num": "10.2.1", "title": "#sec-strict-mode-code Strict Mode Code", "html": "<emu-clause id=\"sec-strict-mode-code\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</span> Strict Mode Code</h1>\n      <p>An ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntactic unit may be processed using either unrestricted or strict mode syntax and semantics. Code is interpreted as <dfn>strict mode code</dfn> in the following situations:</p>\n      <ul>\n        <li>\n          Global code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Module code is always strict mode code.\n        </li>\n        <li>\n          All parts of a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> are strict mode code.\n        </li>\n        <li>\n          Eval code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> or if the call to <code>eval</code> is a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> that is contained in strict mode code.\n        </li>\n        <li>\n          Function code is strict mode code if the associated <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> is contained in strict mode code or if the code that produces the value of the function's [[ECMAScriptCode]] internal slot begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Function code that is supplied as the arguments to the built-in Function, Generator, AsyncFunction, and AsyncGenerator constructors is strict mode code if the last argument is a String that when processed is a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> that begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n      </ul>\n      <p>ECMAScript code that is not strict mode code is called <dfn id=\"non-strict-code\">non-strict code</dfn>.</p>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-directive-prologues-and-the-use-strict-directive", "sec-strict-variant-of-ecmascript", "sec-strict-mode-code"], "secData": {"sec-directive-prologues-and-the-use-strict-directive": {"num": "14.1.1", "title": "#sec-directive-prologues-and-the-use-strict-directive Directive Prologues and the Use Strict Directive", "html": "<emu-clause id=\"sec-directive-prologues-and-the-use-strict-directive\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-directive-prologues-and-the-use-strict-directive\">#sec-directive-prologues-and-the-use-strict-directive</span> Directive Prologues and the Use Strict Directive</h1>\n      <p>A <dfn id=\"directive-prologue\">Directive Prologue</dfn> is the longest sequence of <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s occurring as the initial <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>s or <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>s of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, a <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt>, or a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> and where each <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in the sequence consists entirely of a <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> token followed by a semicolon. The semicolon may appear explicitly or may be inserted by automatic semicolon insertion (<emu-xref href=\"#sec-automatic-semicolon-insertion\"><a href=\"#sec-automatic-semicolon-insertion\" class=\"excluded-xref\" excluded-id=\"sec-automatic-semicolon-insertion\">#sec-automatic-semicolon-insertion</a></emu-xref>). A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may be an empty sequence.</p>\n      <p>A <dfn id=\"use-strict-directive\">Use Strict Directive</dfn> is an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> is either of the exact code point sequences <code>\"use strict\"</code> or <code>'use strict'</code>. A <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> may not contain an <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> or <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt>.</p>\n      <p>A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may contain more than one <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>. However, an implementation may issue a warning if this occurs.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s of a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> are evaluated normally during evaluation of the containing production. Implementations may define implementation specific meanings for <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s which are not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which occur in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref>. If an appropriate notification mechanism exists, an implementation should issue a warning if it encounters in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> that is not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which does not have a meaning defined by the implementation.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-strict-variant-of-ecmascript": {"num": "4.3.2", "title": "#sec-strict-variant-of-ecmascript The Strict Variant of ECMAScript", "html": "<emu-clause id=\"sec-strict-variant-of-ecmascript\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-variant-of-ecmascript\">#sec-strict-variant-of-ecmascript</span> The Strict Variant of ECMAScript</h1>\n      <p>The ECMAScript Language recognizes the possibility that some users of the language may wish to restrict their usage of some features available in the language. They might do so in the interests of security, to avoid what they consider to be error-prone features, to get enhanced error checking, or for other reasons of their choosing. In support of this possibility, ECMAScript defines a strict variant of the language. The strict variant of the language excludes some specific syntactic and semantic features of the regular ECMAScript language and modifies the detailed semantics of some features. The strict variant also specifies additional error conditions that must be reported by throwing error exceptions in situations that are not specified as errors by the non-strict form of the language.</p>\n      <p>The strict variant of ECMAScript is commonly referred to as the <em>strict mode</em> of the language. Strict mode selection and use of the strict mode syntax and semantics of ECMAScript is explicitly made at the level of individual ECMAScript source text units as described in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\" class=\"excluded-xref\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</a></emu-xref>. Because strict mode is selected at the level of a syntactic source text unit, strict mode only imposes restrictions that have local effect within such a source text unit. Strict mode does not restrict or modify any aspect of the ECMAScript semantics that must operate consistently across multiple source text units. A complete ECMAScript program may be composed of both strict mode and non-strict mode ECMAScript source text units. In this case, strict mode only applies when actually executing code that is defined within a strict mode source text unit.</p>\n      <p>In order to conform to this specification, an ECMAScript implementation must implement both the full unrestricted ECMAScript language and the strict variant of the ECMAScript language as defined by this specification. In addition, an implementation must support the combination of unrestricted and strict mode source text units into a single composite program.</p>\n    </emu-clause>\n  "}, "sec-strict-mode-code": {"num": "10.2.1", "title": "#sec-strict-mode-code Strict Mode Code", "html": "<emu-clause id=\"sec-strict-mode-code\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</span> Strict Mode Code</h1>\n      <p>An ECMAScript syntactic unit may be processed using either unrestricted or strict mode syntax and semantics (<emu-xref href=\"#sec-strict-variant-of-ecmascript\"><a href=\"#sec-strict-variant-of-ecmascript\" class=\"excluded-xref\" excluded-id=\"sec-strict-variant-of-ecmascript\">#sec-strict-variant-of-ecmascript</a></emu-xref>). Code is interpreted as <dfn>strict mode code</dfn> in the following situations:</p>\n      <ul>\n        <li>\n          Global code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Module code is always strict mode code.\n        </li>\n        <li>\n          All parts of a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> are strict mode code.\n        </li>\n        <li>\n          Eval code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> or if the call to <code>eval</code> is a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> that is contained in strict mode code.\n        </li>\n        <li>\n          Function code is strict mode code if the associated <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> is contained in strict mode code or if the code that produces the value of the function's [[ECMAScriptCode]] internal slot begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Function code that is supplied as the arguments to the built-in Function, Generator, AsyncFunction, and AsyncGenerator constructors is strict mode code if the last argument is a String that when processed is a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> that begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n      </ul>\n      <p>ECMAScript code that is not strict mode code is called <dfn id=\"non-strict-code\">non-strict code</dfn>.</p>\n    </emu-clause>\n\n    "}}, "figData": {}}}