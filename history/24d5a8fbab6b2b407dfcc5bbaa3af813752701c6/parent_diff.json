{"from": {"secList": ["sec-numeric-types-number-tostring", "sec-expanded-years", "sec-local-time-zone-adjustment", "sec-time-values-and-time-range", "sec-week-day", "sec-month-number"], "secData": {"sec-numeric-types-number-tostring": {"num": "6.1.6.1.20", "title": "#sec-numeric-types-number-tostring Number::toString ( x )", "html": "<emu-clause id=\"sec-numeric-types-number-tostring\" aoid=\"Number::toString\" oldids=\"sec-tostring-applied-to-the-number-type\"><span id=\"sec-tostring-applied-to-the-number-type\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numeric-types-number-tostring\">#sec-numeric-types-number-tostring</span> Number::toString ( <var>x</var> )</h1>\n          <p>The abstract operation Number::toString takes argument <var>x</var> (a Number). It converts <var>x</var> to String format. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>x</var> is <emu-val>NaN</emu-val>, return the String <emu-val>\"NaN\"</emu-val>.</li><li>If <var>x</var> is <emu-val>+0</emu-val> or <emu-val>-0</emu-val>, return the String <emu-val>\"0\"</emu-val>.</li><li>If <var>x</var> is less than zero, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <emu-val>\"-\"</emu-val> and ! <emu-xref aoid=\"Number::toString\"><a href=\"#sec-numeric-types-number-tostring\">Number::toString</a></emu-xref>(-<var>x</var>).</li><li>If <var>x</var> is <emu-val>+&#8734;</emu-val>, return the String <emu-val>\"Infinity\"</emu-val>.</li><li id=\"step-number-tostring-intermediate-values\">Otherwise, let <var>n</var>, <var>k</var>, and <var>s</var> be integers such that <var>k</var> &#8805; 1, 10<sup><var>k</var> - 1</sup> &#8804; <var>s</var> &lt; 10<sup><var>k</var></sup>, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub>&#8477;</sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is <var>x</var>, and <var>k</var> is as small as possible. Note that <var>k</var> is the number of digits in the decimal representation of <var>s</var>, that <var>s</var> is not divisible by 10<sub>&#8477;</sub>, and that the least significant digit of <var>s</var> is not necessarily uniquely determined by these criteria.</li><li>If <var>k</var> &#8804; <var>n</var> &#8804; 21, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the <var>k</var> digits of the decimal representation of <var>s</var> (in order, with no leading zeroes)</li><li><var>n</var> - <var>k</var> occurrences of the code unit 0x0030 (DIGIT ZERO)</li></ul></li><li>If 0 &lt; <var>n</var> &#8804; 21, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the most significant <var>n</var> digits of the decimal representation of <var>s</var></li><li>the code unit 0x002E (FULL STOP)</li><li>the code units of the remaining <var>k</var> - <var>n</var> digits of the decimal representation of <var>s</var></li></ul></li><li>If -6 &lt; <var>n</var> &#8804; 0, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code unit 0x0030 (DIGIT ZERO)</li><li>the code unit 0x002E (FULL STOP)</li><li>-<var>n</var> occurrences of the code unit 0x0030 (DIGIT ZERO)</li><li>the code units of the <var>k</var> digits of the decimal representation of <var>s</var></li></ul></li><li>Otherwise, if <var>k</var> = 1, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code unit of the single digit of <var>s</var></li><li>the code unit 0x0065 (LATIN SMALL LETTER E)</li><li>the code unit 0x002B (PLUS SIGN) or the code unit 0x002D (HYPHEN-MINUS) according to whether <var>n</var> - 1 is positive or negative</li><li>the code units of the decimal representation of the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>n</var> - 1) (with no leading zeroes)</li></ul></li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the most significant digit of the decimal representation of <var>s</var></li><li>the code unit 0x002E (FULL STOP)</li><li>the code units of the remaining <var>k</var> - 1 digits of the decimal representation of <var>s</var></li><li>the code unit 0x0065 (LATIN SMALL LETTER E)</li><li>the code unit 0x002B (PLUS SIGN) or the code unit 0x002D (HYPHEN-MINUS) according to whether <var>n</var> - 1 is positive or negative</li><li>the code units of the decimal representation of the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>n</var> - 1) (with no leading zeroes)</li></ul></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>The following observations may be useful as guidelines for implementations, but are not part of the normative requirements of this Standard:</p>\n            <ul>\n              <li>\n                If x is any <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> other than <emu-val>-0</emu-val>, then <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(x)) is exactly the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as x.\n              </li>\n              <li>\n                The least significant digit of s is not always uniquely determined by the requirements listed in step <emu-xref href=\"#step-number-tostring-intermediate-values\"><a href=\"#step-number-tostring-intermediate-values\" class=\"excluded-xref\" excluded-id=\"step-number-tostring-intermediate-values\">#step-number-tostring-intermediate-values</a></emu-xref>.\n              </li>\n            </ul>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>For implementations that provide more accurate conversions than required by the rules above, it is recommended that the following alternative version of step <emu-xref href=\"#step-number-tostring-intermediate-values\"><a href=\"#step-number-tostring-intermediate-values\" class=\"excluded-xref\" excluded-id=\"step-number-tostring-intermediate-values\">#step-number-tostring-intermediate-values</a></emu-xref> be used as a guideline:</p>\n            <emu-alg replaces-step=\"step-number-tostring-intermediate-values\"><ol start=\"5\"><li>Otherwise, let <var>n</var>, <var>k</var>, and <var>s</var> be integers such that <var>k</var> &#8805; 1, 10<sup><var>k</var> - 1</sup> &#8804; <var>s</var> &lt; 10<sup><var>k</var></sup>, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub>&#8477;</sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is <var>x</var>, and <var>k</var> is as small as possible. If there are multiple possibilities for <var>s</var>, choose the value of <var>s</var> for which <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub>&#8477;</sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is closest in value to <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>x</var>). If there are two such possible values of <var>s</var>, choose the one that is even. Note that <var>k</var> is the number of digits in the decimal representation of <var>s</var> and that <var>s</var> is not divisible by 10<sub>&#8477;</sub>.</li></ol></emu-alg>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n            <p>Implementers of ECMAScript may find useful the paper and code written by David M. Gay for binary-to-decimal conversion of floating-point numbers:</p>\n            <p>Gay, David M. Correctly Rounded Binary-Decimal and Decimal-Binary Conversions. Numerical Analysis, Manuscript 90-10. AT&amp;T Bell Laboratories (Murray Hill, New Jersey). November 30, 1990. Available as\n              <br>\n              <a href=\"http://ampl.com/REFS/abstracts.html#rounding\">http://ampl.com/REFS/abstracts.html#rounding</a>. Associated code available as\n              <br>\n              <a href=\"http://netlib.sandia.gov/fp/dtoa.c\">http://netlib.sandia.gov/fp/dtoa.c</a> and as\n              <br>\n              <a href=\"http://netlib.sandia.gov/fp/g_fmt.c\">http://netlib.sandia.gov/fp/g_fmt.c</a> and may also be found at the various <code>netlib</code> mirror sites.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-expanded-years": {"num": "20.4.1.15.1", "title": "#sec-expanded-years Expanded Years", "html": "<emu-clause id=\"sec-expanded-years\" oldids=\"sec-extended-years\"><span id=\"sec-extended-years\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-expanded-years\">#sec-expanded-years</span> Expanded Years</h1>\n          <p><emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Covering</a></emu-xref> the full <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> range of approximately 273,790 years forward or backward from 01 January, 1970 (<emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\" class=\"excluded-xref\" excluded-id=\"sec-time-values-and-time-range\">#sec-time-values-and-time-range</a></emu-xref>) requires representing years before 0 or after 9999. ISO 8601 permits expansion of the year representation, but only by mutual agreement of the partners in information interchange. In the simplified ECMAScript format, such an expanded year representation shall have 6 digits and is always prefixed with a + or - sign. The year 0 is considered positive and hence prefixed with a + sign. Strings matching the <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\">Date Time String Format</a></emu-xref> with expanded years representing instants in time outside the range of a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> are treated as unrecognizable by <emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\"><code>Date.parse</code></a></emu-xref> and cause that function to return <emu-val>NaN</emu-val> without falling back to implementation-specific behaviour or heuristics.</p>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Examples of date-time values with expanded years:</p>\n            <figure>\n              <table class=\"lightweight-table\">\n                <tbody>\n                  <tr>\n                    <td>-271821-04-20T00:00:00Z</td>\n                    <td>271822 B.C.</td>\n                  </tr>\n                  <tr>\n                    <td>-000001-01-01T00:00:00Z</td>\n                    <td>2 B.C.</td>\n                  </tr>\n                  <tr>\n                    <td>+000000-01-01T00:00:00Z</td>\n                    <td>1 B.C.</td>\n                  </tr>\n                  <tr>\n                    <td>+000001-01-01T00:00:00Z</td>\n                    <td>1 A.D.</td>\n                  </tr>\n                  <tr>\n                    <td>+001970-01-01T00:00:00Z</td>\n                    <td>1970 A.D.</td>\n                  </tr>\n                  <tr>\n                    <td>+002009-12-15T00:00:00Z</td>\n                    <td>2009 A.D.</td>\n                  </tr>\n                  <tr>\n                    <td>+275760-09-13T00:00:00Z</td>\n                    <td>275760 A.D.</td>\n                  </tr>\n                </tbody>\n              </table>\n            </figure>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-local-time-zone-adjustment": {"num": "20.4.1.7", "title": "#sec-local-time-zone-adjustment LocalTZA ( t, isUTC )", "html": "<emu-clause id=\"sec-local-time-zone-adjustment\" aoid=\"LocalTZA\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-local-time-zone-adjustment\">#sec-local-time-zone-adjustment</span> LocalTZA ( <var>t</var>, <var>isUTC</var> )</h1>\n        <p>LocalTZA( <var>t</var>, <var>isUTC</var> ) is an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> algorithm that returns the local time zone adjustment, or offset, in milliseconds. The local political rules for standard time and daylight saving time in effect at <var>t</var> should be used to determine the result in the way specified in this section.</p>\n        <p>When <var>isUTC</var> is true, <emu-eqn class=\"inline\">LocalTZA( <var>t</var><sub>UTC</sub>, true )</emu-eqn> should return the offset of the local time zone from UTC measured in milliseconds at time represented by <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <emu-eqn class=\"inline\"><var>t</var><sub>UTC</sub></emu-eqn>. When the result is added to <emu-eqn class=\"inline\"><var>t</var><sub>UTC</sub></emu-eqn>, it should yield the corresponding Number <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn>.</p>\n        <p>When <var>isUTC</var> is false, <emu-eqn class=\"inline\">LocalTZA( <var>t</var><sub>local</sub>, false )</emu-eqn> should return the offset of the local time zone from UTC measured in milliseconds at local time represented by Number <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn>. When the result is subtracted from <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn>, it should yield the corresponding <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <emu-eqn class=\"inline\"><var>t</var><sub>UTC</sub></emu-eqn>.</p>\n        <p>Input <var>t</var> is nominally a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> but may be any <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. This can occur when <var>isUTC</var> is false and <var>t</var><sub>local</sub> represents a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> that is already offset outside of the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> range at the range boundaries. The algorithm must not limit <var>t</var><sub>local</sub> to the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> range, so that such inputs are supported.</p>\n        <p>When <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn> represents local time repeating multiple times at a negative time zone transition (e.g. when the daylight saving time ends or the time zone offset is decreased due to a time zone rule change) or skipped local time at a positive time zone transitions (e.g. when the daylight saving time starts or the time zone offset is increased due to a time zone rule change), <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn> must be interpreted using the time zone offset before the transition.</p>\n        <p>If an implementation does not support a conversion described above or if political rules for time <var>t</var> are not available within the implementation, the result must be 0.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>It is recommended that implementations use the time zone information of the IANA Time Zone Database <a href=\"https://www.iana.org/time-zones/\">https://www.iana.org/time-zones/</a>.</p>\n          <p>1:30 AM on November 5, 2017 in America/New_York is repeated twice (fall backward), but it must be interpreted as 1:30 AM UTC-04 instead of 1:30 AM UTC-05. LocalTZA(<emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(2017, 10, 5), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(1, 30, 0, 0))), false) is <emu-eqn class=\"inline\">-4 &#215; <emu-xref aoid=\"msPerHour\"><a href=\"#eqn-msPerHour\">msPerHour</a></emu-xref></emu-eqn>.</p>\n          <p>2:30 AM on March 12, 2017 in America/New_York does not exist, but it must be interpreted as 2:30 AM UTC-05 (equivalent to 3:30 AM UTC-04). LocalTZA(<emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(2017, 2, 12), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(2, 30, 0, 0))), false) is <emu-eqn class=\"inline\">-5 &#215; <emu-xref aoid=\"msPerHour\"><a href=\"#eqn-msPerHour\">msPerHour</a></emu-xref></emu-eqn>.</p>\n          <p>Local time zone offset values may be positive <i>or</i> negative.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-time-values-and-time-range": {"num": "20.4.1.1", "title": "#sec-time-values-and-time-range Time Values and Time Range", "html": "<emu-clause id=\"sec-time-values-and-time-range\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-time-values-and-time-range\">#sec-time-values-and-time-range</span> Time Values and Time Range</h1>\n        <p>Time measurement in ECMAScript is analogous to time measurement in POSIX, in particular sharing definition in terms of the proleptic Gregorian calendar, an epoch of midnight at the beginning of 01 January, 1970 UTC, and an accounting of every day as comprising exactly 86,400 seconds (each of which is 1000 milliseconds long).</p>\n        <p>An ECMAScript <dfn>time value</dfn> is a Number, either a finite <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> representing an instant in time to millisecond precision or <emu-val>NaN</emu-val> representing no specific instant. A time value that is a multiple of <emu-eqn class=\"inline\">24 &#215; 60 &#215; 60 &#215; 1000 = 86,400,000</emu-eqn> (i.e., is equal to 86,400,000 &#215; <var>d</var> for some <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>d</var>) represents the instant at the start of the UTC day that follows the epoch by <var>d</var> whole UTC days (preceding the epoch for negative <var>d</var>). Every other finite time value <var>t</var> is defined relative to the greatest preceding time value <var>s</var> that is such a multiple, and represents the instant that occurs within the same UTC day as <var>s</var> but follows it by <var>t</var> &#8722; <var>s</var> milliseconds.</p>\n        <p>Time values do not account for UTC leap seconds&#8212;there are no time values representing instants within positive leap seconds, and there are time values representing instants removed from the UTC timeline by negative leap seconds. However, the definition of time values nonetheless yields piecewise alignment with UTC, with discontinuities only at leap second boundaries and zero difference outside of leap seconds.</p>\n        <p>A Number can exactly represent all integers from -9,007,199,254,740,992 to 9,007,199,254,740,992 (<emu-xref href=\"#sec-number.min_safe_integer\"><a href=\"#sec-number.min_safe_integer\" class=\"excluded-xref\" excluded-id=\"sec-number.min_safe_integer\">#sec-number.min_safe_integer</a></emu-xref> and <emu-xref href=\"#sec-number.max_safe_integer\"><a href=\"#sec-number.max_safe_integer\" class=\"excluded-xref\" excluded-id=\"sec-number.max_safe_integer\">#sec-number.max_safe_integer</a></emu-xref>). A time value supports a slightly smaller range of -8,640,000,000,000,000 to 8,640,000,000,000,000 milliseconds. This yields a supported time value range of exactly -100,000,000 days to 100,000,000 days relative to midnight at the beginning of 01 January, 1970 UTC.</p>\n        <p>The exact moment of midnight at the beginning of 01 January, 1970 UTC is represented by the time value <emu-val>+0</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The 400 year cycle of the proleptic Gregorian calendar contains 97 leap years. This yields an average of 365.2425 days per year, which is 31,556,952,000 milliseconds. Therefore, the maximum range a Number could represent exactly with millisecond precision is approximately -285,426 to 285,426 years relative to 1970. The smaller range supported by a time value as specified in this section is approximately -273,790 to 273,790 years relative to 1970.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-week-day": {"num": "20.4.1.6", "title": "#sec-week-day Week Day", "html": "<emu-clause id=\"sec-week-day\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-week-day\">#sec-week-day</span> Week Day</h1>\n        <p>The weekday for a particular <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <var>t</var> is defined as</p>\n        <emu-eqn aoid=\"WeekDay\"><div>WeekDay(<var>t</var>) = (<emu-xref aoid=\"Day\"><a href=\"#eqn-Day\">Day</a></emu-xref>(<var>t</var>) + 4) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 7</div></emu-eqn>\n        <p>A weekday value of 0 specifies Sunday; 1 specifies Monday; 2 specifies Tuesday; 3 specifies Wednesday; 4 specifies Thursday; 5 specifies Friday; and 6 specifies Saturday. Note that <emu-eqn class=\"inline\">WeekDay(0) = 4</emu-eqn>, corresponding to Thursday, 01 January, 1970.</p>\n      </emu-clause>\n\n      "}, "sec-month-number": {"num": "20.4.1.4", "title": "#sec-month-number Month Number", "html": "<emu-clause id=\"sec-month-number\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-month-number\">#sec-month-number</span> Month Number</h1>\n        <p>Months are identified by an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> in the range 0 to 11, inclusive. The mapping <emu-xref aoid=\"MonthFromTime\"><a href=\"#eqn-MonthFromTime\">MonthFromTime</a></emu-xref>(<var>t</var>) from a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <var>t</var> to a month number is defined by:</p>\n        <emu-eqn id=\"eqn-MonthFromTime\" aoid=\"MonthFromTime\"><div>MonthFromTime(<var>t</var>)</div><div>          = 0 if 0 &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 31</div><div>          = 1 if 31 &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 59 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 2 if 59 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 90 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 3 if 90 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 120 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 4 if 120 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 151 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 5 if 151 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 181 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 6 if 181 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 212 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 7 if 212 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 243 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 8 if 243 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 273 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 9 if 273 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 304 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 10 if 304 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 334 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 11 if 334 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 365 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div></emu-eqn>\n        <p>where</p>\n        <emu-eqn id=\"eqn-DayWithinYear\" aoid=\"DayWithinYear\"><div>DayWithinYear(<var>t</var>) = <emu-xref aoid=\"Day\"><a href=\"#eqn-Day\">Day</a></emu-xref>(<var>t</var>) - <emu-xref aoid=\"DayFromYear\"><a href=\"#eqn-DaysFromYear\">DayFromYear</a></emu-xref>(<emu-xref aoid=\"YearFromTime\"><a href=\"#eqn-YearFromTime\">YearFromTime</a></emu-xref>(<var>t</var>))</div></emu-eqn>\n        <p>A month value of 0 specifies January; 1 specifies February; 2 specifies March; 3 specifies April; 4 specifies May; 5 specifies June; 6 specifies July; 7 specifies August; 8 specifies September; 9 specifies October; 10 specifies November; and 11 specifies December. Note that <emu-eqn class=\"inline\"><emu-xref aoid=\"MonthFromTime\"><a href=\"#eqn-MonthFromTime\">MonthFromTime</a></emu-xref>(0) = 0</emu-eqn>, corresponding to Thursday, 01 January, 1970.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-numeric-types-number-tostring", "sec-expanded-years", "sec-local-time-zone-adjustment", "sec-time-values-and-time-range", "sec-week-day", "sec-month-number"], "secData": {"sec-numeric-types-number-tostring": {"num": "6.1.6.1.20", "title": "#sec-numeric-types-number-tostring Number::toString ( x )", "html": "<emu-clause id=\"sec-numeric-types-number-tostring\" aoid=\"Number::toString\" oldids=\"sec-tostring-applied-to-the-number-type\"><span id=\"sec-tostring-applied-to-the-number-type\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numeric-types-number-tostring\">#sec-numeric-types-number-tostring</span> Number::toString ( <var>x</var> )</h1>\n          <p>The abstract operation Number::toString takes argument <var>x</var> (a Number). It converts <var>x</var> to String format. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>x</var> is <emu-val>NaN</emu-val>, return the String <emu-val>\"NaN\"</emu-val>.</li><li>If <var>x</var> is <emu-val>+0</emu-val> or <emu-val>-0</emu-val>, return the String <emu-val>\"0\"</emu-val>.</li><li>If <var>x</var> is less than zero, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <emu-val>\"-\"</emu-val> and ! <emu-xref aoid=\"Number::toString\"><a href=\"#sec-numeric-types-number-tostring\">Number::toString</a></emu-xref>(-<var>x</var>).</li><li>If <var>x</var> is <emu-val>+&#8734;</emu-val>, return the String <emu-val>\"Infinity\"</emu-val>.</li><li id=\"step-number-tostring-intermediate-values\">Otherwise, let <var>n</var>, <var>k</var>, and <var>s</var> be integers such that <var>k</var> &#8805; 1, 10<sup><var>k</var> - 1</sup> &#8804; <var>s</var> &lt; 10<sup><var>k</var></sup>, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub>&#8477;</sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is <var>x</var>, and <var>k</var> is as small as possible. Note that <var>k</var> is the number of digits in the decimal representation of <var>s</var>, that <var>s</var> is not divisible by 10<sub>&#8477;</sub>, and that the least significant digit of <var>s</var> is not necessarily uniquely determined by these criteria.</li><li>If <var>k</var> &#8804; <var>n</var> &#8804; 21, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the <var>k</var> digits of the decimal representation of <var>s</var> (in order, with no leading zeroes)</li><li><var>n</var> - <var>k</var> occurrences of the code unit 0x0030 (DIGIT ZERO)</li></ul></li><li>If 0 &lt; <var>n</var> &#8804; 21, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the most significant <var>n</var> digits of the decimal representation of <var>s</var></li><li>the code unit 0x002E (FULL STOP)</li><li>the code units of the remaining <var>k</var> - <var>n</var> digits of the decimal representation of <var>s</var></li></ul></li><li>If -6 &lt; <var>n</var> &#8804; 0, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code unit 0x0030 (DIGIT ZERO)</li><li>the code unit 0x002E (FULL STOP)</li><li>-<var>n</var> occurrences of the code unit 0x0030 (DIGIT ZERO)</li><li>the code units of the <var>k</var> digits of the decimal representation of <var>s</var></li></ul></li><li>Otherwise, if <var>k</var> = 1, return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code unit of the single digit of <var>s</var></li><li>the code unit 0x0065 (LATIN SMALL LETTER E)</li><li>the code unit 0x002B (PLUS SIGN) or the code unit 0x002D (HYPHEN-MINUS) according to whether <var>n</var> - 1 is positive or negative</li><li>the code units of the decimal representation of the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>n</var> - 1) (with no leading zeroes)</li></ul></li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the most significant digit of the decimal representation of <var>s</var></li><li>the code unit 0x002E (FULL STOP)</li><li>the code units of the remaining <var>k</var> - 1 digits of the decimal representation of <var>s</var></li><li>the code unit 0x0065 (LATIN SMALL LETTER E)</li><li>the code unit 0x002B (PLUS SIGN) or the code unit 0x002D (HYPHEN-MINUS) according to whether <var>n</var> - 1 is positive or negative</li><li>the code units of the decimal representation of the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>n</var> - 1) (with no leading zeroes)</li></ul></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>The following observations may be useful as guidelines for implementations, but are not part of the normative requirements of this Standard:</p>\n            <ul>\n              <li>\n                If x is any <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> other than <emu-val>-0</emu-val>, then <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(x)) is exactly the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as x.\n              </li>\n              <li>\n                The least significant digit of s is not always uniquely determined by the requirements listed in step <emu-xref href=\"#step-number-tostring-intermediate-values\"><a href=\"#step-number-tostring-intermediate-values\" class=\"excluded-xref\" excluded-id=\"step-number-tostring-intermediate-values\">#step-number-tostring-intermediate-values</a></emu-xref>.\n              </li>\n            </ul>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>For implementations that provide more accurate conversions than required by the rules above, it is recommended that the following alternative version of step <emu-xref href=\"#step-number-tostring-intermediate-values\"><a href=\"#step-number-tostring-intermediate-values\" class=\"excluded-xref\" excluded-id=\"step-number-tostring-intermediate-values\">#step-number-tostring-intermediate-values</a></emu-xref> be used as a guideline:</p>\n            <emu-alg replaces-step=\"step-number-tostring-intermediate-values\"><ol start=\"5\"><li>Otherwise, let <var>n</var>, <var>k</var>, and <var>s</var> be integers such that <var>k</var> &#8805; 1, 10<sup><var>k</var> - 1</sup> &#8804; <var>s</var> &lt; 10<sup><var>k</var></sup>, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub>&#8477;</sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is <var>x</var>, and <var>k</var> is as small as possible. If there are multiple possibilities for <var>s</var>, choose the value of <var>s</var> for which <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub>&#8477;</sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is closest in value to <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>x</var>). If there are two such possible values of <var>s</var>, choose the one that is even. Note that <var>k</var> is the number of digits in the decimal representation of <var>s</var> and that <var>s</var> is not divisible by 10<sub>&#8477;</sub>.</li></ol></emu-alg>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n            <p>Implementers of ECMAScript may find useful the paper and code written by David M. Gay for binary-to-decimal conversion of floating-point numbers:</p>\n            <p>Gay, David M. Correctly Rounded Binary-Decimal and Decimal-Binary Conversions. Numerical Analysis, Manuscript 90-10. AT&amp;T Bell Laboratories (Murray Hill, New Jersey). 30 November 1990. Available as\n              <br>\n              <a href=\"http://ampl.com/REFS/abstracts.html#rounding\">http://ampl.com/REFS/abstracts.html#rounding</a>. Associated code available as\n              <br>\n              <a href=\"http://netlib.sandia.gov/fp/dtoa.c\">http://netlib.sandia.gov/fp/dtoa.c</a> and as\n              <br>\n              <a href=\"http://netlib.sandia.gov/fp/g_fmt.c\">http://netlib.sandia.gov/fp/g_fmt.c</a> and may also be found at the various <code>netlib</code> mirror sites.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-expanded-years": {"num": "20.4.1.15.1", "title": "#sec-expanded-years Expanded Years", "html": "<emu-clause id=\"sec-expanded-years\" oldids=\"sec-extended-years\"><span id=\"sec-extended-years\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-expanded-years\">#sec-expanded-years</span> Expanded Years</h1>\n          <p><emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Covering</a></emu-xref> the full <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> range of approximately 273,790 years forward or backward from 1 January 1970 (<emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\" class=\"excluded-xref\" excluded-id=\"sec-time-values-and-time-range\">#sec-time-values-and-time-range</a></emu-xref>) requires representing years before 0 or after 9999. ISO 8601 permits expansion of the year representation, but only by mutual agreement of the partners in information interchange. In the simplified ECMAScript format, such an expanded year representation shall have 6 digits and is always prefixed with a + or - sign. The year 0 is considered positive and hence prefixed with a + sign. Strings matching the <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\">Date Time String Format</a></emu-xref> with expanded years representing instants in time outside the range of a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> are treated as unrecognizable by <emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\"><code>Date.parse</code></a></emu-xref> and cause that function to return <emu-val>NaN</emu-val> without falling back to implementation-specific behaviour or heuristics.</p>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Examples of date-time values with expanded years:</p>\n            <figure>\n              <table class=\"lightweight-table\">\n                <tbody>\n                  <tr>\n                    <td>-271821-04-20T00:00:00Z</td>\n                    <td>271822 B.C.</td>\n                  </tr>\n                  <tr>\n                    <td>-000001-01-01T00:00:00Z</td>\n                    <td>2 B.C.</td>\n                  </tr>\n                  <tr>\n                    <td>+000000-01-01T00:00:00Z</td>\n                    <td>1 B.C.</td>\n                  </tr>\n                  <tr>\n                    <td>+000001-01-01T00:00:00Z</td>\n                    <td>1 A.D.</td>\n                  </tr>\n                  <tr>\n                    <td>+001970-01-01T00:00:00Z</td>\n                    <td>1970 A.D.</td>\n                  </tr>\n                  <tr>\n                    <td>+002009-12-15T00:00:00Z</td>\n                    <td>2009 A.D.</td>\n                  </tr>\n                  <tr>\n                    <td>+275760-09-13T00:00:00Z</td>\n                    <td>275760 A.D.</td>\n                  </tr>\n                </tbody>\n              </table>\n            </figure>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-local-time-zone-adjustment": {"num": "20.4.1.7", "title": "#sec-local-time-zone-adjustment LocalTZA ( t, isUTC )", "html": "<emu-clause id=\"sec-local-time-zone-adjustment\" aoid=\"LocalTZA\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-local-time-zone-adjustment\">#sec-local-time-zone-adjustment</span> LocalTZA ( <var>t</var>, <var>isUTC</var> )</h1>\n        <p>LocalTZA( <var>t</var>, <var>isUTC</var> ) is an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> algorithm that returns the local time zone adjustment, or offset, in milliseconds. The local political rules for standard time and daylight saving time in effect at <var>t</var> should be used to determine the result in the way specified in this section.</p>\n        <p>When <var>isUTC</var> is true, <emu-eqn class=\"inline\">LocalTZA( <var>t</var><sub>UTC</sub>, true )</emu-eqn> should return the offset of the local time zone from UTC measured in milliseconds at time represented by <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <emu-eqn class=\"inline\"><var>t</var><sub>UTC</sub></emu-eqn>. When the result is added to <emu-eqn class=\"inline\"><var>t</var><sub>UTC</sub></emu-eqn>, it should yield the corresponding Number <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn>.</p>\n        <p>When <var>isUTC</var> is false, <emu-eqn class=\"inline\">LocalTZA( <var>t</var><sub>local</sub>, false )</emu-eqn> should return the offset of the local time zone from UTC measured in milliseconds at local time represented by Number <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn>. When the result is subtracted from <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn>, it should yield the corresponding <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <emu-eqn class=\"inline\"><var>t</var><sub>UTC</sub></emu-eqn>.</p>\n        <p>Input <var>t</var> is nominally a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> but may be any <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. This can occur when <var>isUTC</var> is false and <var>t</var><sub>local</sub> represents a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> that is already offset outside of the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> range at the range boundaries. The algorithm must not limit <var>t</var><sub>local</sub> to the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> range, so that such inputs are supported.</p>\n        <p>When <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn> represents local time repeating multiple times at a negative time zone transition (e.g. when the daylight saving time ends or the time zone offset is decreased due to a time zone rule change) or skipped local time at a positive time zone transitions (e.g. when the daylight saving time starts or the time zone offset is increased due to a time zone rule change), <emu-eqn class=\"inline\"><var>t</var><sub>local</sub></emu-eqn> must be interpreted using the time zone offset before the transition.</p>\n        <p>If an implementation does not support a conversion described above or if political rules for time <var>t</var> are not available within the implementation, the result must be 0.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>It is recommended that implementations use the time zone information of the IANA Time Zone Database <a href=\"https://www.iana.org/time-zones/\">https://www.iana.org/time-zones/</a>.</p>\n          <p>1:30 AM on 5 November 2017 in America/New_York is repeated twice (fall backward), but it must be interpreted as 1:30 AM UTC-04 instead of 1:30 AM UTC-05. LocalTZA(<emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(2017, 10, 5), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(1, 30, 0, 0))), false) is <emu-eqn class=\"inline\">-4 &#215; <emu-xref aoid=\"msPerHour\"><a href=\"#eqn-msPerHour\">msPerHour</a></emu-xref></emu-eqn>.</p>\n          <p>2:30 AM on 12 March 2017 in America/New_York does not exist, but it must be interpreted as 2:30 AM UTC-05 (equivalent to 3:30 AM UTC-04). LocalTZA(<emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(2017, 2, 12), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(2, 30, 0, 0))), false) is <emu-eqn class=\"inline\">-5 &#215; <emu-xref aoid=\"msPerHour\"><a href=\"#eqn-msPerHour\">msPerHour</a></emu-xref></emu-eqn>.</p>\n          <p>Local time zone offset values may be positive <i>or</i> negative.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-time-values-and-time-range": {"num": "20.4.1.1", "title": "#sec-time-values-and-time-range Time Values and Time Range", "html": "<emu-clause id=\"sec-time-values-and-time-range\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-time-values-and-time-range\">#sec-time-values-and-time-range</span> Time Values and Time Range</h1>\n        <p>Time measurement in ECMAScript is analogous to time measurement in POSIX, in particular sharing definition in terms of the proleptic Gregorian calendar, an epoch of midnight at the beginning of 1 January 1970 UTC, and an accounting of every day as comprising exactly 86,400 seconds (each of which is 1000 milliseconds long).</p>\n        <p>An ECMAScript <dfn>time value</dfn> is a Number, either a finite <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> representing an instant in time to millisecond precision or <emu-val>NaN</emu-val> representing no specific instant. A time value that is a multiple of <emu-eqn class=\"inline\">24 &#215; 60 &#215; 60 &#215; 1000 = 86,400,000</emu-eqn> (i.e., is equal to 86,400,000 &#215; <var>d</var> for some <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>d</var>) represents the instant at the start of the UTC day that follows the epoch by <var>d</var> whole UTC days (preceding the epoch for negative <var>d</var>). Every other finite time value <var>t</var> is defined relative to the greatest preceding time value <var>s</var> that is such a multiple, and represents the instant that occurs within the same UTC day as <var>s</var> but follows it by <var>t</var> &#8722; <var>s</var> milliseconds.</p>\n        <p>Time values do not account for UTC leap seconds&#8212;there are no time values representing instants within positive leap seconds, and there are time values representing instants removed from the UTC timeline by negative leap seconds. However, the definition of time values nonetheless yields piecewise alignment with UTC, with discontinuities only at leap second boundaries and zero difference outside of leap seconds.</p>\n        <p>A Number can exactly represent all integers from -9,007,199,254,740,992 to 9,007,199,254,740,992 (<emu-xref href=\"#sec-number.min_safe_integer\"><a href=\"#sec-number.min_safe_integer\" class=\"excluded-xref\" excluded-id=\"sec-number.min_safe_integer\">#sec-number.min_safe_integer</a></emu-xref> and <emu-xref href=\"#sec-number.max_safe_integer\"><a href=\"#sec-number.max_safe_integer\" class=\"excluded-xref\" excluded-id=\"sec-number.max_safe_integer\">#sec-number.max_safe_integer</a></emu-xref>). A time value supports a slightly smaller range of -8,640,000,000,000,000 to 8,640,000,000,000,000 milliseconds. This yields a supported time value range of exactly -100,000,000 days to 100,000,000 days relative to midnight at the beginning of 1 January 1970 UTC.</p>\n        <p>The exact moment of midnight at the beginning of 1 January 1970 UTC is represented by the time value <emu-val>+0</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The 400 year cycle of the proleptic Gregorian calendar contains 97 leap years. This yields an average of 365.2425 days per year, which is 31,556,952,000 milliseconds. Therefore, the maximum range a Number could represent exactly with millisecond precision is approximately -285,426 to 285,426 years relative to 1970. The smaller range supported by a time value as specified in this section is approximately -273,790 to 273,790 years relative to 1970.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-week-day": {"num": "20.4.1.6", "title": "#sec-week-day Week Day", "html": "<emu-clause id=\"sec-week-day\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-week-day\">#sec-week-day</span> Week Day</h1>\n        <p>The weekday for a particular <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <var>t</var> is defined as</p>\n        <emu-eqn aoid=\"WeekDay\"><div>WeekDay(<var>t</var>) = (<emu-xref aoid=\"Day\"><a href=\"#eqn-Day\">Day</a></emu-xref>(<var>t</var>) + 4) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 7</div></emu-eqn>\n        <p>A weekday value of 0 specifies Sunday; 1 specifies Monday; 2 specifies Tuesday; 3 specifies Wednesday; 4 specifies Thursday; 5 specifies Friday; and 6 specifies Saturday. Note that <emu-eqn class=\"inline\">WeekDay(0) = 4</emu-eqn>, corresponding to Thursday, 1 January 1970.</p>\n      </emu-clause>\n\n      "}, "sec-month-number": {"num": "20.4.1.4", "title": "#sec-month-number Month Number", "html": "<emu-clause id=\"sec-month-number\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-month-number\">#sec-month-number</span> Month Number</h1>\n        <p>Months are identified by an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> in the range 0 to 11, inclusive. The mapping <emu-xref aoid=\"MonthFromTime\"><a href=\"#eqn-MonthFromTime\">MonthFromTime</a></emu-xref>(<var>t</var>) from a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> <var>t</var> to a month number is defined by:</p>\n        <emu-eqn id=\"eqn-MonthFromTime\" aoid=\"MonthFromTime\"><div>MonthFromTime(<var>t</var>)</div><div>          = 0 if 0 &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 31</div><div>          = 1 if 31 &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 59 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 2 if 59 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 90 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 3 if 90 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 120 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 4 if 120 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 151 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 5 if 151 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 181 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 6 if 181 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 212 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 7 if 212 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 243 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 8 if 243 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 273 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 9 if 273 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 304 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 10 if 304 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 334 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div><div>          = 11 if 334 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>) &#8804; <emu-xref aoid=\"DayWithinYear\"><a href=\"#eqn-DayWithinYear\">DayWithinYear</a></emu-xref>(<var>t</var>) &lt; 365 + <emu-xref aoid=\"InLeapYear\"><a href=\"#eqn-InLeapYear\">InLeapYear</a></emu-xref>(<var>t</var>)</div></emu-eqn>\n        <p>where</p>\n        <emu-eqn id=\"eqn-DayWithinYear\" aoid=\"DayWithinYear\"><div>DayWithinYear(<var>t</var>) = <emu-xref aoid=\"Day\"><a href=\"#eqn-Day\">Day</a></emu-xref>(<var>t</var>) - <emu-xref aoid=\"DayFromYear\"><a href=\"#eqn-DaysFromYear\">DayFromYear</a></emu-xref>(<emu-xref aoid=\"YearFromTime\"><a href=\"#eqn-YearFromTime\">YearFromTime</a></emu-xref>(<var>t</var>))</div></emu-eqn>\n        <p>A month value of 0 specifies January; 1 specifies February; 2 specifies March; 3 specifies April; 4 specifies May; 5 specifies June; 6 specifies July; 7 specifies August; 8 specifies September; 9 specifies October; 10 specifies November; and 11 specifies December. Note that <emu-eqn class=\"inline\"><emu-xref aoid=\"MonthFromTime\"><a href=\"#eqn-MonthFromTime\">MonthFromTime</a></emu-xref>(0) = 0</emu-eqn>, corresponding to Thursday, 1 January 1970.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}}