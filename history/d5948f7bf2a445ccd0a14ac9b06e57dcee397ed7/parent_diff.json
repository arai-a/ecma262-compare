{"from": {"secList": ["sec-utf16encodecodepoint"], "secData": {"sec-utf16encodecodepoint": {"num": "10.1.1", "title": "#sec-utf16encodecodepoint Static Semantics: UTF16EncodeCodePoint ( cp )", "html": "<emu-clause id=\"sec-utf16encodecodepoint\" aoid=\"UTF16EncodeCodePoint\" oldids=\"sec-utf16encoding,sec-codepointtoutf16codeunits\"><span id=\"sec-codepointtoutf16codeunits\"></span><span id=\"sec-utf16encoding\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-utf16encodecodepoint\">#sec-utf16encodecodepoint</span> Static Semantics: UTF16EncodeCodePoint ( <var>cp</var> )</h1>\n      <p>The abstract operation UTF16EncodeCodePoint takes argument <var>cp</var> (a Unicode code point). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>cp</var> &#8804; 0x10FFFF.</li><li>If <var>cp</var> &#8804; 0xFFFF, return the String value consisting of <var>cp</var>.</li><li>Let <var>cu1</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>((<var>cp</var> - 0x10000) / 0x400) + 0xD800.</li><li>Let <var>cu2</var> be ((<var>cp</var> - 0x10000) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 0x400) + 0xDC00.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>cu1</var> and <var>cu2</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-utf16encodecodepoint"], "secData": {"sec-utf16encodecodepoint": {"num": "10.1.1", "title": "#sec-utf16encodecodepoint Static Semantics: UTF16EncodeCodePoint ( cp )", "html": "<emu-clause id=\"sec-utf16encodecodepoint\" aoid=\"UTF16EncodeCodePoint\" oldids=\"sec-utf16encoding,sec-codepointtoutf16codeunits\"><span id=\"sec-codepointtoutf16codeunits\"></span><span id=\"sec-utf16encoding\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-utf16encodecodepoint\">#sec-utf16encodecodepoint</span> Static Semantics: UTF16EncodeCodePoint ( <var>cp</var> )</h1>\n      <p>The abstract operation UTF16EncodeCodePoint takes argument <var>cp</var> (a Unicode code point). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>cp</var> &#8804; 0x10FFFF.</li><li>If <var>cp</var> &#8804; 0xFFFF, return the String value consisting of the code unit whose value is <var>cp</var>.</li><li>Let <var>cu1</var> be the code unit whose value is <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>((<var>cp</var> - 0x10000) / 0x400) + 0xD800.</li><li>Let <var>cu2</var> be the code unit whose value is ((<var>cp</var> - 0x10000) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 0x400) + 0xDC00.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>cu1</var> and <var>cu2</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {}}}