{"from": {"secList": ["sec-weakref-execution"], "secData": {"sec-weakref-execution": {"num": "8.9.3", "title": "#sec-weakref-execution Execution", "html": "<emu-clause id=\"sec-weakref-execution\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</span> Execution</h1>\n\n      <p>At any time, if a set of objects <var>S</var> is not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref>, an ECMAScript implementation may perform the following steps atomically:</p>\n\n      <emu-alg><ol><li>For each <var>obj</var> of <var>S</var>, do<ol><li>For each <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <var>ref</var> such that <var>ref</var>.[[WeakRefTarget]] is <var>obj</var>, do<ol><li>Set <var>ref</var>.[[WeakRefTarget]] to <emu-const>empty</emu-const>.</li></ol></li><li>For each <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <var>fg</var> such that <var>fg</var>.[[Cells]] contains <var>cell</var>, and <var>cell</var>.[[WeakRefTarget]] is <var>obj</var>, do<ol><li>Set <var>cell</var>.[[WeakRefTarget]] to <emu-const>empty</emu-const>.</li><li>Optionally, perform !&#160;<emu-xref aoid=\"HostEnqueueFinalizationRegistryCleanupJob\"><a href=\"#sec-host-cleanup-finalization-registry\">HostEnqueueFinalizationRegistryCleanupJob</a></emu-xref>(<var>fg</var>).</li></ol></li><li>For each WeakMap <var>map</var> such that <var>map</var>.[[WeakMapData]] contains a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value <var>r</var> such that <var>r</var>.[[Key]] is <var>obj</var>, do<ol><li>Set <var>r</var>.[[Key]] to <emu-const>empty</emu-const>.</li><li>Set <var>r</var>.[[Value]] to <emu-const>empty</emu-const>.</li></ol></li><li>For each WeakSet <var>set</var> such that <var>set</var>.[[WeakSetData]] contains <var>obj</var>, do<ol><li>Replace the element of <var>set</var> whose value is <var>obj</var> with an element whose value is <emu-const>empty</emu-const>.</li></ol></li></ol></li></ol></emu-alg>\n\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>Together with the definition of liveness, this clause prescribes legal optimizations that an implementation may apply regarding WeakRefs.</p>\n\n        <p>It is possible to access an object without observing its identity. Optimizations such as dead variable elimination and scalar replacement on properties of non-escaping objects whose identity is not observed are allowed. These optimizations are thus allowed to observably empty WeakRefs that point to such objects.</p>\n\n        <p>On the other hand, if an object's identity is observable, and that object is in the [[WeakRefTarget]] internal slot of a <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>, optimizations such as rematerialization that observably empty the <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> are prohibited.</p>\n\n        <p>Because calling <emu-xref aoid=\"HostEnqueueFinalizationRegistryCleanupJob\"><a href=\"#sec-host-cleanup-finalization-registry\">HostEnqueueFinalizationRegistryCleanupJob</a></emu-xref> is optional, registered objects in a <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> do not necessarily hold that <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref>. Implementations may omit <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> callbacks for any reason, e.g., if the <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> itself becomes dead, or if the application is shutting down.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Implementations are not obligated to empty WeakRefs for maximal sets of non-<emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> objects.</p>\n        <p>If an implementation chooses a non-<emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> set <var>S</var> in which to empty WeakRefs, it must empty WeakRefs for all objects in <var>S</var> simultaneously. In other words, an implementation must not empty a <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> pointing to an object <var>obj</var> without emptying out other WeakRefs that, if not emptied, could result in an execution that observes the Object value of <var>obj</var>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-weakref-execution"], "secData": {"sec-weakref-execution": {"num": "8.9.3", "title": "#sec-weakref-execution Execution", "html": "<emu-clause id=\"sec-weakref-execution\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</span> Execution</h1>\n\n      <p>At any time, if a set of objects <var>S</var> is not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref>, an ECMAScript implementation may perform the following steps atomically:</p>\n\n      <emu-alg><ol><li>For each <var>obj</var> of <var>S</var>, do<ol><li>For each <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <var>ref</var> such that <var>ref</var>.[[WeakRefTarget]] is <var>obj</var>, do<ol><li>Set <var>ref</var>.[[WeakRefTarget]] to <emu-const>empty</emu-const>.</li></ol></li><li>For each <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <var>fg</var> such that <var>fg</var>.[[Cells]] contains <var>cell</var>, and <var>cell</var>.[[WeakRefTarget]] is <var>obj</var>, do<ol><li>Set <var>cell</var>.[[WeakRefTarget]] to <emu-const>empty</emu-const>.</li><li>Optionally, perform !&#160;<emu-xref aoid=\"HostEnqueueFinalizationRegistryCleanupJob\"><a href=\"#sec-host-cleanup-finalization-registry\">HostEnqueueFinalizationRegistryCleanupJob</a></emu-xref>(<var>fg</var>).</li></ol></li><li>For each WeakMap <var>map</var> such that <var>map</var>.[[WeakMapData]] contains a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value <var>r</var> such that <var>r</var>.[[Key]] is <var>obj</var>, do<ol><li>Set <var>r</var>.[[Key]] to <emu-const>empty</emu-const>.</li><li>Set <var>r</var>.[[Value]] to <emu-const>empty</emu-const>.</li></ol></li><li>For each WeakSet <var>set</var> such that <var>set</var>.[[WeakSetData]] contains <var>obj</var>, do<ol><li>Replace the element of <var>set</var>.[[WeakSetData]] whose value is <var>obj</var> with an element whose value is <emu-const>empty</emu-const>.</li></ol></li></ol></li></ol></emu-alg>\n\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>Together with the definition of liveness, this clause prescribes legal optimizations that an implementation may apply regarding WeakRefs.</p>\n\n        <p>It is possible to access an object without observing its identity. Optimizations such as dead variable elimination and scalar replacement on properties of non-escaping objects whose identity is not observed are allowed. These optimizations are thus allowed to observably empty WeakRefs that point to such objects.</p>\n\n        <p>On the other hand, if an object's identity is observable, and that object is in the [[WeakRefTarget]] internal slot of a <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>, optimizations such as rematerialization that observably empty the <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> are prohibited.</p>\n\n        <p>Because calling <emu-xref aoid=\"HostEnqueueFinalizationRegistryCleanupJob\"><a href=\"#sec-host-cleanup-finalization-registry\">HostEnqueueFinalizationRegistryCleanupJob</a></emu-xref> is optional, registered objects in a <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> do not necessarily hold that <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref>. Implementations may omit <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> callbacks for any reason, e.g., if the <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> itself becomes dead, or if the application is shutting down.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Implementations are not obligated to empty WeakRefs for maximal sets of non-<emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> objects.</p>\n        <p>If an implementation chooses a non-<emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> set <var>S</var> in which to empty WeakRefs, it must empty WeakRefs for all objects in <var>S</var> simultaneously. In other words, an implementation must not empty a <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> pointing to an object <var>obj</var> without emptying out other WeakRefs that, if not emptied, could result in an execution that observes the Object value of <var>obj</var>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {}}}