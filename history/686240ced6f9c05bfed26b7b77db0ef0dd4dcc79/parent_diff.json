{"from": {"secList": ["sec-regexp.prototype-@@replace"], "secData": {"sec-regexp.prototype-@@replace": {"num": "21.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each <var>result</var> in <var>results</var>, do<ol><li>Let <var>nCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Set <var>nCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>nCaptures</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"index\"</emu-val>)).</li><li>Set <var>position</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>position</var>, <var>lengthS</var>), 0).</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var>,<ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>)).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"groups\"</emu-val>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in list order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <var>position</var> and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>namedCaptures</var> to ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>namedCaptures</var>).</li></ol></li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var>, the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var> to <var>position</var>, and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var>.</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.replace]\"</emu-val>.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-regexp.prototype-@@replace"], "secData": {"sec-regexp.prototype-@@replace": {"num": "21.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each <var>result</var> in <var>results</var>, do<ol><li>Let <var>resultLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Let <var>nCaptures</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>resultLength</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"index\"</emu-val>)).</li><li>Set <var>position</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>position</var>, <var>lengthS</var>), 0).</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var>,<ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>)).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"groups\"</emu-val>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in list order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <var>position</var> and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>namedCaptures</var> to ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>namedCaptures</var>).</li></ol></li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var>, the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var> to <var>position</var>, and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var>.</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.replace]\"</emu-val>.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}}