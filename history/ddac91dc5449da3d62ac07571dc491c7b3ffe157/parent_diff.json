{"from": {"secList": ["sec-array.prototype.lastindexof", "sec-tointeger", "sec-timeclip", "sec-array.prototype.indexof", "sec-toindex"], "secData": {"sec-array.prototype.lastindexof": {"num": "22.1.3.17", "title": "#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.lastindexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.lastindexof\">#sec-array.prototype.lastindexof</span> Array.prototype.lastIndexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>lastIndexOf</code> compares <var>searchElement</var> to the elements of the array in descending order using the <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> algorithm, and if found at one or more indices, returns the largest such index; otherwise, -1 is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to the array's length minus one (i.e. the whole array is searched). If it is greater than or equal to the length of the array, the whole array will be searched. If it is negative, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than 0, -1 is returned.</p>\n        </div></emu-note>\n        <p>When the <code>lastIndexOf</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return -1.</li><li>If <var>fromIndex</var> is present, let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>fromIndex</var>); else let <var>n</var> be <var>len</var> - 1.</li><li>If <var>n</var> &#8805; 0, then<ol><li>If <var>n</var> is <emu-val>-0</emu-val>, let <var>k</var> be <emu-val>+0</emu-val>; else let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>n</var>, <var>len</var> - 1).</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0<ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>same</var> be the result of performing <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> <var>searchElement</var> === <var>elementK</var>.</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <var>k</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return -1.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>lastIndexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-tointeger": {"num": "7.1.5", "title": "#sec-tointeger ToInteger ( argument )", "html": "<emu-clause id=\"sec-tointeger\" aoid=\"ToInteger\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tointeger\">#sec-tointeger</span> ToInteger ( <var>argument</var> )</h1>\n      <p>The abstract operation ToInteger converts <var>argument</var> to an integral <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. This abstract operation functions as follows:</p>\n      <emu-alg><ol><li>Let <var>number</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>argument</var>).</li><li>If <var>number</var> is <emu-val>NaN</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>number</var> is <emu-val>+0</emu-val>, <emu-val>-0</emu-val>, <emu-val>+&#8734;</emu-val>, or <emu-val>-&#8734;</emu-val>, return <var>number</var>.</li><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is the same sign as <var>number</var> and whose magnitude is <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>(<emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>number</var>)).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-timeclip": {"num": "20.4.1.14", "title": "#sec-timeclip TimeClip ( time )", "html": "<emu-clause id=\"sec-timeclip\" aoid=\"TimeClip\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-timeclip\">#sec-timeclip</span> TimeClip ( <var>time</var> )</h1>\n        <p>The abstract operation TimeClip calculates a number of milliseconds from its argument, which must be an ECMAScript <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. This operator functions as follows:</p>\n        <emu-alg><ol><li>If <var>time</var> is not finite, return <emu-val>NaN</emu-val>.</li><li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>time</var>) &gt; 8.64 &#215; 10<sup>15</sup>, return <emu-val>NaN</emu-val>.</li><li>Let <var>clippedTime</var> be !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>time</var>).</li><li>If <var>clippedTime</var> is <emu-val>-0</emu-val>, set <var>clippedTime</var> to <emu-val>+0</emu-val>.</li><li>Return <var>clippedTime</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The point of step 4 is that an implementation is permitted a choice of internal representations of time values, for example as a 64-bit signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> or as a 64-bit floating-point value. Depending on the implementation, this internal representation may or may not distinguish <emu-val>-0</emu-val> and <emu-val>+0</emu-val>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.indexof": {"num": "22.1.3.14", "title": "#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.indexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.indexof\">#sec-array.prototype.indexof</span> Array.prototype.indexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>indexOf</code> compares <var>searchElement</var> to the elements of the array, in ascending order, using the <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> algorithm, and if found at one or more indices, returns the smallest such index; otherwise, -1 is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to 0 (i.e. the whole array is searched). If it is greater than or equal to the length of the array, -1 is returned, i.e. the array will not be searched. If it is negative, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than 0, the whole array will be searched.</p>\n        </div></emu-note>\n        <p>When the <code>indexOf</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return -1.</li><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>fromIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>fromIndex</var> is <emu-val>undefined</emu-val>, then <var>n</var> is 0.</li><li>If <var>n</var> &#8805; <var>len</var>, return -1.</li><li>If <var>n</var> &#8805; 0, then<ol><li>If <var>n</var> is <emu-val>-0</emu-val>, let <var>k</var> be <emu-val>+0</emu-val>; else let <var>k</var> be <var>n</var>.</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li><li>If <var>k</var> &lt; 0, set <var>k</var> to 0.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>same</var> be the result of performing <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> <var>searchElement</var> === <var>elementK</var>.</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <var>k</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return -1.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>indexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-toindex": {"num": "7.1.22", "title": "#sec-toindex ToIndex ( value )", "html": "<emu-clause id=\"sec-toindex\" aoid=\"ToIndex\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toindex\">#sec-toindex</span> ToIndex ( <var>value</var> )</h1>\n      <p>The abstract operation ToIndex returns <var>value</var> argument converted to a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> if it is a valid <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> value. This abstract operation functions as follows:</p>\n      <emu-alg><ol><li>If <var>value</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>index</var> be 0.</li></ol></li><li>Else,<ol><li>Let <var>integerIndex</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>If <var>integerIndex</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(<var>integerIndex</var>).</li><li>If <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref>(<var>integerIndex</var>, <var>index</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Return <var>index</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}}, "figData": {}}, "to": {"secList": ["sec-array.prototype.lastindexof", "sec-tointeger", "sec-timeclip", "sec-array.prototype.indexof", "sec-toindex"], "secData": {"sec-array.prototype.lastindexof": {"num": "22.1.3.17", "title": "#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.lastindexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.lastindexof\">#sec-array.prototype.lastindexof</span> Array.prototype.lastIndexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>lastIndexOf</code> compares <var>searchElement</var> to the elements of the array in descending order using the <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> algorithm, and if found at one or more indices, returns the largest such index; otherwise, -1 is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to the array's length minus one (i.e. the whole array is searched). If it is greater than or equal to the length of the array, the whole array will be searched. If it is negative, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than 0, -1 is returned.</p>\n        </div></emu-note>\n        <p>When the <code>lastIndexOf</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return -1.</li><li>If <var>fromIndex</var> is present, let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>fromIndex</var>); else let <var>n</var> be <var>len</var> - 1.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>n</var>, <var>len</var> - 1).</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0<ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>same</var> be the result of performing <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> <var>searchElement</var> === <var>elementK</var>.</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <var>k</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return -1.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>lastIndexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-tointeger": {"num": "7.1.5", "title": "#sec-tointeger ToInteger ( argument )", "html": "<emu-clause id=\"sec-tointeger\" aoid=\"ToInteger\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tointeger\">#sec-tointeger</span> ToInteger ( <var>argument</var> )</h1>\n      <p>The abstract operation ToInteger converts <var>argument</var> to an integral <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. This abstract operation functions as follows:</p>\n      <emu-alg><ol><li>Let <var>number</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>argument</var>).</li><li>If <var>number</var> is <emu-val>NaN</emu-val>, <emu-val>+0</emu-val>, or <emu-val>-0</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>number</var> is <emu-val>+&#8734;</emu-val>, or <emu-val>-&#8734;</emu-val>, return <var>number</var>.</li><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is the same sign as <var>number</var> and whose magnitude is <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>(<emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>number</var>)).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-timeclip": {"num": "20.4.1.14", "title": "#sec-timeclip TimeClip ( time )", "html": "<emu-clause id=\"sec-timeclip\" aoid=\"TimeClip\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-timeclip\">#sec-timeclip</span> TimeClip ( <var>time</var> )</h1>\n        <p>The abstract operation TimeClip calculates a number of milliseconds from its argument, which must be an ECMAScript <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. This operator functions as follows:</p>\n        <emu-alg><ol><li>If <var>time</var> is not finite, return <emu-val>NaN</emu-val>.</li><li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>time</var>) &gt; 8.64 &#215; 10<sup>15</sup>, return <emu-val>NaN</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>time</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The point of step 4 is that an implementation is permitted a choice of internal representations of time values, for example as a 64-bit signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> or as a 64-bit floating-point value. Depending on the implementation, this internal representation may or may not distinguish <emu-val>-0</emu-val> and <emu-val>+0</emu-val>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.indexof": {"num": "22.1.3.14", "title": "#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.indexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.indexof\">#sec-array.prototype.indexof</span> Array.prototype.indexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>indexOf</code> compares <var>searchElement</var> to the elements of the array, in ascending order, using the <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> algorithm, and if found at one or more indices, returns the smallest such index; otherwise, -1 is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to 0 (i.e. the whole array is searched). If it is greater than or equal to the length of the array, -1 is returned, i.e. the array will not be searched. If it is negative, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than 0, the whole array will be searched.</p>\n        </div></emu-note>\n        <p>When the <code>indexOf</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return -1.</li><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>fromIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>fromIndex</var> is <emu-val>undefined</emu-val>, then <var>n</var> is 0.</li><li>If <var>n</var> &#8805; <var>len</var>, return -1.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <var>n</var>.</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li><li>If <var>k</var> &lt; 0, set <var>k</var> to 0.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>same</var> be the result of performing <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> <var>searchElement</var> === <var>elementK</var>.</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <var>k</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return -1.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>indexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-toindex": {"num": "7.1.22", "title": "#sec-toindex ToIndex ( value )", "html": "<emu-clause id=\"sec-toindex\" aoid=\"ToIndex\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toindex\">#sec-toindex</span> ToIndex ( <var>value</var> )</h1>\n      <p>The abstract operation ToIndex returns <var>value</var> argument converted to a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> if it is a valid <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> value. This abstract operation functions as follows:</p>\n      <emu-alg><ol><li>If <var>value</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>index</var> be 0.</li></ol></li><li>Else,<ol><li>Let <var>integerIndex</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>If <var>integerIndex</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(<var>integerIndex</var>).</li><li>If !&#160;<emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>integerIndex</var>, <var>index</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Return <var>index</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}}, "figData": {}}}