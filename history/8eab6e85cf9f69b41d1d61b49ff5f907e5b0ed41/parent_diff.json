{"from": {"secList": ["sec-reflect.setprototypeof", "sec-reflect-object"], "secData": {"sec-reflect.setprototypeof": {"num": "26.1.13", "title": "#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )", "html": "<emu-clause id=\"sec-reflect.setprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect.setprototypeof\">#sec-reflect.setprototypeof</span> Reflect.setPrototypeOf ( <var>target</var>, <var>proto</var> )</h1>\n      <p>When the <code>setPrototypeOf</code> function is called with arguments <var>target</var> and <var>proto</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>proto</var>) is not Object and <var>proto</var> is not <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ? <var>target</var>.[[SetPrototypeOf]](<var>proto</var>).</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-reflect-object": {"num": "26.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Reflect\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">26.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">26.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">26.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">26.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">26.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">26.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">26.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">26.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">26.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">26.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">26.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">26.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">26.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}, "to": {"secList": ["sec-reflect.setprototypeof", "sec-reflect-object", "sec-reflect-@@tostringtag"], "secData": {"sec-reflect.setprototypeof": {"num": "26.1.13", "title": "#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )", "html": "<emu-clause id=\"sec-reflect.setprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect.setprototypeof\">#sec-reflect.setprototypeof</span> Reflect.setPrototypeOf ( <var>target</var>, <var>proto</var> )</h1>\n      <p>When the <code>setPrototypeOf</code> function is called with arguments <var>target</var> and <var>proto</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>proto</var>) is not Object and <var>proto</var> is not <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ? <var>target</var>.[[SetPrototypeOf]](<var>proto</var>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-reflect-object": {"num": "26.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Reflect\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">26.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">26.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">26.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">26.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">26.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">26.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">26.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">26.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">26.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">26.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">26.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">26.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">26.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div><div id=\"excluded-sec-reflect-@@tostringtag\"><h1><span class=\"secnum\">26.1.14</span>#sec-reflect-@@tostringtag Reflect [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-reflect-@@tostringtag": {"num": "26.1.14", "title": "#sec-reflect-@@tostringtag Reflect [ @@toStringTag ]", "html": "<emu-clause id=\"sec-reflect-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-@@tostringtag\">#sec-reflect-@@tostringtag</span> Reflect [ @@toStringTag ]</h1>\n      <p>The initial value of the <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toStringTag</a></emu-xref> property is the String value <emu-val>\"Reflect\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}}, "figData": {}}}