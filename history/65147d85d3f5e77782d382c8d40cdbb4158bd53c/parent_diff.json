{"from": {"secList": ["sec-leavecriticalsection", "sec-removewaiter", "sec-addwaiter", "sec-notifywaiter", "sec-getwaiterlist", "sec-suspend", "sec-removewaiters", "sec-entercriticalsection"], "secData": {"sec-leavecriticalsection": {"num": "24.4.1.5", "title": "#sec-leavecriticalsection LeaveCriticalSection ( WL )", "html": "<emu-clause id=\"sec-leavecriticalsection\" aoid=\"LeaveCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-leavecriticalsection\">#sec-leavecriticalsection</span> LeaveCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation LeaveCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>.</li><li>Leave the critical section for <var>WL</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-removewaiter": {"num": "24.4.1.7", "title": "#sec-removewaiter RemoveWaiter ( WL, W )", "html": "<emu-clause id=\"sec-removewaiter\" aoid=\"RemoveWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-removewaiter\">#sec-removewaiter</span> RemoveWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation RemoveWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li>Remove <var>W</var> from the list of waiters in <var>WL</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-addwaiter": {"num": "24.4.1.6", "title": "#sec-addwaiter AddWaiter ( WL, W )", "html": "<emu-clause id=\"sec-addwaiter\" aoid=\"AddWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-addwaiter\">#sec-addwaiter</span> AddWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation AddWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is not on the list of waiters in any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Add <var>W</var> to the end of the list of waiters in <var>WL</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-notifywaiter": {"num": "24.4.1.10", "title": "#sec-notifywaiter NotifyWaiter ( WL, W )", "html": "<emu-clause id=\"sec-notifywaiter\" aoid=\"NotifyWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-notifywaiter\">#sec-notifywaiter</span> NotifyWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation NotifyWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventsRecord</var> be the <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>agentSynchronizesWith</var> be <var>eventsRecord</var>.[[AgentSynchronizesWith]].</li><li>Let <var>notifierEventList</var> be <var>eventsRecord</var>.[[EventList]].</li><li>Let <var>waiterEventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <var>W</var>.</li><li>Let <var>notifyEvent</var> and <var>waitEvent</var> be new <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize</a></emu-xref> events.</li><li>Append <var>notifyEvent</var> to <var>notifierEventList</var>.</li><li>Append <var>waitEvent</var> to <var>waiterEventList</var>.</li><li>Append (<var>notifyEvent</var>, <var>waitEvent</var>) to <var>agentSynchronizesWith</var>.</li><li>Notify the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <var>W</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The embedding may delay notifying <var>W</var>, e.g. for resource management reasons, but <var>W</var> must eventually be notified in order to guarantee forward progress.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-getwaiterlist": {"num": "24.4.1.3", "title": "#sec-getwaiterlist GetWaiterList ( block, i )", "html": "<emu-clause id=\"sec-getwaiterlist\" aoid=\"GetWaiterList\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getwaiterlist\">#sec-getwaiterlist</span> GetWaiterList ( <var>block</var>, <var>i</var> )</h1>\n        <p>A  <dfn>WaiterList</dfn> is a semantic object that contains an ordered list of those agents that are waiting on a location (<var>block</var>, <var>i</var>) in shared memory; <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> and <var>i</var> a byte offset into the memory of <var>block</var>.</p>\n        <p>The <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> has a store of WaiterList objects; the store is indexed by (<var>block</var>, <var>i</var>). WaiterLists are <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>-independent: a lookup in the store of WaiterLists by (<var>block</var>, <var>i</var>) will result in the same WaiterList object in any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</p>\n        <p>Operations on a WaiterList&#8212;adding and removing waiting agents, traversing the list of agents, suspending and notifying agents on the list&#8212;may only be performed by agents that have entered the WaiterList's critical section.</p>\n        <p>The abstract operation GetWaiterList takes two arguments, a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> <var>block</var> and a nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> and <var>i</var> + 3 are valid byte offsets within the memory of <var>block</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> is divisible by 4.</li><li>Return the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> that is referenced by the pair (<var>block</var>, <var>i</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-suspend": {"num": "24.4.1.9", "title": "#sec-suspend Suspend ( WL, W, timeout )", "html": "<emu-clause id=\"sec-suspend\" aoid=\"Suspend\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-suspend\">#sec-suspend</span> Suspend ( <var>WL</var>, <var>W</var>, <var>timeout</var> )</h1>\n        <p>The abstract operation Suspend takes three arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>, an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>, and a nonnegative, non-<emu-val>NaN</emu-val> Number <var>timeout</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is equal to <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"AgentCanSuspend\"><a href=\"#sec-agentcansuspend\">AgentCanSuspend</a></emu-xref>() is <emu-val>true</emu-val>.</li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>) and suspend <var>W</var> for up to <var>timeout</var> milliseconds, performing the combined operation in such a way that a notification that arrives after the critical section is exited but before the suspension takes effect is not lost.  <var>W</var> can notify either because the timeout expired or because it was notified explicitly by another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> calling <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>), and not for any other reasons at all.</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>If <var>W</var> was notified explicitly by another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> calling <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-removewaiters": {"num": "24.4.1.8", "title": "#sec-removewaiters RemoveWaiters ( WL, c )", "html": "<emu-clause id=\"sec-removewaiters\" aoid=\"RemoveWaiters\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-removewaiters\">#sec-removewaiters</span> RemoveWaiters ( <var>WL</var>, <var>c</var> )</h1>\n        <p>The abstract operation RemoveWaiters takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>c</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>.</li><li>Let <var>L</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>S</var> be a reference to the list of waiters in <var>WL</var>.</li><li>Repeat, while <var>c</var> &gt; 0 and <var>S</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>,<ol><li>Let <var>W</var> be the first waiter in <var>S</var>.</li><li>Add <var>W</var> to the end of <var>L</var>.</li><li>Remove <var>W</var> from <var>S</var>.</li><li>Set <var>c</var> to <var>c</var> - 1.</li></ol></li><li>Return <var>L</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-entercriticalsection": {"num": "24.4.1.4", "title": "#sec-entercriticalsection EnterCriticalSection ( WL )", "html": "<emu-clause id=\"sec-entercriticalsection\" aoid=\"EnterCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-entercriticalsection\">#sec-entercriticalsection</span> EnterCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation EnterCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is not in the critical section for any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Wait until no <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the critical section for <var>WL</var>, then enter the critical section for <var>WL</var> (without allowing any other <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to enter).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-leavecriticalsection", "sec-removewaiter", "sec-addwaiter", "sec-notifywaiter", "sec-getwaiterlist", "sec-suspend", "sec-removewaiters", "sec-entercriticalsection"], "secData": {"sec-leavecriticalsection": {"num": "24.4.1.5", "title": "#sec-leavecriticalsection LeaveCriticalSection ( WL )", "html": "<emu-clause id=\"sec-leavecriticalsection\" aoid=\"LeaveCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-leavecriticalsection\">#sec-leavecriticalsection</span> LeaveCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation LeaveCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li>Leave the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-removewaiter": {"num": "24.4.1.7", "title": "#sec-removewaiter RemoveWaiter ( WL, W )", "html": "<emu-clause id=\"sec-removewaiter\" aoid=\"RemoveWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-removewaiter\">#sec-removewaiter</span> RemoveWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation RemoveWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li>Remove <var>W</var> from the list of waiters in <var>WL</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-addwaiter": {"num": "24.4.1.6", "title": "#sec-addwaiter AddWaiter ( WL, W )", "html": "<emu-clause id=\"sec-addwaiter\" aoid=\"AddWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-addwaiter\">#sec-addwaiter</span> AddWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation AddWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is not on the list of waiters in any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Add <var>W</var> to the end of the list of waiters in <var>WL</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-notifywaiter": {"num": "24.4.1.10", "title": "#sec-notifywaiter NotifyWaiter ( WL, W )", "html": "<emu-clause id=\"sec-notifywaiter\" aoid=\"NotifyWaiter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-notifywaiter\">#sec-notifywaiter</span> NotifyWaiter ( <var>WL</var>, <var>W</var> )</h1>\n        <p>The abstract operation NotifyWaiter takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventsRecord</var> be the <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>agentSynchronizesWith</var> be <var>eventsRecord</var>.[[AgentSynchronizesWith]].</li><li>Let <var>notifierEventList</var> be <var>eventsRecord</var>.[[EventList]].</li><li>Let <var>waiterEventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <var>W</var>.</li><li>Let <var>notifyEvent</var> and <var>waitEvent</var> be new <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize</a></emu-xref> events.</li><li>Append <var>notifyEvent</var> to <var>notifierEventList</var>.</li><li>Append <var>waitEvent</var> to <var>waiterEventList</var>.</li><li>Append (<var>notifyEvent</var>, <var>waitEvent</var>) to <var>agentSynchronizesWith</var>.</li><li>Notify the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <var>W</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The embedding may delay notifying <var>W</var>, e.g. for resource management reasons, but <var>W</var> must eventually be notified in order to guarantee forward progress.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-getwaiterlist": {"num": "24.4.1.3", "title": "#sec-getwaiterlist GetWaiterList ( block, i )", "html": "<emu-clause id=\"sec-getwaiterlist\" aoid=\"GetWaiterList\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getwaiterlist\">#sec-getwaiterlist</span> GetWaiterList ( <var>block</var>, <var>i</var> )</h1>\n        <p>A  <dfn>WaiterList</dfn> is a semantic object that contains an ordered list of those agents that are waiting on a location (<var>block</var>, <var>i</var>) in shared memory; <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> and <var>i</var> a byte offset into the memory of <var>block</var>.</p>\n        <p>The <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> has a store of WaiterList objects; the store is indexed by (<var>block</var>, <var>i</var>). WaiterLists are <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>-independent: a lookup in the store of WaiterLists by (<var>block</var>, <var>i</var>) will result in the same WaiterList object in any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</p>\n        <p>Each WaiterList has a  <dfn>critical section</dfn> that controls exclusive access to that WaiterList during evaluation. Only a single <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> may enter a WaiterList's critical section at one time. Entering and leaving a WaiterList's critical section is controlled by the <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref> and <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>. Operations on a WaiterList&#8212;adding and removing waiting agents, traversing the list of agents, suspending and notifying agents on the list&#8212;may only be performed by agents that have entered the WaiterList's critical section.</p>\n        <p>The abstract operation GetWaiterList takes two arguments, a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> <var>block</var> and a nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> and <var>i</var> + 3 are valid byte offsets within the memory of <var>block</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> is divisible by 4.</li><li>Return the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> that is referenced by the pair (<var>block</var>, <var>i</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-suspend": {"num": "24.4.1.9", "title": "#sec-suspend Suspend ( WL, W, timeout )", "html": "<emu-clause id=\"sec-suspend\" aoid=\"Suspend\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-suspend\">#sec-suspend</span> Suspend ( <var>WL</var>, <var>W</var>, <var>timeout</var> )</h1>\n        <p>The abstract operation Suspend takes three arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>, an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> signifier <var>W</var>, and a nonnegative, non-<emu-val>NaN</emu-val> Number <var>timeout</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is equal to <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is on the list of waiters in <var>WL</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"AgentCanSuspend\"><a href=\"#sec-agentcansuspend\">AgentCanSuspend</a></emu-xref>() is <emu-val>true</emu-val>.</li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>) and suspend <var>W</var> for up to <var>timeout</var> milliseconds, performing the combined operation in such a way that a notification that arrives after the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> is exited but before the suspension takes effect is not lost.  <var>W</var> can notify either because the timeout expired or because it was notified explicitly by another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> calling <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>), and not for any other reasons at all.</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>If <var>W</var> was notified explicitly by another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> calling <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-removewaiters": {"num": "24.4.1.8", "title": "#sec-removewaiters RemoveWaiters ( WL, c )", "html": "<emu-clause id=\"sec-removewaiters\" aoid=\"RemoveWaiters\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-removewaiters\">#sec-removewaiters</span> RemoveWaiters ( <var>WL</var>, <var>c</var> )</h1>\n        <p>The abstract operation RemoveWaiters takes two arguments, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var> and nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>c</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>.</li><li>Let <var>L</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>S</var> be a reference to the list of waiters in <var>WL</var>.</li><li>Repeat, while <var>c</var> &gt; 0 and <var>S</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>,<ol><li>Let <var>W</var> be the first waiter in <var>S</var>.</li><li>Add <var>W</var> to the end of <var>L</var>.</li><li>Remove <var>W</var> from <var>S</var>.</li><li>Set <var>c</var> to <var>c</var> - 1.</li></ol></li><li>Return <var>L</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-entercriticalsection": {"num": "24.4.1.4", "title": "#sec-entercriticalsection EnterCriticalSection ( WL )", "html": "<emu-clause id=\"sec-entercriticalsection\" aoid=\"EnterCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-entercriticalsection\">#sec-entercriticalsection</span> EnterCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation EnterCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is not in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Wait until no <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>, then enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var> (without allowing any other <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to enter).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}}