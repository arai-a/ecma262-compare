{"from": {"secList": ["sec-array.prototype.flatmap", "sec-flattenintoarray"], "secData": {"sec-array.prototype.flatmap": {"num": "22.1.3.11", "title": "#sec-array.prototype.flatmap Array.prototype.flatMap ( mapperFunction [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.flatmap\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.flatmap\">#sec-array.prototype.flatmap</span> Array.prototype.flatMap ( <var>mapperFunction</var> [ , <var>thisArg</var> ] )</h1>\n        <p>When the <code>flatMap</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>sourceLen</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapperFunction</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>thisArg</var> is present, let <var>T</var> be <var>thisArg</var>; else let <var>T</var> be <emu-val>undefined</emu-val>.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, 0).</li><li>Perform ?&#160;<emu-xref aoid=\"FlattenIntoArray\"><a href=\"#sec-flattenintoarray\">FlattenIntoArray</a></emu-xref>(<var>A</var>, <var>O</var>, <var>sourceLen</var>, 0, 1, <var>mapperFunction</var>, <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-flattenintoarray": {"num": "22.1.3.10.1", "title": "#sec-flattenintoarray FlattenIntoArray ( target, source, sourceLen, start, depth [ , mapperFunction, thisArg ] )", "html": "<emu-clause id=\"sec-flattenintoarray\" aoid=\"FlattenIntoArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-flattenintoarray\">#sec-flattenintoarray</span> FlattenIntoArray ( <var>target</var>, <var>source</var>, <var>sourceLen</var>, <var>start</var>, <var>depth</var> [ , <var>mapperFunction</var>, <var>thisArg</var> ] )</h1>\n          <emu-alg><ol><li>Let <var>targetIndex</var> be <var>start</var>.</li><li>Let <var>sourceIndex</var> be 0.</li><li>Repeat, while <var>sourceIndex</var> &lt; <var>sourceLen</var><ol><li>Let <var>P</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sourceIndex</var>).</li><li>Let <var>exists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>source</var>, <var>P</var>).</li><li>If <var>exists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>element</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>source</var>, <var>P</var>).</li><li>If <var>mapperFunction</var> is present, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>thisArg</var> is present.</li><li>Set <var>element</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapperFunction</var>, <var>thisArg</var>, &#171; <var>element</var>, <var>sourceIndex</var>, <var>source</var> &#187;).</li></ol></li><li>Let <var>shouldFlatten</var> be <emu-val>false</emu-val>.</li><li>If <var>depth</var> &gt; 0, then<ol><li>Set <var>shouldFlatten</var> to ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>element</var>).</li></ol></li><li>If <var>shouldFlatten</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementLen</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>element</var>).</li><li>Set <var>targetIndex</var> to ?&#160;<emu-xref aoid=\"FlattenIntoArray\"><a href=\"#sec-flattenintoarray\">FlattenIntoArray</a></emu-xref>(<var>target</var>, <var>element</var>, <var>elementLen</var>, <var>targetIndex</var>, <var>depth</var> - 1).</li></ol></li><li>Else,<ol><li>If <var>targetIndex</var> &#8805; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>target</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>targetIndex</var>), <var>element</var>).</li><li>Set <var>targetIndex</var> to <var>targetIndex</var> + 1.</li></ol></li></ol></li><li>Set <var>sourceIndex</var> to <var>sourceIndex</var> + 1.</li></ol></li><li>Return <var>targetIndex</var>.\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}}, "figData": {}}, "to": {"secList": ["sec-array.prototype.flatmap", "sec-flattenintoarray"], "secData": {"sec-array.prototype.flatmap": {"num": "22.1.3.11", "title": "#sec-array.prototype.flatmap Array.prototype.flatMap ( mapperFunction [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.flatmap\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.flatmap\">#sec-array.prototype.flatmap</span> Array.prototype.flatMap ( <var>mapperFunction</var> [ , <var>thisArg</var> ] )</h1>\n        <p>When the <code>flatMap</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>sourceLen</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If !&#160;<emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapperFunction</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>thisArg</var> is present, let <var>T</var> be <var>thisArg</var>; else let <var>T</var> be <emu-val>undefined</emu-val>.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, 0).</li><li>Perform ?&#160;<emu-xref aoid=\"FlattenIntoArray\"><a href=\"#sec-flattenintoarray\">FlattenIntoArray</a></emu-xref>(<var>A</var>, <var>O</var>, <var>sourceLen</var>, 0, 1, <var>mapperFunction</var>, <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-flattenintoarray": {"num": "22.1.3.10.1", "title": "#sec-flattenintoarray FlattenIntoArray ( target, source, sourceLen, start, depth [ , mapperFunction, thisArg ] )", "html": "<emu-clause id=\"sec-flattenintoarray\" aoid=\"FlattenIntoArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-flattenintoarray\">#sec-flattenintoarray</span> FlattenIntoArray ( <var>target</var>, <var>source</var>, <var>sourceLen</var>, <var>start</var>, <var>depth</var> [ , <var>mapperFunction</var>, <var>thisArg</var> ] )</h1>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is Object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>source</var>) is Object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>sourceLen</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> Number &#8805; 0.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>start</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> Number &#8805; 0.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>depth</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> Number, <emu-val>+&#8734;</emu-val>, or <emu-val>-&#8734;</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>mapperFunction</var> is present, then !&#160;<emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapperFunction</var>) is <emu-val>true</emu-val>, <var>thisArg</var> is present, and <var>depth</var> is <emu-val>1</emu-val>.</li><li>Let <var>targetIndex</var> be <var>start</var>.</li><li>Let <var>sourceIndex</var> be 0.</li><li>Repeat, while <var>sourceIndex</var> &lt; <var>sourceLen</var><ol><li>Let <var>P</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>sourceIndex</var>).</li><li>Let <var>exists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>source</var>, <var>P</var>).</li><li>If <var>exists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>element</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>source</var>, <var>P</var>).</li><li>If <var>mapperFunction</var> is present, then<ol><li>Set <var>element</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapperFunction</var>, <var>thisArg</var>, &#171; <var>element</var>, <var>sourceIndex</var>, <var>source</var> &#187;).</li></ol></li><li>Let <var>shouldFlatten</var> be <emu-val>false</emu-val>.</li><li>If <var>depth</var> &gt; 0, then<ol><li>Set <var>shouldFlatten</var> to ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>element</var>).</li></ol></li><li>If <var>shouldFlatten</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementLen</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>element</var>).</li><li>Set <var>targetIndex</var> to ?&#160;<emu-xref aoid=\"FlattenIntoArray\"><a href=\"#sec-flattenintoarray\">FlattenIntoArray</a></emu-xref>(<var>target</var>, <var>element</var>, <var>elementLen</var>, <var>targetIndex</var>, <var>depth</var> - 1).</li></ol></li><li>Else,<ol><li>If <var>targetIndex</var> &#8805; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>target</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>targetIndex</var>), <var>element</var>).</li><li>Set <var>targetIndex</var> to <var>targetIndex</var> + 1.</li></ol></li></ol></li><li>Set <var>sourceIndex</var> to <var>sourceIndex</var> + 1.</li></ol></li><li>Return <var>targetIndex</var>.\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}}, "figData": {}}}