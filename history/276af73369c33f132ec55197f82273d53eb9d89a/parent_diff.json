{"from": {"secList": ["sec-regexp.prototype.compile"], "secData": {"sec-regexp.prototype.compile": {"num": "B.2.5.1", "title": "#sec-regexp.prototype.compile RegExp.prototype.compile ( pattern, flags )", "html": "<emu-annex id=\"sec-regexp.prototype.compile\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype.compile\">#sec-regexp.prototype.compile</span> RegExp.prototype.compile ( <var>pattern</var>, <var>flags</var> )</h1>\n        <p>When the <code>compile</code> method is called with arguments <var>pattern</var> and <var>flags</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object and <var>O</var> does not have a [[RegExpMatcher]] internal slot, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>pattern</var>) is Object and <var>pattern</var> has a [[RegExpMatcher]] internal slot, then<ol><li>If <var>flags</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>P</var> be <var>pattern</var>.[[OriginalSource]].</li><li>Let <var>F</var> be <var>pattern</var>.[[OriginalFlags]].</li></ol></li><li>Else,<ol><li>Let <var>P</var> be <var>pattern</var>.</li><li>Let <var>F</var> be <var>flags</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"RegExpInitialize\"><a href=\"#sec-regexpinitialize\">RegExpInitialize</a></emu-xref>(<var>O</var>, <var>P</var>, <var>F</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>compile</code> method completely reinitializes the <emu-val>this</emu-val> value RegExp with a new pattern and flags. An implementation may interpret use of this method as an assertion that the resulting RegExp object will be used multiple times and hence is a candidate for extra optimization.</p>\n        </div></emu-note>\n      </emu-annex>\n    "}}, "figData": {}}, "to": {"secList": ["sec-regexp.prototype.compile"], "secData": {"sec-regexp.prototype.compile": {"num": "B.2.5.1", "title": "#sec-regexp.prototype.compile RegExp.prototype.compile ( pattern, flags )", "html": "<emu-annex id=\"sec-regexp.prototype.compile\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype.compile\">#sec-regexp.prototype.compile</span> RegExp.prototype.compile ( <var>pattern</var>, <var>flags</var> )</h1>\n        <p>When the <code>compile</code> method is called with arguments <var>pattern</var> and <var>flags</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[RegExpMatcher]]).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>pattern</var>) is Object and <var>pattern</var> has a [[RegExpMatcher]] internal slot, then<ol><li>If <var>flags</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>P</var> be <var>pattern</var>.[[OriginalSource]].</li><li>Let <var>F</var> be <var>pattern</var>.[[OriginalFlags]].</li></ol></li><li>Else,<ol><li>Let <var>P</var> be <var>pattern</var>.</li><li>Let <var>F</var> be <var>flags</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"RegExpInitialize\"><a href=\"#sec-regexpinitialize\">RegExpInitialize</a></emu-xref>(<var>O</var>, <var>P</var>, <var>F</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>compile</code> method completely reinitializes the <emu-val>this</emu-val> value RegExp with a new pattern and flags. An implementation may interpret use of this method as an assertion that the resulting RegExp object will be used multiple times and hence is a candidate for extra optimization.</p>\n        </div></emu-note>\n      </emu-annex>\n    "}}, "figData": {}}}