{"from": {"secList": ["sec-literals-string-literals", "sec-static-semantics-tv-and-trv", "sec-quotejsonstring", "sec-identifier-names-static-semantics-early-errors", "sec-codepointstostring", "sec-codepointtoutf16codeunits", "sec-source-text", "sec-static-semantics-sv", "sec-decode", "sec-string.fromcodepoint"], "secData": {"sec-literals-string-literals": {"num": "11.8.4", "title": "#sec-literals-string-literals String Literals", "html": "<emu-clause id=\"sec-literals-string-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</span> String Literals</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A string literal is zero or more Unicode code points enclosed in single or double quotes. Unicode code points may also be represented by an escape sequence. All code points may appear literally in a string literal except for the closing quote code points, U+005C (REVERSE SOLIDUS), U+000D (CARRIAGE RETURN), and U+000A (LINE FEED). Any code points may appear in the form of an escape sequence. String literals evaluate to ECMAScript String values. When generating these String values Unicode code points are UTF-16 encoded as defined in <emu-xref href=\"#sec-codepointtoutf16codeunits\"><a href=\"#sec-codepointtoutf16codeunits\" class=\"excluded-xref\" excluded-id=\"sec-codepointtoutf16codeunits\">#sec-codepointtoutf16codeunits</a></emu-xref>. Code points belonging to the Basic Multilingual Plane are encoded as a single code unit element of the string. All other code points are encoded as two code unit elements of the string.</p>\n      </div></emu-note>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"StringLiteral\" type=\"lexical\" id=\"prod-StringLiteral\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacters\" type=\"lexical\" id=\"prod-DoubleStringCharacters\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8bdabc77\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacters\" type=\"lexical\" id=\"prod-SingleStringCharacters\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"17d28457\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacter\" type=\"lexical\" id=\"prod-DoubleStringCharacter\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacter\" type=\"lexical\" id=\"prod-SingleStringCharacter\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LineContinuation\" type=\"lexical\" id=\"prod-LineContinuation\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeSequence\" type=\"lexical\" id=\"prod-EscapeSequence\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" id=\"prod-CharacterEscapeSequence\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" id=\"prod-SingleEscapeCharacter\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NonEscapeCharacter\" type=\"lexical\" id=\"prod-NonEscapeCharacter\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeCharacter\" type=\"lexical\" id=\"prod-EscapeCharacter\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"HexEscapeSequence\" type=\"lexical\" id=\"prod-HexEscapeSequence\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" id=\"prod-UnicodeEscapeSequence\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"Hex4Digits\" type=\"lexical\" id=\"prod-Hex4Digits\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>The definition of the nonterminal <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> is given in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>. <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> is defined in <emu-xref href=\"#sec-source-text\"><a href=\"#sec-source-text\" class=\"excluded-xref\" excluded-id=\"sec-source-text\">#sec-source-text</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>&lt;LF&gt; and &lt;CR&gt; cannot appear in a string literal, except as part of a <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> to produce the empty code points sequence. The proper way to include either in the String value of a string literal is to use an escape sequence such as <code>\\n</code> or <code>\\u000A</code>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-string-literals-static-semantics-stringvalue\"><h1><span class=\"secnum\">11.8.4.1</span>#sec-string-literals-static-semantics-stringvalue Static Semantics: StringValue</h1>...</div><div id=\"excluded-sec-static-semantics-sv\"><h1><span class=\"secnum\">11.8.4.2</span>#sec-static-semantics-sv Static Semantics: SV</h1>...</div><div id=\"excluded-sec-string-literals-static-semantics-mv\"><h1><span class=\"secnum\">11.8.4.3</span>#sec-string-literals-static-semantics-mv Static Semantics: MV</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-tv-and-trv": {"num": "11.8.6.1", "title": "#sec-static-semantics-tv-and-trv Static Semantics: TV and TRV", "html": "<emu-clause id=\"sec-static-semantics-tv-and-trv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-tv-and-trv\">#sec-static-semantics-tv-and-trv</span> Static Semantics: TV and TRV</h1>\n        <p>A template literal component is interpreted as a sequence of Unicode code points. The Template Value (TV) of a literal component is described in terms of String values (SV, <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>) contributed by the various parts of the template literal component. As part of this process, some Unicode code points within the template component are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV, <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>). In determining a TV, escape sequences are replaced by the UTF-16 code unit(s) of the Unicode code point represented by the escape sequence. The Template Raw Value (TRV) is similar to a Template Value with the difference that in TRVs escape sequences are interpreted literally.</p>\n        <ul>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7718e620\"><emu-t>`</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateHead\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25732601\"><emu-t>`</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateMiddle\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"046dadff\"><emu-t>}</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateTail\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a8ba1d2\"><emu-t>}</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val> if either the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> is <emu-val>undefined</emu-val> or the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt> is <emu-val>undefined</emu-val>. Otherwise, it is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> and the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> and the TRV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0030 (DIGIT ZERO).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0030 (DIGIT ZERO) and the TRV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0078 (LATIN SMALL LETTER X).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0078 (LATIN SMALL LETTER X) and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0075 (LATIN SMALL LETTER U).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the code unit 0x007B (LEFT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), and the TRV of <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), and the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0078 (LATIN SMALL LETTER X), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the TRV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>, and the code unit 0x007D (RIGHT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the fourth <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>TV excludes the code units of <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> while TRV includes them. &lt;CR&gt;&lt;LF&gt; and &lt;CR&gt; <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>s are normalized to &lt;LF&gt; for both TV and TRV. An explicit <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> is needed to include a &lt;CR&gt; or &lt;CR&gt;&lt;LF&gt; sequence.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-quotejsonstring": {"num": "24.5.2.2", "title": "#sec-quotejsonstring QuoteJSONString ( value )", "html": "<emu-clause id=\"sec-quotejsonstring\" aoid=\"QuoteJSONString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-quotejsonstring\">#sec-quotejsonstring</span> QuoteJSONString ( <var>value</var> )</h1>\n        <p>The abstract operation QuoteJSONString takes argument <var>value</var>. It wraps <var>value</var> in 0x0022 (QUOTATION MARK) code units and escapes certain other code units within it. This operation interprets <var>value</var> as a sequence of UTF-16 encoded code points, as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>product</var> be the String value consisting solely of the code unit 0x0022 (QUOTATION MARK).</li><li>For each code point <var>C</var> of !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>value</var>), do<ol><li>If <var>C</var> is listed in the &#8220;Code Point&#8221; column of <emu-xref href=\"#table-json-single-character-escapes\"><a href=\"#table-json-single-character-escapes\" class=\"excluded-xref\" excluded-id=\"table-json-single-character-escapes\">#table-json-single-character-escapes</a></emu-xref>, then<ol><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and the escape sequence for <var>C</var> as specified in the &#8220;Escape Sequence&#8221; column of the corresponding row.</li></ol></li><li>Else if <var>C</var> has a numeric value less than 0x0020 (SPACE), or if <var>C</var> has the same numeric value as a <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, then<ol><li>Let <var>unit</var> be the code unit whose numeric value is that of <var>C</var>.</li><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and <emu-xref aoid=\"UnicodeEscape\"><a href=\"#sec-unicodeescape\">UnicodeEscape</a></emu-xref>(<var>unit</var>).</li></ol></li><li>Else,<ol><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and !&#160;<emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>C</var>).</li></ol></li></ol></li><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and the code unit 0x0022 (QUOTATION MARK).</li><li>Return <var>product</var>.</li></ol></emu-alg>\n        <emu-table id=\"table-json-single-character-escapes\" caption=\"JSON Single Character Escape Sequences\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-json-single-character-escapes\">#table-json-single-character-escapes</span>: JSON Single Character Escape Sequences</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Code Point\n              </th>\n              <th>\n                Unicode Character Name\n              </th>\n              <th>\n                Escape Sequence\n              </th>\n            </tr>\n            <tr>\n              <td>\n                U+0008\n              </td>\n              <td>\n                BACKSPACE\n              </td>\n              <td>\n                <code>\\b</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+0009\n              </td>\n              <td>\n                CHARACTER TABULATION\n              </td>\n              <td>\n                <code>\\t</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+000A\n              </td>\n              <td>\n                LINE FEED (LF)\n              </td>\n              <td>\n                <code>\\n</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+000C\n              </td>\n              <td>\n                FORM FEED (FF)\n              </td>\n              <td>\n                <code>\\f</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+000D\n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              </td>\n              <td>\n                <code>\\r</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+0022\n              </td>\n              <td>\n                QUOTATION MARK\n              </td>\n              <td>\n                <code>\\\"</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+005C\n              </td>\n              <td>\n                REVERSE SOLIDUS\n              </td>\n              <td>\n                <code>\\\\</code>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-identifier-names-static-semantics-early-errors": {"num": "11.6.1.1", "title": "#sec-identifier-names-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-identifier-names-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-identifier-names-static-semantics-early-errors\">#sec-identifier-names-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"IdentifierStart\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the SV of <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> is none of <emu-val>\"$\"</emu-val>, or <emu-val>\"_\"</emu-val>, or ! <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>cp</var>) for some Unicode code point <var>cp</var> matched by the <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt> lexical grammar production.\n          </li>\n        </ul>\n        <emu-grammar><emu-production name=\"IdentifierPart\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the SV of <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> is none of <emu-val>\"$\"</emu-val>, <emu-val>\"_\"</emu-val>, ! <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(&lt;ZWNJ&gt;), ! <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(&lt;ZWJ&gt;), or ! <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>cp</var>) for some Unicode code point <var>cp</var> that would be matched by the <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt> lexical grammar production.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-codepointstostring": {"num": "10.1.2", "title": "#sec-codepointstostring Static Semantics: CodePointsToString ( text )", "html": "<emu-clause id=\"sec-codepointstostring\" aoid=\"CodePointsToString\" oldids=\"sec-utf16encode\"><span id=\"sec-utf16encode\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointstostring\">#sec-codepointstostring</span> Static Semantics: CodePointsToString ( <var>text</var> )</h1>\n      <p>The abstract operation CodePointsToString takes argument <var>text</var> (a sequence of Unicode code points). It converts <var>text</var> into a String value, as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>result</var> be the empty String.</li><li>For each code point <var>cp</var> of <var>text</var>, do<ol><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and !&#160;<emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>cp</var>).</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-codepointtoutf16codeunits": {"num": "10.1.1", "title": "#sec-codepointtoutf16codeunits Static Semantics: CodePointToUTF16CodeUnits ( cp )", "html": "<emu-clause id=\"sec-codepointtoutf16codeunits\" aoid=\"CodePointToUTF16CodeUnits\" oldids=\"sec-utf16encoding\"><span id=\"sec-utf16encoding\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointtoutf16codeunits\">#sec-codepointtoutf16codeunits</span> Static Semantics: CodePointToUTF16CodeUnits ( <var>cp</var> )</h1>\n      <p>The abstract operation CodePointToUTF16CodeUnits takes argument <var>cp</var> (a Unicode code point). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>cp</var> &#8804; 0x10FFFF.</li><li>If <var>cp</var> &#8804; 0xFFFF, return the String value consisting of <var>cp</var>.</li><li>Let <var>cu1</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>((<var>cp</var> - 0x10000) / 0x400) + 0xD800.</li><li>Let <var>cu2</var> be ((<var>cp</var> - 0x10000) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 0x400) + 0xDC00.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>cu1</var> and <var>cu2</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-source-text": {"num": "10.1", "title": "#sec-source-text Source Text", "html": "<emu-clause id=\"sec-source-text\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text\">#sec-source-text</span> Source Text</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"SourceCharacter\" type=\"lexical\" id=\"prod-SourceCharacter\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <p>ECMAScript code is expressed using Unicode. ECMAScript source text is a sequence of code points. All Unicode code point values from U+0000 to U+10FFFF, including surrogate code points, may occur in source text where permitted by the ECMAScript grammars. The actual encodings used to store and interchange ECMAScript source text is not relevant to this specification. Regardless of the external source text encoding, a conforming ECMAScript implementation processes the source text as if it was an equivalent sequence of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values, each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> being a Unicode code point. Conforming ECMAScript implementations are not required to perform any normalization of source text, or behave as though they were performing normalization of source text.</p>\n    <p>The components of a combining character sequence are treated as individual Unicode code points even though a user might think of the whole sequence as a single character.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In string literals, regular expression literals, template literals and identifiers, any Unicode code point may also be expressed using Unicode escape sequences that explicitly express a code point's numeric value. Within a comment, such an escape sequence is effectively ignored as part of the comment.</p>\n      <p>ECMAScript differs from the Java programming language in the behaviour of Unicode escape sequences. In a Java program, if the Unicode escape sequence <code>\\u000A</code>, for example, occurs within a single-line comment, it is interpreted as a line terminator (Unicode code point U+000A is LINE FEED (LF)) and therefore the next code point is not part of the comment. Similarly, if the Unicode escape sequence <code>\\u000A</code> occurs within a string literal in a Java program, it is likewise interpreted as a line terminator, which is not allowed within a string literal&#8212;one must write <code>\\n</code> instead of <code>\\u000A</code> to cause a LINE FEED (LF) to be part of the String value of a string literal. In an ECMAScript program, a Unicode escape sequence occurring within a comment is never interpreted and therefore cannot contribute to termination of the comment. Similarly, a Unicode escape sequence occurring within a string literal in an ECMAScript program always contributes to the literal and is never interpreted as a line terminator or as a code point that might terminate the string literal.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-codepointtoutf16codeunits\"><h1><span class=\"secnum\">10.1.1</span>#sec-codepointtoutf16codeunits Static Semantics: CodePointToUTF16CodeUnits ( cp )</h1>...</div><div id=\"excluded-sec-codepointstostring\"><h1><span class=\"secnum\">10.1.2</span>#sec-codepointstostring Static Semantics: CodePointsToString ( text )</h1>...</div><div id=\"excluded-sec-utf16decodesurrogatepair\"><h1><span class=\"secnum\">10.1.3</span>#sec-utf16decodesurrogatepair Static Semantics: UTF16SurrogatePairToCodePoint ( lead, trail )</h1>...</div><div id=\"excluded-sec-codepointat\"><h1><span class=\"secnum\">10.1.4</span>#sec-codepointat Static Semantics: CodePointAt ( string, position )</h1>...</div><div id=\"excluded-sec-stringtocodepoints\"><h1><span class=\"secnum\">10.1.5</span>#sec-stringtocodepoints Static Semantics: StringToCodePoints ( string )</h1>...</div></emu-clause>\n\n  "}, "sec-static-semantics-sv": {"num": "11.8.4.2", "title": "#sec-static-semantics-sv Static Semantics: SV", "html": "<emu-clause id=\"sec-static-semantics-sv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-sv\">#sec-static-semantics-sv</span> Static Semantics: SV</h1>\n        <p>A string literal stands for a value of the String type. The String value (SV) of the literal is described in terms of String values contributed by the various parts of the string literal. As part of this process, some Unicode code points within the string literal are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV), as described below or in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>.</p>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a2dff6c6\"><emu-t>\"</emu-t><emu-t>\"</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"74786b0a\"><emu-t>'</emu-t><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9b3f247e\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the SV of <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt> and the SV of <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"89ebe999\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the SV of <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt> and the SV of <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0000 (NULL).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is determined by the <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt> according to <emu-xref href=\"#table-string-single-character-escape-sequences\"><a href=\"#table-string-single-character-escape-sequences\" class=\"excluded-xref\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</a></emu-xref>.\n          </li>\n        </ul>\n        <emu-table id=\"table-string-single-character-escape-sequences\" caption=\"String Single Character Escape Sequences\" oldids=\"table-34\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</span>: String Single Character Escape Sequences</figcaption><span id=\"table-34\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Escape Sequence\n              </th>\n              <th>\n                Code Unit Value\n              </th>\n              <th>\n                Unicode Character Name\n              </th>\n              <th>\n                Symbol\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\\b</code>\n              </td>\n              <td>\n                <code>0x0008</code>\n              </td>\n              <td>\n                BACKSPACE\n              </td>\n              <td>\n                &lt;BS&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\t</code>\n              </td>\n              <td>\n                <code>0x0009</code>\n              </td>\n              <td>\n                CHARACTER TABULATION\n              </td>\n              <td>\n                &lt;HT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\n</code>\n              </td>\n              <td>\n                <code>0x000A</code>\n              </td>\n              <td>\n                LINE FEED (LF)\n              </td>\n              <td>\n                &lt;LF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\v</code>\n              </td>\n              <td>\n                <code>0x000B</code>\n              </td>\n              <td>\n                LINE TABULATION\n              </td>\n              <td>\n                &lt;VT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\f</code>\n              </td>\n              <td>\n                <code>0x000C</code>\n              </td>\n              <td>\n                FORM FEED (FF)\n              </td>\n              <td>\n                &lt;FF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\r</code>\n              </td>\n              <td>\n                <code>0x000D</code>\n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              </td>\n              <td>\n                &lt;CR&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\"</code>\n              </td>\n              <td>\n                <code>0x0022</code>\n              </td>\n              <td>\n                QUOTATION MARK\n              </td>\n              <td>\n                <code>\"</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\'</code>\n              </td>\n              <td>\n                <code>0x0027</code>\n              </td>\n              <td>\n                APOSTROPHE\n              </td>\n              <td>\n                <code>'</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\\</code>\n              </td>\n              <td>\n                <code>0x005C</code>\n              </td>\n              <td>\n                REVERSE SOLIDUS\n              </td>\n              <td>\n                <code>\\</code>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonEscapeCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref> on the MV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-decode": {"num": "18.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> = <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the code point obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-string.fromcodepoint": {"num": "21.1.2.2", "title": "#sec-string.fromcodepoint String.fromCodePoint ( ...codePoints )", "html": "<emu-clause id=\"sec-string.fromcodepoint\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.fromcodepoint\">#sec-string.fromcodepoint</span> String.fromCodePoint ( ...<var>codePoints</var> )</h1>\n        <p>The <code>String.fromCodePoint</code> function may be called with any number of arguments which form the rest parameter <var>codePoints</var>. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>result</var> be the empty String.</li><li>For each element <var>next</var> of <var>codePoints</var>, do<ol><li>Let <var>nextCP</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>next</var>).</li><li>If !&#160;<emu-xref aoid=\"IsIntegralNumber\"><a href=\"#sec-isintegralnumber\">IsIntegralNumber</a></emu-xref>(<var>nextCP</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &lt; 0 or <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &gt; 0x10FFFF, throw a <emu-val>RangeError</emu-val> exception.</li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and !&#160;<emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>)).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>codePoints</var> is empty, then <var>result</var> is the empty String.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>fromCodePoint</code> function is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n      </emu-clause>\n\n      "}}, "figData": {"table-string-single-character-escape-sequences": "Table 36", "table-utf-8-encodings": "Table 49", "table-json-single-character-escapes": "Table 66"}}, "to": {"secList": ["sec-literals-string-literals", "sec-static-semantics-tv-and-trv", "sec-quotejsonstring", "sec-identifier-names-static-semantics-early-errors", "sec-codepointstostring", "sec-utf16encodecodepoint", "sec-source-text", "sec-static-semantics-sv", "sec-decode", "sec-string.fromcodepoint"], "secData": {"sec-literals-string-literals": {"num": "11.8.4", "title": "#sec-literals-string-literals String Literals", "html": "<emu-clause id=\"sec-literals-string-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</span> String Literals</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A string literal is zero or more Unicode code points enclosed in single or double quotes. Unicode code points may also be represented by an escape sequence. All code points may appear literally in a string literal except for the closing quote code points, U+005C (REVERSE SOLIDUS), U+000D (CARRIAGE RETURN), and U+000A (LINE FEED). Any code points may appear in the form of an escape sequence. String literals evaluate to ECMAScript String values. When generating these String values Unicode code points are UTF-16 encoded as defined in <emu-xref href=\"#sec-utf16encodecodepoint\"><a href=\"#sec-utf16encodecodepoint\" class=\"excluded-xref\" excluded-id=\"sec-utf16encodecodepoint\">#sec-utf16encodecodepoint</a></emu-xref>. Code points belonging to the Basic Multilingual Plane are encoded as a single code unit element of the string. All other code points are encoded as two code unit elements of the string.</p>\n      </div></emu-note>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"StringLiteral\" type=\"lexical\" id=\"prod-StringLiteral\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacters\" type=\"lexical\" id=\"prod-DoubleStringCharacters\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8bdabc77\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacters\" type=\"lexical\" id=\"prod-SingleStringCharacters\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"17d28457\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DoubleStringCharacter\" type=\"lexical\" id=\"prod-DoubleStringCharacter\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleStringCharacter\" type=\"lexical\" id=\"prod-SingleStringCharacter\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LineContinuation\" type=\"lexical\" id=\"prod-LineContinuation\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeSequence\" type=\"lexical\" id=\"prod-EscapeSequence\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" id=\"prod-CharacterEscapeSequence\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" id=\"prod-SingleEscapeCharacter\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NonEscapeCharacter\" type=\"lexical\" id=\"prod-NonEscapeCharacter\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"EscapeCharacter\" type=\"lexical\" id=\"prod-EscapeCharacter\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"HexEscapeSequence\" type=\"lexical\" id=\"prod-HexEscapeSequence\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" id=\"prod-UnicodeEscapeSequence\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"Hex4Digits\" type=\"lexical\" id=\"prod-Hex4Digits\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <p>The definition of the nonterminal <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> is given in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>. <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> is defined in <emu-xref href=\"#sec-source-text\"><a href=\"#sec-source-text\" class=\"excluded-xref\" excluded-id=\"sec-source-text\">#sec-source-text</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>&lt;LF&gt; and &lt;CR&gt; cannot appear in a string literal, except as part of a <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> to produce the empty code points sequence. The proper way to include either in the String value of a string literal is to use an escape sequence such as <code>\\n</code> or <code>\\u000A</code>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-string-literals-static-semantics-stringvalue\"><h1><span class=\"secnum\">11.8.4.1</span>#sec-string-literals-static-semantics-stringvalue Static Semantics: StringValue</h1>...</div><div id=\"excluded-sec-static-semantics-sv\"><h1><span class=\"secnum\">11.8.4.2</span>#sec-static-semantics-sv Static Semantics: SV</h1>...</div><div id=\"excluded-sec-string-literals-static-semantics-mv\"><h1><span class=\"secnum\">11.8.4.3</span>#sec-string-literals-static-semantics-mv Static Semantics: MV</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-tv-and-trv": {"num": "11.8.6.1", "title": "#sec-static-semantics-tv-and-trv Static Semantics: TV and TRV", "html": "<emu-clause id=\"sec-static-semantics-tv-and-trv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-tv-and-trv\">#sec-static-semantics-tv-and-trv</span> Static Semantics: TV and TRV</h1>\n        <p>A template literal component is interpreted as a sequence of Unicode code points. The Template Value (TV) of a literal component is described in terms of String values (SV, <emu-xref href=\"#sec-literals-string-literals\"><a href=\"#sec-literals-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-string-literals\">#sec-literals-string-literals</a></emu-xref>) contributed by the various parts of the template literal component. As part of this process, some Unicode code points within the template component are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV, <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>). In determining a TV, escape sequences are replaced by the UTF-16 code unit(s) of the Unicode code point represented by the escape sequence. The Template Raw Value (TRV) is similar to a Template Value with the difference that in TRVs escape sequences are interpreted literally.</p>\n        <ul>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7718e620\"><emu-t>`</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateHead\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25732601\"><emu-t>`</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateMiddle\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"046dadff\"><emu-t>}</emu-t><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV and TRV of <emu-grammar><emu-production name=\"TemplateTail\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a8ba1d2\"><emu-t>}</emu-t><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val> if either the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> is <emu-val>undefined</emu-val> or the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt> is <emu-val>undefined</emu-val>. Otherwise, it is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> and the TV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f9e47ad\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> and the TRV of <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0024 (DOLLAR SIGN).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"TemplateCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0030 (DIGIT ZERO).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0030 (DIGIT ZERO) and the TRV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0078 (LATIN SMALL LETTER X).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0078 (LATIN SMALL LETTER X) and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0075 (LATIN SMALL LETTER U).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the code unit 0x007B (LEFT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), and the TRV of <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"NotEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), and the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the SV of <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0078 (LATIN SMALL LETTER X), the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U) and the TRV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x0075 (LATIN SMALL LETTER U), the code unit 0x007B (LEFT CURLY BRACKET), the TRV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>, and the code unit 0x007D (RIGHT CURLY BRACKET).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of the first <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the second <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, the TRV of the third <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>, and the TRV of the fourth <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the TRV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> and the TRV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the single code point matched by this production.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineContinuation\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the code unit 0x005C (REVERSE SOLIDUS) and the TRV of <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>.\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The TRV of <emu-grammar><emu-production name=\"LineTerminatorSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x000A (LINE FEED).\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>TV excludes the code units of <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt> while TRV includes them. &lt;CR&gt;&lt;LF&gt; and &lt;CR&gt; <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt>s are normalized to &lt;LF&gt; for both TV and TRV. An explicit <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> is needed to include a &lt;CR&gt; or &lt;CR&gt;&lt;LF&gt; sequence.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-quotejsonstring": {"num": "24.5.2.2", "title": "#sec-quotejsonstring QuoteJSONString ( value )", "html": "<emu-clause id=\"sec-quotejsonstring\" aoid=\"QuoteJSONString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-quotejsonstring\">#sec-quotejsonstring</span> QuoteJSONString ( <var>value</var> )</h1>\n        <p>The abstract operation QuoteJSONString takes argument <var>value</var>. It wraps <var>value</var> in 0x0022 (QUOTATION MARK) code units and escapes certain other code units within it. This operation interprets <var>value</var> as a sequence of UTF-16 encoded code points, as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>product</var> be the String value consisting solely of the code unit 0x0022 (QUOTATION MARK).</li><li>For each code point <var>C</var> of !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>value</var>), do<ol><li>If <var>C</var> is listed in the &#8220;Code Point&#8221; column of <emu-xref href=\"#table-json-single-character-escapes\"><a href=\"#table-json-single-character-escapes\" class=\"excluded-xref\" excluded-id=\"table-json-single-character-escapes\">#table-json-single-character-escapes</a></emu-xref>, then<ol><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and the escape sequence for <var>C</var> as specified in the &#8220;Escape Sequence&#8221; column of the corresponding row.</li></ol></li><li>Else if <var>C</var> has a numeric value less than 0x0020 (SPACE), or if <var>C</var> has the same numeric value as a <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, then<ol><li>Let <var>unit</var> be the code unit whose numeric value is that of <var>C</var>.</li><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and <emu-xref aoid=\"UnicodeEscape\"><a href=\"#sec-unicodeescape\">UnicodeEscape</a></emu-xref>(<var>unit</var>).</li></ol></li><li>Else,<ol><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and !&#160;<emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>C</var>).</li></ol></li></ol></li><li>Set <var>product</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>product</var> and the code unit 0x0022 (QUOTATION MARK).</li><li>Return <var>product</var>.</li></ol></emu-alg>\n        <emu-table id=\"table-json-single-character-escapes\" caption=\"JSON Single Character Escape Sequences\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-json-single-character-escapes\">#table-json-single-character-escapes</span>: JSON Single Character Escape Sequences</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Code Point\n              </th>\n              <th>\n                Unicode Character Name\n              </th>\n              <th>\n                Escape Sequence\n              </th>\n            </tr>\n            <tr>\n              <td>\n                U+0008\n              </td>\n              <td>\n                BACKSPACE\n              </td>\n              <td>\n                <code>\\b</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+0009\n              </td>\n              <td>\n                CHARACTER TABULATION\n              </td>\n              <td>\n                <code>\\t</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+000A\n              </td>\n              <td>\n                LINE FEED (LF)\n              </td>\n              <td>\n                <code>\\n</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+000C\n              </td>\n              <td>\n                FORM FEED (FF)\n              </td>\n              <td>\n                <code>\\f</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+000D\n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              </td>\n              <td>\n                <code>\\r</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+0022\n              </td>\n              <td>\n                QUOTATION MARK\n              </td>\n              <td>\n                <code>\\\"</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                U+005C\n              </td>\n              <td>\n                REVERSE SOLIDUS\n              </td>\n              <td>\n                <code>\\\\</code>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-identifier-names-static-semantics-early-errors": {"num": "11.6.1.1", "title": "#sec-identifier-names-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-identifier-names-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-identifier-names-static-semantics-early-errors\">#sec-identifier-names-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"IdentifierStart\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the SV of <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> is none of <emu-val>\"$\"</emu-val>, or <emu-val>\"_\"</emu-val>, or ! <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>cp</var>) for some Unicode code point <var>cp</var> matched by the <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt> lexical grammar production.\n          </li>\n        </ul>\n        <emu-grammar><emu-production name=\"IdentifierPart\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the SV of <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt> is none of <emu-val>\"$\"</emu-val>, <emu-val>\"_\"</emu-val>, ! <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(&lt;ZWNJ&gt;), ! <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(&lt;ZWJ&gt;), or ! <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>cp</var>) for some Unicode code point <var>cp</var> that would be matched by the <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt> lexical grammar production.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-codepointstostring": {"num": "10.1.2", "title": "#sec-codepointstostring Static Semantics: CodePointsToString ( text )", "html": "<emu-clause id=\"sec-codepointstostring\" aoid=\"CodePointsToString\" oldids=\"sec-utf16encode\"><span id=\"sec-utf16encode\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointstostring\">#sec-codepointstostring</span> Static Semantics: CodePointsToString ( <var>text</var> )</h1>\n      <p>The abstract operation CodePointsToString takes argument <var>text</var> (a sequence of Unicode code points). It converts <var>text</var> into a String value, as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>result</var> be the empty String.</li><li>For each code point <var>cp</var> of <var>text</var>, do<ol><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and !&#160;<emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>cp</var>).</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-utf16encodecodepoint": {"num": "10.1.1", "title": "#sec-utf16encodecodepoint Static Semantics: UTF16EncodeCodePoint ( cp )", "html": "<emu-clause id=\"sec-utf16encodecodepoint\" aoid=\"UTF16EncodeCodePoint\" oldids=\"sec-utf16encoding,sec-codepointtoutf16codeunits\"><span id=\"sec-codepointtoutf16codeunits\"></span><span id=\"sec-utf16encoding\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-utf16encodecodepoint\">#sec-utf16encodecodepoint</span> Static Semantics: UTF16EncodeCodePoint ( <var>cp</var> )</h1>\n      <p>The abstract operation UTF16EncodeCodePoint takes argument <var>cp</var> (a Unicode code point). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>cp</var> &#8804; 0x10FFFF.</li><li>If <var>cp</var> &#8804; 0xFFFF, return the String value consisting of <var>cp</var>.</li><li>Let <var>cu1</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>((<var>cp</var> - 0x10000) / 0x400) + 0xD800.</li><li>Let <var>cu2</var> be ((<var>cp</var> - 0x10000) <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 0x400) + 0xDC00.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>cu1</var> and <var>cu2</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-source-text": {"num": "10.1", "title": "#sec-source-text Source Text", "html": "<emu-clause id=\"sec-source-text\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text\">#sec-source-text</span> Source Text</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"SourceCharacter\" type=\"lexical\" id=\"prod-SourceCharacter\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <p>ECMAScript code is expressed using Unicode. ECMAScript source text is a sequence of code points. All Unicode code point values from U+0000 to U+10FFFF, including surrogate code points, may occur in source text where permitted by the ECMAScript grammars. The actual encodings used to store and interchange ECMAScript source text is not relevant to this specification. Regardless of the external source text encoding, a conforming ECMAScript implementation processes the source text as if it was an equivalent sequence of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values, each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> being a Unicode code point. Conforming ECMAScript implementations are not required to perform any normalization of source text, or behave as though they were performing normalization of source text.</p>\n    <p>The components of a combining character sequence are treated as individual Unicode code points even though a user might think of the whole sequence as a single character.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In string literals, regular expression literals, template literals and identifiers, any Unicode code point may also be expressed using Unicode escape sequences that explicitly express a code point's numeric value. Within a comment, such an escape sequence is effectively ignored as part of the comment.</p>\n      <p>ECMAScript differs from the Java programming language in the behaviour of Unicode escape sequences. In a Java program, if the Unicode escape sequence <code>\\u000A</code>, for example, occurs within a single-line comment, it is interpreted as a line terminator (Unicode code point U+000A is LINE FEED (LF)) and therefore the next code point is not part of the comment. Similarly, if the Unicode escape sequence <code>\\u000A</code> occurs within a string literal in a Java program, it is likewise interpreted as a line terminator, which is not allowed within a string literal&#8212;one must write <code>\\n</code> instead of <code>\\u000A</code> to cause a LINE FEED (LF) to be part of the String value of a string literal. In an ECMAScript program, a Unicode escape sequence occurring within a comment is never interpreted and therefore cannot contribute to termination of the comment. Similarly, a Unicode escape sequence occurring within a string literal in an ECMAScript program always contributes to the literal and is never interpreted as a line terminator or as a code point that might terminate the string literal.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-utf16encodecodepoint\"><h1><span class=\"secnum\">10.1.1</span>#sec-utf16encodecodepoint Static Semantics: UTF16EncodeCodePoint ( cp )</h1>...</div><div id=\"excluded-sec-codepointstostring\"><h1><span class=\"secnum\">10.1.2</span>#sec-codepointstostring Static Semantics: CodePointsToString ( text )</h1>...</div><div id=\"excluded-sec-utf16decodesurrogatepair\"><h1><span class=\"secnum\">10.1.3</span>#sec-utf16decodesurrogatepair Static Semantics: UTF16SurrogatePairToCodePoint ( lead, trail )</h1>...</div><div id=\"excluded-sec-codepointat\"><h1><span class=\"secnum\">10.1.4</span>#sec-codepointat Static Semantics: CodePointAt ( string, position )</h1>...</div><div id=\"excluded-sec-stringtocodepoints\"><h1><span class=\"secnum\">10.1.5</span>#sec-stringtocodepoints Static Semantics: StringToCodePoints ( string )</h1>...</div></emu-clause>\n\n  "}, "sec-static-semantics-sv": {"num": "11.8.4.2", "title": "#sec-static-semantics-sv Static Semantics: SV", "html": "<emu-clause id=\"sec-static-semantics-sv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-sv\">#sec-static-semantics-sv</span> Static Semantics: SV</h1>\n        <p>A string literal stands for a value of the String type. The String value (SV) of the literal is described in terms of String values contributed by the various parts of the string literal. As part of this process, some Unicode code points within the string literal are interpreted as having a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV), as described below or in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>.</p>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a2dff6c6\"><emu-t>\"</emu-t><emu-t>\"</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"StringLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"74786b0a\"><emu-t>'</emu-t><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9b3f247e\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the SV of <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt> and the SV of <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacters\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"89ebe999\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of the SV of <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt> and the SV of <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"DoubleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2028 (LINE SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x2029 (PARAGRAPH SEPARATOR).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"SingleStringCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the empty String.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"EscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit 0x0000 (NULL).\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"CharacterEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is determined by the <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt> according to <emu-xref href=\"#table-string-single-character-escape-sequences\"><a href=\"#table-string-single-character-escape-sequences\" class=\"excluded-xref\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</a></emu-xref>.\n          </li>\n        </ul>\n        <emu-table id=\"table-string-single-character-escape-sequences\" caption=\"String Single Character Escape Sequences\" oldids=\"table-34\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-string-single-character-escape-sequences\">#table-string-single-character-escape-sequences</span>: String Single Character Escape Sequences</figcaption><span id=\"table-34\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Escape Sequence\n              </th>\n              <th>\n                Code Unit Value\n              </th>\n              <th>\n                Unicode Character Name\n              </th>\n              <th>\n                Symbol\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\\b</code>\n              </td>\n              <td>\n                <code>0x0008</code>\n              </td>\n              <td>\n                BACKSPACE\n              </td>\n              <td>\n                &lt;BS&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\t</code>\n              </td>\n              <td>\n                <code>0x0009</code>\n              </td>\n              <td>\n                CHARACTER TABULATION\n              </td>\n              <td>\n                &lt;HT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\n</code>\n              </td>\n              <td>\n                <code>0x000A</code>\n              </td>\n              <td>\n                LINE FEED (LF)\n              </td>\n              <td>\n                &lt;LF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\v</code>\n              </td>\n              <td>\n                <code>0x000B</code>\n              </td>\n              <td>\n                LINE TABULATION\n              </td>\n              <td>\n                &lt;VT&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\f</code>\n              </td>\n              <td>\n                <code>0x000C</code>\n              </td>\n              <td>\n                FORM FEED (FF)\n              </td>\n              <td>\n                &lt;FF&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\r</code>\n              </td>\n              <td>\n                <code>0x000D</code>\n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              </td>\n              <td>\n                &lt;CR&gt;\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\"</code>\n              </td>\n              <td>\n                <code>0x0022</code>\n              </td>\n              <td>\n                QUOTATION MARK\n              </td>\n              <td>\n                <code>\"</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\'</code>\n              </td>\n              <td>\n                <code>0x0027</code>\n              </td>\n              <td>\n                APOSTROPHE\n              </td>\n              <td>\n                <code>'</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\\\\</code>\n              </td>\n              <td>\n                <code>0x005C</code>\n              </td>\n              <td>\n                REVERSE SOLIDUS\n              </td>\n              <td>\n                <code>\\</code>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <ul>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"NonEscapeCharacter\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the code point value of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"HexEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"Hex4Digits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the String value consisting of the code unit whose value is the MV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n          </li>\n          <li>\n            The SV of <emu-grammar><emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is the result of performing <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref> on the MV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-decode": {"num": "18.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> = <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the code point obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-string.fromcodepoint": {"num": "21.1.2.2", "title": "#sec-string.fromcodepoint String.fromCodePoint ( ...codePoints )", "html": "<emu-clause id=\"sec-string.fromcodepoint\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.fromcodepoint\">#sec-string.fromcodepoint</span> String.fromCodePoint ( ...<var>codePoints</var> )</h1>\n        <p>The <code>String.fromCodePoint</code> function may be called with any number of arguments which form the rest parameter <var>codePoints</var>. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>result</var> be the empty String.</li><li>For each element <var>next</var> of <var>codePoints</var>, do<ol><li>Let <var>nextCP</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>next</var>).</li><li>If !&#160;<emu-xref aoid=\"IsIntegralNumber\"><a href=\"#sec-isintegralnumber\">IsIntegralNumber</a></emu-xref>(<var>nextCP</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &lt; 0 or <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>) &gt; 0x10FFFF, throw a <emu-val>RangeError</emu-val> exception.</li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and !&#160;<emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>nextCP</var>)).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>codePoints</var> is empty, then <var>result</var> is the empty String.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>fromCodePoint</code> function is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n      </emu-clause>\n\n      "}}, "figData": {"table-string-single-character-escape-sequences": "Table 36", "table-utf-8-encodings": "Table 49", "table-json-single-character-escapes": "Table 66"}}}