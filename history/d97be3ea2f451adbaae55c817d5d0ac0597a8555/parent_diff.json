{"from": {"secList": ["sec-function-properties-of-the-math-object", "sec-math.max", "sec-math.atan2", "sec-math.fround", "sec-math.round", "sec-math.min", "sec-math.hypot"], "secData": {"sec-function-properties-of-the-math-object": {"num": "20.3.2", "title": "#sec-function-properties-of-the-math-object Function Properties of the Math Object", "html": "<emu-clause id=\"sec-function-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-properties-of-the-math-object\">#sec-function-properties-of-the-math-object</span> Function Properties of the Math Object</h1>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The behaviour of the functions <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atanh</code>, <code>atan2</code>, <code>cbrt</code>, <code>cos</code>, <code>cosh</code>, <code>exp</code>, <code>expm1</code>, <code>hypot</code>, <code>log</code>,<code>log1p</code>, <code>log2</code>, <code>log10</code>, <code>pow</code>, <code>random</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, and <code>tanh</code> is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest. For other argument values, these functions are intended to compute approximations to the results of familiar mathematical functions, but some latitude is allowed in the choice of approximation algorithms. The general intent is that an implementer should be able to use the same mathematical library for ECMAScript on a given hardware platform that is available to C programmers on that platform.</p>\n        <p>Although the choice of algorithms is left to the implementation, it is recommended (but not specified by this standard) that implementations use the approximation algorithms for <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> arithmetic contained in <code>fdlibm</code>, the freely distributable mathematical library from Sun Microsystems (<a href=\"http://www.netlib.org/fdlibm\">http://www.netlib.org/fdlibm</a>).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-math.abs\"><h1><span class=\"secnum\">20.3.2.1</span>#sec-math.abs Math.abs ( x )</h1>...</div><div id=\"excluded-sec-math.acos\"><h1><span class=\"secnum\">20.3.2.2</span>#sec-math.acos Math.acos ( x )</h1>...</div><div id=\"excluded-sec-math.acosh\"><h1><span class=\"secnum\">20.3.2.3</span>#sec-math.acosh Math.acosh ( x )</h1>...</div><div id=\"excluded-sec-math.asin\"><h1><span class=\"secnum\">20.3.2.4</span>#sec-math.asin Math.asin ( x )</h1>...</div><div id=\"excluded-sec-math.asinh\"><h1><span class=\"secnum\">20.3.2.5</span>#sec-math.asinh Math.asinh ( x )</h1>...</div><div id=\"excluded-sec-math.atan\"><h1><span class=\"secnum\">20.3.2.6</span>#sec-math.atan Math.atan ( x )</h1>...</div><div id=\"excluded-sec-math.atanh\"><h1><span class=\"secnum\">20.3.2.7</span>#sec-math.atanh Math.atanh ( x )</h1>...</div><div id=\"excluded-sec-math.atan2\"><h1><span class=\"secnum\">20.3.2.8</span>#sec-math.atan2 Math.atan2 ( y, x )</h1>...</div><div id=\"excluded-sec-math.cbrt\"><h1><span class=\"secnum\">20.3.2.9</span>#sec-math.cbrt Math.cbrt ( x )</h1>...</div><div id=\"excluded-sec-math.ceil\"><h1><span class=\"secnum\">20.3.2.10</span>#sec-math.ceil Math.ceil ( x )</h1>...</div><div id=\"excluded-sec-math.clz32\"><h1><span class=\"secnum\">20.3.2.11</span>#sec-math.clz32 Math.clz32 ( x )</h1>...</div><div id=\"excluded-sec-math.cos\"><h1><span class=\"secnum\">20.3.2.12</span>#sec-math.cos Math.cos ( x )</h1>...</div><div id=\"excluded-sec-math.cosh\"><h1><span class=\"secnum\">20.3.2.13</span>#sec-math.cosh Math.cosh ( x )</h1>...</div><div id=\"excluded-sec-math.exp\"><h1><span class=\"secnum\">20.3.2.14</span>#sec-math.exp Math.exp ( x )</h1>...</div><div id=\"excluded-sec-math.expm1\"><h1><span class=\"secnum\">20.3.2.15</span>#sec-math.expm1 Math.expm1 ( x )</h1>...</div><div id=\"excluded-sec-math.floor\"><h1><span class=\"secnum\">20.3.2.16</span>#sec-math.floor Math.floor ( x )</h1>...</div><div id=\"excluded-sec-math.fround\"><h1><span class=\"secnum\">20.3.2.17</span>#sec-math.fround Math.fround ( x )</h1>...</div><div id=\"excluded-sec-math.hypot\"><h1><span class=\"secnum\">20.3.2.18</span>#sec-math.hypot Math.hypot ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.imul\"><h1><span class=\"secnum\">20.3.2.19</span>#sec-math.imul Math.imul ( x, y )</h1>...</div><div id=\"excluded-sec-math.log\"><h1><span class=\"secnum\">20.3.2.20</span>#sec-math.log Math.log ( x )</h1>...</div><div id=\"excluded-sec-math.log1p\"><h1><span class=\"secnum\">20.3.2.21</span>#sec-math.log1p Math.log1p ( x )</h1>...</div><div id=\"excluded-sec-math.log10\"><h1><span class=\"secnum\">20.3.2.22</span>#sec-math.log10 Math.log10 ( x )</h1>...</div><div id=\"excluded-sec-math.log2\"><h1><span class=\"secnum\">20.3.2.23</span>#sec-math.log2 Math.log2 ( x )</h1>...</div><div id=\"excluded-sec-math.max\"><h1><span class=\"secnum\">20.3.2.24</span>#sec-math.max Math.max ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.min\"><h1><span class=\"secnum\">20.3.2.25</span>#sec-math.min Math.min ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.pow\"><h1><span class=\"secnum\">20.3.2.26</span>#sec-math.pow Math.pow ( base, exponent )</h1>...</div><div id=\"excluded-sec-math.random\"><h1><span class=\"secnum\">20.3.2.27</span>#sec-math.random Math.random ( )</h1>...</div><div id=\"excluded-sec-math.round\"><h1><span class=\"secnum\">20.3.2.28</span>#sec-math.round Math.round ( x )</h1>...</div><div id=\"excluded-sec-math.sign\"><h1><span class=\"secnum\">20.3.2.29</span>#sec-math.sign Math.sign ( x )</h1>...</div><div id=\"excluded-sec-math.sin\"><h1><span class=\"secnum\">20.3.2.30</span>#sec-math.sin Math.sin ( x )</h1>...</div><div id=\"excluded-sec-math.sinh\"><h1><span class=\"secnum\">20.3.2.31</span>#sec-math.sinh Math.sinh ( x )</h1>...</div><div id=\"excluded-sec-math.sqrt\"><h1><span class=\"secnum\">20.3.2.32</span>#sec-math.sqrt Math.sqrt ( x )</h1>...</div><div id=\"excluded-sec-math.tan\"><h1><span class=\"secnum\">20.3.2.33</span>#sec-math.tan Math.tan ( x )</h1>...</div><div id=\"excluded-sec-math.tanh\"><h1><span class=\"secnum\">20.3.2.34</span>#sec-math.tanh Math.tanh ( x )</h1>...</div><div id=\"excluded-sec-math.trunc\"><h1><span class=\"secnum\">20.3.2.35</span>#sec-math.trunc Math.trunc ( x )</h1>...</div></emu-clause>\n  "}, "sec-math.max": {"num": "20.3.2.24", "title": "#sec-math.max Math.max ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.max\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.max\">#sec-math.max</span> Math.max ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the largest of the resulting values.</p>\n        <p>When the <code>Math.max</code> method is called with at least two arguments <var>value1</var> and <var>value2</var> and any number of additional arguments which form the rest parameter ...<var>values</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>value1</var>, <var>value2</var>, and the elements of <var>values</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order.</li><li>Let <var>coerced</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>arg</var> of <var>args</var>, do<ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>arg</var>).</li><li>Append <var>n</var> to <var>coerced</var>.</li></ol></li><li>Let <var>highest</var> be <emu-val>-&#8734;</emu-val>.</li><li>For each element <var>number</var> of <var>coerced</var>, do<ol><li>If <var>number</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>number</var> is <emu-val>+0</emu-val> and <var>highest</var> is <emu-val>-0</emu-val>, set <var>highest</var> to <emu-val>+0</emu-val>.</li><li>If <var>number</var> &gt; <var>highest</var>, set <var>highest</var> to <var>number</var>.</li></ol></li><li>Return <var>highest</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-math.atan2": {"num": "20.3.2.8", "title": "#sec-math.atan2 Math.atan2 ( y, x )", "html": "<emu-clause id=\"sec-math.atan2\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atan2\">#sec-math.atan2</span> Math.atan2 ( <var>y</var>, <var>x</var> )</h1>\n        <p>Returns the inverse tangent of the quotient <emu-eqn class=\"inline\"><var>y</var> / <var>x</var></emu-eqn> of the arguments <var>y</var> and <var>x</var>, where the signs of <var>y</var> and <var>x</var> are used to determine the quadrant of the result. Note that it is intentional and traditional for the two-argument inverse tangent function that the argument named <var>y</var> be first and the argument named <var>x</var> be second. The result is expressed in radians and ranges from -&#960; to +&#960;, inclusive.</p>\n        <p>When the <code>Math.atan2</code> method is called with arguments <var>x</var> and <var>y</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>ny</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>Let <var>nx</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>ny</var> is <emu-val>NaN</emu-val> or <var>nx</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>ny</var> is <emu-val>+&#8734;</emu-val>, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 4.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +3&#960; / 4.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li></ol></li><li>If <var>ny</var> is <emu-val>-&#8734;</emu-val>, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 4.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -3&#960; / 4.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li></ol></li><li>If <var>ny</var> is <emu-val>+0</emu-val>, then<ol><li>If <var>nx</var> &gt; 0 or <var>nx</var> is <emu-val>+0</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.</li></ol></li><li>If <var>ny</var> is <emu-val>-0</emu-val>, then<ol><li>If <var>nx</var> &gt; 0 or <var>nx</var> is <emu-val>+0</emu-val>, return <emu-val>-0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ny</var> is finite and is neither <emu-val>+0</emu-val> nor <emu-val>-0</emu-val>.</li><li>If <var>ny</var> &gt; 0, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.</li><li>If <var>nx</var> is <emu-val>+0</emu-val> or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li></ol></li><li>If <var>ny</var> &lt; 0, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>-0</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.</li><li>If <var>nx</var> is <emu-val>+0</emu-val> or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>nx</var> is finite and is neither <emu-val>+0</emu-val> nor <emu-val>-0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse tangent of the quotient <var>ny</var> / <var>nx</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.fround": {"num": "20.3.2.17", "title": "#sec-math.fround Math.fround ( x )", "html": "<emu-clause id=\"sec-math.fround\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.fround\">#sec-math.fround</span> Math.fround ( <var>x</var> )</h1>\n        <p>When the <code>Math.fround</code> method is called with argument <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If <var>x</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>x</var> is one of <emu-val>+0</emu-val>, <emu-val>-0</emu-val>, <emu-val>+&#8734;</emu-val>, <emu-val>-&#8734;</emu-val>, return <var>x</var>.</li><li>Let <var>x32</var> be the result of converting <var>x</var> to a value in <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> binary32 format using roundTiesToEven mode.</li><li>Let <var>x64</var> be the result of converting <var>x32</var> to a value in <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> binary64 format.</li><li>Return the ECMAScript <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> corresponding to <var>x64</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.round": {"num": "20.3.2.28", "title": "#sec-math.round Math.round ( x )", "html": "<emu-clause id=\"sec-math.round\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.round\">#sec-math.round</span> Math.round ( <var>x</var> )</h1>\n        <p>Returns the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closest to <var>x</var> and is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. If two integers are equally close to <var>x</var>, then the result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closer to <emu-val>+&#8734;</emu-val>. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <p>When the <code>Math.round</code> method is called with argument <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is an integral Number, return <var>n</var>.</li><li>If <var>x</var> &lt; 0.5 and <var>x</var> &gt; 0, return <emu-val>+0</emu-val>.</li><li>If <var>x</var> &lt; 0 and <var>x</var> &#8805; -0.5, return <emu-val>-0</emu-val>.</li><li>Return the integral Number closest to <var>n</var>, preferring the Number closer to <emu-val>+&#8734;</emu-val> in the case of a tie.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>Math.round(3.5)</code> returns 4, but <code>Math.round(-3.5)</code> returns -3.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The value of <code>Math.round(x)</code> is not always the same as the value of <code>Math.floor(x + 0.5)</code>. When <code>x</code> is <emu-val>-0</emu-val> or is less than 0 but greater than or equal to -0.5, <code>Math.round(x)</code> returns <emu-val>-0</emu-val>, but <code>Math.floor(x + 0.5)</code> returns <emu-val>+0</emu-val>. <code>Math.round(x)</code> may also differ from the value of <code>Math.floor(x + 0.5)</code>because of internal rounding when computing <code>x + 0.5</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-math.min": {"num": "20.3.2.25", "title": "#sec-math.min Math.min ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.min\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.min\">#sec-math.min</span> Math.min ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the smallest of the resulting values.</p>\n        <p>When the <code>Math.min</code> method is called with at least two arguments <var>value1</var> and <var>value2</var> and any number of additional arguments which form the rest parameter ...<var>values</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>value1</var>, <var>value2</var>, and the elements of <var>values</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order.</li><li>Let <var>coerced</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>arg</var> of <var>args</var>, do<ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>arg</var>).</li><li>Append <var>n</var> to <var>coerced</var>.</li></ol></li><li>Let <var>lowest</var> be <emu-val>+&#8734;</emu-val>.</li><li>For each element <var>number</var> of <var>coerced</var>, do<ol><li>If <var>number</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>number</var> is <emu-val>-0</emu-val> and <var>lowest</var> is <emu-val>+0</emu-val>, set <var>lowest</var> to <emu-val>-0</emu-val>.</li><li>If <var>number</var> &lt; <var>lowest</var>, set <var>lowest</var> to <var>number</var>.</li></ol></li><li>Return <var>lowest</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-math.hypot": {"num": "20.3.2.18", "title": "#sec-math.hypot Math.hypot ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.hypot\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.hypot\">#sec-math.hypot</span> Math.hypot ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p>Returns the square root of the sum of squares of its arguments.</p>\n        <p>When the <code>Math.hypot</code> method is called with at least two arguments <var>value1</var> and <var>value2</var> and any number of additional arguments which form the rest parameter ...<var>values</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>args</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>value1</var>, <var>value2</var>, and the elements of <var>values</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order.</li><li>Let <var>coerced</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>arg</var> of <var>args</var>, do<ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>arg</var>).</li><li>Append <var>n</var> to <var>coerced</var>.</li></ol></li><li>Let <var>onlyZero</var> be <emu-val>true</emu-val>.</li><li>For each element <var>number</var> of <var>coerced</var>, do<ol><li>If <var>number</var> is <emu-val>NaN</emu-val> or <var>number</var> is <emu-val>+&#8734;</emu-val>, return <var>number</var>.</li><li>If <var>number</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>If <var>number</var> is neither <emu-val>+0</emu-val> nor <emu-val>-0</emu-val>, set <var>onlyZero</var> to <emu-val>false</emu-val>.</li></ol></li><li>If <var>onlyZero</var> is <emu-val>true</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the square root of the sum of squares of the elements of <var>coerced</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Implementations should take care to avoid the loss of precision from overflows and underflows that are prone to occur in naive implementations when this function is called with two or more arguments.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-function-properties-of-the-math-object", "sec-math.max", "sec-math.atan2", "sec-math.fround", "sec-math.round", "sec-math.min", "sec-math.hypot"], "secData": {"sec-function-properties-of-the-math-object": {"num": "20.3.2", "title": "#sec-function-properties-of-the-math-object Function Properties of the Math Object", "html": "<emu-clause id=\"sec-function-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-properties-of-the-math-object\">#sec-function-properties-of-the-math-object</span> Function Properties of the Math Object</h1>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The behaviour of the functions <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atanh</code>, <code>atan2</code>, <code>cbrt</code>, <code>cos</code>, <code>cosh</code>, <code>exp</code>, <code>expm1</code>, <code>hypot</code>, <code>log</code>,<code>log1p</code>, <code>log2</code>, <code>log10</code>, <code>pow</code>, <code>random</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, and <code>tanh</code> is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest. For other argument values, these functions are intended to compute approximations to the results of familiar mathematical functions, but some latitude is allowed in the choice of approximation algorithms. The general intent is that an implementer should be able to use the same mathematical library for ECMAScript on a given hardware platform that is available to C programmers on that platform.</p>\n        <p>Although the choice of algorithms is left to the implementation, it is recommended (but not specified by this standard) that implementations use the approximation algorithms for <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> arithmetic contained in <code>fdlibm</code>, the freely distributable mathematical library from Sun Microsystems (<a href=\"http://www.netlib.org/fdlibm\">http://www.netlib.org/fdlibm</a>).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-math.abs\"><h1><span class=\"secnum\">20.3.2.1</span>#sec-math.abs Math.abs ( x )</h1>...</div><div id=\"excluded-sec-math.acos\"><h1><span class=\"secnum\">20.3.2.2</span>#sec-math.acos Math.acos ( x )</h1>...</div><div id=\"excluded-sec-math.acosh\"><h1><span class=\"secnum\">20.3.2.3</span>#sec-math.acosh Math.acosh ( x )</h1>...</div><div id=\"excluded-sec-math.asin\"><h1><span class=\"secnum\">20.3.2.4</span>#sec-math.asin Math.asin ( x )</h1>...</div><div id=\"excluded-sec-math.asinh\"><h1><span class=\"secnum\">20.3.2.5</span>#sec-math.asinh Math.asinh ( x )</h1>...</div><div id=\"excluded-sec-math.atan\"><h1><span class=\"secnum\">20.3.2.6</span>#sec-math.atan Math.atan ( x )</h1>...</div><div id=\"excluded-sec-math.atanh\"><h1><span class=\"secnum\">20.3.2.7</span>#sec-math.atanh Math.atanh ( x )</h1>...</div><div id=\"excluded-sec-math.atan2\"><h1><span class=\"secnum\">20.3.2.8</span>#sec-math.atan2 Math.atan2 ( y, x )</h1>...</div><div id=\"excluded-sec-math.cbrt\"><h1><span class=\"secnum\">20.3.2.9</span>#sec-math.cbrt Math.cbrt ( x )</h1>...</div><div id=\"excluded-sec-math.ceil\"><h1><span class=\"secnum\">20.3.2.10</span>#sec-math.ceil Math.ceil ( x )</h1>...</div><div id=\"excluded-sec-math.clz32\"><h1><span class=\"secnum\">20.3.2.11</span>#sec-math.clz32 Math.clz32 ( x )</h1>...</div><div id=\"excluded-sec-math.cos\"><h1><span class=\"secnum\">20.3.2.12</span>#sec-math.cos Math.cos ( x )</h1>...</div><div id=\"excluded-sec-math.cosh\"><h1><span class=\"secnum\">20.3.2.13</span>#sec-math.cosh Math.cosh ( x )</h1>...</div><div id=\"excluded-sec-math.exp\"><h1><span class=\"secnum\">20.3.2.14</span>#sec-math.exp Math.exp ( x )</h1>...</div><div id=\"excluded-sec-math.expm1\"><h1><span class=\"secnum\">20.3.2.15</span>#sec-math.expm1 Math.expm1 ( x )</h1>...</div><div id=\"excluded-sec-math.floor\"><h1><span class=\"secnum\">20.3.2.16</span>#sec-math.floor Math.floor ( x )</h1>...</div><div id=\"excluded-sec-math.fround\"><h1><span class=\"secnum\">20.3.2.17</span>#sec-math.fround Math.fround ( x )</h1>...</div><div id=\"excluded-sec-math.hypot\"><h1><span class=\"secnum\">20.3.2.18</span>#sec-math.hypot Math.hypot ( ...args )</h1>...</div><div id=\"excluded-sec-math.imul\"><h1><span class=\"secnum\">20.3.2.19</span>#sec-math.imul Math.imul ( x, y )</h1>...</div><div id=\"excluded-sec-math.log\"><h1><span class=\"secnum\">20.3.2.20</span>#sec-math.log Math.log ( x )</h1>...</div><div id=\"excluded-sec-math.log1p\"><h1><span class=\"secnum\">20.3.2.21</span>#sec-math.log1p Math.log1p ( x )</h1>...</div><div id=\"excluded-sec-math.log10\"><h1><span class=\"secnum\">20.3.2.22</span>#sec-math.log10 Math.log10 ( x )</h1>...</div><div id=\"excluded-sec-math.log2\"><h1><span class=\"secnum\">20.3.2.23</span>#sec-math.log2 Math.log2 ( x )</h1>...</div><div id=\"excluded-sec-math.max\"><h1><span class=\"secnum\">20.3.2.24</span>#sec-math.max Math.max ( ...args )</h1>...</div><div id=\"excluded-sec-math.min\"><h1><span class=\"secnum\">20.3.2.25</span>#sec-math.min Math.min ( ...args )</h1>...</div><div id=\"excluded-sec-math.pow\"><h1><span class=\"secnum\">20.3.2.26</span>#sec-math.pow Math.pow ( base, exponent )</h1>...</div><div id=\"excluded-sec-math.random\"><h1><span class=\"secnum\">20.3.2.27</span>#sec-math.random Math.random ( )</h1>...</div><div id=\"excluded-sec-math.round\"><h1><span class=\"secnum\">20.3.2.28</span>#sec-math.round Math.round ( x )</h1>...</div><div id=\"excluded-sec-math.sign\"><h1><span class=\"secnum\">20.3.2.29</span>#sec-math.sign Math.sign ( x )</h1>...</div><div id=\"excluded-sec-math.sin\"><h1><span class=\"secnum\">20.3.2.30</span>#sec-math.sin Math.sin ( x )</h1>...</div><div id=\"excluded-sec-math.sinh\"><h1><span class=\"secnum\">20.3.2.31</span>#sec-math.sinh Math.sinh ( x )</h1>...</div><div id=\"excluded-sec-math.sqrt\"><h1><span class=\"secnum\">20.3.2.32</span>#sec-math.sqrt Math.sqrt ( x )</h1>...</div><div id=\"excluded-sec-math.tan\"><h1><span class=\"secnum\">20.3.2.33</span>#sec-math.tan Math.tan ( x )</h1>...</div><div id=\"excluded-sec-math.tanh\"><h1><span class=\"secnum\">20.3.2.34</span>#sec-math.tanh Math.tanh ( x )</h1>...</div><div id=\"excluded-sec-math.trunc\"><h1><span class=\"secnum\">20.3.2.35</span>#sec-math.trunc Math.trunc ( x )</h1>...</div></emu-clause>\n  "}, "sec-math.max": {"num": "20.3.2.24", "title": "#sec-math.max Math.max ( ...args )", "html": "<emu-clause id=\"sec-math.max\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.max\">#sec-math.max</span> Math.max ( ...<var>args</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the largest of the resulting values.</p>\n        <p>When the <code>Math.max</code> method is called with zero or more arguments which form the rest parameter ...<var>args</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>coerced</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>arg</var> of <var>args</var>, do<ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>arg</var>).</li><li>Append <var>n</var> to <var>coerced</var>.</li></ol></li><li>Let <var>highest</var> be <emu-val>-&#8734;</emu-val>.</li><li>For each element <var>number</var> of <var>coerced</var>, do<ol><li>If <var>number</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>number</var> is <emu-val>+0</emu-val> and <var>highest</var> is <emu-val>-0</emu-val>, set <var>highest</var> to <emu-val>+0</emu-val>.</li><li>If <var>number</var> &gt; <var>highest</var>, set <var>highest</var> to <var>number</var>.</li></ol></li><li>Return <var>highest</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.</p>\n        </div></emu-note>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>max</code> method is 2.</p>\n      </emu-clause>\n\n      "}, "sec-math.atan2": {"num": "20.3.2.8", "title": "#sec-math.atan2 Math.atan2 ( y, x )", "html": "<emu-clause id=\"sec-math.atan2\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atan2\">#sec-math.atan2</span> Math.atan2 ( <var>y</var>, <var>x</var> )</h1>\n        <p>Returns the inverse tangent of the quotient <emu-eqn class=\"inline\"><var>y</var> / <var>x</var></emu-eqn> of the arguments <var>y</var> and <var>x</var>, where the signs of <var>y</var> and <var>x</var> are used to determine the quadrant of the result. Note that it is intentional and traditional for the two-argument inverse tangent function that the argument named <var>y</var> be first and the argument named <var>x</var> be second. The result is expressed in radians and ranges from -&#960; to +&#960;, inclusive.</p>\n        <p>When the <code>Math.atan2</code> method is called with arguments <var>y</var> and <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>ny</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>Let <var>nx</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>ny</var> is <emu-val>NaN</emu-val> or <var>nx</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>ny</var> is <emu-val>+&#8734;</emu-val>, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 4.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +3&#960; / 4.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li></ol></li><li>If <var>ny</var> is <emu-val>-&#8734;</emu-val>, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 4.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -3&#960; / 4.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li></ol></li><li>If <var>ny</var> is <emu-val>+0</emu-val>, then<ol><li>If <var>nx</var> &gt; 0 or <var>nx</var> is <emu-val>+0</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.</li></ol></li><li>If <var>ny</var> is <emu-val>-0</emu-val>, then<ol><li>If <var>nx</var> &gt; 0 or <var>nx</var> is <emu-val>+0</emu-val>, return <emu-val>-0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ny</var> is finite and is neither <emu-val>+0</emu-val> nor <emu-val>-0</emu-val>.</li><li>If <var>ny</var> &gt; 0, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.</li><li>If <var>nx</var> is <emu-val>+0</emu-val> or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li></ol></li><li>If <var>ny</var> &lt; 0, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>-0</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.</li><li>If <var>nx</var> is <emu-val>+0</emu-val> or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>nx</var> is finite and is neither <emu-val>+0</emu-val> nor <emu-val>-0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse tangent of the quotient <var>ny</var> / <var>nx</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.fround": {"num": "20.3.2.17", "title": "#sec-math.fround Math.fround ( x )", "html": "<emu-clause id=\"sec-math.fround\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.fround\">#sec-math.fround</span> Math.fround ( <var>x</var> )</h1>\n        <p>When the <code>Math.fround</code> method is called with argument <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is one of <emu-val>+0</emu-val>, <emu-val>-0</emu-val>, <emu-val>+&#8734;</emu-val>, or <emu-val>-&#8734;</emu-val>, return <var>n</var>.</li><li>Let <var>n32</var> be the result of converting <var>n</var> to a value in <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> binary32 format using roundTiesToEven mode.</li><li>Let <var>n64</var> be the result of converting <var>n32</var> to a value in <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> binary64 format.</li><li>Return the ECMAScript <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> corresponding to <var>n64</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.round": {"num": "20.3.2.28", "title": "#sec-math.round Math.round ( x )", "html": "<emu-clause id=\"sec-math.round\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.round\">#sec-math.round</span> Math.round ( <var>x</var> )</h1>\n        <p>Returns the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closest to <var>x</var> and is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. If two integers are equally close to <var>x</var>, then the result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closer to <emu-val>+&#8734;</emu-val>. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <p>When the <code>Math.round</code> method is called with argument <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is an integral Number, return <var>n</var>.</li><li>If <var>n</var> &lt; 0.5 and <var>n</var> &gt; 0, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> &lt; 0 and <var>n</var> &#8805; -0.5, return <emu-val>-0</emu-val>.</li><li>Return the integral Number closest to <var>n</var>, preferring the Number closer to <emu-val>+&#8734;</emu-val> in the case of a tie.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>Math.round(3.5)</code> returns 4, but <code>Math.round(-3.5)</code> returns -3.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The value of <code>Math.round(x)</code> is not always the same as the value of <code>Math.floor(x + 0.5)</code>. When <code>x</code> is <emu-val>-0</emu-val> or is less than 0 but greater than or equal to -0.5, <code>Math.round(x)</code> returns <emu-val>-0</emu-val>, but <code>Math.floor(x + 0.5)</code> returns <emu-val>+0</emu-val>. <code>Math.round(x)</code> may also differ from the value of <code>Math.floor(x + 0.5)</code>because of internal rounding when computing <code>x + 0.5</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-math.min": {"num": "20.3.2.25", "title": "#sec-math.min Math.min ( ...args )", "html": "<emu-clause id=\"sec-math.min\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.min\">#sec-math.min</span> Math.min ( ...<var>args</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the smallest of the resulting values.</p>\n        <p>When the <code>Math.min</code> method is called with zero or more arguments which form the rest parameter ...<var>args</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>coerced</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>arg</var> of <var>args</var>, do<ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>arg</var>).</li><li>Append <var>n</var> to <var>coerced</var>.</li></ol></li><li>Let <var>lowest</var> be <emu-val>+&#8734;</emu-val>.</li><li>For each element <var>number</var> of <var>coerced</var>, do<ol><li>If <var>number</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>number</var> is <emu-val>-0</emu-val> and <var>lowest</var> is <emu-val>+0</emu-val>, set <var>lowest</var> to <emu-val>-0</emu-val>.</li><li>If <var>number</var> &lt; <var>lowest</var>, set <var>lowest</var> to <var>number</var>.</li></ol></li><li>Return <var>lowest</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.</p>\n        </div></emu-note>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>min</code> method is 2.</p>\n      </emu-clause>\n\n      "}, "sec-math.hypot": {"num": "20.3.2.18", "title": "#sec-math.hypot Math.hypot ( ...args )", "html": "<emu-clause id=\"sec-math.hypot\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.hypot\">#sec-math.hypot</span> Math.hypot ( ...<var>args</var> )</h1>\n        <p>Returns the square root of the sum of squares of its arguments.</p>\n        <p>When the <code>Math.hypot</code> method is called with zero or more arguments which form the rest parameter ...<var>args</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>coerced</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>arg</var> of <var>args</var>, do<ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>arg</var>).</li><li>Append <var>n</var> to <var>coerced</var>.</li></ol></li><li>Let <var>onlyZero</var> be <emu-val>true</emu-val>.</li><li>For each element <var>number</var> of <var>coerced</var>, do<ol><li>If <var>number</var> is <emu-val>NaN</emu-val> or <var>number</var> is <emu-val>+&#8734;</emu-val>, return <var>number</var>.</li><li>If <var>number</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>If <var>number</var> is neither <emu-val>+0</emu-val> nor <emu-val>-0</emu-val>, set <var>onlyZero</var> to <emu-val>false</emu-val>.</li></ol></li><li>If <var>onlyZero</var> is <emu-val>true</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the square root of the sum of squares of the elements of <var>coerced</var>.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>hypot</code> method is 2.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Implementations should take care to avoid the loss of precision from overflows and underflows that are prone to occur in naive implementations when this function is called with two or more arguments.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}}