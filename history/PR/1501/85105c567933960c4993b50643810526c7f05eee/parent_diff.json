{"from": {"secList": ["sec-source-text-module-records", "sec-cyclic-module-records", "sec-source-text-module-record-execute-module", "sec-innermoduleinstantiation", "sec-innermoduleevaluation"], "secData": {"sec-source-text-module-records": {"num": "15.2.1.17", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A  <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, instantiate, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in  <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in  <emu-xref href=\"#table-38\"><a href=\"#table-38\" class=\"excluded-xref\" excluded-id=\"table-38\">#table-38</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-38\" caption=\"Additional Fields of Source Text Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-38\">#table-38</span>: Additional Fields of Source Text Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              \n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              \n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to export * declarations that occur within the module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An  <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-39\"><a href=\"#table-39\" class=\"excluded-xref\" excluded-id=\"table-39\">#table-39</a></emu-xref>:</p>\n        <emu-table id=\"table-39\" caption=\"ImportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-39\">#table-39</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <code>\"*\"</code> indicates that the import request is for the target module's namespace object.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-40\"><a href=\"#table-40\" class=\"excluded-xref\" excluded-id=\"table-40\">#table-40</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-40\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-40\">#table-40</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <code>\"ns\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                \n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An  <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-41\"><a href=\"#table-41\" class=\"excluded-xref\" excluded-id=\"table-41\">#table-41</a></emu-xref>:</p>\n        <emu-table id=\"table-41\" caption=\"ExportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-41\">#table-41</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name used to export this binding by this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <code>\"*\"</code> indicates that the export request is for all exported bindings.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-42\"><a href=\"#table-42\" class=\"excluded-xref\" excluded-id=\"table-42\">#table-42</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-42\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-42\">#table-42</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                \n                </th>\n                <th>\n                  [[ExportName]]\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f(){}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"f\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function(){}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">15.2.1.17.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">15.2.1.17.2</span>#sec-getexportednames GetExportedNames ( exportStarSet ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">15.2.1.17.3</span>#sec-resolveexport ResolveExport ( exportName, resolveSet ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">15.2.1.17.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">15.2.1.17.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-cyclic-module-records": {"num": "15.2.1.16", "title": "#sec-cyclic-module-records Cyclic Module Records", "html": "<emu-clause id=\"sec-cyclic-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-cyclic-module-records\">#sec-cyclic-module-records</span> Cyclic Module Records</h1>\n        <p>A  <dfn id=\"cyclic-module-record\">Cyclic Module Record</dfn> is used to represent information about a module that can participate in dependency cycles with other modules that are subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type. Module Records that are not subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type must not participate in dependency cycles with Source Text Module Records.</p>\n        <p>In addition to the fields defined in  <emu-xref href=\"#table-36\"><a href=\"#table-36\" class=\"excluded-xref\" excluded-id=\"table-36\">#table-36</a></emu-xref> Cyclic Module Records have the additional fields listed in  <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-fields\" caption=\"Additional Fields of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</span>: Additional Fields of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Field Name\n                \n                </th>\n                <th>\n                  Value Type\n                \n                </th>\n                <th>\n                  Meaning\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  [[Status]]\n                \n                </td>\n                <td>\n                  String\n                \n                </td>\n                <td>\n                  Initially <code>\"uninstantiated\"</code>. Transitions to <code>\"instantiating\"</code>, <code>\"instantiated\"</code>, <code>\"evaluating\"</code>, <code>\"evaluated\"</code> (in that order) as the module progresses throughout its lifecycle.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[EvaluationError]]\n                \n                </td>\n                <td>\n                  An <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> | <emu-val>undefined</emu-val>\n                \n                </td>\n                <td>\n                  A completion of type <emu-const>throw</emu-const> representing the exception that occurred during evaluation.  <emu-val>undefined</emu-val> if no exception occurred or if [[Status]] is not <code>\"evaluated\"</code>.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSIndex]]\n                \n                </td>\n                <td>\n                  Integer | <emu-val>undefined</emu-val>\n                \n                </td>\n                <td>\n                  Auxiliary field used during Instantiate and Evaluate only.\n                  If [[Status]] is <code>\"instantiating\"</code> or <code>\"evaluating\"</code>, this nonnegative number records the point at which the module was first visited during the ongoing depth-first traversal of the dependency graph.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSAncestorIndex]]\n                \n                </td>\n                <td>\n                  Integer | <emu-val>undefined</emu-val>\n                \n                </td>\n                <td>\n                  Auxiliary field used during Instantiate and Evaluate only. If [[Status]] is <code>\"instantiating\"</code> or <code>\"evaluating\"</code>, this is either the module's own [[DFSIndex]] or that of an \"earlier\" module in the same strongly connected component.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[RequestedModules]]\n                \n                </td>\n                <td>\n                  <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of String\n                \n                </td>\n                <td>\n                  A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of all the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> strings used by the module represented by this record to request the importation of a module. The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is source code occurrence ordered.\n                \n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>In addition to the methods defined in  <emu-xref href=\"#table-37\"><a href=\"#table-37\" class=\"excluded-xref\" excluded-id=\"table-37\">#table-37</a></emu-xref> Cyclic Module Records have the additional methods listed in  <emu-xref href=\"#table-cyclic-module-methods\"><a href=\"#table-cyclic-module-methods\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-methods\" caption=\"Additional Abstract Methods of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</span>: Additional Abstract Methods of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Method\n                \n                </th>\n                <th>\n                  Purpose\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"InitializeEnvironment\"><a href=\"#sec-source-text-module-record-initialize-environment\">InitializeEnvironment</a></emu-xref>()\n                \n                </td>\n                <td>\n                  Initialize the <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">Lexical Environment</a></emu-xref> of the module, including resolving all imported bindings.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"ExecuteModule\"><a href=\"#sec-source-text-module-record-execute-module\">ExecuteModule</a></emu-xref>()\n                \n                </td>\n                <td>\n                  Initialize the <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> of the module and evaluate the module's code within it.\n                \n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-moduledeclarationinstantiation\"><h1><span class=\"secnum\">15.2.1.16.1</span>#sec-moduledeclarationinstantiation Instantiate ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-moduleevaluation\"><h1><span class=\"secnum\">15.2.1.16.2</span>#sec-moduleevaluation Evaluate ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-example-cyclic-module-record-graphs\"><h1><span class=\"secnum\">15.2.1.16.3</span>#sec-example-cyclic-module-record-graphs Example Cyclic Module Record Graphs</h1>...</div></emu-clause>\n\n      "}, "sec-source-text-module-record-execute-module": {"num": "15.2.1.17.5", "title": "#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method", "html": "<emu-clause id=\"sec-source-text-module-record-execute-module\" aoid=\"ExecuteModule\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-record-execute-module\">#sec-source-text-module-record-execute-module</span> ExecuteModule ( ) Concrete Method</h1>\n\n          <p>The ExecuteModule concrete method of a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> implements the corresponding <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> abstract method.</p>\n\n          <p>This abstract method performs the following steps:</p>\n\n          <emu-alg><ol><li>Let <var>module</var> be this <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>.</li><li>Let <var>moduleCxt</var> be a new ECMAScript code <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>moduleCxt</var> to <emu-val>null</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Realm]] is not <emu-val>undefined</emu-val>.</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>moduleCxt</var> to <var>module</var>.[[Realm]].</li><li>Set the ScriptOrModule of <var>moduleCxt</var> to <var>module</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> has been linked and declarations in its <emu-xref href=\"#module-environment\"><a href=\"#module-environment\">module environment</a></emu-xref> have been instantiated.</li><li>Set the VariableEnvironment of <var>moduleCxt</var> to <var>module</var>.[[Environment]].</li><li>Set the LexicalEnvironment of <var>moduleCxt</var> to <var>module</var>.[[Environment]].</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Push <var>moduleCxt</var> on to the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>moduleCxt</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>result</var> be the result of evaluating <var>module</var>.[[ECMAScriptCode]].</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> <var>moduleCxt</var> and remove it from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Resume the context that is now on the top of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-innermoduleinstantiation": {"num": "15.2.1.16.1.1", "title": "#sec-innermoduleinstantiation InnerModuleInstantiation ( module, stack, index )", "html": "<emu-clause id=\"sec-innermoduleinstantiation\" aoid=\"InnerModuleInstantiation\">\n            <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-innermoduleinstantiation\">#sec-innermoduleinstantiation</span> InnerModuleInstantiation ( <var>module</var>, <var>stack</var>, <var>index</var> )</h1>\n\n            <p>The InnerModuleInstantiation abstract operation is used by Instantiate to perform the actual instantiation process for the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>module</var>, as well as recursively on all other modules in the dependency graph. The <var>stack</var> and <var>index</var> parameters, as well as a module's [[DFSIndex]] and [[DFSAncestorIndex]] fields, keep track of the depth-first search (DFS) traversal. In particular, [[DFSAncestorIndex]] is used to discover strongly connected components (SCCs), such that all modules in an SCC transition to <code>\"instantiated\"</code> together.</p>\n\n            <p>This abstract operation performs the following steps:</p>\n\n            <emu-alg><ol><li>If <var>module</var> is not a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>, then<ol><li>Perform ? <var>module</var>.Instantiate().</li><li>Return <var>index</var>.</li></ol></li><li>If <var>module</var>.[[Status]] is <code>\"instantiating\"</code>, <code>\"instantiated\"</code>, or <code>\"evaluated\"</code>, then<ol><li>Return <var>index</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <code>\"uninstantiated\"</code>.</li><li>Set <var>module</var>.[[Status]] to <code>\"instantiating\"</code>.</li><li>Set <var>module</var>.[[DFSIndex]] to <var>index</var>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <var>index</var>.</li><li>Increase <var>index</var> by 1.</li><li>Append <var>module</var> to <var>stack</var>.</li><li>For each String <var>required</var> that is an element of <var>module</var>.[[RequestedModules]], do<ol><li>Let <var>requiredModule</var> be ?&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>required</var>).</li><li>Set <var>index</var> to ?&#160;<emu-xref aoid=\"InnerModuleInstantiation\"><a href=\"#sec-innermoduleinstantiation\">InnerModuleInstantiation</a></emu-xref>(<var>requiredModule</var>, <var>stack</var>, <var>index</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is either <code>\"instantiating\"</code>, <code>\"instantiated\"</code>, or <code>\"evaluated\"</code>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is <code>\"instantiating\"</code> if and only if <var>requiredModule</var> is in <var>stack</var>.</li><li>If <var>requiredModule</var>.[[Status]] is <code>\"instantiating\"</code>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var> is a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>module</var>.[[DFSAncestorIndex]], <var>requiredModule</var>.[[DFSAncestorIndex]]).</li></ol></li></ol></li><li>Perform ? <var>module</var>.<emu-xref aoid=\"InitializeEnvironment\"><a href=\"#sec-source-text-module-record-initialize-environment\">InitializeEnvironment</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> occurs exactly once in <var>stack</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[DFSAncestorIndex]] is less than or equal to <var>module</var>.[[DFSIndex]].</li><li>If <var>module</var>.[[DFSAncestorIndex]] equals <var>module</var>.[[DFSIndex]], then<ol><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>requiredModule</var> be the last element in <var>stack</var>.</li><li>Remove the last element of <var>stack</var>.</li><li>Set <var>requiredModule</var>.[[Status]] to <code>\"instantiated\"</code>.</li><li>If <var>requiredModule</var> and <var>module</var> are the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, set <var>done</var> to <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return <var>index</var>.\n            </li></ol></emu-alg>\n          </emu-clause>\n        "}, "sec-innermoduleevaluation": {"num": "15.2.1.16.2.1", "title": "#sec-innermoduleevaluation InnerModuleEvaluation ( module, stack, index )", "html": "<emu-clause id=\"sec-innermoduleevaluation\" aoid=\"InnerModuleEvaluation\">\n            <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-innermoduleevaluation\">#sec-innermoduleevaluation</span> InnerModuleEvaluation ( <var>module</var>, <var>stack</var>, <var>index</var> )</h1>\n\n            <p>The InnerModuleEvaluation abstract operation is used by Evaluate to perform the actual evaluation process for the <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> <var>module</var>, as well as recursively on all other modules in the dependency graph. The <var>stack</var> and <var>index</var> parameters, as well as <var>module</var>'s [[DFSIndex]] and [[DFSAncestoreIndex]] fields, are used the same way as in <emu-xref aoid=\"InnerModuleInstantiation\"><a href=\"#sec-innermoduleinstantiation\">InnerModuleInstantiation</a></emu-xref>.</p>\n\n            <p>This abstract operation performs the following steps:</p>\n\n            <emu-alg><ol><li>If <var>module</var> is not a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>, then<ol><li>Perform ? <var>module</var>.Evaluate().</li><li>Return <var>index</var>.</li></ol></li><li>If <var>module</var>.[[Status]] is <code>\"evaluated\"</code>, then<ol><li>If <var>module</var>.[[EvaluationError]] is <emu-val>undefined</emu-val>, return <var>index</var>.</li><li>Otherwise return <var>module</var>.[[EvaluationError]].</li></ol></li><li>If <var>module</var>.[[Status]] is <code>\"evaluating\"</code>, return <var>index</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <code>\"instantiated\"</code>.</li><li>Set <var>module</var>.[[Status]] to <code>\"evaluating\"</code>.</li><li>Set <var>module</var>.[[DFSIndex]] to <var>index</var>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <var>index</var>.</li><li>Increase <var>index</var> by 1.</li><li>Append <var>module</var> to <var>stack</var>.</li><li>For each String <var>required</var> that is an element of <var>module</var>.[[RequestedModules]], do<ol><li>Let <var>requiredModule</var> be !&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>required</var>).</li><li>NOTE: Instantiate must be completed successfully prior to invoking this method, so every requested module is guaranteed to resolve successfully.</li><li>Set <var>index</var> to ?&#160;<emu-xref aoid=\"InnerModuleEvaluation\"><a href=\"#sec-innermoduleevaluation\">InnerModuleEvaluation</a></emu-xref>(<var>requiredModule</var>, <var>stack</var>, <var>index</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is either <code>\"evaluating\"</code> or <code>\"evaluated\"</code>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is <code>\"evaluating\"</code> if and only if <var>requiredModule</var> is in <var>stack</var>.</li><li>If <var>requiredModule</var>.[[Status]] is <code>\"evaluating\"</code>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var> is a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>module</var>.[[DFSAncestorIndex]], <var>requiredModule</var>.[[DFSAncestorIndex]]).</li></ol></li></ol></li><li>Perform ? <var>module</var>.<emu-xref aoid=\"ExecuteModule\"><a href=\"#sec-source-text-module-record-execute-module\">ExecuteModule</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> occurs exactly once in <var>stack</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[DFSAncestorIndex]] is less than or equal to <var>module</var>.[[DFSIndex]].</li><li>If <var>module</var>.[[DFSAncestorIndex]] equals <var>module</var>.[[DFSIndex]], then<ol><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>requiredModule</var> be the last element in <var>stack</var>.</li><li>Remove the last element of <var>stack</var>.</li><li>Set <var>requiredModule</var>.[[Status]] to <code>\"evaluated\"</code>.</li><li>If <var>requiredModule</var> and <var>module</var> are the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, set <var>done</var> to <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return <var>index</var>.\n            </li></ol></emu-alg>\n          </emu-clause>\n        "}}, "figData": {"table-3": "Table 3", "table-4": "Table 4", "table-36": "Table 37", "table-37": "Table 38", "table-cyclic-module-fields": "Table 39", "table-cyclic-module-methods": "Table 40", "table-38": "Table 41", "table-39": "Table 42", "table-40": "Table 43", "table-41": "Table 44", "table-42": "Table 45"}}, "to": {"secList": ["sec-source-text-module-records", "sec-cyclic-module-records", "sec-source-text-module-record-execute-module", "sec-innermoduleinstantiation", "sec-innermoduleevaluation"], "secData": {"sec-source-text-module-records": {"num": "15.2.1.17", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A  <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, instantiate, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in  <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in  <emu-xref href=\"#table-38\"><a href=\"#table-38\" class=\"excluded-xref\" excluded-id=\"table-38\">#table-38</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-38\" caption=\"Additional Fields of Source Text Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-38\">#table-38</span>: Additional Fields of Source Text Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              \n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              \n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[RequestedModules]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of String\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of all the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> strings used by the module represented by this record to request the importation of a module. The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is source code occurrence ordered.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to export * declarations that occur within the module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An  <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-39\"><a href=\"#table-39\" class=\"excluded-xref\" excluded-id=\"table-39\">#table-39</a></emu-xref>:</p>\n        <emu-table id=\"table-39\" caption=\"ImportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-39\">#table-39</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <code>\"*\"</code> indicates that the import request is for the target module's namespace object.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-40\"><a href=\"#table-40\" class=\"excluded-xref\" excluded-id=\"table-40\">#table-40</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-40\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-40\">#table-40</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <code>\"ns\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                \n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An  <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-41\"><a href=\"#table-41\" class=\"excluded-xref\" excluded-id=\"table-41\">#table-41</a></emu-xref>:</p>\n        <emu-table id=\"table-41\" caption=\"ExportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-41\">#table-41</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name used to export this binding by this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <code>\"*\"</code> indicates that the export request is for all exported bindings.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-42\"><a href=\"#table-42\" class=\"excluded-xref\" excluded-id=\"table-42\">#table-42</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-42\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-42\">#table-42</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                \n                </th>\n                <th>\n                  [[ExportName]]\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f(){}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"f\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function(){}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">15.2.1.17.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">15.2.1.17.2</span>#sec-getexportednames GetExportedNames ( exportStarSet ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">15.2.1.17.3</span>#sec-resolveexport ResolveExport ( exportName, resolveSet ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">15.2.1.17.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">15.2.1.17.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-get-requested-modules\"><h1><span class=\"secnum\">15.2.1.17.6</span>#sec-source-text-module-record-get-requested-modules GetRequestedModules ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-cyclic-module-records": {"num": "15.2.1.16", "title": "#sec-cyclic-module-records Cyclic Module Records", "html": "<emu-clause id=\"sec-cyclic-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-cyclic-module-records\">#sec-cyclic-module-records</span> Cyclic Module Records</h1>\n        <p>A  <dfn id=\"cyclic-module-record\">Cyclic Module Record</dfn> is used to represent information about a module that can participate in dependency cycles with other modules that are subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type. Module Records that are not subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type must not participate in dependency cycles with Source Text Module Records.</p>\n        <p>In addition to the fields defined in  <emu-xref href=\"#table-36\"><a href=\"#table-36\" class=\"excluded-xref\" excluded-id=\"table-36\">#table-36</a></emu-xref> Cyclic Module Records have the additional fields listed in  <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-fields\" caption=\"Additional Fields of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</span>: Additional Fields of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Field Name\n                \n                </th>\n                <th>\n                  Value Type\n                \n                </th>\n                <th>\n                  Meaning\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  [[Status]]\n                \n                </td>\n                <td>\n                  String\n                \n                </td>\n                <td>\n                  Initially <code>\"uninstantiated\"</code>. Transitions to <code>\"instantiating\"</code>, <code>\"instantiated\"</code>, <code>\"evaluating\"</code>, <code>\"evaluated\"</code> (in that order) as the module progresses throughout its lifecycle.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[EvaluationError]]\n                \n                </td>\n                <td>\n                  An <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> | <emu-val>undefined</emu-val>\n                \n                </td>\n                <td>\n                  A completion of type <emu-const>throw</emu-const> representing the exception that occurred during evaluation.  <emu-val>undefined</emu-val> if no exception occurred or if [[Status]] is not <code>\"evaluated\"</code>.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSIndex]]\n                \n                </td>\n                <td>\n                  Integer | <emu-val>undefined</emu-val>\n                \n                </td>\n                <td>\n                  Auxiliary field used during Instantiate and Evaluate only.\n                  If [[Status]] is <code>\"instantiating\"</code> or <code>\"evaluating\"</code>, this nonnegative number records the point at which the module was first visited during the ongoing depth-first traversal of the dependency graph.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  [[DFSAncestorIndex]]\n                \n                </td>\n                <td>\n                  Integer | <emu-val>undefined</emu-val>\n                \n                </td>\n                <td>\n                  Auxiliary field used during Instantiate and Evaluate only. If [[Status]] is <code>\"instantiating\"</code> or <code>\"evaluating\"</code>, this is either the module's own [[DFSIndex]] or that of an \"earlier\" module in the same strongly connected component.\n                \n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>In addition to the methods defined in  <emu-xref href=\"#table-37\"><a href=\"#table-37\" class=\"excluded-xref\" excluded-id=\"table-37\">#table-37</a></emu-xref> Cyclic Module Records have the additional methods listed in  <emu-xref href=\"#table-cyclic-module-methods\"><a href=\"#table-cyclic-module-methods\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</a></emu-xref></p>\n        <emu-table id=\"table-cyclic-module-methods\" caption=\"Additional Abstract Methods of Cyclic Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-cyclic-module-methods\">#table-cyclic-module-methods</span>: Additional Abstract Methods of Cyclic Module Records</figcaption>\n          <table>\n            <tbody>\n              <tr>\n                <th>\n                  Method\n                \n                </th>\n                <th>\n                  Purpose\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"InitializeEnvironment\"><a href=\"#sec-source-text-module-record-initialize-environment\">InitializeEnvironment</a></emu-xref>()\n                \n                </td>\n                <td>\n                  Initialize the <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">Lexical Environment</a></emu-xref> of the module, including resolving all imported bindings.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"ExecuteModule\"><a href=\"#sec-source-text-module-record-execute-module\">ExecuteModule</a></emu-xref>()\n                \n                </td>\n                <td>\n                  Initialize the <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> of the module and evaluate the module's code within it.\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <emu-xref aoid=\"GetRequestedModules\"><a href=\"#sec-source-text-module-record-get-requested-modules\">GetRequestedModules</a></emu-xref>()\n                \n                </td>\n                <td>\n                  Returns a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Module Records constituting the modules imported from this module. The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is source code occurrence ordered.\n                \n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-moduledeclarationinstantiation\"><h1><span class=\"secnum\">15.2.1.16.1</span>#sec-moduledeclarationinstantiation Instantiate ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-moduleevaluation\"><h1><span class=\"secnum\">15.2.1.16.2</span>#sec-moduleevaluation Evaluate ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-example-cyclic-module-record-graphs\"><h1><span class=\"secnum\">15.2.1.16.3</span>#sec-example-cyclic-module-record-graphs Example Cyclic Module Record Graphs</h1>...</div></emu-clause>\n\n      "}, "sec-source-text-module-record-execute-module": {"num": "15.2.1.17.5", "title": "#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method", "html": "<emu-clause id=\"sec-source-text-module-record-execute-module\" aoid=\"ExecuteModule\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-record-execute-module\">#sec-source-text-module-record-execute-module</span> ExecuteModule ( ) Concrete Method</h1>\n\n          <p>The ExecuteModule concrete method of a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> implements the corresponding <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> abstract method.</p>\n\n          <p>This abstract method performs the following steps:</p>\n\n          <emu-alg><ol><li>Let <var>module</var> be this <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>.</li><li>Let <var>moduleCxt</var> be a new ECMAScript code <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>moduleCxt</var> to <emu-val>null</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Realm]] is not <emu-val>undefined</emu-val>.</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>moduleCxt</var> to <var>module</var>.[[Realm]].</li><li>Set the ScriptOrModule of <var>moduleCxt</var> to <var>module</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> has been linked and declarations in its <emu-xref href=\"#module-environment\"><a href=\"#module-environment\">module environment</a></emu-xref> have been instantiated.</li><li>Set the VariableEnvironment of <var>moduleCxt</var> to <var>module</var>.[[Environment]].</li><li>Set the LexicalEnvironment of <var>moduleCxt</var> to <var>module</var>.[[Environment]].</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Push <var>moduleCxt</var> on to the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>moduleCxt</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>result</var> be the result of evaluating <var>module</var>.[[ECMAScriptCode]].</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> <var>moduleCxt</var> and remove it from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Resume the context that is now on the top of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-innermoduleinstantiation": {"num": "15.2.1.16.1.1", "title": "#sec-innermoduleinstantiation InnerModuleInstantiation ( module, stack, index )", "html": "<emu-clause id=\"sec-innermoduleinstantiation\" aoid=\"InnerModuleInstantiation\">\n            <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-innermoduleinstantiation\">#sec-innermoduleinstantiation</span> InnerModuleInstantiation ( <var>module</var>, <var>stack</var>, <var>index</var> )</h1>\n\n            <p>The InnerModuleInstantiation abstract operation is used by Instantiate to perform the actual instantiation process for the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> <var>module</var>, as well as recursively on all other modules in the dependency graph. The <var>stack</var> and <var>index</var> parameters, as well as a module's [[DFSIndex]] and [[DFSAncestorIndex]] fields, keep track of the depth-first search (DFS) traversal. In particular, [[DFSAncestorIndex]] is used to discover strongly connected components (SCCs), such that all modules in an SCC transition to <code>\"instantiated\"</code> together.</p>\n\n            <p>This abstract operation performs the following steps:</p>\n\n            <emu-alg><ol><li>If <var>module</var> is not a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>, then<ol><li>Perform ? <var>module</var>.Instantiate().</li><li>Return <var>index</var>.</li></ol></li><li>If <var>module</var>.[[Status]] is <code>\"instantiating\"</code>, <code>\"instantiated\"</code>, or <code>\"evaluated\"</code>, then<ol><li>Return <var>index</var>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <code>\"uninstantiated\"</code>.</li><li>Set <var>module</var>.[[Status]] to <code>\"instantiating\"</code>.</li><li>Set <var>module</var>.[[DFSIndex]] to <var>index</var>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <var>index</var>.</li><li>Increase <var>index</var> by 1.</li><li>Append <var>module</var> to <var>stack</var>.</li><li>Let <var>requiredModules</var> be <var>module</var>.<emu-xref aoid=\"GetRequestedModules\"><a href=\"#sec-source-text-module-record-get-requested-modules\">GetRequestedModules</a></emu-xref>().</li><li>For each element <var>requiredModule</var> of <var>requiredModules</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>Set <var>index</var> to ?&#160;<emu-xref aoid=\"InnerModuleInstantiation\"><a href=\"#sec-innermoduleinstantiation\">InnerModuleInstantiation</a></emu-xref>(<var>requiredModule</var>, <var>stack</var>, <var>index</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is either <code>\"instantiating\"</code>, <code>\"instantiated\"</code>, or <code>\"evaluated\"</code>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is <code>\"instantiating\"</code> if and only if <var>requiredModule</var> is in <var>stack</var>.</li><li>If <var>requiredModule</var>.[[Status]] is <code>\"instantiating\"</code>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var> is a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>module</var>.[[DFSAncestorIndex]], <var>requiredModule</var>.[[DFSAncestorIndex]]).</li></ol></li></ol></li><li>Perform ? <var>module</var>.<emu-xref aoid=\"InitializeEnvironment\"><a href=\"#sec-source-text-module-record-initialize-environment\">InitializeEnvironment</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> occurs exactly once in <var>stack</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[DFSAncestorIndex]] is less than or equal to <var>module</var>.[[DFSIndex]].</li><li>If <var>module</var>.[[DFSAncestorIndex]] equals <var>module</var>.[[DFSIndex]], then<ol><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>requiredModule</var> be the last element in <var>stack</var>.</li><li>Remove the last element of <var>stack</var>.</li><li>Set <var>requiredModule</var>.[[Status]] to <code>\"instantiated\"</code>.</li><li>If <var>requiredModule</var> and <var>module</var> are the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, set <var>done</var> to <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return <var>index</var>.\n            </li></ol></emu-alg>\n          </emu-clause>\n        "}, "sec-innermoduleevaluation": {"num": "15.2.1.16.2.1", "title": "#sec-innermoduleevaluation InnerModuleEvaluation ( module, stack, index )", "html": "<emu-clause id=\"sec-innermoduleevaluation\" aoid=\"InnerModuleEvaluation\">\n            <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-innermoduleevaluation\">#sec-innermoduleevaluation</span> InnerModuleEvaluation ( <var>module</var>, <var>stack</var>, <var>index</var> )</h1>\n\n            <p>The InnerModuleEvaluation abstract operation is used by Evaluate to perform the actual evaluation process for the <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> <var>module</var>, as well as recursively on all other modules in the dependency graph. The <var>stack</var> and <var>index</var> parameters, as well as <var>module</var>'s [[DFSIndex]] and [[DFSAncestoreIndex]] fields, are used the same way as in <emu-xref aoid=\"InnerModuleInstantiation\"><a href=\"#sec-innermoduleinstantiation\">InnerModuleInstantiation</a></emu-xref>.</p>\n\n            <p>This abstract operation performs the following steps:</p>\n\n            <emu-alg><ol><li>If <var>module</var> is not a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>, then<ol><li>Perform ? <var>module</var>.Evaluate().</li><li>Return <var>index</var>.</li></ol></li><li>If <var>module</var>.[[Status]] is <code>\"evaluated\"</code>, then<ol><li>If <var>module</var>.[[EvaluationError]] is <emu-val>undefined</emu-val>, return <var>index</var>.</li><li>Otherwise return <var>module</var>.[[EvaluationError]].</li></ol></li><li>If <var>module</var>.[[Status]] is <code>\"evaluating\"</code>, return <var>index</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Status]] is <code>\"instantiated\"</code>.</li><li>Set <var>module</var>.[[Status]] to <code>\"evaluating\"</code>.</li><li>Set <var>module</var>.[[DFSIndex]] to <var>index</var>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <var>index</var>.</li><li>Increase <var>index</var> by 1.</li><li>Append <var>module</var> to <var>stack</var>.</li><li>Let <var>requiredModules</var> be <var>module</var>.<emu-xref aoid=\"GetRequestedModules\"><a href=\"#sec-source-text-module-record-get-requested-modules\">GetRequestedModules</a></emu-xref>().</li><li>For each element <var>requiredModule</var> of <var>requiredModules</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>Set <var>index</var> to ?&#160;<emu-xref aoid=\"InnerModuleEvaluation\"><a href=\"#sec-innermoduleevaluation\">InnerModuleEvaluation</a></emu-xref>(<var>requiredModule</var>, <var>stack</var>, <var>index</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is either <code>\"evaluating\"</code> or <code>\"evaluated\"</code>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var>.[[Status]] is <code>\"evaluating\"</code> if and only if <var>requiredModule</var> is in <var>stack</var>.</li><li>If <var>requiredModule</var>.[[Status]] is <code>\"evaluating\"</code>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>requiredModule</var> is a <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref>.</li><li>Set <var>module</var>.[[DFSAncestorIndex]] to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>module</var>.[[DFSAncestorIndex]], <var>requiredModule</var>.[[DFSAncestorIndex]]).</li></ol></li></ol></li><li>Perform ? <var>module</var>.<emu-xref aoid=\"ExecuteModule\"><a href=\"#sec-source-text-module-record-execute-module\">ExecuteModule</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> occurs exactly once in <var>stack</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[DFSAncestorIndex]] is less than or equal to <var>module</var>.[[DFSIndex]].</li><li>If <var>module</var>.[[DFSAncestorIndex]] equals <var>module</var>.[[DFSIndex]], then<ol><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>requiredModule</var> be the last element in <var>stack</var>.</li><li>Remove the last element of <var>stack</var>.</li><li>Set <var>requiredModule</var>.[[Status]] to <code>\"evaluated\"</code>.</li><li>If <var>requiredModule</var> and <var>module</var> are the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, set <var>done</var> to <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return <var>index</var>.\n            </li></ol></emu-alg>\n          </emu-clause>\n        "}}, "figData": {"table-3": "Table 3", "table-4": "Table 4", "table-36": "Table 37", "table-37": "Table 38", "table-cyclic-module-fields": "Table 39", "table-cyclic-module-methods": "Table 40", "table-38": "Table 41", "table-39": "Table 42", "table-40": "Table 43", "table-41": "Table 44", "table-42": "Table 45"}}}