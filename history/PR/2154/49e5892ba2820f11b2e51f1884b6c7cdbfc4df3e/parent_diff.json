{"from": {"secList": ["sec-source-text-module-record-initialize-environment", "sec-imports", "sec-class-definitions-static-semantics-boundnames", "sec-source-text-module-records", "sec-abstract-module-records", "sec-testing-and-comparison-operations", "sec-static-semantics-exportentriesformodule", "sec-imports-static-semantics-boundnames", "sec-module-semantics-static-semantics-early-errors", "sec-exports-runtime-semantics-evaluation", "sec-parsemodule", "sec-async-function-definitions-static-semantics-BoundNames", "sec-exports", "sec-static-semantics-importentriesformodule", "sec-module-namespace-exotic-objects-get-p-receiver", "sec-exports-static-semantics-exportentries", "sec-scripts-and-modules", "sec-exports-static-semantics-exportednames", "sec-modules", "sec-function-definitions-static-semantics-boundnames", "sec-async-generator-function-definitions-static-semantics-boundnames", "sec-exports-static-semantics-boundnames", "sec-resolveexport", "sec-generator-function-definitions-static-semantics-boundnames"], "secData": {"sec-source-text-module-record-initialize-environment": {"num": "15.2.1.17.4", "title": "#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method", "html": "<emu-clause id=\"sec-source-text-module-record-initialize-environment\" aoid=\"InitializeEnvironment\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-record-initialize-environment\">#sec-source-text-module-record-initialize-environment</span> InitializeEnvironment ( ) Concrete Method</h1>\n          <p>The InitializeEnvironment concrete method of a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> implements the corresponding <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> abstract method.</p>\n          <p>This abstract method performs the following steps:</p>\n\n          <emu-alg><ol><li>Let <var>module</var> be this <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[IndirectExportEntries]], do<ol><li>Let <var>resolution</var> be ? <var>module</var>.ResolveExport(<var>e</var>.[[ExportName]]).</li><li>If <var>resolution</var> is <emu-val>null</emu-val> or <emu-val>\"ambiguous\"</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>resolution</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: All named exports from <var>module</var> are resolvable.</li><li>Let <var>realm</var> be <var>module</var>.[[Realm]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var> is not <emu-val>undefined</emu-val>.</li><li>Let <var>env</var> be <emu-xref aoid=\"NewModuleEnvironment\"><a href=\"#sec-newmoduleenvironment\">NewModuleEnvironment</a></emu-xref>(<var>realm</var>.[[GlobalEnv]]).</li><li>Set <var>module</var>.[[Environment]] to <var>env</var>.</li><li>For each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> <var>in</var> in <var>module</var>.[[ImportEntries]], do<ol><li>Let <var>importedModule</var> be !&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>in</var>.[[ModuleRequest]]).</li><li>NOTE: The above call cannot fail because imported module requests are a subset of <var>module</var>.[[RequestedModules]], and these have been resolved earlier in this algorithm.</li><li>If <var>in</var>.[[ImportName]] is <emu-val>\"*\"</emu-val>, then<ol><li>Let <var>namespace</var> be ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>importedModule</var>).</li><li>Perform ! <var>env</var>.CreateImmutableBinding(<var>in</var>.[[LocalName]], <emu-val>true</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>in</var>.[[LocalName]], <var>namespace</var>).</li></ol></li><li>Else,<ol><li>Let <var>resolution</var> be ? <var>importedModule</var>.ResolveExport(<var>in</var>.[[ImportName]]).</li><li>If <var>resolution</var> is <emu-val>null</emu-val> or <emu-val>\"ambiguous\"</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>resolution</var>.[[BindingName]] is <emu-val>\"*namespace*\"</emu-val>, then<ol><li>Let <var>namespace</var> be ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>resolution</var>.[[Module]]).</li><li>Perform ! <var>env</var>.CreateImmutableBinding(<var>in</var>.[[LocalName]], <emu-val>true</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>in</var>.[[LocalName]], <var>namespace</var>).</li></ol></li><li>Else,<ol><li>Call <var>env</var>.CreateImportBinding(<var>in</var>.[[LocalName]], <var>resolution</var>.[[Module]], <var>resolution</var>.[[BindingName]]).</li></ol></li></ol></li></ol></li><li>Let <var>moduleContext</var> be a new ECMAScript code <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>moduleContext</var> to <emu-val>null</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Realm]] is not <emu-val>undefined</emu-val>.</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>moduleContext</var> to <var>module</var>.[[Realm]].</li><li>Set the ScriptOrModule of <var>moduleContext</var> to <var>module</var>.</li><li>Set the VariableEnvironment of <var>moduleContext</var> to <var>module</var>.[[Environment]].</li><li>Set the LexicalEnvironment of <var>moduleContext</var> to <var>module</var>.[[Environment]].</li><li>Set <var>module</var>.[[Context]] to <var>moduleContext</var>.</li><li>Push <var>moduleContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>moduleContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>code</var> be <var>module</var>.[[ECMAScriptCode]].</li><li>Let <var>varDeclarations</var> be the VarScopedDeclarations of <var>code</var>.</li><li>Let <var>declaredVarNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>d</var> in <var>varDeclarations</var>, do<ol><li>For each element <var>dn</var> of the BoundNames of <var>d</var>, do<ol><li>If <var>dn</var> is not an element of <var>declaredVarNames</var>, then<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>dn</var>, <emu-val>undefined</emu-val>).</li><li>Append <var>dn</var> to <var>declaredVarNames</var>.</li></ol></li></ol></li></ol></li><li>Let <var>lexDeclarations</var> be the LexicallyScopedDeclarations of <var>code</var>.</li><li>For each element <var>d</var> in <var>lexDeclarations</var>, do<ol><li>For each element <var>dn</var> of the BoundNames of <var>d</var>, do<ol><li>If IsConstantDeclaration of <var>d</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateImmutableBinding(<var>dn</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li></ol></li><li>If <var>d</var> is a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, or an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, then<ol><li>Let <var>fo</var> be InstantiateFunctionObject of <var>d</var> with argument <var>env</var>.</li><li>Call <var>env</var>.InitializeBinding(<var>dn</var>, <var>fo</var>).</li></ol></li></ol></li></ol></li><li>Remove <var>moduleContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-imports": {"num": "15.2.2", "title": "#sec-imports Imports", "html": "<emu-clause id=\"sec-imports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports\">#sec-imports</span> Imports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ImportDeclaration\" id=\"prod-ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportClause\" id=\"prod-ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a2f22cc\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f35b66f8\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cdf0063c\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedDefaultBinding\" id=\"prod-ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NameSpaceImport\" id=\"prod-NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedImports\" id=\"prod-NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"835252f8\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"6f18d3a2\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FromClause\" id=\"prod-FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ac457a7a\"><emu-t>from</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportsList\" id=\"prod-ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5292cb55\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportSpecifier\" id=\"prod-ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleSpecifier\" id=\"prod-ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedBinding\" id=\"prod-ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06cca55e\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-imports-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.2.1</span>#sec-imports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-imports-static-semantics-boundnames\"><h1><span class=\"secnum\">15.2.2.2</span>#sec-imports-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-imports-static-semantics-importentries\"><h1><span class=\"secnum\">15.2.2.3</span>#sec-imports-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-importentriesformodule\"><h1><span class=\"secnum\">15.2.2.4</span>#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule</h1>...</div><div id=\"excluded-sec-imports-static-semantics-modulerequests\"><h1><span class=\"secnum\">15.2.2.5</span>#sec-imports-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div></emu-clause>\n\n    "}, "sec-class-definitions-static-semantics-boundnames": {"num": "14.6.2", "title": "#sec-class-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-class-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions-static-semantics-boundnames\">#sec-class-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"4ee4ae5a\"><emu-t>class</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d461f28b\"><emu-t>class</emu-t><emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-source-text-module-records": {"num": "15.2.1.17", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, link, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in <emu-xref href=\"#table-38\"><a href=\"#table-38\" class=\"excluded-xref\" excluded-id=\"table-38\">#table-38</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-38\" caption=\"Additional Fields of Source Text Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-38\">#table-38</span>: Additional Fields of Source Text Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Context]]\n              </td>\n              <td>\n                An ECMAScript <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> associated with this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportMeta]]\n              </td>\n              <td>\n                Object\n              </td>\n              <td>\n                An object exposed through the <code>import.meta</code> meta property. It is <emu-const>empty</emu-const> until it is accessed by ECMAScript code.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to <code>export *</code> declarations that occur within the module, not including <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-39\"><a href=\"#table-39\" class=\"excluded-xref\" excluded-id=\"table-39\">#table-39</a></emu-xref>:</p>\n        <emu-table id=\"table-39\" caption=\"ImportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-39\">#table-39</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <emu-val>\"*\"</emu-val> indicates that the import request is for the target module's namespace object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-40\"><a href=\"#table-40\" class=\"excluded-xref\" excluded-id=\"table-40\">#table-40</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-40\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-40\">#table-40</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-41\"><a href=\"#table-41\" class=\"excluded-xref\" excluded-id=\"table-41\">#table-41</a></emu-xref>:</p>\n        <emu-table id=\"table-41\" caption=\"ExportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-41\">#table-41</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name used to export this binding by this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <emu-val>\"*\"</emu-val> indicates that the export request is for all exported bindings.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-42\"><a href=\"#table-42\" class=\"excluded-xref\" excluded-id=\"table-42\">#table-42</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-42\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-42\">#table-42</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                </th>\n                <th>\n                  [[ExportName]]\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f() {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"f\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function () {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*default*\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*default*\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"*\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">15.2.1.17.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">15.2.1.17.2</span>#sec-getexportednames GetExportedNames ( [ exportStarSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">15.2.1.17.3</span>#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">15.2.1.17.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">15.2.1.17.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-abstract-module-records": {"num": "15.2.1.15", "title": "#sec-abstract-module-records Abstract Module Records", "html": "<emu-clause id=\"sec-abstract-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-module-records\">#sec-abstract-module-records</span> Abstract Module Records</h1>\n        <p>A <dfn>Module Record</dfn> encapsulates structural information about the imports and exports of a single module. This information is used to link the imports and exports of sets of connected modules. A Module Record includes four fields that are only used when evaluating a module.</p>\n        <p>For specification purposes Module Record values are values of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> specification type and can be thought of as existing in a simple object-oriented hierarchy where Module Record is an abstract class with both abstract and concrete subclasses. This specification defines the abstract subclass named <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> and its concrete subclass named <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>. Other specifications and implementations may define additional Module Record subclasses corresponding to alternative module definition facilities that they defined.</p>\n        <p>Module Record defines the fields listed in <emu-xref href=\"#table-36\"><a href=\"#table-36\" class=\"excluded-xref\" excluded-id=\"table-36\">#table-36</a></emu-xref>. All Module Definition subclasses include at least those fields. Module Record also defines the abstract method list in <emu-xref href=\"#table-37\"><a href=\"#table-37\" class=\"excluded-xref\" excluded-id=\"table-37\">#table-37</a></emu-xref>. All Module definition subclasses must provide concrete implementations of these abstract methods.</p>\n        <emu-table id=\"table-36\" caption=\"Module Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-36\">#table-36</span>: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <thead>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                [[Realm]]\n              </td>\n              <td>\n                <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              </td>\n              <td>\n                The <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> within which this module was created. <emu-val>undefined</emu-val> if not yet assigned.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Environment]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> containing the top level bindings for this module. This field is set when the module is linked.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Namespace]]\n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              </td>\n              <td>\n                The Module Namespace Object (<emu-xref href=\"#sec-module-namespace-objects\"><a href=\"#sec-module-namespace-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</a></emu-xref>) if one has been created for this module. Otherwise <emu-val>undefined</emu-val>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[HostDefined]]\n              </td>\n              <td>\n                Any, default value is <emu-val>undefined</emu-val>.\n              </td>\n              <td>\n                Field reserved for use by <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> environments that need to associate additional information with a module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-table id=\"table-37\" caption=\"Abstract Methods of Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-37\">#table-37</span>: Abstract Methods of Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              </th>\n              <th>\n                Purpose\n              </th>\n            </tr>\n            <tr>\n              <td>\n                GetExportedNames([<var>exportStarSet</var>])\n              </td>\n              <td>\n                Return a list of all names that are either directly or indirectly exported from this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                ResolveExport(<var>exportName</var> [, <var>resolveSet</var>])\n              </td>\n              <td>\n                <p>Return the binding of a name exported by this module. Bindings are represented by a <dfn id=\"resolvedbinding-record\">ResolvedBinding Record</dfn>, of the form { [[Module]]: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, [[BindingName]]: String }. If the export is a Module Namespace Object without a direct binding in any module, [[BindingName]] will be set to <emu-val>\"*namespace*\"</emu-val>. Return <emu-val>null</emu-val> if the name cannot be resolved, or <emu-val>\"ambiguous\"</emu-val> if multiple bindings were found.</p>\n                <p>Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result if it completes normally.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Link()\n              </td>\n              <td>\n                <p>Prepare the module for evaluation by transitively resolving all module dependencies and creating a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Evaluate()\n              </td>\n              <td>\n                <p>If this module has already been evaluated successfully, return <emu-val>undefined</emu-val>; if it has already been evaluated unsuccessfully, throw the exception that was produced. Otherwise, transitively evaluate all module dependencies of this module and then evaluate this module.</p>\n                <p>Link must have completed successfully prior to invoking this method.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-testing-and-comparison-operations": {"num": "7.2", "title": "#sec-testing-and-comparison-operations Testing and Comparison Operations", "html": "<emu-clause id=\"sec-testing-and-comparison-operations\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-testing-and-comparison-operations\">#sec-testing-and-comparison-operations</span> Testing and Comparison Operations</h1>\n\n    <div id=\"excluded-sec-requireobjectcoercible\"><h1><span class=\"secnum\">7.2.1</span>#sec-requireobjectcoercible RequireObjectCoercible ( argument )</h1>...</div><div id=\"excluded-sec-isarray\"><h1><span class=\"secnum\">7.2.2</span>#sec-isarray IsArray ( argument )</h1>...</div><div id=\"excluded-sec-iscallable\"><h1><span class=\"secnum\">7.2.3</span>#sec-iscallable IsCallable ( argument )</h1>...</div><div id=\"excluded-sec-isconstructor\"><h1><span class=\"secnum\">7.2.4</span>#sec-isconstructor IsConstructor ( argument )</h1>...</div><div id=\"excluded-sec-isextensible-o\"><h1><span class=\"secnum\">7.2.5</span>#sec-isextensible-o IsExtensible ( O )</h1>...</div><div id=\"excluded-sec-isinteger\"><h1><span class=\"secnum\">7.2.6</span>#sec-isinteger IsInteger ( argument )</h1>...</div><div id=\"excluded-sec-isnonnegativeinteger\"><h1><span class=\"secnum\">7.2.7</span>#sec-isnonnegativeinteger IsNonNegativeInteger ( argument )</h1>...</div><div id=\"excluded-sec-ispropertykey\"><h1><span class=\"secnum\">7.2.8</span>#sec-ispropertykey IsPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-isregexp\"><h1><span class=\"secnum\">7.2.9</span>#sec-isregexp IsRegExp ( argument )</h1>...</div><div id=\"excluded-sec-isstringprefix\"><h1><span class=\"secnum\">7.2.10</span>#sec-isstringprefix IsStringPrefix ( p, q )</h1>...</div><div id=\"excluded-sec-samevalue\"><h1><span class=\"secnum\">7.2.11</span>#sec-samevalue SameValue ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluezero\"><h1><span class=\"secnum\">7.2.12</span>#sec-samevaluezero SameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluenonnumeric\"><h1><span class=\"secnum\">7.2.13</span>#sec-samevaluenonnumeric SameValueNonNumeric ( x, y )</h1>...</div><div id=\"excluded-sec-abstract-relational-comparison\"><h1><span class=\"secnum\">7.2.14</span>#sec-abstract-relational-comparison Abstract Relational Comparison</h1>...</div><div id=\"excluded-sec-abstract-equality-comparison\"><h1><span class=\"secnum\">7.2.15</span>#sec-abstract-equality-comparison Abstract Equality Comparison</h1>...</div><div id=\"excluded-sec-strict-equality-comparison\"><h1><span class=\"secnum\">7.2.16</span>#sec-strict-equality-comparison Strict Equality Comparison</h1>...</div></emu-clause>\n\n  "}, "sec-static-semantics-exportentriesformodule": {"num": "15.2.3.6", "title": "#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-exportentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportentriesformodule\">#sec-static-semantics-exportentriesformodule</span> Static Semantics: ExportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <emu-val>null</emu-val> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>sourceName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>exportName</var> be the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-imports-static-semantics-boundnames": {"num": "15.2.2.2", "title": "#sec-imports-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-imports-static-semantics-boundnames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports-static-semantics-boundnames\">#sec-imports-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n        <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the BoundNames of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the BoundNames of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the BoundNames of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-semantics-static-semantics-early-errors": {"num": "15.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the ExportedNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the ExportedBindings of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate ExportedNames rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-exports-runtime-semantics-evaluation": {"num": "15.2.3.11", "title": "#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-exports-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-runtime-semantics-evaluation\">#sec-exports-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>value</var> be ? BindingClassDeclarationEvaluation of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>className</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>If <var>className</var> is <emu-val>\"*default*\"</emu-val>, then<ol><li>Let <var>env</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeBoundName\"><a href=\"#sec-initializeboundname\">InitializeBoundName</a></emu-xref>(<emu-val>\"*default*\"</emu-val>, <var>value</var>, <var>env</var>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>) is <emu-val>true</emu-val>, then<ol><li>Let <var>value</var> be NamedEvaluation of <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> with argument <emu-val>\"default\"</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>rhs</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rhs</var>).</li></ol></li><li>Let <var>env</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeBoundName\"><a href=\"#sec-initializeboundname\">InitializeBoundName</a></emu-xref>(<emu-val>\"*default*\"</emu-val>, <var>value</var>, <var>env</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-parsemodule": {"num": "15.2.1.17.1", "title": "#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )", "html": "<emu-clause id=\"sec-parsemodule\" aoid=\"ParseModule\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-parsemodule\">#sec-parsemodule</span> ParseModule ( <var>sourceText</var>, <var>realm</var>, <var>hostDefined</var> )</h1>\n          <p>The abstract operation ParseModule takes arguments <var>sourceText</var> (ECMAScript source text), <var>realm</var>, and <var>hostDefined</var>. It creates a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> based upon the result of parsing <var>sourceText</var> as a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>sourceText</var> is an ECMAScript source text (see clause <emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>).</li><li>Parse <var>sourceText</var> using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> and analyse the parse result for any Early Error conditions. If the parse was successful and no early errors were found, let <var>body</var> be the resulting parse tree. Otherwise, let <var>body</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of one or more <emu-val>SyntaxError</emu-val> objects representing the parsing errors and/or early errors. Parsing and <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> detection may be interweaved in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> manner. If more than one parsing error or <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> is present, the number and ordering of error objects in the list is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>, but at least one must be present.</li><li>If <var>body</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, return <var>body</var>.</li><li>Let <var>requestedModules</var> be the ModuleRequests of <var>body</var>.</li><li>Let <var>importEntries</var> be ImportEntries of <var>body</var>.</li><li>Let <var>importedBoundNames</var> be <emu-xref aoid=\"ImportedLocalNames\"><a href=\"#sec-importedlocalnames\">ImportedLocalNames</a></emu-xref>(<var>importEntries</var>).</li><li>Let <var>indirectExportEntries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>localExportEntries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>starExportEntries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>exportEntries</var> be ExportEntries of <var>body</var>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>ee</var> in <var>exportEntries</var>, do<ol><li>If <var>ee</var>.[[ModuleRequest]] is <emu-val>null</emu-val>, then<ol><li>If <var>ee</var>.[[LocalName]] is not an element of <var>importedBoundNames</var>, then<ol><li>Append <var>ee</var> to <var>localExportEntries</var>.</li></ol></li><li>Else,<ol><li>Let <var>ie</var> be the element of <var>importEntries</var> whose [[LocalName]] is the same as <var>ee</var>.[[LocalName]].</li><li>If <var>ie</var>.[[ImportName]] is <emu-val>\"*\"</emu-val>, then<ol><li>NOTE: This is a re-export of an imported module namespace object.</li><li>Append <var>ee</var> to <var>localExportEntries</var>.</li></ol></li><li>Else,<ol><li>NOTE: This is a re-export of a single name.</li><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>ie</var>.[[ModuleRequest]], [[ImportName]]: <var>ie</var>.[[ImportName]], [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>ee</var>.[[ExportName]] } to <var>indirectExportEntries</var>.</li></ol></li></ol></li></ol></li><li>Else if <var>ee</var>.[[ImportName]] is <emu-val>\"*\"</emu-val> and <var>ee</var>.[[ExportName]] is <emu-val>null</emu-val>, then<ol><li>Append <var>ee</var> to <var>starExportEntries</var>.</li></ol></li><li>Else,<ol><li>Append <var>ee</var> to <var>indirectExportEntries</var>.</li></ol></li></ol></li><li>Return <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> { [[Realm]]: <var>realm</var>, [[Environment]]: <emu-val>undefined</emu-val>, [[Namespace]]: <emu-val>undefined</emu-val>, [[Status]]: <emu-const>unlinked</emu-const>, [[EvaluationError]]: <emu-val>undefined</emu-val>, [[HostDefined]]: <var>hostDefined</var>, [[ECMAScriptCode]]: <var>body</var>, [[Context]]: <emu-const>empty</emu-const>, [[ImportMeta]]: <emu-const>empty</emu-const>, [[RequestedModules]]: <var>requestedModules</var>, [[ImportEntries]]: <var>importEntries</var>, [[LocalExportEntries]]: <var>localExportEntries</var>, [[IndirectExportEntries]]: <var>indirectExportEntries</var>, [[StarExportEntries]]: <var>starExportEntries</var>, [[DFSIndex]]: <emu-val>undefined</emu-val>, [[DFSAncestorIndex]]: <emu-val>undefined</emu-val> }.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>An implementation may parse module source text and analyse it for Early Error conditions prior to the evaluation of ParseModule for that module source text. However, the reporting of any errors must be deferred until the point where this specification actually performs ParseModule upon that source text.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-async-function-definitions-static-semantics-BoundNames": {"num": "14.7.2", "title": "#sec-async-function-definitions-static-semantics-BoundNames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-async-function-definitions-static-semantics-BoundNames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions-static-semantics-BoundNames\">#sec-async-function-definitions-static-semantics-BoundNames</span> Static Semantics: BoundNames</h1>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e2632ddf\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6a076671\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\"><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</div></emu-note>\n    </emu-clause>\n\n    "}, "sec-exports": {"num": "15.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"696b8d6e\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6bc99b97\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d298e1ba\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ae276654\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e2a585b6\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann><emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"29b1414e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"c16c88fe\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-exports-static-semantics-boundnames\"><h1><span class=\"secnum\">15.2.3.2</span>#sec-exports-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportedbindings\"><h1><span class=\"secnum\">15.2.3.3</span>#sec-exports-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportednames\"><h1><span class=\"secnum\">15.2.3.4</span>#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportentries\"><h1><span class=\"secnum\">15.2.3.5</span>#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">15.2.3.6</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-exports-static-semantics-isconstantdeclaration\"><h1><span class=\"secnum\">15.2.3.7</span>#sec-exports-static-semantics-isconstantdeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-exports-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">15.2.3.8</span>#sec-exports-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-exports-static-semantics-modulerequests\"><h1><span class=\"secnum\">15.2.3.9</span>#sec-exports-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">15.2.3.10</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.2.3.11</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-importentriesformodule": {"num": "15.2.2.4", "title": "#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-importentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-importentriesformodule\">#sec-static-semantics-importentriesformodule</span> Static Semantics: ImportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportedDefaultBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>defaultEntry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"default\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>defaultEntry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NameSpaceImport\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>localName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-get-p-receiver": {"num": "9.4.6.7", "title": "#sec-module-namespace-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-get-p-receiver\">#sec-module-namespace-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>When the [[Get]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is not an element of <var>exports</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>m</var> be <var>O</var>.[[Module]].</li><li>Let <var>binding</var> be ! <var>m</var>.ResolveExport(<var>P</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>binding</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li><li>Let <var>targetModule</var> be <var>binding</var>.[[Module]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetModule</var> is not <emu-val>undefined</emu-val>.</li><li>If <var>binding</var>.[[BindingName]] is <emu-val>\"*namespace*\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>targetModule</var>).</li></ol></li><li>Let <var>targetEnv</var> be <var>targetModule</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-val>undefined</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>binding</var>.[[BindingName]], <emu-val>true</emu-val>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ResolveExport is side-effect free. Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result. An implementation might choose to pre-compute or cache the ResolveExport results for the [[Exports]] of each <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportentries": {"num": "15.2.3.5", "title": "#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries", "html": "<emu-clause id=\"sec-exports-static-semantics-exportentries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportentries\">#sec-exports-static-semantics-exportentries</span> Static Semantics: ExportEntries</h1>\n        <emu-see-also-para op=\"ExportEntries\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>module</var> be the sole element of ModuleRequests of <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>.</li><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> with argument <var>module</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> with argument <emu-val>null</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li><li>For each <var>name</var> in <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li><li>For each <var>name</var> in <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <emu-val>\"*default*\"</emu-val>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for anonymous default export values.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08c8df8e\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"98de0f78\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"52f49b96\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"029ec31e\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"75ddb725\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b8d22333\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a2f22cc\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f35b66f8\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cdf0063c\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"835252f8\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"6f18d3a2\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ac457a7a\"><emu-t>from</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5292cb55\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06cca55e\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"696b8d6e\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6bc99b97\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d298e1ba\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ae276654\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e2a585b6\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann><emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"29b1414e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"c16c88fe\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-exports-static-semantics-exportednames": {"num": "15.2.3.4", "title": "#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-exports-static-semantics-exportednames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportednames\">#sec-exports-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-see-also-para op=\"ExportedNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedNames of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedNames of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-modules": {"num": "15.2", "title": "#sec-modules Modules", "html": "<emu-clause id=\"sec-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-modules\">#sec-modules</span> Modules</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"Module\" id=\"prod-Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"52f49b96\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleBody\" id=\"prod-ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItemList\" id=\"prod-ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"029ec31e\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"75ddb725\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItem\" id=\"prod-ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b8d22333\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-module-semantics\"><h1><span class=\"secnum\">15.2.1</span>#sec-module-semantics Module Semantics</h1>...</div><div id=\"excluded-sec-imports\"><h1><span class=\"secnum\">15.2.2</span>#sec-imports Imports</h1>...</div><div id=\"excluded-sec-exports\"><h1><span class=\"secnum\">15.2.3</span>#sec-exports Exports</h1>...</div></emu-clause>\n"}, "sec-function-definitions-static-semantics-boundnames": {"num": "14.1.3", "title": "#sec-function-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-boundnames\">#sec-function-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b9079b6b\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Append to <var>names</var> the BoundNames of <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"209ae310\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Append to <var>names</var> the BoundNames of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-async-generator-function-definitions-static-semantics-boundnames": {"num": "14.5.2", "title": "#sec-async-generator-function-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-async-generator-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-generator-function-definitions-static-semantics-boundnames\">#sec-async-generator-function-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"13d2cc33\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-t>*</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c51514e0\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-t>*</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-exports-static-semantics-boundnames": {"num": "15.2.3.2", "title": "#sec-exports-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-exports-static-semantics-boundnames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-boundnames\">#sec-exports-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n        <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarationNames</var> be the BoundNames of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-val>\"*default*\"</emu-val>, append <emu-val>\"*default*\"</emu-val> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarationNames</var> be the BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-val>\"*default*\"</emu-val>, append <emu-val>\"*default*\"</emu-val> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-resolveexport": {"num": "15.2.1.17.3", "title": "#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method", "html": "<emu-clause id=\"sec-resolveexport\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-resolveexport\">#sec-resolveexport</span> ResolveExport ( <var>exportName</var> [ , <var>resolveSet</var> ] ) Concrete Method</h1>\n          <p>The ResolveExport concrete method of a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> implements the corresponding <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> abstract method.</p>\n          <p>ResolveExport attempts to resolve an imported binding to the actual defining module and local binding name. The defining module may be the module represented by the <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> this method was invoked on or some other module that is imported by that module. The parameter <var>resolveSet</var> is used to detect unresolved circular import/export paths. If a pair consisting of specific <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> and <var>exportName</var> is reached that is already in <var>resolveSet</var>, an import circularity has been encountered. Before recursively calling ResolveExport, a pair consisting of <var>module</var> and <var>exportName</var> is added to <var>resolveSet</var>.</p>\n          <p>If a defining module is found, a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> { [[Module]], [[BindingName]] } is returned. This record identifies the resolved binding of the originally requested export, unless this is the export of a namespace with no local binding. In this case, [[BindingName]] will be set to <emu-val>\"*namespace*\"</emu-val>. If no definition was found or the request is found to be circular, <emu-val>null</emu-val> is returned. If the request is found to be ambiguous, the string <emu-val>\"ambiguous\"</emu-val> is returned.</p>\n          <p>This abstract method performs the following steps:</p>\n\n          <emu-alg><ol><li>If <var>resolveSet</var> is not present, set <var>resolveSet</var> to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>resolveSet</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Module]], [[ExportName]] }.</li><li>Let <var>module</var> be this <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>.</li><li>For each <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Module]], [[ExportName]] } <var>r</var> in <var>resolveSet</var>, do<ol><li>If <var>module</var> and <var>r</var>.[[Module]] are the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> and <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <var>r</var>.[[ExportName]]) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is a circular import request.</li><li>Return <emu-val>null</emu-val>.</li></ol></li></ol></li><li>Append the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Module]]: <var>module</var>, [[ExportName]]: <var>exportName</var> } to <var>resolveSet</var>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[LocalExportEntries]], do<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <var>e</var>.[[ExportName]]) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> provides the direct binding for this export.</li><li>Return <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> { [[Module]]: <var>module</var>, [[BindingName]]: <var>e</var>.[[LocalName]] }.</li></ol></li></ol></li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[IndirectExportEntries]], do<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <var>e</var>.[[ExportName]]) is <emu-val>true</emu-val>, then<ol><li>Let <var>importedModule</var> be ?&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>e</var>.[[ModuleRequest]]).</li><li>If <var>e</var>.[[ImportName]] is <emu-val>\"*\"</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> does not provide the direct binding for this export.</li><li>Return <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> { [[Module]]: <var>importedModule</var>, [[BindingName]]: <emu-val>\"*namespace*\"</emu-val> }.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> imports a specific binding for this export.</li><li>Return <var>importedModule</var>.ResolveExport(<var>e</var>.[[ImportName]], <var>resolveSet</var>).</li></ol></li></ol></li></ol></li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <emu-val>\"default\"</emu-val>) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: A <code>default</code> export was not explicitly defined by this module.</li><li>Return <emu-val>null</emu-val>.</li><li>NOTE: A <code>default</code> export cannot be provided by an <code>export *</code> or <code>export * from \"mod\"</code> declaration.</li></ol></li><li>Let <var>starResolution</var> be <emu-val>null</emu-val>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[StarExportEntries]], do<ol><li>Let <var>importedModule</var> be ?&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>e</var>.[[ModuleRequest]]).</li><li>Let <var>resolution</var> be ? <var>importedModule</var>.ResolveExport(<var>exportName</var>, <var>resolveSet</var>).</li><li>If <var>resolution</var> is <emu-val>\"ambiguous\"</emu-val>, return <emu-val>\"ambiguous\"</emu-val>.</li><li>If <var>resolution</var> is not <emu-val>null</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>resolution</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li><li>If <var>starResolution</var> is <emu-val>null</emu-val>, set <var>starResolution</var> to <var>resolution</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There is more than one <code>*</code> import that includes the requested name.</li><li>If <var>resolution</var>.[[Module]] and <var>starResolution</var>.[[Module]] are not the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> or <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>resolution</var>.[[BindingName]], <var>starResolution</var>.[[BindingName]]) is <emu-val>false</emu-val>, return <emu-val>\"ambiguous\"</emu-val>.</li></ol></li></ol></li></ol></li><li>Return <var>starResolution</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-generator-function-definitions-static-semantics-boundnames": {"num": "14.4.2", "title": "#sec-generator-function-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-generator-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-function-definitions-static-semantics-boundnames\">#sec-generator-function-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7dbc99b6\"><emu-t>function</emu-t><emu-t>*</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0d271960\"><emu-t>function</emu-t><emu-t>*</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {"table-3": "Table 4", "table-36": "Table 39", "table-37": "Table 40", "table-cyclic-module-fields": "Table 41", "table-38": "Table 43", "table-39": "Table 44", "table-40": "Table 45", "table-41": "Table 46", "table-42": "Table 47"}}, "to": {"secList": ["sec-source-text-module-record-initialize-environment", "sec-imports", "sec-class-definitions-static-semantics-boundnames", "sec-source-text-module-records", "sec-abstract-module-records", "sec-testing-and-comparison-operations", "sec-static-semantics-exportentriesformodule", "sec-imports-static-semantics-boundnames", "sec-module-semantics-static-semantics-early-errors", "sec-exports-runtime-semantics-evaluation", "sec-parsemodule", "sec-async-function-definitions-static-semantics-BoundNames", "sec-exports", "sec-static-semantics-importentriesformodule", "sec-module-namespace-exotic-objects-get-p-receiver", "sec-exports-static-semantics-exportentries", "sec-scripts-and-modules", "sec-exports-static-semantics-exportednames", "sec-modules", "sec-function-definitions-static-semantics-boundnames", "sec-async-generator-function-definitions-static-semantics-boundnames", "sec-exports-static-semantics-boundnames", "sec-resolveexport", "sec-generator-function-definitions-static-semantics-boundnames"], "secData": {"sec-source-text-module-record-initialize-environment": {"num": "15.2.1.17.4", "title": "#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method", "html": "<emu-clause id=\"sec-source-text-module-record-initialize-environment\" aoid=\"InitializeEnvironment\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-record-initialize-environment\">#sec-source-text-module-record-initialize-environment</span> InitializeEnvironment ( ) Concrete Method</h1>\n          <p>The InitializeEnvironment concrete method of a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> implements the corresponding <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> abstract method.</p>\n          <p>This abstract method performs the following steps:</p>\n\n          <emu-alg><ol><li>Let <var>module</var> be this <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[IndirectExportEntries]], do<ol><li>Let <var>resolution</var> be ? <var>module</var>.ResolveExport(<var>e</var>.[[ExportName]]).</li><li>If <var>resolution</var> is <emu-val>null</emu-val> or <emu-val>\"ambiguous\"</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>resolution</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: All named exports from <var>module</var> are resolvable.</li><li>Let <var>realm</var> be <var>module</var>.[[Realm]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var> is not <emu-val>undefined</emu-val>.</li><li>Let <var>env</var> be <emu-xref aoid=\"NewModuleEnvironment\"><a href=\"#sec-newmoduleenvironment\">NewModuleEnvironment</a></emu-xref>(<var>realm</var>.[[GlobalEnv]]).</li><li>Set <var>module</var>.[[Environment]] to <var>env</var>.</li><li>For each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> <var>in</var> in <var>module</var>.[[ImportEntries]], do<ol><li>Let <var>importedModule</var> be !&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>in</var>.[[ModuleRequest]]).</li><li>NOTE: The above call cannot fail because imported module requests are a subset of <var>module</var>.[[RequestedModules]], and these have been resolved earlier in this algorithm.</li><li>If <var>in</var>.[[ImportName]] is <emu-val>~star~</emu-val>, then<ol><li>Let <var>namespace</var> be ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>importedModule</var>).</li><li>Perform ! <var>env</var>.CreateImmutableBinding(<var>in</var>.[[LocalName]], <emu-val>true</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>in</var>.[[LocalName]], <var>namespace</var>).</li></ol></li><li>Else,<ol><li>Let <var>resolution</var> be ? <var>importedModule</var>.ResolveExport(<var>in</var>.[[ImportName]]).</li><li>If <var>resolution</var> is <emu-val>null</emu-val> or <emu-val>\"ambiguous\"</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>resolution</var>.[[BindingName]] is <emu-const>namespace</emu-const>, then<ol><li>Let <var>namespace</var> be ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>resolution</var>.[[Module]]).</li><li>Perform ! <var>env</var>.CreateImmutableBinding(<var>in</var>.[[LocalName]], <emu-val>true</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>in</var>.[[LocalName]], <var>namespace</var>).</li></ol></li><li>Else,<ol><li>Call <var>env</var>.CreateImportBinding(<var>in</var>.[[LocalName]], <var>resolution</var>.[[Module]], <var>resolution</var>.[[BindingName]]).</li></ol></li></ol></li></ol></li><li>Let <var>moduleContext</var> be a new ECMAScript code <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>moduleContext</var> to <emu-val>null</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var>.[[Realm]] is not <emu-val>undefined</emu-val>.</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>moduleContext</var> to <var>module</var>.[[Realm]].</li><li>Set the ScriptOrModule of <var>moduleContext</var> to <var>module</var>.</li><li>Set the VariableEnvironment of <var>moduleContext</var> to <var>module</var>.[[Environment]].</li><li>Set the LexicalEnvironment of <var>moduleContext</var> to <var>module</var>.[[Environment]].</li><li>Set <var>module</var>.[[Context]] to <var>moduleContext</var>.</li><li>Push <var>moduleContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>moduleContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>code</var> be <var>module</var>.[[ECMAScriptCode]].</li><li>Let <var>varDeclarations</var> be the VarScopedDeclarations of <var>code</var>.</li><li>Let <var>declaredVarNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>d</var> in <var>varDeclarations</var>, do<ol><li>For each element <var>dn</var> of the BoundNames of <var>d</var>, do<ol><li>If <var>dn</var> is not an element of <var>declaredVarNames</var>, then<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>dn</var>, <emu-val>undefined</emu-val>).</li><li>Append <var>dn</var> to <var>declaredVarNames</var>.</li></ol></li></ol></li></ol></li><li>Let <var>lexDeclarations</var> be the LexicallyScopedDeclarations of <var>code</var>.</li><li>For each element <var>d</var> in <var>lexDeclarations</var>, do<ol><li>For each element <var>dn</var> of the BoundNames of <var>d</var>, do<ol><li>If IsConstantDeclaration of <var>d</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateImmutableBinding(<var>dn</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li></ol></li><li>If <var>d</var> is a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, or an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, then<ol><li>Let <var>fo</var> be InstantiateFunctionObject of <var>d</var> with argument <var>env</var>.</li><li>Call <var>env</var>.InitializeBinding(<var>dn</var>, <var>fo</var>).</li></ol></li></ol></li></ol></li><li>Remove <var>moduleContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-imports": {"num": "15.2.2", "title": "#sec-imports Imports", "html": "<emu-clause id=\"sec-imports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports\">#sec-imports</span> Imports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ImportDeclaration\" id=\"prod-ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportClause\" id=\"prod-ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a2f22cc\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f35b66f8\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cdf0063c\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedDefaultBinding\" id=\"prod-ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NameSpaceImport\" id=\"prod-NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedImports\" id=\"prod-NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"835252f8\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"6f18d3a2\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FromClause\" id=\"prod-FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ac457a7a\"><emu-t>from</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportsList\" id=\"prod-ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5292cb55\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportSpecifier\" id=\"prod-ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9d23bed3\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleSpecifier\" id=\"prod-ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedBinding\" id=\"prod-ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06cca55e\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-imports-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.2.1</span>#sec-imports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-imports-static-semantics-boundnames\"><h1><span class=\"secnum\">15.2.2.2</span>#sec-imports-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-imports-static-semantics-importentries\"><h1><span class=\"secnum\">15.2.2.3</span>#sec-imports-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-importentriesformodule\"><h1><span class=\"secnum\">15.2.2.4</span>#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule</h1>...</div><div id=\"excluded-sec-imports-static-semantics-modulerequests\"><h1><span class=\"secnum\">15.2.2.5</span>#sec-imports-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div></emu-clause>\n\n    "}, "sec-class-definitions-static-semantics-boundnames": {"num": "14.6.2", "title": "#sec-class-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-class-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions-static-semantics-boundnames\">#sec-class-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"4ee4ae5a\"><emu-t>class</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d461f28b\"><emu-t>class</emu-t><emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-const>default</emu-const> &#187;.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-source-text-module-records": {"num": "15.2.1.17", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, link, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in <emu-xref href=\"#table-38\"><a href=\"#table-38\" class=\"excluded-xref\" excluded-id=\"table-38\">#table-38</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-38\" caption=\"Additional Fields of Source Text Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-38\">#table-38</span>: Additional Fields of Source Text Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Context]]\n              </td>\n              <td>\n                An ECMAScript <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> associated with this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportMeta]]\n              </td>\n              <td>\n                Object\n              </td>\n              <td>\n                An object exposed through the <code>import.meta</code> meta property. It is <emu-const>empty</emu-const> until it is accessed by ECMAScript code.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to <code>export *</code> declarations that occur within the module, not including <code>export * as namespace</code> declarations.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-39\"><a href=\"#table-39\" class=\"excluded-xref\" excluded-id=\"table-39\">#table-39</a></emu-xref>:</p>\n        <emu-table id=\"table-39\" caption=\"ImportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-39\">#table-39</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <emu-val>~star~</emu-val> indicates that the import request is for the target module's namespace object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String\n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-40\"><a href=\"#table-40\" class=\"excluded-xref\" excluded-id=\"table-40\">#table-40</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-40\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-40\">#table-40</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>~star~</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in <emu-xref href=\"#table-41\"><a href=\"#table-41\" class=\"excluded-xref\" excluded-id=\"table-41\">#table-41</a></emu-xref>:</p>\n        <emu-table id=\"table-41\" caption=\"ExportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-41\">#table-41</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name used to export this binding by this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <emu-val>~star~</emu-val> indicates that the export request is for all exported bindings.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              </td>\n              <td>\n                String | null\n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-42\"><a href=\"#table-42\" class=\"excluded-xref\" excluded-id=\"table-42\">#table-42</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-42\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-42\">#table-42</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                </th>\n                <th>\n                  [[ExportName]]\n                </th>\n                <th>\n                  [[ModuleRequest]]\n                </th>\n                <th>\n                  [[ImportName]]\n                </th>\n                <th>\n                  [[LocalName]]\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f() {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"f\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function () {}</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-const>default</emu-const>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                </td>\n                <td>\n                  <emu-val>\"default\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-const>default</emu-const>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"x\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"v\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>~star~</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * as ns from \"mod\";</code>\n                </td>\n                <td>\n                  <emu-val>\"ns\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>\"mod\"</emu-val>\n                </td>\n                <td>\n                  <emu-val>~star~</emu-val>\n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">15.2.1.17.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">15.2.1.17.2</span>#sec-getexportednames GetExportedNames ( [ exportStarSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">15.2.1.17.3</span>#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">15.2.1.17.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">15.2.1.17.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-abstract-module-records": {"num": "15.2.1.15", "title": "#sec-abstract-module-records Abstract Module Records", "html": "<emu-clause id=\"sec-abstract-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-module-records\">#sec-abstract-module-records</span> Abstract Module Records</h1>\n        <p>A <dfn>Module Record</dfn> encapsulates structural information about the imports and exports of a single module. This information is used to link the imports and exports of sets of connected modules. A Module Record includes four fields that are only used when evaluating a module.</p>\n        <p>For specification purposes Module Record values are values of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> specification type and can be thought of as existing in a simple object-oriented hierarchy where Module Record is an abstract class with both abstract and concrete subclasses. This specification defines the abstract subclass named <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> and its concrete subclass named <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>. Other specifications and implementations may define additional Module Record subclasses corresponding to alternative module definition facilities that they defined.</p>\n        <p>Module Record defines the fields listed in <emu-xref href=\"#table-36\"><a href=\"#table-36\" class=\"excluded-xref\" excluded-id=\"table-36\">#table-36</a></emu-xref>. All Module Definition subclasses include at least those fields. Module Record also defines the abstract method list in <emu-xref href=\"#table-37\"><a href=\"#table-37\" class=\"excluded-xref\" excluded-id=\"table-37\">#table-37</a></emu-xref>. All Module definition subclasses must provide concrete implementations of these abstract methods.</p>\n        <emu-table id=\"table-36\" caption=\"Module Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-36\">#table-36</span>: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <thead>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value Type\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                [[Realm]]\n              </td>\n              <td>\n                <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              </td>\n              <td>\n                The <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> within which this module was created. <emu-val>undefined</emu-val> if not yet assigned.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Environment]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> | <emu-val>undefined</emu-val>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> containing the top level bindings for this module. This field is set when the module is linked.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Namespace]]\n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              </td>\n              <td>\n                The Module Namespace Object (<emu-xref href=\"#sec-module-namespace-objects\"><a href=\"#sec-module-namespace-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</a></emu-xref>) if one has been created for this module. Otherwise <emu-val>undefined</emu-val>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[HostDefined]]\n              </td>\n              <td>\n                Any, default value is <emu-val>undefined</emu-val>.\n              </td>\n              <td>\n                Field reserved for use by <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> environments that need to associate additional information with a module.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-table id=\"table-37\" caption=\"Abstract Methods of Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-37\">#table-37</span>: Abstract Methods of Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              </th>\n              <th>\n                Purpose\n              </th>\n            </tr>\n            <tr>\n              <td>\n                GetExportedNames([<var>exportStarSet</var>])\n              </td>\n              <td>\n                Return a list of all names that are either directly or indirectly exported from this module.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                ResolveExport(<var>exportName</var> [, <var>resolveSet</var>])\n              </td>\n              <td>\n                <p>Return the binding of a name exported by this module. Bindings are represented by a <dfn id=\"resolvedbinding-record\">ResolvedBinding Record</dfn>, of the form { [[Module]]: <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, [[BindingName]]: String }. If the export is a Module Namespace Object without a direct binding in any module, [[BindingName]] will be set to <emu-const>namespace</emu-const>. Return <emu-val>null</emu-val> if the name cannot be resolved, or <emu-val>\"ambiguous\"</emu-val> if multiple bindings were found.</p>\n                <p>Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result if it completes normally.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Link()\n              </td>\n              <td>\n                <p>Prepare the module for evaluation by transitively resolving all module dependencies and creating a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.</p>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Evaluate()\n              </td>\n              <td>\n                <p>If this module has already been evaluated successfully, return <emu-val>undefined</emu-val>; if it has already been evaluated unsuccessfully, throw the exception that was produced. Otherwise, transitively evaluate all module dependencies of this module and then evaluate this module.</p>\n                <p>Link must have completed successfully prior to invoking this method.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-testing-and-comparison-operations": {"num": "7.2", "title": "#sec-testing-and-comparison-operations Testing and Comparison Operations", "html": "<emu-clause id=\"sec-testing-and-comparison-operations\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-testing-and-comparison-operations\">#sec-testing-and-comparison-operations</span> Testing and Comparison Operations</h1>\n\n    <div id=\"excluded-sec-requireobjectcoercible\"><h1><span class=\"secnum\">7.2.1</span>#sec-requireobjectcoercible RequireObjectCoercible ( argument )</h1>...</div><div id=\"excluded-sec-isarray\"><h1><span class=\"secnum\">7.2.2</span>#sec-isarray IsArray ( argument )</h1>...</div><div id=\"excluded-sec-iscallable\"><h1><span class=\"secnum\">7.2.3</span>#sec-iscallable IsCallable ( argument )</h1>...</div><div id=\"excluded-sec-isconstructor\"><h1><span class=\"secnum\">7.2.4</span>#sec-isconstructor IsConstructor ( argument )</h1>...</div><div id=\"excluded-sec-isextensible-o\"><h1><span class=\"secnum\">7.2.5</span>#sec-isextensible-o IsExtensible ( O )</h1>...</div><div id=\"excluded-sec-isinteger\"><h1><span class=\"secnum\">7.2.6</span>#sec-isinteger IsInteger ( argument )</h1>...</div><div id=\"excluded-sec-isnonnegativeinteger\"><h1><span class=\"secnum\">7.2.7</span>#sec-isnonnegativeinteger IsNonNegativeInteger ( argument )</h1>...</div><div id=\"excluded-sec-ispropertykey\"><h1><span class=\"secnum\">7.2.8</span>#sec-ispropertykey IsPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-isregexp\"><h1><span class=\"secnum\">7.2.9</span>#sec-isregexp IsRegExp ( argument )</h1>...</div><div id=\"excluded-sec-isstringprefix\"><h1><span class=\"secnum\">7.2.10</span>#sec-isstringprefix IsStringPrefix ( p, q )</h1>...</div><div id=\"excluded-sec-isstringvalidunicode\"><h1><span class=\"secnum\">7.2.11</span>#sec-isstringvalidunicode Static Semantics: IsStringValidUnicode ( string )</h1>...</div><div id=\"excluded-sec-samevalue\"><h1><span class=\"secnum\">7.2.12</span>#sec-samevalue SameValue ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluezero\"><h1><span class=\"secnum\">7.2.13</span>#sec-samevaluezero SameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluenonnumeric\"><h1><span class=\"secnum\">7.2.14</span>#sec-samevaluenonnumeric SameValueNonNumeric ( x, y )</h1>...</div><div id=\"excluded-sec-abstract-relational-comparison\"><h1><span class=\"secnum\">7.2.15</span>#sec-abstract-relational-comparison Abstract Relational Comparison</h1>...</div><div id=\"excluded-sec-abstract-equality-comparison\"><h1><span class=\"secnum\">7.2.16</span>#sec-abstract-equality-comparison Abstract Equality Comparison</h1>...</div><div id=\"excluded-sec-strict-equality-comparison\"><h1><span class=\"secnum\">7.2.17</span>#sec-strict-equality-comparison Strict Equality Comparison</h1>...</div></emu-clause>\n\n  "}, "sec-static-semantics-exportentriesformodule": {"num": "15.2.3.6", "title": "#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-exportentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportentriesformodule\">#sec-static-semantics-exportentriesformodule</span> Static Semantics: ExportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>~star~</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <emu-val>null</emu-val> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>~star~</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"85fd3940\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the StringValue of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>~star~</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>sourceName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>exportName</var> be the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"74182ef2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>exportName</var> be the StringValue of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-imports-static-semantics-boundnames": {"num": "15.2.2.2", "title": "#sec-imports-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-imports-static-semantics-boundnames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports-static-semantics-boundnames\">#sec-imports-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n        <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the BoundNames of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the BoundNames of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the BoundNames of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9d23bed3\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-semantics-static-semantics-early-errors": {"num": "15.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the ExportedNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the ExportedBindings of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate ExportedNames rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n\n        <h1>Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleExportName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>It is a Syntax Error if <emu-xref aoid=\"IsStringValidUnicode\"><a href=\"#sec-isstringvalidunicode\">IsStringValidUnicode</a></emu-xref>(StringLiteral) is <emu-val>false</emu-val>.</li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-exports-runtime-semantics-evaluation": {"num": "15.2.3.11", "title": "#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-exports-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-runtime-semantics-evaluation\">#sec-exports-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>value</var> be ? BindingClassDeclarationEvaluation of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>className</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>If <var>className</var> is <emu-const>default</emu-const>, then<ol><li>Let <var>env</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeBoundName\"><a href=\"#sec-initializeboundname\">InitializeBoundName</a></emu-xref>(<emu-const>default</emu-const>, <var>value</var>, <var>env</var>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>) is <emu-val>true</emu-val>, then<ol><li>Let <var>value</var> be NamedEvaluation of <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> with argument <emu-val>\"default\"</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>rhs</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rhs</var>).</li></ol></li><li>Let <var>env</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeBoundName\"><a href=\"#sec-initializeboundname\">InitializeBoundName</a></emu-xref>(<emu-const>default</emu-const>, <var>value</var>, <var>env</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-parsemodule": {"num": "15.2.1.17.1", "title": "#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )", "html": "<emu-clause id=\"sec-parsemodule\" aoid=\"ParseModule\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-parsemodule\">#sec-parsemodule</span> ParseModule ( <var>sourceText</var>, <var>realm</var>, <var>hostDefined</var> )</h1>\n          <p>The abstract operation ParseModule takes arguments <var>sourceText</var> (ECMAScript source text), <var>realm</var>, and <var>hostDefined</var>. It creates a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> based upon the result of parsing <var>sourceText</var> as a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>sourceText</var> is an ECMAScript source text (see clause <emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>).</li><li>Parse <var>sourceText</var> using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> and analyse the parse result for any Early Error conditions. If the parse was successful and no early errors were found, let <var>body</var> be the resulting parse tree. Otherwise, let <var>body</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of one or more <emu-val>SyntaxError</emu-val> objects representing the parsing errors and/or early errors. Parsing and <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> detection may be interweaved in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> manner. If more than one parsing error or <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> is present, the number and ordering of error objects in the list is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>, but at least one must be present.</li><li>If <var>body</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, return <var>body</var>.</li><li>Let <var>requestedModules</var> be the ModuleRequests of <var>body</var>.</li><li>Let <var>importEntries</var> be ImportEntries of <var>body</var>.</li><li>Let <var>importedBoundNames</var> be <emu-xref aoid=\"ImportedLocalNames\"><a href=\"#sec-importedlocalnames\">ImportedLocalNames</a></emu-xref>(<var>importEntries</var>).</li><li>Let <var>indirectExportEntries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>localExportEntries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>starExportEntries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>exportEntries</var> be ExportEntries of <var>body</var>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>ee</var> in <var>exportEntries</var>, do<ol><li>If <var>ee</var>.[[ModuleRequest]] is <emu-val>null</emu-val>, then<ol><li>If <var>ee</var>.[[LocalName]] is not an element of <var>importedBoundNames</var>, then<ol><li>Append <var>ee</var> to <var>localExportEntries</var>.</li></ol></li><li>Else,<ol><li>Let <var>ie</var> be the element of <var>importEntries</var> whose [[LocalName]] is the same as <var>ee</var>.[[LocalName]].</li><li>If <var>ie</var>.[[ImportName]] is <emu-val>~star~</emu-val>, then<ol><li>NOTE: This is a re-export of an imported module namespace object.</li><li>Append <var>ee</var> to <var>localExportEntries</var>.</li></ol></li><li>Else,<ol><li>NOTE: This is a re-export of a single name.</li><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>ie</var>.[[ModuleRequest]], [[ImportName]]: <var>ie</var>.[[ImportName]], [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>ee</var>.[[ExportName]] } to <var>indirectExportEntries</var>.</li></ol></li></ol></li></ol></li><li>Else if <var>ee</var>.[[ImportName]] is <emu-val>~star~</emu-val> and <var>ee</var>.[[ExportName]] is <emu-val>null</emu-val>, then<ol><li>Append <var>ee</var> to <var>starExportEntries</var>.</li></ol></li><li>Else,<ol><li>Append <var>ee</var> to <var>indirectExportEntries</var>.</li></ol></li></ol></li><li>Return <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> { [[Realm]]: <var>realm</var>, [[Environment]]: <emu-val>undefined</emu-val>, [[Namespace]]: <emu-val>undefined</emu-val>, [[Status]]: <emu-const>unlinked</emu-const>, [[EvaluationError]]: <emu-val>undefined</emu-val>, [[HostDefined]]: <var>hostDefined</var>, [[ECMAScriptCode]]: <var>body</var>, [[Context]]: <emu-const>empty</emu-const>, [[ImportMeta]]: <emu-const>empty</emu-const>, [[RequestedModules]]: <var>requestedModules</var>, [[ImportEntries]]: <var>importEntries</var>, [[LocalExportEntries]]: <var>localExportEntries</var>, [[IndirectExportEntries]]: <var>indirectExportEntries</var>, [[StarExportEntries]]: <var>starExportEntries</var>, [[DFSIndex]]: <emu-val>undefined</emu-val>, [[DFSAncestorIndex]]: <emu-val>undefined</emu-val> }.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>An implementation may parse module source text and analyse it for Early Error conditions prior to the evaluation of ParseModule for that module source text. However, the reporting of any errors must be deferred until the point where this specification actually performs ParseModule upon that source text.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-async-function-definitions-static-semantics-BoundNames": {"num": "14.7.2", "title": "#sec-async-function-definitions-static-semantics-BoundNames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-async-function-definitions-static-semantics-BoundNames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions-static-semantics-BoundNames\">#sec-async-function-definitions-static-semantics-BoundNames</span> Static Semantics: BoundNames</h1>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e2632ddf\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6a076671\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-const>default</emu-const> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\"><emu-const>default</emu-const> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</div></emu-note>\n    </emu-clause>\n\n    "}, "sec-exports": {"num": "15.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"696b8d6e\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6bc99b97\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d298e1ba\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ae276654\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e2a585b6\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann><emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"85fd3940\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"29b1414e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"c16c88fe\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"74182ef2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-exports-static-semantics-boundnames\"><h1><span class=\"secnum\">15.2.3.2</span>#sec-exports-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportedbindings\"><h1><span class=\"secnum\">15.2.3.3</span>#sec-exports-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportednames\"><h1><span class=\"secnum\">15.2.3.4</span>#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-exports-static-semantics-exportentries\"><h1><span class=\"secnum\">15.2.3.5</span>#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">15.2.3.6</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-exports-static-semantics-isconstantdeclaration\"><h1><span class=\"secnum\">15.2.3.7</span>#sec-exports-static-semantics-isconstantdeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-exports-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">15.2.3.8</span>#sec-exports-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-exports-static-semantics-modulerequests\"><h1><span class=\"secnum\">15.2.3.9</span>#sec-exports-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">15.2.3.10</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.2.3.11</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-importentriesformodule": {"num": "15.2.2.4", "title": "#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-importentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-importentriesformodule\">#sec-static-semantics-importentriesformodule</span> Static Semantics: ImportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportedDefaultBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>defaultEntry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"default\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>defaultEntry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NameSpaceImport\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>~star~</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>localName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9d23bed3\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the StringValue of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-namespace-exotic-objects-get-p-receiver": {"num": "9.4.6.7", "title": "#sec-module-namespace-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-module-namespace-exotic-objects-get-p-receiver\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-exotic-objects-get-p-receiver\">#sec-module-namespace-exotic-objects-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n        <p>When the [[Get]] internal method of a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var> and <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> <var>Receiver</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryGet\"><a href=\"#sec-ordinaryget\">OrdinaryGet</a></emu-xref>(<var>O</var>, <var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>exports</var> be <var>O</var>.[[Exports]].</li><li>If <var>P</var> is not an element of <var>exports</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>m</var> be <var>O</var>.[[Module]].</li><li>Let <var>binding</var> be ! <var>m</var>.ResolveExport(<var>P</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>binding</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li><li>Let <var>targetModule</var> be <var>binding</var>.[[Module]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetModule</var> is not <emu-val>undefined</emu-val>.</li><li>If <var>binding</var>.[[BindingName]] is <emu-const>namespace</emu-const>, then<ol><li>Return ?&#160;<emu-xref aoid=\"GetModuleNamespace\"><a href=\"#sec-getmodulenamespace\">GetModuleNamespace</a></emu-xref>(<var>targetModule</var>).</li></ol></li><li>Let <var>targetEnv</var> be <var>targetModule</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-val>undefined</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>binding</var>.[[BindingName]], <emu-val>true</emu-val>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ResolveExport is side-effect free. Each time this operation is called with a specific <var>exportName</var>, <var>resolveSet</var> pair as arguments it must return the same result. An implementation might choose to pre-compute or cache the ResolveExport results for the [[Exports]] of each <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportentries": {"num": "15.2.3.5", "title": "#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries", "html": "<emu-clause id=\"sec-exports-static-semantics-exportentries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportentries\">#sec-exports-static-semantics-exportentries</span> Static Semantics: ExportEntries</h1>\n        <emu-see-also-para op=\"ExportEntries\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>module</var> be the sole element of ModuleRequests of <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>.</li><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> with argument <var>module</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> with argument <emu-val>null</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li><li>For each <var>name</var> in <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li><li>For each <var>name</var> in <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <emu-const>default</emu-const>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-const>default</emu-const> is used within this specification as a synthetic name for anonymous default export values.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08c8df8e\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"98de0f78\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"52f49b96\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"029ec31e\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"75ddb725\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b8d22333\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a2f22cc\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f35b66f8\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cdf0063c\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"835252f8\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"6f18d3a2\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ac457a7a\"><emu-t>from</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5292cb55\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9d23bed3\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06cca55e\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"696b8d6e\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6bc99b97\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d298e1ba\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ae276654\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e2a585b6\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann><emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"85fd3940\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"29b1414e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"c16c88fe\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"74182ef2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-exports-static-semantics-exportednames": {"num": "15.2.3.4", "title": "#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-exports-static-semantics-exportednames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportednames\">#sec-exports-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-see-also-para op=\"ExportedNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"85fd3940\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of ModuleExportName.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedNames of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedNames of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"74182ef2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of ModuleExportName.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-modules": {"num": "15.2", "title": "#sec-modules Modules", "html": "<emu-clause id=\"sec-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-modules\">#sec-modules</span> Modules</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"Module\" id=\"prod-Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"52f49b96\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleBody\" id=\"prod-ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItemList\" id=\"prod-ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"029ec31e\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"75ddb725\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItem\" id=\"prod-ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b8d22333\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleExportName\" id=\"prod-ModuleExportName\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-module-semantics\"><h1><span class=\"secnum\">15.2.1</span>#sec-module-semantics Module Semantics</h1>...</div><div id=\"excluded-sec-imports\"><h1><span class=\"secnum\">15.2.2</span>#sec-imports Imports</h1>...</div><div id=\"excluded-sec-exports\"><h1><span class=\"secnum\">15.2.3</span>#sec-exports Exports</h1>...</div></emu-clause>\n"}, "sec-function-definitions-static-semantics-boundnames": {"num": "14.1.3", "title": "#sec-function-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-boundnames\">#sec-function-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-const>default</emu-const> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-const>default</emu-const> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b9079b6b\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Append to <var>names</var> the BoundNames of <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"209ae310\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Append to <var>names</var> the BoundNames of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-async-generator-function-definitions-static-semantics-boundnames": {"num": "14.5.2", "title": "#sec-async-generator-function-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-async-generator-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-generator-function-definitions-static-semantics-boundnames\">#sec-async-generator-function-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"13d2cc33\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-t>*</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c51514e0\"><emu-t>async</emu-t><emu-t>function</emu-t><emu-t>*</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-const>default</emu-const> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-const>default</emu-const> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-exports-static-semantics-boundnames": {"num": "15.2.3.2", "title": "#sec-exports-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-exports-static-semantics-boundnames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-boundnames\">#sec-exports-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n        <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarationNames</var> be the BoundNames of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-const>default</emu-const>, append <emu-const>default</emu-const> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarationNames</var> be the BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-const>default</emu-const>, append <emu-const>default</emu-const> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-const>default</emu-const> &#187;.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-resolveexport": {"num": "15.2.1.17.3", "title": "#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method", "html": "<emu-clause id=\"sec-resolveexport\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-resolveexport\">#sec-resolveexport</span> ResolveExport ( <var>exportName</var> [ , <var>resolveSet</var> ] ) Concrete Method</h1>\n          <p>The ResolveExport concrete method of a <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> implements the corresponding <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> abstract method.</p>\n          <p>ResolveExport attempts to resolve an imported binding to the actual defining module and local binding name. The defining module may be the module represented by the <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> this method was invoked on or some other module that is imported by that module. The parameter <var>resolveSet</var> is used to detect unresolved circular import/export paths. If a pair consisting of specific <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> and <var>exportName</var> is reached that is already in <var>resolveSet</var>, an import circularity has been encountered. Before recursively calling ResolveExport, a pair consisting of <var>module</var> and <var>exportName</var> is added to <var>resolveSet</var>.</p>\n          <p>If a defining module is found, a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> { [[Module]], [[BindingName]] } is returned. This record identifies the resolved binding of the originally requested export, unless this is the export of a namespace with no local binding. In this case, [[BindingName]] will be set to <emu-const>namespace</emu-const>. If no definition was found or the request is found to be circular, <emu-val>null</emu-val> is returned. If the request is found to be ambiguous, the string <emu-val>\"ambiguous\"</emu-val> is returned.</p>\n          <p>This abstract method performs the following steps:</p>\n\n          <emu-alg><ol><li>If <var>resolveSet</var> is not present, set <var>resolveSet</var> to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>resolveSet</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Module]], [[ExportName]] }.</li><li>Let <var>module</var> be this <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref>.</li><li>For each <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Module]], [[ExportName]] } <var>r</var> in <var>resolveSet</var>, do<ol><li>If <var>module</var> and <var>r</var>.[[Module]] are the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> and <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <var>r</var>.[[ExportName]]) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is a circular import request.</li><li>Return <emu-val>null</emu-val>.</li></ol></li></ol></li><li>Append the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Module]]: <var>module</var>, [[ExportName]]: <var>exportName</var> } to <var>resolveSet</var>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[LocalExportEntries]], do<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <var>e</var>.[[ExportName]]) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> provides the direct binding for this export.</li><li>Return <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> { [[Module]]: <var>module</var>, [[BindingName]]: <var>e</var>.[[LocalName]] }.</li></ol></li></ol></li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[IndirectExportEntries]], do<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <var>e</var>.[[ExportName]]) is <emu-val>true</emu-val>, then<ol><li>Let <var>importedModule</var> be ?&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>e</var>.[[ModuleRequest]]).</li><li>If <var>e</var>.[[ImportName]] is <emu-val>~star~</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> does not provide the direct binding for this export.</li><li>Return <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> { [[Module]]: <var>importedModule</var>, [[BindingName]]: <emu-const>namespace</emu-const> }.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>module</var> imports a specific binding for this export.</li><li>Return <var>importedModule</var>.ResolveExport(<var>e</var>.[[ImportName]], <var>resolveSet</var>).</li></ol></li></ol></li></ol></li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>exportName</var>, <emu-val>\"default\"</emu-val>) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: A <code>default</code> export was not explicitly defined by this module.</li><li>Return <emu-val>null</emu-val>.</li><li>NOTE: A <code>default</code> export cannot be provided by an <code>export *</code> or <code>export * from \"mod\"</code> declaration.</li></ol></li><li>Let <var>starResolution</var> be <emu-val>null</emu-val>.</li><li>For each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> <var>e</var> in <var>module</var>.[[StarExportEntries]], do<ol><li>Let <var>importedModule</var> be ?&#160;<emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(<var>module</var>, <var>e</var>.[[ModuleRequest]]).</li><li>Let <var>resolution</var> be ? <var>importedModule</var>.ResolveExport(<var>exportName</var>, <var>resolveSet</var>).</li><li>If <var>resolution</var> is <emu-val>\"ambiguous\"</emu-val>, return <emu-val>\"ambiguous\"</emu-val>.</li><li>If <var>resolution</var> is not <emu-val>null</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>resolution</var> is a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref>.</li><li>If <var>starResolution</var> is <emu-val>null</emu-val>, set <var>starResolution</var> to <var>resolution</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There is more than one <code>*</code> import that includes the requested name.</li><li>If <var>resolution</var>.[[Module]] and <var>starResolution</var>.[[Module]] are not the same <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> or <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>resolution</var>.[[BindingName]], <var>starResolution</var>.[[BindingName]]) is <emu-val>false</emu-val>, return <emu-val>\"ambiguous\"</emu-val>.</li></ol></li></ol></li></ol></li><li>Return <var>starResolution</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-generator-function-definitions-static-semantics-boundnames": {"num": "14.4.2", "title": "#sec-generator-function-definitions-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-generator-function-definitions-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-function-definitions-static-semantics-boundnames\">#sec-generator-function-definitions-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7dbc99b6\"><emu-t>function</emu-t><emu-t>*</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0d271960\"><emu-t>function</emu-t><emu-t>*</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-const>default</emu-const> &#187;.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-const>default</emu-const> is used within this specification as a synthetic name for hoistable anonymous functions that are defined using export declarations.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}}, "figData": {"table-3": "Table 4", "table-36": "Table 39", "table-37": "Table 40", "table-cyclic-module-fields": "Table 41", "table-38": "Table 43", "table-39": "Table 44", "table-40": "Table 45", "table-41": "Table 46", "table-42": "Table 47"}}}