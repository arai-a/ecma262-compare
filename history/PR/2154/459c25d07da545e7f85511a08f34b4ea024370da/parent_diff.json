{"from": {"secList": ["sec-exports-static-semantics-early-errors", "sec-static-semantics-exportednames", "sec-static-semantics-boundnames", "sec-scripts-and-modules", "sec-modules", "sec-module-semantics-static-semantics-early-errors", "sec-testing-and-comparison-operations", "sec-imports", "sec-static-semantics-stringvalue", "sec-static-semantics-referencedbindings", "sec-static-semantics-exportentriesformodule", "sec-exports", "sec-static-semantics-importentriesformodule", "sec-static-semantics-exportedbindings"], "secData": {"sec-exports-static-semantics-early-errors": {"num": "16.2.3.1", "title": "#sec-exports-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-exports-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-early-errors\">#sec-exports-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j2lh_kda\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            For each <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> <var>n</var> in <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>: It is a Syntax Error if <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <var>n</var> is a <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> or if the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <var>n</var> is one of: <emu-val>\"implements\"</emu-val>, <emu-val>\"interface\"</emu-val>, <emu-val>\"let\"</emu-val>, <emu-val>\"package\"</emu-val>, <emu-val>\"private\"</emu-val>, <emu-val>\"protected\"</emu-val>, <emu-val>\"public\"</emu-val>, or <emu-val>\"static\"</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The above rule means that each <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> is treated as an <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-static-semantics-exportednames": {"num": "16.2.3.3", "title": "#sec-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-static-semantics-exportednames\" oldids=\"sec-module-semantics-static-semantics-exportednames,sec-exports-static-semantics-exportednames\" type=\"sdo\" aoid=\"ExportedNames\"><span id=\"sec-exports-static-semantics-exportednames\"></span><span id=\"sec-module-semantics-static-semantics-exportednames\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportednames\">#sec-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <p>The syntax-directed operation ExportedNames takes no arguments.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedNames are the externally visible names that a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> explicitly maps to one of its local name bindings.</p>\n        </div></emu-note>\n        <p>It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd23jrxs\" id=\"prod-Td0h-qi5\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ky6bsn7x\" id=\"prod-ebSwvFft\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-HgfJHgi9\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"15hryu6r\" id=\"prod-TCq0u4jM\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-Upv45R4X\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-H38kB23_\"><emu-t>*</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dtcd7req\" id=\"prod-cZdtFWyT\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"_xs5tuve\" id=\"prod-zlltzYPM\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bg3oaw2m\" id=\"prod-n6JkNQnf\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"go9a4xdq\" id=\"prod-NjdAgwQZ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cdfbfvfu\" id=\"prod-iOoR-XLv\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"w8pljwgc\" id=\"prod-BuNuTBV9\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"4f6ct71n\" id=\"prod-fWfjxGVB\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tyOEKkRB\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-VeE5fiYD\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-pHxySdXg\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"qvusrr4h\" id=\"prod-GRhLFzm0\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-boundnames": {"num": "8.1.1", "title": "#sec-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-static-semantics-boundnames\" oldids=\"sec-identifiers-static-semantics-boundnames,sec-let-and-const-declarations-static-semantics-boundnames,sec-variable-statement-static-semantics-boundnames,sec-destructuring-binding-patterns-static-semantics-boundnames,sec-for-in-and-for-of-statements-static-semantics-boundnames,sec-function-definitions-static-semantics-boundnames,sec-arrow-function-definitions-static-semantics-boundnames,sec-generator-function-definitions-static-semantics-boundnames,sec-async-generator-function-definitions-static-semantics-boundnames,sec-class-definitions-static-semantics-boundnames,sec-async-function-definitions-static-semantics-BoundNames,sec-async-arrow-function-definitions-static-semantics-BoundNames,sec-imports-static-semantics-boundnames,sec-exports-static-semantics-boundnames\" type=\"sdo\" aoid=\"BoundNames\"><span id=\"sec-exports-static-semantics-boundnames\"></span><span id=\"sec-imports-static-semantics-boundnames\"></span><span id=\"sec-async-arrow-function-definitions-static-semantics-BoundNames\"></span><span id=\"sec-async-function-definitions-static-semantics-BoundNames\"></span><span id=\"sec-class-definitions-static-semantics-boundnames\"></span><span id=\"sec-async-generator-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-generator-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-arrow-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-for-in-and-for-of-statements-static-semantics-boundnames\"></span><span id=\"sec-destructuring-binding-patterns-static-semantics-boundnames\"></span><span id=\"sec-variable-statement-static-semantics-boundnames\"></span><span id=\"sec-let-and-const-declarations-static-semantics-boundnames\"></span><span id=\"sec-identifiers-static-semantics-boundnames\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-boundnames\">#sec-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <p>The syntax-directed operation BoundNames takes no arguments.</p>\n      <emu-note id=\"note-star-default-star\"><span class=\"note\"><a href=\"#note-star-default-star\">Note</a></span><div class=\"note-contents\">\n        <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for a module's default export when it does not have another name. An entry in the module's [[Environment]] is created with that name and holds the corresponding value, and resolving the export named <emu-val>\"default\"</emu-val> by calling <emu-xref href=\"#sec-resolveexport\" title=\"\"><a href=\"#sec-resolveexport\">ResolveExport ( <var>exportName</var> [ , <var>resolveSet</var> ] )</a></emu-xref> for the module will return a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> whose [[BindingName]] is <emu-val>\"*default*\"</emu-val>, which will then resolve in the module's [[Environment]] to the above-mentioned value. This is done only for ease of specification, so that anonymous default exports can be resolved like any other export. The string <emu-val>\"*default*\"</emu-val> is never accessible to user code or to the module linking algorithm.</p>\n      </div></emu-note>\n      <p>It is defined piecewise over the following productions:</p>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bras6mo_\" id=\"prod-Yc3dQCIS\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-0oRvH9Oa\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-val>\"yield\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-eP6tRBFI\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-val>\"await\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LexicalDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"deqecbrp\" id=\"prod-WhUrx1KG\">\n        <emu-nt><a href=\"#prod-LetOrConst\">LetOrConst</a></emu-nt>\n        <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dt40zeyt\" id=\"prod-pdmM8758\">\n        <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LexicalBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5neqctp\" id=\"prod-SIbbs3t0\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LexicalBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd1t5ekf\" id=\"prod-WfIK7IbR\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"VariableDeclarationList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oavweevb\" id=\"prod-PvG06doO\">\n        <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"VariableDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5neqctp\" id=\"prod-TRoL9A8A\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"VariableDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd1t5ekf\" id=\"prod-uemJBnZk\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ObjectBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-HmBRwRUL\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ObjectBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ullzxsua\" id=\"prod-VrgiRc7B\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"kg5ha7xc\" id=\"prod-e52_ta72\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dev8fspa\" id=\"prod-gapTHhxd\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jxqgfqnk\" id=\"prod-uQApgi98\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7lkdseap\" id=\"prod-UADb9W1C\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bzdeo9zt\" id=\"prod-hRHC-ltw\">\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hiwampap\" id=\"prod-HS4vlt-j\">\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wo9nasvo\" id=\"prod-C9gIgbxU\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mhvrwluk\" id=\"prod-MJIzQe4_\">\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>:</emu-t>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5neqctp\" id=\"prod-T0DsYQHz\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ahx6lm0w\" id=\"prod-XX1yN-l7\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ForDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0y1vvm1x\" id=\"prod-Wj-eaJJJ\">\n        <emu-nt><a href=\"#prod-LetOrConst\">LetOrConst</a></emu-nt>\n        <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gxoavzvy\" id=\"prod-AAggAe5k\">\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"smus6qca\" id=\"prod-rmB8ZP2j\">\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\" id=\"prod-NuuiWZ7v\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uqeba6gz\" id=\"prod-po75ZBLy\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ijrjejbs\" id=\"prod-dSRi9b3k\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yrb110hm\" id=\"prod-B1jl1kwZ\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be the <emu-nt><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <var>formals</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fbyztjbh\" id=\"prod-t6vQVPUG\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dsczygsq\" id=\"prod-qJNJRowC\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e9lmm5cj\" id=\"prod-D36uGDV1\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xruu4gg0\" id=\"prod-Fiyc5-gj\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tusuwhcv\" id=\"prod-_x3zvham\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\" id=\"prod-0u78ulHy\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4mmt35rm\" id=\"prod-G-h1FrC4\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"agdmcdye\" id=\"prod-NaC_U8xV\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vks-z6n3\" id=\"prod-kRyJKqmR\">\n        <emu-nt><a href=\"#prod-MemberExpression\">MemberExpression</a></emu-nt>\n        <emu-nt><a href=\"#prod-Arguments\">Arguments</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>head</var> be the <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</li><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <var>head</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-jZE2c8MZ\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"odcuzpbi\" id=\"prod-me1fjwho\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"y9r1l58g\" id=\"prod-gnkPkMbr\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ih8rgsdx\" id=\"prod-WTIt04mh\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-2q0gunUG\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ggcfvgot\" id=\"prod-phtlO1Je\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"onppcdhk\" id=\"prod-QscPeL5E\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-OyREyUBO\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod-sOWb3AM5\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bg3oaw2m\" id=\"prod-wpPb0--4\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"go9a4xdq\" id=\"prod-yl8Kvf8S\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cdfbfvfu\" id=\"prod-oqm8ado6\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>declarationNames</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-val>\"*default*\"</emu-val>, append <emu-val>\"*default*\"</emu-val> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w8pljwgc\" id=\"prod-pmSnaEkm\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>declarationNames</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-val>\"*default*\"</emu-val>, append <emu-val>\"*default*\"</emu-val> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4f6ct71n\" id=\"prod-fy8WSBrE\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cmjfjhkc\" id=\"prod-k7_ObWcc\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mn4pemzx\" id=\"prod-he3lY70e\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uvsblmsd\" id=\"prod-J1Dzjg4f\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ap7dhqxm\" id=\"prod-oFwa4ZD6\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"dd23jrxs\" id=\"prod-GXF21Ewo\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-0vrrEsBm\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ky6bsn7x\" id=\"prod-WCJmhvY4\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qtwquiug\" id=\"prod-jXCkpXv4\"><emu-nt params=\"~Yield, +Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, +Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-WzAgO-V_\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"odcuzpbi\" id=\"prod-CDGJVPkq\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oi8izote\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"81tm-dw4\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"zfagpfvq\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"y9r1l58g\" id=\"prod-kEa0XgB6\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ih8rgsdx\" id=\"prod-wyOKxI9w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-XiX5S_vU\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-AScJop1Y\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SkqVKtrZ\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"g1js-lhi\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"bxjtogxx\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rev6es22\">\n        <emu-t>from</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"upllvvnq\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ggcfvgot\" id=\"prod-UCgvcMcb\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-5TmWi69r\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"onppcdhk\" id=\"prod-Pd4rUvEL\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-sCJUL89L\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ni7cnis3\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"rudz_osj\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"cshvsnoo\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"pkwjy2r6\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"hf5nsghg\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"33r7jf_e\" id=\"prod-GUPXSqcT\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, +Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"dtcd7req\" id=\"prod-o48mDNgZ\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-JyH8gtYm\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qvusrr4h\" id=\"prod-HMTDwQcl\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-modules": {"num": "16.2", "title": "#sec-modules Modules", "html": "<emu-clause id=\"sec-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-modules\">#sec-modules</span> Modules</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"Module\" id=\"prod-Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uvsblmsd\" id=\"prod-J1Dzjg4f\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleBody\" id=\"prod-ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItemList\" id=\"prod-ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ap7dhqxm\" id=\"prod-oFwa4ZD6\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"dd23jrxs\" id=\"prod-GXF21Ewo\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItem\" id=\"prod-ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-0vrrEsBm\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ky6bsn7x\" id=\"prod-WCJmhvY4\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qtwquiug\" id=\"prod-jXCkpXv4\"><emu-nt params=\"~Yield, +Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, +Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-module-semantics\"><h1><span class=\"secnum\">16.2.1</span>#sec-module-semantics Module Semantics</h1>...</div><div id=\"excluded-sec-imports\"><h1><span class=\"secnum\">16.2.2</span>#sec-imports Imports</h1>...</div><div id=\"excluded-sec-exports\"><h1><span class=\"secnum\">16.2.3</span>#sec-exports Exports</h1>...</div></emu-clause>\n"}, "sec-module-semantics-static-semantics-early-errors": {"num": "16.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-xref aoid=\"Contains\"><a href=\"#sec-static-semantics-contains\">Contains</a></emu-xref> <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-xref aoid=\"Contains\"><a href=\"#sec-static-semantics-contains\">Contains</a></emu-xref> <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsDuplicateLabels\"><a href=\"#sec-static-semantics-containsduplicatelabels\">ContainsDuplicateLabels</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedBreakTarget\"><a href=\"#sec-static-semantics-containsundefinedbreaktarget\">ContainsUndefinedBreakTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedContinueTarget\"><a href=\"#sec-static-semantics-containsundefinedcontinuetarget\">ContainsUndefinedContinueTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"AllPrivateIdentifiersValid\"><a href=\"#sec-static-semantics-allprivateidentifiersvalid\">AllPrivateIdentifiersValid</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>false</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-testing-and-comparison-operations": {"num": "7.2", "title": "#sec-testing-and-comparison-operations Testing and Comparison Operations", "html": "<emu-clause id=\"sec-testing-and-comparison-operations\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-testing-and-comparison-operations\">#sec-testing-and-comparison-operations</span> Testing and Comparison Operations</h1>\n\n    <div id=\"excluded-sec-requireobjectcoercible\"><h1><span class=\"secnum\">7.2.1</span>#sec-requireobjectcoercible RequireObjectCoercible ( argument )</h1>...</div><div id=\"excluded-sec-isarray\"><h1><span class=\"secnum\">7.2.2</span>#sec-isarray IsArray ( argument )</h1>...</div><div id=\"excluded-sec-iscallable\"><h1><span class=\"secnum\">7.2.3</span>#sec-iscallable IsCallable ( argument )</h1>...</div><div id=\"excluded-sec-isconstructor\"><h1><span class=\"secnum\">7.2.4</span>#sec-isconstructor IsConstructor ( argument )</h1>...</div><div id=\"excluded-sec-isextensible-o\"><h1><span class=\"secnum\">7.2.5</span>#sec-isextensible-o IsExtensible ( O )</h1>...</div><div id=\"excluded-sec-isintegralnumber\"><h1><span class=\"secnum\">7.2.6</span>#sec-isintegralnumber IsIntegralNumber ( argument )</h1>...</div><div id=\"excluded-sec-ispropertykey\"><h1><span class=\"secnum\">7.2.7</span>#sec-ispropertykey IsPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-isregexp\"><h1><span class=\"secnum\">7.2.8</span>#sec-isregexp IsRegExp ( argument )</h1>...</div><div id=\"excluded-sec-isstringprefix\"><h1><span class=\"secnum\">7.2.9</span>#sec-isstringprefix IsStringPrefix ( p, q )</h1>...</div><div id=\"excluded-sec-samevalue\"><h1><span class=\"secnum\">7.2.10</span>#sec-samevalue SameValue ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluezero\"><h1><span class=\"secnum\">7.2.11</span>#sec-samevaluezero SameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluenonnumeric\"><h1><span class=\"secnum\">7.2.12</span>#sec-samevaluenonnumeric SameValueNonNumeric ( x, y )</h1>...</div><div id=\"excluded-sec-islessthan\"><h1><span class=\"secnum\">7.2.13</span>#sec-islessthan IsLessThan ( x, y, LeftFirst )</h1>...</div><div id=\"excluded-sec-islooselyequal\"><h1><span class=\"secnum\">7.2.14</span>#sec-islooselyequal IsLooselyEqual ( x, y )</h1>...</div><div id=\"excluded-sec-isstrictlyequal\"><h1><span class=\"secnum\">7.2.15</span>#sec-isstrictlyequal IsStrictlyEqual ( x, y )</h1>...</div></emu-clause>\n\n  "}, "sec-imports": {"num": "16.2.2", "title": "#sec-imports Imports", "html": "<emu-clause id=\"sec-imports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports\">#sec-imports</span> Imports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ImportDeclaration\" id=\"prod-ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-WzAgO-V_\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"odcuzpbi\" id=\"prod-CDGJVPkq\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportClause\" id=\"prod-ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oi8izote\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"81tm-dw4\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"zfagpfvq\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"y9r1l58g\" id=\"prod-kEa0XgB6\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ih8rgsdx\" id=\"prod-wyOKxI9w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedDefaultBinding\" id=\"prod-ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-XiX5S_vU\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NameSpaceImport\" id=\"prod-NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-AScJop1Y\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"NamedImports\" id=\"prod-NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SkqVKtrZ\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"g1js-lhi\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"bxjtogxx\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FromClause\" id=\"prod-FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rev6es22\">\n        <emu-t>from</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportsList\" id=\"prod-ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"upllvvnq\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ggcfvgot\" id=\"prod-UCgvcMcb\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportSpecifier\" id=\"prod-ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-5TmWi69r\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"onppcdhk\" id=\"prod-Pd4rUvEL\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleSpecifier\" id=\"prod-ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-sCJUL89L\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedBinding\" id=\"prod-ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ni7cnis3\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-imports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.2.1</span>#sec-imports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-importentries\"><h1><span class=\"secnum\">16.2.2.2</span>#sec-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-importentriesformodule\"><h1><span class=\"secnum\">16.2.2.3</span>#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-stringvalue": {"num": "13.1.2", "title": "#sec-static-semantics-stringvalue Static Semantics: StringValue", "html": "<emu-clause id=\"sec-static-semantics-stringvalue\" oldids=\"sec-identifiers-static-semantics-stringvalue,sec-identifier-names-static-semantics-stringvalue\" type=\"sdo\" aoid=\"StringValue\"><span id=\"sec-identifier-names-static-semantics-stringvalue\"></span><span id=\"sec-identifiers-static-semantics-stringvalue\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-stringvalue\">#sec-static-semantics-stringvalue</span> Static Semantics: StringValue</h1>\n      <p>The syntax-directed operation StringValue takes no arguments. It is defined piecewise over the following productions:</p>\n      <emu-grammar><emu-production name=\"IdentifierName\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"q0afq8g8\" id=\"prod-tbqchaHr\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cawc7ktu\" id=\"prod-NS6rHu2W\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>idTextUnescaped</var> be <emu-xref aoid=\"IdentifierCodePoints\"><a href=\"#sec-identifiercodepoints\">IdentifierCodePoints</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"CodePointsToString\"><a href=\"#sec-codepointstostring\">CodePointsToString</a></emu-xref>(<var>idTextUnescaped</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-TEe-WTI-\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-ZpP1WoNY\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"LabelIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-APZnd9XH\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>\"yield\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-ov5ki9Up\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-fu2iq4OH\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"LabelIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-z0WsNljd\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>\"await\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"Identifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"v6xddc2h\" id=\"prod-3LDrFiW5\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> <emu-gmod>but not <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"PrivateIdentifier\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"echyiakf\" id=\"prod-nzu557qc\">\n        <emu-t>#</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of 0x0023 (NUMBER SIGN) and the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-static-semantics-referencedbindings": {"num": "16.2.3.6", "title": "#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings", "html": "<emu-clause id=\"sec-static-semantics-referencedbindings\" type=\"sdo\" aoid=\"ReferencedBindings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-referencedbindings\">#sec-static-semantics-referencedbindings</span> Static Semantics: ReferencedBindings</h1>\n        <p>The syntax-directed operation ReferencedBindings takes no arguments. It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SuOfrU8K\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-eGw90zQ9\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-T6LrnWgA\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"qvusrr4h\" id=\"prod-iOxB68Nd\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-exportentriesformodule": {"num": "16.2.3.5", "title": "#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-exportentriesformodule\" type=\"sdo\" aoid=\"ExportEntriesForModule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportentriesformodule\">#sec-static-semantics-exportentriesformodule</span> Static Semantics: ExportEntriesForModule</h1>\n        <p>The syntax-directed operation ExportEntriesForModule takes argument <var>module</var>. It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-Xa_xAKMV\"><emu-t>*</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-const>all-but-default</emu-const>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <emu-val>null</emu-val> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dtcd7req\" id=\"prod-eEU1GKNj\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-const>all</emu-const>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-mzZ83dVi\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-zadzACBk\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>specs1</var> be the <emu-xref aoid=\"ExportEntriesForModule\"><a href=\"#sec-static-semantics-exportentriesformodule\">ExportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>specs2</var> be the <emu-xref aoid=\"ExportEntriesForModule\"><a href=\"#sec-static-semantics-exportentriesformodule\">ExportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>specs1</var> and <var>specs2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-sRdxtKYQ\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>sourceName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"qvusrr4h\" id=\"prod-kMIeNwJo\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>exportName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports": {"num": "16.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"rudz_osj\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"cshvsnoo\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"pkwjy2r6\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"hf5nsghg\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"33r7jf_e\" id=\"prod-GUPXSqcT\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, +Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"dtcd7req\" id=\"prod-o48mDNgZ\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-JyH8gtYm\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qvusrr4h\" id=\"prod-HMTDwQcl\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-exportedbindings\"><h1><span class=\"secnum\">16.2.3.2</span>#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.3.3</span>#sec-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.3.4</span>#sec-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">16.2.3.5</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">16.2.3.6</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.3.7</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-importentriesformodule": {"num": "16.2.2.3", "title": "#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-importentriesformodule\" type=\"sdo\" aoid=\"ImportEntriesForModule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-importentriesformodule\">#sec-static-semantics-importentriesformodule</span> Static Semantics: ImportEntriesForModule</h1>\n        <p>The syntax-directed operation ImportEntriesForModule takes argument <var>module</var>. It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"y9r1l58g\" id=\"prod-ejkMSdRd\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>entries1</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>entries2</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>entries1</var> and <var>entries2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ih8rgsdx\" id=\"prod-0jSzNM4w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>entries1</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>entries2</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>entries1</var> and <var>entries2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportedDefaultBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-8iON-ECl\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>defaultEntry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"default\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>defaultEntry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NameSpaceImport\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-UUrB05kM\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-const>namespace-object</emu-const>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-Cg-QzVAj\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ggcfvgot\" id=\"prod-nXrDLJR0\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>specs1</var> be the <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>specs2</var> be the <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>specs1</var> and <var>specs2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-EknrR_3b\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>localName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"onppcdhk\" id=\"prod-Qq5Ok86W\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>localName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-static-semantics-exportedbindings": {"num": "16.2.3.2", "title": "#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings", "html": "<emu-clause id=\"sec-static-semantics-exportedbindings\" oldids=\"sec-module-semantics-static-semantics-exportedbindings,sec-exports-static-semantics-exportedbindings\" type=\"sdo\" aoid=\"ExportedBindings\"><span id=\"sec-exports-static-semantics-exportedbindings\"></span><span id=\"sec-module-semantics-static-semantics-exportedbindings\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportedbindings\">#sec-static-semantics-exportedbindings</span> Static Semantics: ExportedBindings</h1>\n        <p>The syntax-directed operation ExportedBindings takes no arguments.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedBindings are the locally bound names that are explicitly associated with a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>'s <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd23jrxs\" id=\"prod-hxF0P9sA\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-_KDGI2fs\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"15hryu6r\" id=\"prod-ExniQRjB\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-V3c4HtRK\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j2lh_kda\" id=\"prod-OFghu2j_\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bg3oaw2m\" id=\"prod-IJxf-Cdm\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"go9a4xdq\" id=\"prod-PahxJv8L\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cdfbfvfu\" id=\"prod-Ltk1AbDn\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"w8pljwgc\" id=\"prod-kSrXZybF\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"4f6ct71n\" id=\"prod-tftEFTtX\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-TQTcajTg\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-2N5gUMor\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-PXy6OYfk\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"qvusrr4h\" id=\"prod-yE_sj4Qx\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-isstringwellformedunicode", "sec-exports-static-semantics-early-errors", "sec-static-semantics-exportednames", "sec-static-semantics-boundnames", "sec-scripts-and-modules", "sec-modules", "sec-module-semantics-static-semantics-early-errors", "sec-testing-and-comparison-operations", "sec-imports", "sec-static-semantics-stringvalue", "sec-static-semantics-referencedbindings", "sec-static-semantics-exportentriesformodule", "sec-exports", "sec-static-semantics-importentriesformodule", "sec-static-semantics-exportedbindings"], "secData": {"sec-isstringwellformedunicode": {"num": "7.2.10", "title": "#sec-isstringwellformedunicode Static Semantics: IsStringWellFormedUnicode ( string )", "html": "<emu-clause id=\"sec-isstringwellformedunicode\" type=\"abstract operation\" aoid=\"IsStringWellFormedUnicode\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isstringwellformedunicode\">#sec-isstringwellformedunicode</span> Static Semantics: IsStringWellFormedUnicode ( <var>string</var> )</h1>\n      <p>The abstract operation IsStringWellFormedUnicode takes argument <var>string</var> (a String). It interprets <var>string</var> as a sequence of UTF-16 encoded code points, as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, and determines whether it is a <a href=\"http://www.unicode.org/glossary/#well_formed_code_unit_sequence\">well formed</a> UTF-16 sequence. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>strLen</var> be the number of code units in <var>string</var>.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &#8800; <var>strLen</var>,<ol><li>Let <var>cp</var> be !&#160;<emu-xref aoid=\"CodePointAt\"><a href=\"#sec-codepointat\">CodePointAt</a></emu-xref>(<var>string</var>, <var>k</var>).</li><li>If <var>cp</var>.[[IsUnpairedSurrogate]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Set <var>k</var> to <var>k</var> + <var>cp</var>.[[CodeUnitCount]].</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-exports-static-semantics-early-errors": {"num": "16.2.3.1", "title": "#sec-exports-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-exports-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-early-errors\">#sec-exports-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j2lh_kda\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> contains any <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>s.\n          </li>\n          <li>\n            For each <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> <var>n</var> in <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>: It is a Syntax Error if <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <var>n</var> is a <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt> or if the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <var>n</var> is one of: <emu-val>\"implements\"</emu-val>, <emu-val>\"interface\"</emu-val>, <emu-val>\"let\"</emu-val>, <emu-val>\"package\"</emu-val>, <emu-val>\"private\"</emu-val>, <emu-val>\"protected\"</emu-val>, <emu-val>\"public\"</emu-val>, or <emu-val>\"static\"</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The above rule means that each <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> is treated as an <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-static-semantics-exportednames": {"num": "16.2.3.3", "title": "#sec-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-static-semantics-exportednames\" oldids=\"sec-module-semantics-static-semantics-exportednames,sec-exports-static-semantics-exportednames\" type=\"sdo\" aoid=\"ExportedNames\"><span id=\"sec-exports-static-semantics-exportednames\"></span><span id=\"sec-module-semantics-static-semantics-exportednames\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportednames\">#sec-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <p>The syntax-directed operation ExportedNames takes no arguments.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedNames are the externally visible names that a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> explicitly maps to one of its local name bindings.</p>\n        </div></emu-note>\n        <p>It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd23jrxs\" id=\"prod-Td0h-qi5\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ky6bsn7x\" id=\"prod-ebSwvFft\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-HgfJHgi9\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"15hryu6r\" id=\"prod-TCq0u4jM\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-Upv45R4X\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-H38kB23_\"><emu-t>*</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hf05qfgg\" id=\"prod-2_hHRuoS\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"_xs5tuve\" id=\"prod-zlltzYPM\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bg3oaw2m\" id=\"prod-n6JkNQnf\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"go9a4xdq\" id=\"prod-NjdAgwQZ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cdfbfvfu\" id=\"prod-iOoR-XLv\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"w8pljwgc\" id=\"prod-BuNuTBV9\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"4f6ct71n\" id=\"prod-fWfjxGVB\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tyOEKkRB\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-VeE5fiYD\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6isvnzvv\" id=\"prod-KtpQleM7\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hbgjxuav\" id=\"prod-jiop1t1m\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the second <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-boundnames": {"num": "8.1.1", "title": "#sec-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-static-semantics-boundnames\" oldids=\"sec-identifiers-static-semantics-boundnames,sec-let-and-const-declarations-static-semantics-boundnames,sec-variable-statement-static-semantics-boundnames,sec-destructuring-binding-patterns-static-semantics-boundnames,sec-for-in-and-for-of-statements-static-semantics-boundnames,sec-function-definitions-static-semantics-boundnames,sec-arrow-function-definitions-static-semantics-boundnames,sec-generator-function-definitions-static-semantics-boundnames,sec-async-generator-function-definitions-static-semantics-boundnames,sec-class-definitions-static-semantics-boundnames,sec-async-function-definitions-static-semantics-BoundNames,sec-async-arrow-function-definitions-static-semantics-BoundNames,sec-imports-static-semantics-boundnames,sec-exports-static-semantics-boundnames\" type=\"sdo\" aoid=\"BoundNames\"><span id=\"sec-exports-static-semantics-boundnames\"></span><span id=\"sec-imports-static-semantics-boundnames\"></span><span id=\"sec-async-arrow-function-definitions-static-semantics-BoundNames\"></span><span id=\"sec-async-function-definitions-static-semantics-BoundNames\"></span><span id=\"sec-class-definitions-static-semantics-boundnames\"></span><span id=\"sec-async-generator-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-generator-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-arrow-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-function-definitions-static-semantics-boundnames\"></span><span id=\"sec-for-in-and-for-of-statements-static-semantics-boundnames\"></span><span id=\"sec-destructuring-binding-patterns-static-semantics-boundnames\"></span><span id=\"sec-variable-statement-static-semantics-boundnames\"></span><span id=\"sec-let-and-const-declarations-static-semantics-boundnames\"></span><span id=\"sec-identifiers-static-semantics-boundnames\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-boundnames\">#sec-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <p>The syntax-directed operation BoundNames takes no arguments.</p>\n      <emu-note id=\"note-star-default-star\"><span class=\"note\"><a href=\"#note-star-default-star\">Note</a></span><div class=\"note-contents\">\n        <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for a module's default export when it does not have another name. An entry in the module's [[Environment]] is created with that name and holds the corresponding value, and resolving the export named <emu-val>\"default\"</emu-val> by calling <emu-xref href=\"#sec-resolveexport\" title=\"\"><a href=\"#sec-resolveexport\">ResolveExport ( <var>exportName</var> [ , <var>resolveSet</var> ] )</a></emu-xref> for the module will return a <emu-xref href=\"#resolvedbinding-record\"><a href=\"#resolvedbinding-record\">ResolvedBinding Record</a></emu-xref> whose [[BindingName]] is <emu-val>\"*default*\"</emu-val>, which will then resolve in the module's [[Environment]] to the above-mentioned value. This is done only for ease of specification, so that anonymous default exports can be resolved like any other export. The string <emu-val>\"*default*\"</emu-val> is never accessible to user code or to the module linking algorithm.</p>\n      </div></emu-note>\n      <p>It is defined piecewise over the following productions:</p>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bras6mo_\" id=\"prod-Yc3dQCIS\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-0oRvH9Oa\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-val>\"yield\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-eP6tRBFI\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-val>\"await\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LexicalDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"deqecbrp\" id=\"prod-WhUrx1KG\">\n        <emu-nt><a href=\"#prod-LetOrConst\">LetOrConst</a></emu-nt>\n        <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dt40zeyt\" id=\"prod-pdmM8758\">\n        <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingList\">BindingList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LexicalBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5neqctp\" id=\"prod-SIbbs3t0\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LexicalBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LexicalBinding\">LexicalBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd1t5ekf\" id=\"prod-WfIK7IbR\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"VariableDeclarationList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oavweevb\" id=\"prod-PvG06doO\">\n        <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"VariableDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5neqctp\" id=\"prod-TRoL9A8A\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"VariableDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd1t5ekf\" id=\"prod-uemJBnZk\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ObjectBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-HmBRwRUL\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ObjectBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ullzxsua\" id=\"prod-VrgiRc7B\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"kg5ha7xc\" id=\"prod-e52_ta72\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dev8fspa\" id=\"prod-gapTHhxd\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jxqgfqnk\" id=\"prod-uQApgi98\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7lkdseap\" id=\"prod-UADb9W1C\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bzdeo9zt\" id=\"prod-hRHC-ltw\">\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hiwampap\" id=\"prod-HS4vlt-j\">\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wo9nasvo\" id=\"prod-C9gIgbxU\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mhvrwluk\" id=\"prod-MJIzQe4_\">\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>:</emu-t>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5neqctp\" id=\"prod-T0DsYQHz\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ahx6lm0w\" id=\"prod-XX1yN-l7\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ForDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0y1vvm1x\" id=\"prod-Wj-eaJJJ\">\n        <emu-nt><a href=\"#prod-LetOrConst\">LetOrConst</a></emu-nt>\n        <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gxoavzvy\" id=\"prod-AAggAe5k\">\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"smus6qca\" id=\"prod-rmB8ZP2j\">\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\" id=\"prod-NuuiWZ7v\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uqeba6gz\" id=\"prod-po75ZBLy\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ijrjejbs\" id=\"prod-dSRi9b3k\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yrb110hm\" id=\"prod-B1jl1kwZ\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be the <emu-nt><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <var>formals</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fbyztjbh\" id=\"prod-t6vQVPUG\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dsczygsq\" id=\"prod-qJNJRowC\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e9lmm5cj\" id=\"prod-D36uGDV1\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xruu4gg0\" id=\"prod-Fiyc5-gj\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tusuwhcv\" id=\"prod-_x3zvham\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\" id=\"prod-0u78ulHy\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4mmt35rm\" id=\"prod-G-h1FrC4\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"agdmcdye\" id=\"prod-NaC_U8xV\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vks-z6n3\" id=\"prod-kRyJKqmR\">\n        <emu-nt><a href=\"#prod-MemberExpression\">MemberExpression</a></emu-nt>\n        <emu-nt><a href=\"#prod-Arguments\">Arguments</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>head</var> be the <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</li><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <var>head</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-jZE2c8MZ\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"odcuzpbi\" id=\"prod-me1fjwho\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"y9r1l58g\" id=\"prod-gnkPkMbr\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ih8rgsdx\" id=\"prod-WTIt04mh\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-2q0gunUG\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ggcfvgot\" id=\"prod-phtlO1Je\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"nso-0w0x\" id=\"prod-4FuZGlZe\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-OyREyUBO\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod-sOWb3AM5\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bg3oaw2m\" id=\"prod-wpPb0--4\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"go9a4xdq\" id=\"prod-yl8Kvf8S\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cdfbfvfu\" id=\"prod-oqm8ado6\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>declarationNames</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-val>\"*default*\"</emu-val>, append <emu-val>\"*default*\"</emu-val> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w8pljwgc\" id=\"prod-pmSnaEkm\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>declarationNames</var> be the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>If <var>declarationNames</var> does not include the element <emu-val>\"*default*\"</emu-val>, append <emu-val>\"*default*\"</emu-val> to <var>declarationNames</var>.</li><li>Return <var>declarationNames</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4f6ct71n\" id=\"prod-fy8WSBrE\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return &#171; <emu-val>\"*default*\"</emu-val> &#187;.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cmjfjhkc\" id=\"prod-k7_ObWcc\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mn4pemzx\" id=\"prod-he3lY70e\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uvsblmsd\" id=\"prod-J1Dzjg4f\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ap7dhqxm\" id=\"prod-oFwa4ZD6\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"dd23jrxs\" id=\"prod-GXF21Ewo\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-0vrrEsBm\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ky6bsn7x\" id=\"prod-WCJmhvY4\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qtwquiug\" id=\"prod-jXCkpXv4\"><emu-nt params=\"~Yield, +Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, +Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleExportName\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-fq2XZarU\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"xhtltz00\" id=\"prod-MLF6ZGJ-\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-WzAgO-V_\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"odcuzpbi\" id=\"prod-CDGJVPkq\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oi8izote\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"81tm-dw4\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"zfagpfvq\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"y9r1l58g\" id=\"prod-kEa0XgB6\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ih8rgsdx\" id=\"prod-wyOKxI9w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-XiX5S_vU\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-AScJop1Y\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SkqVKtrZ\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"g1js-lhi\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"bxjtogxx\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rev6es22\">\n        <emu-t>from</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"upllvvnq\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ggcfvgot\" id=\"prod-UCgvcMcb\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-5TmWi69r\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"nso-0w0x\" id=\"prod-7GW8ul0v\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-sCJUL89L\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ni7cnis3\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"rudz_osj\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"cshvsnoo\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"pkwjy2r6\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"hf5nsghg\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"33r7jf_e\" id=\"prod-GUPXSqcT\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, +Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"hf05qfgg\" id=\"prod-N6rwTU5m\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6isvnzvv\" id=\"prod-8GGKXwjI\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"hbgjxuav\" id=\"prod-ya486nM7\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-modules": {"num": "16.2", "title": "#sec-modules Modules", "html": "<emu-clause id=\"sec-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-modules\">#sec-modules</span> Modules</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"Module\" id=\"prod-Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uvsblmsd\" id=\"prod-J1Dzjg4f\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleBody\" id=\"prod-ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItemList\" id=\"prod-ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ap7dhqxm\" id=\"prod-oFwa4ZD6\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"dd23jrxs\" id=\"prod-GXF21Ewo\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleItem\" id=\"prod-ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-0vrrEsBm\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ky6bsn7x\" id=\"prod-WCJmhvY4\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qtwquiug\" id=\"prod-jXCkpXv4\"><emu-nt params=\"~Yield, +Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, +Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleExportName\" id=\"prod-ModuleExportName\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-fq2XZarU\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"xhtltz00\" id=\"prod-MLF6ZGJ-\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-module-semantics\"><h1><span class=\"secnum\">16.2.1</span>#sec-module-semantics Module Semantics</h1>...</div><div id=\"excluded-sec-imports\"><h1><span class=\"secnum\">16.2.2</span>#sec-imports Imports</h1>...</div><div id=\"excluded-sec-exports\"><h1><span class=\"secnum\">16.2.3</span>#sec-exports Exports</h1>...</div></emu-clause>\n"}, "sec-module-semantics-static-semantics-early-errors": {"num": "16.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the <emu-xref aoid=\"VarDeclaredNames\"><a href=\"#sec-static-semantics-vardeclarednames\">VarDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the <emu-xref aoid=\"LexicallyDeclaredNames\"><a href=\"#sec-static-semantics-lexicallydeclarednames\">LexicallyDeclaredNames</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-xref aoid=\"Contains\"><a href=\"#sec-static-semantics-contains\">Contains</a></emu-xref> <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-xref aoid=\"Contains\"><a href=\"#sec-static-semantics-contains\">Contains</a></emu-xref> <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsDuplicateLabels\"><a href=\"#sec-static-semantics-containsduplicatelabels\">ContainsDuplicateLabels</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedBreakTarget\"><a href=\"#sec-static-semantics-containsundefinedbreaktarget\">ContainsUndefinedBreakTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"ContainsUndefinedContinueTarget\"><a href=\"#sec-static-semantics-containsundefinedcontinuetarget\">ContainsUndefinedContinueTarget</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-xref aoid=\"AllPrivateIdentifiersValid\"><a href=\"#sec-static-semantics-allprivateidentifiersvalid\">AllPrivateIdentifiersValid</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>false</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref> rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"ModuleExportName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <ul>\n          <li>It is a Syntax Error if <emu-xref aoid=\"IsStringWellFormedUnicode\"><a href=\"#sec-isstringwellformedunicode\">IsStringWellFormedUnicode</a></emu-xref>(the <emu-xref aoid=\"SV\"><a href=\"#sec-static-semantics-sv\">SV</a></emu-xref> of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>) is <emu-val>false</emu-val>.</li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-testing-and-comparison-operations": {"num": "7.2", "title": "#sec-testing-and-comparison-operations Testing and Comparison Operations", "html": "<emu-clause id=\"sec-testing-and-comparison-operations\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-testing-and-comparison-operations\">#sec-testing-and-comparison-operations</span> Testing and Comparison Operations</h1>\n\n    <div id=\"excluded-sec-requireobjectcoercible\"><h1><span class=\"secnum\">7.2.1</span>#sec-requireobjectcoercible RequireObjectCoercible ( argument )</h1>...</div><div id=\"excluded-sec-isarray\"><h1><span class=\"secnum\">7.2.2</span>#sec-isarray IsArray ( argument )</h1>...</div><div id=\"excluded-sec-iscallable\"><h1><span class=\"secnum\">7.2.3</span>#sec-iscallable IsCallable ( argument )</h1>...</div><div id=\"excluded-sec-isconstructor\"><h1><span class=\"secnum\">7.2.4</span>#sec-isconstructor IsConstructor ( argument )</h1>...</div><div id=\"excluded-sec-isextensible-o\"><h1><span class=\"secnum\">7.2.5</span>#sec-isextensible-o IsExtensible ( O )</h1>...</div><div id=\"excluded-sec-isintegralnumber\"><h1><span class=\"secnum\">7.2.6</span>#sec-isintegralnumber IsIntegralNumber ( argument )</h1>...</div><div id=\"excluded-sec-ispropertykey\"><h1><span class=\"secnum\">7.2.7</span>#sec-ispropertykey IsPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-isregexp\"><h1><span class=\"secnum\">7.2.8</span>#sec-isregexp IsRegExp ( argument )</h1>...</div><div id=\"excluded-sec-isstringprefix\"><h1><span class=\"secnum\">7.2.9</span>#sec-isstringprefix IsStringPrefix ( p, q )</h1>...</div><div id=\"excluded-sec-isstringwellformedunicode\"><h1><span class=\"secnum\">7.2.10</span>#sec-isstringwellformedunicode Static Semantics: IsStringWellFormedUnicode ( string )</h1>...</div><div id=\"excluded-sec-samevalue\"><h1><span class=\"secnum\">7.2.11</span>#sec-samevalue SameValue ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluezero\"><h1><span class=\"secnum\">7.2.12</span>#sec-samevaluezero SameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluenonnumeric\"><h1><span class=\"secnum\">7.2.13</span>#sec-samevaluenonnumeric SameValueNonNumeric ( x, y )</h1>...</div><div id=\"excluded-sec-islessthan\"><h1><span class=\"secnum\">7.2.14</span>#sec-islessthan IsLessThan ( x, y, LeftFirst )</h1>...</div><div id=\"excluded-sec-islooselyequal\"><h1><span class=\"secnum\">7.2.15</span>#sec-islooselyequal IsLooselyEqual ( x, y )</h1>...</div><div id=\"excluded-sec-isstrictlyequal\"><h1><span class=\"secnum\">7.2.16</span>#sec-isstrictlyequal IsStrictlyEqual ( x, y )</h1>...</div></emu-clause>\n\n  "}, "sec-imports": {"num": "16.2.2", "title": "#sec-imports Imports", "html": "<emu-clause id=\"sec-imports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports\">#sec-imports</span> Imports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ImportDeclaration\" id=\"prod-ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-WzAgO-V_\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"odcuzpbi\" id=\"prod-CDGJVPkq\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportClause\" id=\"prod-ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oi8izote\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"81tm-dw4\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"zfagpfvq\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"y9r1l58g\" id=\"prod-kEa0XgB6\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ih8rgsdx\" id=\"prod-wyOKxI9w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedDefaultBinding\" id=\"prod-ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-XiX5S_vU\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NameSpaceImport\" id=\"prod-NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-AScJop1Y\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"NamedImports\" id=\"prod-NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SkqVKtrZ\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"g1js-lhi\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"bxjtogxx\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FromClause\" id=\"prod-FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rev6es22\">\n        <emu-t>from</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportsList\" id=\"prod-ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"upllvvnq\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ggcfvgot\" id=\"prod-UCgvcMcb\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ImportSpecifier\" id=\"prod-ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-5TmWi69r\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"nso-0w0x\" id=\"prod-7GW8ul0v\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ModuleSpecifier\" id=\"prod-ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-sCJUL89L\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ImportedBinding\" id=\"prod-ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ni7cnis3\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-imports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.2.1</span>#sec-imports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-importentries\"><h1><span class=\"secnum\">16.2.2.2</span>#sec-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-importentriesformodule\"><h1><span class=\"secnum\">16.2.2.3</span>#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-stringvalue": {"num": "13.1.2", "title": "#sec-static-semantics-stringvalue Static Semantics: StringValue", "html": "<emu-clause id=\"sec-static-semantics-stringvalue\" oldids=\"sec-identifiers-static-semantics-stringvalue,sec-identifier-names-static-semantics-stringvalue\" type=\"sdo\" aoid=\"StringValue\"><span id=\"sec-identifier-names-static-semantics-stringvalue\"></span><span id=\"sec-identifiers-static-semantics-stringvalue\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-stringvalue\">#sec-static-semantics-stringvalue</span> Static Semantics: StringValue</h1>\n      <p>The syntax-directed operation StringValue takes no arguments. It is defined piecewise over the following productions:</p>\n      <emu-grammar><emu-production name=\"IdentifierName\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"q0afq8g8\" id=\"prod-tbqchaHr\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cawc7ktu\" id=\"prod-NS6rHu2W\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>idTextUnescaped</var> be <emu-xref aoid=\"IdentifierCodePoints\"><a href=\"#sec-identifiercodepoints\">IdentifierCodePoints</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"CodePointsToString\"><a href=\"#sec-codepointstostring\">CodePointsToString</a></emu-xref>(<var>idTextUnescaped</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-TEe-WTI-\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-ZpP1WoNY\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"LabelIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\" id=\"prod-APZnd9XH\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>\"yield\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"IdentifierReference\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-ov5ki9Up\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-fu2iq4OH\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"LabelIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hx1dvlrw\" id=\"prod-z0WsNljd\"><emu-t>await</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>\"await\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"Identifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"v6xddc2h\" id=\"prod-3LDrFiW5\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> <emu-gmod>but not <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"PrivateIdentifier\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"echyiakf\" id=\"prod-nzu557qc\">\n        <emu-t>#</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of 0x0023 (NUMBER SIGN) and the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ModuleExportName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-Vk-n5Kcs\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return the <emu-xref aoid=\"SV\"><a href=\"#sec-static-semantics-sv\">SV</a></emu-xref> of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-static-semantics-referencedbindings": {"num": "16.2.3.6", "title": "#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings", "html": "<emu-clause id=\"sec-static-semantics-referencedbindings\" type=\"sdo\" aoid=\"ReferencedBindings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-referencedbindings\">#sec-static-semantics-referencedbindings</span> Static Semantics: ReferencedBindings</h1>\n        <p>The syntax-directed operation ReferencedBindings takes no arguments. It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SuOfrU8K\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-eGw90zQ9\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hbgjxuav\" id=\"prod-tdM6ZJNC\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ReferencedBindings\"><a href=\"#sec-static-semantics-referencedbindings\">ReferencedBindings</a></emu-xref> of the first <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleExportName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-YJpWFrW7\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleExportName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-hGf2GDb1\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-exportentriesformodule": {"num": "16.2.3.5", "title": "#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-exportentriesformodule\" type=\"sdo\" aoid=\"ExportEntriesForModule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportentriesformodule\">#sec-static-semantics-exportentriesformodule</span> Static Semantics: ExportEntriesForModule</h1>\n        <p>The syntax-directed operation ExportEntriesForModule takes argument <var>module</var>. It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-Xa_xAKMV\"><emu-t>*</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-const>all-but-default</emu-const>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <emu-val>null</emu-val> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hf05qfgg\" id=\"prod-1scalAlY\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-const>all</emu-const>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-mzZ83dVi\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-zadzACBk\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>specs1</var> be the <emu-xref aoid=\"ExportEntriesForModule\"><a href=\"#sec-static-semantics-exportentriesformodule\">ExportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>specs2</var> be the <emu-xref aoid=\"ExportEntriesForModule\"><a href=\"#sec-static-semantics-exportentriesformodule\">ExportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>specs1</var> and <var>specs2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6isvnzvv\" id=\"prod-IZvnHgpZ\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>sourceName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hbgjxuav\" id=\"prod-WH6U71Y1\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the first <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>Let <var>exportName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the second <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports": {"num": "16.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"rudz_osj\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"cshvsnoo\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"pkwjy2r6\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"hf5nsghg\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, +Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, +Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"33r7jf_e\" id=\"prod-GUPXSqcT\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, +Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"hf05qfgg\" id=\"prod-N6rwTU5m\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6isvnzvv\" id=\"prod-8GGKXwjI\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"hbgjxuav\" id=\"prod-ya486nM7\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-exportedbindings\"><h1><span class=\"secnum\">16.2.3.2</span>#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.3.3</span>#sec-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.3.4</span>#sec-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">16.2.3.5</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">16.2.3.6</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.3.7</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-importentriesformodule": {"num": "16.2.2.3", "title": "#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-importentriesformodule\" type=\"sdo\" aoid=\"ImportEntriesForModule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-importentriesformodule\">#sec-static-semantics-importentriesformodule</span> Static Semantics: ImportEntriesForModule</h1>\n        <p>The syntax-directed operation ImportEntriesForModule takes argument <var>module</var>. It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"y9r1l58g\" id=\"prod-ejkMSdRd\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>entries1</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>entries2</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>entries1</var> and <var>entries2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ih8rgsdx\" id=\"prod-0jSzNM4w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>entries1</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>entries2</var> be <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>entries1</var> and <var>entries2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportedDefaultBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-8iON-ECl\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>defaultEntry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"default\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>defaultEntry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NameSpaceImport\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-UUrB05kM\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-const>namespace-object</emu-const>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-Cg-QzVAj\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ggcfvgot\" id=\"prod-nXrDLJR0\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>specs1</var> be the <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> with argument <var>module</var>.</li><li>Let <var>specs2</var> be the <emu-xref aoid=\"ImportEntriesForModule\"><a href=\"#sec-static-semantics-importentriesformodule\">ImportEntriesForModule</a></emu-xref> of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>specs1</var> and <var>specs2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-EknrR_3b\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>localName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"nso-0w0x\" id=\"prod-iQJyYMlU\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li><li>Let <var>localName</var> be the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-static-semantics-exportedbindings": {"num": "16.2.3.2", "title": "#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings", "html": "<emu-clause id=\"sec-static-semantics-exportedbindings\" oldids=\"sec-module-semantics-static-semantics-exportedbindings,sec-exports-static-semantics-exportedbindings\" type=\"sdo\" aoid=\"ExportedBindings\"><span id=\"sec-exports-static-semantics-exportedbindings\"></span><span id=\"sec-module-semantics-static-semantics-exportedbindings\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportedbindings\">#sec-static-semantics-exportedbindings</span> Static Semantics: ExportedBindings</h1>\n        <p>The syntax-directed operation ExportedBindings takes no arguments.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ExportedBindings are the locally bound names that are explicitly associated with a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>'s <emu-xref aoid=\"ExportedNames\"><a href=\"#sec-static-semantics-exportednames\">ExportedNames</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>It is defined piecewise over the following productions:</p>\n        <emu-grammar><emu-production name=\"ModuleItemList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd23jrxs\" id=\"prod-hxF0P9sA\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.</li><li>Let <var>names2</var> be <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-_KDGI2fs\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"15hryu6r\" id=\"prod-ExniQRjB\"><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-V3c4HtRK\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j2lh_kda\" id=\"prod-OFghu2j_\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bg3oaw2m\" id=\"prod-IJxf-Cdm\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"go9a4xdq\" id=\"prod-PahxJv8L\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cdfbfvfu\" id=\"prod-Ltk1AbDn\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"w8pljwgc\" id=\"prod-kSrXZybF\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"4f6ct71n\" id=\"prod-tftEFTtX\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref aoid=\"BoundNames\"><a href=\"#sec-static-semantics-boundnames\">BoundNames</a></emu-xref> of this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-TQTcajTg\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gqfndot_\" id=\"prod-2N5gUMor\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>names1</var> be the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Let <var>names2</var> be the <emu-xref aoid=\"ExportedBindings\"><a href=\"#sec-static-semantics-exportedbindings\">ExportedBindings</a></emu-xref> of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return the <emu-xref href=\"#list-concatenation\"><a href=\"#list-concatenation\">list-concatenation</a></emu-xref> of <var>names1</var> and <var>names2</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6isvnzvv\" id=\"prod-XDdQfOn3\"><emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hbgjxuav\" id=\"prod-Hr-D5Mzb\">\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of the first <emu-nt><a href=\"#prod-ModuleExportName\">ModuleExportName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}}