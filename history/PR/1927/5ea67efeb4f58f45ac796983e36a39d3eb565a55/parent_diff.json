{"from": {"secList": ["sec-gettemplateobject", "sec-static-semantics-template-early-errors", "sec-static-semantics-templatestrings"], "secData": {"sec-gettemplateobject": {"num": "12.2.9.4", "title": "#sec-gettemplateobject Runtime Semantics: GetTemplateObject ( templateLiteral )", "html": "<emu-clause id=\"sec-gettemplateobject\" aoid=\"GetTemplateObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-gettemplateobject\">#sec-gettemplateobject</span> Runtime Semantics: GetTemplateObject ( <var>templateLiteral</var> )</h1>\n        <p>The abstract operation GetTemplateObject is called with a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, <var>templateLiteral</var>, as an argument. It performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>rawStrings</var> be TemplateStrings of <var>templateLiteral</var> with argument <emu-val>true</emu-val>.</li><li>Let <var>realm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>templateRegistry</var> be <var>realm</var>.[[TemplateMap]].</li><li>For each element <var>e</var> of <var>templateRegistry</var>, do<ol><li>If <var>e</var>.[[Site]] is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">the same Parse Node</a></emu-xref> as <var>templateLiteral</var>, then<ol><li>Return <var>e</var>.[[Array]].</li></ol></li></ol></li><li>Let <var>cookedStrings</var> be TemplateStrings of <var>templateLiteral</var> with argument <emu-val>false</emu-val>.</li><li>Let <var>count</var> be the number of elements in the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>cookedStrings</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>count</var> &#8804; 2<sup>32</sup> - 1.</li><li>Let <var>template</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>count</var>).</li><li>Let <var>rawObj</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>count</var>).</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>count</var><ol><li>Let <var>prop</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>).</li><li>Let <var>cookedValue</var> be the String value <var>cookedStrings</var>[<var>index</var>].</li><li>Call <var>template</var>.[[DefineOwnProperty]](<var>prop</var>, PropertyDescriptor { [[Value]]: <var>cookedValue</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Let <var>rawValue</var> be the String value <var>rawStrings</var>[<var>index</var>].</li><li>Call <var>rawObj</var>.[[DefineOwnProperty]](<var>prop</var>, PropertyDescriptor { [[Value]]: <var>rawValue</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform <emu-xref aoid=\"SetIntegrityLevel\"><a href=\"#sec-setintegritylevel\">SetIntegrityLevel</a></emu-xref>(<var>rawObj</var>, <emu-const>frozen</emu-const>).</li><li>Call <var>template</var>.[[DefineOwnProperty]](<emu-val>\"raw\"</emu-val>, PropertyDescriptor { [[Value]]: <var>rawObj</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Perform <emu-xref aoid=\"SetIntegrityLevel\"><a href=\"#sec-setintegritylevel\">SetIntegrityLevel</a></emu-xref>(<var>template</var>, <emu-const>frozen</emu-const>).</li><li>Append the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Site]]: <var>templateLiteral</var>, [[Array]]: <var>template</var> } to <var>templateRegistry</var>.</li><li>Return <var>template</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The creation of a template object cannot result in an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Each <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt> in the program code of a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> is associated with a unique template object that is used in the evaluation of tagged Templates (<emu-xref href=\"#sec-template-literals-runtime-semantics-evaluation\"><a href=\"#sec-template-literals-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-template-literals-runtime-semantics-evaluation\">#sec-template-literals-runtime-semantics-evaluation</a></emu-xref>). The template objects are frozen and the same template object is used each time a specific tagged Template is evaluated. Whether template objects are created lazily upon first evaluation of the <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt> or eagerly prior to first evaluation is an implementation choice that is not observable to ECMAScript code.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>Future editions of this specification may define additional non-enumerable properties of template objects.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-static-semantics-template-early-errors": {"num": "12.2.9.1", "title": "#sec-static-semantics-template-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-static-semantics-template-early-errors\" oldids=\"sec-primary-expression-template-literals-static-semantics-early-errors\">\n        <span id=\"sec-primary-expression-template-literals-static-semantics-early-errors\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-template-early-errors\">#sec-static-semantics-template-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" params=\"Yield, Await, Tagged\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the number of elements in the result of TemplateStrings of <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt> with argument <emu-val>false</emu-val> is greater than 2<sup>32</sup> - 1.\n          \n          </li>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" params=\"Yield, Await, Tagged\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"069aff93\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-nt params=\"?Yield, ?Await, ?Tagged\"><a href=\"#prod-TemplateSpans\">TemplateSpans</a><emu-mods><emu-params>[?Yield, ?Await, ?Tagged]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"TemplateSpans\" params=\"Yield, Await, Tagged\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-TemplateSpans\">TemplateSpans</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" params=\"Yield, Await, Tagged\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"db7fc148\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6dd46bd2\"><emu-nt params=\"?Yield, ?Await, ?Tagged\"><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a><emu-mods><emu-params>[?Yield, ?Await, ?Tagged]</emu-params></emu-mods></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-static-semantics-templatestrings": {"num": "12.2.9.2", "title": "#sec-static-semantics-templatestrings Static Semantics: TemplateStrings", "html": "<emu-clause id=\"sec-static-semantics-templatestrings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-templatestrings\">#sec-static-semantics-templatestrings</span> Static Semantics: TemplateStrings</h1>\n        <p>With parameter <var>raw</var>.</p>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>string</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>head</var> be the TRV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Let <var>tail</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt> with argument <var>raw</var>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>head</var> followed by the elements, in order, of <var>tail</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>tail</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>middle</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the elements, in order, of <var>middle</var> followed by <var>tail</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>string</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>front</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>last</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>last</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Append <var>last</var> as the last element of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>front</var>.</li><li>Return <var>front</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-gettemplateobject", "sec-static-semantics-template-early-errors", "sec-static-semantics-templatestrings"], "secData": {"sec-gettemplateobject": {"num": "12.2.9.4", "title": "#sec-gettemplateobject Runtime Semantics: GetTemplateObject ( templateLiteral )", "html": "<emu-clause id=\"sec-gettemplateobject\" aoid=\"GetTemplateObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-gettemplateobject\">#sec-gettemplateobject</span> Runtime Semantics: GetTemplateObject ( <var>templateLiteral</var> )</h1>\n        <p>The abstract operation GetTemplateObject is called with a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, <var>templateLiteral</var>, as an argument. It performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>rawStrings</var> be <emu-xref aoid=\"TemplateStrings\"><a href=\"#sec-static-semantics-templatestrings\">TemplateStrings</a></emu-xref> of <var>templateLiteral</var> with argument <emu-val>true</emu-val>.</li><li>Let <var>realm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>templateRegistry</var> be <var>realm</var>.[[TemplateMap]].</li><li>For each element <var>e</var> of <var>templateRegistry</var>, do<ol><li>If <var>e</var>.[[Site]] is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">the same Parse Node</a></emu-xref> as <var>templateLiteral</var>, then<ol><li>Return <var>e</var>.[[Array]].</li></ol></li></ol></li><li>Let <var>cookedStrings</var> be <emu-xref aoid=\"TemplateStrings\"><a href=\"#sec-static-semantics-templatestrings\">TemplateStrings</a></emu-xref> of <var>templateLiteral</var> with argument <emu-val>false</emu-val>.</li><li>Let <var>count</var> be the number of elements in the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>cookedStrings</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>count</var> &#8804; 2<sup>32</sup> - 1.</li><li>Let <var>template</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>count</var>).</li><li>Let <var>rawObj</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>count</var>).</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>count</var><ol><li>Let <var>prop</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>).</li><li>Let <var>cookedValue</var> be the String value <var>cookedStrings</var>[<var>index</var>].</li><li>Call <var>template</var>.[[DefineOwnProperty]](<var>prop</var>, PropertyDescriptor { [[Value]]: <var>cookedValue</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Let <var>rawValue</var> be the String value <var>rawStrings</var>[<var>index</var>].</li><li>Call <var>rawObj</var>.[[DefineOwnProperty]](<var>prop</var>, PropertyDescriptor { [[Value]]: <var>rawValue</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform <emu-xref aoid=\"SetIntegrityLevel\"><a href=\"#sec-setintegritylevel\">SetIntegrityLevel</a></emu-xref>(<var>rawObj</var>, <emu-const>frozen</emu-const>).</li><li>Call <var>template</var>.[[DefineOwnProperty]](<emu-val>\"raw\"</emu-val>, PropertyDescriptor { [[Value]]: <var>rawObj</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Perform <emu-xref aoid=\"SetIntegrityLevel\"><a href=\"#sec-setintegritylevel\">SetIntegrityLevel</a></emu-xref>(<var>template</var>, <emu-const>frozen</emu-const>).</li><li>Append the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Site]]: <var>templateLiteral</var>, [[Array]]: <var>template</var> } to <var>templateRegistry</var>.</li><li>Return <var>template</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The creation of a template object cannot result in an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Each <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt> in the program code of a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> is associated with a unique template object that is used in the evaluation of tagged Templates (<emu-xref href=\"#sec-template-literals-runtime-semantics-evaluation\"><a href=\"#sec-template-literals-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-template-literals-runtime-semantics-evaluation\">#sec-template-literals-runtime-semantics-evaluation</a></emu-xref>). The template objects are frozen and the same template object is used each time a specific tagged Template is evaluated. Whether template objects are created lazily upon first evaluation of the <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt> or eagerly prior to first evaluation is an implementation choice that is not observable to ECMAScript code.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>Future editions of this specification may define additional non-enumerable properties of template objects.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-static-semantics-template-early-errors": {"num": "12.2.9.1", "title": "#sec-static-semantics-template-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-static-semantics-template-early-errors\" oldids=\"sec-primary-expression-template-literals-static-semantics-early-errors\">\n        <span id=\"sec-primary-expression-template-literals-static-semantics-early-errors\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-template-early-errors\">#sec-static-semantics-template-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" params=\"Yield, Await, Tagged\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the number of elements in the result of <emu-xref aoid=\"TemplateStrings\"><a href=\"#sec-static-semantics-templatestrings\">TemplateStrings</a></emu-xref> of <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt> with argument <emu-val>false</emu-val> is greater than 2<sup>32</sup> - 1.\n          \n          </li>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" params=\"Yield, Await, Tagged\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"069aff93\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-nt params=\"?Yield, ?Await, ?Tagged\"><a href=\"#prod-TemplateSpans\">TemplateSpans</a><emu-mods><emu-params>[?Yield, ?Await, ?Tagged]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"TemplateSpans\" params=\"Yield, Await, Tagged\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-TemplateSpans\">TemplateSpans</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" params=\"Yield, Await, Tagged\">\n    <emu-nt params=\"Yield, Await, Tagged\"><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a><emu-mods><emu-params>[Yield, Await, Tagged]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"db7fc148\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6dd46bd2\"><emu-nt params=\"?Yield, ?Await, ?Tagged\"><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a><emu-mods><emu-params>[?Yield, ?Await, ?Tagged]</emu-params></emu-mods></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the  <sub>[Tagged]</sub> parameter was not set and <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt> Contains <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt>.\n          \n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-static-semantics-templatestrings": {"num": "12.2.9.2", "title": "#sec-static-semantics-templatestrings Static Semantics: TemplateStrings", "html": "<emu-clause id=\"sec-static-semantics-templatestrings\" aoid=\"TemplateStrings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-templatestrings\">#sec-static-semantics-templatestrings</span> Static Semantics: TemplateStrings</h1>\n        <p>With parameter <var>raw</var>.</p>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>string</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>head</var> be the TRV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Let <var>tail</var> be <emu-xref aoid=\"TemplateStrings\"><a href=\"#sec-static-semantics-templatestrings\">TemplateStrings</a></emu-xref> of <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt> with argument <var>raw</var>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>head</var> followed by the elements, in order, of <var>tail</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>tail</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>middle</var> be <emu-xref aoid=\"TemplateStrings\"><a href=\"#sec-static-semantics-templatestrings\">TemplateStrings</a></emu-xref> of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the elements, in order, of <var>middle</var> followed by <var>tail</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>string</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>front</var> be <emu-xref aoid=\"TemplateStrings\"><a href=\"#sec-static-semantics-templatestrings\">TemplateStrings</a></emu-xref> of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>last</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>last</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Append <var>last</var> as the last element of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>front</var>.</li><li>Return <var>front</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}}