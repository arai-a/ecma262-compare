{"from": {"secList": ["sec-integer-indexed-exotic-objects-delete-p", "sec-integerindexedelementset", "sec-integer-indexed-exotic-objects-ownpropertykeys", "sec-integerindexedelementget", "sec-integer-indexed-exotic-objects-hasproperty-p", "sec-isvalidintegerindex"], "secData": {"sec-integer-indexed-exotic-objects-delete-p": {"num": "9.4.5.6", "title": "#sec-integer-indexed-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-delete-p\">#sec-integer-indexed-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>When the [[Delete]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]]) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integerindexedelementset": {"num": "9.4.5.11", "title": "#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )", "html": "<emu-clause id=\"sec-integerindexedelementset\" aoid=\"IntegerIndexedElementSet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementset\">#sec-integerindexedelementset</span> IntegerIndexedElementSet ( <var>O</var>, <var>index</var>, <var>value</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementSet takes arguments <var>O</var>, <var>index</var> (a Number), and <var>value</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <var>O</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>numValue</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-integer-indexed-exotic-objects-ownpropertykeys": {"num": "9.4.5.7", "title": "#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>len</var>, in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>)) as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integerindexedelementget": {"num": "9.4.5.10", "title": "#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )", "html": "<emu-clause id=\"sec-integerindexedelementget\" aoid=\"IntegerIndexedElementGet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementget\">#sec-integerindexedelementget</span> IntegerIndexedElementGet ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementGet takes arguments <var>O</var> and <var>index</var> (a Number). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-hasproperty-p": {"num": "9.4.5.2", "title": "#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>When the [[HasProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-isvalidintegerindex": {"num": "9.4.5.9", "title": "#sec-isvalidintegerindex IsValidIntegerIndex ( O, index )", "html": "<emu-clause id=\"sec-isvalidintegerindex\" aoid=\"IsValidIntegerIndex\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isvalidintegerindex\">#sec-isvalidintegerindex</span> IsValidIntegerIndex ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IsValidIntegerIndex takes arguments <var>O</var> and <var>index</var> (a Number). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If !&#160;<emu-xref aoid=\"IsIntegralNumber\"><a href=\"#sec-isintegralnumber\">IsIntegralNumber</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> is <emu-val>-0</emu-val><sub>&#120125;</sub>, return <emu-val>false</emu-val>.</li><li>If <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &lt; 0 or <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &#8805; <var>O</var>.[[ArrayLength]], return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}, "to": {"secList": ["sec-integer-indexed-exotic-objects-delete-p", "sec-integerindexedelementset", "sec-integer-indexed-exotic-objects-ownpropertykeys", "sec-integerindexedelementget", "sec-integer-indexed-exotic-objects-hasproperty-p", "sec-isvalidintegerindex"], "secData": {"sec-integer-indexed-exotic-objects-delete-p": {"num": "9.4.5.6", "title": "#sec-integer-indexed-exotic-objects-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-delete-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-delete-p\">#sec-integer-indexed-exotic-objects-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n        <p>When the [[Delete]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>true</emu-val>; else return <emu-val>false</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryDelete\"><a href=\"#sec-ordinarydelete\">OrdinaryDelete</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integerindexedelementset": {"num": "9.4.5.11", "title": "#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )", "html": "<emu-clause id=\"sec-integerindexedelementset\" aoid=\"IntegerIndexedElementSet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementset\">#sec-integerindexedelementset</span> IntegerIndexedElementSet ( <var>O</var>, <var>index</var>, <var>value</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementSet takes arguments <var>O</var>, <var>index</var> (a Number), and <var>value</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <var>O</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]], <var>indexedPosition</var>, <var>elementType</var>, <var>numValue</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-integer-indexed-exotic-objects-ownpropertykeys": {"num": "9.4.5.7", "title": "#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]]) is <emu-val>false</emu-val>, then<ol><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>O</var>.[[ArrayLength]], in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>)) as the last element of <var>keys</var>.</li></ol></li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integerindexedelementget": {"num": "9.4.5.10", "title": "#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )", "html": "<emu-clause id=\"sec-integerindexedelementget\" aoid=\"IntegerIndexedElementGet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementget\">#sec-integerindexedelementget</span> IntegerIndexedElementGet ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementGet takes arguments <var>O</var> and <var>index</var> (a Number). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]], <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects-hasproperty-p": {"num": "9.4.5.2", "title": "#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>When the [[HasProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>).</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-isvalidintegerindex": {"num": "9.4.5.9", "title": "#sec-isvalidintegerindex IsValidIntegerIndex ( O, index )", "html": "<emu-clause id=\"sec-isvalidintegerindex\" aoid=\"IsValidIntegerIndex\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isvalidintegerindex\">#sec-isvalidintegerindex</span> IsValidIntegerIndex ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IsValidIntegerIndex takes arguments <var>O</var> and <var>index</var> (a Number). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(O.[[ViewedArrayBuffer]]) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsIntegralNumber\"><a href=\"#sec-isintegralnumber\">IsIntegralNumber</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> is <emu-val>-0</emu-val><sub>&#120125;</sub>, return <emu-val>false</emu-val>.</li><li>If <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &lt; 0 or <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>index</var>) &#8805; <var>O</var>.[[ArrayLength]], return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}}