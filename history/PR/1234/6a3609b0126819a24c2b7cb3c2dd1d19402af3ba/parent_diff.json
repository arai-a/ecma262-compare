{"from": {"secList": ["sec-properties-of-the-promise-prototype-object", "sec-properties-of-generator-prototype", "sec-generator-abstract-operations", "sec-asyncgenerator-objects", "sec-promise.prototype.then", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-generatorfunction-objects", "sec-newpromisecapability", "sec-asyncgeneratorfunction-constructor", "sec-properties-of-the-generatorfunction-prototype-object", "sec-asyncgenerator-abstract-operations", "sec-asyncgeneratorresumenext", "sec-promisecapability-records", "sec-generator-objects", "sec-promise-objects", "sec-asyncgeneratorfunction-instances", "sec-createresolvingfunctions", "sec-promise-abstract-operations", "sec-properties-of-asyncgeneratorfunction", "sec-promise.prototype.finally", "sec-generatorfunction-constructor", "sec-generatorfunction-instances", "sec-properties-of-the-generatorfunction-constructor", "sec-control-abstraction-objects", "sec-promise-constructor", "sec-promise.resolve", "sec-promise.race", "sec-promise.all", "sec-properties-of-the-promise-constructor", "sec-promise-jobs", "sec-properties-of-asyncgenerator-prototype", "sec-asyncgeneratorfunction-objects"], "secData": {"sec-properties-of-the-promise-prototype-object": {"num": "25.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>.</li>\n        <li>is an ordinary object.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <!-- es6num=\"25.4.5.1\" -->\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">25.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><!-- es6num=\"25.4.5.2\" -->\n      <div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">25.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">25.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><!-- es6num=\"25.4.5.3\" -->\n      <div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">25.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><!-- es6num=\"25.4.5.4\" -->\n      <div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.6.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-generator-prototype": {"num": "25.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref> (the GeneratorFunction.prototype).</li>\n        <li>is an ordinary object.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <!-- es6num=\"25.3.1.1\" -->\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><!-- es6num=\"25.3.1.2\" -->\n      <div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><!-- es6num=\"25.3.1.3\" -->\n      <div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><!-- es6num=\"25.3.1.4\" -->\n      <div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><!-- es6num=\"25.3.1.5\" -->\n      <div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-generator-abstract-operations": {"num": "25.4.3", "title": "#sec-generator-abstract-operations Generator Abstract Operations", "html": "<emu-clause id=\"sec-generator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-abstract-operations\">#sec-generator-abstract-operations</span> Generator Abstract Operations</h1>\n\n      <!-- es6num=\"25.3.3.1\" -->\n      <div id=\"excluded-sec-generatorstart\"><h1><span class=\"secnum\">25.4.3.1</span>#sec-generatorstart GeneratorStart ( generator, generatorBody )</h1>...</div><!-- es6num=\"25.3.3.2\" -->\n      <div id=\"excluded-sec-generatorvalidate\"><h1><span class=\"secnum\">25.4.3.2</span>#sec-generatorvalidate GeneratorValidate ( generator )</h1>...</div><!-- es6num=\"25.3.3.3\" -->\n      <div id=\"excluded-sec-generatorresume\"><h1><span class=\"secnum\">25.4.3.3</span>#sec-generatorresume GeneratorResume ( generator, value )</h1>...</div><!-- es6num=\"25.3.3.4\" -->\n      <div id=\"excluded-sec-generatorresumeabrupt\"><h1><span class=\"secnum\">25.4.3.4</span>#sec-generatorresumeabrupt GeneratorResumeAbrupt ( generator, abruptCompletion )</h1>...</div><div id=\"excluded-sec-getgeneratorkind\"><h1><span class=\"secnum\">25.4.3.5</span>#sec-getgeneratorkind GetGeneratorKind ( )</h1>...</div><!-- es6num=\"25.3.3.5\" -->\n      <div id=\"excluded-sec-generatoryield\"><h1><span class=\"secnum\">25.4.3.6</span>#sec-generatoryield GeneratorYield ( iterNextObj )</h1>...</div></emu-clause>\n  "}, "sec-asyncgenerator-objects": {"num": "25.5", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the value of the <code>prototype</code> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">25.5.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">25.5.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">25.5.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-promise.prototype.then": {"num": "25.6.5.4", "title": "#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )", "html": "<emu-clause id=\"sec-promise.prototype.then\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</span> Promise.prototype.then ( <var>onFulfilled</var>, <var>onRejected</var> )</h1>\n        <p>When the <code>then</code> method is called with arguments <var>onFulfilled</var> and <var>onRejected</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsPromise\"><a href=\"#sec-ispromise\">IsPromise</a></emu-xref>(<var>promise</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Let <var>resultCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Return <emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>, <var>resultCapability</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%PromiseProto_then%</dfn> intrinsic object.</p>\n\n        <!-- es6num=\"25.4.5.3.1\" -->\n        <div id=\"excluded-sec-performpromisethen\"><h1><span class=\"secnum\">25.6.5.4.1</span>#sec-performpromisethen PerformPromiseThen ( promise, onFulfilled, onRejected, resultCapability )</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-objects": {"num": "25.2", "title": "#sec-generatorfunction-objects GeneratorFunction Objects", "html": "<emu-clause id=\"sec-generatorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-objects\">#sec-generatorfunction-objects</span> GeneratorFunction Objects</h1>\n    <p>GeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>s, and <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref> intrinsic.</p>\n    <emu-figure id=\"figure-2\" caption=\"Generator Objects Relationships\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-2\">#figure-2</span> (Informative): Generator Objects Relationships</figcaption>\n      <img alt=\"A staggering variety of boxes and arrows.\" src=\"img/figure-2.png\">\n    </figure></emu-figure>\n\n    <!-- es6num=\"25.2.1\" -->\n    <div id=\"excluded-sec-generatorfunction-constructor\"><h1><span class=\"secnum\">25.2.1</span>#sec-generatorfunction-constructor The GeneratorFunction Constructor</h1>...</div><!-- es6num=\"25.2.2\" -->\n    <div id=\"excluded-sec-properties-of-the-generatorfunction-constructor\"><h1><span class=\"secnum\">25.2.2</span>#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor</h1>...</div><!-- es6num=\"25.2.3\" -->\n    <div id=\"excluded-sec-properties-of-the-generatorfunction-prototype-object\"><h1><span class=\"secnum\">25.2.3</span>#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object</h1>...</div><!-- es6num=\"25.2.4\" -->\n    <div id=\"excluded-sec-generatorfunction-instances\"><h1><span class=\"secnum\">25.2.4</span>#sec-generatorfunction-instances GeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-newpromisecapability": {"num": "25.6.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" aoid=\"NewPromiseCapability\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function, and attempts to use that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function in the fashion of the built-in <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its resolve and reject functions. The promise plus the resolve and reject functions are used to initialize a new PromiseCapability <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> which is returned as the value of this abstract operation.</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be a new PromiseCapability { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-getcapabilitiesexecutor-functions\" title=\"\"><a href=\"#sec-getcapabilitiesexecutor-functions\">GetCapabilitiesExecutor Functions</a></emu-xref>.</li><li>Let <var>executor</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[Capability]] &#187;).</li><li>Set <var>executor</var>.[[Capability]] to <var>promiseCapability</var>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n\n        <!-- es6num=\"25.4.1.5.1\" -->\n        <div id=\"excluded-sec-getcapabilitiesexecutor-functions\"><h1><span class=\"secnum\">25.6.1.5.1</span>#sec-getcapabilitiesexecutor-functions GetCapabilitiesExecutor Functions</h1>...</div></emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-constructor": {"num": "25.3.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>AsyncGeneratorFunction</code> behaviour must include a <code>super</code> call to the <code>AsyncGeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of <code>AsyncGeneratorFunction</code>. There is no syntactic means to create instances of <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.3.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, ..., pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%Generator%</dfn> (see Figure 2).</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>.</li>\n      </ul>\n\n      <!-- es6num=\"25.2.3.1\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><!-- es6num=\"25.2.3.2\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><!-- es6num=\"25.2.3.3\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgenerator-abstract-operations": {"num": "25.5.3", "title": "#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations", "html": "<emu-clause id=\"sec-asyncgenerator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-abstract-operations\">#sec-asyncgenerator-abstract-operations</span> AsyncGenerator Abstract Operations</h1>\n      <div id=\"excluded-sec-asyncgeneratorrequest-records\"><h1><span class=\"secnum\">25.5.3.1</span>#sec-asyncgeneratorrequest-records AsyncGeneratorRequest Records</h1>...</div><div id=\"excluded-sec-asyncgeneratorstart\"><h1><span class=\"secnum\">25.5.3.2</span>#sec-asyncgeneratorstart AsyncGeneratorStart ( generator, generatorBody )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresolve\"><h1><span class=\"secnum\">25.5.3.3</span>#sec-asyncgeneratorresolve AsyncGeneratorResolve ( generator, value, done )</h1>...</div><div id=\"excluded-sec-asyncgeneratorreject\"><h1><span class=\"secnum\">25.5.3.4</span>#sec-asyncgeneratorreject AsyncGeneratorReject ( generator, exception )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresumenext\"><h1><span class=\"secnum\">25.5.3.5</span>#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )</h1>...</div><div id=\"excluded-sec-asyncgeneratorenqueue\"><h1><span class=\"secnum\">25.5.3.6</span>#sec-asyncgeneratorenqueue AsyncGeneratorEnqueue ( generator, completion )</h1>...</div><div id=\"excluded-sec-asyncgeneratoryield\"><h1><span class=\"secnum\">25.5.3.7</span>#sec-asyncgeneratoryield AsyncGeneratorYield ( value )</h1>...</div></emu-clause>\n  "}, "sec-asyncgeneratorresumenext": {"num": "25.5.3.5", "title": "#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )", "html": "<emu-clause id=\"sec-asyncgeneratorresumenext\" aoid=\"AsyncGeneratorResumeNext\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorresumenext\">#sec-asyncgeneratorresumenext</span> AsyncGeneratorResumeNext ( <var>generator</var> )</h1>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>generator</var> is an AsyncGenerator instance.</li><li>Let <var>state</var> be <var>generator</var>.[[AsyncGeneratorState]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is not <code>\"executing\"</code>.</li><li>If <var>state</var> is <code>\"awaiting-return\"</code>, return <emu-val>undefined</emu-val>.</li><li>Let <var>queue</var> be <var>generator</var>.[[AsyncGeneratorQueue]].</li><li>If <var>queue</var> is an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, return <emu-val>undefined</emu-val>.</li><li>Let <var>next</var> be the value of the first element of <var>queue</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>next</var> is an AsyncGeneratorRequest record.</li><li>Let <var>completion</var> be <var>next</var>.[[Completion]].</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>state</var> is <code>\"suspendedStart\"</code>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <code>\"completed\"</code>.</li><li>Set <var>state</var> to <code>\"completed\"</code>.</li></ol></li><li>If <var>state</var> is <code>\"completed\"</code>, then<ol><li>If <var>completion</var>.[[Type]] is <emu-const>return</emu-const>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <code>\"awaiting-return\"</code>.</li><li>Let <var>promiseCapability</var> be !&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>, &#171; <var>completion</var>.[[Value]] &#187;).</li><li>Let <var>stepsFulfilled</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-fulfilled\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-fulfilled\">AsyncGeneratorResumeNext Return Processor Fulfilled Functions</a></emu-xref>.</li><li>Let <var>onFulfilled</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsFulfilled</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onFulfilled</var>.[[Generator]] to <var>generator</var>.</li><li>Let <var>stepsRejected</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-rejected\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-rejected\">AsyncGeneratorResumeNext Return Processor Rejected Functions</a></emu-xref>.</li><li>Let <var>onRejected</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsRejected</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onRejected</var>.[[Generator]] to <var>generator</var>.</li><li>Let <var>throwawayCapability</var> be !&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Set <var>throwawayCapability</var>.[[Promise]].[[PromiseIsHandled]] to <emu-val>true</emu-val>.</li><li>Perform !&#160;<emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promiseCapability</var>.[[Promise]], <var>onFulfilled</var>, <var>onRejected</var>, <var>throwawayCapability</var>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>completion</var>.[[Type]] is <emu-const>throw</emu-const>.</li><li>Perform !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>generator</var>, <var>completion</var>.[[Value]]).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li></ol></li></ol></li><li>Else if <var>state</var> is <code>\"completed\"</code>, return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>generator</var>, <emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is either <code>\"suspendedStart\"</code> or <code>\"suspendedYield\"</code>.</li><li>Let <var>genContext</var> be <var>generator</var>.[[AsyncGeneratorContext]].</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> <var>callerContext</var>.</li><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <code>\"executing\"</code>.</li><li>Push <var>genContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>genContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Resume the suspended evaluation of <var>genContext</var> using <var>completion</var> as the result of the operation that suspended it. Let <var>result</var> be the completion record returned by the resumed computation.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> is never an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When we return here, <var>genContext</var> has already been removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and <var>callerContext</var> is the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-val>undefined</emu-val>.\n        </li></ol></emu-alg>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-fulfilled\">\n          <h1><span class=\"secnum\">25.5.3.5.1</span> AsyncGeneratorResumeNext Return Processor Fulfilled Functions</h1>\n\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the  <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function has a [[Generator]] internal slot.</p>\n\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function <var>F</var> is called with argument <var>value</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <code>\"completed\"</code>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>F</var>.[[Generator]], <var>value</var>, <emu-val>true</emu-val>).\n          </li></ol></emu-alg>\n\n          <p>The <code>length</code> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is 1.</p>\n        </emu-clause>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-rejected\">\n          <h1><span class=\"secnum\">25.5.3.5.2</span> AsyncGeneratorResumeNext Return Processor Rejected Functions</h1>\n\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the  <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function has a [[Generator]] internal slot.</p>\n\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function <var>F</var> is called with argument <var>reason</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <code>\"completed\"</code>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>F</var>.[[Generator]], <var>reason</var>).\n          </li></ol></emu-alg>\n\n          <p>The <code>length</code> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is 1.</p>\n        </emu-clause>\n      </emu-clause>\n\n      "}, "sec-promisecapability-records": {"num": "25.6.1.1", "title": "#sec-promisecapability-records PromiseCapability Records", "html": "<emu-clause id=\"sec-promisecapability-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promisecapability-records\">#sec-promisecapability-records</span> PromiseCapability Records</h1>\n        <p>A PromiseCapability is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value used to encapsulate a promise object along with the functions that are capable of resolving or rejecting that promise object. PromiseCapability Records are produced by the <emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref> abstract operation.</p>\n        <p>PromiseCapability Records have the fields listed in  <emu-xref href=\"#table-57\"><a href=\"#table-57\" class=\"excluded-xref\" excluded-id=\"table-57\">#table-57</a></emu-xref>.</p>\n        <emu-table id=\"table-57\" caption=\"PromiseCapability Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-57\">#table-57</span>: PromiseCapability <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Promise]]\n              \n              </td>\n              <td>\n                An object\n              \n              </td>\n              <td>\n                An object that is usable as a promise.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Resolve]]\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              \n              </td>\n              <td>\n                The function that is used to resolve the given promise object.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Reject]]\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              \n              </td>\n              <td>\n                The function that is used to reject the given promise object.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <!-- es6num=\"25.4.1.1.1\" -->\n        <div id=\"excluded-sec-ifabruptrejectpromise\"><h1><span class=\"secnum\">25.6.1.1.1</span>#sec-ifabruptrejectpromise IfAbruptRejectPromise ( value, capability )</h1>...</div></emu-clause>\n\n      "}, "sec-generator-objects": {"num": "25.4", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the  <i>Iterator</i> and  <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the value of the <code>prototype</code> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>.</p>\n\n    <!-- es6num=\"25.3.1\" -->\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">25.4.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><!-- es6num=\"25.3.2\" -->\n    <div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">25.4.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><!-- es6num=\"25.3.3\" -->\n    <div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">25.4.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-promise-objects": {"num": "25.6", "title": "#sec-promise-objects Promise Objects", "html": "<emu-clause id=\"sec-promise-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-objects\">#sec-promise-objects</span> Promise Objects</h1>\n    <p>A Promise is an object that is used as a placeholder for the eventual results of a deferred (and possibly asynchronous) computation.</p>\n    <p>Any Promise object is in one of three mutually exclusive states:  <em>fulfilled</em>,  <em>rejected</em>, and  <em>pending</em>:</p>\n    <ul>\n      <li>\n        A promise <code>p</code> is fulfilled if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"https://tc39.es/ecma262/#job\">Job</a></emu-xref> to call the function <code>f</code>.\n      \n      </li>\n      <li>\n        A promise <code>p</code> is rejected if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"https://tc39.es/ecma262/#job\">Job</a></emu-xref> to call the function <code>r</code>.\n      \n      </li>\n      <li>\n        A promise is pending if it is neither fulfilled nor rejected.\n      \n      </li>\n    </ul>\n    <p>A promise is said to be  <em>settled</em> if it is not pending, i.e. if it is either fulfilled or rejected.</p>\n    <p>A promise is  <em>resolved</em> if it is settled or if it has been &#8220;locked in&#8221; to match the state of another promise. Attempting to resolve or reject a resolved promise has no effect. A promise is  <em>unresolved</em> if it is not resolved. An unresolved promise is always in the pending state. A resolved promise may be pending, fulfilled or rejected.</p>\n\n    <!-- es6num=\"25.4.1\" -->\n    <div id=\"excluded-sec-promise-abstract-operations\"><h1><span class=\"secnum\">25.6.1</span>#sec-promise-abstract-operations Promise Abstract Operations</h1>...</div><!-- es6num=\"25.4.2\" -->\n    <div id=\"excluded-sec-promise-jobs\"><h1><span class=\"secnum\">25.6.2</span>#sec-promise-jobs Promise Jobs</h1>...</div><!-- es6num=\"25.4.3\" -->\n    <div id=\"excluded-sec-promise-constructor\"><h1><span class=\"secnum\">25.6.3</span>#sec-promise-constructor The Promise Constructor</h1>...</div><!-- es6num=\"25.4.4\" -->\n    <div id=\"excluded-sec-properties-of-the-promise-constructor\"><h1><span class=\"secnum\">25.6.4</span>#sec-properties-of-the-promise-constructor Properties of the Promise Constructor</h1>...</div><!-- es6num=\"25.4.5\" -->\n    <div id=\"excluded-sec-properties-of-the-promise-prototype-object\"><h1><span class=\"secnum\">25.6.5</span>#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object</h1>...</div><!-- es6num=\"25.4.6\" -->\n    <div id=\"excluded-sec-properties-of-promise-instances\"><h1><span class=\"secnum\">25.6.6</span>#sec-properties-of-promise-instances Properties of Promise Instances</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgeneratorfunction-instances": {"num": "25.3.4", "title": "#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instances\">#sec-asyncgeneratorfunction-instances</span> AsyncGeneratorFunction Instances</h1>\n      <p>Every AsyncGeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[FunctionKind]] internal slot for all such instances is <code>\"generator\"</code>.</p>\n      <p>Each AsyncGeneratorFunction instance has the following own properties:</p>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-instance-length\"><h1><span class=\"secnum\">25.3.4.1</span>#sec-asyncgeneratorfunction-instance-length length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-name\"><h1><span class=\"secnum\">25.3.4.2</span>#sec-asyncgeneratorfunction-instance-name name</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-prototype\"><h1><span class=\"secnum\">25.3.4.3</span>#sec-asyncgeneratorfunction-instance-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-createresolvingfunctions": {"num": "25.6.1.3", "title": "#sec-createresolvingfunctions CreateResolvingFunctions ( promise )", "html": "<emu-clause id=\"sec-createresolvingfunctions\" aoid=\"CreateResolvingFunctions\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createresolvingfunctions\">#sec-createresolvingfunctions</span> CreateResolvingFunctions ( <var>promise</var> )</h1>\n        <p>When CreateResolvingFunctions is performed with argument <var>promise</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>alreadyResolved</var> be a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Value]]: <emu-val>false</emu-val> }.</li><li>Let <var>stepsResolve</var> be the algorithm steps defined in Promise Resolve Functions (<emu-xref href=\"#sec-promise-resolve-functions\"><a href=\"#sec-promise-resolve-functions\" class=\"excluded-xref\" excluded-id=\"sec-promise-resolve-functions\">#sec-promise-resolve-functions</a></emu-xref>).</li><li>Let <var>resolve</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsResolve</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>resolve</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>resolve</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Let <var>stepsReject</var> be the algorithm steps defined in Promise Reject Functions (<emu-xref href=\"#sec-promise-reject-functions\"><a href=\"#sec-promise-reject-functions\" class=\"excluded-xref\" excluded-id=\"sec-promise-reject-functions\">#sec-promise-reject-functions</a></emu-xref>).</li><li>Let <var>reject</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsReject</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>reject</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>reject</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Resolve]]: <var>resolve</var>, [[Reject]]: <var>reject</var> }.\n        </li></ol></emu-alg>\n\n        <!-- es6num=\"25.4.1.3.1\" -->\n        <div id=\"excluded-sec-promise-reject-functions\"><h1><span class=\"secnum\">25.6.1.3.1</span>#sec-promise-reject-functions Promise Reject Functions</h1>...</div><!-- es6num=\"25.4.1.3.2\" -->\n        <div id=\"excluded-sec-promise-resolve-functions\"><h1><span class=\"secnum\">25.6.1.3.2</span>#sec-promise-resolve-functions Promise Resolve Functions</h1>...</div></emu-clause>\n\n      "}, "sec-promise-abstract-operations": {"num": "25.6.1", "title": "#sec-promise-abstract-operations Promise Abstract Operations", "html": "<emu-clause id=\"sec-promise-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-abstract-operations\">#sec-promise-abstract-operations</span> Promise Abstract Operations</h1>\n\n      <!-- es6num=\"25.4.1.1\" -->\n      <div id=\"excluded-sec-promisecapability-records\"><h1><span class=\"secnum\">25.6.1.1</span>#sec-promisecapability-records PromiseCapability Records</h1>...</div><!-- es6num=\"25.4.1.2\" -->\n      <div id=\"excluded-sec-promisereaction-records\"><h1><span class=\"secnum\">25.6.1.2</span>#sec-promisereaction-records PromiseReaction Records</h1>...</div><!-- es6num=\"25.4.1.3\" -->\n      <div id=\"excluded-sec-createresolvingfunctions\"><h1><span class=\"secnum\">25.6.1.3</span>#sec-createresolvingfunctions CreateResolvingFunctions ( promise )</h1>...</div><!-- es6num=\"25.4.1.4\" -->\n      <div id=\"excluded-sec-fulfillpromise\"><h1><span class=\"secnum\">25.6.1.4</span>#sec-fulfillpromise FulfillPromise ( promise, value )</h1>...</div><!-- es6num=\"25.4.1.5\" -->\n      <div id=\"excluded-sec-newpromisecapability\"><h1><span class=\"secnum\">25.6.1.5</span>#sec-newpromisecapability NewPromiseCapability ( C )</h1>...</div><!-- es6num=\"25.4.1.6\" -->\n      <div id=\"excluded-sec-ispromise\"><h1><span class=\"secnum\">25.6.1.6</span>#sec-ispromise IsPromise ( x )</h1>...</div><!-- es6num=\"25.4.1.7\" -->\n      <div id=\"excluded-sec-rejectpromise\"><h1><span class=\"secnum\">25.6.1.7</span>#sec-rejectpromise RejectPromise ( promise, reason )</h1>...</div><!-- es6num=\"25.4.1.8\" -->\n      <div id=\"excluded-sec-triggerpromisereactions\"><h1><span class=\"secnum\">25.6.1.8</span>#sec-triggerpromisereactions TriggerPromiseReactions ( reactions, argument )</h1>...</div><div id=\"excluded-sec-host-promise-rejection-tracker\"><h1><span class=\"secnum\">25.6.1.9</span>#sec-host-promise-rejection-tracker HostPromiseRejectionTracker ( promise, operation )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"AsyncGeneratorFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-promise.prototype.finally": {"num": "25.6.5.3", "title": "#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )", "html": "<emu-clause id=\"sec-promise.prototype.finally\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.finally\">#sec-promise.prototype.finally</span> Promise.prototype.finally ( <var>onFinally</var> )</h1>\n        <p>When the <code>finally</code> method is called with argument <var>onFinally</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>promise</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>onFinally</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>thenFinally</var> be <var>onFinally</var>.</li><li>Let <var>catchFinally</var> be <var>onFinally</var>.</li></ol></li><li>Else,<ol><li>Let <var>stepsThenFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-thenfinallyfunctions\" title=\"\"><a href=\"#sec-thenfinallyfunctions\">Then Finally Functions</a></emu-xref>.</li><li>Let <var>thenFinally</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsThenFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>thenFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>thenFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li><li>Let <var>stepsCatchFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-catchfinallyfunctions\" title=\"\"><a href=\"#sec-catchfinallyfunctions\">Catch Finally Functions</a></emu-xref>.</li><li>Let <var>catchFinally</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsCatchFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>catchFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>catchFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>promise</var>, <code>\"then\"</code>, &#171; <var>thenFinally</var>, <var>catchFinally</var> &#187;).\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-thenfinallyfunctions\"><h1><span class=\"secnum\">25.6.5.3.1</span>#sec-thenfinallyfunctions Then Finally Functions</h1>...</div><div id=\"excluded-sec-catchfinallyfunctions\"><h1><span class=\"secnum\">25.6.5.3.2</span>#sec-catchfinallyfunctions Catch Finally Functions</h1>...</div></emu-clause>\n\n      "}, "sec-generatorfunction-constructor": {"num": "25.2.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>GeneratorFunction</code> behaviour must include a <code>super</code> call to the <code>GeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of <code>GeneratorFunction</code>. There is no syntactic means to create instances of <code>GeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <!-- es6num=\"25.2.1.1\" -->\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-instances": {"num": "25.2.4", "title": "#sec-generatorfunction-instances GeneratorFunction Instances", "html": "<emu-clause id=\"sec-generatorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances\">#sec-generatorfunction-instances</span> GeneratorFunction Instances</h1>\n      <p>Every GeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[FunctionKind]] internal slot for all such instances is <code>\"generator\"</code>.</p>\n      <p>Each GeneratorFunction instance has the following own properties:</p>\n\n      <!-- es6num=\"25.2.4.1\" -->\n      <div id=\"excluded-sec-generatorfunction-instances-length\"><h1><span class=\"secnum\">25.2.4.1</span>#sec-generatorfunction-instances-length length</h1>...</div><!-- es6num=\"25.2.4.2\" -->\n      <div id=\"excluded-sec-generatorfunction-instances-name\"><h1><span class=\"secnum\">25.2.4.2</span>#sec-generatorfunction-instances-name name</h1>...</div><!-- es6num=\"25.2.4.3\" -->\n      <div id=\"excluded-sec-generatorfunction-instances-prototype\"><h1><span class=\"secnum\">25.2.4.3</span>#sec-generatorfunction-instances-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"GeneratorFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <!-- es6num=\"25.2.2.1\" -->\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><!-- es6num=\"25.2.2.2\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-control-abstraction-objects": {"num": "25", "title": "#sec-control-abstraction-objects Control Abstraction Objects", "html": "<emu-clause id=\"sec-control-abstraction-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-control-abstraction-objects\">#sec-control-abstraction-objects</span> Control Abstraction Objects</h1>\n\n  <!-- es6num=\"25.1\" -->\n  <div id=\"excluded-sec-iteration\"><h1><span class=\"secnum\">25.1</span>#sec-iteration Iteration</h1>...</div><!-- es6num=\"25.2\" -->\n  <div id=\"excluded-sec-generatorfunction-objects\"><h1><span class=\"secnum\">25.2</span>#sec-generatorfunction-objects GeneratorFunction Objects</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-objects\"><h1><span class=\"secnum\">25.3</span>#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects</h1>...</div><!-- es6num=\"25.3\" -->\n  <div id=\"excluded-sec-generator-objects\"><h1><span class=\"secnum\">25.4</span>#sec-generator-objects Generator Objects</h1>...</div><div id=\"excluded-sec-asyncgenerator-objects\"><h1><span class=\"secnum\">25.5</span>#sec-asyncgenerator-objects AsyncGenerator Objects</h1>...</div><!-- es6num=\"25.4\" -->\n  <div id=\"excluded-sec-promise-objects\"><h1><span class=\"secnum\">25.6</span>#sec-promise-objects Promise Objects</h1>...</div><div id=\"excluded-sec-async-function-objects\"><h1><span class=\"secnum\">25.7</span>#sec-async-function-objects AsyncFunction Objects</h1>...</div></emu-clause>\n\n"}, "sec-promise-constructor": {"num": "25.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <code>Promise</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Promise</code> behaviour must include a <code>super</code> call to the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <!-- es6num=\"25.4.3.1\" -->\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.resolve": {"num": "25.6.4.5", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">25.6.4.5.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.race": {"num": "25.6.4.3", "title": "#sec-promise.race Promise.race ( iterable )", "html": "<emu-clause id=\"sec-promise.race\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.race\">#sec-promise.race</span> Promise.race ( <var>iterable</var> )</h1>\n        <p>The <code>race</code> function returns a new promise which is settled in the same way as the first passed promise to settle. It resolves all elements of the passed <var>iterable</var> to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseRace\"><a href=\"#sec-performpromiserace\">PerformPromiseRace</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, let <var>result</var> be <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iterator</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If the <var>iterable</var> argument is empty or if none of the promises in <var>iterable</var> ever settle then the pending promise returned by this method will never be settled.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>race</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It also expects that its <emu-val>this</emu-val> value provides a <code>resolve</code> method.</p>\n        </div></emu-note>\n\n        <!-- es6num=\"25.4.4.3.1\" -->\n        <div id=\"excluded-sec-performpromiserace\"><h1><span class=\"secnum\">25.6.4.3.1</span>#sec-performpromiserace Runtime Semantics: PerformPromiseRace ( iteratorRecord, constructor, resultCapability )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.all": {"num": "25.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, let <var>result</var> be <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <!-- es6num=\"25.4.4.1.1\" -->\n        <div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">25.6.4.1.1</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability )</h1>...</div><!-- es6num=\"25.4.4.1.2\" -->\n        <div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.1.2</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-promise-constructor": {"num": "25.6.4", "title": "#sec-properties-of-the-promise-constructor Properties of the Promise Constructor", "html": "<emu-clause id=\"sec-properties-of-the-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-constructor\">#sec-properties-of-the-promise-constructor</span> Properties of the Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <!-- es6num=\"25.4.4.1\" -->\n      <div id=\"excluded-sec-promise.all\"><h1><span class=\"secnum\">25.6.4.1</span>#sec-promise.all Promise.all ( iterable )</h1>...</div><!-- es6num=\"25.4.4.2\" -->\n      <div id=\"excluded-sec-promise.prototype\"><h1><span class=\"secnum\">25.6.4.2</span>#sec-promise.prototype Promise.prototype</h1>...</div><!-- es6num=\"25.4.4.3\" -->\n      <div id=\"excluded-sec-promise.race\"><h1><span class=\"secnum\">25.6.4.3</span>#sec-promise.race Promise.race ( iterable )</h1>...</div><!-- es6num=\"25.4.4.4\" -->\n      <div id=\"excluded-sec-promise.reject\"><h1><span class=\"secnum\">25.6.4.4</span>#sec-promise.reject Promise.reject ( r )</h1>...</div><!-- es6num=\"25.4.4.5\" -->\n      <div id=\"excluded-sec-promise.resolve\"><h1><span class=\"secnum\">25.6.4.5</span>#sec-promise.resolve Promise.resolve ( x )</h1>...</div><!-- es6num=\"25.4.4.6\" -->\n      <div id=\"excluded-sec-get-promise-@@species\"><h1><span class=\"secnum\">25.6.4.6</span>#sec-get-promise-@@species get Promise [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-promise-jobs": {"num": "25.6.2", "title": "#sec-promise-jobs Promise Jobs", "html": "<emu-clause id=\"sec-promise-jobs\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-jobs\">#sec-promise-jobs</span> Promise Jobs</h1>\n\n      <!-- es6num=\"25.4.2.1\" -->\n      <div id=\"excluded-sec-promisereactionjob\"><h1><span class=\"secnum\">25.6.2.1</span>#sec-promisereactionjob PromiseReactionJob ( reaction, argument )</h1>...</div><!-- es6num=\"25.4.2.2\" -->\n      <div id=\"excluded-sec-promiseresolvethenablejob\"><h1><span class=\"secnum\">25.6.2.2</span>#sec-promiseresolvethenablejob PromiseResolveThenableJob ( promiseToResolve, thenable, then )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref> (the AsyncGeneratorFunction.prototype).</li>\n        <li>is an ordinary object.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-objects": {"num": "25.3", "title": "#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-objects\">#sec-asyncgeneratorfunction-objects</span> AsyncGeneratorFunction Objects</h1>\n    <p>AsyncGeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, and <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> syntactic productions. They may also be created by calling the <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-asyncgeneratorfunction-constructor\"><h1><span class=\"secnum\">25.3.1</span>#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.3.2</span>#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.3</span>#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instances\"><h1><span class=\"secnum\">25.3.4</span>#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}}, "figData": {"figure-2": "Figure 5", "table-2": "Table 2", "table-5": "Table 5", "table-27": "Table 27", "table-56": "Table 68", "table-internal-slots-of-asyncgenerator-instances": "Table 69", "table-57": "Table 71"}}, "to": {"secList": ["sec-properties-of-the-promise-prototype-object", "sec-properties-of-generator-prototype", "sec-generator-abstract-operations", "sec-asyncgenerator-objects", "sec-promise.prototype.then", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-generatorfunction-objects", "sec-newpromisecapability", "sec-asyncgeneratorfunction-constructor", "sec-properties-of-the-generatorfunction-prototype-object", "sec-asyncgenerator-abstract-operations", "sec-asyncgeneratorresumenext", "sec-promisecapability-records", "sec-generator-objects", "sec-promise-objects", "sec-asyncgeneratorfunction-instances", "sec-createresolvingfunctions", "sec-promise-abstract-operations", "sec-properties-of-asyncgeneratorfunction", "sec-promise.prototype.finally", "sec-generatorfunction-constructor", "sec-generatorfunction-instances", "sec-properties-of-the-generatorfunction-constructor", "sec-control-abstraction-objects", "sec-promise-constructor", "sec-promise.resolve", "sec-promise.race", "sec-promise.all", "sec-properties-of-the-promise-constructor", "sec-promise-jobs", "sec-properties-of-asyncgenerator-prototype", "sec-asyncgeneratorfunction-objects"], "secData": {"sec-properties-of-the-promise-prototype-object": {"num": "25.2.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>.</li>\n        <li>is an ordinary object.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <!-- es6num=\"25.4.5.1\" -->\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">25.2.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><!-- es6num=\"25.4.5.2\" -->\n      <div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">25.2.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">25.2.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><!-- es6num=\"25.4.5.3\" -->\n      <div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">25.2.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><!-- es6num=\"25.4.5.4\" -->\n      <div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-generator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref> (the GeneratorFunction.prototype).</li>\n        <li>is an ordinary object.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <!-- es6num=\"25.3.1.1\" -->\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><!-- es6num=\"25.3.1.2\" -->\n      <div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><!-- es6num=\"25.3.1.3\" -->\n      <div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><!-- es6num=\"25.3.1.4\" -->\n      <div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><!-- es6num=\"25.3.1.5\" -->\n      <div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-generator-abstract-operations": {"num": "25.5.3", "title": "#sec-generator-abstract-operations Generator Abstract Operations", "html": "<emu-clause id=\"sec-generator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-abstract-operations\">#sec-generator-abstract-operations</span> Generator Abstract Operations</h1>\n\n      <!-- es6num=\"25.3.3.1\" -->\n      <div id=\"excluded-sec-generatorstart\"><h1><span class=\"secnum\">25.5.3.1</span>#sec-generatorstart GeneratorStart ( generator, generatorBody )</h1>...</div><!-- es6num=\"25.3.3.2\" -->\n      <div id=\"excluded-sec-generatorvalidate\"><h1><span class=\"secnum\">25.5.3.2</span>#sec-generatorvalidate GeneratorValidate ( generator )</h1>...</div><!-- es6num=\"25.3.3.3\" -->\n      <div id=\"excluded-sec-generatorresume\"><h1><span class=\"secnum\">25.5.3.3</span>#sec-generatorresume GeneratorResume ( generator, value )</h1>...</div><!-- es6num=\"25.3.3.4\" -->\n      <div id=\"excluded-sec-generatorresumeabrupt\"><h1><span class=\"secnum\">25.5.3.4</span>#sec-generatorresumeabrupt GeneratorResumeAbrupt ( generator, abruptCompletion )</h1>...</div><div id=\"excluded-sec-getgeneratorkind\"><h1><span class=\"secnum\">25.5.3.5</span>#sec-getgeneratorkind GetGeneratorKind ( )</h1>...</div><!-- es6num=\"25.3.3.5\" -->\n      <div id=\"excluded-sec-generatoryield\"><h1><span class=\"secnum\">25.5.3.6</span>#sec-generatoryield GeneratorYield ( iterNextObj )</h1>...</div></emu-clause>\n  "}, "sec-asyncgenerator-objects": {"num": "25.6", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the value of the <code>prototype</code> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">25.6.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">25.6.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">25.6.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-promise.prototype.then": {"num": "25.2.5.4", "title": "#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )", "html": "<emu-clause id=\"sec-promise.prototype.then\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</span> Promise.prototype.then ( <var>onFulfilled</var>, <var>onRejected</var> )</h1>\n        <p>When the <code>then</code> method is called with arguments <var>onFulfilled</var> and <var>onRejected</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsPromise\"><a href=\"#sec-ispromise\">IsPromise</a></emu-xref>(<var>promise</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Let <var>resultCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Return <emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>, <var>resultCapability</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%PromiseProto_then%</dfn> intrinsic object.</p>\n\n        <!-- es6num=\"25.4.5.3.1\" -->\n        <div id=\"excluded-sec-performpromisethen\"><h1><span class=\"secnum\">25.2.5.4.1</span>#sec-performpromisethen PerformPromiseThen ( promise, onFulfilled, onRejected, resultCapability )</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.4.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.4.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.4.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.4.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-objects": {"num": "25.3", "title": "#sec-generatorfunction-objects GeneratorFunction Objects", "html": "<emu-clause id=\"sec-generatorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-objects\">#sec-generatorfunction-objects</span> GeneratorFunction Objects</h1>\n    <p>GeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>s, and <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref> intrinsic.</p>\n    <emu-figure id=\"figure-2\" caption=\"Generator Objects Relationships\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-2\">#figure-2</span> (Informative): Generator Objects Relationships</figcaption>\n      <img alt=\"A staggering variety of boxes and arrows.\" src=\"img/figure-2.png\">\n    </figure></emu-figure>\n\n    <!-- es6num=\"25.2.1\" -->\n    <div id=\"excluded-sec-generatorfunction-constructor\"><h1><span class=\"secnum\">25.3.1</span>#sec-generatorfunction-constructor The GeneratorFunction Constructor</h1>...</div><!-- es6num=\"25.2.2\" -->\n    <div id=\"excluded-sec-properties-of-the-generatorfunction-constructor\"><h1><span class=\"secnum\">25.3.2</span>#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor</h1>...</div><!-- es6num=\"25.2.3\" -->\n    <div id=\"excluded-sec-properties-of-the-generatorfunction-prototype-object\"><h1><span class=\"secnum\">25.3.3</span>#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object</h1>...</div><!-- es6num=\"25.2.4\" -->\n    <div id=\"excluded-sec-generatorfunction-instances\"><h1><span class=\"secnum\">25.3.4</span>#sec-generatorfunction-instances GeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-newpromisecapability": {"num": "25.2.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" aoid=\"NewPromiseCapability\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function, and attempts to use that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function in the fashion of the built-in <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its resolve and reject functions. The promise plus the resolve and reject functions are used to initialize a new PromiseCapability <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> which is returned as the value of this abstract operation.</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be a new PromiseCapability { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-getcapabilitiesexecutor-functions\" title=\"\"><a href=\"#sec-getcapabilitiesexecutor-functions\">GetCapabilitiesExecutor Functions</a></emu-xref>.</li><li>Let <var>executor</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[Capability]] &#187;).</li><li>Set <var>executor</var>.[[Capability]] to <var>promiseCapability</var>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n\n        <!-- es6num=\"25.4.1.5.1\" -->\n        <div id=\"excluded-sec-getcapabilitiesexecutor-functions\"><h1><span class=\"secnum\">25.2.1.5.1</span>#sec-getcapabilitiesexecutor-functions GetCapabilitiesExecutor Functions</h1>...</div></emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-constructor": {"num": "25.4.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>AsyncGeneratorFunction</code> behaviour must include a <code>super</code> call to the <code>AsyncGeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of <code>AsyncGeneratorFunction</code>. There is no syntactic means to create instances of <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, ..., pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.3.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%Generator%</dfn> (see Figure 2).</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>.</li>\n      </ul>\n\n      <!-- es6num=\"25.2.3.1\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><!-- es6num=\"25.2.3.2\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><!-- es6num=\"25.2.3.3\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgenerator-abstract-operations": {"num": "25.6.3", "title": "#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations", "html": "<emu-clause id=\"sec-asyncgenerator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-abstract-operations\">#sec-asyncgenerator-abstract-operations</span> AsyncGenerator Abstract Operations</h1>\n      <div id=\"excluded-sec-asyncgeneratorrequest-records\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-asyncgeneratorrequest-records AsyncGeneratorRequest Records</h1>...</div><div id=\"excluded-sec-asyncgeneratorstart\"><h1><span class=\"secnum\">25.6.3.2</span>#sec-asyncgeneratorstart AsyncGeneratorStart ( generator, generatorBody )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresolve\"><h1><span class=\"secnum\">25.6.3.3</span>#sec-asyncgeneratorresolve AsyncGeneratorResolve ( generator, value, done )</h1>...</div><div id=\"excluded-sec-asyncgeneratorreject\"><h1><span class=\"secnum\">25.6.3.4</span>#sec-asyncgeneratorreject AsyncGeneratorReject ( generator, exception )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresumenext\"><h1><span class=\"secnum\">25.6.3.5</span>#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )</h1>...</div><div id=\"excluded-sec-asyncgeneratorenqueue\"><h1><span class=\"secnum\">25.6.3.6</span>#sec-asyncgeneratorenqueue AsyncGeneratorEnqueue ( generator, completion )</h1>...</div><div id=\"excluded-sec-asyncgeneratoryield\"><h1><span class=\"secnum\">25.6.3.7</span>#sec-asyncgeneratoryield AsyncGeneratorYield ( value )</h1>...</div></emu-clause>\n  "}, "sec-asyncgeneratorresumenext": {"num": "25.6.3.5", "title": "#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )", "html": "<emu-clause id=\"sec-asyncgeneratorresumenext\" aoid=\"AsyncGeneratorResumeNext\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorresumenext\">#sec-asyncgeneratorresumenext</span> AsyncGeneratorResumeNext ( <var>generator</var> )</h1>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>generator</var> is an AsyncGenerator instance.</li><li>Let <var>state</var> be <var>generator</var>.[[AsyncGeneratorState]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is not <code>\"executing\"</code>.</li><li>If <var>state</var> is <code>\"awaiting-return\"</code>, return <emu-val>undefined</emu-val>.</li><li>Let <var>queue</var> be <var>generator</var>.[[AsyncGeneratorQueue]].</li><li>If <var>queue</var> is an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, return <emu-val>undefined</emu-val>.</li><li>Let <var>next</var> be the value of the first element of <var>queue</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>next</var> is an AsyncGeneratorRequest record.</li><li>Let <var>completion</var> be <var>next</var>.[[Completion]].</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>state</var> is <code>\"suspendedStart\"</code>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <code>\"completed\"</code>.</li><li>Set <var>state</var> to <code>\"completed\"</code>.</li></ol></li><li>If <var>state</var> is <code>\"completed\"</code>, then<ol><li>If <var>completion</var>.[[Type]] is <emu-const>return</emu-const>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <code>\"awaiting-return\"</code>.</li><li>Let <var>promiseCapability</var> be !&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>, &#171; <var>completion</var>.[[Value]] &#187;).</li><li>Let <var>stepsFulfilled</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-fulfilled\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-fulfilled\">AsyncGeneratorResumeNext Return Processor Fulfilled Functions</a></emu-xref>.</li><li>Let <var>onFulfilled</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsFulfilled</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onFulfilled</var>.[[Generator]] to <var>generator</var>.</li><li>Let <var>stepsRejected</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-rejected\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-rejected\">AsyncGeneratorResumeNext Return Processor Rejected Functions</a></emu-xref>.</li><li>Let <var>onRejected</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsRejected</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onRejected</var>.[[Generator]] to <var>generator</var>.</li><li>Let <var>throwawayCapability</var> be !&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Set <var>throwawayCapability</var>.[[Promise]].[[PromiseIsHandled]] to <emu-val>true</emu-val>.</li><li>Perform !&#160;<emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promiseCapability</var>.[[Promise]], <var>onFulfilled</var>, <var>onRejected</var>, <var>throwawayCapability</var>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>completion</var>.[[Type]] is <emu-const>throw</emu-const>.</li><li>Perform !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>generator</var>, <var>completion</var>.[[Value]]).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li></ol></li></ol></li><li>Else if <var>state</var> is <code>\"completed\"</code>, return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>generator</var>, <emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is either <code>\"suspendedStart\"</code> or <code>\"suspendedYield\"</code>.</li><li>Let <var>genContext</var> be <var>generator</var>.[[AsyncGeneratorContext]].</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> <var>callerContext</var>.</li><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <code>\"executing\"</code>.</li><li>Push <var>genContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>genContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Resume the suspended evaluation of <var>genContext</var> using <var>completion</var> as the result of the operation that suspended it. Let <var>result</var> be the completion record returned by the resumed computation.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> is never an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When we return here, <var>genContext</var> has already been removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and <var>callerContext</var> is the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-val>undefined</emu-val>.\n        </li></ol></emu-alg>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-fulfilled\">\n          <h1><span class=\"secnum\">25.6.3.5.1</span> AsyncGeneratorResumeNext Return Processor Fulfilled Functions</h1>\n\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the  <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function has a [[Generator]] internal slot.</p>\n\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function <var>F</var> is called with argument <var>value</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <code>\"completed\"</code>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>F</var>.[[Generator]], <var>value</var>, <emu-val>true</emu-val>).\n          </li></ol></emu-alg>\n\n          <p>The <code>length</code> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is 1.</p>\n        </emu-clause>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-rejected\">\n          <h1><span class=\"secnum\">25.6.3.5.2</span> AsyncGeneratorResumeNext Return Processor Rejected Functions</h1>\n\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the  <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function has a [[Generator]] internal slot.</p>\n\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function <var>F</var> is called with argument <var>reason</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <code>\"completed\"</code>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>F</var>.[[Generator]], <var>reason</var>).\n          </li></ol></emu-alg>\n\n          <p>The <code>length</code> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is 1.</p>\n        </emu-clause>\n      </emu-clause>\n\n      "}, "sec-promisecapability-records": {"num": "25.2.1.1", "title": "#sec-promisecapability-records PromiseCapability Records", "html": "<emu-clause id=\"sec-promisecapability-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promisecapability-records\">#sec-promisecapability-records</span> PromiseCapability Records</h1>\n        <p>A PromiseCapability is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value used to encapsulate a promise object along with the functions that are capable of resolving or rejecting that promise object. PromiseCapability Records are produced by the <emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref> abstract operation.</p>\n        <p>PromiseCapability Records have the fields listed in  <emu-xref href=\"#table-57\"><a href=\"#table-57\" class=\"excluded-xref\" excluded-id=\"table-57\">#table-57</a></emu-xref>.</p>\n        <emu-table id=\"table-57\" caption=\"PromiseCapability Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-57\">#table-57</span>: PromiseCapability <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Promise]]\n              \n              </td>\n              <td>\n                An object\n              \n              </td>\n              <td>\n                An object that is usable as a promise.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Resolve]]\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              \n              </td>\n              <td>\n                The function that is used to resolve the given promise object.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Reject]]\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              \n              </td>\n              <td>\n                The function that is used to reject the given promise object.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <!-- es6num=\"25.4.1.1.1\" -->\n        <div id=\"excluded-sec-ifabruptrejectpromise\"><h1><span class=\"secnum\">25.2.1.1.1</span>#sec-ifabruptrejectpromise IfAbruptRejectPromise ( value, capability )</h1>...</div></emu-clause>\n\n      "}, "sec-generator-objects": {"num": "25.5", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the  <i>Iterator</i> and  <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the value of the <code>prototype</code> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>.</p>\n\n    <!-- es6num=\"25.3.1\" -->\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">25.5.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><!-- es6num=\"25.3.2\" -->\n    <div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">25.5.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><!-- es6num=\"25.3.3\" -->\n    <div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">25.5.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-promise-objects": {"num": "25.2", "title": "#sec-promise-objects Promise Objects", "html": "<emu-clause id=\"sec-promise-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-objects\">#sec-promise-objects</span> Promise Objects</h1>\n    <p>A Promise is an object that is used as a placeholder for the eventual results of a deferred (and possibly asynchronous) computation.</p>\n    <p>Any Promise object is in one of three mutually exclusive states:  <em>fulfilled</em>,  <em>rejected</em>, and  <em>pending</em>:</p>\n    <ul>\n      <li>\n        A promise <code>p</code> is fulfilled if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"https://tc39.es/ecma262/#job\">Job</a></emu-xref> to call the function <code>f</code>.\n      \n      </li>\n      <li>\n        A promise <code>p</code> is rejected if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"https://tc39.es/ecma262/#job\">Job</a></emu-xref> to call the function <code>r</code>.\n      \n      </li>\n      <li>\n        A promise is pending if it is neither fulfilled nor rejected.\n      \n      </li>\n    </ul>\n    <p>A promise is said to be  <em>settled</em> if it is not pending, i.e. if it is either fulfilled or rejected.</p>\n    <p>A promise is  <em>resolved</em> if it is settled or if it has been &#8220;locked in&#8221; to match the state of another promise. Attempting to resolve or reject a resolved promise has no effect. A promise is  <em>unresolved</em> if it is not resolved. An unresolved promise is always in the pending state. A resolved promise may be pending, fulfilled or rejected.</p>\n\n    <!-- es6num=\"25.4.1\" -->\n    <div id=\"excluded-sec-promise-abstract-operations\"><h1><span class=\"secnum\">25.2.1</span>#sec-promise-abstract-operations Promise Abstract Operations</h1>...</div><!-- es6num=\"25.4.2\" -->\n    <div id=\"excluded-sec-promise-jobs\"><h1><span class=\"secnum\">25.2.2</span>#sec-promise-jobs Promise Jobs</h1>...</div><!-- es6num=\"25.4.3\" -->\n    <div id=\"excluded-sec-promise-constructor\"><h1><span class=\"secnum\">25.2.3</span>#sec-promise-constructor The Promise Constructor</h1>...</div><!-- es6num=\"25.4.4\" -->\n    <div id=\"excluded-sec-properties-of-the-promise-constructor\"><h1><span class=\"secnum\">25.2.4</span>#sec-properties-of-the-promise-constructor Properties of the Promise Constructor</h1>...</div><!-- es6num=\"25.4.5\" -->\n    <div id=\"excluded-sec-properties-of-the-promise-prototype-object\"><h1><span class=\"secnum\">25.2.5</span>#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object</h1>...</div><!-- es6num=\"25.4.6\" -->\n    <div id=\"excluded-sec-properties-of-promise-instances\"><h1><span class=\"secnum\">25.2.6</span>#sec-properties-of-promise-instances Properties of Promise Instances</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgeneratorfunction-instances": {"num": "25.4.4", "title": "#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instances\">#sec-asyncgeneratorfunction-instances</span> AsyncGeneratorFunction Instances</h1>\n      <p>Every AsyncGeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[FunctionKind]] internal slot for all such instances is <code>\"generator\"</code>.</p>\n      <p>Each AsyncGeneratorFunction instance has the following own properties:</p>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-instance-length\"><h1><span class=\"secnum\">25.4.4.1</span>#sec-asyncgeneratorfunction-instance-length length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-name\"><h1><span class=\"secnum\">25.4.4.2</span>#sec-asyncgeneratorfunction-instance-name name</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-prototype\"><h1><span class=\"secnum\">25.4.4.3</span>#sec-asyncgeneratorfunction-instance-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-createresolvingfunctions": {"num": "25.2.1.3", "title": "#sec-createresolvingfunctions CreateResolvingFunctions ( promise )", "html": "<emu-clause id=\"sec-createresolvingfunctions\" aoid=\"CreateResolvingFunctions\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createresolvingfunctions\">#sec-createresolvingfunctions</span> CreateResolvingFunctions ( <var>promise</var> )</h1>\n        <p>When CreateResolvingFunctions is performed with argument <var>promise</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>alreadyResolved</var> be a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Value]]: <emu-val>false</emu-val> }.</li><li>Let <var>stepsResolve</var> be the algorithm steps defined in Promise Resolve Functions (<emu-xref href=\"#sec-promise-resolve-functions\"><a href=\"#sec-promise-resolve-functions\" class=\"excluded-xref\" excluded-id=\"sec-promise-resolve-functions\">#sec-promise-resolve-functions</a></emu-xref>).</li><li>Let <var>resolve</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsResolve</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>resolve</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>resolve</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Let <var>stepsReject</var> be the algorithm steps defined in Promise Reject Functions (<emu-xref href=\"#sec-promise-reject-functions\"><a href=\"#sec-promise-reject-functions\" class=\"excluded-xref\" excluded-id=\"sec-promise-reject-functions\">#sec-promise-reject-functions</a></emu-xref>).</li><li>Let <var>reject</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsReject</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>reject</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>reject</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Resolve]]: <var>resolve</var>, [[Reject]]: <var>reject</var> }.\n        </li></ol></emu-alg>\n\n        <!-- es6num=\"25.4.1.3.1\" -->\n        <div id=\"excluded-sec-promise-reject-functions\"><h1><span class=\"secnum\">25.2.1.3.1</span>#sec-promise-reject-functions Promise Reject Functions</h1>...</div><!-- es6num=\"25.4.1.3.2\" -->\n        <div id=\"excluded-sec-promise-resolve-functions\"><h1><span class=\"secnum\">25.2.1.3.2</span>#sec-promise-resolve-functions Promise Resolve Functions</h1>...</div></emu-clause>\n\n      "}, "sec-promise-abstract-operations": {"num": "25.2.1", "title": "#sec-promise-abstract-operations Promise Abstract Operations", "html": "<emu-clause id=\"sec-promise-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-abstract-operations\">#sec-promise-abstract-operations</span> Promise Abstract Operations</h1>\n\n      <!-- es6num=\"25.4.1.1\" -->\n      <div id=\"excluded-sec-promisecapability-records\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-promisecapability-records PromiseCapability Records</h1>...</div><!-- es6num=\"25.4.1.2\" -->\n      <div id=\"excluded-sec-promisereaction-records\"><h1><span class=\"secnum\">25.2.1.2</span>#sec-promisereaction-records PromiseReaction Records</h1>...</div><!-- es6num=\"25.4.1.3\" -->\n      <div id=\"excluded-sec-createresolvingfunctions\"><h1><span class=\"secnum\">25.2.1.3</span>#sec-createresolvingfunctions CreateResolvingFunctions ( promise )</h1>...</div><!-- es6num=\"25.4.1.4\" -->\n      <div id=\"excluded-sec-fulfillpromise\"><h1><span class=\"secnum\">25.2.1.4</span>#sec-fulfillpromise FulfillPromise ( promise, value )</h1>...</div><!-- es6num=\"25.4.1.5\" -->\n      <div id=\"excluded-sec-newpromisecapability\"><h1><span class=\"secnum\">25.2.1.5</span>#sec-newpromisecapability NewPromiseCapability ( C )</h1>...</div><!-- es6num=\"25.4.1.6\" -->\n      <div id=\"excluded-sec-ispromise\"><h1><span class=\"secnum\">25.2.1.6</span>#sec-ispromise IsPromise ( x )</h1>...</div><!-- es6num=\"25.4.1.7\" -->\n      <div id=\"excluded-sec-rejectpromise\"><h1><span class=\"secnum\">25.2.1.7</span>#sec-rejectpromise RejectPromise ( promise, reason )</h1>...</div><!-- es6num=\"25.4.1.8\" -->\n      <div id=\"excluded-sec-triggerpromisereactions\"><h1><span class=\"secnum\">25.2.1.8</span>#sec-triggerpromisereactions TriggerPromiseReactions ( reactions, argument )</h1>...</div><div id=\"excluded-sec-host-promise-rejection-tracker\"><h1><span class=\"secnum\">25.2.1.9</span>#sec-host-promise-rejection-tracker HostPromiseRejectionTracker ( promise, operation )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.4.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"AsyncGeneratorFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.4.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.4.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-promise.prototype.finally": {"num": "25.2.5.3", "title": "#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )", "html": "<emu-clause id=\"sec-promise.prototype.finally\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.finally\">#sec-promise.prototype.finally</span> Promise.prototype.finally ( <var>onFinally</var> )</h1>\n        <p>When the <code>finally</code> method is called with argument <var>onFinally</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>promise</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>onFinally</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>thenFinally</var> be <var>onFinally</var>.</li><li>Let <var>catchFinally</var> be <var>onFinally</var>.</li></ol></li><li>Else,<ol><li>Let <var>stepsThenFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-thenfinallyfunctions\" title=\"\"><a href=\"#sec-thenfinallyfunctions\">Then Finally Functions</a></emu-xref>.</li><li>Let <var>thenFinally</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsThenFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>thenFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>thenFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li><li>Let <var>stepsCatchFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-catchfinallyfunctions\" title=\"\"><a href=\"#sec-catchfinallyfunctions\">Catch Finally Functions</a></emu-xref>.</li><li>Let <var>catchFinally</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsCatchFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>catchFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>catchFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>promise</var>, <code>\"then\"</code>, &#171; <var>thenFinally</var>, <var>catchFinally</var> &#187;).\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-thenfinallyfunctions\"><h1><span class=\"secnum\">25.2.5.3.1</span>#sec-thenfinallyfunctions Then Finally Functions</h1>...</div><div id=\"excluded-sec-catchfinallyfunctions\"><h1><span class=\"secnum\">25.2.5.3.2</span>#sec-catchfinallyfunctions Catch Finally Functions</h1>...</div></emu-clause>\n\n      "}, "sec-generatorfunction-constructor": {"num": "25.3.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>GeneratorFunction</code> behaviour must include a <code>super</code> call to the <code>GeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of <code>GeneratorFunction</code>. There is no syntactic means to create instances of <code>GeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <!-- es6num=\"25.2.1.1\" -->\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">25.3.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-instances": {"num": "25.3.4", "title": "#sec-generatorfunction-instances GeneratorFunction Instances", "html": "<emu-clause id=\"sec-generatorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances\">#sec-generatorfunction-instances</span> GeneratorFunction Instances</h1>\n      <p>Every GeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[FunctionKind]] internal slot for all such instances is <code>\"generator\"</code>.</p>\n      <p>Each GeneratorFunction instance has the following own properties:</p>\n\n      <!-- es6num=\"25.2.4.1\" -->\n      <div id=\"excluded-sec-generatorfunction-instances-length\"><h1><span class=\"secnum\">25.3.4.1</span>#sec-generatorfunction-instances-length length</h1>...</div><!-- es6num=\"25.2.4.2\" -->\n      <div id=\"excluded-sec-generatorfunction-instances-name\"><h1><span class=\"secnum\">25.3.4.2</span>#sec-generatorfunction-instances-name name</h1>...</div><!-- es6num=\"25.2.4.3\" -->\n      <div id=\"excluded-sec-generatorfunction-instances-prototype\"><h1><span class=\"secnum\">25.3.4.3</span>#sec-generatorfunction-instances-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.3.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"GeneratorFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <!-- es6num=\"25.2.2.1\" -->\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><!-- es6num=\"25.2.2.2\" -->\n      <div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-control-abstraction-objects": {"num": "25", "title": "#sec-control-abstraction-objects Control Abstraction Objects", "html": "<emu-clause id=\"sec-control-abstraction-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-control-abstraction-objects\">#sec-control-abstraction-objects</span> Control Abstraction Objects</h1>\n\n  <!-- es6num=\"25.1\" -->\n  <div id=\"excluded-sec-iteration\"><h1><span class=\"secnum\">25.1</span>#sec-iteration Iteration</h1>...</div><!-- es6num=\"25.4\" -->\n  <div id=\"excluded-sec-promise-objects\"><h1><span class=\"secnum\">25.2</span>#sec-promise-objects Promise Objects</h1>...</div><!-- es6num=\"25.2\" -->\n  <div id=\"excluded-sec-generatorfunction-objects\"><h1><span class=\"secnum\">25.3</span>#sec-generatorfunction-objects GeneratorFunction Objects</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-objects\"><h1><span class=\"secnum\">25.4</span>#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects</h1>...</div><!-- es6num=\"25.3\" -->\n  <div id=\"excluded-sec-generator-objects\"><h1><span class=\"secnum\">25.5</span>#sec-generator-objects Generator Objects</h1>...</div><div id=\"excluded-sec-asyncgenerator-objects\"><h1><span class=\"secnum\">25.6</span>#sec-asyncgenerator-objects AsyncGenerator Objects</h1>...</div><div id=\"excluded-sec-async-function-objects\"><h1><span class=\"secnum\">25.7</span>#sec-async-function-objects AsyncFunction Objects</h1>...</div></emu-clause>\n\n"}, "sec-promise-constructor": {"num": "25.2.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <code>Promise</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Promise</code> behaviour must include a <code>super</code> call to the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <!-- es6num=\"25.4.3.1\" -->\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.resolve": {"num": "25.2.4.5", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">25.2.4.5.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.race": {"num": "25.2.4.3", "title": "#sec-promise.race Promise.race ( iterable )", "html": "<emu-clause id=\"sec-promise.race\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.race\">#sec-promise.race</span> Promise.race ( <var>iterable</var> )</h1>\n        <p>The <code>race</code> function returns a new promise which is settled in the same way as the first passed promise to settle. It resolves all elements of the passed <var>iterable</var> to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseRace\"><a href=\"#sec-performpromiserace\">PerformPromiseRace</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, let <var>result</var> be <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iterator</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If the <var>iterable</var> argument is empty or if none of the promises in <var>iterable</var> ever settle then the pending promise returned by this method will never be settled.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>race</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It also expects that its <emu-val>this</emu-val> value provides a <code>resolve</code> method.</p>\n        </div></emu-note>\n\n        <!-- es6num=\"25.4.4.3.1\" -->\n        <div id=\"excluded-sec-performpromiserace\"><h1><span class=\"secnum\">25.2.4.3.1</span>#sec-performpromiserace Runtime Semantics: PerformPromiseRace ( iteratorRecord, constructor, resultCapability )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.all": {"num": "25.2.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, let <var>result</var> be <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <!-- es6num=\"25.4.4.1.1\" -->\n        <div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">25.2.4.1.1</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability )</h1>...</div><!-- es6num=\"25.4.4.1.2\" -->\n        <div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">25.2.4.1.2</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-promise-constructor": {"num": "25.2.4", "title": "#sec-properties-of-the-promise-constructor Properties of the Promise Constructor", "html": "<emu-clause id=\"sec-properties-of-the-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-constructor\">#sec-properties-of-the-promise-constructor</span> Properties of the Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <!-- es6num=\"25.4.4.1\" -->\n      <div id=\"excluded-sec-promise.all\"><h1><span class=\"secnum\">25.2.4.1</span>#sec-promise.all Promise.all ( iterable )</h1>...</div><!-- es6num=\"25.4.4.2\" -->\n      <div id=\"excluded-sec-promise.prototype\"><h1><span class=\"secnum\">25.2.4.2</span>#sec-promise.prototype Promise.prototype</h1>...</div><!-- es6num=\"25.4.4.3\" -->\n      <div id=\"excluded-sec-promise.race\"><h1><span class=\"secnum\">25.2.4.3</span>#sec-promise.race Promise.race ( iterable )</h1>...</div><!-- es6num=\"25.4.4.4\" -->\n      <div id=\"excluded-sec-promise.reject\"><h1><span class=\"secnum\">25.2.4.4</span>#sec-promise.reject Promise.reject ( r )</h1>...</div><!-- es6num=\"25.4.4.5\" -->\n      <div id=\"excluded-sec-promise.resolve\"><h1><span class=\"secnum\">25.2.4.5</span>#sec-promise.resolve Promise.resolve ( x )</h1>...</div><!-- es6num=\"25.4.4.6\" -->\n      <div id=\"excluded-sec-get-promise-@@species\"><h1><span class=\"secnum\">25.2.4.6</span>#sec-get-promise-@@species get Promise [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-promise-jobs": {"num": "25.2.2", "title": "#sec-promise-jobs Promise Jobs", "html": "<emu-clause id=\"sec-promise-jobs\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-jobs\">#sec-promise-jobs</span> Promise Jobs</h1>\n\n      <!-- es6num=\"25.4.2.1\" -->\n      <div id=\"excluded-sec-promisereactionjob\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-promisereactionjob PromiseReactionJob ( reaction, argument )</h1>...</div><!-- es6num=\"25.4.2.2\" -->\n      <div id=\"excluded-sec-promiseresolvethenablejob\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-promiseresolvethenablejob PromiseResolveThenableJob ( promiseToResolve, thenable, then )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.6.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>prototype</code> property of the intrinsic object <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref> (the AsyncGeneratorFunction.prototype).</li>\n        <li>is an ordinary object.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.6.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.6.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.6.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.6.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.6.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-objects": {"num": "25.4", "title": "#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-objects\">#sec-asyncgeneratorfunction-objects</span> AsyncGeneratorFunction Objects</h1>\n    <p>AsyncGeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, and <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> syntactic productions. They may also be created by calling the <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-asyncgeneratorfunction-constructor\"><h1><span class=\"secnum\">25.4.1</span>#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.4.2</span>#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.4.3</span>#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instances\"><h1><span class=\"secnum\">25.4.4</span>#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}}, "figData": {"figure-2": "Figure 5", "table-2": "Table 2", "table-5": "Table 5", "table-27": "Table 27", "table-57": "Table 68", "table-56": "Table 71", "table-internal-slots-of-asyncgenerator-instances": "Table 72"}}}