{"from": {"secList": ["sec-createbuiltinfunction", "sec-built-in-function-objects"], "secData": {"sec-createbuiltinfunction": {"num": "9.3.3", "title": "#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )", "html": "<emu-clause id=\"sec-createbuiltinfunction\" aoid=\"CreateBuiltinFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</span> CreateBuiltinFunction ( <var>steps</var>, <var>internalSlotsList</var> [ , <var>realm</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation CreateBuiltinFunction takes arguments <var>steps</var> and <var>internalSlotsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of names of internal slots) and optional arguments <var>realm</var> and <var>prototype</var>. <var>internalSlotsList</var> contains the names of additional internal slots that must be defined as part of the object. This operation creates a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>steps</var> is either a set of algorithm steps or other definition of a function's behaviour provided in this specification.</li><li>If <var>realm</var> is not present, set <var>realm</var> to <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var> is a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.</li><li>If <var>prototype</var> is not present, set <var>prototype</var> to <var>realm</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>]].</li><li>Let <var>func</var> be a new built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that when called performs the action described by <var>steps</var>. The new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has internal slots whose names are the elements of <var>internalSlotsList</var>, and an [[InitialName]] internal slot.</li><li>Set <var>func</var>.[[Realm]] to <var>realm</var>.</li><li>Set <var>func</var>.[[Prototype]] to <var>prototype</var>.</li><li>Set <var>func</var>.[[Extensible]] to <emu-val>true</emu-val>.</li><li>Set <var>func</var>.[[ScriptOrModule]] to <emu-val>null</emu-val>.</li><li>Set <var>func</var>.[[InitialName]] to <emu-val>null</emu-val>.</li><li>Return <var>func</var>.</li></ol></emu-alg>\n      <p>Each built-in function defined in this specification is created by calling the CreateBuiltinFunction abstract operation.</p>\n    </emu-clause>\n  "}, "sec-built-in-function-objects": {"num": "9.3", "title": "#sec-built-in-function-objects Built-in Function Objects", "html": "<emu-clause id=\"sec-built-in-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</span> Built-in Function Objects</h1>\n    <p>The built-in function objects defined in this specification may be implemented as either ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) whose behaviour is provided using ECMAScript code or as implementation provided function exotic objects whose behaviour is provided in some other manner. In either case, the effect of calling such functions must conform to their specifications. An implementation may also provide additional built-in function objects that are not defined in this specification.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> it must have the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> behaviour specified in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. All such function exotic objects also have [[Prototype]], [[Extensible]], [[Realm]], and [[ScriptOrModule]] internal slots.</p>\n    <p>Unless otherwise specified every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref> object as the initial value of its [[Prototype]] internal slot.</p>\n    <p>The behaviour specified for each built-in function via algorithm steps or other means is the specification of the function body behaviour for both [[Call]] and [[Construct]] invocations of the function. However, [[Construct]] invocation is not supported by all built-in functions. For each built-in function, when invoked with [[Call]], the [[Call]] <var>thisArgument</var> provides the <emu-val>this</emu-val> value, the [[Call]] <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>. When invoked with [[Construct]], the <emu-val>this</emu-val> value is uninitialized, the [[Construct]] <var>argumentsList</var> provides the named parameters, and the [[Construct]] <var>newTarget</var> parameter provides the NewTarget value. If the built-in function is implemented as an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> then this specified behaviour must be implemented by the ECMAScript code that is the body of the function. Built-in functions that are ECMAScript function objects must be strict functions. If a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has any [[Call]] behaviour other than throwing a <emu-val>TypeError</emu-val> exception, an ECMAScript implementation of the function must be done in a manner that does not cause the function's [[IsClassConstructor]] internal slot to have the value <emu-val>true</emu-val>.</p>\n    <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function. When a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called as part of a <code>new</code> expression the <var>argumentsList</var> parameter of the invoked [[Construct]] internal method provides the values for the built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s named parameters.</p>\n    <p>Built-in functions that are not constructors do not have a <emu-val>\"prototype\"</emu-val> property unless otherwise specified in the description of a particular function.</p>\n    <p>Built-in functions have an [[InitialName]] internal slot.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is not implemented as an ECMAScript function it must provide [[Call]] and [[Construct]] internal methods that conform to the following definitions:</p>\n\n    <div id=\"excluded-sec-built-in-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.3.1</span>#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-built-in-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.3.2</span>#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-createbuiltinfunction\"><h1><span class=\"secnum\">9.3.3</span>#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}, "to": {"secList": ["sec-createbuiltinfunction", "sec-built-in-function-objects"], "secData": {"sec-createbuiltinfunction": {"num": "9.3.3", "title": "#sec-createbuiltinfunction CreateBuiltinFunction ( steps [ , additionalInternalSlotsList [ , realm [ , prototype ] ] ] )", "html": "<emu-clause id=\"sec-createbuiltinfunction\" aoid=\"CreateBuiltinFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</span> CreateBuiltinFunction ( <var>steps</var> [ , <var>additionalInternalSlotsList</var> [ , <var>realm</var> [ , <var>prototype</var> ] ] ] )</h1>\n      <p>The abstract operation CreateBuiltinFunction takes arguments <var>steps</var> and optional arguments <var>additionalInternalSlotsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of internal slot names), <var>realm</var>, and <var>prototype</var>. <var>additionalInternalSlotsList</var> contains the names of additional internal slots that must be defined as part of the object. This operation creates a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>steps</var> is either a set of algorithm steps or other definition of a function's behaviour provided in this specification.</li><li>If <var>realm</var> is not present, set <var>realm</var> to <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var> is a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.</li><li>If <var>prototype</var> is not present, set <var>prototype</var> to <var>realm</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>]].</li><li>Let <var>internalSlotsList</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing [[Prototype]], [[Extensible]], and the internal slots specified in <emu-xref href=\"#table-internal-slots-of-ecmascript-function-objects\"><a href=\"#table-internal-slots-of-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</a></emu-xref> and [[InitialName]], or the internal slots specified in <emu-xref href=\"#table-internal-slots-of-built-in-function-objects\"><a href=\"#table-internal-slots-of-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-built-in-function-objects\">#table-internal-slots-of-built-in-function-objects</a></emu-xref>, as appropriate.</li><li>If <var>additionalInternalSlotsList</var> is present, append each of its elements to <var>internalSlotsList</var>.</li><li>Let <var>func</var> be a new built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that when called performs the action described by <var>steps</var>. The new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has internal slots whose names are the elements of <var>internalSlotsList</var>.</li><li>Set <var>func</var>.[[Extensible]] to <emu-val>true</emu-val>.</li><li>Set <var>func</var>.[[Prototype]] to <var>prototype</var>.</li><li>Set <var>func</var>.[[Realm]] to <var>realm</var>.</li><li>Set <var>func</var>.[[ScriptOrModule]] to <emu-val>null</emu-val>.</li><li>Set <var>func</var>.[[InitialName]] to <emu-val>null</emu-val>.</li><li>Return <var>func</var>.</li></ol></emu-alg>\n      <p>Each built-in function defined in this specification is created by calling the CreateBuiltinFunction abstract operation.</p>\n    </emu-clause>\n  "}, "sec-built-in-function-objects": {"num": "9.3", "title": "#sec-built-in-function-objects Built-in Function Objects", "html": "<emu-clause id=\"sec-built-in-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</span> Built-in Function Objects</h1>\n    <p>The built-in function objects defined in this specification may be implemented as either ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) whose behaviour is provided using ECMAScript code or as implementation provided function exotic objects whose behaviour is provided in some other manner. In either case, the effect of calling such functions must conform to their specifications. An implementation may also provide additional built-in function objects that are not defined in this specification.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> it must have the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> behaviour specified in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. All such function exotic objects also have [[Prototype]], [[Extensible]], [[Realm]], and [[ScriptOrModule]] internal slots.</p>\n    <p>Unless otherwise specified every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref> object as the initial value of its [[Prototype]] internal slot.</p>\n    <p>The behaviour specified for each built-in function via algorithm steps or other means is the specification of the function body behaviour for both [[Call]] and [[Construct]] invocations of the function. However, [[Construct]] invocation is not supported by all built-in functions. For each built-in function, when invoked with [[Call]], the [[Call]] <var>thisArgument</var> provides the <emu-val>this</emu-val> value, the [[Call]] <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>. When invoked with [[Construct]], the <emu-val>this</emu-val> value is uninitialized, the [[Construct]] <var>argumentsList</var> provides the named parameters, and the [[Construct]] <var>newTarget</var> parameter provides the NewTarget value. If the built-in function is implemented as an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> then this specified behaviour must be implemented by the ECMAScript code that is the body of the function. Built-in functions that are ECMAScript function objects must be strict functions. If a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has any [[Call]] behaviour other than throwing a <emu-val>TypeError</emu-val> exception, an ECMAScript implementation of the function must be done in a manner that does not cause the function's [[IsClassConstructor]] internal slot to have the value <emu-val>true</emu-val>.</p>\n    <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function. When a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called as part of a <code>new</code> expression the <var>argumentsList</var> parameter of the invoked [[Construct]] internal method provides the values for the built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s named parameters.</p>\n    <p>Built-in functions that are not constructors do not have a <emu-val>\"prototype\"</emu-val> property unless otherwise specified in the description of a particular function.</p>\n\n    <p>In addition to [[Extensible]] and [[Prototype]], built-in function objects also have the internal slots listed in <emu-xref href=\"#table-internal-slots-of-built-in-function-objects\"><a href=\"#table-internal-slots-of-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-built-in-function-objects\">#table-internal-slots-of-built-in-function-objects</a></emu-xref>.</p>\n    <emu-table id=\"table-internal-slots-of-built-in-function-objects\" caption=\"Internal Slots of Built-in Function Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-internal-slots-of-built-in-function-objects\">#table-internal-slots-of-built-in-function-objects</span>: Internal Slots of Built-in Function Objects</figcaption>\n      <table>\n        <tbody>\n          <tr>\n            <th>\n              Internal Slot\n            </th>\n            <th>\n              Type\n            </th>\n            <th>\n              Description\n            </th>\n          </tr>\n          <tr>\n            <td>\n              [[Realm]]\n            </td>\n            <td>\n              <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>\n            </td>\n            <td>\n              The <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> in which the function was created and which provides any intrinsic objects that are accessed when evaluating the function.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[ScriptOrModule]]\n            </td>\n            <td>\n              Null\n            </td>\n            <td>\n              The script or module in which the function was created.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[InitialName]]\n            </td>\n            <td>\n              String\n            </td>\n            <td>\n              The initial name of the built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. Used by <emu-xref href=\"#sec-function.prototype.tostring\"><a href=\"#sec-function.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.tostring\">#sec-function.prototype.tostring</a></emu-xref>.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an ECMAScript function it must also have the internal slots listed in <emu-xref href=\"#table-internal-slots-of-ecmascript-function-objects\"><a href=\"#table-internal-slots-of-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</a></emu-xref>.</p>\n\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is not implemented as an ECMAScript function it must provide [[Call]] and [[Construct]] internal methods that conform to the following definitions:</p>\n\n    <div id=\"excluded-sec-built-in-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.3.1</span>#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-built-in-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.3.2</span>#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-createbuiltinfunction\"><h1><span class=\"secnum\">9.3.3</span>#sec-createbuiltinfunction CreateBuiltinFunction ( steps [ , additionalInternalSlotsList [ , realm [ , prototype ] ] ] )</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-internal-slots-of-ecmascript-function-objects": "Table 28", "table-internal-slots-of-built-in-function-objects": "Table 29"}}}