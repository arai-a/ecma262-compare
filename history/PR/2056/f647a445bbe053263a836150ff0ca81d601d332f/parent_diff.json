{"from": {"secList": ["sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization", "sec-runtime-semantics-classdefinitionevaluation", "sec-properties-of-promise-instances", "sec-properties-of-the-aggregate-error-constructors", "sec-object.prototype", "sec-properties-of-the-sharedarraybuffer-prototype-object", "sec-get-regexp.prototype.global", "sec-properties-of-the-weakmap-prototype-object", "sec-promise.prototype.then", "sec-finalization-registry.prototype.constructor", "sec-properties-of-the-dataview-prototype-object", "sec-properties-of-the-finalization-registry-prototype-object", "sec-properties-of-the-function-prototype-object", "sec-properties-of-the-nativeerror-prototype-objects", "sec-map.prototype", "sec-object-value", "sec-get-regexp.prototype.source", "sec-weak-ref.prototype.constructor", "sec-properties-of-the-date-prototype-object", "sec-get-regexp.prototype.multiline", "sec-promise.prototype", "sec-properties-of-the-array-prototype-object", "sec-json.parse", "sec-properties-of-the-set-prototype-object", "sec-string.prototype", "sec-aggregate-error-constructor", "sec-array.prototype.foreach", "sec-immutable-prototype-exotic-objects", "sec-array.prototype.values", "sec-async-function-prototype-properties", "sec-dataview.prototype", "sec-createmappedargumentsobject", "sec-get-regexp.prototype.unicode", "sec-json.stringify", "sec-properties-of-the-arraybuffer-prototype-object", "sec-date.prototype", "sec-properties-of-the-symbol-prototype-object", "sec-asynciteratorprototype", "sec-properties-of-the-error-prototype-object", "sec-aggregate-error.prototype", "sec-properties-of-the-number-prototype-object", "sec-array.prototype.entries", "sec-get-regexp.prototype.dotAll", "sec-object.getownpropertydescriptors", "sec-symbol.prototype", "sec-object.fromentries", "sec-properties-of-the-boolean-prototype-object", "sec-runtime-semantics-restdestructuringassignmentevaluation", "sec-properties-of-the-string-prototype-object", "sec-object.prototype.tostring", "sec-%iteratorprototype%-object", "sec-aggregate-error.prototype.constructor", "sec-promise.reject", "sec-properties-of-the-aggregate-error-prototype-objects", "sec-properties-of-the-weakset-prototype-object", "sec-get-regexp.prototype.ignorecase", "sec-properties-of-the-object-prototype-object", "sec-math-object", "sec-properties-of-the-bigint-prototype-object", "sec-number.prototype", "sec-regexp.prototype", "sec-properties-of-the-%typedarrayprototype%-object", "sec-properties-of-generator-prototype", "sec-atomics-object", "sec-promise.all", "sec-object-initializer-runtime-semantics-evaluation", "sec-sharedarraybuffer.prototype", "sec-proxy.revocable", "sec-properties-of-the-finalization-registry-constructor", "sec-properties-of-the-promise-prototype-object", "sec-createiterresultobject", "sec-properties-of-asyncgenerator-prototype", "sec-setrealmglobalobject", "sec-properties-of-the-map-prototype-object", "sec-createunmappedargumentsobject", "sec-weakset.prototype", "sec-finalization-registry-constructor", "sec-frompropertydescriptor", "sec-arraycreate", "sec-weak-ref-constructor", "sec-set.prototype", "sec-promise.allsettled-resolve-element-functions", "sec-arraybuffer.prototype", "sec-properties-of-the-weak-ref-constructor", "sec-properties-of-the-regexp-prototype-object", "sec-array.prototype.keys", "sec-error.prototype", "sec-properties-of-the-weak-ref-prototype-object", "sec-makeconstructor", "sec-array.prototype", "sec-boolean.prototype", "sec-promise.allsettled-reject-element-functions", "sec-object.prototype.valueof", "sec-well-known-intrinsic-objects", "sec-weakmap.prototype", "sec-reflect-object", "sec-json-object", "sec-get-regexp.prototype.sticky", "sec-promise.resolve"], "secData": {"sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization": {"num": "13.3.3.7", "title": "#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization Runtime Semantics: RestBindingInitialization", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\">#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization</span> Runtime Semantics: RestBindingInitialization</h1>\n        <p>With parameters <var>value</var>, <var>environment</var>, and <var>excludedNames</var>.</p>\n\n        <emu-grammar><emu-production name=\"BindingRestProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"145844de\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lhs</var> be ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>, <var>environment</var>).</li><li>Let <var>restObj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform ?&#160;<emu-xref aoid=\"CopyDataProperties\"><a href=\"#sec-copydataproperties\">CopyDataProperties</a></emu-xref>(<var>restObj</var>, <var>value</var>, <var>excludedNames</var>).</li><li>If <var>environment</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>restObj</var>).</li><li>Return <emu-xref aoid=\"InitializeReferencedBinding\"><a href=\"#sec-initializereferencedbinding\">InitializeReferencedBinding</a></emu-xref>(<var>lhs</var>, <var>restObj</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-classdefinitionevaluation": {"num": "14.6.14", "title": "#sec-runtime-semantics-classdefinitionevaluation Runtime Semantics: ClassDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-classdefinitionevaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-classdefinitionevaluation\">#sec-runtime-semantics-classdefinitionevaluation</span> Runtime Semantics: ClassDefinitionEvaluation</h1>\n      <p>With parameters <var>classBinding</var> and <var>className</var>.</p>\n      <emu-grammar><emu-production name=\"ClassTail\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b8ea6aa5\"><emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>{</emu-t><emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>env</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>classScope</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>env</var>).</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.CreateImmutableBinding(<var>classBinding</var>, <emu-val>true</emu-val>).</li></ol></li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, then<ol><li>Let <var>protoParent</var> be %Object.prototype%.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else,<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>Let <var>superclassRef</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassHeritage\">ClassHeritage</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Let <var>superclass</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>superclassRef</var>).</li><li>If <var>superclass</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>protoParent</var> be <emu-val>null</emu-val>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else if <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>superclass</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Else,<ol><li>Let <var>protoParent</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>superclass</var>, <emu-val>\"prototype\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>protoParent</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorParent</var> be <var>superclass</var>.</li></ol></li></ol></li><li>Let <var>proto</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>protoParent</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>constructor</var> be <emu-const>empty</emu-const>.</li><li>Else, let <var>constructor</var> be ConstructorMethod of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>If <var>constructor</var> is <emu-const>empty</emu-const>, then<ol><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Set <var>constructor</var> to the result of parsing the source text\n              <pre><code class=\"javascript hljs\"><span class=\"hljs-keyword\">constructor</span>(...args) { <span class=\"hljs-keyword\">super</span>(...args); }</code></pre>\n              using the syntactic grammar with the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li></ol></li><li>Else,<ol><li>Set <var>constructor</var> to the result of parsing the source text\n              <pre><code class=\"javascript hljs\"><span class=\"hljs-keyword\">constructor</span>() {}</code></pre>\n              using the syntactic grammar with the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li></ol></li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>Let <var>constructorInfo</var> be ! DefineMethod of <var>constructor</var> with arguments <var>proto</var> and <var>constructorParent</var>.</li><li>Let <var>F</var> be <var>constructorInfo</var>.[[Closure]].</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>className</var>).</li><li>Perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>, <emu-val>false</emu-val>, <var>proto</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, set <var>F</var>.[[ConstructorKind]] to <emu-const>derived</emu-const>.</li><li>Perform <emu-xref aoid=\"MakeClassConstructor\"><a href=\"#sec-makeclassconstructor\">MakeClassConstructor</a></emu-xref>(<var>F</var>).</li><li>Perform <emu-xref aoid=\"CreateMethodProperty\"><a href=\"#sec-createmethodproperty\">CreateMethodProperty</a></emu-xref>(<var>proto</var>, <emu-val>\"constructor\"</emu-val>, <var>F</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>methods</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Else, let <var>methods</var> be NonConstructorMethodDefinitions of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>For each <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <var>m</var> in order from <var>methods</var>, do<ol><li>If IsStatic of <var>m</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>status</var> be PropertyDefinitionEvaluation of <var>m</var> with arguments <var>proto</var> and <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>status</var> be PropertyDefinitionEvaluation of <var>m</var> with arguments <var>F</var> and <emu-val>false</emu-val>.</li></ol></li><li>If <var>status</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>status</var>).</li></ol></li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.InitializeBinding(<var>classBinding</var>, <var>F</var>).</li></ol></li><li>Return <var>F</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-properties-of-promise-instances": {"num": "26.6.6", "title": "#sec-properties-of-promise-instances Properties of Promise Instances", "html": "<emu-clause id=\"sec-properties-of-promise-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-promise-instances\">#sec-properties-of-promise-instances</span> Properties of Promise Instances</h1>\n      <p>Promise instances are ordinary objects that inherit properties from the Promise prototype object (the intrinsic, %Promise.prototype%). Promise instances are initially created with the internal slots described in <emu-xref href=\"#table-59\"><a href=\"#table-59\" class=\"excluded-xref\" excluded-id=\"table-59\">#table-59</a></emu-xref>.</p>\n      <emu-table id=\"table-59\" caption=\"Internal Slots of Promise Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-59\">#table-59</span>: Internal Slots of Promise Instances</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Internal Slot\n            </th>\n            <th>\n              Description\n            </th>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseState]]\n            </td>\n            <td>\n              One of <emu-const>pending</emu-const>, <emu-const>fulfilled</emu-const>, or <emu-const>rejected</emu-const>. Governs how a promise will react to incoming calls to its <code>then</code> method.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseResult]]\n            </td>\n            <td>\n              The value with which the promise has been fulfilled or rejected, if any. Only meaningful if [[PromiseState]] is not <emu-const>pending</emu-const>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseFulfillReactions]]\n            </td>\n            <td>\n              A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of PromiseReaction records to be processed when/if the promise transitions from the <emu-const>pending</emu-const> state to the <emu-const>fulfilled</emu-const> state.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseRejectReactions]]\n            </td>\n            <td>\n              A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of PromiseReaction records to be processed when/if the promise transitions from the <emu-const>pending</emu-const> state to the <emu-const>rejected</emu-const> state.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseIsHandled]]\n            </td>\n            <td>\n              A boolean indicating whether the promise has ever had a fulfillment or rejection handler; used in unhandled rejection tracking.\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n  "}, "sec-properties-of-the-aggregate-error-constructors": {"num": "19.5.7.2", "title": "#sec-properties-of-the-aggregate-error-constructors Properties of the AggregateError Constructor", "html": "<emu-clause id=\"sec-properties-of-the-aggregate-error-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-aggregate-error-constructors\">#sec-properties-of-the-aggregate-error-constructors</span> Properties of the AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error.prototype\"><h1><span class=\"secnum\">19.5.7.2.1</span>#sec-aggregate-error.prototype AggregateError.prototype</h1>...</div></emu-clause>\n\n      "}, "sec-object.prototype": {"num": "19.1.2.19", "title": "#sec-object.prototype Object.prototype", "html": "<emu-clause id=\"sec-object.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype\">#sec-object.prototype</span> Object.prototype</h1>\n        <p>The initial value of <code>Object.prototype</code> is %Object.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-sharedarraybuffer-prototype-object": {"num": "24.2.4", "title": "#sec-properties-of-the-sharedarraybuffer-prototype-object Properties of the SharedArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">#sec-properties-of-the-sharedarraybuffer-prototype-object</span> Properties of the SharedArrayBuffer Prototype Object</h1>\n      <p>The SharedArrayBuffer prototype object:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBufferPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-sharedarraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.2.4.1</span>#sec-get-sharedarraybuffer.prototype.bytelength get SharedArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.2.4.2</span>#sec-sharedarraybuffer.prototype.constructor SharedArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.2.4.3</span>#sec-sharedarraybuffer.prototype.slice SharedArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.toString\"><h1><span class=\"secnum\">24.2.4.4</span>#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp.prototype.global": {"num": "21.2.5.5", "title": "#sec-get-regexp.prototype.global get RegExp.prototype.global", "html": "<emu-clause id=\"sec-get-regexp.prototype.global\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.global\">#sec-get-regexp.prototype.global</span> get RegExp.prototype.global</h1>\n        <p><code>RegExp.prototype.global</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0067 (LATIN SMALL LETTER G), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-weakmap-prototype-object": {"num": "23.3.3", "title": "#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakmap-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakmap-prototype-object\">#sec-properties-of-the-weakmap-prototype-object</span> Properties of the WeakMap Prototype Object</h1>\n      <p>The WeakMap prototype object:</p>\n      <ul>\n        <li>is <dfn>%WeakMapPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakMapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap.prototype.constructor\"><h1><span class=\"secnum\">23.3.3.1</span>#sec-weakmap.prototype.constructor WeakMap.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakmap.prototype.delete\"><h1><span class=\"secnum\">23.3.3.2</span>#sec-weakmap.prototype.delete WeakMap.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.get\"><h1><span class=\"secnum\">23.3.3.3</span>#sec-weakmap.prototype.get WeakMap.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.has\"><h1><span class=\"secnum\">23.3.3.4</span>#sec-weakmap.prototype.has WeakMap.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.set\"><h1><span class=\"secnum\">23.3.3.5</span>#sec-weakmap.prototype.set WeakMap.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-weakmap.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.3.3.6</span>#sec-weakmap.prototype-@@tostringtag WeakMap.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-promise.prototype.then": {"num": "26.6.5.4", "title": "#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )", "html": "<emu-clause id=\"sec-promise.prototype.then\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</span> Promise.prototype.then ( <var>onFulfilled</var>, <var>onRejected</var> )</h1>\n        <p>When the <code>then</code> method is called with arguments <var>onFulfilled</var> and <var>onRejected</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsPromise\"><a href=\"#sec-ispromise\">IsPromise</a></emu-xref>(<var>promise</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Let <var>resultCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Return <emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>, <var>resultCapability</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%PromiseProto_then%</dfn> intrinsic object.</p>\n\n        <div id=\"excluded-sec-performpromisethen\"><h1><span class=\"secnum\">26.6.5.4.1</span>#sec-performpromisethen PerformPromiseThen ( promise, onFulfilled, onRejected [ , resultCapability ] )</h1>...</div></emu-clause>\n\n      "}, "sec-finalization-registry.prototype.constructor": {"num": "25.2.3.1", "title": "#sec-finalization-registry.prototype.constructor FinalizationRegistry.prototype.constructor", "html": "<emu-clause id=\"sec-finalization-registry.prototype.constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry.prototype.constructor\">#sec-finalization-registry.prototype.constructor</span> FinalizationRegistry.prototype.constructor</h1>\n        <p>The initial value of <code>FinalizationRegistry.prototype.constructor</code> is the intrinsic object <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-dataview-prototype-object": {"num": "24.3.4", "title": "#sec-properties-of-the-dataview-prototype-object Properties of the DataView Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-dataview-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-dataview-prototype-object\">#sec-properties-of-the-dataview-prototype-object</span> Properties of the DataView Prototype Object</h1>\n      <p>The DataView prototype object:</p>\n      <ul>\n        <li>is <dfn>%DataViewPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-dataview.prototype.buffer\"><h1><span class=\"secnum\">24.3.4.1</span>#sec-get-dataview.prototype.buffer get DataView.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.bytelength\"><h1><span class=\"secnum\">24.3.4.2</span>#sec-get-dataview.prototype.bytelength get DataView.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.byteoffset\"><h1><span class=\"secnum\">24.3.4.3</span>#sec-get-dataview.prototype.byteoffset get DataView.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-dataview.prototype.constructor\"><h1><span class=\"secnum\">24.3.4.4</span>#sec-dataview.prototype.constructor DataView.prototype.constructor</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbigint64\"><h1><span class=\"secnum\">24.3.4.5</span>#sec-dataview.prototype.getbigint64 DataView.prototype.getBigInt64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbiguint64\"><h1><span class=\"secnum\">24.3.4.6</span>#sec-dataview.prototype.getbiguint64 DataView.prototype.getBigUint64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat32\"><h1><span class=\"secnum\">24.3.4.7</span>#sec-dataview.prototype.getfloat32 DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat64\"><h1><span class=\"secnum\">24.3.4.8</span>#sec-dataview.prototype.getfloat64 DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint8\"><h1><span class=\"secnum\">24.3.4.9</span>#sec-dataview.prototype.getint8 DataView.prototype.getInt8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint16\"><h1><span class=\"secnum\">24.3.4.10</span>#sec-dataview.prototype.getint16 DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint32\"><h1><span class=\"secnum\">24.3.4.11</span>#sec-dataview.prototype.getint32 DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint8\"><h1><span class=\"secnum\">24.3.4.12</span>#sec-dataview.prototype.getuint8 DataView.prototype.getUint8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint16\"><h1><span class=\"secnum\">24.3.4.13</span>#sec-dataview.prototype.getuint16 DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint32\"><h1><span class=\"secnum\">24.3.4.14</span>#sec-dataview.prototype.getuint32 DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbigint64\"><h1><span class=\"secnum\">24.3.4.15</span>#sec-dataview.prototype.setbigint64 DataView.prototype.setBigInt64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbiguint64\"><h1><span class=\"secnum\">24.3.4.16</span>#sec-dataview.prototype.setbiguint64 DataView.prototype.setBigUint64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat32\"><h1><span class=\"secnum\">24.3.4.17</span>#sec-dataview.prototype.setfloat32 DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat64\"><h1><span class=\"secnum\">24.3.4.18</span>#sec-dataview.prototype.setfloat64 DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint8\"><h1><span class=\"secnum\">24.3.4.19</span>#sec-dataview.prototype.setint8 DataView.prototype.setInt8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint16\"><h1><span class=\"secnum\">24.3.4.20</span>#sec-dataview.prototype.setint16 DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint32\"><h1><span class=\"secnum\">24.3.4.21</span>#sec-dataview.prototype.setint32 DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint8\"><h1><span class=\"secnum\">24.3.4.22</span>#sec-dataview.prototype.setuint8 DataView.prototype.setUint8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint16\"><h1><span class=\"secnum\">24.3.4.23</span>#sec-dataview.prototype.setuint16 DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint32\"><h1><span class=\"secnum\">24.3.4.24</span>#sec-dataview.prototype.setuint32 DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.3.4.25</span>#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-finalization-registry-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-finalization-registry-prototype-object Properties of the FinalizationRegistry Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-finalization-registry-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-finalization-registry-prototype-object\">#sec-properties-of-the-finalization-registry-prototype-object</span> Properties of the FinalizationRegistry Prototype Object</h1>\n      <p>The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> prototype object:</p>\n      <ul>\n        <li>is the intrinsic object <dfn>%FinalizationRegistry.prototype%</dfn>.</li>\n        <li>\n          has a [[Prototype]] internal slot whose value is %Object.prototype%.\n        </li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>\n          does not have [[Cells]] and [[CleanupCallback]] internal slots.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-finalization-registry.prototype.constructor FinalizationRegistry.prototype.constructor</h1>...</div><div id=\"excluded-sec-finalization-registry.prototype.register\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-finalization-registry.prototype.register FinalizationRegistry.prototype.register ( target, heldValue [ , unregisterToken ] )</h1>...</div><div id=\"excluded-sec-finalization-registry.prototype.unregister\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-finalization-registry.prototype.unregister FinalizationRegistry.prototype.unregister ( unregisterToken )</h1>...</div><div id=\"excluded-sec-finalization-registry.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.4</span>#sec-finalization-registry.prototype-@@tostringtag FinalizationRegistry.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-function-prototype-object": {"num": "19.2.3", "title": "#sec-properties-of-the-function-prototype-object Properties of the Function Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-function-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</span> Properties of the Function Prototype Object</h1>\n      <p>The Function prototype object:</p>\n      <ul>\n        <li>is <dfn>%Function.prototype%</dfn>.</li>\n        <li>is itself a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n        <li>accepts any arguments and returns <emu-val>undefined</emu-val> when invoked.</li>\n        <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 0.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is the empty String.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Function prototype object is specified to be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-function.prototype.apply\"><h1><span class=\"secnum\">19.2.3.1</span>#sec-function.prototype.apply Function.prototype.apply ( thisArg, argArray )</h1>...</div><div id=\"excluded-sec-function.prototype.bind\"><h1><span class=\"secnum\">19.2.3.2</span>#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.call\"><h1><span class=\"secnum\">19.2.3.3</span>#sec-function.prototype.call Function.prototype.call ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.constructor\"><h1><span class=\"secnum\">19.2.3.4</span>#sec-function.prototype.constructor Function.prototype.constructor</h1>...</div><div id=\"excluded-sec-function.prototype.tostring\"><h1><span class=\"secnum\">19.2.3.5</span>#sec-function.prototype.tostring Function.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-function.prototype-@@hasinstance\"><h1><span class=\"secnum\">19.2.3.6</span>#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-nativeerror-prototype-objects": {"num": "19.5.6.3", "title": "#sec-properties-of-the-nativeerror-prototype-objects Properties of the NativeError Prototype Objects", "html": "<emu-clause id=\"sec-properties-of-the-nativeerror-prototype-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-nativeerror-prototype-objects\">#sec-properties-of-the-nativeerror-prototype-objects</span> Properties of the <var>NativeError</var> Prototype Objects</h1>\n        <p>Each <var>NativeError</var> prototype object:</p>\n        <ul>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>is not an Error instance and does not have an [[ErrorData]] internal slot.</li>\n          <li>has a [[Prototype]] internal slot whose value is %Error.prototype%.</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror.prototype.constructor\"><h1><span class=\"secnum\">19.5.6.3.1</span>#sec-nativeerror.prototype.constructor NativeError.prototype.constructor</h1>...</div><div id=\"excluded-sec-nativeerror.prototype.message\"><h1><span class=\"secnum\">19.5.6.3.2</span>#sec-nativeerror.prototype.message NativeError.prototype.message</h1>...</div><div id=\"excluded-sec-nativeerror.prototype.name\"><h1><span class=\"secnum\">19.5.6.3.3</span>#sec-nativeerror.prototype.name NativeError.prototype.name</h1>...</div></emu-clause>\n\n      "}, "sec-map.prototype": {"num": "23.1.2.1", "title": "#sec-map.prototype Map.prototype", "html": "<emu-clause id=\"sec-map.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype\">#sec-map.prototype</span> Map.prototype</h1>\n        <p>The initial value of <code>Map.prototype</code> is %Map.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-object-value": {"num": "19.1.1.1", "title": "#sec-object-value Object ( [ value ] )", "html": "<emu-clause id=\"sec-object-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-value\">#sec-object-value</span> Object ( [ <var>value</var> ] )</h1>\n        <p>When the <code>Object</code> function is called with optional argument <var>value</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is neither <emu-val>undefined</emu-val> nor the active function, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Object.prototype%\"</emu-val>).</li></ol></li><li>If <var>value</var> is <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Return !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>value</var>).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>Object</code> function is 1.</p>\n      </emu-clause>\n    "}, "sec-get-regexp.prototype.source": {"num": "21.2.5.12", "title": "#sec-get-regexp.prototype.source get RegExp.prototype.source", "html": "<emu-clause id=\"sec-get-regexp.prototype.source\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.source\">#sec-get-regexp.prototype.source</span> get RegExp.prototype.source</h1>\n        <p><code>RegExp.prototype.source</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalSource]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>\"(?:)\"</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>R</var> has an [[OriginalFlags]] internal slot.</li><li>Let <var>src</var> be <var>R</var>.[[OriginalSource]].</li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>Return <emu-xref aoid=\"EscapeRegExpPattern\"><a href=\"#sec-escaperegexppattern\">EscapeRegExpPattern</a></emu-xref>(<var>src</var>, <var>flags</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weak-ref.prototype.constructor": {"num": "25.1.3.1", "title": "#sec-weak-ref.prototype.constructor WeakRef.prototype.constructor", "html": "<emu-clause id=\"sec-weak-ref.prototype.constructor\" normative-optional=\"\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref.prototype.constructor\">#sec-weak-ref.prototype.constructor</span> WeakRef.prototype.constructor</h1>\n\n        <p>The initial value of <code>WeakRef.prototype.constructor</code> is the intrinsic object %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-date-prototype-object": {"num": "20.4.4", "title": "#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-date-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</span> Properties of the Date Prototype Object</h1>\n      <p>The Date prototype object:</p>\n      <ul>\n        <li>is <dfn>%DatePrototype%</dfn>.</li>\n        <li>is itself an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Date instance and does not have a [[DateValue]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly defined otherwise, the methods of the Date prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be an object that has a [[DateValue]] internal slot that has been initialized to a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>.</p>\n      <p>The abstract operation <dfn id=\"thistimevalue\" aoid=\"thisTimeValue\" oldids=\"sec-thistimevalue\">thisTimeValue<span id=\"sec-thistimevalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Return <var>value</var>.[[DateValue]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>In following descriptions of functions that are properties of the Date prototype object, the phrase &#8220;<dfn id=\"this-Date-object\">this Date object</dfn>&#8221; refers to the object that is the <emu-val>this</emu-val> value for the invocation of the function. If the Type of the <emu-val>this</emu-val> value is not Object, a <emu-val>TypeError</emu-val> exception is thrown. The phrase &#8220;<dfn id=\"this-time-value\">this time value</dfn>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-date.prototype.constructor\"><h1><span class=\"secnum\">20.4.4.1</span>#sec-date.prototype.constructor Date.prototype.constructor</h1>...</div><div id=\"excluded-sec-date.prototype.getdate\"><h1><span class=\"secnum\">20.4.4.2</span>#sec-date.prototype.getdate Date.prototype.getDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getday\"><h1><span class=\"secnum\">20.4.4.3</span>#sec-date.prototype.getday Date.prototype.getDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getfullyear\"><h1><span class=\"secnum\">20.4.4.4</span>#sec-date.prototype.getfullyear Date.prototype.getFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gethours\"><h1><span class=\"secnum\">20.4.4.5</span>#sec-date.prototype.gethours Date.prototype.getHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmilliseconds\"><h1><span class=\"secnum\">20.4.4.6</span>#sec-date.prototype.getmilliseconds Date.prototype.getMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getminutes\"><h1><span class=\"secnum\">20.4.4.7</span>#sec-date.prototype.getminutes Date.prototype.getMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmonth\"><h1><span class=\"secnum\">20.4.4.8</span>#sec-date.prototype.getmonth Date.prototype.getMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getseconds\"><h1><span class=\"secnum\">20.4.4.9</span>#sec-date.prototype.getseconds Date.prototype.getSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettime\"><h1><span class=\"secnum\">20.4.4.10</span>#sec-date.prototype.gettime Date.prototype.getTime ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettimezoneoffset\"><h1><span class=\"secnum\">20.4.4.11</span>#sec-date.prototype.gettimezoneoffset Date.prototype.getTimezoneOffset ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcdate\"><h1><span class=\"secnum\">20.4.4.12</span>#sec-date.prototype.getutcdate Date.prototype.getUTCDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcday\"><h1><span class=\"secnum\">20.4.4.13</span>#sec-date.prototype.getutcday Date.prototype.getUTCDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcfullyear\"><h1><span class=\"secnum\">20.4.4.14</span>#sec-date.prototype.getutcfullyear Date.prototype.getUTCFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutchours\"><h1><span class=\"secnum\">20.4.4.15</span>#sec-date.prototype.getutchours Date.prototype.getUTCHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.16</span>#sec-date.prototype.getutcmilliseconds Date.prototype.getUTCMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcminutes\"><h1><span class=\"secnum\">20.4.4.17</span>#sec-date.prototype.getutcminutes Date.prototype.getUTCMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmonth\"><h1><span class=\"secnum\">20.4.4.18</span>#sec-date.prototype.getutcmonth Date.prototype.getUTCMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcseconds\"><h1><span class=\"secnum\">20.4.4.19</span>#sec-date.prototype.getutcseconds Date.prototype.getUTCSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.setdate\"><h1><span class=\"secnum\">20.4.4.20</span>#sec-date.prototype.setdate Date.prototype.setDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setfullyear\"><h1><span class=\"secnum\">20.4.4.21</span>#sec-date.prototype.setfullyear Date.prototype.setFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.sethours\"><h1><span class=\"secnum\">20.4.4.22</span>#sec-date.prototype.sethours Date.prototype.setHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmilliseconds\"><h1><span class=\"secnum\">20.4.4.23</span>#sec-date.prototype.setmilliseconds Date.prototype.setMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setminutes\"><h1><span class=\"secnum\">20.4.4.24</span>#sec-date.prototype.setminutes Date.prototype.setMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmonth\"><h1><span class=\"secnum\">20.4.4.25</span>#sec-date.prototype.setmonth Date.prototype.setMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setseconds\"><h1><span class=\"secnum\">20.4.4.26</span>#sec-date.prototype.setseconds Date.prototype.setSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.settime\"><h1><span class=\"secnum\">20.4.4.27</span>#sec-date.prototype.settime Date.prototype.setTime ( time )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcdate\"><h1><span class=\"secnum\">20.4.4.28</span>#sec-date.prototype.setutcdate Date.prototype.setUTCDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcfullyear\"><h1><span class=\"secnum\">20.4.4.29</span>#sec-date.prototype.setutcfullyear Date.prototype.setUTCFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutchours\"><h1><span class=\"secnum\">20.4.4.30</span>#sec-date.prototype.setutchours Date.prototype.setUTCHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.31</span>#sec-date.prototype.setutcmilliseconds Date.prototype.setUTCMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcminutes\"><h1><span class=\"secnum\">20.4.4.32</span>#sec-date.prototype.setutcminutes Date.prototype.setUTCMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmonth\"><h1><span class=\"secnum\">20.4.4.33</span>#sec-date.prototype.setutcmonth Date.prototype.setUTCMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcseconds\"><h1><span class=\"secnum\">20.4.4.34</span>#sec-date.prototype.setutcseconds Date.prototype.setUTCSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.todatestring\"><h1><span class=\"secnum\">20.4.4.35</span>#sec-date.prototype.todatestring Date.prototype.toDateString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toisostring\"><h1><span class=\"secnum\">20.4.4.36</span>#sec-date.prototype.toisostring Date.prototype.toISOString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.tojson\"><h1><span class=\"secnum\">20.4.4.37</span>#sec-date.prototype.tojson Date.prototype.toJSON ( key )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaledatestring\"><h1><span class=\"secnum\">20.4.4.38</span>#sec-date.prototype.tolocaledatestring Date.prototype.toLocaleDateString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocalestring\"><h1><span class=\"secnum\">20.4.4.39</span>#sec-date.prototype.tolocalestring Date.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaletimestring\"><h1><span class=\"secnum\">20.4.4.40</span>#sec-date.prototype.tolocaletimestring Date.prototype.toLocaleTimeString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tostring\"><h1><span class=\"secnum\">20.4.4.41</span>#sec-date.prototype.tostring Date.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.totimestring\"><h1><span class=\"secnum\">20.4.4.42</span>#sec-date.prototype.totimestring Date.prototype.toTimeString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toutcstring\"><h1><span class=\"secnum\">20.4.4.43</span>#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.valueof\"><h1><span class=\"secnum\">20.4.4.44</span>#sec-date.prototype.valueof Date.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-date.prototype-@@toprimitive\"><h1><span class=\"secnum\">20.4.4.45</span>#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp.prototype.multiline": {"num": "21.2.5.9", "title": "#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline", "html": "<emu-clause id=\"sec-get-regexp.prototype.multiline\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.multiline\">#sec-get-regexp.prototype.multiline</span> get RegExp.prototype.multiline</h1>\n        <p><code>RegExp.prototype.multiline</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x006D (LATIN SMALL LETTER M), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-promise.prototype": {"num": "26.6.4.4", "title": "#sec-promise.prototype Promise.prototype", "html": "<emu-clause id=\"sec-promise.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype\">#sec-promise.prototype</span> Promise.prototype</h1>\n        <p>The initial value of <code>Promise.prototype</code> is %Promise.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-array-prototype-object": {"num": "22.1.3", "title": "#sec-properties-of-the-array-prototype-object Properties of the Array Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-array-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</span> Properties of the Array Prototype Object</h1>\n      <p>The Array prototype object:</p>\n      <ul>\n        <li>is <dfn>%ArrayPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Array prototype object is specified to be an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-array.prototype.concat\"><h1><span class=\"secnum\">22.1.3.1</span>#sec-array.prototype.concat Array.prototype.concat ( ...arguments )</h1>...</div><div id=\"excluded-sec-array.prototype.constructor\"><h1><span class=\"secnum\">22.1.3.2</span>#sec-array.prototype.constructor Array.prototype.constructor</h1>...</div><div id=\"excluded-sec-array.prototype.copywithin\"><h1><span class=\"secnum\">22.1.3.3</span>#sec-array.prototype.copywithin Array.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-array.prototype.entries\"><h1><span class=\"secnum\">22.1.3.4</span>#sec-array.prototype.entries Array.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-array.prototype.every\"><h1><span class=\"secnum\">22.1.3.5</span>#sec-array.prototype.every Array.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.fill\"><h1><span class=\"secnum\">22.1.3.6</span>#sec-array.prototype.fill Array.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.filter\"><h1><span class=\"secnum\">22.1.3.7</span>#sec-array.prototype.filter Array.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.find\"><h1><span class=\"secnum\">22.1.3.8</span>#sec-array.prototype.find Array.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.findindex\"><h1><span class=\"secnum\">22.1.3.9</span>#sec-array.prototype.findindex Array.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flat\"><h1><span class=\"secnum\">22.1.3.10</span>#sec-array.prototype.flat Array.prototype.flat ( [ depth ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flatmap\"><h1><span class=\"secnum\">22.1.3.11</span>#sec-array.prototype.flatmap Array.prototype.flatMap ( mapperFunction [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.foreach\"><h1><span class=\"secnum\">22.1.3.12</span>#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.includes\"><h1><span class=\"secnum\">22.1.3.13</span>#sec-array.prototype.includes Array.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.indexof\"><h1><span class=\"secnum\">22.1.3.14</span>#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.join\"><h1><span class=\"secnum\">22.1.3.15</span>#sec-array.prototype.join Array.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-array.prototype.keys\"><h1><span class=\"secnum\">22.1.3.16</span>#sec-array.prototype.keys Array.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-array.prototype.lastindexof\"><h1><span class=\"secnum\">22.1.3.17</span>#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.map\"><h1><span class=\"secnum\">22.1.3.18</span>#sec-array.prototype.map Array.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.pop\"><h1><span class=\"secnum\">22.1.3.19</span>#sec-array.prototype.pop Array.prototype.pop ( )</h1>...</div><div id=\"excluded-sec-array.prototype.push\"><h1><span class=\"secnum\">22.1.3.20</span>#sec-array.prototype.push Array.prototype.push ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.reduce\"><h1><span class=\"secnum\">22.1.3.21</span>#sec-array.prototype.reduce Array.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reduceright\"><h1><span class=\"secnum\">22.1.3.22</span>#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reverse\"><h1><span class=\"secnum\">22.1.3.23</span>#sec-array.prototype.reverse Array.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-array.prototype.shift\"><h1><span class=\"secnum\">22.1.3.24</span>#sec-array.prototype.shift Array.prototype.shift ( )</h1>...</div><div id=\"excluded-sec-array.prototype.slice\"><h1><span class=\"secnum\">22.1.3.25</span>#sec-array.prototype.slice Array.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-array.prototype.some\"><h1><span class=\"secnum\">22.1.3.26</span>#sec-array.prototype.some Array.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.sort\"><h1><span class=\"secnum\">22.1.3.27</span>#sec-array.prototype.sort Array.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-array.prototype.splice\"><h1><span class=\"secnum\">22.1.3.28</span>#sec-array.prototype.splice Array.prototype.splice ( start, deleteCount, ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.tolocalestring\"><h1><span class=\"secnum\">22.1.3.29</span>#sec-array.prototype.tolocalestring Array.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.tostring\"><h1><span class=\"secnum\">22.1.3.30</span>#sec-array.prototype.tostring Array.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-array.prototype.unshift\"><h1><span class=\"secnum\">22.1.3.31</span>#sec-array.prototype.unshift Array.prototype.unshift ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.values\"><h1><span class=\"secnum\">22.1.3.32</span>#sec-array.prototype.values Array.prototype.values ( )</h1>...</div><div id=\"excluded-sec-array.prototype-@@iterator\"><h1><span class=\"secnum\">22.1.3.33</span>#sec-array.prototype-@@iterator Array.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-array.prototype-@@unscopables\"><h1><span class=\"secnum\">22.1.3.34</span>#sec-array.prototype-@@unscopables Array.prototype [ @@unscopables ]</h1>...</div></emu-clause>\n\n    "}, "sec-json.parse": {"num": "24.5.1", "title": "#sec-json.parse JSON.parse ( text [ , reviver ] )", "html": "<emu-clause id=\"sec-json.parse\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json.parse\">#sec-json.parse</span> JSON.parse ( <var>text</var> [ , <var>reviver</var> ] )</h1>\n      <p>The <code>parse</code> function parses a JSON text (a JSON-formatted String) and produces an ECMAScript value. The JSON format represents literals, arrays, and objects with a syntax similar to the syntax for ECMAScript literals, Array Initializers, and Object Initializers. After parsing, JSON objects are realized as ECMAScript objects. JSON arrays are realized as ECMAScript Array instances. JSON strings, numbers, booleans, and null are realized as ECMAScript Strings, Numbers, Booleans, and <emu-val>null</emu-val>.</p>\n      <p>The optional <var>reviver</var> parameter is a function that takes two parameters, <var>key</var> and <var>value</var>. It can filter and transform the results. It is called with each of the <var>key</var>/<var>value</var> pairs produced by the parse, and its return value is used instead of the original value. If it returns what it received, the structure is not modified. If it returns <emu-val>undefined</emu-val> then the property is deleted from the result.</p>\n      <emu-alg><ol><li>Let <var>jsonString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>text</var>).</li><li id=\"step-json-parse-validate\">Parse !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>jsonString</var>) as a JSON text as specified in ECMA-404. Throw a <emu-val>SyntaxError</emu-val> exception if it is not a valid JSON text as defined in that specification.</li><li>Let <var>scriptString</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"(\"</emu-val>, <var>jsonString</var>, and <emu-val>\");\"</emu-val>.</li><li id=\"step-json-parse-parse\">Let <var>completion</var> be the result of parsing and evaluating !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>scriptString</var>) as if it was the source text of an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The extended PropertyDefinitionEvaluation semantics defined in <emu-xref href=\"#sec-__proto__-property-names-in-object-initializers\"><a href=\"#sec-__proto__-property-names-in-object-initializers\" class=\"excluded-xref\" excluded-id=\"sec-__proto__-property-names-in-object-initializers\">#sec-__proto__-property-names-in-object-initializers</a></emu-xref> must not be used during the evaluation.</li><li>Let <var>unfiltered</var> be <var>completion</var>.[[Value]].</li><li id=\"step-json-parse-assert-type\"><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>unfiltered</var> is either a String, Number, Boolean, Null, or an Object that is defined by either an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt> or an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>reviver</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>root</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Let <var>rootName</var> be the empty String.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>root</var>, <var>rootName</var>, <var>unfiltered</var>).</li><li>Return ?&#160;<emu-xref aoid=\"InternalizeJSONProperty\"><a href=\"#sec-internalizejsonproperty\">InternalizeJSONProperty</a></emu-xref>(<var>root</var>, <var>rootName</var>, <var>reviver</var>).</li></ol></li><li>Else,<ol><li>Return <var>unfiltered</var>.</li></ol></li></ol></emu-alg>\n      <p>This function is the <dfn>%JSONParse%</dfn> intrinsic object.</p>\n      <p>The <emu-val>\"length\"</emu-val> property of the <code>parse</code> function is 2.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Valid JSON text is a subset of the ECMAScript <emu-nt><a href=\"#prod-PrimaryExpression\">PrimaryExpression</a></emu-nt> syntax as modified by step <emu-xref href=\"#step-json-parse-parse\"><a href=\"#step-json-parse-parse\" class=\"excluded-xref\" excluded-id=\"step-json-parse-parse\">#step-json-parse-parse</a></emu-xref> above. Step <emu-xref href=\"#step-json-parse-validate\"><a href=\"#step-json-parse-validate\" class=\"excluded-xref\" excluded-id=\"step-json-parse-validate\">#step-json-parse-validate</a></emu-xref> verifies that <var>jsonString</var> conforms to that subset, and step <emu-xref href=\"#step-json-parse-assert-type\"><a href=\"#step-json-parse-assert-type\" class=\"excluded-xref\" excluded-id=\"step-json-parse-assert-type\">#step-json-parse-assert-type</a></emu-xref> asserts that that parsing and evaluation returns a value of an appropriate type.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-internalizejsonproperty\"><h1><span class=\"secnum\">24.5.1.1</span>#sec-internalizejsonproperty Runtime Semantics: InternalizeJSONProperty ( holder, name, reviver )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-set-prototype-object": {"num": "23.2.3", "title": "#sec-properties-of-the-set-prototype-object Properties of the Set Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-set-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-set-prototype-object\">#sec-properties-of-the-set-prototype-object</span> Properties of the Set Prototype Object</h1>\n      <p>The Set prototype object:</p>\n      <ul>\n        <li>is <dfn>%SetPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[SetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set.prototype.add\"><h1><span class=\"secnum\">23.2.3.1</span>#sec-set.prototype.add Set.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.clear\"><h1><span class=\"secnum\">23.2.3.2</span>#sec-set.prototype.clear Set.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-set.prototype.constructor\"><h1><span class=\"secnum\">23.2.3.3</span>#sec-set.prototype.constructor Set.prototype.constructor</h1>...</div><div id=\"excluded-sec-set.prototype.delete\"><h1><span class=\"secnum\">23.2.3.4</span>#sec-set.prototype.delete Set.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.entries\"><h1><span class=\"secnum\">23.2.3.5</span>#sec-set.prototype.entries Set.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-set.prototype.foreach\"><h1><span class=\"secnum\">23.2.3.6</span>#sec-set.prototype.foreach Set.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-set.prototype.has\"><h1><span class=\"secnum\">23.2.3.7</span>#sec-set.prototype.has Set.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.keys\"><h1><span class=\"secnum\">23.2.3.8</span>#sec-set.prototype.keys Set.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-get-set.prototype.size\"><h1><span class=\"secnum\">23.2.3.9</span>#sec-get-set.prototype.size get Set.prototype.size</h1>...</div><div id=\"excluded-sec-set.prototype.values\"><h1><span class=\"secnum\">23.2.3.10</span>#sec-set.prototype.values Set.prototype.values ( )</h1>...</div><div id=\"excluded-sec-set.prototype-@@iterator\"><h1><span class=\"secnum\">23.2.3.11</span>#sec-set.prototype-@@iterator Set.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-set.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.2.3.12</span>#sec-set.prototype-@@tostringtag Set.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype": {"num": "21.1.2.3", "title": "#sec-string.prototype String.prototype", "html": "<emu-clause id=\"sec-string.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype\">#sec-string.prototype</span> String.prototype</h1>\n        <p>The initial value of <code>String.prototype</code> is %String.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-aggregate-error-constructor": {"num": "19.5.7.1", "title": "#sec-aggregate-error-constructor The AggregateError Constructor", "html": "<emu-clause id=\"sec-aggregate-error-constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</span> The AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>is the intrinsic object <dfn>%AggregateError%</dfn>.</li>\n          <li>is the initial value of the <emu-val>\"AggregateError\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n          <li>creates and initializes a new AggregateError object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AggregateError(&#8230;)</code> is equivalent to the object creation expression <code>new AggregateError(&#8230;)</code> with the same arguments.</li>\n          <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AggregateError behaviour must include a <code>super</code> call to the AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error\"><h1><span class=\"secnum\">19.5.7.1.1</span>#sec-aggregate-error AggregateError ( errors, message )</h1>...</div></emu-clause>\n\n      "}, "sec-array.prototype.foreach": {"num": "22.1.3.12", "title": "#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</span> Array.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>forEach</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>forEach</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>forEach</code> visits them; elements that are deleted after the call to <code>forEach</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>forEach</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var>, <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <p>This function is the <dfn>%ArrayProto_forEach%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>forEach</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-immutable-prototype-exotic-objects": {"num": "9.4.7", "title": "#sec-immutable-prototype-exotic-objects Immutable Prototype Exotic Objects", "html": "<emu-clause id=\"sec-immutable-prototype-exotic-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-immutable-prototype-exotic-objects\">#sec-immutable-prototype-exotic-objects</span> Immutable Prototype Exotic Objects</h1>\n      <p>An <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref> is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> that has a [[Prototype]] internal slot that will not change once it is initialized.</p>\n\n      <p>An object is an <dfn id=\"immutable-prototype-exotic-object\">immutable prototype exotic object</dfn> if its [[SetPrototypeOf]] internal method uses the following implementation. (Its other essential internal methods may use any implementation, depending on the specific <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref> in question.)</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike other exotic objects, there is not a dedicated creation abstract operation provided for immutable prototype exotic objects. This is because they are only used by <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref> and by <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> environments, and in <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> environments, the relevant objects are potentially exotic in other ways and thus need their own dedicated creation operation.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-immutable-prototype-exotic-objects-setprototypeof-v\"><h1><span class=\"secnum\">9.4.7.1</span>#sec-immutable-prototype-exotic-objects-setprototypeof-v [[SetPrototypeOf]] ( V )</h1>...</div><div id=\"excluded-sec-set-immutable-prototype\"><h1><span class=\"secnum\">9.4.7.2</span>#sec-set-immutable-prototype SetImmutablePrototype ( O, V )</h1>...</div></emu-clause>\n  "}, "sec-array.prototype.values": {"num": "22.1.3.32", "title": "#sec-array.prototype.values Array.prototype.values ( )", "html": "<emu-clause id=\"sec-array.prototype.values\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</span> Array.prototype.values ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"CreateArrayIterator\"><a href=\"#sec-createarrayiterator\">CreateArrayIterator</a></emu-xref>(<var>O</var>, <emu-const>value</emu-const>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%ArrayProto_values%</dfn> intrinsic object.</p>\n      </emu-clause>\n\n      "}, "sec-async-function-prototype-properties": {"num": "26.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>is <dfn>%AsyncFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">26.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">26.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-dataview.prototype": {"num": "24.3.3.1", "title": "#sec-dataview.prototype DataView.prototype", "html": "<emu-clause id=\"sec-dataview.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview.prototype\">#sec-dataview.prototype</span> DataView.prototype</h1>\n        <p>The initial value of <code>DataView.prototype</code> is %DataView.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-createmappedargumentsobject": {"num": "9.4.4.7", "title": "#sec-createmappedargumentsobject CreateMappedArgumentsObject ( func, formals, argumentsList, env )", "html": "<emu-clause id=\"sec-createmappedargumentsobject\" aoid=\"CreateMappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createmappedargumentsobject\">#sec-createmappedargumentsobject</span> CreateMappedArgumentsObject ( <var>func</var>, <var>formals</var>, <var>argumentsList</var>, <var>env</var> )</h1>\n        <p>The abstract operation CreateMappedArgumentsObject takes arguments <var>func</var> (an Object), <var>formals</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>), and <var>env</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>formals</var> does not contain a rest parameter, any binding patterns, or any initializers. It may contain duplicate identifiers.</li><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]], [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[GetOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-getownproperty-p\"><a href=\"#sec-arguments-exotic-objects-getownproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-getownproperty-p\">#sec-arguments-exotic-objects-getownproperty-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">#sec-arguments-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Set <var>obj</var>.[[Get]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-get-p-receiver\"><a href=\"#sec-arguments-exotic-objects-get-p-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-get-p-receiver\">#sec-arguments-exotic-objects-get-p-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Set]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-set-p-v-receiver\"><a href=\"#sec-arguments-exotic-objects-set-p-v-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-set-p-v-receiver\">#sec-arguments-exotic-objects-set-p-v-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Delete]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-delete-p\"><a href=\"#sec-arguments-exotic-objects-delete-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-delete-p\">#sec-arguments-exotic-objects-delete-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[Prototype]] to %Object.prototype%.</li><li>Let <var>map</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Set <var>obj</var>.[[ParameterMap]] to <var>map</var>.</li><li>Let <var>parameterNames</var> be the BoundNames of <var>formals</var>.</li><li>Let <var>numberOfParameters</var> be the number of elements in <var>parameterNames</var>.</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>mappedNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>index</var> be <var>numberOfParameters</var> - 1.</li><li>Repeat, while <var>index</var> &#8805; 0,<ol><li>Let <var>name</var> be <var>parameterNames</var>[<var>index</var>].</li><li>If <var>name</var> is not an element of <var>mappedNames</var>, then<ol><li>Add <var>name</var> as an element of the list <var>mappedNames</var>.</li><li>If <var>index</var> &lt; <var>len</var>, then<ol><li>Let <var>g</var> be <emu-xref aoid=\"MakeArgGetter\"><a href=\"#sec-makearggetter\">MakeArgGetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Let <var>p</var> be <emu-xref aoid=\"MakeArgSetter\"><a href=\"#sec-makeargsetter\">MakeArgSetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Perform <var>map</var>.[[DefineOwnProperty]](! <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), PropertyDescriptor { [[Set]]: <var>p</var>, [[Get]]: <var>g</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li></ol></li><li>Set <var>index</var> to <var>index</var> - 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@iterator</a></emu-xref>, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Value]]: <var>func</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-makearggetter\"><h1><span class=\"secnum\">9.4.4.7.1</span>#sec-makearggetter MakeArgGetter ( name, env )</h1>...</div><div id=\"excluded-sec-makeargsetter\"><h1><span class=\"secnum\">9.4.4.7.2</span>#sec-makeargsetter MakeArgSetter ( name, env )</h1>...</div></emu-clause>\n    "}, "sec-get-regexp.prototype.unicode": {"num": "21.2.5.17", "title": "#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode", "html": "<emu-clause id=\"sec-get-regexp.prototype.unicode\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.unicode\">#sec-get-regexp.prototype.unicode</span> get RegExp.prototype.unicode</h1>\n        <p><code>RegExp.prototype.unicode</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0075 (LATIN SMALL LETTER U), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-json.stringify": {"num": "24.5.2", "title": "#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )", "html": "<emu-clause id=\"sec-json.stringify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json.stringify\">#sec-json.stringify</span> JSON.stringify ( <var>value</var> [ , <var>replacer</var> [ , <var>space</var> ] ] )</h1>\n      <p>The <code>stringify</code> function returns a String in UTF-16 encoded JSON format representing an ECMAScript value, or <emu-val>undefined</emu-val>. It can take three parameters. The <var>value</var> parameter is an ECMAScript value, which is usually an object or array, although it can also be a String, Boolean, Number or <emu-val>null</emu-val>. The optional <var>replacer</var> parameter is either a function that alters the way objects and arrays are stringified, or an array of Strings and Numbers that acts as an inclusion list for selecting the object properties that will be stringified. The optional <var>space</var> parameter is a String or Number that allows the result to have white space injected into it to improve human readability.</p>\n      <p>These are the steps in stringifying an object:</p>\n      <emu-alg><ol><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>indent</var> be the empty String.</li><li>Let <var>PropertyList</var> and <var>ReplacerFunction</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replacer</var>) is Object, then<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replacer</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>ReplacerFunction</var> to <var>replacer</var>.</li></ol></li><li>Else,<ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>replacer</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>PropertyList</var> to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>replacer</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>replacer</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>item</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is String, set <var>item</var> to <var>v</var>.</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Number, set <var>item</var> to !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Object, then<ol><li>If <var>v</var> has a [[StringData]] or [[NumberData]] internal slot, set <var>item</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li></ol></li><li>If <var>item</var> is not <emu-val>undefined</emu-val> and <var>item</var> is not currently an element of <var>PropertyList</var>, then<ol><li>Append <var>item</var> to the end of <var>PropertyList</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Object, then<ol><li>If <var>space</var> has a [[NumberData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>space</var>).</li></ol></li><li>Else if <var>space</var> has a [[StringData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>space</var>).</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Number, then<ol><li>Set <var>space</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(10, !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>space</var>)).</li><li>If <var>space</var> &lt; 1, let <var>gap</var> be the empty String; otherwise let <var>gap</var> be the String value containing <var>space</var> occurrences of the code unit 0x0020 (SPACE).</li></ol></li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is String, then<ol><li>If the length of <var>space</var> is 10 or less, let <var>gap</var> be <var>space</var>; otherwise let <var>gap</var> be the String value consisting of the first 10 code units of <var>space</var>.</li></ol></li><li>Else,<ol><li>Let <var>gap</var> be the empty String.</li></ol></li><li>Let <var>wrapper</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>wrapper</var>, the empty String, <var>value</var>).</li><li>Let <var>state</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[ReplacerFunction]]: <var>ReplacerFunction</var>, [[Stack]]: <var>stack</var>, [[Indent]]: <var>indent</var>, [[Gap]]: <var>gap</var>, [[PropertyList]]: <var>PropertyList</var> }.</li><li>Return ?&#160;<emu-xref aoid=\"SerializeJSONProperty\"><a href=\"#sec-serializejsonproperty\">SerializeJSONProperty</a></emu-xref>(<var>state</var>, the empty String, <var>wrapper</var>).</li></ol></emu-alg>\n      <p>This function is the <dfn>%JSONStringify%</dfn> intrinsic object.</p>\n      <p>The <emu-val>\"length\"</emu-val> property of the <code>stringify</code> function is 3.</p>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>JSON structures are allowed to be nested to any depth, but they must be acyclic. If <var>value</var> is or contains a cyclic structure, then the stringify function must throw a <emu-val>TypeError</emu-val> exception. This is an example of a value that cannot be stringified:</p>\n        <pre><code class=\"javascript hljs\">a = [];\na[<span class=\"hljs-number\">0</span>] = a;\nmy_text = <span class=\"hljs-built_in\">JSON</span>.stringify(a); <span class=\"hljs-comment\">// This must throw a TypeError.</span></code></pre>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Symbolic primitive values are rendered as follows:</p>\n        <ul>\n          <li>\n            The <emu-val>null</emu-val> value is rendered in JSON text as the String <emu-val>\"null\"</emu-val>.\n          </li>\n          <li>\n            The <emu-val>undefined</emu-val> value is not rendered.\n          </li>\n          <li>\n            The <emu-val>true</emu-val> value is rendered in JSON text as the String <emu-val>\"true\"</emu-val>.\n          </li>\n          <li>\n            The <emu-val>false</emu-val> value is rendered in JSON text as the String <emu-val>\"false\"</emu-val>.\n          </li>\n        </ul>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>String values are wrapped in QUOTATION MARK (<code>\"</code>) code units. The code units <code>\"</code> and <code>\\</code> are escaped with <code>\\</code> prefixes. Control characters code units are replaced with escape sequences <code>\\u</code>HHHH, or with the shorter forms, <code>\\b</code> (BACKSPACE), <code>\\f</code> (FORM FEED), <code>\\n</code> (LINE FEED), <code>\\r</code> (CARRIAGE RETURN), <code>\\t</code> (CHARACTER TABULATION).</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n        <p>Finite numbers are stringified as if by calling <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>number</var>). <emu-val>NaN</emu-val> and <emu-val>Infinity</emu-val> regardless of sign are represented as the String <emu-val>\"null\"</emu-val>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 5</span><div class=\"note-contents\">\n        <p>Values that do not have a JSON representation (such as <emu-val>undefined</emu-val> and functions) do not produce a String. Instead they produce the <emu-val>undefined</emu-val> value. In arrays these values are represented as the String <emu-val>\"null\"</emu-val>. In objects an unrepresentable value causes the property to be excluded from stringification.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 6</span><div class=\"note-contents\">\n        <p>An object is rendered as U+007B (LEFT CURLY BRACKET) followed by zero or more properties, separated with a U+002C (COMMA), closed with a U+007D (RIGHT CURLY BRACKET). A property is a quoted String representing the key or <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>, a U+003A (COLON), and then the stringified property value. An array is rendered as an opening U+005B (LEFT SQUARE BRACKET followed by zero or more values, separated with a U+002C (COMMA), closed with a U+005D (RIGHT SQUARE BRACKET).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-serializejsonproperty\"><h1><span class=\"secnum\">24.5.2.1</span>#sec-serializejsonproperty Runtime Semantics: SerializeJSONProperty ( state, key, holder )</h1>...</div><div id=\"excluded-sec-quotejsonstring\"><h1><span class=\"secnum\">24.5.2.2</span>#sec-quotejsonstring Runtime Semantics: QuoteJSONString ( value )</h1>...</div><div id=\"excluded-sec-unicodeescape\"><h1><span class=\"secnum\">24.5.2.3</span>#sec-unicodeescape Runtime Semantics: UnicodeEscape ( C )</h1>...</div><div id=\"excluded-sec-serializejsonobject\"><h1><span class=\"secnum\">24.5.2.4</span>#sec-serializejsonobject Runtime Semantics: SerializeJSONObject ( state, value )</h1>...</div><div id=\"excluded-sec-serializejsonarray\"><h1><span class=\"secnum\">24.5.2.5</span>#sec-serializejsonarray Runtime Semantics: SerializeJSONArray ( state, value )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-arraybuffer-prototype-object": {"num": "24.1.5", "title": "#sec-properties-of-the-arraybuffer-prototype-object Properties of the ArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-arraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-arraybuffer-prototype-object\">#sec-properties-of-the-arraybuffer-prototype-object</span> Properties of the ArrayBuffer Prototype Object</h1>\n      <p>The ArrayBuffer prototype object:</p>\n      <ul>\n        <li>is <dfn>%ArrayBufferPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-arraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.1.5.1</span>#sec-get-arraybuffer.prototype.bytelength get ArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.1.5.2</span>#sec-arraybuffer.prototype.constructor ArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.1.5.3</span>#sec-arraybuffer.prototype.slice ArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.1.5.4</span>#sec-arraybuffer.prototype-@@tostringtag ArrayBuffer.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-date.prototype": {"num": "20.4.3.3", "title": "#sec-date.prototype Date.prototype", "html": "<emu-clause id=\"sec-date.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype\">#sec-date.prototype</span> Date.prototype</h1>\n        <p>The initial value of <code>Date.prototype</code> is %Date.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-symbol-prototype-object": {"num": "19.4.3", "title": "#sec-properties-of-the-symbol-prototype-object Properties of the Symbol Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-symbol-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</span> Properties of the Symbol Prototype Object</h1>\n      <p>The Symbol prototype object:</p>\n      <ul>\n        <li>is <dfn>%SymbolPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Symbol instance and does not have a [[SymbolData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"thissymbolvalue\" aoid=\"thisSymbolValue\" oldids=\"sec-thissymbolvalue\">thisSymbolValue<span id=\"sec-thissymbolvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Symbol, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[SymbolData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[SymbolData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is Symbol.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-symbol.prototype.constructor\"><h1><span class=\"secnum\">19.4.3.1</span>#sec-symbol.prototype.constructor Symbol.prototype.constructor</h1>...</div><div id=\"excluded-sec-symbol.prototype.description\"><h1><span class=\"secnum\">19.4.3.2</span>#sec-symbol.prototype.description get Symbol.prototype.description</h1>...</div><div id=\"excluded-sec-symbol.prototype.tostring\"><h1><span class=\"secnum\">19.4.3.3</span>#sec-symbol.prototype.tostring Symbol.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype.valueof\"><h1><span class=\"secnum\">19.4.3.4</span>#sec-symbol.prototype.valueof Symbol.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype-@@toprimitive\"><h1><span class=\"secnum\">19.4.3.5</span>#sec-symbol.prototype-@@toprimitive Symbol.prototype [ @@toPrimitive ] ( hint )</h1>...</div><div id=\"excluded-sec-symbol.prototype-@@tostringtag\"><h1><span class=\"secnum\">19.4.3.6</span>#sec-symbol.prototype-@@tostringtag Symbol.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asynciteratorprototype": {"num": "26.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">26.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-error-prototype-object": {"num": "19.5.3", "title": "#sec-properties-of-the-error-prototype-object Properties of the Error Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-error-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-error-prototype-object\">#sec-properties-of-the-error-prototype-object</span> Properties of the Error Prototype Object</h1>\n      <p>The Error prototype object:</p>\n      <ul>\n        <li>is <dfn>%ErrorPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an Error instance and does not have an [[ErrorData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error.prototype.constructor\"><h1><span class=\"secnum\">19.5.3.1</span>#sec-error.prototype.constructor Error.prototype.constructor</h1>...</div><div id=\"excluded-sec-error.prototype.message\"><h1><span class=\"secnum\">19.5.3.2</span>#sec-error.prototype.message Error.prototype.message</h1>...</div><div id=\"excluded-sec-error.prototype.name\"><h1><span class=\"secnum\">19.5.3.3</span>#sec-error.prototype.name Error.prototype.name</h1>...</div><div id=\"excluded-sec-error.prototype.tostring\"><h1><span class=\"secnum\">19.5.3.4</span>#sec-error.prototype.tostring Error.prototype.toString ( )</h1>...</div></emu-clause>\n\n    "}, "sec-aggregate-error.prototype": {"num": "19.5.7.2.1", "title": "#sec-aggregate-error.prototype AggregateError.prototype", "html": "<emu-clause id=\"sec-aggregate-error.prototype\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error.prototype\">#sec-aggregate-error.prototype</span> AggregateError.prototype</h1>\n          <p>The initial value of <code>AggregateError.prototype</code> is the intrinsic object <emu-xref href=\"#sec-properties-of-the-aggregate-error-prototype-objects\"><a href=\"#sec-properties-of-the-aggregate-error-prototype-objects\">%AggregateError.prototype%</a></emu-xref>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-properties-of-the-number-prototype-object": {"num": "20.1.3", "title": "#sec-properties-of-the-number-prototype-object Properties of the Number Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-number-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-number-prototype-object\">#sec-properties-of-the-number-prototype-object</span> Properties of the Number Prototype Object</h1>\n      <p>The Number prototype object:</p>\n      <ul>\n        <li>is <dfn>%NumberPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is itself a Number object; it has a [[NumberData]] internal slot with the value <emu-val>+0</emu-val>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly stated otherwise, the methods of the Number prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be either a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> or an object that has a [[NumberData]] internal slot that has been initialized to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n      <p>The abstract operation <dfn id=\"thisnumbervalue\" aoid=\"thisNumberValue\" oldids=\"sec-thisnumbervalue\">thisNumberValue<span id=\"sec-thisnumbervalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[NumberData]] internal slot, then<ol><li>Let <var>n</var> be <var>value</var>.[[NumberData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>n</var>) is Number.</li><li>Return <var>n</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>The phrase &#8220;this <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#thisnumbervalue\"><a href=\"#thisnumbervalue\">thisNumberValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-number.prototype.constructor\"><h1><span class=\"secnum\">20.1.3.1</span>#sec-number.prototype.constructor Number.prototype.constructor</h1>...</div><div id=\"excluded-sec-number.prototype.toexponential\"><h1><span class=\"secnum\">20.1.3.2</span>#sec-number.prototype.toexponential Number.prototype.toExponential ( fractionDigits )</h1>...</div><div id=\"excluded-sec-number.prototype.tofixed\"><h1><span class=\"secnum\">20.1.3.3</span>#sec-number.prototype.tofixed Number.prototype.toFixed ( fractionDigits )</h1>...</div><div id=\"excluded-sec-number.prototype.tolocalestring\"><h1><span class=\"secnum\">20.1.3.4</span>#sec-number.prototype.tolocalestring Number.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-number.prototype.toprecision\"><h1><span class=\"secnum\">20.1.3.5</span>#sec-number.prototype.toprecision Number.prototype.toPrecision ( precision )</h1>...</div><div id=\"excluded-sec-number.prototype.tostring\"><h1><span class=\"secnum\">20.1.3.6</span>#sec-number.prototype.tostring Number.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-number.prototype.valueof\"><h1><span class=\"secnum\">20.1.3.7</span>#sec-number.prototype.valueof Number.prototype.valueOf ( )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.entries": {"num": "22.1.3.4", "title": "#sec-array.prototype.entries Array.prototype.entries ( )", "html": "<emu-clause id=\"sec-array.prototype.entries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</span> Array.prototype.entries ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"CreateArrayIterator\"><a href=\"#sec-createarrayiterator\">CreateArrayIterator</a></emu-xref>(<var>O</var>, <emu-const>key+value</emu-const>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%ArrayProto_entries%</dfn> intrinsic object.</p>\n      </emu-clause>\n\n      "}, "sec-get-regexp.prototype.dotAll": {"num": "21.2.5.3", "title": "#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll", "html": "<emu-clause id=\"sec-get-regexp.prototype.dotAll\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.dotAll\">#sec-get-regexp.prototype.dotAll</span> get RegExp.prototype.dotAll</h1>\n        <p><code>RegExp.prototype.dotAll</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0073 (LATIN SMALL LETTER S), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-object.getownpropertydescriptors": {"num": "19.1.2.9", "title": "#sec-object.getownpropertydescriptors Object.getOwnPropertyDescriptors ( O )", "html": "<emu-clause id=\"sec-object.getownpropertydescriptors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.getownpropertydescriptors\">#sec-object.getownpropertydescriptors</span> Object.getOwnPropertyDescriptors ( <var>O</var> )</h1>\n        <p>When the <code>getOwnPropertyDescriptors</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>O</var>).</li><li>Let <var>ownKeys</var> be ? <var>obj</var>.[[OwnPropertyKeys]]().</li><li>Let <var>descriptors</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>For each element <var>key</var> of <var>ownKeys</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>Let <var>desc</var> be ? <var>obj</var>.[[GetOwnProperty]](<var>key</var>).</li><li>Let <var>descriptor</var> be !&#160;<emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>desc</var>).</li><li>If <var>descriptor</var> is not <emu-val>undefined</emu-val>, perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>descriptors</var>, <var>key</var>, <var>descriptor</var>).</li></ol></li><li>Return <var>descriptors</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-symbol.prototype": {"num": "19.4.2.9", "title": "#sec-symbol.prototype Symbol.prototype", "html": "<emu-clause id=\"sec-symbol.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype\">#sec-symbol.prototype</span> Symbol.prototype</h1>\n        <p>The initial value of <code>Symbol.prototype</code> is %Symbol.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-object.fromentries": {"num": "19.1.2.7", "title": "#sec-object.fromentries Object.fromEntries ( iterable )", "html": "<emu-clause id=\"sec-object.fromentries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.fromentries\">#sec-object.fromentries</span> Object.fromEntries ( <var>iterable</var> )</h1>\n        <p>When the <code>fromEntries</code> method is called with argument <var>iterable</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>iterable</var>).</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var> is an extensible <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> with no own properties.</li><li>Let <var>stepsDefine</var> be the algorithm steps defined in <emu-xref href=\"#sec-create-data-property-on-object-functions\" title=\"\"><a href=\"#sec-create-data-property-on-object-functions\">CreateDataPropertyOnObject Functions</a></emu-xref>.</li><li>Let <var>adder</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsDefine</var>, &#171; &#187;).</li><li>Return ?&#160;<emu-xref aoid=\"AddEntriesFromIterable\"><a href=\"#sec-add-entries-from-iterable\">AddEntriesFromIterable</a></emu-xref>(<var>obj</var>, <var>iterable</var>, <var>adder</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          The function created for <var>adder</var> is never directly accessible to ECMAScript code.\n        </div></emu-note>\n\n        <div id=\"excluded-sec-create-data-property-on-object-functions\"><h1><span class=\"secnum\">19.1.2.7.1</span>#sec-create-data-property-on-object-functions CreateDataPropertyOnObject Functions</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-boolean-prototype-object": {"num": "19.3.3", "title": "#sec-properties-of-the-boolean-prototype-object Properties of the Boolean Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-boolean-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</span> Properties of the Boolean Prototype Object</h1>\n      <p>The Boolean prototype object:</p>\n      <ul>\n        <li>is <dfn>%BooleanPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is itself a Boolean object; it has a [[BooleanData]] internal slot with the value <emu-val>false</emu-val>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"thisbooleanvalue\" aoid=\"thisBooleanValue\" oldids=\"sec-thisbooleanvalue\">thisBooleanValue<span id=\"sec-thisbooleanvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Boolean, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BooleanData]] internal slot, then<ol><li>Let <var>b</var> be <var>value</var>.[[BooleanData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>b</var>) is Boolean.</li><li>Return <var>b</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-boolean.prototype.constructor\"><h1><span class=\"secnum\">19.3.3.1</span>#sec-boolean.prototype.constructor Boolean.prototype.constructor</h1>...</div><div id=\"excluded-sec-boolean.prototype.tostring\"><h1><span class=\"secnum\">19.3.3.2</span>#sec-boolean.prototype.tostring Boolean.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-boolean.prototype.valueof\"><h1><span class=\"secnum\">19.3.3.3</span>#sec-boolean.prototype.valueof Boolean.prototype.valueOf ( )</h1>...</div></emu-clause>\n\n    "}, "sec-runtime-semantics-restdestructuringassignmentevaluation": {"num": "12.15.7.4", "title": "#sec-runtime-semantics-restdestructuringassignmentevaluation Runtime Semantics: RestDestructuringAssignmentEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-restdestructuringassignmentevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-restdestructuringassignmentevaluation\">#sec-runtime-semantics-restdestructuringassignmentevaluation</span> Runtime Semantics: RestDestructuringAssignmentEvaluation</h1>\n        <p>With parameters <var>value</var> and <var>excludedNames</var>.</p>\n\n        <emu-grammar><emu-production name=\"AssignmentRestProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentRestProperty\">AssignmentRestProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cf470c76\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>lref</var>).</li><li>Let <var>restObj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform ?&#160;<emu-xref aoid=\"CopyDataProperties\"><a href=\"#sec-copydataproperties\">CopyDataProperties</a></emu-xref>(<var>restObj</var>, <var>value</var>, <var>excludedNames</var>).</li><li>Return <emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>restObj</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-string-prototype-object": {"num": "21.1.3", "title": "#sec-properties-of-the-string-prototype-object Properties of the String Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-string-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-string-prototype-object\">#sec-properties-of-the-string-prototype-object</span> Properties of the String Prototype Object</h1>\n      <p>The String prototype object:</p>\n      <ul>\n        <li>is <dfn>%StringPrototype%</dfn>.</li>\n        <li>is a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a [[StringData]] internal slot whose value is the empty String.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly stated otherwise, the methods of the String prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be either a String value or an object that has a [[StringData]] internal slot that has been initialized to a String value.</p>\n      <p>The abstract operation <dfn id=\"thisstringvalue\" aoid=\"thisStringValue\" oldids=\"sec-thisstringvalue\">thisStringValue<span id=\"sec-thisstringvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is String, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[StringData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is String.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-string.prototype.charat\"><h1><span class=\"secnum\">21.1.3.1</span>#sec-string.prototype.charat String.prototype.charAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.charcodeat\"><h1><span class=\"secnum\">21.1.3.2</span>#sec-string.prototype.charcodeat String.prototype.charCodeAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.codepointat\"><h1><span class=\"secnum\">21.1.3.3</span>#sec-string.prototype.codepointat String.prototype.codePointAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.concat\"><h1><span class=\"secnum\">21.1.3.4</span>#sec-string.prototype.concat String.prototype.concat ( ...args )</h1>...</div><div id=\"excluded-sec-string.prototype.constructor\"><h1><span class=\"secnum\">21.1.3.5</span>#sec-string.prototype.constructor String.prototype.constructor</h1>...</div><div id=\"excluded-sec-string.prototype.endswith\"><h1><span class=\"secnum\">21.1.3.6</span>#sec-string.prototype.endswith String.prototype.endsWith ( searchString [ , endPosition ] )</h1>...</div><div id=\"excluded-sec-string.prototype.includes\"><h1><span class=\"secnum\">21.1.3.7</span>#sec-string.prototype.includes String.prototype.includes ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.indexof\"><h1><span class=\"secnum\">21.1.3.8</span>#sec-string.prototype.indexof String.prototype.indexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.lastindexof\"><h1><span class=\"secnum\">21.1.3.9</span>#sec-string.prototype.lastindexof String.prototype.lastIndexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.localecompare\"><h1><span class=\"secnum\">21.1.3.10</span>#sec-string.prototype.localecompare String.prototype.localeCompare ( that [ , reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.match\"><h1><span class=\"secnum\">21.1.3.11</span>#sec-string.prototype.match String.prototype.match ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.matchall\"><h1><span class=\"secnum\">21.1.3.12</span>#sec-string.prototype.matchall String.prototype.matchAll ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.normalize\"><h1><span class=\"secnum\">21.1.3.13</span>#sec-string.prototype.normalize String.prototype.normalize ( [ form ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padend\"><h1><span class=\"secnum\">21.1.3.14</span>#sec-string.prototype.padend String.prototype.padEnd ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padstart\"><h1><span class=\"secnum\">21.1.3.15</span>#sec-string.prototype.padstart String.prototype.padStart ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.repeat\"><h1><span class=\"secnum\">21.1.3.16</span>#sec-string.prototype.repeat String.prototype.repeat ( count )</h1>...</div><div id=\"excluded-sec-string.prototype.replace\"><h1><span class=\"secnum\">21.1.3.17</span>#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )</h1>...</div><div id=\"excluded-sec-string.prototype.replaceall\"><h1><span class=\"secnum\">21.1.3.18</span>#sec-string.prototype.replaceall String.prototype.replaceAll ( searchValue, replaceValue )</h1>...</div><div id=\"excluded-sec-string.prototype.search\"><h1><span class=\"secnum\">21.1.3.19</span>#sec-string.prototype.search String.prototype.search ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.slice\"><h1><span class=\"secnum\">21.1.3.20</span>#sec-string.prototype.slice String.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.split\"><h1><span class=\"secnum\">21.1.3.21</span>#sec-string.prototype.split String.prototype.split ( separator, limit )</h1>...</div><div id=\"excluded-sec-string.prototype.startswith\"><h1><span class=\"secnum\">21.1.3.22</span>#sec-string.prototype.startswith String.prototype.startsWith ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.substring\"><h1><span class=\"secnum\">21.1.3.23</span>#sec-string.prototype.substring String.prototype.substring ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocalelowercase\"><h1><span class=\"secnum\">21.1.3.24</span>#sec-string.prototype.tolocalelowercase String.prototype.toLocaleLowerCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocaleuppercase\"><h1><span class=\"secnum\">21.1.3.25</span>#sec-string.prototype.tolocaleuppercase String.prototype.toLocaleUpperCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolowercase\"><h1><span class=\"secnum\">21.1.3.26</span>#sec-string.prototype.tolowercase String.prototype.toLowerCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.tostring\"><h1><span class=\"secnum\">21.1.3.27</span>#sec-string.prototype.tostring String.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-string.prototype.touppercase\"><h1><span class=\"secnum\">21.1.3.28</span>#sec-string.prototype.touppercase String.prototype.toUpperCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trim\"><h1><span class=\"secnum\">21.1.3.29</span>#sec-string.prototype.trim String.prototype.trim ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimend\"><h1><span class=\"secnum\">21.1.3.30</span>#sec-string.prototype.trimend String.prototype.trimEnd ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimstart\"><h1><span class=\"secnum\">21.1.3.31</span>#sec-string.prototype.trimstart String.prototype.trimStart ( )</h1>...</div><div id=\"excluded-sec-string.prototype.valueof\"><h1><span class=\"secnum\">21.1.3.32</span>#sec-string.prototype.valueof String.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-string.prototype-@@iterator\"><h1><span class=\"secnum\">21.1.3.33</span>#sec-string.prototype-@@iterator String.prototype [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-object.prototype.tostring": {"num": "19.1.3.6", "title": "#sec-object.prototype.tostring Object.prototype.toString ( )", "html": "<emu-clause id=\"sec-object.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</span> Object.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If the <emu-val>this</emu-val> value is <emu-val>undefined</emu-val>, return <emu-val>\"[object Undefined]\"</emu-val>.</li><li>If the <emu-val>this</emu-val> value is <emu-val>null</emu-val>, return <emu-val>\"[object Null]\"</emu-val>.</li><li>Let <var>O</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>O</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, let <var>builtinTag</var> be <emu-val>\"Array\"</emu-val>.</li><li>Else if <var>O</var> has a [[ParameterMap]] internal slot, let <var>builtinTag</var> be <emu-val>\"Arguments\"</emu-val>.</li><li>Else if <var>O</var> has a [[Call]] internal method, let <var>builtinTag</var> be <emu-val>\"Function\"</emu-val>.</li><li>Else if <var>O</var> has an [[ErrorData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Error\"</emu-val>.</li><li>Else if <var>O</var> has a [[BooleanData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Boolean\"</emu-val>.</li><li>Else if <var>O</var> has a [[NumberData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Number\"</emu-val>.</li><li>Else if <var>O</var> has a [[StringData]] internal slot, let <var>builtinTag</var> be <emu-val>\"String\"</emu-val>.</li><li>Else if <var>O</var> has a [[DateValue]] internal slot, let <var>builtinTag</var> be <emu-val>\"Date\"</emu-val>.</li><li>Else if <var>O</var> has a [[RegExpMatcher]] internal slot, let <var>builtinTag</var> be <emu-val>\"RegExp\"</emu-val>.</li><li>Else, let <var>builtinTag</var> be <emu-val>\"Object\"</emu-val>.</li><li>Let <var>tag</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toStringTag</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>tag</var>) is not String, set <var>tag</var> to <var>builtinTag</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"[object \"</emu-val>, <var>tag</var>, and <emu-val>\"]\"</emu-val>.</li></ol></emu-alg>\n        <p>This function is the <dfn>%ObjProto_toString%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Historically, this function was occasionally used to access the String value of the [[Class]] internal slot that was used in previous editions of this specification as a nominal type tag for various built-in objects. The above definition of <code>toString</code> preserves compatibility for legacy code that uses <code>toString</code> as a test for those specific kinds of built-in objects. It does not provide a reliable type testing mechanism for other kinds of built-in or program defined objects. In addition, programs can use <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toStringTag</a></emu-xref> in ways that will invalidate the reliability of such legacy type tests.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-%iteratorprototype%-object": {"num": "26.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">26.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-aggregate-error.prototype.constructor": {"num": "19.5.7.3.1", "title": "#sec-aggregate-error.prototype.constructor AggregateError.prototype.constructor", "html": "<emu-clause id=\"sec-aggregate-error.prototype.constructor\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error.prototype.constructor\">#sec-aggregate-error.prototype.constructor</span> AggregateError.prototype.constructor</h1>\n          <p>The initial value of <code>AggregateError.prototype.constructor</code> is the intrinsic object <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>.</p>\n        </emu-clause>\n\n        "}, "sec-promise.reject": {"num": "26.6.4.6", "title": "#sec-promise.reject Promise.reject ( r )", "html": "<emu-clause id=\"sec-promise.reject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</span> Promise.reject ( <var>r</var> )</h1>\n        <p>The <code>reject</code> function returns a new promise rejected with the passed argument.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>r</var> &#187;).</li><li>Return <var>promiseCapability</var>.[[Promise]].</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_reject%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>reject</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-aggregate-error-prototype-objects": {"num": "19.5.7.3", "title": "#sec-properties-of-the-aggregate-error-prototype-objects Properties of the AggregateError Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-aggregate-error-prototype-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-aggregate-error-prototype-objects\">#sec-properties-of-the-aggregate-error-prototype-objects</span> Properties of the AggregateError Prototype Object</h1>\n        <p>The AggregateError prototype object:</p>\n        <ul>\n          <li>is the intrinsic object <dfn>%AggregateError.prototype%</dfn>.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>is not an Error instance or an AggregateError instance and does not have an [[ErrorData]] internal slot.</li>\n          <li>has a [[Prototype]] internal slot whose value is the intrinsic object %Error.prototype%.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error.prototype.constructor\"><h1><span class=\"secnum\">19.5.7.3.1</span>#sec-aggregate-error.prototype.constructor AggregateError.prototype.constructor</h1>...</div><div id=\"excluded-sec-aggregate-error.prototype.message\"><h1><span class=\"secnum\">19.5.7.3.2</span>#sec-aggregate-error.prototype.message AggregateError.prototype.message</h1>...</div><div id=\"excluded-sec-aggregate-error.prototype.name\"><h1><span class=\"secnum\">19.5.7.3.3</span>#sec-aggregate-error.prototype.name AggregateError.prototype.name</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-weakset-prototype-object": {"num": "23.4.3", "title": "#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakset-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakset-prototype-object\">#sec-properties-of-the-weakset-prototype-object</span> Properties of the WeakSet Prototype Object</h1>\n      <p>The WeakSet prototype object:</p>\n      <ul>\n        <li>is <dfn>%WeakSetPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakSetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset.prototype.add\"><h1><span class=\"secnum\">23.4.3.1</span>#sec-weakset.prototype.add WeakSet.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.constructor\"><h1><span class=\"secnum\">23.4.3.2</span>#sec-weakset.prototype.constructor WeakSet.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakset.prototype.delete\"><h1><span class=\"secnum\">23.4.3.3</span>#sec-weakset.prototype.delete WeakSet.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.has\"><h1><span class=\"secnum\">23.4.3.4</span>#sec-weakset.prototype.has WeakSet.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.4.3.5</span>#sec-weakset.prototype-@@tostringtag WeakSet.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp.prototype.ignorecase": {"num": "21.2.5.6", "title": "#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase", "html": "<emu-clause id=\"sec-get-regexp.prototype.ignorecase\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.ignorecase\">#sec-get-regexp.prototype.ignorecase</span> get RegExp.prototype.ignoreCase</h1>\n        <p><code>RegExp.prototype.ignoreCase</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0069 (LATIN SMALL LETTER I), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-object-prototype-object": {"num": "19.1.3", "title": "#sec-properties-of-the-object-prototype-object Properties of the Object Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-object-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</span> Properties of the Object Prototype Object</h1>\n      <p>The Object prototype object:</p>\n      <ul>\n        <li>is <dfn>%ObjectPrototype%</dfn>.</li>\n        <li>has an [[Extensible]] internal slot whose value is <emu-val>true</emu-val>.</li>\n        <li>has the internal methods defined for ordinary objects, except for the [[SetPrototypeOf]] method, which is as defined in <emu-xref href=\"#sec-immutable-prototype-exotic-objects-setprototypeof-v\"><a href=\"#sec-immutable-prototype-exotic-objects-setprototypeof-v\" class=\"excluded-xref\" excluded-id=\"sec-immutable-prototype-exotic-objects-setprototypeof-v\">#sec-immutable-prototype-exotic-objects-setprototypeof-v</a></emu-xref>. (Thus, it is an <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref>.)</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-val>null</emu-val>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-object.prototype.constructor\"><h1><span class=\"secnum\">19.1.3.1</span>#sec-object.prototype.constructor Object.prototype.constructor</h1>...</div><div id=\"excluded-sec-object.prototype.hasownproperty\"><h1><span class=\"secnum\">19.1.3.2</span>#sec-object.prototype.hasownproperty Object.prototype.hasOwnProperty ( V )</h1>...</div><div id=\"excluded-sec-object.prototype.isprototypeof\"><h1><span class=\"secnum\">19.1.3.3</span>#sec-object.prototype.isprototypeof Object.prototype.isPrototypeOf ( V )</h1>...</div><div id=\"excluded-sec-object.prototype.propertyisenumerable\"><h1><span class=\"secnum\">19.1.3.4</span>#sec-object.prototype.propertyisenumerable Object.prototype.propertyIsEnumerable ( V )</h1>...</div><div id=\"excluded-sec-object.prototype.tolocalestring\"><h1><span class=\"secnum\">19.1.3.5</span>#sec-object.prototype.tolocalestring Object.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-object.prototype.tostring\"><h1><span class=\"secnum\">19.1.3.6</span>#sec-object.prototype.tostring Object.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-object.prototype.valueof\"><h1><span class=\"secnum\">19.1.3.7</span>#sec-object.prototype.valueof Object.prototype.valueOf ( )</h1>...</div></emu-clause>\n\n    "}, "sec-math-object": {"num": "20.3", "title": "#sec-math-object The Math Object", "html": "<emu-clause id=\"sec-math-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-object\">#sec-math-object</span> The Math Object</h1>\n    <p>The Math object:</p>\n    <ul>\n      <li>is <dfn>%Math%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Math\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In this specification, the phrase &#8220;the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>&#8221; has a technical meaning defined in <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-value-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.1</span>#sec-value-properties-of-the-math-object Value Properties of the Math Object</h1>...</div><div id=\"excluded-sec-function-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.2</span>#sec-function-properties-of-the-math-object Function Properties of the Math Object</h1>...</div></emu-clause>\n\n  "}, "sec-properties-of-the-bigint-prototype-object": {"num": "20.2.3", "title": "#sec-properties-of-the-bigint-prototype-object Properties of the BigInt Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-bigint-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-bigint-prototype-object\">#sec-properties-of-the-bigint-prototype-object</span> Properties of the BigInt Prototype Object</h1>\n      <p>The BigInt prototype object:</p>\n      <ul>\n        <li>is <dfn>%BigInt.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a BigInt object; it does not have a [[BigIntData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"thisbigintvalue\" aoid=\"thisBigIntValue\" oldids=\"sec-thisbigintvalue\">thisBigIntValue<span id=\"sec-thisbigintvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BigIntData]] internal slot, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>.[[BigIntData]]) is BigInt.</li><li>Return <var>value</var>.[[BigIntData]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>The phrase &#8220;this BigInt value&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#thisbigintvalue\"><a href=\"#thisbigintvalue\">thisBigIntValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-bigint.prototype.constructor\"><h1><span class=\"secnum\">20.2.3.1</span>#sec-bigint.prototype.constructor BigInt.prototype.constructor</h1>...</div><div id=\"excluded-sec-bigint.prototype.tolocalestring\"><h1><span class=\"secnum\">20.2.3.2</span>#sec-bigint.prototype.tolocalestring BigInt.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.tostring\"><h1><span class=\"secnum\">20.2.3.3</span>#sec-bigint.prototype.tostring BigInt.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.valueof\"><h1><span class=\"secnum\">20.2.3.4</span>#sec-bigint.prototype.valueof BigInt.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-bigint.prototype-@@tostringtag\"><h1><span class=\"secnum\">20.2.3.5</span>#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n  "}, "sec-number.prototype": {"num": "20.1.2.15", "title": "#sec-number.prototype Number.prototype", "html": "<emu-clause id=\"sec-number.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.prototype\">#sec-number.prototype</span> Number.prototype</h1>\n        <p>The initial value of <code>Number.prototype</code> is %Number.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-regexp.prototype": {"num": "21.2.4.1", "title": "#sec-regexp.prototype RegExp.prototype", "html": "<emu-clause id=\"sec-regexp.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype\">#sec-regexp.prototype</span> RegExp.prototype</h1>\n        <p>The initial value of <code>RegExp.prototype</code> is %RegExp.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-%typedarrayprototype%-object": {"num": "22.2.3", "title": "#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray.prototype% Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarrayprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarrayprototype%-object\">#sec-properties-of-the-%typedarrayprototype%-object</span> Properties of the %TypedArray.prototype% Object</h1>\n      <p>The <dfn>%TypedArray.prototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-%typedarray%.prototype.buffer\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-get-%typedarray%.prototype.buffer get %TypedArray%.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.bytelength\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-get-%typedarray%.prototype.bytelength get %TypedArray%.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.byteoffset\"><h1><span class=\"secnum\">22.2.3.3</span>#sec-get-%typedarray%.prototype.byteoffset get %TypedArray%.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.constructor\"><h1><span class=\"secnum\">22.2.3.4</span>#sec-%typedarray%.prototype.constructor %TypedArray%.prototype.constructor</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.copywithin\"><h1><span class=\"secnum\">22.2.3.5</span>#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.entries\"><h1><span class=\"secnum\">22.2.3.6</span>#sec-%typedarray%.prototype.entries %TypedArray%.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.every\"><h1><span class=\"secnum\">22.2.3.7</span>#sec-%typedarray%.prototype.every %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.fill\"><h1><span class=\"secnum\">22.2.3.8</span>#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.filter\"><h1><span class=\"secnum\">22.2.3.9</span>#sec-%typedarray%.prototype.filter %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.find\"><h1><span class=\"secnum\">22.2.3.10</span>#sec-%typedarray%.prototype.find %TypedArray%.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.findindex\"><h1><span class=\"secnum\">22.2.3.11</span>#sec-%typedarray%.prototype.findindex %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.foreach\"><h1><span class=\"secnum\">22.2.3.12</span>#sec-%typedarray%.prototype.foreach %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.includes\"><h1><span class=\"secnum\">22.2.3.13</span>#sec-%typedarray%.prototype.includes %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.indexof\"><h1><span class=\"secnum\">22.2.3.14</span>#sec-%typedarray%.prototype.indexof %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.join\"><h1><span class=\"secnum\">22.2.3.15</span>#sec-%typedarray%.prototype.join %TypedArray%.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.keys\"><h1><span class=\"secnum\">22.2.3.16</span>#sec-%typedarray%.prototype.keys %TypedArray%.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.lastindexof\"><h1><span class=\"secnum\">22.2.3.17</span>#sec-%typedarray%.prototype.lastindexof %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.length\"><h1><span class=\"secnum\">22.2.3.18</span>#sec-get-%typedarray%.prototype.length get %TypedArray%.prototype.length</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.map\"><h1><span class=\"secnum\">22.2.3.19</span>#sec-%typedarray%.prototype.map %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduce\"><h1><span class=\"secnum\">22.2.3.20</span>#sec-%typedarray%.prototype.reduce %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduceright\"><h1><span class=\"secnum\">22.2.3.21</span>#sec-%typedarray%.prototype.reduceright %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reverse\"><h1><span class=\"secnum\">22.2.3.22</span>#sec-%typedarray%.prototype.reverse %TypedArray%.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set-overloaded-offset\"><h1><span class=\"secnum\">22.2.3.23</span>#sec-%typedarray%.prototype.set-overloaded-offset %TypedArray%.prototype.set ( overloaded [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.slice\"><h1><span class=\"secnum\">22.2.3.24</span>#sec-%typedarray%.prototype.slice %TypedArray%.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.some\"><h1><span class=\"secnum\">22.2.3.25</span>#sec-%typedarray%.prototype.some %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.sort\"><h1><span class=\"secnum\">22.2.3.26</span>#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.subarray\"><h1><span class=\"secnum\">22.2.3.27</span>#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tolocalestring\"><h1><span class=\"secnum\">22.2.3.28</span>#sec-%typedarray%.prototype.tolocalestring %TypedArray%.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tostring\"><h1><span class=\"secnum\">22.2.3.29</span>#sec-%typedarray%.prototype.tostring %TypedArray%.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.values\"><h1><span class=\"secnum\">22.2.3.30</span>#sec-%typedarray%.prototype.values %TypedArray%.prototype.values ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype-@@iterator\"><h1><span class=\"secnum\">22.2.3.31</span>#sec-%typedarray%.prototype-@@iterator %TypedArray%.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype-@@tostringtag\"><h1><span class=\"secnum\">22.2.3.32</span>#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-generator-prototype": {"num": "26.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is <dfn>%Generator.prototype%</dfn> (<dfn>%GeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">26.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">26.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">26.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">26.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "24.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Atomics\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events.  When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">24.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">24.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">24.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">24.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">24.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">24.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">24.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">24.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">24.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">24.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">24.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">24.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">24.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">24.4.14</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-promise.all": {"num": "26.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getpromiseresolve\"><h1><span class=\"secnum\">26.6.4.1.1</span>#sec-getpromiseresolve Runtime Semantics: GetPromiseResolve ( promiseConstructor )</h1>...</div><div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">26.6.4.1.2</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">26.6.4.1.3</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-object-initializer-runtime-semantics-evaluation": {"num": "12.2.6.7", "title": "#sec-object-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-object-initializer-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-runtime-semantics-evaluation\">#sec-object-initializer-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectLiteral\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform ? PropertyDefinitionEvaluation of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> with arguments <var>obj</var> and <emu-val>true</emu-val>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exprValue</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propName</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValue</var>).</li><li>Return ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propName</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-sharedarraybuffer.prototype": {"num": "24.2.3.1", "title": "#sec-sharedarraybuffer.prototype SharedArrayBuffer.prototype", "html": "<emu-clause id=\"sec-sharedarraybuffer.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer.prototype\">#sec-sharedarraybuffer.prototype</span> SharedArrayBuffer.prototype</h1>\n        <p>The initial value of <code>SharedArrayBuffer.prototype</code> is %SharedArrayBuffer.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-proxy.revocable": {"num": "27.2.2.1", "title": "#sec-proxy.revocable Proxy.revocable ( target, handler )", "html": "<emu-clause id=\"sec-proxy.revocable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy.revocable\">#sec-proxy.revocable</span> Proxy.revocable ( <var>target</var>, <var>handler</var> )</h1>\n        <p>The <code>Proxy.revocable</code> function is used to create a revocable Proxy object. When <code>Proxy.revocable</code> is called with arguments <var>target</var> and <var>handler</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>p</var> be ?&#160;<emu-xref aoid=\"ProxyCreate\"><a href=\"#sec-proxycreate\">ProxyCreate</a></emu-xref>(<var>target</var>, <var>handler</var>).</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-proxy-revocation-functions\" title=\"\"><a href=\"#sec-proxy-revocation-functions\">Proxy Revocation Functions</a></emu-xref>.</li><li>Let <var>revoker</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[RevocableProxy]] &#187;).</li><li>Set <var>revoker</var>.[[RevocableProxy]] to <var>p</var>.</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"proxy\"</emu-val>, <var>p</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"revoke\"</emu-val>, <var>revoker</var>).</li><li>Return <var>result</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-proxy-revocation-functions\"><h1><span class=\"secnum\">27.2.2.1.1</span>#sec-proxy-revocation-functions Proxy Revocation Functions</h1>...</div></emu-clause>\n    "}, "sec-properties-of-the-finalization-registry-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-finalization-registry-constructor Properties of the FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-properties-of-the-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-finalization-registry-constructor\">#sec-properties-of-the-finalization-registry-constructor</span> Properties of the FinalizationRegistry Constructor</h1>\n      <p>The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>\n          has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.\n        </li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry.prototype\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-finalization-registry.prototype FinalizationRegistry.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-promise-prototype-object": {"num": "26.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">26.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">26.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">26.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">26.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.6.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-createiterresultobject": {"num": "7.4.8", "title": "#sec-createiterresultobject CreateIterResultObject ( value, done )", "html": "<emu-clause id=\"sec-createiterresultobject\" aoid=\"CreateIterResultObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createiterresultobject\">#sec-createiterresultobject</span> CreateIterResultObject ( <var>value</var>, <var>done</var> )</h1>\n      <p>The abstract operation CreateIterResultObject takes arguments <var>value</var> and <var>done</var>. It creates an object that supports the IteratorResult interface. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>done</var>) is Boolean.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"value\"</emu-val>, <var>value</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"done\"</emu-val>, <var>done</var>).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-properties-of-asyncgenerator-prototype": {"num": "26.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is <dfn>%AsyncGenerator.prototype%</dfn> (<dfn>%AsyncGeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">26.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">26.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">26.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">26.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">26.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-setrealmglobalobject": {"num": "8.2.3", "title": "#sec-setrealmglobalobject SetRealmGlobalObject ( realmRec, globalObj, thisValue )", "html": "<emu-clause id=\"sec-setrealmglobalobject\" aoid=\"SetRealmGlobalObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setrealmglobalobject\">#sec-setrealmglobalobject</span> SetRealmGlobalObject ( <var>realmRec</var>, <var>globalObj</var>, <var>thisValue</var> )</h1>\n      <p>The abstract operation SetRealmGlobalObject takes arguments <var>realmRec</var>, <var>globalObj</var>, and <var>thisValue</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <var>globalObj</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>intrinsics</var> be <var>realmRec</var>.[[Intrinsics]].</li><li>Set <var>globalObj</var> to <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>intrinsics</var>.[[%Object.prototype%]]).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>globalObj</var>) is Object.</li><li>If <var>thisValue</var> is <emu-val>undefined</emu-val>, set <var>thisValue</var> to <var>globalObj</var>.</li><li>Set <var>realmRec</var>.[[GlobalObject]] to <var>globalObj</var>.</li><li>Let <var>newGlobalEnv</var> be <emu-xref aoid=\"NewGlobalEnvironment\"><a href=\"#sec-newglobalenvironment\">NewGlobalEnvironment</a></emu-xref>(<var>globalObj</var>, <var>thisValue</var>).</li><li>Set <var>realmRec</var>.[[GlobalEnv]] to <var>newGlobalEnv</var>.</li><li>Return <var>realmRec</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-properties-of-the-map-prototype-object": {"num": "23.1.3", "title": "#sec-properties-of-the-map-prototype-object Properties of the Map Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-map-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-map-prototype-object\">#sec-properties-of-the-map-prototype-object</span> Properties of the Map Prototype Object</h1>\n      <p>The Map prototype object:</p>\n      <ul>\n        <li>is <dfn>%MapPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[MapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map.prototype.clear\"><h1><span class=\"secnum\">23.1.3.1</span>#sec-map.prototype.clear Map.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-map.prototype.constructor\"><h1><span class=\"secnum\">23.1.3.2</span>#sec-map.prototype.constructor Map.prototype.constructor</h1>...</div><div id=\"excluded-sec-map.prototype.delete\"><h1><span class=\"secnum\">23.1.3.3</span>#sec-map.prototype.delete Map.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.entries\"><h1><span class=\"secnum\">23.1.3.4</span>#sec-map.prototype.entries Map.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-map.prototype.foreach\"><h1><span class=\"secnum\">23.1.3.5</span>#sec-map.prototype.foreach Map.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-map.prototype.get\"><h1><span class=\"secnum\">23.1.3.6</span>#sec-map.prototype.get Map.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.has\"><h1><span class=\"secnum\">23.1.3.7</span>#sec-map.prototype.has Map.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.keys\"><h1><span class=\"secnum\">23.1.3.8</span>#sec-map.prototype.keys Map.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-map.prototype.set\"><h1><span class=\"secnum\">23.1.3.9</span>#sec-map.prototype.set Map.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-get-map.prototype.size\"><h1><span class=\"secnum\">23.1.3.10</span>#sec-get-map.prototype.size get Map.prototype.size</h1>...</div><div id=\"excluded-sec-map.prototype.values\"><h1><span class=\"secnum\">23.1.3.11</span>#sec-map.prototype.values Map.prototype.values ( )</h1>...</div><div id=\"excluded-sec-map.prototype-@@iterator\"><h1><span class=\"secnum\">23.1.3.12</span>#sec-map.prototype-@@iterator Map.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-map.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.1.3.13</span>#sec-map.prototype-@@tostringtag Map.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-createunmappedargumentsobject": {"num": "9.4.4.6", "title": "#sec-createunmappedargumentsobject CreateUnmappedArgumentsObject ( argumentsList )", "html": "<emu-clause id=\"sec-createunmappedargumentsobject\" aoid=\"CreateUnmappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</span> CreateUnmappedArgumentsObject ( <var>argumentsList</var> )</h1>\n        <p>The abstract operation CreateUnmappedArgumentsObject takes argument <var>argumentsList</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%, &#171; [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[ParameterMap]] to <emu-val>undefined</emu-val>.</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@iterator</a></emu-xref>, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Get]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Set]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weakset.prototype": {"num": "23.4.2.1", "title": "#sec-weakset.prototype WeakSet.prototype", "html": "<emu-clause id=\"sec-weakset.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset.prototype\">#sec-weakset.prototype</span> WeakSet.prototype</h1>\n        <p>The initial value of <code>WeakSet.prototype</code> is the intrinsic <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref> object.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-finalization-registry-constructor": {"num": "25.2.1", "title": "#sec-finalization-registry-constructor The FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</span> The FinalizationRegistry Constructor</h1>\n      <p>The <dfn>FinalizationRegistry</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object <dfn>%FinalizationRegistry%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"FinalizationRegistry\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new FinalizationRegistry object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>FinalizationRegistry</code> behaviour must include a <code>super</code> call to the <code>FinalizationRegistry</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>FinalizationRegistry.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry-cleanup-callback\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-finalization-registry-cleanup-callback FinalizationRegistry ( cleanupCallback )</h1>...</div></emu-clause>\n\n    "}, "sec-frompropertydescriptor": {"num": "6.2.5.4", "title": "#sec-frompropertydescriptor FromPropertyDescriptor ( Desc )", "html": "<emu-clause id=\"sec-frompropertydescriptor\" aoid=\"FromPropertyDescriptor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-frompropertydescriptor\">#sec-frompropertydescriptor</span> FromPropertyDescriptor ( <var>Desc</var> )</h1>\n        <p>The abstract operation FromPropertyDescriptor takes argument <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> or <emu-val>undefined</emu-val>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>Desc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var> is an extensible <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> with no own properties.</li><li>If <var>Desc</var> has a [[Value]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"value\"</emu-val>, <var>Desc</var>.[[Value]]).</li></ol></li><li>If <var>Desc</var> has a [[Writable]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"writable\"</emu-val>, <var>Desc</var>.[[Writable]]).</li></ol></li><li>If <var>Desc</var> has a [[Get]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"get\"</emu-val>, <var>Desc</var>.[[Get]]).</li></ol></li><li>If <var>Desc</var> has a [[Set]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"set\"</emu-val>, <var>Desc</var>.[[Set]]).</li></ol></li><li>If <var>Desc</var> has an [[Enumerable]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"enumerable\"</emu-val>, <var>Desc</var>.[[Enumerable]]).</li></ol></li><li>If <var>Desc</var> has a [[Configurable]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"configurable\"</emu-val>, <var>Desc</var>.[[Configurable]]).</li></ol></li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arraycreate": {"num": "9.4.2.2", "title": "#sec-arraycreate ArrayCreate ( length [ , proto ] )", "html": "<emu-clause id=\"sec-arraycreate\" aoid=\"ArrayCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraycreate\">#sec-arraycreate</span> ArrayCreate ( <var>length</var> [ , <var>proto</var> ] )</h1>\n        <p>The abstract operation ArrayCreate takes argument <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>) and optional argument <var>proto</var>. It is used to specify the creation of new Array exotic objects. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsNonNegativeInteger\"><a href=\"#sec-isnonnegativeinteger\">IsNonNegativeInteger</a></emu-xref>(<var>length</var>) is <emu-val>true</emu-val>.</li><li>If <var>length</var> is <emu-val>-0</emu-val>, set <var>length</var> to <emu-val>+0</emu-val>.</li><li>If <var>length</var> &gt; 2<sup>32</sup> - 1, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>proto</var> is not present, set <var>proto</var> to %Array.prototype%.</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]] &#187;).</li><li>Set <var>A</var>.[[Prototype]] to <var>proto</var>.</li><li>Set <var>A</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Perform !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>length</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weak-ref-constructor": {"num": "25.1.1", "title": "#sec-weak-ref-constructor The WeakRef Constructor", "html": "<emu-clause id=\"sec-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</span> The WeakRef Constructor</h1>\n      <p>The <dfn>WeakRef</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object %WeakRef%.</li>\n        <li>\n          is the initial value of the <emu-val>\"WeakRef\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new WeakRef object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakRef</code> behaviour must include a <code>super</code> call to the <code>WeakRef</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakRef.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref-target\"><h1><span class=\"secnum\">25.1.1.1</span>#sec-weak-ref-target WeakRef ( target )</h1>...</div></emu-clause>\n\n    "}, "sec-set.prototype": {"num": "23.2.2.1", "title": "#sec-set.prototype Set.prototype", "html": "<emu-clause id=\"sec-set.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype\">#sec-set.prototype</span> Set.prototype</h1>\n        <p>The initial value of <code>Set.prototype</code> is the intrinsic <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref> object.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-promise.allsettled-resolve-element-functions": {"num": "26.6.4.2.2", "title": "#sec-promise.allsettled-resolve-element-functions Promise.allSettled Resolve Element Functions", "html": "<emu-clause id=\"sec-promise.allsettled-resolve-element-functions\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled-resolve-element-functions\">#sec-promise.allsettled-resolve-element-functions</span> <code>Promise.allSettled</code> Resolve Element Functions</h1>\n          <p>A <code>Promise.allSettled</code> resolve element function is an anonymous built-in function that is used to resolve a specific <code>Promise.allSettled</code> element. Each <code>Promise.allSettled</code> resolve element function has [[Index]], [[Values]], [[Capability]], [[RemainingElements]], and [[AlreadyCalled]] internal slots.</p>\n          <p>When a <code>Promise.allSettled</code> resolve element function is called with argument <var>x</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>alreadyCalled</var> be <var>F</var>.[[AlreadyCalled]].</li><li>If <var>alreadyCalled</var>.[[Value]] is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Set <var>alreadyCalled</var>.[[Value]] to <emu-val>true</emu-val>.</li><li>Let <var>index</var> be <var>F</var>.[[Index]].</li><li>Let <var>values</var> be <var>F</var>.[[Values]].</li><li>Let <var>promiseCapability</var> be <var>F</var>.[[Capability]].</li><li>Let <var>remainingElementsCount</var> be <var>F</var>.[[RemainingElements]].</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"status\"</emu-val>, <emu-val>\"fulfilled\"</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"value\"</emu-val>, <var>x</var>).</li><li>Set <var>values</var>[<var>index</var>] to <var>obj</var>.</li><li>Set <var>remainingElementsCount</var>.[[Value]] to <var>remainingElementsCount</var>.[[Value]] - 1.</li><li>If <var>remainingElementsCount</var>.[[Value]] is 0, then<ol><li>Let <var>valuesArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>values</var>).</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>, &#171; <var>valuesArray</var> &#187;).</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n          <p>The <emu-val>\"length\"</emu-val> property of a <code>Promise.allSettled</code> resolve element function is 1.</p>\n        </emu-clause>\n\n        "}, "sec-arraybuffer.prototype": {"num": "24.1.4.2", "title": "#sec-arraybuffer.prototype ArrayBuffer.prototype", "html": "<emu-clause id=\"sec-arraybuffer.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer.prototype\">#sec-arraybuffer.prototype</span> ArrayBuffer.prototype</h1>\n        <p>The initial value of <code>ArrayBuffer.prototype</code> is %ArrayBuffer.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-weak-ref-constructor": {"num": "25.1.2", "title": "#sec-properties-of-the-weak-ref-constructor Properties of the WeakRef Constructor", "html": "<emu-clause id=\"sec-properties-of-the-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weak-ref-constructor\">#sec-properties-of-the-weak-ref-constructor</span> Properties of the WeakRef Constructor</h1>\n      <p>The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>\n          has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.\n        </li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref.prototype\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-weak-ref.prototype WeakRef.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-regexp-prototype-object": {"num": "21.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The RegExp prototype object:</p>\n      <ul>\n        <li>is <dfn>%RegExpPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <emu-val>\"valueOf\"</emu-val> property of its own; however, it inherits the <emu-val>\"valueOf\"</emu-val> property from the Object prototype object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">21.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">21.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">21.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">21.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">21.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">21.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">21.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">21.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">21.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">21.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">21.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">21.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">21.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">21.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">21.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">21.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">21.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.keys": {"num": "22.1.3.16", "title": "#sec-array.prototype.keys Array.prototype.keys ( )", "html": "<emu-clause id=\"sec-array.prototype.keys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</span> Array.prototype.keys ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"CreateArrayIterator\"><a href=\"#sec-createarrayiterator\">CreateArrayIterator</a></emu-xref>(<var>O</var>, <emu-const>key</emu-const>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%ArrayProto_keys%</dfn> intrinsic object.</p>\n      </emu-clause>\n\n      "}, "sec-error.prototype": {"num": "19.5.2.1", "title": "#sec-error.prototype Error.prototype", "html": "<emu-clause id=\"sec-error.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error.prototype\">#sec-error.prototype</span> Error.prototype</h1>\n        <p>The initial value of <code>Error.prototype</code> is %Error.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-weak-ref-prototype-object": {"num": "25.1.3", "title": "#sec-properties-of-the-weak-ref-prototype-object Properties of the WeakRef Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weak-ref-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weak-ref-prototype-object\">#sec-properties-of-the-weak-ref-prototype-object</span> Properties of the WeakRef Prototype Object</h1>\n      <p>The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> prototype object:</p>\n      <ul>\n        <li>is the intrinsic object <dfn>%WeakRef.prototype%</dfn>.</li>\n        <li>\n          has a [[Prototype]] internal slot whose value is %Object.prototype%.\n        </li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakRefTarget]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref.prototype.constructor\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-weak-ref.prototype.constructor WeakRef.prototype.constructor</h1>...</div><div id=\"excluded-sec-weak-ref.prototype.deref\"><h1><span class=\"secnum\">25.1.3.2</span>#sec-weak-ref.prototype.deref WeakRef.prototype.deref ( )</h1>...</div><div id=\"excluded-sec-weak-ref.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.1.3.3</span>#sec-weak-ref.prototype-@@tostringtag WeakRef.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-makeconstructor": {"num": "9.2.5", "title": "#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )", "html": "<emu-clause id=\"sec-makeconstructor\" aoid=\"MakeConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makeconstructor\">#sec-makeconstructor</span> MakeConstructor ( <var>F</var> [ , <var>writablePrototype</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation MakeConstructor takes argument <var>F</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>) and optional arguments <var>writablePrototype</var> (a Boolean) and <var>prototype</var> (an Object). It converts <var>F</var> into a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>F</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <emu-val>\"prototype\"</emu-val> own property.</li><li>Set <var>F</var>.[[Construct]] to the definition specified in <emu-xref href=\"#sec-ecmascript-function-objects-construct-argumentslist-newtarget\"><a href=\"#sec-ecmascript-function-objects-construct-argumentslist-newtarget\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects-construct-argumentslist-newtarget\">#sec-ecmascript-function-objects-construct-argumentslist-newtarget</a></emu-xref>.</li><li>Set <var>F</var>.[[ConstructorKind]] to <emu-const>base</emu-const>.</li><li>If <var>writablePrototype</var> is not present, set <var>writablePrototype</var> to <emu-val>true</emu-val>.</li><li>If <var>prototype</var> is not present, then<ol><li>Set <var>prototype</var> to <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>prototype</var>, <emu-val>\"constructor\"</emu-val>, PropertyDescriptor { [[Value]]: <var>F</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-array.prototype": {"num": "22.1.2.4", "title": "#sec-array.prototype Array.prototype", "html": "<emu-clause id=\"sec-array.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype\">#sec-array.prototype</span> Array.prototype</h1>\n        <p>The value of <code>Array.prototype</code> is %Array.prototype%, the intrinsic Array prototype object.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-boolean.prototype": {"num": "19.3.2.1", "title": "#sec-boolean.prototype Boolean.prototype", "html": "<emu-clause id=\"sec-boolean.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean.prototype\">#sec-boolean.prototype</span> Boolean.prototype</h1>\n        <p>The initial value of <code>Boolean.prototype</code> is %Boolean.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-promise.allsettled-reject-element-functions": {"num": "26.6.4.2.3", "title": "#sec-promise.allsettled-reject-element-functions Promise.allSettled Reject Element Functions", "html": "<emu-clause id=\"sec-promise.allsettled-reject-element-functions\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled-reject-element-functions\">#sec-promise.allsettled-reject-element-functions</span> <code>Promise.allSettled</code> Reject Element Functions</h1>\n          <p>A <code>Promise.allSettled</code> reject element function is an anonymous built-in function that is used to reject a specific <code>Promise.allSettled</code> element. Each <code>Promise.allSettled</code> reject element function has [[Index]], [[Values]], [[Capability]], [[RemainingElements]], and [[AlreadyCalled]] internal slots.</p>\n          <p>When a <code>Promise.allSettled</code> reject element function is called with argument <var>x</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>alreadyCalled</var> be <var>F</var>.[[AlreadyCalled]].</li><li>If <var>alreadyCalled</var>.[[Value]] is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Set <var>alreadyCalled</var>.[[Value]] to <emu-val>true</emu-val>.</li><li>Let <var>index</var> be <var>F</var>.[[Index]].</li><li>Let <var>values</var> be <var>F</var>.[[Values]].</li><li>Let <var>promiseCapability</var> be <var>F</var>.[[Capability]].</li><li>Let <var>remainingElementsCount</var> be <var>F</var>.[[RemainingElements]].</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"status\"</emu-val>, <emu-val>\"rejected\"</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"reason\"</emu-val>, <var>x</var>).</li><li>Set <var>values</var>[<var>index</var>] to <var>obj</var>.</li><li>Set <var>remainingElementsCount</var>.[[Value]] to <var>remainingElementsCount</var>.[[Value]] - 1.</li><li>If <var>remainingElementsCount</var>.[[Value]] is 0, then<ol><li>Let <var>valuesArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>values</var>).</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>, &#171; <var>valuesArray</var> &#187;).</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n          <p>The <emu-val>\"length\"</emu-val> property of a <code>Promise.allSettled</code> reject element function is 1.</p>\n        </emu-clause>\n      "}, "sec-object.prototype.valueof": {"num": "19.1.3.7", "title": "#sec-object.prototype.valueof Object.prototype.valueOf ( )", "html": "<emu-clause id=\"sec-object.prototype.valueof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</span> Object.prototype.valueOf ( )</h1>\n        <p>When the <code>valueOf</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li></ol></emu-alg>\n        <p>This function is the <dfn>%ObjProto_valueOf%</dfn> intrinsic object.</p>\n      </emu-clause>\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              </th>\n              <th>\n                Global Name\n              </th>\n              <th>\n                ECMAScript Language Association\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>\n              </td>\n              <td>\n                <code>AggregateError</code>\n              </td>\n              <td>\n                The <code>AggregateError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %AggregateErrorPrototype%\n              </td>\n              <td>\n                <code>AggregateError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-aggregate-error-prototype-objects\"><a href=\"#sec-properties-of-the-aggregate-error-prototype-objects\">%AggregateError.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array</code>\n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"entries\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"forEach\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"keys\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"values\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGeneratorFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGenerator.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              </td>\n              <td>\n                <code>Atomics</code>\n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt</code>\n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigInt64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigUint64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean</code>\n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView</code>\n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date</code>\n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURI</code>\n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURI</code>\n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error</code>\n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              </td>\n              <td>\n                <code>eval</code>\n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>\n              </td>\n              <td>\n                <code>EvalError</code>\n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>; i.e., %EvalError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>\n              </td>\n              <td>\n                <code>FinalizationRegistry</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\" class=\"excluded-xref\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float32Array</code>\n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>; i.e., %Float32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float64Array</code>\n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>; i.e., %Float64Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              </td>\n              <td>\n                <code>Function</code>\n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              </td>\n              <td>\n                <code>Function.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%Generator.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int8Array</code>\n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>; i.e., %Int8Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int16Array</code>\n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>; i.e., %Int16Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int32Array</code>\n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>; i.e., %Int32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              </td>\n              <td>\n                <code>isFinite</code>\n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              </td>\n              <td>\n                <code>isNaN</code>\n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON</code>\n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON.parse</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"parse\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\">%JSONStringify%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"stringify\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map</code>\n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              </td>\n              <td>\n                <code>Math</code>\n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number</code>\n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object</code>\n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"toString\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"valueOf\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseFloat</code>\n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseInt</code>\n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise</code>\n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"then\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.all</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"all\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.reject</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"reject\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"resolve\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              </td>\n              <td>\n                <code>Proxy</code>\n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>RangeError</code>\n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>; i.e., %RangeError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>\n              </td>\n              <td>\n                <code>ReferenceError</code>\n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>; i.e., %ReferenceError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              </td>\n              <td>\n                <code>Reflect</code>\n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp</code>\n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set</code>\n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              </td>\n              <td>\n                <code>String</code>\n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>String.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol</code>\n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>\n              </td>\n              <td>\n                <code>SyntaxError</code>\n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>; i.e., %SyntaxError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>TypeError</code>\n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>; i.e., %TypeError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8Array</code>\n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>; i.e., %Uint8Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>; i.e., %Uint8ClampedArray.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint16Array</code>\n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>; i.e., %Uint16Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint32Array</code>\n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>; i.e., %Uint32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>\n              </td>\n              <td>\n                <code>URIError</code>\n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>; i.e., %URIError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap</code>\n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%\n              </td>\n              <td>\n                <code>WeakRef</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet</code>\n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-weakmap.prototype": {"num": "23.3.2.1", "title": "#sec-weakmap.prototype WeakMap.prototype", "html": "<emu-clause id=\"sec-weakmap.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap.prototype\">#sec-weakmap.prototype</span> WeakMap.prototype</h1>\n        <p>The initial value of <code>WeakMap.prototype</code> is %WeakMap.prototype%.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-reflect-object": {"num": "27.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Reflect\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">27.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">27.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">27.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">27.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">27.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">27.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">27.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">27.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">27.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">27.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">27.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">27.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">27.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div><div id=\"excluded-sec-reflect-@@tostringtag\"><h1><span class=\"secnum\">27.1.14</span>#sec-reflect-@@tostringtag Reflect [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-json-object": {"num": "24.5", "title": "#sec-json-object The JSON Object", "html": "<emu-clause id=\"sec-json-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-object\">#sec-json-object</span> The JSON Object</h1>\n    <p>The JSON object:</p>\n    <ul>\n      <li>is <dfn>%JSON%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"JSON\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>contains two functions, <code>parse</code> and <code>stringify</code>, that are used to parse and construct JSON texts.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The JSON Data Interchange Format is defined in ECMA-404. The JSON interchange format used in this specification is exactly that described by ECMA-404. Conforming implementations of <code>JSON.parse</code> and <code>JSON.stringify</code> must support the exact interchange format described in the ECMA-404 specification without any deletions or extensions to the format.</p>\n\n    <div id=\"excluded-sec-json.parse\"><h1><span class=\"secnum\">24.5.1</span>#sec-json.parse JSON.parse ( text [ , reviver ] )</h1>...</div><div id=\"excluded-sec-json.stringify\"><h1><span class=\"secnum\">24.5.2</span>#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )</h1>...</div><div id=\"excluded-sec-json-@@tostringtag\"><h1><span class=\"secnum\">24.5.3</span>#sec-json-@@tostringtag JSON [ @@toStringTag ]</h1>...</div></emu-clause>\n"}, "sec-get-regexp.prototype.sticky": {"num": "21.2.5.14", "title": "#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky", "html": "<emu-clause id=\"sec-get-regexp.prototype.sticky\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.sticky\">#sec-get-regexp.prototype.sticky</span> get RegExp.prototype.sticky</h1>\n        <p><code>RegExp.prototype.sticky</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, %RegExp.prototype%) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0079 (LATIN SMALL LETTER Y), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-promise.resolve": {"num": "26.6.4.7", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">26.6.4.7.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}}, "figData": {"table-2": "Table 3", "table-5": "Table 6", "table-7": "Table 8", "table-27": "Table 27", "table-59": "Table 78"}}, "to": {"secList": ["sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization", "sec-runtime-semantics-classdefinitionevaluation", "sec-properties-of-promise-instances", "sec-properties-of-the-aggregate-error-constructors", "sec-object.prototype", "sec-properties-of-the-sharedarraybuffer-prototype-object", "sec-get-regexp.prototype.global", "sec-properties-of-the-weakmap-prototype-object", "sec-promise.prototype.then", "sec-finalization-registry.prototype.constructor", "sec-properties-of-the-dataview-prototype-object", "sec-properties-of-the-finalization-registry-prototype-object", "sec-properties-of-the-function-prototype-object", "sec-properties-of-the-nativeerror-prototype-objects", "sec-map.prototype", "sec-object-value", "sec-get-regexp.prototype.source", "sec-weak-ref.prototype.constructor", "sec-properties-of-the-date-prototype-object", "sec-get-regexp.prototype.multiline", "sec-promise.prototype", "sec-properties-of-the-array-prototype-object", "sec-json.parse", "sec-properties-of-the-set-prototype-object", "sec-string.prototype", "sec-aggregate-error-constructor", "sec-array.prototype.foreach", "sec-immutable-prototype-exotic-objects", "sec-array.prototype.values", "sec-async-function-prototype-properties", "sec-dataview.prototype", "sec-createmappedargumentsobject", "sec-get-regexp.prototype.unicode", "sec-json.stringify", "sec-properties-of-the-arraybuffer-prototype-object", "sec-date.prototype", "sec-properties-of-the-symbol-prototype-object", "sec-asynciteratorprototype", "sec-properties-of-the-error-prototype-object", "sec-aggregate-error.prototype", "sec-properties-of-the-number-prototype-object", "sec-array.prototype.entries", "sec-get-regexp.prototype.dotAll", "sec-object.getownpropertydescriptors", "sec-symbol.prototype", "sec-object.fromentries", "sec-properties-of-the-boolean-prototype-object", "sec-runtime-semantics-restdestructuringassignmentevaluation", "sec-properties-of-the-string-prototype-object", "sec-object.prototype.tostring", "sec-%iteratorprototype%-object", "sec-aggregate-error.prototype.constructor", "sec-promise.reject", "sec-properties-of-the-aggregate-error-prototype-objects", "sec-properties-of-the-weakset-prototype-object", "sec-get-regexp.prototype.ignorecase", "sec-properties-of-the-object-prototype-object", "sec-math-object", "sec-properties-of-the-bigint-prototype-object", "sec-number.prototype", "sec-regexp.prototype", "sec-properties-of-the-%typedarrayprototype%-object", "sec-properties-of-generator-prototype", "sec-atomics-object", "sec-promise.all", "sec-object-initializer-runtime-semantics-evaluation", "sec-sharedarraybuffer.prototype", "sec-proxy.revocable", "sec-properties-of-the-finalization-registry-constructor", "sec-properties-of-the-promise-prototype-object", "sec-createiterresultobject", "sec-properties-of-asyncgenerator-prototype", "sec-setrealmglobalobject", "sec-properties-of-the-map-prototype-object", "sec-createunmappedargumentsobject", "sec-weakset.prototype", "sec-finalization-registry-constructor", "sec-frompropertydescriptor", "sec-arraycreate", "sec-weak-ref-constructor", "sec-set.prototype", "sec-promise.allsettled-resolve-element-functions", "sec-arraybuffer.prototype", "sec-properties-of-the-weak-ref-constructor", "sec-properties-of-the-regexp-prototype-object", "sec-array.prototype.keys", "sec-error.prototype", "sec-properties-of-the-weak-ref-prototype-object", "sec-makeconstructor", "sec-array.prototype", "sec-boolean.prototype", "sec-promise.allsettled-reject-element-functions", "sec-object.prototype.valueof", "sec-well-known-intrinsic-objects", "sec-weakmap.prototype", "sec-reflect-object", "sec-json-object", "sec-get-regexp.prototype.sticky", "sec-promise.resolve"], "secData": {"sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization": {"num": "13.3.3.7", "title": "#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization Runtime Semantics: RestBindingInitialization", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\">#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization</span> Runtime Semantics: RestBindingInitialization</h1>\n        <p>With parameters <var>value</var>, <var>environment</var>, and <var>excludedNames</var>.</p>\n\n        <emu-grammar><emu-production name=\"BindingRestProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"145844de\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lhs</var> be ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>, <var>environment</var>).</li><li>Let <var>restObj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform ?&#160;<emu-xref aoid=\"CopyDataProperties\"><a href=\"#sec-copydataproperties\">CopyDataProperties</a></emu-xref>(<var>restObj</var>, <var>value</var>, <var>excludedNames</var>).</li><li>If <var>environment</var> is <emu-val>undefined</emu-val>, return <emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>restObj</var>).</li><li>Return <emu-xref aoid=\"InitializeReferencedBinding\"><a href=\"#sec-initializereferencedbinding\">InitializeReferencedBinding</a></emu-xref>(<var>lhs</var>, <var>restObj</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-classdefinitionevaluation": {"num": "14.6.14", "title": "#sec-runtime-semantics-classdefinitionevaluation Runtime Semantics: ClassDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-classdefinitionevaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-classdefinitionevaluation\">#sec-runtime-semantics-classdefinitionevaluation</span> Runtime Semantics: ClassDefinitionEvaluation</h1>\n      <p>With parameters <var>classBinding</var> and <var>className</var>.</p>\n      <emu-grammar><emu-production name=\"ClassTail\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b8ea6aa5\"><emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>{</emu-t><emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>env</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>classScope</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>env</var>).</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.CreateImmutableBinding(<var>classBinding</var>, <emu-val>true</emu-val>).</li></ol></li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, then<ol><li>Let <var>protoParent</var> be <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else,<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>Let <var>superclassRef</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassHeritage\">ClassHeritage</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Let <var>superclass</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>superclassRef</var>).</li><li>If <var>superclass</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>protoParent</var> be <emu-val>null</emu-val>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else if <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>superclass</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Else,<ol><li>Let <var>protoParent</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>superclass</var>, <emu-val>\"prototype\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>protoParent</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorParent</var> be <var>superclass</var>.</li></ol></li></ol></li><li>Let <var>proto</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>protoParent</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>constructor</var> be <emu-const>empty</emu-const>.</li><li>Else, let <var>constructor</var> be ConstructorMethod of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>If <var>constructor</var> is <emu-const>empty</emu-const>, then<ol><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Set <var>constructor</var> to the result of parsing the source text\n              <pre><code class=\"javascript hljs\"><span class=\"hljs-keyword\">constructor</span>(...args) { <span class=\"hljs-keyword\">super</span>(...args); }</code></pre>\n              using the syntactic grammar with the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li></ol></li><li>Else,<ol><li>Set <var>constructor</var> to the result of parsing the source text\n              <pre><code class=\"javascript hljs\"><span class=\"hljs-keyword\">constructor</span>() {}</code></pre>\n              using the syntactic grammar with the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li></ol></li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>Let <var>constructorInfo</var> be ! DefineMethod of <var>constructor</var> with arguments <var>proto</var> and <var>constructorParent</var>.</li><li>Let <var>F</var> be <var>constructorInfo</var>.[[Closure]].</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>className</var>).</li><li>Perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>, <emu-val>false</emu-val>, <var>proto</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, set <var>F</var>.[[ConstructorKind]] to <emu-const>derived</emu-const>.</li><li>Perform <emu-xref aoid=\"MakeClassConstructor\"><a href=\"#sec-makeclassconstructor\">MakeClassConstructor</a></emu-xref>(<var>F</var>).</li><li>Perform <emu-xref aoid=\"CreateMethodProperty\"><a href=\"#sec-createmethodproperty\">CreateMethodProperty</a></emu-xref>(<var>proto</var>, <emu-val>\"constructor\"</emu-val>, <var>F</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>methods</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Else, let <var>methods</var> be NonConstructorMethodDefinitions of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>For each <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <var>m</var> in order from <var>methods</var>, do<ol><li>If IsStatic of <var>m</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>status</var> be PropertyDefinitionEvaluation of <var>m</var> with arguments <var>proto</var> and <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>status</var> be PropertyDefinitionEvaluation of <var>m</var> with arguments <var>F</var> and <emu-val>false</emu-val>.</li></ol></li><li>If <var>status</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>status</var>).</li></ol></li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.InitializeBinding(<var>classBinding</var>, <var>F</var>).</li></ol></li><li>Return <var>F</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-properties-of-promise-instances": {"num": "26.6.6", "title": "#sec-properties-of-promise-instances Properties of Promise Instances", "html": "<emu-clause id=\"sec-properties-of-promise-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-promise-instances\">#sec-properties-of-promise-instances</span> Properties of Promise Instances</h1>\n      <p>Promise instances are ordinary objects that inherit properties from the Promise prototype object (the intrinsic, <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%Promise.prototype%</a></emu-xref>). Promise instances are initially created with the internal slots described in <emu-xref href=\"#table-59\"><a href=\"#table-59\" class=\"excluded-xref\" excluded-id=\"table-59\">#table-59</a></emu-xref>.</p>\n      <emu-table id=\"table-59\" caption=\"Internal Slots of Promise Instances\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-59\">#table-59</span>: Internal Slots of Promise Instances</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Internal Slot\n            </th>\n            <th>\n              Description\n            </th>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseState]]\n            </td>\n            <td>\n              One of <emu-const>pending</emu-const>, <emu-const>fulfilled</emu-const>, or <emu-const>rejected</emu-const>. Governs how a promise will react to incoming calls to its <code>then</code> method.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseResult]]\n            </td>\n            <td>\n              The value with which the promise has been fulfilled or rejected, if any. Only meaningful if [[PromiseState]] is not <emu-const>pending</emu-const>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseFulfillReactions]]\n            </td>\n            <td>\n              A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of PromiseReaction records to be processed when/if the promise transitions from the <emu-const>pending</emu-const> state to the <emu-const>fulfilled</emu-const> state.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseRejectReactions]]\n            </td>\n            <td>\n              A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of PromiseReaction records to be processed when/if the promise transitions from the <emu-const>pending</emu-const> state to the <emu-const>rejected</emu-const> state.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[PromiseIsHandled]]\n            </td>\n            <td>\n              A boolean indicating whether the promise has ever had a fulfillment or rejection handler; used in unhandled rejection tracking.\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n  "}, "sec-properties-of-the-aggregate-error-constructors": {"num": "19.5.7.2", "title": "#sec-properties-of-the-aggregate-error-constructors Properties of the AggregateError Constructor", "html": "<emu-clause id=\"sec-properties-of-the-aggregate-error-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-aggregate-error-constructors\">#sec-properties-of-the-aggregate-error-constructors</span> Properties of the AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error.prototype\"><h1><span class=\"secnum\">19.5.7.2.1</span>#sec-aggregate-error.prototype AggregateError.prototype</h1>...</div></emu-clause>\n\n      "}, "sec-object.prototype": {"num": "19.1.2.19", "title": "#sec-object.prototype Object.prototype", "html": "<emu-clause id=\"sec-object.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype\">#sec-object.prototype</span> Object.prototype</h1>\n        <p>The initial value of <code>Object.prototype</code> is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-sharedarraybuffer-prototype-object": {"num": "24.2.4", "title": "#sec-properties-of-the-sharedarraybuffer-prototype-object Properties of the SharedArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">#sec-properties-of-the-sharedarraybuffer-prototype-object</span> Properties of the SharedArrayBuffer Prototype Object</h1>\n      <p>The SharedArrayBuffer prototype object:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-sharedarraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.2.4.1</span>#sec-get-sharedarraybuffer.prototype.bytelength get SharedArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.2.4.2</span>#sec-sharedarraybuffer.prototype.constructor SharedArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.2.4.3</span>#sec-sharedarraybuffer.prototype.slice SharedArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.toString\"><h1><span class=\"secnum\">24.2.4.4</span>#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp.prototype.global": {"num": "21.2.5.5", "title": "#sec-get-regexp.prototype.global get RegExp.prototype.global", "html": "<emu-clause id=\"sec-get-regexp.prototype.global\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.global\">#sec-get-regexp.prototype.global</span> get RegExp.prototype.global</h1>\n        <p><code>RegExp.prototype.global</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0067 (LATIN SMALL LETTER G), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-weakmap-prototype-object": {"num": "23.3.3", "title": "#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakmap-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakmap-prototype-object\">#sec-properties-of-the-weakmap-prototype-object</span> Properties of the WeakMap Prototype Object</h1>\n      <p>The WeakMap prototype object:</p>\n      <ul>\n        <li>is <dfn>%WeakMap.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakMapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap.prototype.constructor\"><h1><span class=\"secnum\">23.3.3.1</span>#sec-weakmap.prototype.constructor WeakMap.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakmap.prototype.delete\"><h1><span class=\"secnum\">23.3.3.2</span>#sec-weakmap.prototype.delete WeakMap.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.get\"><h1><span class=\"secnum\">23.3.3.3</span>#sec-weakmap.prototype.get WeakMap.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.has\"><h1><span class=\"secnum\">23.3.3.4</span>#sec-weakmap.prototype.has WeakMap.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.set\"><h1><span class=\"secnum\">23.3.3.5</span>#sec-weakmap.prototype.set WeakMap.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-weakmap.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.3.3.6</span>#sec-weakmap.prototype-@@tostringtag WeakMap.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-promise.prototype.then": {"num": "26.6.5.4", "title": "#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )", "html": "<emu-clause id=\"sec-promise.prototype.then\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</span> Promise.prototype.then ( <var>onFulfilled</var>, <var>onRejected</var> )</h1>\n        <p>When the <code>then</code> method is called with arguments <var>onFulfilled</var> and <var>onRejected</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsPromise\"><a href=\"#sec-ispromise\">IsPromise</a></emu-xref>(<var>promise</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Let <var>resultCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Return <emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>, <var>resultCapability</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-performpromisethen\"><h1><span class=\"secnum\">26.6.5.4.1</span>#sec-performpromisethen PerformPromiseThen ( promise, onFulfilled, onRejected [ , resultCapability ] )</h1>...</div></emu-clause>\n\n      "}, "sec-finalization-registry.prototype.constructor": {"num": "25.2.3.1", "title": "#sec-finalization-registry.prototype.constructor FinalizationRegistry.prototype.constructor", "html": "<emu-clause id=\"sec-finalization-registry.prototype.constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry.prototype.constructor\">#sec-finalization-registry.prototype.constructor</span> FinalizationRegistry.prototype.constructor</h1>\n        <p>The initial value of <code>FinalizationRegistry.prototype.constructor</code> is <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-dataview-prototype-object": {"num": "24.3.4", "title": "#sec-properties-of-the-dataview-prototype-object Properties of the DataView Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-dataview-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-dataview-prototype-object\">#sec-properties-of-the-dataview-prototype-object</span> Properties of the DataView Prototype Object</h1>\n      <p>The DataView prototype object:</p>\n      <ul>\n        <li>is <dfn>%DataView.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-dataview.prototype.buffer\"><h1><span class=\"secnum\">24.3.4.1</span>#sec-get-dataview.prototype.buffer get DataView.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.bytelength\"><h1><span class=\"secnum\">24.3.4.2</span>#sec-get-dataview.prototype.bytelength get DataView.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.byteoffset\"><h1><span class=\"secnum\">24.3.4.3</span>#sec-get-dataview.prototype.byteoffset get DataView.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-dataview.prototype.constructor\"><h1><span class=\"secnum\">24.3.4.4</span>#sec-dataview.prototype.constructor DataView.prototype.constructor</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbigint64\"><h1><span class=\"secnum\">24.3.4.5</span>#sec-dataview.prototype.getbigint64 DataView.prototype.getBigInt64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbiguint64\"><h1><span class=\"secnum\">24.3.4.6</span>#sec-dataview.prototype.getbiguint64 DataView.prototype.getBigUint64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat32\"><h1><span class=\"secnum\">24.3.4.7</span>#sec-dataview.prototype.getfloat32 DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat64\"><h1><span class=\"secnum\">24.3.4.8</span>#sec-dataview.prototype.getfloat64 DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint8\"><h1><span class=\"secnum\">24.3.4.9</span>#sec-dataview.prototype.getint8 DataView.prototype.getInt8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint16\"><h1><span class=\"secnum\">24.3.4.10</span>#sec-dataview.prototype.getint16 DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint32\"><h1><span class=\"secnum\">24.3.4.11</span>#sec-dataview.prototype.getint32 DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint8\"><h1><span class=\"secnum\">24.3.4.12</span>#sec-dataview.prototype.getuint8 DataView.prototype.getUint8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint16\"><h1><span class=\"secnum\">24.3.4.13</span>#sec-dataview.prototype.getuint16 DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint32\"><h1><span class=\"secnum\">24.3.4.14</span>#sec-dataview.prototype.getuint32 DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbigint64\"><h1><span class=\"secnum\">24.3.4.15</span>#sec-dataview.prototype.setbigint64 DataView.prototype.setBigInt64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbiguint64\"><h1><span class=\"secnum\">24.3.4.16</span>#sec-dataview.prototype.setbiguint64 DataView.prototype.setBigUint64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat32\"><h1><span class=\"secnum\">24.3.4.17</span>#sec-dataview.prototype.setfloat32 DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat64\"><h1><span class=\"secnum\">24.3.4.18</span>#sec-dataview.prototype.setfloat64 DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint8\"><h1><span class=\"secnum\">24.3.4.19</span>#sec-dataview.prototype.setint8 DataView.prototype.setInt8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint16\"><h1><span class=\"secnum\">24.3.4.20</span>#sec-dataview.prototype.setint16 DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint32\"><h1><span class=\"secnum\">24.3.4.21</span>#sec-dataview.prototype.setint32 DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint8\"><h1><span class=\"secnum\">24.3.4.22</span>#sec-dataview.prototype.setuint8 DataView.prototype.setUint8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint16\"><h1><span class=\"secnum\">24.3.4.23</span>#sec-dataview.prototype.setuint16 DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint32\"><h1><span class=\"secnum\">24.3.4.24</span>#sec-dataview.prototype.setuint32 DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.3.4.25</span>#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-finalization-registry-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-finalization-registry-prototype-object Properties of the FinalizationRegistry Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-finalization-registry-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-finalization-registry-prototype-object\">#sec-properties-of-the-finalization-registry-prototype-object</span> Properties of the FinalizationRegistry Prototype Object</h1>\n      <p>The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> prototype object:</p>\n      <ul>\n        <li>is <dfn>%FinalizationRegistry.prototype%</dfn>.</li>\n        <li>\n          has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.\n        </li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>\n          does not have [[Cells]] and [[CleanupCallback]] internal slots.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-finalization-registry.prototype.constructor FinalizationRegistry.prototype.constructor</h1>...</div><div id=\"excluded-sec-finalization-registry.prototype.register\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-finalization-registry.prototype.register FinalizationRegistry.prototype.register ( target, heldValue [ , unregisterToken ] )</h1>...</div><div id=\"excluded-sec-finalization-registry.prototype.unregister\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-finalization-registry.prototype.unregister FinalizationRegistry.prototype.unregister ( unregisterToken )</h1>...</div><div id=\"excluded-sec-finalization-registry.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.4</span>#sec-finalization-registry.prototype-@@tostringtag FinalizationRegistry.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-function-prototype-object": {"num": "19.2.3", "title": "#sec-properties-of-the-function-prototype-object Properties of the Function Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-function-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</span> Properties of the Function Prototype Object</h1>\n      <p>The Function prototype object:</p>\n      <ul>\n        <li>is <dfn>%Function.prototype%</dfn>.</li>\n        <li>is itself a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n        <li>accepts any arguments and returns <emu-val>undefined</emu-val> when invoked.</li>\n        <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 0.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is the empty String.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Function prototype object is specified to be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-function.prototype.apply\"><h1><span class=\"secnum\">19.2.3.1</span>#sec-function.prototype.apply Function.prototype.apply ( thisArg, argArray )</h1>...</div><div id=\"excluded-sec-function.prototype.bind\"><h1><span class=\"secnum\">19.2.3.2</span>#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.call\"><h1><span class=\"secnum\">19.2.3.3</span>#sec-function.prototype.call Function.prototype.call ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.constructor\"><h1><span class=\"secnum\">19.2.3.4</span>#sec-function.prototype.constructor Function.prototype.constructor</h1>...</div><div id=\"excluded-sec-function.prototype.tostring\"><h1><span class=\"secnum\">19.2.3.5</span>#sec-function.prototype.tostring Function.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-function.prototype-@@hasinstance\"><h1><span class=\"secnum\">19.2.3.6</span>#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-nativeerror-prototype-objects": {"num": "19.5.6.3", "title": "#sec-properties-of-the-nativeerror-prototype-objects Properties of the NativeError Prototype Objects", "html": "<emu-clause id=\"sec-properties-of-the-nativeerror-prototype-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-nativeerror-prototype-objects\">#sec-properties-of-the-nativeerror-prototype-objects</span> Properties of the <var>NativeError</var> Prototype Objects</h1>\n        <p>Each <var>NativeError</var> prototype object:</p>\n        <ul>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>is not an Error instance and does not have an [[ErrorData]] internal slot.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%Error.prototype%</a></emu-xref>.</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror.prototype.constructor\"><h1><span class=\"secnum\">19.5.6.3.1</span>#sec-nativeerror.prototype.constructor NativeError.prototype.constructor</h1>...</div><div id=\"excluded-sec-nativeerror.prototype.message\"><h1><span class=\"secnum\">19.5.6.3.2</span>#sec-nativeerror.prototype.message NativeError.prototype.message</h1>...</div><div id=\"excluded-sec-nativeerror.prototype.name\"><h1><span class=\"secnum\">19.5.6.3.3</span>#sec-nativeerror.prototype.name NativeError.prototype.name</h1>...</div></emu-clause>\n\n      "}, "sec-map.prototype": {"num": "23.1.2.1", "title": "#sec-map.prototype Map.prototype", "html": "<emu-clause id=\"sec-map.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype\">#sec-map.prototype</span> Map.prototype</h1>\n        <p>The initial value of <code>Map.prototype</code> is <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%Map.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-object-value": {"num": "19.1.1.1", "title": "#sec-object-value Object ( [ value ] )", "html": "<emu-clause id=\"sec-object-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-value\">#sec-object-value</span> Object ( [ <var>value</var> ] )</h1>\n        <p>When the <code>Object</code> function is called with optional argument <var>value</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is neither <emu-val>undefined</emu-val> nor the active function, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Object.prototype%\"</emu-val>).</li></ol></li><li>If <var>value</var> is <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Return !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>value</var>).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>Object</code> function is 1.</p>\n      </emu-clause>\n    "}, "sec-get-regexp.prototype.source": {"num": "21.2.5.12", "title": "#sec-get-regexp.prototype.source get RegExp.prototype.source", "html": "<emu-clause id=\"sec-get-regexp.prototype.source\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.source\">#sec-get-regexp.prototype.source</span> get RegExp.prototype.source</h1>\n        <p><code>RegExp.prototype.source</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalSource]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>\"(?:)\"</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>R</var> has an [[OriginalFlags]] internal slot.</li><li>Let <var>src</var> be <var>R</var>.[[OriginalSource]].</li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>Return <emu-xref aoid=\"EscapeRegExpPattern\"><a href=\"#sec-escaperegexppattern\">EscapeRegExpPattern</a></emu-xref>(<var>src</var>, <var>flags</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weak-ref.prototype.constructor": {"num": "25.1.3.1", "title": "#sec-weak-ref.prototype.constructor WeakRef.prototype.constructor", "html": "<emu-clause id=\"sec-weak-ref.prototype.constructor\" normative-optional=\"\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref.prototype.constructor\">#sec-weak-ref.prototype.constructor</span> WeakRef.prototype.constructor</h1>\n\n        <p>The initial value of <code>WeakRef.prototype.constructor</code> is %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-date-prototype-object": {"num": "20.4.4", "title": "#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-date-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</span> Properties of the Date Prototype Object</h1>\n      <p>The Date prototype object:</p>\n      <ul>\n        <li>is <dfn>%Date.prototype%</dfn>.</li>\n        <li>is itself an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Date instance and does not have a [[DateValue]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <p>Unless explicitly defined otherwise, the methods of the Date prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be an object that has a [[DateValue]] internal slot that has been initialized to a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>.</p>\n      <p>The abstract operation <dfn id=\"thistimevalue\" aoid=\"thisTimeValue\" oldids=\"sec-thistimevalue\">thisTimeValue<span id=\"sec-thistimevalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Return <var>value</var>.[[DateValue]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>In following descriptions of functions that are properties of the Date prototype object, the phrase &#8220;<dfn id=\"this-Date-object\">this Date object</dfn>&#8221; refers to the object that is the <emu-val>this</emu-val> value for the invocation of the function. If the Type of the <emu-val>this</emu-val> value is not Object, a <emu-val>TypeError</emu-val> exception is thrown. The phrase &#8220;<dfn id=\"this-time-value\">this time value</dfn>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-date.prototype.constructor\"><h1><span class=\"secnum\">20.4.4.1</span>#sec-date.prototype.constructor Date.prototype.constructor</h1>...</div><div id=\"excluded-sec-date.prototype.getdate\"><h1><span class=\"secnum\">20.4.4.2</span>#sec-date.prototype.getdate Date.prototype.getDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getday\"><h1><span class=\"secnum\">20.4.4.3</span>#sec-date.prototype.getday Date.prototype.getDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getfullyear\"><h1><span class=\"secnum\">20.4.4.4</span>#sec-date.prototype.getfullyear Date.prototype.getFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gethours\"><h1><span class=\"secnum\">20.4.4.5</span>#sec-date.prototype.gethours Date.prototype.getHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmilliseconds\"><h1><span class=\"secnum\">20.4.4.6</span>#sec-date.prototype.getmilliseconds Date.prototype.getMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getminutes\"><h1><span class=\"secnum\">20.4.4.7</span>#sec-date.prototype.getminutes Date.prototype.getMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmonth\"><h1><span class=\"secnum\">20.4.4.8</span>#sec-date.prototype.getmonth Date.prototype.getMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getseconds\"><h1><span class=\"secnum\">20.4.4.9</span>#sec-date.prototype.getseconds Date.prototype.getSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettime\"><h1><span class=\"secnum\">20.4.4.10</span>#sec-date.prototype.gettime Date.prototype.getTime ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettimezoneoffset\"><h1><span class=\"secnum\">20.4.4.11</span>#sec-date.prototype.gettimezoneoffset Date.prototype.getTimezoneOffset ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcdate\"><h1><span class=\"secnum\">20.4.4.12</span>#sec-date.prototype.getutcdate Date.prototype.getUTCDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcday\"><h1><span class=\"secnum\">20.4.4.13</span>#sec-date.prototype.getutcday Date.prototype.getUTCDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcfullyear\"><h1><span class=\"secnum\">20.4.4.14</span>#sec-date.prototype.getutcfullyear Date.prototype.getUTCFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutchours\"><h1><span class=\"secnum\">20.4.4.15</span>#sec-date.prototype.getutchours Date.prototype.getUTCHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.16</span>#sec-date.prototype.getutcmilliseconds Date.prototype.getUTCMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcminutes\"><h1><span class=\"secnum\">20.4.4.17</span>#sec-date.prototype.getutcminutes Date.prototype.getUTCMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmonth\"><h1><span class=\"secnum\">20.4.4.18</span>#sec-date.prototype.getutcmonth Date.prototype.getUTCMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcseconds\"><h1><span class=\"secnum\">20.4.4.19</span>#sec-date.prototype.getutcseconds Date.prototype.getUTCSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.setdate\"><h1><span class=\"secnum\">20.4.4.20</span>#sec-date.prototype.setdate Date.prototype.setDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setfullyear\"><h1><span class=\"secnum\">20.4.4.21</span>#sec-date.prototype.setfullyear Date.prototype.setFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.sethours\"><h1><span class=\"secnum\">20.4.4.22</span>#sec-date.prototype.sethours Date.prototype.setHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmilliseconds\"><h1><span class=\"secnum\">20.4.4.23</span>#sec-date.prototype.setmilliseconds Date.prototype.setMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setminutes\"><h1><span class=\"secnum\">20.4.4.24</span>#sec-date.prototype.setminutes Date.prototype.setMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmonth\"><h1><span class=\"secnum\">20.4.4.25</span>#sec-date.prototype.setmonth Date.prototype.setMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setseconds\"><h1><span class=\"secnum\">20.4.4.26</span>#sec-date.prototype.setseconds Date.prototype.setSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.settime\"><h1><span class=\"secnum\">20.4.4.27</span>#sec-date.prototype.settime Date.prototype.setTime ( time )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcdate\"><h1><span class=\"secnum\">20.4.4.28</span>#sec-date.prototype.setutcdate Date.prototype.setUTCDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcfullyear\"><h1><span class=\"secnum\">20.4.4.29</span>#sec-date.prototype.setutcfullyear Date.prototype.setUTCFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutchours\"><h1><span class=\"secnum\">20.4.4.30</span>#sec-date.prototype.setutchours Date.prototype.setUTCHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.31</span>#sec-date.prototype.setutcmilliseconds Date.prototype.setUTCMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcminutes\"><h1><span class=\"secnum\">20.4.4.32</span>#sec-date.prototype.setutcminutes Date.prototype.setUTCMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmonth\"><h1><span class=\"secnum\">20.4.4.33</span>#sec-date.prototype.setutcmonth Date.prototype.setUTCMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcseconds\"><h1><span class=\"secnum\">20.4.4.34</span>#sec-date.prototype.setutcseconds Date.prototype.setUTCSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.todatestring\"><h1><span class=\"secnum\">20.4.4.35</span>#sec-date.prototype.todatestring Date.prototype.toDateString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toisostring\"><h1><span class=\"secnum\">20.4.4.36</span>#sec-date.prototype.toisostring Date.prototype.toISOString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.tojson\"><h1><span class=\"secnum\">20.4.4.37</span>#sec-date.prototype.tojson Date.prototype.toJSON ( key )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaledatestring\"><h1><span class=\"secnum\">20.4.4.38</span>#sec-date.prototype.tolocaledatestring Date.prototype.toLocaleDateString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocalestring\"><h1><span class=\"secnum\">20.4.4.39</span>#sec-date.prototype.tolocalestring Date.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaletimestring\"><h1><span class=\"secnum\">20.4.4.40</span>#sec-date.prototype.tolocaletimestring Date.prototype.toLocaleTimeString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tostring\"><h1><span class=\"secnum\">20.4.4.41</span>#sec-date.prototype.tostring Date.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.totimestring\"><h1><span class=\"secnum\">20.4.4.42</span>#sec-date.prototype.totimestring Date.prototype.toTimeString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toutcstring\"><h1><span class=\"secnum\">20.4.4.43</span>#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.valueof\"><h1><span class=\"secnum\">20.4.4.44</span>#sec-date.prototype.valueof Date.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-date.prototype-@@toprimitive\"><h1><span class=\"secnum\">20.4.4.45</span>#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp.prototype.multiline": {"num": "21.2.5.9", "title": "#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline", "html": "<emu-clause id=\"sec-get-regexp.prototype.multiline\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.multiline\">#sec-get-regexp.prototype.multiline</span> get RegExp.prototype.multiline</h1>\n        <p><code>RegExp.prototype.multiline</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x006D (LATIN SMALL LETTER M), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-promise.prototype": {"num": "26.6.4.4", "title": "#sec-promise.prototype Promise.prototype", "html": "<emu-clause id=\"sec-promise.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype\">#sec-promise.prototype</span> Promise.prototype</h1>\n        <p>The initial value of <code>Promise.prototype</code> is <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%Promise.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-array-prototype-object": {"num": "22.1.3", "title": "#sec-properties-of-the-array-prototype-object Properties of the Array Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-array-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</span> Properties of the Array Prototype Object</h1>\n      <p>The Array prototype object:</p>\n      <ul>\n        <li>is <dfn>%Array.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Array prototype object is specified to be an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-array.prototype.concat\"><h1><span class=\"secnum\">22.1.3.1</span>#sec-array.prototype.concat Array.prototype.concat ( ...arguments )</h1>...</div><div id=\"excluded-sec-array.prototype.constructor\"><h1><span class=\"secnum\">22.1.3.2</span>#sec-array.prototype.constructor Array.prototype.constructor</h1>...</div><div id=\"excluded-sec-array.prototype.copywithin\"><h1><span class=\"secnum\">22.1.3.3</span>#sec-array.prototype.copywithin Array.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-array.prototype.entries\"><h1><span class=\"secnum\">22.1.3.4</span>#sec-array.prototype.entries Array.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-array.prototype.every\"><h1><span class=\"secnum\">22.1.3.5</span>#sec-array.prototype.every Array.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.fill\"><h1><span class=\"secnum\">22.1.3.6</span>#sec-array.prototype.fill Array.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.filter\"><h1><span class=\"secnum\">22.1.3.7</span>#sec-array.prototype.filter Array.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.find\"><h1><span class=\"secnum\">22.1.3.8</span>#sec-array.prototype.find Array.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.findindex\"><h1><span class=\"secnum\">22.1.3.9</span>#sec-array.prototype.findindex Array.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flat\"><h1><span class=\"secnum\">22.1.3.10</span>#sec-array.prototype.flat Array.prototype.flat ( [ depth ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flatmap\"><h1><span class=\"secnum\">22.1.3.11</span>#sec-array.prototype.flatmap Array.prototype.flatMap ( mapperFunction [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.foreach\"><h1><span class=\"secnum\">22.1.3.12</span>#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.includes\"><h1><span class=\"secnum\">22.1.3.13</span>#sec-array.prototype.includes Array.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.indexof\"><h1><span class=\"secnum\">22.1.3.14</span>#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.join\"><h1><span class=\"secnum\">22.1.3.15</span>#sec-array.prototype.join Array.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-array.prototype.keys\"><h1><span class=\"secnum\">22.1.3.16</span>#sec-array.prototype.keys Array.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-array.prototype.lastindexof\"><h1><span class=\"secnum\">22.1.3.17</span>#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.map\"><h1><span class=\"secnum\">22.1.3.18</span>#sec-array.prototype.map Array.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.pop\"><h1><span class=\"secnum\">22.1.3.19</span>#sec-array.prototype.pop Array.prototype.pop ( )</h1>...</div><div id=\"excluded-sec-array.prototype.push\"><h1><span class=\"secnum\">22.1.3.20</span>#sec-array.prototype.push Array.prototype.push ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.reduce\"><h1><span class=\"secnum\">22.1.3.21</span>#sec-array.prototype.reduce Array.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reduceright\"><h1><span class=\"secnum\">22.1.3.22</span>#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reverse\"><h1><span class=\"secnum\">22.1.3.23</span>#sec-array.prototype.reverse Array.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-array.prototype.shift\"><h1><span class=\"secnum\">22.1.3.24</span>#sec-array.prototype.shift Array.prototype.shift ( )</h1>...</div><div id=\"excluded-sec-array.prototype.slice\"><h1><span class=\"secnum\">22.1.3.25</span>#sec-array.prototype.slice Array.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-array.prototype.some\"><h1><span class=\"secnum\">22.1.3.26</span>#sec-array.prototype.some Array.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.sort\"><h1><span class=\"secnum\">22.1.3.27</span>#sec-array.prototype.sort Array.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-array.prototype.splice\"><h1><span class=\"secnum\">22.1.3.28</span>#sec-array.prototype.splice Array.prototype.splice ( start, deleteCount, ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.tolocalestring\"><h1><span class=\"secnum\">22.1.3.29</span>#sec-array.prototype.tolocalestring Array.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.tostring\"><h1><span class=\"secnum\">22.1.3.30</span>#sec-array.prototype.tostring Array.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-array.prototype.unshift\"><h1><span class=\"secnum\">22.1.3.31</span>#sec-array.prototype.unshift Array.prototype.unshift ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.values\"><h1><span class=\"secnum\">22.1.3.32</span>#sec-array.prototype.values Array.prototype.values ( )</h1>...</div><div id=\"excluded-sec-array.prototype-@@iterator\"><h1><span class=\"secnum\">22.1.3.33</span>#sec-array.prototype-@@iterator Array.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-array.prototype-@@unscopables\"><h1><span class=\"secnum\">22.1.3.34</span>#sec-array.prototype-@@unscopables Array.prototype [ @@unscopables ]</h1>...</div></emu-clause>\n\n    "}, "sec-json.parse": {"num": "24.5.1", "title": "#sec-json.parse JSON.parse ( text [ , reviver ] )", "html": "<emu-clause id=\"sec-json.parse\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json.parse\">#sec-json.parse</span> JSON.parse ( <var>text</var> [ , <var>reviver</var> ] )</h1>\n      <p>The <code>parse</code> function parses a JSON text (a JSON-formatted String) and produces an ECMAScript value. The JSON format represents literals, arrays, and objects with a syntax similar to the syntax for ECMAScript literals, Array Initializers, and Object Initializers. After parsing, JSON objects are realized as ECMAScript objects. JSON arrays are realized as ECMAScript Array instances. JSON strings, numbers, booleans, and null are realized as ECMAScript Strings, Numbers, Booleans, and <emu-val>null</emu-val>.</p>\n      <p>The optional <var>reviver</var> parameter is a function that takes two parameters, <var>key</var> and <var>value</var>. It can filter and transform the results. It is called with each of the <var>key</var>/<var>value</var> pairs produced by the parse, and its return value is used instead of the original value. If it returns what it received, the structure is not modified. If it returns <emu-val>undefined</emu-val> then the property is deleted from the result.</p>\n      <emu-alg><ol><li>Let <var>jsonString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>text</var>).</li><li id=\"step-json-parse-validate\">Parse !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>jsonString</var>) as a JSON text as specified in ECMA-404. Throw a <emu-val>SyntaxError</emu-val> exception if it is not a valid JSON text as defined in that specification.</li><li>Let <var>scriptString</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"(\"</emu-val>, <var>jsonString</var>, and <emu-val>\");\"</emu-val>.</li><li id=\"step-json-parse-parse\">Let <var>completion</var> be the result of parsing and evaluating !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>scriptString</var>) as if it was the source text of an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The extended PropertyDefinitionEvaluation semantics defined in <emu-xref href=\"#sec-__proto__-property-names-in-object-initializers\"><a href=\"#sec-__proto__-property-names-in-object-initializers\" class=\"excluded-xref\" excluded-id=\"sec-__proto__-property-names-in-object-initializers\">#sec-__proto__-property-names-in-object-initializers</a></emu-xref> must not be used during the evaluation.</li><li>Let <var>unfiltered</var> be <var>completion</var>.[[Value]].</li><li id=\"step-json-parse-assert-type\"><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>unfiltered</var> is either a String, Number, Boolean, Null, or an Object that is defined by either an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt> or an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>reviver</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>root</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Let <var>rootName</var> be the empty String.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>root</var>, <var>rootName</var>, <var>unfiltered</var>).</li><li>Return ?&#160;<emu-xref aoid=\"InternalizeJSONProperty\"><a href=\"#sec-internalizejsonproperty\">InternalizeJSONProperty</a></emu-xref>(<var>root</var>, <var>rootName</var>, <var>reviver</var>).</li></ol></li><li>Else,<ol><li>Return <var>unfiltered</var>.</li></ol></li></ol></emu-alg>\n      <p>The <emu-val>\"length\"</emu-val> property of the <code>parse</code> function is 2.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Valid JSON text is a subset of the ECMAScript <emu-nt><a href=\"#prod-PrimaryExpression\">PrimaryExpression</a></emu-nt> syntax as modified by step <emu-xref href=\"#step-json-parse-parse\"><a href=\"#step-json-parse-parse\" class=\"excluded-xref\" excluded-id=\"step-json-parse-parse\">#step-json-parse-parse</a></emu-xref> above. Step <emu-xref href=\"#step-json-parse-validate\"><a href=\"#step-json-parse-validate\" class=\"excluded-xref\" excluded-id=\"step-json-parse-validate\">#step-json-parse-validate</a></emu-xref> verifies that <var>jsonString</var> conforms to that subset, and step <emu-xref href=\"#step-json-parse-assert-type\"><a href=\"#step-json-parse-assert-type\" class=\"excluded-xref\" excluded-id=\"step-json-parse-assert-type\">#step-json-parse-assert-type</a></emu-xref> asserts that that parsing and evaluation returns a value of an appropriate type.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-internalizejsonproperty\"><h1><span class=\"secnum\">24.5.1.1</span>#sec-internalizejsonproperty Runtime Semantics: InternalizeJSONProperty ( holder, name, reviver )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-set-prototype-object": {"num": "23.2.3", "title": "#sec-properties-of-the-set-prototype-object Properties of the Set Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-set-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-set-prototype-object\">#sec-properties-of-the-set-prototype-object</span> Properties of the Set Prototype Object</h1>\n      <p>The Set prototype object:</p>\n      <ul>\n        <li>is <dfn>%Set.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[SetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set.prototype.add\"><h1><span class=\"secnum\">23.2.3.1</span>#sec-set.prototype.add Set.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.clear\"><h1><span class=\"secnum\">23.2.3.2</span>#sec-set.prototype.clear Set.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-set.prototype.constructor\"><h1><span class=\"secnum\">23.2.3.3</span>#sec-set.prototype.constructor Set.prototype.constructor</h1>...</div><div id=\"excluded-sec-set.prototype.delete\"><h1><span class=\"secnum\">23.2.3.4</span>#sec-set.prototype.delete Set.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.entries\"><h1><span class=\"secnum\">23.2.3.5</span>#sec-set.prototype.entries Set.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-set.prototype.foreach\"><h1><span class=\"secnum\">23.2.3.6</span>#sec-set.prototype.foreach Set.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-set.prototype.has\"><h1><span class=\"secnum\">23.2.3.7</span>#sec-set.prototype.has Set.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.keys\"><h1><span class=\"secnum\">23.2.3.8</span>#sec-set.prototype.keys Set.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-get-set.prototype.size\"><h1><span class=\"secnum\">23.2.3.9</span>#sec-get-set.prototype.size get Set.prototype.size</h1>...</div><div id=\"excluded-sec-set.prototype.values\"><h1><span class=\"secnum\">23.2.3.10</span>#sec-set.prototype.values Set.prototype.values ( )</h1>...</div><div id=\"excluded-sec-set.prototype-@@iterator\"><h1><span class=\"secnum\">23.2.3.11</span>#sec-set.prototype-@@iterator Set.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-set.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.2.3.12</span>#sec-set.prototype-@@tostringtag Set.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype": {"num": "21.1.2.3", "title": "#sec-string.prototype String.prototype", "html": "<emu-clause id=\"sec-string.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype\">#sec-string.prototype</span> String.prototype</h1>\n        <p>The initial value of <code>String.prototype</code> is <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%String.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-aggregate-error-constructor": {"num": "19.5.7.1", "title": "#sec-aggregate-error-constructor The AggregateError Constructor", "html": "<emu-clause id=\"sec-aggregate-error-constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</span> The AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>is <dfn>%AggregateError%</dfn>.</li>\n          <li>is the initial value of the <emu-val>\"AggregateError\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n          <li>creates and initializes a new AggregateError object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AggregateError(&#8230;)</code> is equivalent to the object creation expression <code>new AggregateError(&#8230;)</code> with the same arguments.</li>\n          <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AggregateError behaviour must include a <code>super</code> call to the AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error\"><h1><span class=\"secnum\">19.5.7.1.1</span>#sec-aggregate-error AggregateError ( errors, message )</h1>...</div></emu-clause>\n\n      "}, "sec-array.prototype.foreach": {"num": "22.1.3.12", "title": "#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</span> Array.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>forEach</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>forEach</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>forEach</code> visits them; elements that are deleted after the call to <code>forEach</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>forEach</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var>, <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>forEach</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-immutable-prototype-exotic-objects": {"num": "9.4.7", "title": "#sec-immutable-prototype-exotic-objects Immutable Prototype Exotic Objects", "html": "<emu-clause id=\"sec-immutable-prototype-exotic-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-immutable-prototype-exotic-objects\">#sec-immutable-prototype-exotic-objects</span> Immutable Prototype Exotic Objects</h1>\n      <p>An <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref> is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> that has a [[Prototype]] internal slot that will not change once it is initialized.</p>\n\n      <p>An object is an <dfn id=\"immutable-prototype-exotic-object\">immutable prototype exotic object</dfn> if its [[SetPrototypeOf]] internal method uses the following implementation. (Its other essential internal methods may use any implementation, depending on the specific <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref> in question.)</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike other exotic objects, there is not a dedicated creation abstract operation provided for immutable prototype exotic objects. This is because they are only used by <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref> and by <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> environments, and in <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> environments, the relevant objects are potentially exotic in other ways and thus need their own dedicated creation operation.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-immutable-prototype-exotic-objects-setprototypeof-v\"><h1><span class=\"secnum\">9.4.7.1</span>#sec-immutable-prototype-exotic-objects-setprototypeof-v [[SetPrototypeOf]] ( V )</h1>...</div><div id=\"excluded-sec-set-immutable-prototype\"><h1><span class=\"secnum\">9.4.7.2</span>#sec-set-immutable-prototype SetImmutablePrototype ( O, V )</h1>...</div></emu-clause>\n  "}, "sec-array.prototype.values": {"num": "22.1.3.32", "title": "#sec-array.prototype.values Array.prototype.values ( )", "html": "<emu-clause id=\"sec-array.prototype.values\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</span> Array.prototype.values ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"CreateArrayIterator\"><a href=\"#sec-createarrayiterator\">CreateArrayIterator</a></emu-xref>(<var>O</var>, <emu-const>value</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-async-function-prototype-properties": {"num": "26.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">26.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">26.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-dataview.prototype": {"num": "24.3.3.1", "title": "#sec-dataview.prototype DataView.prototype", "html": "<emu-clause id=\"sec-dataview.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview.prototype\">#sec-dataview.prototype</span> DataView.prototype</h1>\n        <p>The initial value of <code>DataView.prototype</code> is <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataView.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-createmappedargumentsobject": {"num": "9.4.4.7", "title": "#sec-createmappedargumentsobject CreateMappedArgumentsObject ( func, formals, argumentsList, env )", "html": "<emu-clause id=\"sec-createmappedargumentsobject\" aoid=\"CreateMappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createmappedargumentsobject\">#sec-createmappedargumentsobject</span> CreateMappedArgumentsObject ( <var>func</var>, <var>formals</var>, <var>argumentsList</var>, <var>env</var> )</h1>\n        <p>The abstract operation CreateMappedArgumentsObject takes arguments <var>func</var> (an Object), <var>formals</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>), and <var>env</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>formals</var> does not contain a rest parameter, any binding patterns, or any initializers. It may contain duplicate identifiers.</li><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]], [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[GetOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-getownproperty-p\"><a href=\"#sec-arguments-exotic-objects-getownproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-getownproperty-p\">#sec-arguments-exotic-objects-getownproperty-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">#sec-arguments-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Set <var>obj</var>.[[Get]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-get-p-receiver\"><a href=\"#sec-arguments-exotic-objects-get-p-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-get-p-receiver\">#sec-arguments-exotic-objects-get-p-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Set]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-set-p-v-receiver\"><a href=\"#sec-arguments-exotic-objects-set-p-v-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-set-p-v-receiver\">#sec-arguments-exotic-objects-set-p-v-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Delete]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-delete-p\"><a href=\"#sec-arguments-exotic-objects-delete-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-delete-p\">#sec-arguments-exotic-objects-delete-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[Prototype]] to <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li><li>Let <var>map</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Set <var>obj</var>.[[ParameterMap]] to <var>map</var>.</li><li>Let <var>parameterNames</var> be the BoundNames of <var>formals</var>.</li><li>Let <var>numberOfParameters</var> be the number of elements in <var>parameterNames</var>.</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>mappedNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>index</var> be <var>numberOfParameters</var> - 1.</li><li>Repeat, while <var>index</var> &#8805; 0,<ol><li>Let <var>name</var> be <var>parameterNames</var>[<var>index</var>].</li><li>If <var>name</var> is not an element of <var>mappedNames</var>, then<ol><li>Add <var>name</var> as an element of the list <var>mappedNames</var>.</li><li>If <var>index</var> &lt; <var>len</var>, then<ol><li>Let <var>g</var> be <emu-xref aoid=\"MakeArgGetter\"><a href=\"#sec-makearggetter\">MakeArgGetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Let <var>p</var> be <emu-xref aoid=\"MakeArgSetter\"><a href=\"#sec-makeargsetter\">MakeArgSetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Perform <var>map</var>.[[DefineOwnProperty]](! <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), PropertyDescriptor { [[Set]]: <var>p</var>, [[Get]]: <var>g</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li></ol></li><li>Set <var>index</var> to <var>index</var> - 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@iterator</a></emu-xref>, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Value]]: <var>func</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-makearggetter\"><h1><span class=\"secnum\">9.4.4.7.1</span>#sec-makearggetter MakeArgGetter ( name, env )</h1>...</div><div id=\"excluded-sec-makeargsetter\"><h1><span class=\"secnum\">9.4.4.7.2</span>#sec-makeargsetter MakeArgSetter ( name, env )</h1>...</div></emu-clause>\n    "}, "sec-get-regexp.prototype.unicode": {"num": "21.2.5.17", "title": "#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode", "html": "<emu-clause id=\"sec-get-regexp.prototype.unicode\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.unicode\">#sec-get-regexp.prototype.unicode</span> get RegExp.prototype.unicode</h1>\n        <p><code>RegExp.prototype.unicode</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0075 (LATIN SMALL LETTER U), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-json.stringify": {"num": "24.5.2", "title": "#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )", "html": "<emu-clause id=\"sec-json.stringify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json.stringify\">#sec-json.stringify</span> JSON.stringify ( <var>value</var> [ , <var>replacer</var> [ , <var>space</var> ] ] )</h1>\n      <p>The <code>stringify</code> function returns a String in UTF-16 encoded JSON format representing an ECMAScript value, or <emu-val>undefined</emu-val>. It can take three parameters. The <var>value</var> parameter is an ECMAScript value, which is usually an object or array, although it can also be a String, Boolean, Number or <emu-val>null</emu-val>. The optional <var>replacer</var> parameter is either a function that alters the way objects and arrays are stringified, or an array of Strings and Numbers that acts as an inclusion list for selecting the object properties that will be stringified. The optional <var>space</var> parameter is a String or Number that allows the result to have white space injected into it to improve human readability.</p>\n      <p>These are the steps in stringifying an object:</p>\n      <emu-alg><ol><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>indent</var> be the empty String.</li><li>Let <var>PropertyList</var> and <var>ReplacerFunction</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replacer</var>) is Object, then<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replacer</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>ReplacerFunction</var> to <var>replacer</var>.</li></ol></li><li>Else,<ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>replacer</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>PropertyList</var> to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>replacer</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>replacer</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>item</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is String, set <var>item</var> to <var>v</var>.</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Number, set <var>item</var> to !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Object, then<ol><li>If <var>v</var> has a [[StringData]] or [[NumberData]] internal slot, set <var>item</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li></ol></li><li>If <var>item</var> is not <emu-val>undefined</emu-val> and <var>item</var> is not currently an element of <var>PropertyList</var>, then<ol><li>Append <var>item</var> to the end of <var>PropertyList</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Object, then<ol><li>If <var>space</var> has a [[NumberData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>space</var>).</li></ol></li><li>Else if <var>space</var> has a [[StringData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>space</var>).</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Number, then<ol><li>Set <var>space</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(10, !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>space</var>)).</li><li>If <var>space</var> &lt; 1, let <var>gap</var> be the empty String; otherwise let <var>gap</var> be the String value containing <var>space</var> occurrences of the code unit 0x0020 (SPACE).</li></ol></li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is String, then<ol><li>If the length of <var>space</var> is 10 or less, let <var>gap</var> be <var>space</var>; otherwise let <var>gap</var> be the String value consisting of the first 10 code units of <var>space</var>.</li></ol></li><li>Else,<ol><li>Let <var>gap</var> be the empty String.</li></ol></li><li>Let <var>wrapper</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>wrapper</var>, the empty String, <var>value</var>).</li><li>Let <var>state</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[ReplacerFunction]]: <var>ReplacerFunction</var>, [[Stack]]: <var>stack</var>, [[Indent]]: <var>indent</var>, [[Gap]]: <var>gap</var>, [[PropertyList]]: <var>PropertyList</var> }.</li><li>Return ?&#160;<emu-xref aoid=\"SerializeJSONProperty\"><a href=\"#sec-serializejsonproperty\">SerializeJSONProperty</a></emu-xref>(<var>state</var>, the empty String, <var>wrapper</var>).</li></ol></emu-alg>\n      <p>The <emu-val>\"length\"</emu-val> property of the <code>stringify</code> function is 3.</p>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>JSON structures are allowed to be nested to any depth, but they must be acyclic. If <var>value</var> is or contains a cyclic structure, then the stringify function must throw a <emu-val>TypeError</emu-val> exception. This is an example of a value that cannot be stringified:</p>\n        <pre><code class=\"javascript hljs\">a = [];\na[<span class=\"hljs-number\">0</span>] = a;\nmy_text = <span class=\"hljs-built_in\">JSON</span>.stringify(a); <span class=\"hljs-comment\">// This must throw a TypeError.</span></code></pre>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Symbolic primitive values are rendered as follows:</p>\n        <ul>\n          <li>\n            The <emu-val>null</emu-val> value is rendered in JSON text as the String <emu-val>\"null\"</emu-val>.\n          </li>\n          <li>\n            The <emu-val>undefined</emu-val> value is not rendered.\n          </li>\n          <li>\n            The <emu-val>true</emu-val> value is rendered in JSON text as the String <emu-val>\"true\"</emu-val>.\n          </li>\n          <li>\n            The <emu-val>false</emu-val> value is rendered in JSON text as the String <emu-val>\"false\"</emu-val>.\n          </li>\n        </ul>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>String values are wrapped in QUOTATION MARK (<code>\"</code>) code units. The code units <code>\"</code> and <code>\\</code> are escaped with <code>\\</code> prefixes. Control characters code units are replaced with escape sequences <code>\\u</code>HHHH, or with the shorter forms, <code>\\b</code> (BACKSPACE), <code>\\f</code> (FORM FEED), <code>\\n</code> (LINE FEED), <code>\\r</code> (CARRIAGE RETURN), <code>\\t</code> (CHARACTER TABULATION).</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n        <p>Finite numbers are stringified as if by calling <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>number</var>). <emu-val>NaN</emu-val> and <emu-val>Infinity</emu-val> regardless of sign are represented as the String <emu-val>\"null\"</emu-val>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 5</span><div class=\"note-contents\">\n        <p>Values that do not have a JSON representation (such as <emu-val>undefined</emu-val> and functions) do not produce a String. Instead they produce the <emu-val>undefined</emu-val> value. In arrays these values are represented as the String <emu-val>\"null\"</emu-val>. In objects an unrepresentable value causes the property to be excluded from stringification.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 6</span><div class=\"note-contents\">\n        <p>An object is rendered as U+007B (LEFT CURLY BRACKET) followed by zero or more properties, separated with a U+002C (COMMA), closed with a U+007D (RIGHT CURLY BRACKET). A property is a quoted String representing the key or <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>, a U+003A (COLON), and then the stringified property value. An array is rendered as an opening U+005B (LEFT SQUARE BRACKET followed by zero or more values, separated with a U+002C (COMMA), closed with a U+005D (RIGHT SQUARE BRACKET).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-serializejsonproperty\"><h1><span class=\"secnum\">24.5.2.1</span>#sec-serializejsonproperty Runtime Semantics: SerializeJSONProperty ( state, key, holder )</h1>...</div><div id=\"excluded-sec-quotejsonstring\"><h1><span class=\"secnum\">24.5.2.2</span>#sec-quotejsonstring Runtime Semantics: QuoteJSONString ( value )</h1>...</div><div id=\"excluded-sec-unicodeescape\"><h1><span class=\"secnum\">24.5.2.3</span>#sec-unicodeescape Runtime Semantics: UnicodeEscape ( C )</h1>...</div><div id=\"excluded-sec-serializejsonobject\"><h1><span class=\"secnum\">24.5.2.4</span>#sec-serializejsonobject Runtime Semantics: SerializeJSONObject ( state, value )</h1>...</div><div id=\"excluded-sec-serializejsonarray\"><h1><span class=\"secnum\">24.5.2.5</span>#sec-serializejsonarray Runtime Semantics: SerializeJSONArray ( state, value )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-arraybuffer-prototype-object": {"num": "24.1.5", "title": "#sec-properties-of-the-arraybuffer-prototype-object Properties of the ArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-arraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-arraybuffer-prototype-object\">#sec-properties-of-the-arraybuffer-prototype-object</span> Properties of the ArrayBuffer Prototype Object</h1>\n      <p>The ArrayBuffer prototype object:</p>\n      <ul>\n        <li>is <dfn>%ArrayBuffer.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-arraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.1.5.1</span>#sec-get-arraybuffer.prototype.bytelength get ArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.1.5.2</span>#sec-arraybuffer.prototype.constructor ArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.1.5.3</span>#sec-arraybuffer.prototype.slice ArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.1.5.4</span>#sec-arraybuffer.prototype-@@tostringtag ArrayBuffer.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-date.prototype": {"num": "20.4.3.3", "title": "#sec-date.prototype Date.prototype", "html": "<emu-clause id=\"sec-date.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype\">#sec-date.prototype</span> Date.prototype</h1>\n        <p>The initial value of <code>Date.prototype</code> is <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%Date.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-symbol-prototype-object": {"num": "19.4.3", "title": "#sec-properties-of-the-symbol-prototype-object Properties of the Symbol Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-symbol-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</span> Properties of the Symbol Prototype Object</h1>\n      <p>The Symbol prototype object:</p>\n      <ul>\n        <li>is <dfn>%Symbol.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Symbol instance and does not have a [[SymbolData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"thissymbolvalue\" aoid=\"thisSymbolValue\" oldids=\"sec-thissymbolvalue\">thisSymbolValue<span id=\"sec-thissymbolvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Symbol, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[SymbolData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[SymbolData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is Symbol.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-symbol.prototype.constructor\"><h1><span class=\"secnum\">19.4.3.1</span>#sec-symbol.prototype.constructor Symbol.prototype.constructor</h1>...</div><div id=\"excluded-sec-symbol.prototype.description\"><h1><span class=\"secnum\">19.4.3.2</span>#sec-symbol.prototype.description get Symbol.prototype.description</h1>...</div><div id=\"excluded-sec-symbol.prototype.tostring\"><h1><span class=\"secnum\">19.4.3.3</span>#sec-symbol.prototype.tostring Symbol.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype.valueof\"><h1><span class=\"secnum\">19.4.3.4</span>#sec-symbol.prototype.valueof Symbol.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype-@@toprimitive\"><h1><span class=\"secnum\">19.4.3.5</span>#sec-symbol.prototype-@@toprimitive Symbol.prototype [ @@toPrimitive ] ( hint )</h1>...</div><div id=\"excluded-sec-symbol.prototype-@@tostringtag\"><h1><span class=\"secnum\">19.4.3.6</span>#sec-symbol.prototype-@@tostringtag Symbol.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asynciteratorprototype": {"num": "26.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">26.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-error-prototype-object": {"num": "19.5.3", "title": "#sec-properties-of-the-error-prototype-object Properties of the Error Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-error-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-error-prototype-object\">#sec-properties-of-the-error-prototype-object</span> Properties of the Error Prototype Object</h1>\n      <p>The Error prototype object:</p>\n      <ul>\n        <li>is <dfn>%Error.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an Error instance and does not have an [[ErrorData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error.prototype.constructor\"><h1><span class=\"secnum\">19.5.3.1</span>#sec-error.prototype.constructor Error.prototype.constructor</h1>...</div><div id=\"excluded-sec-error.prototype.message\"><h1><span class=\"secnum\">19.5.3.2</span>#sec-error.prototype.message Error.prototype.message</h1>...</div><div id=\"excluded-sec-error.prototype.name\"><h1><span class=\"secnum\">19.5.3.3</span>#sec-error.prototype.name Error.prototype.name</h1>...</div><div id=\"excluded-sec-error.prototype.tostring\"><h1><span class=\"secnum\">19.5.3.4</span>#sec-error.prototype.tostring Error.prototype.toString ( )</h1>...</div></emu-clause>\n\n    "}, "sec-aggregate-error.prototype": {"num": "19.5.7.2.1", "title": "#sec-aggregate-error.prototype AggregateError.prototype", "html": "<emu-clause id=\"sec-aggregate-error.prototype\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error.prototype\">#sec-aggregate-error.prototype</span> AggregateError.prototype</h1>\n          <p>The initial value of <code>AggregateError.prototype</code> is <emu-xref href=\"#sec-properties-of-the-aggregate-error-prototype-objects\"><a href=\"#sec-properties-of-the-aggregate-error-prototype-objects\">%AggregateError.prototype%</a></emu-xref>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-properties-of-the-number-prototype-object": {"num": "20.1.3", "title": "#sec-properties-of-the-number-prototype-object Properties of the Number Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-number-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-number-prototype-object\">#sec-properties-of-the-number-prototype-object</span> Properties of the Number Prototype Object</h1>\n      <p>The Number prototype object:</p>\n      <ul>\n        <li>is <dfn>%Number.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is itself a Number object; it has a [[NumberData]] internal slot with the value <emu-val>+0</emu-val>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <p>Unless explicitly stated otherwise, the methods of the Number prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be either a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> or an object that has a [[NumberData]] internal slot that has been initialized to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n      <p>The abstract operation <dfn id=\"thisnumbervalue\" aoid=\"thisNumberValue\" oldids=\"sec-thisnumbervalue\">thisNumberValue<span id=\"sec-thisnumbervalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[NumberData]] internal slot, then<ol><li>Let <var>n</var> be <var>value</var>.[[NumberData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>n</var>) is Number.</li><li>Return <var>n</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>The phrase &#8220;this <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#thisnumbervalue\"><a href=\"#thisnumbervalue\">thisNumberValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-number.prototype.constructor\"><h1><span class=\"secnum\">20.1.3.1</span>#sec-number.prototype.constructor Number.prototype.constructor</h1>...</div><div id=\"excluded-sec-number.prototype.toexponential\"><h1><span class=\"secnum\">20.1.3.2</span>#sec-number.prototype.toexponential Number.prototype.toExponential ( fractionDigits )</h1>...</div><div id=\"excluded-sec-number.prototype.tofixed\"><h1><span class=\"secnum\">20.1.3.3</span>#sec-number.prototype.tofixed Number.prototype.toFixed ( fractionDigits )</h1>...</div><div id=\"excluded-sec-number.prototype.tolocalestring\"><h1><span class=\"secnum\">20.1.3.4</span>#sec-number.prototype.tolocalestring Number.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-number.prototype.toprecision\"><h1><span class=\"secnum\">20.1.3.5</span>#sec-number.prototype.toprecision Number.prototype.toPrecision ( precision )</h1>...</div><div id=\"excluded-sec-number.prototype.tostring\"><h1><span class=\"secnum\">20.1.3.6</span>#sec-number.prototype.tostring Number.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-number.prototype.valueof\"><h1><span class=\"secnum\">20.1.3.7</span>#sec-number.prototype.valueof Number.prototype.valueOf ( )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.entries": {"num": "22.1.3.4", "title": "#sec-array.prototype.entries Array.prototype.entries ( )", "html": "<emu-clause id=\"sec-array.prototype.entries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</span> Array.prototype.entries ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"CreateArrayIterator\"><a href=\"#sec-createarrayiterator\">CreateArrayIterator</a></emu-xref>(<var>O</var>, <emu-const>key+value</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-get-regexp.prototype.dotAll": {"num": "21.2.5.3", "title": "#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll", "html": "<emu-clause id=\"sec-get-regexp.prototype.dotAll\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.dotAll\">#sec-get-regexp.prototype.dotAll</span> get RegExp.prototype.dotAll</h1>\n        <p><code>RegExp.prototype.dotAll</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0073 (LATIN SMALL LETTER S), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-object.getownpropertydescriptors": {"num": "19.1.2.9", "title": "#sec-object.getownpropertydescriptors Object.getOwnPropertyDescriptors ( O )", "html": "<emu-clause id=\"sec-object.getownpropertydescriptors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.getownpropertydescriptors\">#sec-object.getownpropertydescriptors</span> Object.getOwnPropertyDescriptors ( <var>O</var> )</h1>\n        <p>When the <code>getOwnPropertyDescriptors</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>O</var>).</li><li>Let <var>ownKeys</var> be ? <var>obj</var>.[[OwnPropertyKeys]]().</li><li>Let <var>descriptors</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>For each element <var>key</var> of <var>ownKeys</var> in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>Let <var>desc</var> be ? <var>obj</var>.[[GetOwnProperty]](<var>key</var>).</li><li>Let <var>descriptor</var> be !&#160;<emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>desc</var>).</li><li>If <var>descriptor</var> is not <emu-val>undefined</emu-val>, perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>descriptors</var>, <var>key</var>, <var>descriptor</var>).</li></ol></li><li>Return <var>descriptors</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-symbol.prototype": {"num": "19.4.2.9", "title": "#sec-symbol.prototype Symbol.prototype", "html": "<emu-clause id=\"sec-symbol.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype\">#sec-symbol.prototype</span> Symbol.prototype</h1>\n        <p>The initial value of <code>Symbol.prototype</code> is <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%Symbol.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-object.fromentries": {"num": "19.1.2.7", "title": "#sec-object.fromentries Object.fromEntries ( iterable )", "html": "<emu-clause id=\"sec-object.fromentries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.fromentries\">#sec-object.fromentries</span> Object.fromEntries ( <var>iterable</var> )</h1>\n        <p>When the <code>fromEntries</code> method is called with argument <var>iterable</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>iterable</var>).</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var> is an extensible <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> with no own properties.</li><li>Let <var>stepsDefine</var> be the algorithm steps defined in <emu-xref href=\"#sec-create-data-property-on-object-functions\" title=\"\"><a href=\"#sec-create-data-property-on-object-functions\">CreateDataPropertyOnObject Functions</a></emu-xref>.</li><li>Let <var>adder</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsDefine</var>, &#171; &#187;).</li><li>Return ?&#160;<emu-xref aoid=\"AddEntriesFromIterable\"><a href=\"#sec-add-entries-from-iterable\">AddEntriesFromIterable</a></emu-xref>(<var>obj</var>, <var>iterable</var>, <var>adder</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          The function created for <var>adder</var> is never directly accessible to ECMAScript code.\n        </div></emu-note>\n\n        <div id=\"excluded-sec-create-data-property-on-object-functions\"><h1><span class=\"secnum\">19.1.2.7.1</span>#sec-create-data-property-on-object-functions CreateDataPropertyOnObject Functions</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-boolean-prototype-object": {"num": "19.3.3", "title": "#sec-properties-of-the-boolean-prototype-object Properties of the Boolean Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-boolean-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</span> Properties of the Boolean Prototype Object</h1>\n      <p>The Boolean prototype object:</p>\n      <ul>\n        <li>is <dfn>%Boolean.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is itself a Boolean object; it has a [[BooleanData]] internal slot with the value <emu-val>false</emu-val>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"thisbooleanvalue\" aoid=\"thisBooleanValue\" oldids=\"sec-thisbooleanvalue\">thisBooleanValue<span id=\"sec-thisbooleanvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Boolean, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BooleanData]] internal slot, then<ol><li>Let <var>b</var> be <var>value</var>.[[BooleanData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>b</var>) is Boolean.</li><li>Return <var>b</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-boolean.prototype.constructor\"><h1><span class=\"secnum\">19.3.3.1</span>#sec-boolean.prototype.constructor Boolean.prototype.constructor</h1>...</div><div id=\"excluded-sec-boolean.prototype.tostring\"><h1><span class=\"secnum\">19.3.3.2</span>#sec-boolean.prototype.tostring Boolean.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-boolean.prototype.valueof\"><h1><span class=\"secnum\">19.3.3.3</span>#sec-boolean.prototype.valueof Boolean.prototype.valueOf ( )</h1>...</div></emu-clause>\n\n    "}, "sec-runtime-semantics-restdestructuringassignmentevaluation": {"num": "12.15.7.4", "title": "#sec-runtime-semantics-restdestructuringassignmentevaluation Runtime Semantics: RestDestructuringAssignmentEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-restdestructuringassignmentevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-restdestructuringassignmentevaluation\">#sec-runtime-semantics-restdestructuringassignmentevaluation</span> Runtime Semantics: RestDestructuringAssignmentEvaluation</h1>\n        <p>With parameters <var>value</var> and <var>excludedNames</var>.</p>\n\n        <emu-grammar><emu-production name=\"AssignmentRestProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentRestProperty\">AssignmentRestProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cf470c76\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>lref</var>).</li><li>Let <var>restObj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform ?&#160;<emu-xref aoid=\"CopyDataProperties\"><a href=\"#sec-copydataproperties\">CopyDataProperties</a></emu-xref>(<var>restObj</var>, <var>value</var>, <var>excludedNames</var>).</li><li>Return <emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>restObj</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-string-prototype-object": {"num": "21.1.3", "title": "#sec-properties-of-the-string-prototype-object Properties of the String Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-string-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-string-prototype-object\">#sec-properties-of-the-string-prototype-object</span> Properties of the String Prototype Object</h1>\n      <p>The String prototype object:</p>\n      <ul>\n        <li>is <dfn>%String.prototype%</dfn>.</li>\n        <li>is a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a [[StringData]] internal slot whose value is the empty String.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <p>Unless explicitly stated otherwise, the methods of the String prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be either a String value or an object that has a [[StringData]] internal slot that has been initialized to a String value.</p>\n      <p>The abstract operation <dfn id=\"thisstringvalue\" aoid=\"thisStringValue\" oldids=\"sec-thisstringvalue\">thisStringValue<span id=\"sec-thisstringvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is String, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[StringData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is String.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-string.prototype.charat\"><h1><span class=\"secnum\">21.1.3.1</span>#sec-string.prototype.charat String.prototype.charAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.charcodeat\"><h1><span class=\"secnum\">21.1.3.2</span>#sec-string.prototype.charcodeat String.prototype.charCodeAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.codepointat\"><h1><span class=\"secnum\">21.1.3.3</span>#sec-string.prototype.codepointat String.prototype.codePointAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.concat\"><h1><span class=\"secnum\">21.1.3.4</span>#sec-string.prototype.concat String.prototype.concat ( ...args )</h1>...</div><div id=\"excluded-sec-string.prototype.constructor\"><h1><span class=\"secnum\">21.1.3.5</span>#sec-string.prototype.constructor String.prototype.constructor</h1>...</div><div id=\"excluded-sec-string.prototype.endswith\"><h1><span class=\"secnum\">21.1.3.6</span>#sec-string.prototype.endswith String.prototype.endsWith ( searchString [ , endPosition ] )</h1>...</div><div id=\"excluded-sec-string.prototype.includes\"><h1><span class=\"secnum\">21.1.3.7</span>#sec-string.prototype.includes String.prototype.includes ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.indexof\"><h1><span class=\"secnum\">21.1.3.8</span>#sec-string.prototype.indexof String.prototype.indexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.lastindexof\"><h1><span class=\"secnum\">21.1.3.9</span>#sec-string.prototype.lastindexof String.prototype.lastIndexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.localecompare\"><h1><span class=\"secnum\">21.1.3.10</span>#sec-string.prototype.localecompare String.prototype.localeCompare ( that [ , reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.match\"><h1><span class=\"secnum\">21.1.3.11</span>#sec-string.prototype.match String.prototype.match ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.matchall\"><h1><span class=\"secnum\">21.1.3.12</span>#sec-string.prototype.matchall String.prototype.matchAll ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.normalize\"><h1><span class=\"secnum\">21.1.3.13</span>#sec-string.prototype.normalize String.prototype.normalize ( [ form ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padend\"><h1><span class=\"secnum\">21.1.3.14</span>#sec-string.prototype.padend String.prototype.padEnd ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padstart\"><h1><span class=\"secnum\">21.1.3.15</span>#sec-string.prototype.padstart String.prototype.padStart ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.repeat\"><h1><span class=\"secnum\">21.1.3.16</span>#sec-string.prototype.repeat String.prototype.repeat ( count )</h1>...</div><div id=\"excluded-sec-string.prototype.replace\"><h1><span class=\"secnum\">21.1.3.17</span>#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )</h1>...</div><div id=\"excluded-sec-string.prototype.replaceall\"><h1><span class=\"secnum\">21.1.3.18</span>#sec-string.prototype.replaceall String.prototype.replaceAll ( searchValue, replaceValue )</h1>...</div><div id=\"excluded-sec-string.prototype.search\"><h1><span class=\"secnum\">21.1.3.19</span>#sec-string.prototype.search String.prototype.search ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.slice\"><h1><span class=\"secnum\">21.1.3.20</span>#sec-string.prototype.slice String.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.split\"><h1><span class=\"secnum\">21.1.3.21</span>#sec-string.prototype.split String.prototype.split ( separator, limit )</h1>...</div><div id=\"excluded-sec-string.prototype.startswith\"><h1><span class=\"secnum\">21.1.3.22</span>#sec-string.prototype.startswith String.prototype.startsWith ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.substring\"><h1><span class=\"secnum\">21.1.3.23</span>#sec-string.prototype.substring String.prototype.substring ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocalelowercase\"><h1><span class=\"secnum\">21.1.3.24</span>#sec-string.prototype.tolocalelowercase String.prototype.toLocaleLowerCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocaleuppercase\"><h1><span class=\"secnum\">21.1.3.25</span>#sec-string.prototype.tolocaleuppercase String.prototype.toLocaleUpperCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolowercase\"><h1><span class=\"secnum\">21.1.3.26</span>#sec-string.prototype.tolowercase String.prototype.toLowerCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.tostring\"><h1><span class=\"secnum\">21.1.3.27</span>#sec-string.prototype.tostring String.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-string.prototype.touppercase\"><h1><span class=\"secnum\">21.1.3.28</span>#sec-string.prototype.touppercase String.prototype.toUpperCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trim\"><h1><span class=\"secnum\">21.1.3.29</span>#sec-string.prototype.trim String.prototype.trim ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimend\"><h1><span class=\"secnum\">21.1.3.30</span>#sec-string.prototype.trimend String.prototype.trimEnd ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimstart\"><h1><span class=\"secnum\">21.1.3.31</span>#sec-string.prototype.trimstart String.prototype.trimStart ( )</h1>...</div><div id=\"excluded-sec-string.prototype.valueof\"><h1><span class=\"secnum\">21.1.3.32</span>#sec-string.prototype.valueof String.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-string.prototype-@@iterator\"><h1><span class=\"secnum\">21.1.3.33</span>#sec-string.prototype-@@iterator String.prototype [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-object.prototype.tostring": {"num": "19.1.3.6", "title": "#sec-object.prototype.tostring Object.prototype.toString ( )", "html": "<emu-clause id=\"sec-object.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</span> Object.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If the <emu-val>this</emu-val> value is <emu-val>undefined</emu-val>, return <emu-val>\"[object Undefined]\"</emu-val>.</li><li>If the <emu-val>this</emu-val> value is <emu-val>null</emu-val>, return <emu-val>\"[object Null]\"</emu-val>.</li><li>Let <var>O</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>O</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, let <var>builtinTag</var> be <emu-val>\"Array\"</emu-val>.</li><li>Else if <var>O</var> has a [[ParameterMap]] internal slot, let <var>builtinTag</var> be <emu-val>\"Arguments\"</emu-val>.</li><li>Else if <var>O</var> has a [[Call]] internal method, let <var>builtinTag</var> be <emu-val>\"Function\"</emu-val>.</li><li>Else if <var>O</var> has an [[ErrorData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Error\"</emu-val>.</li><li>Else if <var>O</var> has a [[BooleanData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Boolean\"</emu-val>.</li><li>Else if <var>O</var> has a [[NumberData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Number\"</emu-val>.</li><li>Else if <var>O</var> has a [[StringData]] internal slot, let <var>builtinTag</var> be <emu-val>\"String\"</emu-val>.</li><li>Else if <var>O</var> has a [[DateValue]] internal slot, let <var>builtinTag</var> be <emu-val>\"Date\"</emu-val>.</li><li>Else if <var>O</var> has a [[RegExpMatcher]] internal slot, let <var>builtinTag</var> be <emu-val>\"RegExp\"</emu-val>.</li><li>Else, let <var>builtinTag</var> be <emu-val>\"Object\"</emu-val>.</li><li>Let <var>tag</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toStringTag</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>tag</var>) is not String, set <var>tag</var> to <var>builtinTag</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"[object \"</emu-val>, <var>tag</var>, and <emu-val>\"]\"</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Historically, this function was occasionally used to access the String value of the [[Class]] internal slot that was used in previous editions of this specification as a nominal type tag for various built-in objects. The above definition of <code>toString</code> preserves compatibility for legacy code that uses <code>toString</code> as a test for those specific kinds of built-in objects. It does not provide a reliable type testing mechanism for other kinds of built-in or program defined objects. In addition, programs can use <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toStringTag</a></emu-xref> in ways that will invalidate the reliability of such legacy type tests.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-%iteratorprototype%-object": {"num": "26.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">26.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-aggregate-error.prototype.constructor": {"num": "19.5.7.3.1", "title": "#sec-aggregate-error.prototype.constructor AggregateError.prototype.constructor", "html": "<emu-clause id=\"sec-aggregate-error.prototype.constructor\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error.prototype.constructor\">#sec-aggregate-error.prototype.constructor</span> AggregateError.prototype.constructor</h1>\n          <p>The initial value of <code>AggregateError.prototype.constructor</code> is <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>.</p>\n        </emu-clause>\n\n        "}, "sec-promise.reject": {"num": "26.6.4.6", "title": "#sec-promise.reject Promise.reject ( r )", "html": "<emu-clause id=\"sec-promise.reject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</span> Promise.reject ( <var>r</var> )</h1>\n        <p>The <code>reject</code> function returns a new promise rejected with the passed argument.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>r</var> &#187;).</li><li>Return <var>promiseCapability</var>.[[Promise]].</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>reject</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-aggregate-error-prototype-objects": {"num": "19.5.7.3", "title": "#sec-properties-of-the-aggregate-error-prototype-objects Properties of the AggregateError Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-aggregate-error-prototype-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-aggregate-error-prototype-objects\">#sec-properties-of-the-aggregate-error-prototype-objects</span> Properties of the AggregateError Prototype Object</h1>\n        <p>The AggregateError prototype object:</p>\n        <ul>\n          <li>is <dfn>%AggregateError.prototype%</dfn>.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>is not an Error instance or an AggregateError instance and does not have an [[ErrorData]] internal slot.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%Error.prototype%</a></emu-xref>.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error.prototype.constructor\"><h1><span class=\"secnum\">19.5.7.3.1</span>#sec-aggregate-error.prototype.constructor AggregateError.prototype.constructor</h1>...</div><div id=\"excluded-sec-aggregate-error.prototype.message\"><h1><span class=\"secnum\">19.5.7.3.2</span>#sec-aggregate-error.prototype.message AggregateError.prototype.message</h1>...</div><div id=\"excluded-sec-aggregate-error.prototype.name\"><h1><span class=\"secnum\">19.5.7.3.3</span>#sec-aggregate-error.prototype.name AggregateError.prototype.name</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-weakset-prototype-object": {"num": "23.4.3", "title": "#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakset-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakset-prototype-object\">#sec-properties-of-the-weakset-prototype-object</span> Properties of the WeakSet Prototype Object</h1>\n      <p>The WeakSet prototype object:</p>\n      <ul>\n        <li>is <dfn>%WeakSet.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakSetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset.prototype.add\"><h1><span class=\"secnum\">23.4.3.1</span>#sec-weakset.prototype.add WeakSet.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.constructor\"><h1><span class=\"secnum\">23.4.3.2</span>#sec-weakset.prototype.constructor WeakSet.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakset.prototype.delete\"><h1><span class=\"secnum\">23.4.3.3</span>#sec-weakset.prototype.delete WeakSet.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.has\"><h1><span class=\"secnum\">23.4.3.4</span>#sec-weakset.prototype.has WeakSet.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.4.3.5</span>#sec-weakset.prototype-@@tostringtag WeakSet.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp.prototype.ignorecase": {"num": "21.2.5.6", "title": "#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase", "html": "<emu-clause id=\"sec-get-regexp.prototype.ignorecase\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.ignorecase\">#sec-get-regexp.prototype.ignorecase</span> get RegExp.prototype.ignoreCase</h1>\n        <p><code>RegExp.prototype.ignoreCase</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0069 (LATIN SMALL LETTER I), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-object-prototype-object": {"num": "19.1.3", "title": "#sec-properties-of-the-object-prototype-object Properties of the Object Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-object-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</span> Properties of the Object Prototype Object</h1>\n      <p>The Object prototype object:</p>\n      <ul>\n        <li>is <dfn>%Object.prototype%</dfn>.</li>\n        <li>has an [[Extensible]] internal slot whose value is <emu-val>true</emu-val>.</li>\n        <li>has the internal methods defined for ordinary objects, except for the [[SetPrototypeOf]] method, which is as defined in <emu-xref href=\"#sec-immutable-prototype-exotic-objects-setprototypeof-v\"><a href=\"#sec-immutable-prototype-exotic-objects-setprototypeof-v\" class=\"excluded-xref\" excluded-id=\"sec-immutable-prototype-exotic-objects-setprototypeof-v\">#sec-immutable-prototype-exotic-objects-setprototypeof-v</a></emu-xref>. (Thus, it is an <emu-xref href=\"#immutable-prototype-exotic-object\"><a href=\"#immutable-prototype-exotic-object\">immutable prototype exotic object</a></emu-xref>.)</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-val>null</emu-val>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-object.prototype.constructor\"><h1><span class=\"secnum\">19.1.3.1</span>#sec-object.prototype.constructor Object.prototype.constructor</h1>...</div><div id=\"excluded-sec-object.prototype.hasownproperty\"><h1><span class=\"secnum\">19.1.3.2</span>#sec-object.prototype.hasownproperty Object.prototype.hasOwnProperty ( V )</h1>...</div><div id=\"excluded-sec-object.prototype.isprototypeof\"><h1><span class=\"secnum\">19.1.3.3</span>#sec-object.prototype.isprototypeof Object.prototype.isPrototypeOf ( V )</h1>...</div><div id=\"excluded-sec-object.prototype.propertyisenumerable\"><h1><span class=\"secnum\">19.1.3.4</span>#sec-object.prototype.propertyisenumerable Object.prototype.propertyIsEnumerable ( V )</h1>...</div><div id=\"excluded-sec-object.prototype.tolocalestring\"><h1><span class=\"secnum\">19.1.3.5</span>#sec-object.prototype.tolocalestring Object.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-object.prototype.tostring\"><h1><span class=\"secnum\">19.1.3.6</span>#sec-object.prototype.tostring Object.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-object.prototype.valueof\"><h1><span class=\"secnum\">19.1.3.7</span>#sec-object.prototype.valueof Object.prototype.valueOf ( )</h1>...</div></emu-clause>\n\n    "}, "sec-math-object": {"num": "20.3", "title": "#sec-math-object The Math Object", "html": "<emu-clause id=\"sec-math-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-object\">#sec-math-object</span> The Math Object</h1>\n    <p>The Math object:</p>\n    <ul>\n      <li>is <dfn>%Math%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Math\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In this specification, the phrase &#8220;the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>&#8221; has a technical meaning defined in <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-value-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.1</span>#sec-value-properties-of-the-math-object Value Properties of the Math Object</h1>...</div><div id=\"excluded-sec-function-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.2</span>#sec-function-properties-of-the-math-object Function Properties of the Math Object</h1>...</div></emu-clause>\n\n  "}, "sec-properties-of-the-bigint-prototype-object": {"num": "20.2.3", "title": "#sec-properties-of-the-bigint-prototype-object Properties of the BigInt Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-bigint-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-bigint-prototype-object\">#sec-properties-of-the-bigint-prototype-object</span> Properties of the BigInt Prototype Object</h1>\n      <p>The BigInt prototype object:</p>\n      <ul>\n        <li>is <dfn>%BigInt.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a BigInt object; it does not have a [[BigIntData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"thisbigintvalue\" aoid=\"thisBigIntValue\" oldids=\"sec-thisbigintvalue\">thisBigIntValue<span id=\"sec-thisbigintvalue\"></span></dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BigIntData]] internal slot, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>.[[BigIntData]]) is BigInt.</li><li>Return <var>value</var>.[[BigIntData]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>The phrase &#8220;this BigInt value&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#thisbigintvalue\"><a href=\"#thisbigintvalue\">thisBigIntValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-bigint.prototype.constructor\"><h1><span class=\"secnum\">20.2.3.1</span>#sec-bigint.prototype.constructor BigInt.prototype.constructor</h1>...</div><div id=\"excluded-sec-bigint.prototype.tolocalestring\"><h1><span class=\"secnum\">20.2.3.2</span>#sec-bigint.prototype.tolocalestring BigInt.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.tostring\"><h1><span class=\"secnum\">20.2.3.3</span>#sec-bigint.prototype.tostring BigInt.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.valueof\"><h1><span class=\"secnum\">20.2.3.4</span>#sec-bigint.prototype.valueof BigInt.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-bigint.prototype-@@tostringtag\"><h1><span class=\"secnum\">20.2.3.5</span>#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n  "}, "sec-number.prototype": {"num": "20.1.2.15", "title": "#sec-number.prototype Number.prototype", "html": "<emu-clause id=\"sec-number.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.prototype\">#sec-number.prototype</span> Number.prototype</h1>\n        <p>The initial value of <code>Number.prototype</code> is <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%Number.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-regexp.prototype": {"num": "21.2.4.1", "title": "#sec-regexp.prototype RegExp.prototype", "html": "<emu-clause id=\"sec-regexp.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype\">#sec-regexp.prototype</span> RegExp.prototype</h1>\n        <p>The initial value of <code>RegExp.prototype</code> is <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-%typedarrayprototype%-object": {"num": "22.2.3", "title": "#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray.prototype% Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarrayprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarrayprototype%-object\">#sec-properties-of-the-%typedarrayprototype%-object</span> Properties of the %TypedArray.prototype% Object</h1>\n      <p>The <dfn>%TypedArray.prototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-%typedarray%.prototype.buffer\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-get-%typedarray%.prototype.buffer get %TypedArray%.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.bytelength\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-get-%typedarray%.prototype.bytelength get %TypedArray%.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.byteoffset\"><h1><span class=\"secnum\">22.2.3.3</span>#sec-get-%typedarray%.prototype.byteoffset get %TypedArray%.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.constructor\"><h1><span class=\"secnum\">22.2.3.4</span>#sec-%typedarray%.prototype.constructor %TypedArray%.prototype.constructor</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.copywithin\"><h1><span class=\"secnum\">22.2.3.5</span>#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.entries\"><h1><span class=\"secnum\">22.2.3.6</span>#sec-%typedarray%.prototype.entries %TypedArray%.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.every\"><h1><span class=\"secnum\">22.2.3.7</span>#sec-%typedarray%.prototype.every %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.fill\"><h1><span class=\"secnum\">22.2.3.8</span>#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.filter\"><h1><span class=\"secnum\">22.2.3.9</span>#sec-%typedarray%.prototype.filter %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.find\"><h1><span class=\"secnum\">22.2.3.10</span>#sec-%typedarray%.prototype.find %TypedArray%.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.findindex\"><h1><span class=\"secnum\">22.2.3.11</span>#sec-%typedarray%.prototype.findindex %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.foreach\"><h1><span class=\"secnum\">22.2.3.12</span>#sec-%typedarray%.prototype.foreach %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.includes\"><h1><span class=\"secnum\">22.2.3.13</span>#sec-%typedarray%.prototype.includes %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.indexof\"><h1><span class=\"secnum\">22.2.3.14</span>#sec-%typedarray%.prototype.indexof %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.join\"><h1><span class=\"secnum\">22.2.3.15</span>#sec-%typedarray%.prototype.join %TypedArray%.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.keys\"><h1><span class=\"secnum\">22.2.3.16</span>#sec-%typedarray%.prototype.keys %TypedArray%.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.lastindexof\"><h1><span class=\"secnum\">22.2.3.17</span>#sec-%typedarray%.prototype.lastindexof %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.length\"><h1><span class=\"secnum\">22.2.3.18</span>#sec-get-%typedarray%.prototype.length get %TypedArray%.prototype.length</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.map\"><h1><span class=\"secnum\">22.2.3.19</span>#sec-%typedarray%.prototype.map %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduce\"><h1><span class=\"secnum\">22.2.3.20</span>#sec-%typedarray%.prototype.reduce %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduceright\"><h1><span class=\"secnum\">22.2.3.21</span>#sec-%typedarray%.prototype.reduceright %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reverse\"><h1><span class=\"secnum\">22.2.3.22</span>#sec-%typedarray%.prototype.reverse %TypedArray%.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set-overloaded-offset\"><h1><span class=\"secnum\">22.2.3.23</span>#sec-%typedarray%.prototype.set-overloaded-offset %TypedArray%.prototype.set ( overloaded [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.slice\"><h1><span class=\"secnum\">22.2.3.24</span>#sec-%typedarray%.prototype.slice %TypedArray%.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.some\"><h1><span class=\"secnum\">22.2.3.25</span>#sec-%typedarray%.prototype.some %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.sort\"><h1><span class=\"secnum\">22.2.3.26</span>#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.subarray\"><h1><span class=\"secnum\">22.2.3.27</span>#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tolocalestring\"><h1><span class=\"secnum\">22.2.3.28</span>#sec-%typedarray%.prototype.tolocalestring %TypedArray%.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tostring\"><h1><span class=\"secnum\">22.2.3.29</span>#sec-%typedarray%.prototype.tostring %TypedArray%.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.values\"><h1><span class=\"secnum\">22.2.3.30</span>#sec-%typedarray%.prototype.values %TypedArray%.prototype.values ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype-@@iterator\"><h1><span class=\"secnum\">22.2.3.31</span>#sec-%typedarray%.prototype-@@iterator %TypedArray%.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype-@@tostringtag\"><h1><span class=\"secnum\">22.2.3.32</span>#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-generator-prototype": {"num": "26.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is <dfn>%Generator.prototype%</dfn> (<dfn>%GeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">26.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">26.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">26.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">26.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "24.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Atomics\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events.  When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">24.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">24.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">24.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">24.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">24.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">24.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">24.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">24.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">24.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">24.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">24.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">24.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">24.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">24.4.14</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-promise.all": {"num": "26.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getpromiseresolve\"><h1><span class=\"secnum\">26.6.4.1.1</span>#sec-getpromiseresolve Runtime Semantics: GetPromiseResolve ( promiseConstructor )</h1>...</div><div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">26.6.4.1.2</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">26.6.4.1.3</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-object-initializer-runtime-semantics-evaluation": {"num": "12.2.6.7", "title": "#sec-object-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-object-initializer-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-runtime-semantics-evaluation\">#sec-object-initializer-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectLiteral\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform ? PropertyDefinitionEvaluation of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> with arguments <var>obj</var> and <emu-val>true</emu-val>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exprValue</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propName</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValue</var>).</li><li>Return ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propName</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-sharedarraybuffer.prototype": {"num": "24.2.3.1", "title": "#sec-sharedarraybuffer.prototype SharedArrayBuffer.prototype", "html": "<emu-clause id=\"sec-sharedarraybuffer.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer.prototype\">#sec-sharedarraybuffer.prototype</span> SharedArrayBuffer.prototype</h1>\n        <p>The initial value of <code>SharedArrayBuffer.prototype</code> is <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBuffer.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-proxy.revocable": {"num": "27.2.2.1", "title": "#sec-proxy.revocable Proxy.revocable ( target, handler )", "html": "<emu-clause id=\"sec-proxy.revocable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy.revocable\">#sec-proxy.revocable</span> Proxy.revocable ( <var>target</var>, <var>handler</var> )</h1>\n        <p>The <code>Proxy.revocable</code> function is used to create a revocable Proxy object. When <code>Proxy.revocable</code> is called with arguments <var>target</var> and <var>handler</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>p</var> be ?&#160;<emu-xref aoid=\"ProxyCreate\"><a href=\"#sec-proxycreate\">ProxyCreate</a></emu-xref>(<var>target</var>, <var>handler</var>).</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-proxy-revocation-functions\" title=\"\"><a href=\"#sec-proxy-revocation-functions\">Proxy Revocation Functions</a></emu-xref>.</li><li>Let <var>revoker</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[RevocableProxy]] &#187;).</li><li>Set <var>revoker</var>.[[RevocableProxy]] to <var>p</var>.</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"proxy\"</emu-val>, <var>p</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"revoke\"</emu-val>, <var>revoker</var>).</li><li>Return <var>result</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-proxy-revocation-functions\"><h1><span class=\"secnum\">27.2.2.1.1</span>#sec-proxy-revocation-functions Proxy Revocation Functions</h1>...</div></emu-clause>\n    "}, "sec-properties-of-the-finalization-registry-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-finalization-registry-constructor Properties of the FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-properties-of-the-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-finalization-registry-constructor\">#sec-properties-of-the-finalization-registry-constructor</span> Properties of the FinalizationRegistry Constructor</h1>\n      <p>The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>\n          has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.\n        </li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry.prototype\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-finalization-registry.prototype FinalizationRegistry.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-promise-prototype-object": {"num": "26.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is <dfn>%Promise.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">26.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">26.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">26.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">26.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.6.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-createiterresultobject": {"num": "7.4.8", "title": "#sec-createiterresultobject CreateIterResultObject ( value, done )", "html": "<emu-clause id=\"sec-createiterresultobject\" aoid=\"CreateIterResultObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createiterresultobject\">#sec-createiterresultobject</span> CreateIterResultObject ( <var>value</var>, <var>done</var> )</h1>\n      <p>The abstract operation CreateIterResultObject takes arguments <var>value</var> and <var>done</var>. It creates an object that supports the IteratorResult interface. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>done</var>) is Boolean.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"value\"</emu-val>, <var>value</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"done\"</emu-val>, <var>done</var>).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-properties-of-asyncgenerator-prototype": {"num": "26.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncGenerator.prototype%</dfn> (<dfn>%AsyncGeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">26.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">26.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">26.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">26.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">26.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-setrealmglobalobject": {"num": "8.2.3", "title": "#sec-setrealmglobalobject SetRealmGlobalObject ( realmRec, globalObj, thisValue )", "html": "<emu-clause id=\"sec-setrealmglobalobject\" aoid=\"SetRealmGlobalObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setrealmglobalobject\">#sec-setrealmglobalobject</span> SetRealmGlobalObject ( <var>realmRec</var>, <var>globalObj</var>, <var>thisValue</var> )</h1>\n      <p>The abstract operation SetRealmGlobalObject takes arguments <var>realmRec</var>, <var>globalObj</var>, and <var>thisValue</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <var>globalObj</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>intrinsics</var> be <var>realmRec</var>.[[Intrinsics]].</li><li>Set <var>globalObj</var> to <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>intrinsics</var>.[[<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>]]).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>globalObj</var>) is Object.</li><li>If <var>thisValue</var> is <emu-val>undefined</emu-val>, set <var>thisValue</var> to <var>globalObj</var>.</li><li>Set <var>realmRec</var>.[[GlobalObject]] to <var>globalObj</var>.</li><li>Let <var>newGlobalEnv</var> be <emu-xref aoid=\"NewGlobalEnvironment\"><a href=\"#sec-newglobalenvironment\">NewGlobalEnvironment</a></emu-xref>(<var>globalObj</var>, <var>thisValue</var>).</li><li>Set <var>realmRec</var>.[[GlobalEnv]] to <var>newGlobalEnv</var>.</li><li>Return <var>realmRec</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-properties-of-the-map-prototype-object": {"num": "23.1.3", "title": "#sec-properties-of-the-map-prototype-object Properties of the Map Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-map-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-map-prototype-object\">#sec-properties-of-the-map-prototype-object</span> Properties of the Map Prototype Object</h1>\n      <p>The Map prototype object:</p>\n      <ul>\n        <li>is <dfn>%Map.prototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[MapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map.prototype.clear\"><h1><span class=\"secnum\">23.1.3.1</span>#sec-map.prototype.clear Map.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-map.prototype.constructor\"><h1><span class=\"secnum\">23.1.3.2</span>#sec-map.prototype.constructor Map.prototype.constructor</h1>...</div><div id=\"excluded-sec-map.prototype.delete\"><h1><span class=\"secnum\">23.1.3.3</span>#sec-map.prototype.delete Map.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.entries\"><h1><span class=\"secnum\">23.1.3.4</span>#sec-map.prototype.entries Map.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-map.prototype.foreach\"><h1><span class=\"secnum\">23.1.3.5</span>#sec-map.prototype.foreach Map.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-map.prototype.get\"><h1><span class=\"secnum\">23.1.3.6</span>#sec-map.prototype.get Map.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.has\"><h1><span class=\"secnum\">23.1.3.7</span>#sec-map.prototype.has Map.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.keys\"><h1><span class=\"secnum\">23.1.3.8</span>#sec-map.prototype.keys Map.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-map.prototype.set\"><h1><span class=\"secnum\">23.1.3.9</span>#sec-map.prototype.set Map.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-get-map.prototype.size\"><h1><span class=\"secnum\">23.1.3.10</span>#sec-get-map.prototype.size get Map.prototype.size</h1>...</div><div id=\"excluded-sec-map.prototype.values\"><h1><span class=\"secnum\">23.1.3.11</span>#sec-map.prototype.values Map.prototype.values ( )</h1>...</div><div id=\"excluded-sec-map.prototype-@@iterator\"><h1><span class=\"secnum\">23.1.3.12</span>#sec-map.prototype-@@iterator Map.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-map.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.1.3.13</span>#sec-map.prototype-@@tostringtag Map.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-createunmappedargumentsobject": {"num": "9.4.4.6", "title": "#sec-createunmappedargumentsobject CreateUnmappedArgumentsObject ( argumentsList )", "html": "<emu-clause id=\"sec-createunmappedargumentsobject\" aoid=\"CreateUnmappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</span> CreateUnmappedArgumentsObject ( <var>argumentsList</var> )</h1>\n        <p>The abstract operation CreateUnmappedArgumentsObject takes argument <var>argumentsList</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>, &#171; [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[ParameterMap]] to <emu-val>undefined</emu-val>.</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@iterator</a></emu-xref>, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Get]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Set]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weakset.prototype": {"num": "23.4.2.1", "title": "#sec-weakset.prototype WeakSet.prototype", "html": "<emu-clause id=\"sec-weakset.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset.prototype\">#sec-weakset.prototype</span> WeakSet.prototype</h1>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-finalization-registry-constructor": {"num": "25.2.1", "title": "#sec-finalization-registry-constructor The FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</span> The FinalizationRegistry Constructor</h1>\n      <p>The <dfn>FinalizationRegistry</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%FinalizationRegistry%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"FinalizationRegistry\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new FinalizationRegistry object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>FinalizationRegistry</code> behaviour must include a <code>super</code> call to the <code>FinalizationRegistry</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>FinalizationRegistry.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry-cleanup-callback\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-finalization-registry-cleanup-callback FinalizationRegistry ( cleanupCallback )</h1>...</div></emu-clause>\n\n    "}, "sec-frompropertydescriptor": {"num": "6.2.5.4", "title": "#sec-frompropertydescriptor FromPropertyDescriptor ( Desc )", "html": "<emu-clause id=\"sec-frompropertydescriptor\" aoid=\"FromPropertyDescriptor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-frompropertydescriptor\">#sec-frompropertydescriptor</span> FromPropertyDescriptor ( <var>Desc</var> )</h1>\n        <p>The abstract operation FromPropertyDescriptor takes argument <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> or <emu-val>undefined</emu-val>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>Desc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var> is an extensible <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> with no own properties.</li><li>If <var>Desc</var> has a [[Value]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"value\"</emu-val>, <var>Desc</var>.[[Value]]).</li></ol></li><li>If <var>Desc</var> has a [[Writable]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"writable\"</emu-val>, <var>Desc</var>.[[Writable]]).</li></ol></li><li>If <var>Desc</var> has a [[Get]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"get\"</emu-val>, <var>Desc</var>.[[Get]]).</li></ol></li><li>If <var>Desc</var> has a [[Set]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"set\"</emu-val>, <var>Desc</var>.[[Set]]).</li></ol></li><li>If <var>Desc</var> has an [[Enumerable]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"enumerable\"</emu-val>, <var>Desc</var>.[[Enumerable]]).</li></ol></li><li>If <var>Desc</var> has a [[Configurable]] field, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"configurable\"</emu-val>, <var>Desc</var>.[[Configurable]]).</li></ol></li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-arraycreate": {"num": "9.4.2.2", "title": "#sec-arraycreate ArrayCreate ( length [ , proto ] )", "html": "<emu-clause id=\"sec-arraycreate\" aoid=\"ArrayCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraycreate\">#sec-arraycreate</span> ArrayCreate ( <var>length</var> [ , <var>proto</var> ] )</h1>\n        <p>The abstract operation ArrayCreate takes argument <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>) and optional argument <var>proto</var>. It is used to specify the creation of new Array exotic objects. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsNonNegativeInteger\"><a href=\"#sec-isnonnegativeinteger\">IsNonNegativeInteger</a></emu-xref>(<var>length</var>) is <emu-val>true</emu-val>.</li><li>If <var>length</var> is <emu-val>-0</emu-val>, set <var>length</var> to <emu-val>+0</emu-val>.</li><li>If <var>length</var> &gt; 2<sup>32</sup> - 1, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>proto</var> is not present, set <var>proto</var> to <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%Array.prototype%</a></emu-xref>.</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]] &#187;).</li><li>Set <var>A</var>.[[Prototype]] to <var>proto</var>.</li><li>Set <var>A</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Perform !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>length</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weak-ref-constructor": {"num": "25.1.1", "title": "#sec-weak-ref-constructor The WeakRef Constructor", "html": "<emu-clause id=\"sec-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</span> The WeakRef Constructor</h1>\n      <p>The <dfn>WeakRef</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is %WeakRef%.</li>\n        <li>\n          is the initial value of the <emu-val>\"WeakRef\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new WeakRef object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakRef</code> behaviour must include a <code>super</code> call to the <code>WeakRef</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakRef.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref-target\"><h1><span class=\"secnum\">25.1.1.1</span>#sec-weak-ref-target WeakRef ( target )</h1>...</div></emu-clause>\n\n    "}, "sec-set.prototype": {"num": "23.2.2.1", "title": "#sec-set.prototype Set.prototype", "html": "<emu-clause id=\"sec-set.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype\">#sec-set.prototype</span> Set.prototype</h1>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-promise.allsettled-resolve-element-functions": {"num": "26.6.4.2.2", "title": "#sec-promise.allsettled-resolve-element-functions Promise.allSettled Resolve Element Functions", "html": "<emu-clause id=\"sec-promise.allsettled-resolve-element-functions\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled-resolve-element-functions\">#sec-promise.allsettled-resolve-element-functions</span> <code>Promise.allSettled</code> Resolve Element Functions</h1>\n          <p>A <code>Promise.allSettled</code> resolve element function is an anonymous built-in function that is used to resolve a specific <code>Promise.allSettled</code> element. Each <code>Promise.allSettled</code> resolve element function has [[Index]], [[Values]], [[Capability]], [[RemainingElements]], and [[AlreadyCalled]] internal slots.</p>\n          <p>When a <code>Promise.allSettled</code> resolve element function is called with argument <var>x</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>alreadyCalled</var> be <var>F</var>.[[AlreadyCalled]].</li><li>If <var>alreadyCalled</var>.[[Value]] is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Set <var>alreadyCalled</var>.[[Value]] to <emu-val>true</emu-val>.</li><li>Let <var>index</var> be <var>F</var>.[[Index]].</li><li>Let <var>values</var> be <var>F</var>.[[Values]].</li><li>Let <var>promiseCapability</var> be <var>F</var>.[[Capability]].</li><li>Let <var>remainingElementsCount</var> be <var>F</var>.[[RemainingElements]].</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"status\"</emu-val>, <emu-val>\"fulfilled\"</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"value\"</emu-val>, <var>x</var>).</li><li>Set <var>values</var>[<var>index</var>] to <var>obj</var>.</li><li>Set <var>remainingElementsCount</var>.[[Value]] to <var>remainingElementsCount</var>.[[Value]] - 1.</li><li>If <var>remainingElementsCount</var>.[[Value]] is 0, then<ol><li>Let <var>valuesArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>values</var>).</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>, &#171; <var>valuesArray</var> &#187;).</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n          <p>The <emu-val>\"length\"</emu-val> property of a <code>Promise.allSettled</code> resolve element function is 1.</p>\n        </emu-clause>\n\n        "}, "sec-arraybuffer.prototype": {"num": "24.1.4.2", "title": "#sec-arraybuffer.prototype ArrayBuffer.prototype", "html": "<emu-clause id=\"sec-arraybuffer.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer.prototype\">#sec-arraybuffer.prototype</span> ArrayBuffer.prototype</h1>\n        <p>The initial value of <code>ArrayBuffer.prototype</code> is <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBuffer.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-weak-ref-constructor": {"num": "25.1.2", "title": "#sec-properties-of-the-weak-ref-constructor Properties of the WeakRef Constructor", "html": "<emu-clause id=\"sec-properties-of-the-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weak-ref-constructor\">#sec-properties-of-the-weak-ref-constructor</span> Properties of the WeakRef Constructor</h1>\n      <p>The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>\n          has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.\n        </li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref.prototype\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-weak-ref.prototype WeakRef.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-regexp-prototype-object": {"num": "21.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The RegExp prototype object:</p>\n      <ul>\n        <li>is <dfn>%RegExp.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <emu-val>\"valueOf\"</emu-val> property of its own; however, it inherits the <emu-val>\"valueOf\"</emu-val> property from the Object prototype object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">21.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">21.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">21.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">21.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">21.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">21.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">21.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">21.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">21.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">21.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">21.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">21.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">21.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">21.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">21.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">21.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">21.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.keys": {"num": "22.1.3.16", "title": "#sec-array.prototype.keys Array.prototype.keys ( )", "html": "<emu-clause id=\"sec-array.prototype.keys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</span> Array.prototype.keys ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"CreateArrayIterator\"><a href=\"#sec-createarrayiterator\">CreateArrayIterator</a></emu-xref>(<var>O</var>, <emu-const>key</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-error.prototype": {"num": "19.5.2.1", "title": "#sec-error.prototype Error.prototype", "html": "<emu-clause id=\"sec-error.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error.prototype\">#sec-error.prototype</span> Error.prototype</h1>\n        <p>The initial value of <code>Error.prototype</code> is <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%Error.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-weak-ref-prototype-object": {"num": "25.1.3", "title": "#sec-properties-of-the-weak-ref-prototype-object Properties of the WeakRef Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weak-ref-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weak-ref-prototype-object\">#sec-properties-of-the-weak-ref-prototype-object</span> Properties of the WeakRef Prototype Object</h1>\n      <p>The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> prototype object:</p>\n      <ul>\n        <li>is <dfn>%WeakRef.prototype%</dfn>.</li>\n        <li>\n          has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.\n        </li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakRefTarget]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref.prototype.constructor\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-weak-ref.prototype.constructor WeakRef.prototype.constructor</h1>...</div><div id=\"excluded-sec-weak-ref.prototype.deref\"><h1><span class=\"secnum\">25.1.3.2</span>#sec-weak-ref.prototype.deref WeakRef.prototype.deref ( )</h1>...</div><div id=\"excluded-sec-weak-ref.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.1.3.3</span>#sec-weak-ref.prototype-@@tostringtag WeakRef.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-makeconstructor": {"num": "9.2.5", "title": "#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )", "html": "<emu-clause id=\"sec-makeconstructor\" aoid=\"MakeConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makeconstructor\">#sec-makeconstructor</span> MakeConstructor ( <var>F</var> [ , <var>writablePrototype</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation MakeConstructor takes argument <var>F</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>) and optional arguments <var>writablePrototype</var> (a Boolean) and <var>prototype</var> (an Object). It converts <var>F</var> into a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>F</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <emu-val>\"prototype\"</emu-val> own property.</li><li>Set <var>F</var>.[[Construct]] to the definition specified in <emu-xref href=\"#sec-ecmascript-function-objects-construct-argumentslist-newtarget\"><a href=\"#sec-ecmascript-function-objects-construct-argumentslist-newtarget\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects-construct-argumentslist-newtarget\">#sec-ecmascript-function-objects-construct-argumentslist-newtarget</a></emu-xref>.</li><li>Set <var>F</var>.[[ConstructorKind]] to <emu-const>base</emu-const>.</li><li>If <var>writablePrototype</var> is not present, set <var>writablePrototype</var> to <emu-val>true</emu-val>.</li><li>If <var>prototype</var> is not present, then<ol><li>Set <var>prototype</var> to <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>prototype</var>, <emu-val>\"constructor\"</emu-val>, PropertyDescriptor { [[Value]]: <var>F</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-array.prototype": {"num": "22.1.2.4", "title": "#sec-array.prototype Array.prototype", "html": "<emu-clause id=\"sec-array.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype\">#sec-array.prototype</span> Array.prototype</h1>\n        <p>The value of <code>Array.prototype</code> is <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%Array.prototype%</a></emu-xref>, the intrinsic Array prototype object.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-boolean.prototype": {"num": "19.3.2.1", "title": "#sec-boolean.prototype Boolean.prototype", "html": "<emu-clause id=\"sec-boolean.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean.prototype\">#sec-boolean.prototype</span> Boolean.prototype</h1>\n        <p>The initial value of <code>Boolean.prototype</code> is <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%Boolean.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-promise.allsettled-reject-element-functions": {"num": "26.6.4.2.3", "title": "#sec-promise.allsettled-reject-element-functions Promise.allSettled Reject Element Functions", "html": "<emu-clause id=\"sec-promise.allsettled-reject-element-functions\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled-reject-element-functions\">#sec-promise.allsettled-reject-element-functions</span> <code>Promise.allSettled</code> Reject Element Functions</h1>\n          <p>A <code>Promise.allSettled</code> reject element function is an anonymous built-in function that is used to reject a specific <code>Promise.allSettled</code> element. Each <code>Promise.allSettled</code> reject element function has [[Index]], [[Values]], [[Capability]], [[RemainingElements]], and [[AlreadyCalled]] internal slots.</p>\n          <p>When a <code>Promise.allSettled</code> reject element function is called with argument <var>x</var>, the following steps are taken:</p>\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>alreadyCalled</var> be <var>F</var>.[[AlreadyCalled]].</li><li>If <var>alreadyCalled</var>.[[Value]] is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Set <var>alreadyCalled</var>.[[Value]] to <emu-val>true</emu-val>.</li><li>Let <var>index</var> be <var>F</var>.[[Index]].</li><li>Let <var>values</var> be <var>F</var>.[[Values]].</li><li>Let <var>promiseCapability</var> be <var>F</var>.[[Capability]].</li><li>Let <var>remainingElementsCount</var> be <var>F</var>.[[RemainingElements]].</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"status\"</emu-val>, <emu-val>\"rejected\"</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"reason\"</emu-val>, <var>x</var>).</li><li>Set <var>values</var>[<var>index</var>] to <var>obj</var>.</li><li>Set <var>remainingElementsCount</var>.[[Value]] to <var>remainingElementsCount</var>.[[Value]] - 1.</li><li>If <var>remainingElementsCount</var>.[[Value]] is 0, then<ol><li>Let <var>valuesArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>values</var>).</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>, &#171; <var>valuesArray</var> &#187;).</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n          <p>The <emu-val>\"length\"</emu-val> property of a <code>Promise.allSettled</code> reject element function is 1.</p>\n        </emu-clause>\n      "}, "sec-object.prototype.valueof": {"num": "19.1.3.7", "title": "#sec-object.prototype.valueof Object.prototype.valueOf ( )", "html": "<emu-clause id=\"sec-object.prototype.valueof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</span> Object.prototype.valueOf ( )</h1>\n        <p>When the <code>valueOf</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              </th>\n              <th>\n                Global Name\n              </th>\n              <th>\n                ECMAScript Language Association\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>\n              </td>\n              <td>\n                <code>AggregateError</code>\n              </td>\n              <td>\n                The <code>AggregateError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %AggregateErrorPrototype%\n              </td>\n              <td>\n                <code>AggregateError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-aggregate-error-prototype-objects\"><a href=\"#sec-properties-of-the-aggregate-error-prototype-objects\">%AggregateError.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array</code>\n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGeneratorFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              </td>\n              <td>\n                <code>Atomics</code>\n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt</code>\n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigInt64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigUint64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean</code>\n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView</code>\n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date</code>\n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURI</code>\n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURI</code>\n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error</code>\n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              </td>\n              <td>\n                <code>eval</code>\n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>\n              </td>\n              <td>\n                <code>EvalError</code>\n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>\n              </td>\n              <td>\n                <code>FinalizationRegistry</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\" class=\"excluded-xref\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float32Array</code>\n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float64Array</code>\n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              </td>\n              <td>\n                <code>Function</code>\n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int8Array</code>\n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int16Array</code>\n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int32Array</code>\n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              </td>\n              <td>\n                <code>isFinite</code>\n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              </td>\n              <td>\n                <code>isNaN</code>\n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON</code>\n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map</code>\n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              </td>\n              <td>\n                <code>Math</code>\n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number</code>\n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object</code>\n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseFloat</code>\n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseInt</code>\n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise</code>\n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              </td>\n              <td>\n                <code>Proxy</code>\n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>RangeError</code>\n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>\n              </td>\n              <td>\n                <code>ReferenceError</code>\n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              </td>\n              <td>\n                <code>Reflect</code>\n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp</code>\n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set</code>\n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              </td>\n              <td>\n                <code>String</code>\n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol</code>\n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>\n              </td>\n              <td>\n                <code>SyntaxError</code>\n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>TypeError</code>\n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8Array</code>\n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint16Array</code>\n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint32Array</code>\n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>\n              </td>\n              <td>\n                <code>URIError</code>\n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap</code>\n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%\n              </td>\n              <td>\n                <code>WeakRef</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet</code>\n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-weakmap.prototype": {"num": "23.3.2.1", "title": "#sec-weakmap.prototype WeakMap.prototype", "html": "<emu-clause id=\"sec-weakmap.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap.prototype\">#sec-weakmap.prototype</span> WeakMap.prototype</h1>\n        <p>The initial value of <code>WeakMap.prototype</code> is <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMap.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-reflect-object": {"num": "27.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Reflect\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">27.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">27.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">27.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">27.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">27.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">27.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">27.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">27.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">27.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">27.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">27.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">27.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">27.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div><div id=\"excluded-sec-reflect-@@tostringtag\"><h1><span class=\"secnum\">27.1.14</span>#sec-reflect-@@tostringtag Reflect [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-json-object": {"num": "24.5", "title": "#sec-json-object The JSON Object", "html": "<emu-clause id=\"sec-json-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-object\">#sec-json-object</span> The JSON Object</h1>\n    <p>The JSON object:</p>\n    <ul>\n      <li>is <dfn>%JSON%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"JSON\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>contains two functions, <code>parse</code> and <code>stringify</code>, that are used to parse and construct JSON texts.</li>\n      <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The JSON Data Interchange Format is defined in ECMA-404. The JSON interchange format used in this specification is exactly that described by ECMA-404. Conforming implementations of <code>JSON.parse</code> and <code>JSON.stringify</code> must support the exact interchange format described in the ECMA-404 specification without any deletions or extensions to the format.</p>\n\n    <div id=\"excluded-sec-json.parse\"><h1><span class=\"secnum\">24.5.1</span>#sec-json.parse JSON.parse ( text [ , reviver ] )</h1>...</div><div id=\"excluded-sec-json.stringify\"><h1><span class=\"secnum\">24.5.2</span>#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )</h1>...</div><div id=\"excluded-sec-json-@@tostringtag\"><h1><span class=\"secnum\">24.5.3</span>#sec-json-@@tostringtag JSON [ @@toStringTag ]</h1>...</div></emu-clause>\n"}, "sec-get-regexp.prototype.sticky": {"num": "21.2.5.14", "title": "#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky", "html": "<emu-clause id=\"sec-get-regexp.prototype.sticky\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.sticky\">#sec-get-regexp.prototype.sticky</span> get RegExp.prototype.sticky</h1>\n        <p><code>RegExp.prototype.sticky</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>R</var> does not have an [[OriginalFlags]] internal slot, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExp.prototype%</a></emu-xref>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Otherwise, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>flags</var> be <var>R</var>.[[OriginalFlags]].</li><li>If <var>flags</var> contains the code unit 0x0079 (LATIN SMALL LETTER Y), return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-promise.resolve": {"num": "26.6.4.7", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">26.6.4.7.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}}, "figData": {"table-2": "Table 3", "table-5": "Table 6", "table-7": "Table 8", "table-27": "Table 27", "table-59": "Table 78"}}}