{"from": {"secList": ["sec-ecmascript-function-objects", "sec-ecmascript-specification-types", "sec-exports", "sec-static-semantics-hascallintailposition", "sec-ecmascript-language-functions-and-classes", "sec-functions-and-classes", "sec-definefield", "sec-class-definitions-runtime-semantics-evaluation", "sec-runtime-semantics-classfielddefinitionevaluation", "sec-runtime-semantics-bindingclassdeclarationevaluation", "sec-well-known-symbols", "sec-runtime-semantics-methoddefinitionevaluation", "sec-definemethodproperty", "sec-initializeinstanceelements", "sec-static-semantics-classelementevaluation", "sec-runtime-semantics-namedevaluation", "sec-operations-on-objects", "sec-class-definitions", "sec-scripts-and-modules", "sec-async-function-definitions", "sec-runtime-semantics-classdefinitionevaluation", "sec-classfielddefinition-record-specification-type", "sec-async-arrow-function-definitions", "sec-tail-position-calls"], "secData": {"sec-ecmascript-function-objects": {"num": "10.2", "title": "#sec-ecmascript-function-objects ECMAScript Function Objects", "html": "<emu-clause id=\"sec-ecmascript-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</span> ECMAScript Function Objects</h1>\n    <p>ECMAScript function objects encapsulate parameterized ECMAScript code closed over a lexical environment and support the dynamic evaluation of that code. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> and has the same internal slots and the same internal methods as other ordinary objects. The code of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> may be either <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\" class=\"excluded-xref\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</a></emu-xref>) or <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> whose code is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a <dfn id=\"strict-function\">strict function</dfn>. One whose code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a <dfn id=\"non-strict-function\">non-strict function</dfn>.</p>\n    <p>In addition to [[Extensible]] and [[Prototype]], ECMAScript function objects also have the internal slots listed in <emu-xref href=\"#table-internal-slots-of-ecmascript-function-objects\"><a href=\"#table-internal-slots-of-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</a></emu-xref>.</p>\n    <emu-table id=\"table-internal-slots-of-ecmascript-function-objects\" caption=\"Internal Slots of ECMAScript Function Objects\" oldids=\"table-27\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</span>: Internal Slots of ECMAScript Function Objects</figcaption><span id=\"table-27\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Internal Slot\n          </th>\n          <th>\n            Type\n          </th>\n          <th>\n            Description\n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[Environment]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>\n          </td>\n          <td>\n            The <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that the function was closed over. Used as the outer environment when evaluating the code of the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[PrivateEnvironment]]\n          </td>\n          <td>\n            <emu-xref href=\"#privateenvironment-record\"><a href=\"#privateenvironment-record\">PrivateEnvironment Record</a></emu-xref> | <emu-val>null</emu-val>\n          </td>\n          <td>\n            The <emu-xref href=\"#privateenvironment-record\"><a href=\"#privateenvironment-record\">PrivateEnvironment Record</a></emu-xref> for Private Names that the function was closed over. <emu-val>null</emu-val> if this function is not syntactically contained within a class. Used as the outer PrivateEnvironment for inner classes when evaluating the code of the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[FormalParameters]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          </td>\n          <td>\n            The root parse node of the source text that defines the function's formal parameter list.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ECMAScriptCode]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          </td>\n          <td>\n            The root parse node of the source text that defines the function's body.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ConstructorKind]]\n          </td>\n          <td>\n            <emu-const>base</emu-const> | <emu-const>derived</emu-const>\n          </td>\n          <td>\n            Whether or not the function is a derived class <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Realm]]\n          </td>\n          <td>\n            <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>\n          </td>\n          <td>\n            The <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> in which the function was created and which provides any intrinsic objects that are accessed when evaluating the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ScriptOrModule]]\n          </td>\n          <td>\n            <emu-xref href=\"#script-record\"><a href=\"#script-record\">Script Record</a></emu-xref> or <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>\n          </td>\n          <td>\n            The script or module in which the function was created.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ThisMode]]\n          </td>\n          <td>\n            <emu-const>lexical</emu-const> | <emu-const>strict</emu-const> | <emu-const>global</emu-const>\n          </td>\n          <td>\n            Defines how <code>this</code> references are interpreted within the formal parameters and code body of the function. <emu-const>lexical</emu-const> means that <code>this</code> refers to the <emu-val>this</emu-val> value of a lexically enclosing function. <emu-const>strict</emu-const> means that the <emu-val>this</emu-val> value is used exactly as provided by an invocation of the function. <emu-const>global</emu-const> means that a <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is interpreted as a reference to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, and any other <emu-val>this</emu-val> value is first passed to <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Strict]]\n          </td>\n          <td>\n            Boolean\n          </td>\n          <td>\n            <emu-val>true</emu-val> if this is a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>, <emu-val>false</emu-val> if this is a <emu-xref href=\"#non-strict-function\"><a href=\"#non-strict-function\">non-strict function</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HomeObject]]\n          </td>\n          <td>\n            Object\n          </td>\n          <td>\n            If the function uses <code>super</code>, this is the object whose [[GetPrototypeOf]] provides the object where <code>super</code> property lookups begin.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[SourceText]]\n          </td>\n          <td>\n            sequence of Unicode code points\n          </td>\n          <td>\n            The <emu-xref href=\"#sec-source-text\"><a href=\"#sec-source-text\">source text</a></emu-xref> that defines the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Fields]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ClassFieldDefinition Records\n          </td>\n          <td>\n            If the function is a class, this is a list of Records representing the non-static fields and corresponding initializers of the class.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[PrivateMethods]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of PrivateElements\n          </td>\n          <td>\n            If the function is a class, this is a list representing the non-static private methods and accessors of the class.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ClassFieldInitializerName]]\n          </td>\n          <td>\n            String | Symbol | <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> | <emu-const>empty</emu-const>\n          </td>\n          <td>\n            If the function is created as the initializer of a class field, the name to use for <emu-xref aoid=\"NamedEvaluation\"><a href=\"#sec-runtime-semantics-namedevaluation\">NamedEvaluation</a></emu-xref> of the field; <emu-const>empty</emu-const> otherwise.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[IsClassConstructor]]\n          </td>\n          <td>\n            Boolean\n          </td>\n          <td>\n            Indicates whether the function is a class <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. (If <emu-val>true</emu-val>, invoking the function's [[Call]] will immediately throw a <emu-val>TypeError</emu-val> exception.)\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>All ECMAScript function objects have the [[Call]] internal method defined here. ECMAScript functions that are also constructors in addition have the [[Construct]] internal method.</p>\n\n    <div id=\"excluded-sec-ecmascript-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">10.2.1</span>#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-ecmascript-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">10.2.2</span>#sec-ecmascript-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-ordinaryfunctioncreate\"><h1><span class=\"secnum\">10.2.3</span>#sec-ordinaryfunctioncreate OrdinaryFunctionCreate ( functionPrototype, sourceText, ParameterList, Body, thisMode, Scope, PrivateScope )</h1>...</div><div id=\"excluded-sec-addrestrictedfunctionproperties\"><h1><span class=\"secnum\">10.2.4</span>#sec-addrestrictedfunctionproperties AddRestrictedFunctionProperties ( F, realm )</h1>...</div><div id=\"excluded-sec-makeconstructor\"><h1><span class=\"secnum\">10.2.5</span>#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )</h1>...</div><div id=\"excluded-sec-makeclassconstructor\"><h1><span class=\"secnum\">10.2.6</span>#sec-makeclassconstructor MakeClassConstructor ( F )</h1>...</div><div id=\"excluded-sec-makemethod\"><h1><span class=\"secnum\">10.2.7</span>#sec-makemethod MakeMethod ( F, homeObject )</h1>...</div><div id=\"excluded-sec-definemethodproperty\"><h1><span class=\"secnum\">10.2.8</span>#sec-definemethodproperty DefineMethodProperty ( key, homeObject, closure, enumerable )</h1>...</div><div id=\"excluded-sec-setfunctionname\"><h1><span class=\"secnum\">10.2.9</span>#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )</h1>...</div><div id=\"excluded-sec-setfunctionlength\"><h1><span class=\"secnum\">10.2.10</span>#sec-setfunctionlength SetFunctionLength ( F, length )</h1>...</div><div id=\"excluded-sec-functiondeclarationinstantiation\"><h1><span class=\"secnum\">10.2.11</span>#sec-functiondeclarationinstantiation FunctionDeclarationInstantiation ( func, argumentsList )</h1>...</div></emu-clause>\n\n  "}, "sec-ecmascript-specification-types": {"num": "6.2", "title": "#sec-ecmascript-specification-types ECMAScript Specification Types", "html": "<emu-clause id=\"sec-ecmascript-specification-types\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-specification-types\">#sec-ecmascript-specification-types</span> ECMAScript Specification Types</h1>\n    <p>A specification type corresponds to meta-values that are used within algorithms to describe the semantics of ECMAScript language constructs and ECMAScript language types. The specification types include Reference, <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>, <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>, <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>, <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref>, and <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Data Block</a></emu-xref>. Specification type values are specification artefacts that do not necessarily correspond to any specific entity within an ECMAScript implementation. Specification type values may be used to describe intermediate results of ECMAScript expression evaluation but such values cannot be stored as properties of objects or values of ECMAScript language variables.</p>\n\n    <div id=\"excluded-sec-list-and-record-specification-type\"><h1><span class=\"secnum\">6.2.1</span>#sec-list-and-record-specification-type The List and Record Specification Types</h1>...</div><div id=\"excluded-sec-set-and-relation-specification-type\"><h1><span class=\"secnum\">6.2.2</span>#sec-set-and-relation-specification-type The Set and Relation Specification Types</h1>...</div><div id=\"excluded-sec-completion-record-specification-type\"><h1><span class=\"secnum\">6.2.3</span>#sec-completion-record-specification-type The Completion Record Specification Type</h1>...</div><div id=\"excluded-sec-reference-record-specification-type\"><h1><span class=\"secnum\">6.2.4</span>#sec-reference-record-specification-type The Reference Record Specification Type</h1>...</div><div id=\"excluded-sec-property-descriptor-specification-type\"><h1><span class=\"secnum\">6.2.5</span>#sec-property-descriptor-specification-type The Property Descriptor Specification Type</h1>...</div><div id=\"excluded-sec-lexical-environment-and-environment-record-specification-types\"><h1><span class=\"secnum\">6.2.6</span>#sec-lexical-environment-and-environment-record-specification-types The Environment Record Specification Type</h1>...</div><div id=\"excluded-sec-abstract-closure\"><h1><span class=\"secnum\">6.2.7</span>#sec-abstract-closure The Abstract Closure Specification Type</h1>...</div><div id=\"excluded-sec-data-blocks\"><h1><span class=\"secnum\">6.2.8</span>#sec-data-blocks Data Blocks</h1>...</div><div id=\"excluded-sec-privateelement-specification-type\"><h1><span class=\"secnum\">6.2.9</span>#sec-privateelement-specification-type The PrivateElement Specification Type</h1>...</div><div id=\"excluded-sec-classfielddefinition-record-specification-type\"><h1><span class=\"secnum\">6.2.10</span>#sec-classfielddefinition-record-specification-type The ClassFieldDefinition Record Specification Type</h1>...</div><div id=\"excluded-sec-private-names\"><h1><span class=\"secnum\">6.2.11</span>#sec-private-names Private Names</h1>...</div></emu-clause>\n"}, "sec-exports": {"num": "16.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"awunbvdu\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"a8mbl6ic\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"0pjhun9m\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ridmvkht\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"4qwftn93\" id=\"prod-GUPXSqcT\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"dtcd7req\" id=\"prod-o48mDNgZ\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-JyH8gtYm\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qvusrr4h\" id=\"prod-HMTDwQcl\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-exportedbindings\"><h1><span class=\"secnum\">16.2.3.2</span>#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.3.3</span>#sec-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.3.4</span>#sec-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">16.2.3.5</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">16.2.3.6</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.3.7</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-hascallintailposition": {"num": "15.10.2", "title": "#sec-static-semantics-hascallintailposition Static Semantics: HasCallInTailPosition", "html": "<emu-clause id=\"sec-static-semantics-hascallintailposition\" type=\"sdo\" aoid=\"HasCallInTailPosition\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-hascallintailposition\">#sec-static-semantics-hascallintailposition</span> Static Semantics: HasCallInTailPosition</h1>\n      <p>With parameter <var>call</var>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><var>call</var> is a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> that represents a specific range of source text. When the following algorithms compare <var>call</var> to another <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, it is a test of whether they represent the same source text.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-statement-rules\"><h1><span class=\"secnum\">15.10.2.1</span>#sec-statement-rules Statement Rules</h1>...</div><div id=\"excluded-sec-expression-rules\"><h1><span class=\"secnum\">15.10.2.2</span>#sec-expression-rules Expression Rules</h1>...</div></emu-clause>\n\n    "}, "sec-ecmascript-language-functions-and-classes": {"num": "15", "title": "#sec-ecmascript-language-functions-and-classes ECMAScript Language: Functions and Classes", "html": "<emu-clause id=\"sec-ecmascript-language-functions-and-classes\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-functions-and-classes\">#sec-ecmascript-language-functions-and-classes</span> ECMAScript Language: Functions and Classes</h1>\n  <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n    <p>Various ECMAScript language elements cause the creation of ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>). Evaluation of such functions starts with the execution of their [[Call]] internal method (<emu-xref href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\"><a href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</a></emu-xref>).</p>\n  </div></emu-note>\n\n  <div id=\"excluded-sec-parameter-lists\"><h1><span class=\"secnum\">15.1</span>#sec-parameter-lists Parameter Lists</h1>...</div><div id=\"excluded-sec-function-definitions\"><h1><span class=\"secnum\">15.2</span>#sec-function-definitions Function Definitions</h1>...</div><div id=\"excluded-sec-arrow-function-definitions\"><h1><span class=\"secnum\">15.3</span>#sec-arrow-function-definitions Arrow Function Definitions</h1>...</div><div id=\"excluded-sec-method-definitions\"><h1><span class=\"secnum\">15.4</span>#sec-method-definitions Method Definitions</h1>...</div><div id=\"excluded-sec-generator-function-definitions\"><h1><span class=\"secnum\">15.5</span>#sec-generator-function-definitions Generator Function Definitions</h1>...</div><div id=\"excluded-sec-async-generator-function-definitions\"><h1><span class=\"secnum\">15.6</span>#sec-async-generator-function-definitions Async Generator Function Definitions</h1>...</div><div id=\"excluded-sec-class-definitions\"><h1><span class=\"secnum\">15.7</span>#sec-class-definitions Class Definitions</h1>...</div><div id=\"excluded-sec-async-function-definitions\"><h1><span class=\"secnum\">15.8</span>#sec-async-function-definitions Async Function Definitions</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions\"><h1><span class=\"secnum\">15.9</span>#sec-async-arrow-function-definitions Async Arrow Function Definitions</h1>...</div><div id=\"excluded-sec-tail-position-calls\"><h1><span class=\"secnum\">15.10</span>#sec-tail-position-calls Tail Position Calls</h1>...</div></emu-clause>\n\n"}, "sec-functions-and-classes": {"num": "A.4", "title": "#sec-functions-and-classes Functions and Classes", "html": "<emu-annex id=\"sec-functions-and-classes\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-functions-and-classes\">#sec-functions-and-classes</span> Functions and Classes</h1>\n    <emu-production name=\"UniqueFormalParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"kat5sugn\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FormalParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\" id=\"prod-X0L442RA\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"xs94btl2\" id=\"prod-eloVArBA\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5f3rxyqw\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"wdsulm_w\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"yh9ahvuw\" id=\"prod-aTWifksv\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FormalParameterList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"3qhu-4tu\" id=\"prod-TejDOk2p\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"mlncfkxh\" id=\"prod-7NFUmaIc\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionRestParameter\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iw2hthb9\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FormalParameter\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xpmoewcq\" id=\"prod-t4IFgCs2\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fal2s0ab\" id=\"prod-lEQdX6hk\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"_ww4ynxp\" constraints=\"+Default\" id=\"prod-eqpHaG0r\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"h6r9zk3c\" id=\"prod--zvLR38c\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionBody\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gljyayfs\" id=\"prod-CvdRIvQG\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionStatementList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ime6-pzo\" id=\"prod-jJULW0Hz\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ArrowFunction\" params=\"In, Yield, Await\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-ArrowFunction\">ArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c-igjs-g\" id=\"prod-AtXUMYu3\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ArrowParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ir-rfjfi\" id=\"prod-C8khN6EK\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"parencover\" id=\"prod-K4CbCiCx\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ConciseBody\" params=\"In\">\n    <emu-nt params=\"In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"eofx7fcb\" id=\"prod-UOsd7muB\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, ~Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"b3uvs-pa\" id=\"prod-c6cxJePv\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExpressionBody\" params=\"In, Await\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ickgdpbs\"><emu-nt params=\"?In, ~Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, ~Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <p>When processing an instance of the production\n      <br>\n      <emu-production name=\"ArrowParameters\" params=\"Yield, Await\" a=\"parencover\" class=\" inline\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"parencover\" id=\"prod-K4CbCiCx\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> is refined using the following grammar:</p>\n    <emu-production name=\"ArrowFormalParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t1yas6ob\">\n        <emu-t>(</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n    <p>&#160;</p>\n    <emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"u1dc5ef3\" id=\"prod-YIoJOc1p\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"callcover\" id=\"prod-WTX_aban\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncConciseBody\" params=\"In\">\n    <emu-nt params=\"In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bpu3_ipt\" id=\"prod-Dfs5WPuP\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, +Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"bm-b5ose\" id=\"prod-Kq4Uu2cU\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yuozsg2r\" id=\"prod-cDxY5q2J\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"90e-xzcw\" id=\"prod-HT-vtkeW\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MemberExpression\">MemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <p>When processing an instance of the production\n      <br>\n      <emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\" a=\"callcover\" class=\" inline\" collapsed=\"\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"callcover\" id=\"prod-WTX_aban\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs></emu-production>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is refined using the following grammar:</p>\n    <emu-production name=\"AsyncArrowHead\">\n    <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ydfl_ghb\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <p>&#160;</p>\n    <emu-production name=\"MethodDefinition\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zqbkmnaz\" id=\"prod-BMcTBp4V\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"uivm4t30\" id=\"prod-SKJRU3Gy\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"l4rbqexd\" id=\"prod-JrqfvaKq\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2nx0uygb\" id=\"prod-Cxt3DfG5\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"jjr3zjnj\" id=\"prod-SnKN_cew\">\n        <emu-t>get</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"lrypae2k\" id=\"prod-nWs7csn9\">\n        <emu-t>set</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"PropertySetParameterList\">\n    <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"p0ls10ix\" id=\"prod-4-xtlU1r\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorMethod\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s6ntmoac\" id=\"prod-8GV2khgE\">\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"56abocni\" id=\"prod-oJNsRhfl\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"gcxlonl8\" constraints=\"+Default\" id=\"prod-bWfHg6Xe\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorExpression\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zsu4etlj\" id=\"prod-haubt72j\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorBody\">\n    <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"quvqn30c\" id=\"prod-UaNDUTMe\"><emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"YieldExpression\" params=\"In, Await\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-YieldExpression\">YieldExpression</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\"><emu-t>yield</emu-t></emu-rhs>\n    <emu-rhs a=\"alznzlpx\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"mrbi6v84\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorMethod\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bojlwy10\" id=\"prod-ceV74b-L\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vxevrvwx\" id=\"prod-cOKIJmRw\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"zdnckwse\" constraints=\"+Default\" id=\"prod-1L17zU6t\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorExpression\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yh0wbqjf\" id=\"prod-s18yr2Ij\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorBody\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zqmkrekv\" id=\"prod-47HC640n\"><emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncFunctionDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"9rildsyw\" id=\"prod-iAuKx0s9\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"_vbcugdo\" constraints=\"+Default\" id=\"prod-TaHP58mu\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncFunctionExpression\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mviccgpw\" id=\"prod-LFCRNt3l\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncMethod\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tzooi3sy\" id=\"prod-80co-gZ6\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncFunctionBody\">\n    <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j_tcfidx\" id=\"prod-WjFwGBMF\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"AwaitExpression\" params=\"Yield\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AwaitExpression\">AwaitExpression</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wzxw5xwu\">\n        <emu-t>await</emu-t>\n        <emu-nt params=\"?Yield, +Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"r-8ix7mw\" id=\"prod-kd27yk51\">\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"eish3c1z\" constraints=\"+Default\" id=\"prod-bStNnwN_\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassExpression\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassExpression\">ClassExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"3vemrlhb\" id=\"prod-Vthx67sj\">\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassTail\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0tcpjpju\" id=\"prod-mIr25y7h\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassHeritage\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"eyngn05c\">\n        <emu-t>extends</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassBody\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hi6rf-a8\" id=\"prod-YUQCWiaa\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassElementList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"l7zmtagw\" id=\"prod-ADR6-dWZ\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ga1dtfdq\" id=\"prod-sKhHHXFQ\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassElement\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ke2_9p84\" id=\"prod-Qf4HAgqR\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"a0i06csv\" id=\"prod-0XtyXojL\">\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"guxzmt6t\" id=\"prod-RVH9JhqU\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"w56q4hpj\" id=\"prod-8cGH1X5O\">\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"sg2sawim\" id=\"prod-0Xskgzt4\"><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FieldDefinition\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tlc4azd3\" id=\"prod-qdC94hXo\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassElementName\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jbcjyldj\" id=\"prod-G9YdmiD5\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ie2-zc1c\" id=\"prod-BPUn8Lt3\"><emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-definefield": {"num": "7.3.31", "title": "#sec-definefield DefineField ( receiver, fieldRecord )", "html": "<emu-clause id=\"sec-definefield\" aoid=\"DefineField\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-definefield\">#sec-definefield</span> DefineField ( <var>receiver</var>, <var>fieldRecord</var> )</h1>\n      <p>The abstract operation DefineField takes arguments <var>receiver</var> (an Object) and <var>fieldRecord</var> (a <emu-xref href=\"#sec-classfielddefinition-record-specification-type\"><a href=\"#sec-classfielddefinition-record-specification-type\">ClassFieldDefinition Record</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>fieldName</var> be <var>fieldRecord</var>.[[Name]].</li><li>Let <var>initializer</var> be <var>fieldRecord</var>.[[Initializer]].</li><li>If <var>initializer</var> is not <emu-const>empty</emu-const>, then<ol><li>Let <var>initValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>initializer</var>, <var>receiver</var>).</li></ol></li><li>Else, let <var>initValue</var> be <emu-val>undefined</emu-val>.</li><li>If <var>fieldName</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"PrivateFieldAdd\"><a href=\"#sec-privatefieldadd\">PrivateFieldAdd</a></emu-xref>(<var>fieldName</var>, <var>receiver</var>, <var>initValue</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>fieldName</var>) is <emu-val>true</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>receiver</var>, <var>fieldName</var>, <var>initValue</var>).</li></ol></li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-class-definitions-runtime-semantics-evaluation": {"num": "15.7.14", "title": "#sec-class-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-class-definitions-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions-runtime-semantics-evaluation\">#sec-class-definitions-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tusuwhcv\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Perform ? <emu-xref aoid=\"BindingClassDeclarationEvaluation\"><a href=\"#sec-runtime-semantics-bindingclassdeclarationevaluation\">BindingClassDeclarationEvaluation</a></emu-xref> of this <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> only occurs as part of an <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> and is never directly evaluated.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"ClassExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <emu-val>undefined</emu-val> and <emu-val>\"\"</emu-val>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tusuwhcv\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>className</var> be <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <var>className</var> and <var>className</var>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassElementName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ie2-zc1c\"><emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>privateIdentifier</var> be <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt>.</li><li>Let <var>privateEnvRec</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>names</var> be <var>privateEnvRec</var>.[[Names]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Exactly one element of <var>names</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] is <var>privateIdentifier</var>.</li><li>Let <var>privateName</var> be the <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> in <var>names</var> whose [[Description]] is <var>privateIdentifier</var>.</li><li>Return <var>privateName</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-runtime-semantics-classfielddefinitionevaluation": {"num": "15.7.10", "title": "#sec-runtime-semantics-classfielddefinitionevaluation Runtime Semantics: ClassFieldDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-classfielddefinitionevaluation\" type=\"sdo\" aoid=\"ClassFieldDefinitionEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-classfielddefinitionevaluation\">#sec-runtime-semantics-classfielddefinitionevaluation</span> Runtime Semantics: ClassFieldDefinitionEvaluation</h1>\n\n      <p>With parameter <var>homeObject</var>.</p>\n\n      <emu-grammar><emu-production name=\"FieldDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rqzzdcte\" id=\"prod-deOh_-BS\">\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>name</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>name</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>formalParameterList</var> be an instance of the production <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>.</li><li>Let <var>scope</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the empty sequence of Unicode code points.</li><li>Let <var>initializer</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>, <var>sourceText</var>, <var>formalParameterList</var>, <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>initializer</var>, <var>homeObject</var>).</li><li>Set <var>initializer</var>.[[ClassFieldInitializerName]] to <var>name</var>.</li></ol></li><li>Else,<ol><li>Let <var>initializer</var> be <emu-const>empty</emu-const>.</li></ol></li><li>Return the <emu-xref href=\"#sec-classfielddefinition-record-specification-type\"><a href=\"#sec-classfielddefinition-record-specification-type\">ClassFieldDefinition Record</a></emu-xref> { [[Name]]: <var>name</var>, [[Initializer]]: <var>initializer</var> }.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        The function created for <var>initializer</var> is never directly accessible to ECMAScript code.\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-runtime-semantics-bindingclassdeclarationevaluation": {"num": "15.7.13", "title": "#sec-runtime-semantics-bindingclassdeclarationevaluation Runtime Semantics: BindingClassDeclarationEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-bindingclassdeclarationevaluation\" type=\"sdo\" aoid=\"BindingClassDeclarationEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-bindingclassdeclarationevaluation\">#sec-runtime-semantics-bindingclassdeclarationevaluation</span> Runtime Semantics: BindingClassDeclarationEvaluation</h1>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tusuwhcv\" id=\"prod-JmEOsNvO\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>className</var> be <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <var>className</var> and <var>className</var>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>env</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeBoundName\"><a href=\"#sec-initializeboundname\">InitializeBoundName</a></emu-xref>(<var>className</var>, <var>value</var>, <var>env</var>).</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\" id=\"prod-qOUNT0OA\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <emu-val>undefined</emu-val> and <emu-val>\"default\"</emu-val>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> only occurs as part of an <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> and establishing its binding is handled as part of the evaluation action for that production. See <emu-xref href=\"#sec-exports-runtime-semantics-evaluation\"><a href=\"#sec-exports-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-exports-runtime-semantics-evaluation\">#sec-exports-runtime-semantics-evaluation</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-well-known-symbols": {"num": "6.1.5.1", "title": "#sec-well-known-symbols Well-Known Symbols", "html": "<emu-clause id=\"sec-well-known-symbols\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-symbols\">#sec-well-known-symbols</span> Well-Known Symbols</h1>\n        <p>Well-known symbols are built-in Symbol values that are explicitly referenced by algorithms of this specification. They are typically used as the keys of properties whose values serve as extension points of a specification algorithm. Unless otherwise specified, well-known symbols values are shared by all realms (<emu-xref href=\"#sec-code-realms\"><a href=\"#sec-code-realms\" class=\"excluded-xref\" excluded-id=\"sec-code-realms\">#sec-code-realms</a></emu-xref>).</p>\n        <p>Within this specification a well-known symbol is referred to by using a notation of the form @@name, where &#8220;name&#8221; is one of the values listed in <emu-xref href=\"#table-well-known-symbols\"><a href=\"#table-well-known-symbols\" class=\"excluded-xref\" excluded-id=\"table-well-known-symbols\">#table-well-known-symbols</a></emu-xref>.</p>\n        <emu-table id=\"table-well-known-symbols\" caption=\"Well-known Symbols\" oldids=\"table-1\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-well-known-symbols\">#table-well-known-symbols</span>: Well-known Symbols</figcaption><span id=\"table-1\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Specification Name\n              </th>\n              <th>\n                [[Description]]\n              </th>\n              <th>\n                Value and Purpose\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@asyncIterator</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.asyncIterator\"</emu-val>\n              </td>\n              <td>\n                A method that returns the default AsyncIterator for an object. Called by the semantics of the <code>for</code>-<code>await</code>-<code>of</code> statement.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@hasInstance</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.hasInstance\"</emu-val>\n              </td>\n              <td>\n                A method that determines if a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> object recognizes an object as one of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s instances. Called by the semantics of the <code>instanceof</code> operator.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@isConcatSpreadable</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.isConcatSpreadable\"</emu-val>\n              </td>\n              <td>\n                A Boolean valued property that if true indicates that an object should be flattened to its array elements by <emu-xref href=\"#sec-array.prototype.concat\"><a href=\"#sec-array.prototype.concat\"><code>Array.prototype.concat</code></a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@iterator</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.iterator\"</emu-val>\n              </td>\n              <td>\n                A method that returns the default Iterator for an object. Called by the semantics of the for-of statement.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@match</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.match\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that matches the regular expression against a string. Called by the <emu-xref href=\"#sec-string.prototype.match\"><a href=\"#sec-string.prototype.match\"><code>String.prototype.match</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@matchAll</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.matchAll\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that returns an iterator, that yields matches of the regular expression against a string. Called by the <emu-xref href=\"#sec-string.prototype.matchall\"><a href=\"#sec-string.prototype.matchall\"><code>String.prototype.matchAll</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@replace</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.replace\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that replaces matched substrings of a string. Called by the <emu-xref href=\"#sec-string.prototype.replace\"><a href=\"#sec-string.prototype.replace\"><code>String.prototype.replace</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@search</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.search\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that returns the index within a string that matches the regular expression. Called by the <emu-xref href=\"#sec-string.prototype.search\"><a href=\"#sec-string.prototype.search\"><code>String.prototype.search</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@species</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.species\"</emu-val>\n              </td>\n              <td>\n                A function valued property that is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is used to create derived objects.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@split</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.split\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that splits a string at the indices that match the regular expression. Called by the <emu-xref href=\"#sec-string.prototype.split\"><a href=\"#sec-string.prototype.split\"><code>String.prototype.split</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@toPrimitive</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.toPrimitive\"</emu-val>\n              </td>\n              <td>\n                A method that converts an object to a corresponding primitive value. Called by the <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> abstract operation.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@toStringTag</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.toStringTag\"</emu-val>\n              </td>\n              <td>\n                A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\"><code>Object.prototype.toString</code></a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@unscopables</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.unscopables\"</emu-val>\n              </td>\n              <td>\n                An object valued property whose own and inherited property names are property names that are excluded from the <code>with</code> environment bindings of the associated object.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-runtime-semantics-methoddefinitionevaluation": {"num": "15.4.5", "title": "#sec-runtime-semantics-methoddefinitionevaluation Runtime Semantics: MethodDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-methoddefinitionevaluation\" oldids=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation,sec-generator-function-definitions-runtime-semantics-propertydefinitionevaluation,sec-asyncgenerator-definitions-propertydefinitionevaluation,sec-async-function-definitions-PropertyDefinitionEvaluation\" type=\"sdo\" aoid=\"MethodDefinitionEvaluation\"><span id=\"sec-async-function-definitions-PropertyDefinitionEvaluation\"></span><span id=\"sec-asyncgenerator-definitions-propertydefinitionevaluation\"></span><span id=\"sec-generator-function-definitions-runtime-semantics-propertydefinitionevaluation\"></span><span id=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-methoddefinitionevaluation\">#sec-runtime-semantics-methoddefinitionevaluation</span> Runtime Semantics: MethodDefinitionEvaluation</h1>\n      <p>With parameters <var>object</var> and <var>enumerable</var>.</p>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f2ayx1_q\" id=\"prod-w_uDCOXP\">\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>methodDef</var> be ? <emu-xref aoid=\"DefineMethod\"><a href=\"#sec-runtime-semantics-definemethod\">DefineMethod</a></emu-xref> of <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> with argument <var>object</var>.</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>methodDef</var>.[[Key]], <var>object</var>, <var>methodDef</var>.[[Closure]], <var>enumerable</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s7vk7pda\" id=\"prod-JtMhObe9\">\n        <emu-t>get</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>.</li><li>Let <var>formalParameterList</var> be an instance of the production <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>, <var>sourceText</var>, <var>formalParameterList</var>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>, <emu-val>\"get\"</emu-val>).</li><li>If <var>propKey</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Return <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>propKey</var>, [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <var>closure</var>, [[Set]]: <emu-val>undefined</emu-val> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Get]]: <var>closure</var>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>object</var>, <var>propKey</var>, <var>desc</var>).</li><li>Return <emu-const>empty</emu-const>.</li></ol></li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"lbu40xzc\" id=\"prod-tr90svxc\">\n        <emu-t>set</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>, <emu-val>\"set\"</emu-val>).</li><li>If <var>propKey</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Return <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>propKey</var>, [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <emu-val>undefined</emu-val>, [[Set]]: <var>closure</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Set]]: <var>closure</var>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>object</var>, <var>propKey</var>, <var>desc</var>).</li><li>Return <emu-const>empty</emu-const>.</li></ol></li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e6yupcp1\" id=\"prod-qDk-XFAF\">\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%GeneratorFunction.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>).</li><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>closure</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>propKey</var>, <var>object</var>, <var>closure</var>, <var>enumerable</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2edb8sar\" id=\"prod-lPECR135\">\n        <emu-t>async</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt>.</li><li>Let <var>closure</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGeneratorFunction.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform !&#160;<emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>).</li><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>closure</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>propKey</var>, <var>object</var>, <var>closure</var>, <var>enumerable</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cfy3_9l8\" id=\"prod-a75_jVUN\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt>.</li><li>Let <var>closure</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunction.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform !&#160;<emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>propKey</var>, <var>object</var>, <var>closure</var>, <var>enumerable</var>).</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-definemethodproperty": {"num": "10.2.8", "title": "#sec-definemethodproperty DefineMethodProperty ( key, homeObject, closure, enumerable )", "html": "<emu-clause id=\"sec-definemethodproperty\" aoid=\"DefineMethodProperty\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-definemethodproperty\">#sec-definemethodproperty</span> DefineMethodProperty ( <var>key</var>, <var>homeObject</var>, <var>closure</var>, <var>enumerable</var> )</h1>\n      <p>The abstract operation DefineMethodProperty takes arguments <var>key</var> (a property key or <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>), <var>homeObject</var> (an Object), <var>closure</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>), and <var>enumerable</var> (a Boolean). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>key</var>).</li><li>If <var>key</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Return <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>key</var>, [[Kind]]: <emu-const>method</emu-const>, [[Value]]: <var>closure</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>closure</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>homeObject</var>, <var>key</var>, <var>desc</var>).</li><li>Return <emu-const>empty</emu-const>.</li></ol></li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-initializeinstanceelements": {"num": "7.3.32", "title": "#sec-initializeinstanceelements InitializeInstanceElements ( O, constructor )", "html": "<emu-clause id=\"sec-initializeinstanceelements\" aoid=\"InitializeInstanceElements\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializeinstanceelements\">#sec-initializeinstanceelements</span> InitializeInstanceElements ( <var>O</var>, <var>constructor</var> )</h1>\n      <p>The abstract operation InitializeInstanceElements takes arguments <var>O</var> (an Object) and <var>constructor</var> (an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>methods</var> be the value of <var>constructor</var>.[[PrivateMethods]].</li><li>For each <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> <var>method</var> of <var>methods</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"PrivateMethodOrAccessorAdd\"><a href=\"#sec-privatemethodoraccessoradd\">PrivateMethodOrAccessorAdd</a></emu-xref>(<var>method</var>, <var>O</var>).</li></ol></li><li>Let <var>fields</var> be the value of <var>constructor</var>.[[Fields]].</li><li>For each element <var>fieldRecord</var> of <var>fields</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"DefineField\"><a href=\"#sec-definefield\">DefineField</a></emu-xref>(<var>O</var>, <var>fieldRecord</var>).</li></ol></li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-static-semantics-classelementevaluation": {"num": "15.7.11", "title": "#sec-static-semantics-classelementevaluation Runtime Semantics: ClassElementEvaluation", "html": "<emu-clause id=\"sec-static-semantics-classelementevaluation\" type=\"sdo\" aoid=\"ClassElementEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-classelementevaluation\">#sec-static-semantics-classelementevaluation</span> Runtime Semantics: ClassElementEvaluation</h1>\n      <p>With parameters <var>object</var> and <var>enumerable</var>.</p>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bwbyf1-5\" id=\"prod-tPq9hD-G\">\n        <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cpyv1xvc\" id=\"prod-Cn1oLmsN\">\n        <emu-t>static</emu-t>\n        <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ClassFieldDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classfielddefinitionevaluation\">ClassFieldDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt> with argument <var>object</var>.</li></ol></emu-alg>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s8ilfl9g\" id=\"prod-Qe_eKZ3f\"><emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"-ljgtrpo\" id=\"prod-DNhqQKHO\">\n        <emu-t>static</emu-t>\n        <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"MethodDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-methoddefinitionevaluation\">MethodDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> with arguments <var>object</var> and <var>enumerable</var>.</li></ol></emu-alg>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sg2sawim\" id=\"prod-V88LvFxI\"><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-runtime-semantics-namedevaluation": {"num": "8.3.5", "title": "#sec-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-namedevaluation\" oldids=\"sec-grouping-operator-runtime-semantics-namedevaluation,sec-function-definitions-runtime-semantics-namedevaluation,sec-arrow-function-definitions-runtime-semantics-namedevaluation,sec-generator-function-definitions-runtime-semantics-namedevaluation,sec-asyncgenerator-definitions-namedevaluation,sec-class-definitions-runtime-semantics-namedevaluation,sec-async-function-definitions-runtime-semantics-namedevaluation,sec-async-arrow-function-definitions-runtime-semantics-namedevaluation\" type=\"sdo\" aoid=\"NamedEvaluation\"><span id=\"sec-async-arrow-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-async-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-class-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-asyncgenerator-definitions-namedevaluation\"></span><span id=\"sec-generator-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-arrow-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-grouping-operator-runtime-semantics-namedevaluation\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-namedevaluation\">#sec-runtime-semantics-namedevaluation</span> Runtime Semantics: NamedEvaluation</h1>\n      <p>With parameter <var>name</var>.</p>\n      <emu-grammar><emu-production name=\"PrimaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PrimaryExpression\">PrimaryExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yrb110hm\" id=\"prod-mytcbPJI\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>expr</var> be the <emu-nt><a href=\"#prod-ParenthesizedExpression\">ParenthesizedExpression</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return the result of performing <emu-xref aoid=\"NamedEvaluation\"><a href=\"#sec-runtime-semantics-namedevaluation\">NamedEvaluation</a></emu-xref> for <var>expr</var> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ParenthesizedExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ParenthesizedExpression\">ParenthesizedExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s6bvnd5v\" id=\"prod-Q_6y5mca\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>) is <emu-val>true</emu-val>.</li><li>Return the result of performing <emu-xref aoid=\"NamedEvaluation\"><a href=\"#sec-runtime-semantics-namedevaluation\">NamedEvaluation</a></emu-xref> for <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"smus6qca\" id=\"prod-pLzR2hGq\">\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateOrdinaryFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateordinaryfunctionexpression\">InstantiateOrdinaryFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dsczygsq\" id=\"prod--NqycDNV\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateGeneratorFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiategeneratorfunctionexpression\">InstantiateGeneratorFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xruu4gg0\" id=\"prod-2hHyfg58\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateAsyncGeneratorFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression\">InstantiateAsyncGeneratorFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"agdmcdye\" id=\"prod-WZTY8BeC\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateAsyncFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateasyncfunctionexpression\">InstantiateAsyncFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ieeod2mi\" id=\"prod-2_XE6Qur\">\n        <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateArrowFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiatearrowfunctionexpression\">InstantiateArrowFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dqxgopsb\" id=\"prod-acGpB7So\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"auwv8gbh\" id=\"prod-AntIZd-c\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateAsyncArrowFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateasyncarrowfunctionexpression\">InstantiateAsyncArrowFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\" id=\"prod-_NxRxZOJ\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>value</var> be the result of <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <emu-val>undefined</emu-val> and <var>name</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>value</var>).</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-operations-on-objects": {"num": "7.3", "title": "#sec-operations-on-objects Operations on Objects", "html": "<emu-clause id=\"sec-operations-on-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-operations-on-objects\">#sec-operations-on-objects</span> Operations on Objects</h1>\n\n    <div id=\"excluded-sec-makebasicobject\"><h1><span class=\"secnum\">7.3.1</span>#sec-makebasicobject MakeBasicObject ( internalSlotsList )</h1>...</div><div id=\"excluded-sec-get-o-p\"><h1><span class=\"secnum\">7.3.2</span>#sec-get-o-p Get ( O, P )</h1>...</div><div id=\"excluded-sec-getv\"><h1><span class=\"secnum\">7.3.3</span>#sec-getv GetV ( V, P )</h1>...</div><div id=\"excluded-sec-set-o-p-v-throw\"><h1><span class=\"secnum\">7.3.4</span>#sec-set-o-p-v-throw Set ( O, P, V, Throw )</h1>...</div><div id=\"excluded-sec-createdataproperty\"><h1><span class=\"secnum\">7.3.5</span>#sec-createdataproperty CreateDataProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createmethodproperty\"><h1><span class=\"secnum\">7.3.6</span>#sec-createmethodproperty CreateMethodProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createdatapropertyorthrow\"><h1><span class=\"secnum\">7.3.7</span>#sec-createdatapropertyorthrow CreateDataPropertyOrThrow ( O, P, V )</h1>...</div><div id=\"excluded-sec-definepropertyorthrow\"><h1><span class=\"secnum\">7.3.8</span>#sec-definepropertyorthrow DefinePropertyOrThrow ( O, P, desc )</h1>...</div><div id=\"excluded-sec-deletepropertyorthrow\"><h1><span class=\"secnum\">7.3.9</span>#sec-deletepropertyorthrow DeletePropertyOrThrow ( O, P )</h1>...</div><div id=\"excluded-sec-getmethod\"><h1><span class=\"secnum\">7.3.10</span>#sec-getmethod GetMethod ( V, P )</h1>...</div><div id=\"excluded-sec-hasproperty\"><h1><span class=\"secnum\">7.3.11</span>#sec-hasproperty HasProperty ( O, P )</h1>...</div><div id=\"excluded-sec-hasownproperty\"><h1><span class=\"secnum\">7.3.12</span>#sec-hasownproperty HasOwnProperty ( O, P )</h1>...</div><div id=\"excluded-sec-call\"><h1><span class=\"secnum\">7.3.13</span>#sec-call Call ( F, V [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-construct\"><h1><span class=\"secnum\">7.3.14</span>#sec-construct Construct ( F [ , argumentsList [ , newTarget ] ] )</h1>...</div><div id=\"excluded-sec-setintegritylevel\"><h1><span class=\"secnum\">7.3.15</span>#sec-setintegritylevel SetIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-testintegritylevel\"><h1><span class=\"secnum\">7.3.16</span>#sec-testintegritylevel TestIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-createarrayfromlist\"><h1><span class=\"secnum\">7.3.17</span>#sec-createarrayfromlist CreateArrayFromList ( elements )</h1>...</div><div id=\"excluded-sec-lengthofarraylike\"><h1><span class=\"secnum\">7.3.18</span>#sec-lengthofarraylike LengthOfArrayLike ( obj )</h1>...</div><div id=\"excluded-sec-createlistfromarraylike\"><h1><span class=\"secnum\">7.3.19</span>#sec-createlistfromarraylike CreateListFromArrayLike ( obj [ , elementTypes ] )</h1>...</div><div id=\"excluded-sec-invoke\"><h1><span class=\"secnum\">7.3.20</span>#sec-invoke Invoke ( V, P [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-ordinaryhasinstance\"><h1><span class=\"secnum\">7.3.21</span>#sec-ordinaryhasinstance OrdinaryHasInstance ( C, O )</h1>...</div><div id=\"excluded-sec-speciesconstructor\"><h1><span class=\"secnum\">7.3.22</span>#sec-speciesconstructor SpeciesConstructor ( O, defaultConstructor )</h1>...</div><div id=\"excluded-sec-enumerableownpropertynames\"><h1><span class=\"secnum\">7.3.23</span>#sec-enumerableownpropertynames EnumerableOwnPropertyNames ( O, kind )</h1>...</div><div id=\"excluded-sec-getfunctionrealm\"><h1><span class=\"secnum\">7.3.24</span>#sec-getfunctionrealm GetFunctionRealm ( obj )</h1>...</div><div id=\"excluded-sec-copydataproperties\"><h1><span class=\"secnum\">7.3.25</span>#sec-copydataproperties CopyDataProperties ( target, source, excludedItems )</h1>...</div><div id=\"excluded-sec-privateelementfind\"><h1><span class=\"secnum\">7.3.26</span>#sec-privateelementfind PrivateElementFind ( P, O )</h1>...</div><div id=\"excluded-sec-privatefieldadd\"><h1><span class=\"secnum\">7.3.27</span>#sec-privatefieldadd PrivateFieldAdd ( P, O, value )</h1>...</div><div id=\"excluded-sec-privatemethodoraccessoradd\"><h1><span class=\"secnum\">7.3.28</span>#sec-privatemethodoraccessoradd PrivateMethodOrAccessorAdd ( method, O )</h1>...</div><div id=\"excluded-sec-privateget\"><h1><span class=\"secnum\">7.3.29</span>#sec-privateget PrivateGet ( P, O )</h1>...</div><div id=\"excluded-sec-privateset\"><h1><span class=\"secnum\">7.3.30</span>#sec-privateset PrivateSet ( P, O, value )</h1>...</div><div id=\"excluded-sec-definefield\"><h1><span class=\"secnum\">7.3.31</span>#sec-definefield DefineField ( receiver, fieldRecord )</h1>...</div><div id=\"excluded-sec-initializeinstanceelements\"><h1><span class=\"secnum\">7.3.32</span>#sec-initializeinstanceelements InitializeInstanceElements ( O, constructor )</h1>...</div></emu-clause>\n\n  "}, "sec-class-definitions": {"num": "15.7", "title": "#sec-class-definitions Class Definitions", "html": "<emu-clause id=\"sec-class-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions\">#sec-class-definitions</span> Class Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"ClassDeclaration\" params=\"Yield, Await, Default\" id=\"prod-ClassDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"r-8ix7mw\" id=\"prod-kd27yk51\">\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"eish3c1z\" constraints=\"+Default\" id=\"prod-bStNnwN_\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassExpression\" params=\"Yield, Await\" id=\"prod-ClassExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassExpression\">ClassExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"3vemrlhb\" id=\"prod-Vthx67sj\">\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassTail\" params=\"Yield, Await\" id=\"prod-ClassTail\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0tcpjpju\" id=\"prod-mIr25y7h\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassHeritage\" params=\"Yield, Await\" id=\"prod-ClassHeritage\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"eyngn05c\">\n        <emu-t>extends</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassBody\" params=\"Yield, Await\" id=\"prod-ClassBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hi6rf-a8\" id=\"prod-YUQCWiaa\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElementList\" params=\"Yield, Await\" id=\"prod-ClassElementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"l7zmtagw\" id=\"prod-ADR6-dWZ\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ga1dtfdq\" id=\"prod-sKhHHXFQ\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElement\" params=\"Yield, Await\" id=\"prod-ClassElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ke2_9p84\" id=\"prod-Qf4HAgqR\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"a0i06csv\" id=\"prod-0XtyXojL\">\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"guxzmt6t\" id=\"prod-RVH9JhqU\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"w56q4hpj\" id=\"prod-8cGH1X5O\">\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"sg2sawim\" id=\"prod-0Xskgzt4\"><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FieldDefinition\" params=\"Yield, Await\" id=\"prod-FieldDefinition\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tlc4azd3\" id=\"prod-qdC94hXo\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElementName\" params=\"Yield, Await\" id=\"prod-ClassElementName\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jbcjyldj\" id=\"prod-G9YdmiD5\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ie2-zc1c\" id=\"prod-BPUn8Lt3\"><emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>A class definition is always <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-class-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.7.1</span>#sec-class-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-classelementkind\"><h1><span class=\"secnum\">15.7.2</span>#sec-static-semantics-classelementkind Static Semantics: ClassElementKind</h1>...</div><div id=\"excluded-sec-static-semantics-constructormethod\"><h1><span class=\"secnum\">15.7.3</span>#sec-static-semantics-constructormethod Static Semantics: ConstructorMethod</h1>...</div><div id=\"excluded-sec-static-semantics-isstatic\"><h1><span class=\"secnum\">15.7.4</span>#sec-static-semantics-isstatic Static Semantics: IsStatic</h1>...</div><div id=\"excluded-sec-static-semantics-nonconstructorelements\"><h1><span class=\"secnum\">15.7.5</span>#sec-static-semantics-nonconstructorelements Static Semantics: NonConstructorElements</h1>...</div><div id=\"excluded-sec-static-semantics-prototypepropertynamelist\"><h1><span class=\"secnum\">15.7.6</span>#sec-static-semantics-prototypepropertynamelist Static Semantics: PrototypePropertyNameList</h1>...</div><div id=\"excluded-sec-static-semantics-allprivateidentifiersvalid\"><h1><span class=\"secnum\">15.7.7</span>#sec-static-semantics-allprivateidentifiersvalid Static Semantics: AllPrivateIdentifiersValid</h1>...</div><div id=\"excluded-sec-static-semantics-privateboundidentifiers\"><h1><span class=\"secnum\">15.7.8</span>#sec-static-semantics-privateboundidentifiers Static Semantics: PrivateBoundIdentifiers</h1>...</div><div id=\"excluded-sec-static-semantics-containsarguments\"><h1><span class=\"secnum\">15.7.9</span>#sec-static-semantics-containsarguments Static Semantics: ContainsArguments</h1>...</div><div id=\"excluded-sec-runtime-semantics-classfielddefinitionevaluation\"><h1><span class=\"secnum\">15.7.10</span>#sec-runtime-semantics-classfielddefinitionevaluation Runtime Semantics: ClassFieldDefinitionEvaluation</h1>...</div><div id=\"excluded-sec-static-semantics-classelementevaluation\"><h1><span class=\"secnum\">15.7.11</span>#sec-static-semantics-classelementevaluation Runtime Semantics: ClassElementEvaluation</h1>...</div><div id=\"excluded-sec-runtime-semantics-classdefinitionevaluation\"><h1><span class=\"secnum\">15.7.12</span>#sec-runtime-semantics-classdefinitionevaluation Runtime Semantics: ClassDefinitionEvaluation</h1>...</div><div id=\"excluded-sec-runtime-semantics-bindingclassdeclarationevaluation\"><h1><span class=\"secnum\">15.7.13</span>#sec-runtime-semantics-bindingclassdeclarationevaluation Runtime Semantics: BindingClassDeclarationEvaluation</h1>...</div><div id=\"excluded-sec-class-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.7.14</span>#sec-class-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cmjfjhkc\" id=\"prod-k7_ObWcc\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mn4pemzx\" id=\"prod-he3lY70e\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uvsblmsd\" id=\"prod-J1Dzjg4f\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ap7dhqxm\" id=\"prod-oFwa4ZD6\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"dd23jrxs\" id=\"prod-GXF21Ewo\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-0vrrEsBm\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ky6bsn7x\" id=\"prod-WCJmhvY4\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"unijm5xs\" id=\"prod-jXCkpXv4\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-WzAgO-V_\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"odcuzpbi\" id=\"prod-CDGJVPkq\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oi8izote\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"81tm-dw4\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"zfagpfvq\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"y9r1l58g\" id=\"prod-kEa0XgB6\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ih8rgsdx\" id=\"prod-wyOKxI9w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-XiX5S_vU\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-AScJop1Y\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SkqVKtrZ\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"g1js-lhi\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"bxjtogxx\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rev6es22\">\n        <emu-t>from</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"upllvvnq\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ggcfvgot\" id=\"prod-UCgvcMcb\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-5TmWi69r\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"onppcdhk\" id=\"prod-Pd4rUvEL\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-sCJUL89L\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bsylxsqy\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"awunbvdu\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"a8mbl6ic\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"0pjhun9m\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ridmvkht\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"4qwftn93\" id=\"prod-GUPXSqcT\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"dtcd7req\" id=\"prod-o48mDNgZ\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-JyH8gtYm\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qvusrr4h\" id=\"prod-HMTDwQcl\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-async-function-definitions": {"num": "15.8", "title": "#sec-async-function-definitions Async Function Definitions", "html": "<emu-clause id=\"sec-async-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</span> Async Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncFunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-AsyncFunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"9rildsyw\" id=\"prod-iAuKx0s9\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"_vbcugdo\" constraints=\"+Default\" id=\"prod-TaHP58mu\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" id=\"prod-AsyncFunctionExpression\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mviccgpw\" id=\"prod-LFCRNt3l\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncMethod\" params=\"Yield, Await\" id=\"prod-AsyncMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tzooi3sy\" id=\"prod-80co-gZ6\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionBody\" id=\"prod-AsyncFunctionBody\">\n    <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j_tcfidx\" id=\"prod-WjFwGBMF\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"AwaitExpression\" params=\"Yield\" id=\"prod-AwaitExpression\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AwaitExpression\">AwaitExpression</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wzxw5xwu\">\n        <emu-t>await</emu-t>\n        <emu-nt params=\"?Yield, +Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p><code>await</code> is parsed as an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> when the <sub>[Await]</sub> parameter is present. The <sub>[Await]</sub> parameter is present in the following contexts:</p>\n      <ul>\n        <li>In an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>. <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> in this position is a Syntax error via <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref>.</li>\n      </ul>\n      <p>When <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> and the <sub>[Await]</sub> parameter is absent, <code>await</code> is parsed as a <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> and will be a Syntax error. When <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>, <code>await</code> may be parsed as an identifier when the <sub>[Await]</sub> parameter is absent. This includes the following contexts:</p>\n      <ul>\n        <li>Anywhere outside of an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> or <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n      </ul>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>Unlike <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt>, it is a Syntax Error to omit the operand of an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt>. You must await something.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-async-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.8.1</span>#sec-async-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncfunctionobject\"><h1><span class=\"secnum\">15.8.2</span>#sec-runtime-semantics-instantiateasyncfunctionobject Runtime Semantics: InstantiateAsyncFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncfunctionexpression\"><h1><span class=\"secnum\">15.8.3</span>#sec-runtime-semantics-instantiateasyncfunctionexpression Runtime Semantics: InstantiateAsyncFunctionExpression</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluateasyncfunctionbody\"><h1><span class=\"secnum\">15.8.4</span>#sec-runtime-semantics-evaluateasyncfunctionbody Runtime Semantics: EvaluateAsyncFunctionBody</h1>...</div><div id=\"excluded-sec-async-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.8.5</span>#sec-async-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-runtime-semantics-classdefinitionevaluation": {"num": "15.7.12", "title": "#sec-runtime-semantics-classdefinitionevaluation Runtime Semantics: ClassDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-classdefinitionevaluation\" type=\"sdo\" aoid=\"ClassDefinitionEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-classdefinitionevaluation\">#sec-runtime-semantics-classdefinitionevaluation</span> Runtime Semantics: ClassDefinitionEvaluation</h1>\n      <p>With parameters <var>classBinding</var> and <var>className</var>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For ease of specification, private methods and accessors are included alongside private fields in the [[PrivateElements]] slot of class instances. However, any given object has either all or none of the private methods and accessors defined by a given class. This feature has been designed so that implementations may choose to implement private methods and accessors using a strategy which does not require tracking each method or accessor individually.</p>\n        <p>For example, an implementation could directly associate instance private methods with their corresponding <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> and track, for each object, which class constructors have run with that object as their <code>this</code> value. Looking up an instance private method on an object then consists of checking that the class <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> which defines the method has been used to initialize the object, then returning the method associated with the <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>.</p>\n        <p>This differs from private fields: because field initializers can throw during class instantiation, an individual object may have some proper subset of the private fields of a given class, and so private fields must in general be tracked individually.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"ClassTail\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uopqpdqx\" id=\"prod-AcPtObVs\">\n        <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>{</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>env</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>classScope</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>env</var>).</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.CreateImmutableBinding(<var>classBinding</var>, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>outerPrivateEnvironment</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>classPrivateEnvironment</var> be <emu-xref aoid=\"NewPrivateEnvironment\"><a href=\"#sec-newprivateenvironment\">NewPrivateEnvironment</a></emu-xref>(<var>outerPrivateEnvironment</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>For each String <var>dn</var> of the <emu-xref aoid=\"PrivateBoundIdentifiers\"><a href=\"#sec-static-semantics-privateboundidentifiers\">PrivateBoundIdentifiers</a></emu-xref> of <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>, do<ol><li>If <var>classPrivateEnvironment</var>.[[Names]] contains a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] is <var>dn</var>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is only possible for getter/setter pairs.</li></ol></li><li>Else,<ol><li>Let <var>name</var> be a new <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] value is <var>dn</var>.</li><li>Append <var>name</var> to <var>classPrivateEnvironment</var>.[[Names]].</li></ol></li></ol></li></ol></li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, then<ol><li>Let <var>protoParent</var> be <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else,<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>NOTE: The <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment is <var>outerPrivateEnvironment</var> when evaluating <emu-nt><a href=\"#prod-ClassHeritage\">ClassHeritage</a></emu-nt>.</li><li>Let <var>superclassRef</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassHeritage\">ClassHeritage</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Let <var>superclass</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>superclassRef</var>).</li><li>If <var>superclass</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>protoParent</var> be <emu-val>null</emu-val>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else if <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>superclass</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Else,<ol><li>Let <var>protoParent</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>superclass</var>, <emu-val>\"prototype\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>protoParent</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorParent</var> be <var>superclass</var>.</li></ol></li></ol></li><li>Let <var>proto</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>protoParent</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>constructor</var> be <emu-const>empty</emu-const>.</li><li>Else, let <var>constructor</var> be <emu-xref aoid=\"ConstructorMethod\"><a href=\"#sec-static-semantics-constructormethod\">ConstructorMethod</a></emu-xref> of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>classPrivateEnvironment</var>.</li><li>If <var>constructor</var> is <emu-const>empty</emu-const>, then<ol><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-default-constructor-functions\" title=\"\"><a href=\"#sec-default-constructor-functions\">Default Constructor Functions</a></emu-xref>.</li><li>Let <var>F</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, 0, <var>className</var>, &#171; [[ConstructorKind]], [[SourceText]] &#187;, <emu-const>empty</emu-const>, <var>constructorParent</var>).</li></ol></li><li>Else,<ol><li>Let <var>constructorInfo</var> be ! <emu-xref aoid=\"DefineMethod\"><a href=\"#sec-runtime-semantics-definemethod\">DefineMethod</a></emu-xref> of <var>constructor</var> with arguments <var>proto</var> and <var>constructorParent</var>.</li><li>Let <var>F</var> be <var>constructorInfo</var>.[[Closure]].</li><li>Perform !&#160;<emu-xref aoid=\"MakeClassConstructor\"><a href=\"#sec-makeclassconstructor\">MakeClassConstructor</a></emu-xref>(<var>F</var>).</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>className</var>).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>, <emu-val>false</emu-val>, <var>proto</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, set <var>F</var>.[[ConstructorKind]] to <emu-const>derived</emu-const>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateMethodProperty\"><a href=\"#sec-createmethodproperty\">CreateMethodProperty</a></emu-xref>(<var>proto</var>, <emu-val>\"constructor\"</emu-val>, <var>F</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>elements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Else, let <var>elements</var> be <emu-xref aoid=\"NonConstructorElements\"><a href=\"#sec-static-semantics-nonconstructorelements\">NonConstructorElements</a></emu-xref> of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>Let <var>instancePrivateMethods</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>staticPrivateMethods</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>instanceFields</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>staticFields</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <var>e</var> of <var>elements</var>, do<ol><li>If <emu-xref aoid=\"IsStatic\"><a href=\"#sec-static-semantics-isstatic\">IsStatic</a></emu-xref> of <var>e</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>field</var> be <emu-xref aoid=\"ClassElementEvaluation\"><a href=\"#sec-static-semantics-classelementevaluation\">ClassElementEvaluation</a></emu-xref> of <var>e</var> with arguments <var>proto</var> and <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>field</var> be <emu-xref aoid=\"ClassElementEvaluation\"><a href=\"#sec-static-semantics-classelementevaluation\">ClassElementEvaluation</a></emu-xref> of <var>e</var> with arguments <var>F</var> and <emu-val>false</emu-val>.</li></ol></li><li>If <var>field</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>outerPrivateEnvironment</var>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>field</var>).</li></ol></li><li>Set <var>field</var> to <var>field</var>.[[Value]].</li><li>If <var>field</var> is a <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>field</var>.[[Kind]] is either <emu-const>method</emu-const> or <emu-const>accessor</emu-const>.</li><li>If <emu-xref aoid=\"IsStatic\"><a href=\"#sec-static-semantics-isstatic\">IsStatic</a></emu-xref> of <var>e</var> is <emu-val>false</emu-val>, let <var>container</var> be <var>instancePrivateMethods</var>.</li><li>Else, let <var>container</var> be <var>staticPrivateMethods</var>.</li><li>If <var>container</var> contains a <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> whose [[Key]] is <var>field</var>.[[Key]], then<ol><li>Let <var>existing</var> be that <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>field</var>.[[Kind]] and <var>existing</var>.[[Kind]] are both <emu-const>accessor</emu-const>.</li><li>If <var>field</var>.[[Get]] is <emu-val>undefined</emu-val>, then<ol><li>Let <var>combined</var> be <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>field</var>.[[Key]], [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <var>existing</var>.[[Get]], [[Set]]: <var>field</var>.[[Set]] }.</li></ol></li><li>Else,<ol><li>Let <var>combined</var> be <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>field</var>.[[Key]], [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <var>field</var>.[[Get]], [[Set]]: <var>existing</var>.[[Set]] }.</li></ol></li><li>Replace <var>existing</var> in <var>container</var> with <var>combined</var>.</li></ol></li><li>Else,<ol><li>Append <var>field</var> to <var>container</var>.</li></ol></li></ol></li><li>Else if <var>field</var> is a <emu-xref href=\"#sec-classfielddefinition-record-specification-type\"><a href=\"#sec-classfielddefinition-record-specification-type\">ClassFieldDefinition Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"IsStatic\"><a href=\"#sec-static-semantics-isstatic\">IsStatic</a></emu-xref> of <var>e</var> is <emu-val>false</emu-val>, append <var>field</var> to <var>instanceFields</var>.</li><li>Else, append <var>field</var> to <var>staticFields</var>.</li></ol></li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.InitializeBinding(<var>classBinding</var>, <var>F</var>).</li></ol></li><li>Set <var>F</var>.[[PrivateMethods]] to <var>instancePrivateMethods</var>.</li><li>Set <var>F</var>.[[Fields]] to <var>instanceFields</var>.</li><li>For each <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> <var>method</var> of <var>staticPrivateMethods</var>, do<ol><li>Perform !&#160;<emu-xref aoid=\"PrivateMethodOrAccessorAdd\"><a href=\"#sec-privatemethodoraccessoradd\">PrivateMethodOrAccessorAdd</a></emu-xref>(<var>method</var>, <var>F</var>).</li></ol></li><li>For each element <var>fieldRecord</var> of <var>staticFields</var>, do<ol><li>Let <var>result</var> be <emu-xref aoid=\"DefineField\"><a href=\"#sec-definefield\">DefineField</a></emu-xref>(<var>F</var>, <var>fieldRecord</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>outerPrivateEnvironment</var>.</li><li>Return <var>result</var>.</li></ol></li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>outerPrivateEnvironment</var>.</li><li>Return <var>F</var>.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-default-constructor-functions\"><h1><span class=\"secnum\">15.7.12.1</span>#sec-default-constructor-functions Default Constructor Functions</h1>...</div></emu-clause>\n\n    "}, "sec-classfielddefinition-record-specification-type": {"num": "6.2.10", "title": "#sec-classfielddefinition-record-specification-type The ClassFieldDefinition Record Specification Type", "html": "<emu-clause id=\"sec-classfielddefinition-record-specification-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-classfielddefinition-record-specification-type\">#sec-classfielddefinition-record-specification-type</span> The ClassFieldDefinition Record Specification Type</h1>\n      <p>The ClassFieldDefinition type is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> used in the specification of class fields.</p>\n      <p>Values of the ClassFieldDefinition type are <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> values whose fields are defined by <emu-xref href=\"#table-classfielddefinition-fields\"><a href=\"#table-classfielddefinition-fields\" class=\"excluded-xref\" excluded-id=\"table-classfielddefinition-fields\">#table-classfielddefinition-fields</a></emu-xref>. Such values are referred to as <dfn>ClassFieldDefinition Record</dfn>s.</p>\n      <emu-table id=\"table-classfielddefinition-fields\" caption=\"ClassFieldDefinition Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-classfielddefinition-fields\">#table-classfielddefinition-fields</span>: <emu-xref href=\"#sec-classfielddefinition-record-specification-type\"><a href=\"#sec-classfielddefinition-record-specification-type\">ClassFieldDefinition Record</a></emu-xref> Fields</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Field Name\n            </th>\n            <th>\n              Value\n            </th>\n            <th>\n              Meaning\n            </th>\n          </tr>\n          <tr>\n            <td>\n              [[Name]]\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, a String value, or a Symbol value.\n            </td>\n            <td>\n              The name of the field.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Initializer]]\n            </td>\n            <td>\n              an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, or <emu-const>empty</emu-const>\n            </td>\n            <td>\n              The initializer of the field, if any.\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions": {"num": "15.9", "title": "#sec-async-arrow-function-definitions Async Arrow Function Definitions", "html": "<emu-clause id=\"sec-async-arrow-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</span> Async Arrow Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\" id=\"prod-AsyncArrowFunction\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"u1dc5ef3\" id=\"prod-YIoJOc1p\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"callcover\" id=\"prod-WTX_aban\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncConciseBody\" params=\"In\" id=\"prod-AsyncConciseBody\">\n    <emu-nt params=\"In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bpu3_ipt\" id=\"prod-Dfs5WPuP\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, +Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"bm-b5ose\" id=\"prod-Kq4Uu2cU\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\" id=\"prod-AsyncArrowBindingIdentifier\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yuozsg2r\" id=\"prod-cDxY5q2J\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" params=\"Yield, Await\" id=\"prod-CoverCallExpressionAndAsyncArrowHead\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"90e-xzcw\" id=\"prod-HT-vtkeW\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MemberExpression\">MemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <h2>Supplemental Syntax</h2>\n    <p>When processing an instance of the production\n      <br>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"auwv8gbh\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is refined using the following grammar:</p>\n\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowHead\" id=\"prod-AsyncArrowHead\">\n    <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ydfl_ghb\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.9.1</span>#sec-async-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-asyncconcisebodycontainsusestrict\"><h1><span class=\"secnum\">15.9.2</span>#sec-static-semantics-asyncconcisebodycontainsusestrict Static Semantics: AsyncConciseBodyContainsUseStrict</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluateasyncconcisebody\"><h1><span class=\"secnum\">15.9.3</span>#sec-runtime-semantics-evaluateasyncconcisebody Runtime Semantics: EvaluateAsyncConciseBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncarrowfunctionexpression\"><h1><span class=\"secnum\">15.9.4</span>#sec-runtime-semantics-instantiateasyncarrowfunctionexpression Runtime Semantics: InstantiateAsyncArrowFunctionExpression</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.9.5</span>#sec-async-arrow-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-tail-position-calls": {"num": "15.10", "title": "#sec-tail-position-calls Tail Position Calls", "html": "<emu-clause id=\"sec-tail-position-calls\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tail-position-calls\">#sec-tail-position-calls</span> Tail Position Calls</h1>\n\n    <div id=\"excluded-sec-isintailposition\"><h1><span class=\"secnum\">15.10.1</span>#sec-isintailposition Static Semantics: IsInTailPosition ( call )</h1>...</div><div id=\"excluded-sec-static-semantics-hascallintailposition\"><h1><span class=\"secnum\">15.10.2</span>#sec-static-semantics-hascallintailposition Static Semantics: HasCallInTailPosition</h1>...</div><div id=\"excluded-sec-preparefortailcall\"><h1><span class=\"secnum\">15.10.3</span>#sec-preparefortailcall PrepareForTailCall ( )</h1>...</div></emu-clause>\n"}}, "figData": {"table-well-known-symbols": "Table 1", "table-classfielddefinition-fields": "Table 12", "table-internal-slots-of-ecmascript-function-objects": "Table 33"}}, "to": {"secList": ["sec-creategetmetadatafunction", "sec-makeautoaccessorgetter", "sec-ecmascript-function-objects", "sec-createfieldinitializerfunction", "sec-ecmascript-specification-types", "sec-exports", "sec-static-semantics-hascallintailposition", "sec-decoratorlistevaluation", "sec-ecmascript-language-functions-and-classes", "sec-defineelement", "sec-functions-and-classes", "sec-class-definitions-runtime-semantics-evaluation", "sec-createdecoratorcontextobject", "sec-runtime-semantics-classfielddefinitionevaluation", "sec-runtime-semantics-bindingclassdeclarationevaluation", "sec-decoratorevaluation", "sec-well-known-symbols", "sec-classelementdefinition-record-specification-type", "sec-createsetmetadatafunction", "sec-runtime-semantics-methoddefinitionevaluation", "sec-decorators", "sec-definemethodproperty", "sec-convertdecoratormetadatalisttoobject", "sec-initializeinstanceelements", "sec-static-semantics-classelementevaluation", "sec-createdecoratoraccessobject", "sec-class-definitions-static-semantics-methoddecorators", "sec-runtime-semantics-namedevaluation", "sec-operations-on-objects", "sec-class-definitions", "sec-scripts-and-modules", "sec-async-function-definitions", "sec-metadata-record-specification-type", "sec-runtime-semantics-classdefinitionevaluation", "sec-makeautoaccessorsetter", "sec-async-arrow-function-definitions", "sec-tail-position-calls"], "secData": {"sec-creategetmetadatafunction": {"num": "15.7.5", "title": "#sec-creategetmetadatafunction CreateGetMetadataFunction ( kind, metadataList, propertyKey )", "html": "<emu-clause id=\"sec-creategetmetadatafunction\" aoid=\"CreateGetMetadataFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-creategetmetadatafunction\">#sec-creategetmetadatafunction</span> CreateGetMetadataFunction ( <var>kind</var>, <var>metadataList</var>, <var>propertyKey</var> )</h1>\n      <p>\n        The abstract operation CreateGetMetadataFunction takes arguments <var>kind</var> (one of <emu-const>constructor</emu-const>, <emu-const>public</emu-const>, <emu-const>private</emu-const>), <var>metadataList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Metadata Records), and <var>propertyKey</var> (a String, Symbol, <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, or <emu-const>empty</emu-const>). It returns a function that can be used to define metadata on the passed in <var>metadataList</var>, and which is associated with the given <var>kind</var> and, if provided, <var>propertyKey</var>.\n      </p>\n      <emu-alg><ol><li>Let <var>steps</var> be the steps of a GetDecoratorMetadata function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of a GetDecoratorMetadata function as specified below.</li><li>Let <var>defineMetadata</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[Kind]], [[MetadataList]], [[PropertyKey]] &#187;).</li><li>Set <var>defineMetadata</var>.[[Kind]] to <var>kind</var>.</li><li>Set <var>defineMetadata</var>.[[MetadataList]] to <var>metadataList</var>.</li><li>Set <var>defineMetadata</var>.[[PropertyKey]] to <var>propertyKey</var>.</li><li>Return <var>defineMetadata</var>.</li></ol></emu-alg>\n      <p>A GetDecoratorMetadata function is an anonymous built-in function with [[Kind]], [[MetadataList]], and [[PropertyKey]] internal slots. When a GetDecoratorMetadata function is called with arguments <var>metadataKey</var> and <var>value</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>If <var>metadataKey</var> is not a Symbol, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>kind</var> be <var>f</var>.[[Kind]].</li><li>Let <var>metadataList</var> be <var>f</var>.[[MetadataList]].</li><li>Let <var>propertyKey</var> be <var>f</var>.[[PropertyKey]].</li><li>Let <var>metadataForKey</var> be the element in <var>metadataList</var> whose [[Key]] is the same as <var>metadataKey</var>.</li><li>If <var>metadataForKey</var> does not exist, return <emu-val>undefined</emu-val>.</li><li>If <var>kind</var> is <emu-const>constructor</emu-const>, then<ol><li>If <var>metadataForKey</var>.[[Constructor]] is <emu-const>empty</emu-const>, return <emu-val>undefined</emu-val>.</li><li>Return <var>metadataForKey</var>.[[Constructor]].</li></ol></li><li>If <var>kind</var> is <emu-const>public</emu-const>, then<ol><li>Let <var>publicMetadata</var> be the element in <var>metadataForKey</var>.[[Public]] whose [[Key]] is the same as <var>propertyKey</var>.</li><li>If <var>publicMetadata</var> does not exist, return <emu-val>undefined</emu-val>.</li><li>Return <var>publicMetadata</var>.[[Value]].</li></ol></li><li>If <var>kind</var> is <emu-const>private</emu-const>, then<ol><li>Let <var>privateMetadata</var> be the element in <var>metadataForKey</var>.[[Private]] whose [[Key]] is the same as <var>propertyKey</var>.</li><li>If <var>privateMetadata</var> does not exist, return <emu-val>undefined</emu-val>.</li><li>Return <var>privateMetadata</var>.[[Value]].</li></ol></li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-makeautoaccessorgetter": {"num": "15.8.12", "title": "#sec-makeautoaccessorgetter MakeAutoAccessorGetter ( name, privateStateName, homeObject )", "html": "<emu-clause id=\"sec-makeautoaccessorgetter\" aoid=\"MakeAutoAccessorGetter\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makeautoaccessorgetter\">#sec-makeautoaccessorgetter</span> MakeAutoAccessorGetter ( <var>name</var>, <var>privateStateName</var>, <var>homeObject</var> )</h1>\n      <p>The abstract operation MakeAutoAccessorGetter takes arguments <var>name</var>, <var>privateStateName</var>, and <var>homeObject</var>. It creates a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that when executed returns the value stored in the private field associated with <var>privateStateName</var> on the current <code>this</code> value of the function call. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>steps</var> be the steps of an AutoAccessorGetter function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of an AutoAccessorGetter function as specified below.</li><li>Let <var>getter</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[PrivateStateKey]] &#187;).</li><li>Set <var>getter</var>.[[PrivateStateKey]] to <var>privateStateName</var>.</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>getter</var>, <var>homeObject</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>getter</var>, <var>name</var>, <emu-val>\"get\"</emu-val>).</li><li>Return <var>getter</var>.</li></ol></emu-alg>\n      <p>An AutoAccessorGetter function is an anonymous built-in function with a [[PrivateStateKey]] internal slot. When an AutoAccessorGetter function that expects no arguments is called it performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>o</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Return ?&#160;<emu-xref aoid=\"PrivateGet\"><a href=\"#sec-privateget\">PrivateGet</a></emu-xref>(<var>f</var>.[[PrivateStateKey]], <var>o</var>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ecmascript-function-objects": {"num": "10.2", "title": "#sec-ecmascript-function-objects ECMAScript Function Objects", "html": "<emu-clause id=\"sec-ecmascript-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</span> ECMAScript Function Objects</h1>\n    <p>ECMAScript function objects encapsulate parameterized ECMAScript code closed over a lexical environment and support the dynamic evaluation of that code. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> and has the same internal slots and the same internal methods as other ordinary objects. The code of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> may be either <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\" class=\"excluded-xref\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</a></emu-xref>) or <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> whose code is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a <dfn id=\"strict-function\">strict function</dfn>. One whose code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a <dfn id=\"non-strict-function\">non-strict function</dfn>.</p>\n    <p>In addition to [[Extensible]] and [[Prototype]], ECMAScript function objects also have the internal slots listed in <emu-xref href=\"#table-internal-slots-of-ecmascript-function-objects\"><a href=\"#table-internal-slots-of-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</a></emu-xref>.</p>\n    <emu-table id=\"table-internal-slots-of-ecmascript-function-objects\" caption=\"Internal Slots of ECMAScript Function Objects\" oldids=\"table-27\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</span>: Internal Slots of ECMAScript Function Objects</figcaption><span id=\"table-27\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Internal Slot\n          </th>\n          <th>\n            Type\n          </th>\n          <th>\n            Description\n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[Environment]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>\n          </td>\n          <td>\n            The <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that the function was closed over. Used as the outer environment when evaluating the code of the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[PrivateEnvironment]]\n          </td>\n          <td>\n            <emu-xref href=\"#privateenvironment-record\"><a href=\"#privateenvironment-record\">PrivateEnvironment Record</a></emu-xref> | <emu-val>null</emu-val>\n          </td>\n          <td>\n            The <emu-xref href=\"#privateenvironment-record\"><a href=\"#privateenvironment-record\">PrivateEnvironment Record</a></emu-xref> for Private Names that the function was closed over. <emu-val>null</emu-val> if this function is not syntactically contained within a class. Used as the outer PrivateEnvironment for inner classes when evaluating the code of the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[FormalParameters]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          </td>\n          <td>\n            The root parse node of the source text that defines the function's formal parameter list.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ECMAScriptCode]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          </td>\n          <td>\n            The root parse node of the source text that defines the function's body.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ConstructorKind]]\n          </td>\n          <td>\n            <emu-const>base</emu-const> | <emu-const>derived</emu-const>\n          </td>\n          <td>\n            Whether or not the function is a derived class <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Realm]]\n          </td>\n          <td>\n            <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>\n          </td>\n          <td>\n            The <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> in which the function was created and which provides any intrinsic objects that are accessed when evaluating the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ScriptOrModule]]\n          </td>\n          <td>\n            <emu-xref href=\"#script-record\"><a href=\"#script-record\">Script Record</a></emu-xref> or <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>\n          </td>\n          <td>\n            The script or module in which the function was created.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ThisMode]]\n          </td>\n          <td>\n            <emu-const>lexical</emu-const> | <emu-const>strict</emu-const> | <emu-const>global</emu-const>\n          </td>\n          <td>\n            Defines how <code>this</code> references are interpreted within the formal parameters and code body of the function. <emu-const>lexical</emu-const> means that <code>this</code> refers to the <emu-val>this</emu-val> value of a lexically enclosing function. <emu-const>strict</emu-const> means that the <emu-val>this</emu-val> value is used exactly as provided by an invocation of the function. <emu-const>global</emu-const> means that a <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is interpreted as a reference to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, and any other <emu-val>this</emu-val> value is first passed to <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Strict]]\n          </td>\n          <td>\n            Boolean\n          </td>\n          <td>\n            <emu-val>true</emu-val> if this is a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>, <emu-val>false</emu-val> if this is a <emu-xref href=\"#non-strict-function\"><a href=\"#non-strict-function\">non-strict function</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HomeObject]]\n          </td>\n          <td>\n            Object\n          </td>\n          <td>\n            If the function uses <code>super</code>, this is the object whose [[GetPrototypeOf]] provides the object where <code>super</code> property lookups begin.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[SourceText]]\n          </td>\n          <td>\n            sequence of Unicode code points\n          </td>\n          <td>\n            The <emu-xref href=\"#sec-source-text\"><a href=\"#sec-source-text\">source text</a></emu-xref> that defines the function.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Elements]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ClassElementDefinition Records\n          </td>\n          <td>\n            If the function is a class, this is a list of Records representing the non-static elements and corresponding initializers of the class.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[PrivateMethods]]\n          </td>\n          <td>\n            <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of PrivateElements\n          </td>\n          <td>\n            If the function is a class, this is a list representing the non-static private methods and accessors of the class.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ClassFieldInitializerName]]\n          </td>\n          <td>\n            String | Symbol | <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> | <emu-const>empty</emu-const>\n          </td>\n          <td>\n            If the function is created as the initializer of a class field, the name to use for <emu-xref aoid=\"NamedEvaluation\"><a href=\"#sec-runtime-semantics-namedevaluation\">NamedEvaluation</a></emu-xref> of the field; <emu-const>empty</emu-const> otherwise.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[IsClassConstructor]]\n          </td>\n          <td>\n            Boolean\n          </td>\n          <td>\n            Indicates whether the function is a class <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. (If <emu-val>true</emu-val>, invoking the function's [[Call]] will immediately throw a <emu-val>TypeError</emu-val> exception.)\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>All ECMAScript function objects have the [[Call]] internal method defined here. ECMAScript functions that are also constructors in addition have the [[Construct]] internal method.</p>\n\n    <div id=\"excluded-sec-ecmascript-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">10.2.1</span>#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-ecmascript-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">10.2.2</span>#sec-ecmascript-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-ordinaryfunctioncreate\"><h1><span class=\"secnum\">10.2.3</span>#sec-ordinaryfunctioncreate OrdinaryFunctionCreate ( functionPrototype, sourceText, ParameterList, Body, thisMode, Scope, PrivateScope )</h1>...</div><div id=\"excluded-sec-addrestrictedfunctionproperties\"><h1><span class=\"secnum\">10.2.4</span>#sec-addrestrictedfunctionproperties AddRestrictedFunctionProperties ( F, realm )</h1>...</div><div id=\"excluded-sec-makeconstructor\"><h1><span class=\"secnum\">10.2.5</span>#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )</h1>...</div><div id=\"excluded-sec-makeclassconstructor\"><h1><span class=\"secnum\">10.2.6</span>#sec-makeclassconstructor MakeClassConstructor ( F )</h1>...</div><div id=\"excluded-sec-makemethod\"><h1><span class=\"secnum\">10.2.7</span>#sec-makemethod MakeMethod ( F, homeObject )</h1>...</div><div id=\"excluded-sec-definemethodproperty\"><h1><span class=\"secnum\">10.2.8</span>#sec-definemethodproperty DefineMethodProperty ( key, homeObject, closure, enumerable [ , decorators [ , metadataList [ , isStatic ] ] ] )</h1>...</div><div id=\"excluded-sec-setfunctionname\"><h1><span class=\"secnum\">10.2.9</span>#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )</h1>...</div><div id=\"excluded-sec-setfunctionlength\"><h1><span class=\"secnum\">10.2.10</span>#sec-setfunctionlength SetFunctionLength ( F, length )</h1>...</div><div id=\"excluded-sec-functiondeclarationinstantiation\"><h1><span class=\"secnum\">10.2.11</span>#sec-functiondeclarationinstantiation FunctionDeclarationInstantiation ( func, argumentsList )</h1>...</div></emu-clause>\n\n  "}, "sec-createfieldinitializerfunction": {"num": "15.8.11", "title": "#sec-createfieldinitializerfunction CreateFieldInitializerFunction ( propName, homeObject, Initializer )", "html": "<emu-clause id=\"sec-createfieldinitializerfunction\" aoid=\"CreateFieldInitializerFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createfieldinitializerfunction\">#sec-createfieldinitializerfunction</span> CreateFieldInitializerFunction ( <var>propName</var>, <var>homeObject</var>, <var>Initializer</var> )</h1>\n      <p>The abstract operation CreateFieldInitializerFunction takes arguments <var>propName</var>, <var>homeObject</var>, and <var>Initializer</var>. This operation returns a function. It takes the following steps:</p>\n      <emu-alg><ol><li>Let <var>formalParameterList</var> be an instance of the production <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>.</li><li>Let <var>scope</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the empty sequence of Unicode code points.</li><li>Let <var>initializer</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>, <var>sourceText</var>, <var>formalParameterList</var>, <var>Initializer</var>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>initializer</var>, <var>homeObject</var>).</li><li>Set <var>initializer</var>.[[ClassFieldInitializerName]] to <var>propName</var>.</li><li>Return <var>initializer</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ecmascript-specification-types": {"num": "6.2", "title": "#sec-ecmascript-specification-types ECMAScript Specification Types", "html": "<emu-clause id=\"sec-ecmascript-specification-types\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-specification-types\">#sec-ecmascript-specification-types</span> ECMAScript Specification Types</h1>\n    <p>A specification type corresponds to meta-values that are used within algorithms to describe the semantics of ECMAScript language constructs and ECMAScript language types. The specification types include Reference, <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>, <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>, <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>, <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref>, and <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Data Block</a></emu-xref>. Specification type values are specification artefacts that do not necessarily correspond to any specific entity within an ECMAScript implementation. Specification type values may be used to describe intermediate results of ECMAScript expression evaluation but such values cannot be stored as properties of objects or values of ECMAScript language variables.</p>\n\n    <div id=\"excluded-sec-list-and-record-specification-type\"><h1><span class=\"secnum\">6.2.1</span>#sec-list-and-record-specification-type The List and Record Specification Types</h1>...</div><div id=\"excluded-sec-set-and-relation-specification-type\"><h1><span class=\"secnum\">6.2.2</span>#sec-set-and-relation-specification-type The Set and Relation Specification Types</h1>...</div><div id=\"excluded-sec-completion-record-specification-type\"><h1><span class=\"secnum\">6.2.3</span>#sec-completion-record-specification-type The Completion Record Specification Type</h1>...</div><div id=\"excluded-sec-reference-record-specification-type\"><h1><span class=\"secnum\">6.2.4</span>#sec-reference-record-specification-type The Reference Record Specification Type</h1>...</div><div id=\"excluded-sec-property-descriptor-specification-type\"><h1><span class=\"secnum\">6.2.5</span>#sec-property-descriptor-specification-type The Property Descriptor Specification Type</h1>...</div><div id=\"excluded-sec-lexical-environment-and-environment-record-specification-types\"><h1><span class=\"secnum\">6.2.6</span>#sec-lexical-environment-and-environment-record-specification-types The Environment Record Specification Type</h1>...</div><div id=\"excluded-sec-abstract-closure\"><h1><span class=\"secnum\">6.2.7</span>#sec-abstract-closure The Abstract Closure Specification Type</h1>...</div><div id=\"excluded-sec-data-blocks\"><h1><span class=\"secnum\">6.2.8</span>#sec-data-blocks Data Blocks</h1>...</div><div id=\"excluded-sec-privateelement-specification-type\"><h1><span class=\"secnum\">6.2.9</span>#sec-privateelement-specification-type The PrivateElement Specification Type</h1>...</div><div id=\"excluded-sec-classelementdefinition-record-specification-type\"><h1><span class=\"secnum\">6.2.10</span>#sec-classelementdefinition-record-specification-type The ClassElementDefinition Record Specification Type</h1>...</div><div id=\"excluded-sec-metadata-record-specification-type\"><h1><span class=\"secnum\">6.2.11</span>#sec-metadata-record-specification-type The Metadata Record Specification Type</h1>...</div><div id=\"excluded-sec-private-names\"><h1><span class=\"secnum\">6.2.12</span>#sec-private-names Private Names</h1>...</div></emu-clause>\n"}, "sec-exports": {"num": "16.2.3", "title": "#sec-exports Exports", "html": "<emu-clause id=\"sec-exports\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports\">#sec-exports</span> Exports</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ExportDeclaration\" id=\"prod-ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"awunbvdu\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"a8mbl6ic\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"0pjhun9m\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ridmvkht\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"r5fy4tuz\" id=\"prod-hZQ57BEN\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t>, <emu-t>@</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportFromClause\" id=\"prod-ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"dtcd7req\" id=\"prod-o48mDNgZ\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NamedExports\" id=\"prod-NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportsList\" id=\"prod-ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExportSpecifier\" id=\"prod-ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-JyH8gtYm\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qvusrr4h\" id=\"prod-HMTDwQcl\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-exports-static-semantics-early-errors\"><h1><span class=\"secnum\">16.2.3.1</span>#sec-exports-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-exportedbindings\"><h1><span class=\"secnum\">16.2.3.2</span>#sec-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-static-semantics-exportednames\"><h1><span class=\"secnum\">16.2.3.3</span>#sec-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-static-semantics-exportentries\"><h1><span class=\"secnum\">16.2.3.4</span>#sec-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-static-semantics-exportentriesformodule\"><h1><span class=\"secnum\">16.2.3.5</span>#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule</h1>...</div><div id=\"excluded-sec-static-semantics-referencedbindings\"><h1><span class=\"secnum\">16.2.3.6</span>#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings</h1>...</div><div id=\"excluded-sec-exports-runtime-semantics-evaluation\"><h1><span class=\"secnum\">16.2.3.7</span>#sec-exports-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-static-semantics-hascallintailposition": {"num": "15.11.2", "title": "#sec-static-semantics-hascallintailposition Static Semantics: HasCallInTailPosition", "html": "<emu-clause id=\"sec-static-semantics-hascallintailposition\" type=\"sdo\" aoid=\"HasCallInTailPosition\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-hascallintailposition\">#sec-static-semantics-hascallintailposition</span> Static Semantics: HasCallInTailPosition</h1>\n      <p>With parameter <var>call</var>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><var>call</var> is a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> that represents a specific range of source text. When the following algorithms compare <var>call</var> to another <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, it is a test of whether they represent the same source text.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-statement-rules\"><h1><span class=\"secnum\">15.11.2.1</span>#sec-statement-rules Statement Rules</h1>...</div><div id=\"excluded-sec-expression-rules\"><h1><span class=\"secnum\">15.11.2.2</span>#sec-expression-rules Expression Rules</h1>...</div></emu-clause>\n\n    "}, "sec-decoratorlistevaluation": {"num": "15.7.2", "title": "#sec-decoratorlistevaluation Runtime Semantics: DecoratorListEvaluation", "html": "<emu-clause id=\"sec-decoratorlistevaluation\" type=\"sdo\" aoid=\"DecoratorListEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decoratorlistevaluation\">#sec-decoratorlistevaluation</span> Runtime Semantics: DecoratorListEvaluation</h1>\n      <emu-grammar><emu-production name=\"DecoratorList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"a6fvhq_2\" id=\"prod-nGBQ8NOv\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-Decorator\">Decorator</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt> is present, then<ol><li>Let <var>leftValue</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>leftValue</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></li><li>Let <var>rightValue</var> be ? <emu-xref aoid=\"DecoratorEvaluation\"><a href=\"#sec-decoratorevaluation\">DecoratorEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-Decorator\">Decorator</a></emu-nt>.</li><li>Prepend <var>rightValue</var> to <var>leftValue</var>.</li><li>Return <var>leftValue</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ecmascript-language-functions-and-classes": {"num": "15", "title": "#sec-ecmascript-language-functions-and-classes ECMAScript Language: Functions and Classes", "html": "<emu-clause id=\"sec-ecmascript-language-functions-and-classes\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-functions-and-classes\">#sec-ecmascript-language-functions-and-classes</span> ECMAScript Language: Functions and Classes</h1>\n  <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n    <p>Various ECMAScript language elements cause the creation of ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>). Evaluation of such functions starts with the execution of their [[Call]] internal method (<emu-xref href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\"><a href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</a></emu-xref>).</p>\n  </div></emu-note>\n\n  <div id=\"excluded-sec-parameter-lists\"><h1><span class=\"secnum\">15.1</span>#sec-parameter-lists Parameter Lists</h1>...</div><div id=\"excluded-sec-function-definitions\"><h1><span class=\"secnum\">15.2</span>#sec-function-definitions Function Definitions</h1>...</div><div id=\"excluded-sec-arrow-function-definitions\"><h1><span class=\"secnum\">15.3</span>#sec-arrow-function-definitions Arrow Function Definitions</h1>...</div><div id=\"excluded-sec-method-definitions\"><h1><span class=\"secnum\">15.4</span>#sec-method-definitions Method Definitions</h1>...</div><div id=\"excluded-sec-generator-function-definitions\"><h1><span class=\"secnum\">15.5</span>#sec-generator-function-definitions Generator Function Definitions</h1>...</div><div id=\"excluded-sec-async-generator-function-definitions\"><h1><span class=\"secnum\">15.6</span>#sec-async-generator-function-definitions Async Generator Function Definitions</h1>...</div><div id=\"excluded-sec-decorators\"><h1><span class=\"secnum\">15.7</span>#sec-decorators Decorators</h1>...</div><div id=\"excluded-sec-class-definitions\"><h1><span class=\"secnum\">15.8</span>#sec-class-definitions Class Definitions</h1>...</div><div id=\"excluded-sec-async-function-definitions\"><h1><span class=\"secnum\">15.9</span>#sec-async-function-definitions Async Function Definitions</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions\"><h1><span class=\"secnum\">15.10</span>#sec-async-arrow-function-definitions Async Arrow Function Definitions</h1>...</div><div id=\"excluded-sec-tail-position-calls\"><h1><span class=\"secnum\">15.11</span>#sec-tail-position-calls Tail Position Calls</h1>...</div></emu-clause>\n\n"}, "sec-defineelement": {"num": "7.3.31", "title": "#sec-defineelement DefineElement ( receiver, elementRecord )", "html": "<emu-clause id=\"sec-defineelement\" aoid=\"DefineElement\" oldids=\"sec-definefield\"><span id=\"sec-definefield\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-defineelement\">#sec-defineelement</span> DefineElement ( <var>receiver</var>, <var>elementRecord</var> )</h1>\n      <p>The abstract operation DefineElement takes arguments <var>receiver</var> (an Object) and <var>elementRecord</var> (a <emu-xref href=\"#sec-classelementdefinition-record-specification-type\"><a href=\"#sec-classelementdefinition-record-specification-type\">ClassElementDefinition Record</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>initializers</var> be <var>elementRecord</var>.[[Initializers]].</li><li>If <var>initializers</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, then<ol><li>If <var>elementRecord</var>.[[BackingStorageKey]] is present, let <var>fieldName</var> be <var>elementRecord</var>.[[BackingStorageKey]].</li><li>Else, let <var>fieldName</var> be <var>elementRecord</var>.[[Key]].</li><li>Let <var>initValue</var> be <emu-val>undefined</emu-val>.</li><li>For each element <var>initializer</var> of <var>initializers</var>, do<ol><li>Set <var>initValue</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>initializer</var>, <var>receiver</var>, &#171; <var>initValue</var> &#187;).</li></ol></li><li>If <var>fieldName</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"PrivateFieldAdd\"><a href=\"#sec-privatefieldadd\">PrivateFieldAdd</a></emu-xref>(<var>fieldName</var>, <var>receiver</var>, <var>initValue</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>fieldName</var>) is <emu-val>true</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>receiver</var>, <var>fieldName</var>, <var>initValue</var>).</li></ol></li></ol></li><li>Let <var>finisherInitializers</var> be <var>elementRecord</var>.[[FinisherInitializers]].</li><li>For each element <var>initializer</var> of <var>finisherInitializers</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>initializer</var>, <var>receiver</var>).</li></ol></li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-functions-and-classes": {"num": "A.4", "title": "#sec-functions-and-classes Functions and Classes", "html": "<emu-annex id=\"sec-functions-and-classes\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-functions-and-classes\">#sec-functions-and-classes</span> Functions and Classes</h1>\n    <emu-production name=\"UniqueFormalParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"kat5sugn\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FormalParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\" id=\"prod-X0L442RA\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"xs94btl2\" id=\"prod-eloVArBA\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5f3rxyqw\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"wdsulm_w\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"yh9ahvuw\" id=\"prod-aTWifksv\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FormalParameterList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"3qhu-4tu\" id=\"prod-TejDOk2p\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"mlncfkxh\" id=\"prod-7NFUmaIc\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionRestParameter\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iw2hthb9\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FormalParameter\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xpmoewcq\" id=\"prod-t4IFgCs2\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fal2s0ab\" id=\"prod-lEQdX6hk\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"_ww4ynxp\" constraints=\"+Default\" id=\"prod-eqpHaG0r\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"h6r9zk3c\" id=\"prod--zvLR38c\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionBody\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gljyayfs\" id=\"prod-CvdRIvQG\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"FunctionStatementList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ime6-pzo\" id=\"prod-jJULW0Hz\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ArrowFunction\" params=\"In, Yield, Await\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-ArrowFunction\">ArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c-igjs-g\" id=\"prod-AtXUMYu3\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ArrowParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ir-rfjfi\" id=\"prod-C8khN6EK\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"parencover\" id=\"prod-K4CbCiCx\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ConciseBody\" params=\"In\">\n    <emu-nt params=\"In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"eofx7fcb\" id=\"prod-UOsd7muB\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, ~Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"b3uvs-pa\" id=\"prod-c6cxJePv\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExpressionBody\" params=\"In, Await\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ickgdpbs\"><emu-nt params=\"?In, ~Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, ~Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <p>When processing an instance of the production\n      <br>\n      <emu-production name=\"ArrowParameters\" params=\"Yield, Await\" a=\"parencover\" class=\" inline\" collapsed=\"\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"parencover\" id=\"prod-K4CbCiCx\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> is refined using the following grammar:</p>\n    <emu-production name=\"ArrowFormalParameters\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t1yas6ob\">\n        <emu-t>(</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n    <p>&#160;</p>\n    <emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"u1dc5ef3\" id=\"prod-YIoJOc1p\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"callcover\" id=\"prod-WTX_aban\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncConciseBody\" params=\"In\">\n    <emu-nt params=\"In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bpu3_ipt\" id=\"prod-Dfs5WPuP\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, +Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"bm-b5ose\" id=\"prod-Kq4Uu2cU\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yuozsg2r\" id=\"prod-cDxY5q2J\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"90e-xzcw\" id=\"prod-HT-vtkeW\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MemberExpression\">MemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <p>When processing an instance of the production\n      <br>\n      <emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\" a=\"callcover\" class=\" inline\" collapsed=\"\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"callcover\" id=\"prod-WTX_aban\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs></emu-production>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is refined using the following grammar:</p>\n    <emu-production name=\"AsyncArrowHead\">\n    <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ydfl_ghb\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <p>&#160;</p>\n    <emu-production name=\"MethodDefinition\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zqbkmnaz\" id=\"prod-BMcTBp4V\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"uivm4t30\" id=\"prod-SKJRU3Gy\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"l4rbqexd\" id=\"prod-JrqfvaKq\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2nx0uygb\" id=\"prod-Cxt3DfG5\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"jjr3zjnj\" id=\"prod-SnKN_cew\">\n        <emu-t>get</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"lrypae2k\" id=\"prod-nWs7csn9\">\n        <emu-t>set</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"PropertySetParameterList\">\n    <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"p0ls10ix\" id=\"prod-4-xtlU1r\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorMethod\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s6ntmoac\" id=\"prod-8GV2khgE\">\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"56abocni\" id=\"prod-oJNsRhfl\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"gcxlonl8\" constraints=\"+Default\" id=\"prod-bWfHg6Xe\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorExpression\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zsu4etlj\" id=\"prod-haubt72j\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"GeneratorBody\">\n    <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"quvqn30c\" id=\"prod-UaNDUTMe\"><emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"YieldExpression\" params=\"In, Await\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-YieldExpression\">YieldExpression</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\"><emu-t>yield</emu-t></emu-rhs>\n    <emu-rhs a=\"alznzlpx\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"mrbi6v84\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorMethod\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bojlwy10\" id=\"prod-ceV74b-L\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vxevrvwx\" id=\"prod-cOKIJmRw\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"zdnckwse\" constraints=\"+Default\" id=\"prod-1L17zU6t\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorExpression\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yh0wbqjf\" id=\"prod-s18yr2Ij\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncGeneratorBody\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zqmkrekv\" id=\"prod-47HC640n\"><emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncFunctionDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"9rildsyw\" id=\"prod-iAuKx0s9\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"_vbcugdo\" constraints=\"+Default\" id=\"prod-TaHP58mu\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncFunctionExpression\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mviccgpw\" id=\"prod-LFCRNt3l\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncMethod\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tzooi3sy\" id=\"prod-80co-gZ6\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"AsyncFunctionBody\">\n    <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j_tcfidx\" id=\"prod-WjFwGBMF\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"AwaitExpression\" params=\"Yield\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AwaitExpression\">AwaitExpression</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wzxw5xwu\">\n        <emu-t>await</emu-t>\n        <emu-nt params=\"?Yield, +Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"DecoratorList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"by2junj1\" id=\"prod-XpmhIcp8\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Decorator\">Decorator</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"Decorator\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-Decorator\">Decorator</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yo6dty7w\" id=\"prod-5vyG5MMq\">\n        <emu-t>@init:</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"hqukqxp_\" id=\"prod-NtDw9zps\">\n        <emu-t>@init:</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"30bulhfw\" id=\"prod-gwbBvo9V\">\n        <emu-t>@</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"redrlt2t\" id=\"prod-kjss0RjO\">\n        <emu-t>@</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"DecoratorMemberExpression\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dlsgch-w\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-IdentifierReference\">IdentifierReference</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ltqkvoym\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ed6ncho6\">\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"DecoratorCallExpression\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vv8wbgyv\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassDeclaration\" params=\"Yield, Await, Default\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zjnoitib\" id=\"prod-DqWnRJPZ\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"vkeew36z\" constraints=\"+Default\" id=\"prod-F2WWa1vA\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassExpression\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassExpression\">ClassExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5mnnp241\" id=\"prod-W4DvcjlY\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassTail\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0tcpjpju\" id=\"prod-mIr25y7h\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassHeritage\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"eyngn05c\">\n        <emu-t>extends</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassBody\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hi6rf-a8\" id=\"prod-YUQCWiaa\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassElementList\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"l7zmtagw\" id=\"prod-ADR6-dWZ\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ga1dtfdq\" id=\"prod-sKhHHXFQ\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassElement\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gq6zomhx\" id=\"prod-xHcZGKTA\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"02kqysds\" id=\"prod-ZXs_6NVt\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"3oyde-rg\" id=\"prod-uhtH5oeH\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"ontb5hi8\" id=\"prod-D5Wln7TX\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"sg2sawim\" id=\"prod-0Xskgzt4\"><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FieldDefinition\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tlc4azd3\" id=\"prod-qdC94hXo\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"5p-oa_qw\" id=\"prod-ZQHsgv17\">\n        <emu-t>accessor</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ClassElementName\" params=\"Yield, Await\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jbcjyldj\" id=\"prod-G9YdmiD5\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ie2-zc1c\" id=\"prod-BPUn8Lt3\"><emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-class-definitions-runtime-semantics-evaluation": {"num": "15.8.18", "title": "#sec-class-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-class-definitions-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions-runtime-semantics-evaluation\">#sec-class-definitions-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yly7hjbq\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Perform ? <emu-xref aoid=\"BindingClassDeclarationEvaluation\"><a href=\"#sec-runtime-semantics-bindingclassdeclarationevaluation\">BindingClassDeclarationEvaluation</a></emu-xref> of this <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> only occurs as part of an <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> and is never directly evaluated.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"ClassExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hevpq5jw\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <emu-val>undefined</emu-val>, <emu-val>\"\"</emu-val>, and <var>decorators</var>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yly7hjbq\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>className</var> be <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <var>className</var>, <var>className</var>, and <var>decorators</var>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassElementName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ie2-zc1c\"><emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>privateIdentifier</var> be <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt>.</li><li>Let <var>privateEnvRec</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>names</var> be <var>privateEnvRec</var>.[[Names]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Exactly one element of <var>names</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] is <var>privateIdentifier</var>.</li><li>Let <var>privateName</var> be the <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> in <var>names</var> whose [[Description]] is <var>privateIdentifier</var>.</li><li>Return <var>privateName</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-createdecoratorcontextobject": {"num": "15.7.7", "title": "#sec-createdecoratorcontextobject CreateDecoratorContextObject ( kind, name, metadataList, initializers [ , isStatic ] )", "html": "<emu-clause id=\"sec-createdecoratorcontextobject\" aoid=\"CreateDecoratorContextObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createdecoratorcontextobject\">#sec-createdecoratorcontextobject</span> CreateDecoratorContextObject ( <var>kind</var>, <var>name</var>, <var>metadataList</var>, <var>initializers</var> [ , <var>isStatic</var> ] )</h1>\n      <p>\n        The abstract operation CreateDecoratorContextObject takes arguments <var>kind</var> (one of <emu-val>\"class\"</emu-val>, <emu-val>\"field\"</emu-val>, <emu-val>\"accessor\"</emu-val>, <emu-val>\"method\"</emu-val>, <emu-val>\"getter\"</emu-val>, <emu-val>\"setter\"</emu-val>), <var>name</var> (a String, Symbol, or <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>), <var>metadataList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Metadata Records), and <var>initializers</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript function objects), and optional argument <var>isStatic</var> (a Boolean). It returns a context object which is passed as the second argument to decorators of the given kind.\n      </p>\n      <emu-alg><ol><li>Let <var>contextObj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"kind\"</emu-val>, <var>kind</var>).</li><li>If <var>name</var> is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>kind</var> is not <emu-val>\"class\"</emu-val>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"name\"</emu-val>, <var>name</var>.[[Description]]).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"isPrivate\"</emu-val>, <emu-val>true</emu-val>).</li><li>Let <var>access</var> be !&#160;<emu-xref aoid=\"CreateDecoratorAccessObject\"><a href=\"#sec-createdecoratoraccessobject\">CreateDecoratorAccessObject</a></emu-xref>(<emu-val>\"method\"</emu-val>, <var>name</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"access\"</emu-val>, <var>access</var>).</li><li>Let <var>setMetadata</var> be !&#160;<emu-xref aoid=\"CreateSetMetadataFunction\"><a href=\"#sec-createsetmetadatafunction\">CreateSetMetadataFunction</a></emu-xref>(<emu-const>private</emu-const>, <var>metadataList</var>, <emu-const>empty</emu-const>).</li><li>Let <var>getMetadata</var> be !&#160;<emu-xref aoid=\"CreateGetMetadataFunction\"><a href=\"#sec-creategetmetadatafunction\">CreateGetMetadataFunction</a></emu-xref>(<emu-const>private</emu-const>, <var>metadataList</var>, <emu-const>empty</emu-const>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"setMetadata\"</emu-val>, <var>setMetadata</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"getMetadata\"</emu-val>, <var>getMetadata</var>).</li></ol></li><li>Else,<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"name\"</emu-val>, <var>name</var>).</li><li>If <var>kind</var> is <emu-val>\"class\"</emu-val>, then<ol><li>Let <var>setMetadata</var> be !&#160;<emu-xref aoid=\"CreateSetMetadataFunction\"><a href=\"#sec-createsetmetadatafunction\">CreateSetMetadataFunction</a></emu-xref>(<emu-const>constructor</emu-const>, <var>metadataList</var>, <emu-const>empty</emu-const>).</li><li>Let <var>getMetadata</var> be !&#160;<emu-xref aoid=\"CreateGetMetadataFunction\"><a href=\"#sec-creategetmetadatafunction\">CreateGetMetadataFunction</a></emu-xref>(<emu-const>constructor</emu-const>, <var>metadataList</var>, <emu-const>empty</emu-const>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"setMetadata\"</emu-val>, <var>setMetadata</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"getMetadata\"</emu-val>, <var>getMetadata</var>).</li></ol></li><li>Else,<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"isPrivate\"</emu-val>, <emu-val>false</emu-val>).</li><li>Let <var>setMetadata</var> be !&#160;<emu-xref aoid=\"CreateSetMetadataFunction\"><a href=\"#sec-createsetmetadatafunction\">CreateSetMetadataFunction</a></emu-xref>(<emu-const>public</emu-const>, <var>metadataList</var>, <var>name</var>).</li><li>Let <var>getMetadata</var> be !&#160;<emu-xref aoid=\"CreateGetMetadataFunction\"><a href=\"#sec-creategetmetadatafunction\">CreateGetMetadataFunction</a></emu-xref>(<emu-const>public</emu-const>, <var>metadataList</var>, <var>name</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"setMetadata\"</emu-val>, <var>setMetadata</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"getMetadata\"</emu-val>, <var>getMetadata</var>).</li></ol></li></ol></li><li>If <var>isStatic</var> is present, perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>contextObj</var>, <emu-val>\"isStatic\"</emu-val>, <var>isStatic</var>).</li><li>Return <var>contextObj</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-runtime-semantics-classfielddefinitionevaluation": {"num": "15.8.14", "title": "#sec-runtime-semantics-classfielddefinitionevaluation Runtime Semantics: ClassFieldDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-classfielddefinitionevaluation\" type=\"sdo\" aoid=\"ClassFieldDefinitionEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-classfielddefinitionevaluation\">#sec-runtime-semantics-classfielddefinitionevaluation</span> Runtime Semantics: ClassFieldDefinitionEvaluation</h1>\n\n      <p>With parameters <var>homeObject</var>, <var>decorators</var>, <var>metadataList</var>, and <var>isStatic</var>.</p>\n\n      <emu-grammar><emu-production name=\"FieldDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rqzzdcte\" id=\"prod-deOh_-BS\">\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>name</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>name</var>).</li><li>Let <var>initializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>finisherInitializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>initializer</var> be !&#160;<emu-xref aoid=\"CreateFieldInitializerFunction\"><a href=\"#sec-createfieldinitializerfunction\">CreateFieldInitializerFunction</a></emu-xref>(<var>name</var>, <var>homeObject</var>, <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>).</li><li>Append <var>initializer</var> to <var>initializers</var>.</li></ol></li><li>For each element <var>decorator</var> of <var>decorators</var>, do<ol><li>Let <var>context</var> be <emu-xref aoid=\"CreateDecoratorContextObject\"><a href=\"#sec-createdecoratorcontextobject\">CreateDecoratorContextObject</a></emu-xref>(<emu-val>\"field\"</emu-val>, <var>name</var>, <var>metadataList</var>, <var>finisherInitializers</var>, <var>isStatic</var>).</li><li>Let <var>initializer</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>decorator</var>.[[Decorator]], <emu-val>undefined</emu-val>, &#171; <emu-val>undefined</emu-val>, <var>context</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>initializer</var>) is <emu-val>true</emu-val>, append <var>initializer</var> to <var>initializers</var>.</li><li>Else if <var>initializer</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return ClassElementDefinition { [[Key]]: <var>name</var>, [[Kind]]: <emu-const>field</emu-const>, [[Initializers]]: <var>initializers</var>, [[FinisherInitializers]]: <var>finisherInitializers</var> }.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FieldDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jjtd9t6_\" id=\"prod-11zHvDT9\">\n        <emu-t>accessor</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>name</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>name</var>).</li><li>Let <var>privateStateDesc</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <emu-val>\"storage for \"</emu-val> and the <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li>Let <var>privateStateName</var> be a new <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] value is <var>privateStateDesc</var>.</li><li>Let <var>getter</var> be <emu-xref aoid=\"MakeAutoAccessorGetter\"><a href=\"#sec-makeautoaccessorgetter\">MakeAutoAccessorGetter</a></emu-xref>(<var>name</var>, <var>privateStateName</var>, <var>homeObject</var>).</li><li>Let <var>setter</var> be <emu-xref aoid=\"MakeAutoAccessorSetter\"><a href=\"#sec-makeautoaccessorsetter\">MakeAutoAccessorSetter</a></emu-xref>(<var>name</var>, <var>privateStateName</var>, <var>homeObject</var>).</li><li>Let <var>initializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>finisherInitializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>initializer</var> be !&#160;<emu-xref aoid=\"CreateFieldInitializerFunction\"><a href=\"#sec-createfieldinitializerfunction\">CreateFieldInitializerFunction</a></emu-xref>(<var>name</var>, <var>homeObject</var>, <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>).</li><li>Append <var>initializer</var> to <var>initializers</var>.</li></ol></li><li>For each element <var>decorator</var> of <var>decorators</var>, do<ol><li>Let <var>context</var> be <emu-xref aoid=\"CreateDecoratorContextObject\"><a href=\"#sec-createdecoratorcontextobject\">CreateDecoratorContextObject</a></emu-xref>(<emu-val>\"accessor\"</emu-val>, <var>name</var>, <var>metadataList</var>, <var>finisherInitializers</var>, <var>isStatic</var>).</li><li>Let <var>accessor</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>accessor</var>, <emu-val>\"get\"</emu-val>, <var>getter</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>accessor</var>, <emu-val>\"set\"</emu-val>, <var>setter</var>).</li><li>Let <var>output</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>decorator</var>.[[Decorator]], <emu-val>undefined</emu-val>, &#171; <var>accessor</var>, <var>context</var> &#187;).</li><li>Let <var>newGetter</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>output</var>, <emu-val>\"get\"</emu-val>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>newGetter</var>) is <emu-val>true</emu-val>, set <var>getter</var> to <var>newGetter</var>.</li><li>Else if <var>newGetter</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>newSetter</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>output</var>, <emu-val>\"set\"</emu-val>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>newSetter</var>) is <emu-val>true</emu-val>, set <var>setter</var> to <var>newSetter</var>.</li><li>Else if <var>newSetter</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>initializer</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>output</var>, <emu-val>\"initialize\"</emu-val>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>initializer</var>) is <emu-val>true</emu-val>, append <var>initializer</var> to <var>initializers</var>.</li><li>Else if <var>initializer</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>name</var> is not a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Get]]: <var>getter</var>, [[Set]]: <var>setter</var>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>homeObject</var>, <var>name</var>, <var>desc</var>).</li></ol></li><li>Return ClassElementDefinition { [[Key]]: <var>name</var>, [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <var>getter</var>, [[Set]]: <var>setter</var>, [[BackingStorageKey]]: <var>privateStateName</var>, [[Initializers]]: <var>initializers</var>, [[FinisherInitializers]]: <var>finisherInitializers</var> }.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        The function created for <var>initializer</var> is never directly accessible to ECMAScript code.\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-runtime-semantics-bindingclassdeclarationevaluation": {"num": "15.8.17", "title": "#sec-runtime-semantics-bindingclassdeclarationevaluation Runtime Semantics: BindingClassDeclarationEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-bindingclassdeclarationevaluation\" type=\"sdo\" aoid=\"BindingClassDeclarationEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-bindingclassdeclarationevaluation\">#sec-runtime-semantics-bindingclassdeclarationevaluation</span> Runtime Semantics: BindingClassDeclarationEvaluation</h1>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yly7hjbq\" id=\"prod-JDIQ2pU9\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>className</var> be <emu-xref aoid=\"StringValue\"><a href=\"#sec-static-semantics-stringvalue\">StringValue</a></emu-xref> of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <var>className</var>, <var>className</var>, and <var>decorators</var>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>env</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeBoundName\"><a href=\"#sec-initializeboundname\">InitializeBoundName</a></emu-xref>(<var>className</var>, <var>value</var>, <var>env</var>).</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hevpq5jw\" id=\"prod-KCM7kRpm\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>value</var> be ? <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <emu-val>undefined</emu-val>, <emu-val>\"default\"</emu-val>, and <var>decorators</var>.</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><emu-grammar><emu-production name=\"ClassDeclaration\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1ghyizwr\">\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> only occurs as part of an <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> and establishing its binding is handled as part of the evaluation action for that production. See <emu-xref href=\"#sec-exports-runtime-semantics-evaluation\"><a href=\"#sec-exports-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-exports-runtime-semantics-evaluation\">#sec-exports-runtime-semantics-evaluation</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-decoratorevaluation": {"num": "15.7.1", "title": "#sec-decoratorevaluation Runtime Semantics: DecoratorEvaluation", "html": "<emu-clause id=\"sec-decoratorevaluation\" type=\"sdo\" aoid=\"DecoratorEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decoratorevaluation\">#sec-decoratorevaluation</span> Runtime Semantics: DecoratorEvaluation</h1>\n      <emu-grammar><emu-production name=\"Decorator\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Decorator\">Decorator</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yai7kym6\" id=\"prod-oZ4sDdZC\">\n        <emu-t>@init:</emu-t>\n        <emu-nt><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>expr</var> be the <emu-nt><a href=\"#prod-MemberExpression\">MemberExpression</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a></emu-nt>.</li><li>Let <var>ref</var> be the result of evaluating <var>expr</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Decorator]]: <var>value</var>, [[IsInit]]: <emu-val>true</emu-val> }.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"Decorator\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Decorator\">Decorator</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"64q7la7q\" id=\"prod-MJH8VIwb\">\n        <emu-t>@init:</emu-t>\n        <emu-nt><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>expr</var> be the <emu-nt><a href=\"#prod-CallMemberExpression\">CallMemberExpression</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a></emu-nt>.</li><li>Let <var>ref</var> be the result of evaluating <var>expr</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Decorator]]: <var>value</var>, [[IsInit]]: <emu-val>true</emu-val> }.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"Decorator\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Decorator\">Decorator</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ldshtrdc\" id=\"prod-TIa0r451\">\n        <emu-t>@</emu-t>\n        <emu-nt><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>expr</var> be the <emu-nt><a href=\"#prod-MemberExpression\">MemberExpression</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a></emu-nt>.</li><li>Let <var>ref</var> be the result of evaluating <var>expr</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Decorator]]: <var>value</var>, [[IsInit]]: <emu-val>false</emu-val> }.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"Decorator\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Decorator\">Decorator</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"fj2czb_k\" id=\"prod-JJDcUYTD\">\n        <emu-t>@</emu-t>\n        <emu-nt><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>expr</var> be the <emu-nt><a href=\"#prod-CallMemberExpression\">CallMemberExpression</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a></emu-nt>.</li><li>Let <var>ref</var> be the result of evaluating <var>expr</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Decorator]]: <var>value</var>, [[IsInit]]: <emu-val>false</emu-val> }.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-well-known-symbols": {"num": "6.1.5.1", "title": "#sec-well-known-symbols Well-Known Symbols", "html": "<emu-clause id=\"sec-well-known-symbols\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-symbols\">#sec-well-known-symbols</span> Well-Known Symbols</h1>\n        <p>Well-known symbols are built-in Symbol values that are explicitly referenced by algorithms of this specification. They are typically used as the keys of properties whose values serve as extension points of a specification algorithm. Unless otherwise specified, well-known symbols values are shared by all realms (<emu-xref href=\"#sec-code-realms\"><a href=\"#sec-code-realms\" class=\"excluded-xref\" excluded-id=\"sec-code-realms\">#sec-code-realms</a></emu-xref>).</p>\n        <p>Within this specification a well-known symbol is referred to by using a notation of the form @@name, where &#8220;name&#8221; is one of the values listed in <emu-xref href=\"#table-well-known-symbols\"><a href=\"#table-well-known-symbols\" class=\"excluded-xref\" excluded-id=\"table-well-known-symbols\">#table-well-known-symbols</a></emu-xref>.</p>\n        <emu-table id=\"table-well-known-symbols\" caption=\"Well-known Symbols\" oldids=\"table-1\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-well-known-symbols\">#table-well-known-symbols</span>: Well-known Symbols</figcaption><span id=\"table-1\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Specification Name\n              </th>\n              <th>\n                [[Description]]\n              </th>\n              <th>\n                Value and Purpose\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@asyncIterator</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.asyncIterator\"</emu-val>\n              </td>\n              <td>\n                A method that returns the default AsyncIterator for an object. Called by the semantics of the <code>for</code>-<code>await</code>-<code>of</code> statement.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@hasInstance</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.hasInstance\"</emu-val>\n              </td>\n              <td>\n                A method that determines if a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> object recognizes an object as one of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s instances. Called by the semantics of the <code>instanceof</code> operator.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@isConcatSpreadable</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.isConcatSpreadable\"</emu-val>\n              </td>\n              <td>\n                A Boolean valued property that if true indicates that an object should be flattened to its array elements by <emu-xref href=\"#sec-array.prototype.concat\"><a href=\"#sec-array.prototype.concat\"><code>Array.prototype.concat</code></a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@iterator</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.iterator\"</emu-val>\n              </td>\n              <td>\n                A method that returns the default Iterator for an object. Called by the semantics of the for-of statement.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@match</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.match\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that matches the regular expression against a string. Called by the <emu-xref href=\"#sec-string.prototype.match\"><a href=\"#sec-string.prototype.match\"><code>String.prototype.match</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@matchAll</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.matchAll\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that returns an iterator, that yields matches of the regular expression against a string. Called by the <emu-xref href=\"#sec-string.prototype.matchall\"><a href=\"#sec-string.prototype.matchall\"><code>String.prototype.matchAll</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@replace</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.replace\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that replaces matched substrings of a string. Called by the <emu-xref href=\"#sec-string.prototype.replace\"><a href=\"#sec-string.prototype.replace\"><code>String.prototype.replace</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@search</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.search\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that returns the index within a string that matches the regular expression. Called by the <emu-xref href=\"#sec-string.prototype.search\"><a href=\"#sec-string.prototype.search\"><code>String.prototype.search</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@species</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.species\"</emu-val>\n              </td>\n              <td>\n                A function valued property that is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is used to create derived objects.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@split</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.split\"</emu-val>\n              </td>\n              <td>\n                A regular expression method that splits a string at the indices that match the regular expression. Called by the <emu-xref href=\"#sec-string.prototype.split\"><a href=\"#sec-string.prototype.split\"><code>String.prototype.split</code></a></emu-xref> method.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@toPrimitive</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.toPrimitive\"</emu-val>\n              </td>\n              <td>\n                A method that converts an object to a corresponding primitive value. Called by the <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> abstract operation.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@toStringTag</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.toStringTag\"</emu-val>\n              </td>\n              <td>\n                A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\"><code>Object.prototype.toString</code></a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@unscopables</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.unscopables\"</emu-val>\n              </td>\n              <td>\n                An object valued property whose own and inherited property names are property names that are excluded from the <code>with</code> environment bindings of the associated object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <dfn>@@metadata</dfn>\n              </td>\n              <td>\n                <emu-val>\"Symbol.metadata\"</emu-val>\n              </td>\n              <td>\n                An object valued property that contains the metadata associated with an object. Primarily used to store metadata defined be decorators on classes.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-classelementdefinition-record-specification-type": {"num": "6.2.10", "title": "#sec-classelementdefinition-record-specification-type The ClassElementDefinition Record Specification Type", "html": "<emu-clause id=\"sec-classelementdefinition-record-specification-type\" oldids=\"sec-classfielddefinition-record-specification-type\"><span id=\"sec-classfielddefinition-record-specification-type\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-classelementdefinition-record-specification-type\">#sec-classelementdefinition-record-specification-type</span> The ClassElementDefinition Record Specification Type</h1>\n      <p>The ClassElementDefinition type is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> used in the specification of class element definitions.</p>\n      <p>Values of the ClassElementDefinition type are <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> values whose fields are defined by <emu-xref href=\"#table-classelementdefinition-fields\"><a href=\"#table-classelementdefinition-fields\" class=\"excluded-xref\" excluded-id=\"table-classelementdefinition-fields\">#table-classelementdefinition-fields</a></emu-xref>. Such values are referred to as <dfn>ClassElementDefinition Record</dfn>s.</p>\n      <emu-table id=\"table-classelementdefinition-fields\" caption=\"ClassElementDefinition Record Fields\" oldids=\"table-classfielddefinition-fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-classelementdefinition-fields\">#table-classelementdefinition-fields</span>: <emu-xref href=\"#sec-classelementdefinition-record-specification-type\"><a href=\"#sec-classelementdefinition-record-specification-type\">ClassElementDefinition Record</a></emu-xref> Fields</figcaption><span id=\"table-classfielddefinition-fields\"></span>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Field Name\n            </th>\n            <th>\n              Values of the [[Kind]] field for which it is present\n            </th>\n            <th>\n              Value\n            </th>\n            <th>\n              Meaning\n            </th>\n          </tr>\n          <tr>\n            <td>\n              [[Key]]\n            </td>\n            <td>\n              All\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, a String value, or a Symbol value.\n            </td>\n            <td>\n              The name of the field.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Kind]]\n            </td>\n            <td>\n              All\n            </td>\n            <td>\n              <emu-const>field</emu-const>, <emu-const>method</emu-const>, <emu-const>accessor</emu-const>, <emu-const>getter</emu-const>, <emu-const>setter</emu-const>\n            </td>\n            <td>\n              The kind of the element.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Value]]\n            </td>\n            <td>\n              <emu-const>method</emu-const>\n            </td>\n            <td>\n              Function or Undefined\n            </td>\n            <td>\n              The function for a method definition.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Get]]\n            </td>\n            <td>\n              <emu-const>accessor</emu-const> and <emu-const>getter</emu-const>\n            </td>\n            <td>\n              Function or Undefined\n            </td>\n            <td>\n              The getter for an accessor definition.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Set]]\n            </td>\n            <td>\n              <emu-const>accessor</emu-const> and <emu-const>setter</emu-const>\n            </td>\n            <td>\n              Function or Undefined\n            </td>\n            <td>\n              The setter for an accessor definition.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[BackingStorageKey]]\n            </td>\n            <td>\n              <emu-const>accessor</emu-const>\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>\n            </td>\n            <td>\n              A private name for the backing state behind accessors defined with the <code>accessor</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Initializers]]\n            </td>\n            <td>\n              <emu-const>field</emu-const> and <emu-const>accessor</emu-const>\n            </td>\n            <td>\n              a list of ECMAScript function objects\n            </td>\n            <td>\n              The initializers of the field or accessor, if any.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[FinisherInitializers]]\n            </td>\n            <td>\n              All\n            </td>\n            <td>\n              a list of ECMAScript function objects\n            </td>\n            <td>\n              Additional initializers added by decorators via the addInitializer method. These initializer functions run after the class element has been defined on the instance, allowing more general code to finish the initialization.\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-createsetmetadatafunction": {"num": "15.7.4", "title": "#sec-createsetmetadatafunction CreateSetMetadataFunction ( kind, metadataList, propertyKey )", "html": "<emu-clause id=\"sec-createsetmetadatafunction\" aoid=\"CreateSetMetadataFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createsetmetadatafunction\">#sec-createsetmetadatafunction</span> CreateSetMetadataFunction ( <var>kind</var>, <var>metadataList</var>, <var>propertyKey</var> )</h1>\n      <p>\n        The abstract operation CreateSetMetadataFunction takes arguments <var>kind</var> (one of <emu-const>constructor</emu-const>, <emu-const>public</emu-const>, <emu-const>private</emu-const>), <var>metadataList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Metadata Records), and <var>propertyKey</var> (a String, Symbol, <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, or <emu-const>empty</emu-const>). It returns a function that can be used to define metadata on the passed in <var>metadataList</var>, and which is associated with the given <var>kind</var> and, if provided, <var>propertyKey</var>.\n      </p>\n      <emu-alg><ol><li>Let <var>steps</var> be the steps of a SetDecoratorMetadata function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of a SetDecoratorMetadata function as specified below.</li><li>Let <var>defineMetadata</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[Kind]], [[MetadataList]], [[PropertyKey]] &#187;).</li><li>Set <var>defineMetadata</var>.[[Kind]] to <var>kind</var>.</li><li>Set <var>defineMetadata</var>.[[MetadataList]] to <var>metadataList</var>.</li><li>Set <var>defineMetadata</var>.[[PropertyKey]] to <var>propertyKey</var>.</li><li>Return <var>defineMetadata</var>.</li></ol></emu-alg>\n      <p>A SetDecoratorMetadata function is an anonymous built-in function with [[Kind]], [[MetadataList]], and [[PropertyKey]] internal slots. When a SetDecoratorMetadata function is called with arguments <var>metadataKey</var> and <var>value</var>, the following steps are taken:</p>\n      <emu-alg><ol><li>If <var>metadataKey</var> is not a Symbol, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>kind</var> be <var>f</var>.[[Kind]].</li><li>Let <var>metadataList</var> be <var>f</var>.[[MetadataList]].</li><li>Let <var>propertyKey</var> be <var>f</var>.[[PropertyKey]].</li><li>Let <var>metadataForKey</var> be the element of <var>metadataList</var> whose [[Key]] is the same as <var>metadataKey</var>.</li><li>If <var>metadataForKey</var> does not exist, then<ol><li>Set <var>metadataForKey</var> to a new <emu-xref href=\"#sec-metadata-record-specification-type\"><a href=\"#sec-metadata-record-specification-type\">Metadata Record</a></emu-xref> { [[Key]]: <var>metadataKey</var>, [[Constructor]]: <emu-const>empty</emu-const>, [[Public]]: &#171; &#187;, [[Private]]: &#171; &#187; }.</li><li>Append <var>metadataForKey</var> to <var>metadataList</var>.</li></ol></li><li>If <var>kind</var> is <emu-const>constructor</emu-const>, set <var>metadataForKey</var>.[[Constructor]] to <var>value</var>.</li><li>If <var>kind</var> is <emu-const>public</emu-const>, then<ol><li>Let <var>publicMetadata</var> be the element of <var>metadataForKey</var>.[[Public]] whose [[Key]] is the same as <var>propertyKey</var>.</li><li>If <var>publicMetadata</var> does not exist, then<ol><li>Set <var>publicMetadata</var> to the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Key]]: <var>propertyKey</var>, [[Value]]: <var>value</var> }.</li><li>Append <var>publicMetadata</var> to <var>metadataForKey</var>.[[Public]].</li></ol></li><li>Else, set <var>publicMetadata</var>.[[Value]] to <var>value</var>.</li></ol></li><li>If <var>kind</var> is <emu-const>private</emu-const>, then<ol><li>Let <var>privateMetadata</var> be the element of <var>metadataForKey</var>.[[Private]] whose [[Key]] is the same as <var>propertyKey</var>.</li><li>If <var>privateMetadata</var> does not exist, then<ol><li>Set <var>privateMetadata</var> to the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Key]]: <var>propertyKey</var>, [[Value]]: <var>value</var> }.</li><li>Append <var>privateMetadata</var> to <var>metadataForKey</var>.[[Private]].</li></ol></li><li>Else, set <var>privateMetadata</var>.[[Value]] to <var>value</var>.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-runtime-semantics-methoddefinitionevaluation": {"num": "15.4.5", "title": "#sec-runtime-semantics-methoddefinitionevaluation Runtime Semantics: MethodDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-methoddefinitionevaluation\" oldids=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation,sec-generator-function-definitions-runtime-semantics-propertydefinitionevaluation,sec-asyncgenerator-definitions-propertydefinitionevaluation,sec-async-function-definitions-PropertyDefinitionEvaluation\" type=\"sdo\" aoid=\"MethodDefinitionEvaluation\"><span id=\"sec-async-function-definitions-PropertyDefinitionEvaluation\"></span><span id=\"sec-asyncgenerator-definitions-propertydefinitionevaluation\"></span><span id=\"sec-generator-function-definitions-runtime-semantics-propertydefinitionevaluation\"></span><span id=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-methoddefinitionevaluation\">#sec-runtime-semantics-methoddefinitionevaluation</span> Runtime Semantics: MethodDefinitionEvaluation</h1>\n      <p>With parameters <var>object</var> and <var>enumerable</var>, and optional parameters <var>decorators</var>, <var>metadataList</var>, and <var>isStatic</var>.</p>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f2ayx1_q\" id=\"prod-w_uDCOXP\">\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>methodDef</var> be ? <emu-xref aoid=\"DefineMethod\"><a href=\"#sec-runtime-semantics-definemethod\">DefineMethod</a></emu-xref> of <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> with argument <var>object</var>.</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>methodDef</var>.[[Key]], <var>object</var>, <var>methodDef</var>.[[Closure]], <var>enumerable</var>, <var>decorators</var>, <var>metadataList</var>, <var>isStatic</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s7vk7pda\" id=\"prod-JtMhObe9\">\n        <emu-t>get</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>.</li><li>Let <var>formalParameterList</var> be an instance of the production <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"n7nathbb\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>, <var>sourceText</var>, <var>formalParameterList</var>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>, <emu-val>\"get\"</emu-val>).</li><li>Let <var>initializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>decorators</var> is present, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>metadataList</var> and <var>isStatic</var> are present.</li><li>For each element <var>decorator</var> of <var>decorators</var>, do<ol><li>Let <var>context</var> be <emu-xref aoid=\"CreateDecoratorContextObject\"><a href=\"#sec-createdecoratorcontextobject\">CreateDecoratorContextObject</a></emu-xref>(<emu-val>\"getter\"</emu-val>, <var>propKey</var>, <var>metadataList</var>, <var>initializers</var>, <var>isStatic</var>).</li><li>Let <var>newMethod</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>decorator</var>.[[Decorator]], <emu-val>undefined</emu-val>, &#171; <var>closure</var>, <var>context</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>newMethod</var>) is <emu-val>true</emu-val>, then<ol><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>newMethod</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>, <emu-val>\"get\"</emu-val>).</li><li>Set <var>closure</var> to <var>newMethod</var>.</li></ol></li><li>Else if <var>newMethod</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>If <var>propKey</var> is not a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Get]]: <var>closure</var>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>object</var>, <var>propKey</var>, <var>desc</var>).</li></ol></li><li>Return ClassElementDefinition { [[Key]]: <var>propKey</var>, [[Kind]]: <emu-const>getter</emu-const>, [[Get]]: <var>closure</var>, [[FinisherInitializers]]: <var>initializers</var> }.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"lbu40xzc\" id=\"prod-tr90svxc\">\n        <emu-t>set</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>, <emu-val>\"set\"</emu-val>).</li><li>Let <var>initializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>decorators</var> is present, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>metadataList</var> and <var>isStatic</var> are present.</li><li>For each element <var>decorator</var> of <var>decorators</var>, do<ol><li>Let <var>context</var> be <emu-xref aoid=\"CreateDecoratorContextObject\"><a href=\"#sec-createdecoratorcontextobject\">CreateDecoratorContextObject</a></emu-xref>(<emu-val>\"setter\"</emu-val>, <var>propKey</var>, <var>metadataList</var>, <var>initializers</var>, <var>isStatic</var>).</li><li>Let <var>newMethod</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>decorator</var>.[[Decorator]], <emu-val>undefined</emu-val>, &#171; <var>closure</var>, <var>context</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>newMethod</var>) is <emu-val>true</emu-val>, then<ol><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>newMethod</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>, <emu-val>\"set\"</emu-val>).</li><li>Set <var>closure</var> to <var>newMethod</var>.</li></ol></li><li>Else if <var>newMethod</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>If <var>propKey</var> is not a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Set]]: <var>closure</var>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>object</var>, <var>propKey</var>, <var>desc</var>).</li></ol></li><li>Return ClassElementDefinition { [[Key]]: <var>propKey</var>, [[Kind]]: <emu-const>setter</emu-const>, [[Set]]: <var>closure</var>, [[FinisherInitializers]]: <var>initializers</var> }.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e6yupcp1\" id=\"prod-qDk-XFAF\">\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%GeneratorFunction.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>).</li><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>closure</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>propKey</var>, <var>object</var>, <var>closure</var>, <var>enumerable</var>, <var>decorators</var>, <var>metadataList</var>, <var>isStatic</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2edb8sar\" id=\"prod-lPECR135\">\n        <emu-t>async</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt>.</li><li>Let <var>closure</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGeneratorFunction.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform !&#160;<emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>propKey</var>).</li><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>closure</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>propKey</var>, <var>object</var>, <var>closure</var>, <var>enumerable</var>, <var>decorators</var>, <var>metadataList</var>, <var>isStatic</var>).</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cfy3_9l8\" id=\"prod-a75_jVUN\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassElementName\">ClassElementName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>Let <var>scope</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>privateScope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>sourceText</var> be the source text matched by <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt>.</li><li>Let <var>closure</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunction.prototype%</a></emu-xref>, <var>sourceText</var>, <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>, <var>privateScope</var>).</li><li>Perform !&#160;<emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>closure</var>, <var>object</var>).</li><li>Return ?&#160;<emu-xref aoid=\"DefineMethodProperty\"><a href=\"#sec-definemethodproperty\">DefineMethodProperty</a></emu-xref>(<var>propKey</var>, <var>object</var>, <var>closure</var>, <var>enumerable</var>, <var>decorators</var>, <var>metadataList</var>, <var>isStatic</var>).</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-decorators": {"num": "15.7", "title": "#sec-decorators Decorators", "html": "<emu-clause id=\"sec-decorators\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decorators\">#sec-decorators</span> Decorators</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"DecoratorList\" params=\"Yield, Await\" id=\"prod-DecoratorList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"by2junj1\" id=\"prod-XpmhIcp8\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Decorator\">Decorator</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"Decorator\" params=\"Yield, Await\" id=\"prod-Decorator\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-Decorator\">Decorator</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yo6dty7w\" id=\"prod-5vyG5MMq\">\n        <emu-t>@init:</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"hqukqxp_\" id=\"prod-NtDw9zps\">\n        <emu-t>@init:</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"30bulhfw\" id=\"prod-gwbBvo9V\">\n        <emu-t>@</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"redrlt2t\" id=\"prod-kjss0RjO\">\n        <emu-t>@</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"DecoratorMemberExpression\" params=\"Yield, Await\" id=\"prod-DecoratorMemberExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dlsgch-w\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-IdentifierReference\">IdentifierReference</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ltqkvoym\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ed6ncho6\">\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"DecoratorCallExpression\" params=\"Yield, Await\" id=\"prod-DecoratorCallExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-DecoratorCallExpression\">DecoratorCallExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vv8wbgyv\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-DecoratorMemberExpression\">DecoratorMemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-decoratorevaluation\"><h1><span class=\"secnum\">15.7.1</span>#sec-decoratorevaluation Runtime Semantics: DecoratorEvaluation</h1>...</div><div id=\"excluded-sec-decoratorlistevaluation\"><h1><span class=\"secnum\">15.7.2</span>#sec-decoratorlistevaluation Runtime Semantics: DecoratorListEvaluation</h1>...</div><div id=\"excluded-sec-createdecoratoraccessobject\"><h1><span class=\"secnum\">15.7.3</span>#sec-createdecoratoraccessobject CreateDecoratorAccessObject ( kind, name )</h1>...</div><div id=\"excluded-sec-createsetmetadatafunction\"><h1><span class=\"secnum\">15.7.4</span>#sec-createsetmetadatafunction CreateSetMetadataFunction ( kind, metadataList, propertyKey )</h1>...</div><div id=\"excluded-sec-creategetmetadatafunction\"><h1><span class=\"secnum\">15.7.5</span>#sec-creategetmetadatafunction CreateGetMetadataFunction ( kind, metadataList, propertyKey )</h1>...</div><div id=\"excluded-sec-convertdecoratormetadatalisttoobject\"><h1><span class=\"secnum\">15.7.6</span>#sec-convertdecoratormetadatalisttoobject ConvertDecoratorMetadataListToObject ( metadataList, parentMetadataObj )</h1>...</div><div id=\"excluded-sec-createdecoratorcontextobject\"><h1><span class=\"secnum\">15.7.7</span>#sec-createdecoratorcontextobject CreateDecoratorContextObject ( kind, name, metadataList, initializers [ , isStatic ] )</h1>...</div></emu-clause>\n\n  "}, "sec-definemethodproperty": {"num": "10.2.8", "title": "#sec-definemethodproperty DefineMethodProperty ( key, homeObject, closure, enumerable [ , decorators [ , metadataList [ , isStatic ] ] ] )", "html": "<emu-clause id=\"sec-definemethodproperty\" aoid=\"DefineMethodProperty\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-definemethodproperty\">#sec-definemethodproperty</span> DefineMethodProperty ( <var>key</var>, <var>homeObject</var>, <var>closure</var>, <var>enumerable</var> [ , <var>decorators</var> [ , <var>metadataList</var> [ , <var>isStatic</var> ] ] ] )</h1>\n      <p>The abstract operation DefineMethodProperty takes arguments <var>key</var> (a property key or <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>), <var>homeObject</var> (an Object), <var>closure</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>), and <var>enumerable</var> (a Boolean), and optional arguments <var>decorators</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Records), <var>metadataList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Metadata Records), and <var>isStatic</var> (a Boolean). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>key</var>).</li><li>Let <var>initializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>decorators</var> is present, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>metadataList</var> and <var>isStatic</var> are present.</li><li>For each element <var>decorator</var> of <var>decorators</var>, do<ol><li>Let <var>context</var> be <emu-xref aoid=\"CreateDecoratorContextObject\"><a href=\"#sec-createdecoratorcontextobject\">CreateDecoratorContextObject</a></emu-xref>(<emu-val>\"method\"</emu-val>, <var>key</var>, <var>metadataList</var>, <var>initializers</var>, <var>isStatic</var>).</li><li>Let <var>newMethod</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>decorator</var>.[[Decorator]], <emu-val>undefined</emu-val>, &#171; <var>closure</var>, <var>context</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>newMethod</var>) is <emu-val>true</emu-val>, then<ol><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>newMethod</var>, <var>homeObject</var>).</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>key</var>).</li><li>Set <var>closure</var> to <var>newMethod</var>.</li></ol></li><li>Else if <var>newMethod</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>If <var>key</var> is not a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>closure</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>homeObject</var>, <var>key</var>, <var>desc</var>).</li></ol></li><li>Return ClassElementDefinition { [[Key]]: <var>key</var>, [[Kind]]: <emu-const>method</emu-const>, [[Value]]: <var>closure</var>, [[FinisherInitializers]]: <var>initializers</var> }.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-convertdecoratormetadatalisttoobject": {"num": "15.7.6", "title": "#sec-convertdecoratormetadatalisttoobject ConvertDecoratorMetadataListToObject ( metadataList, parentMetadataObj )", "html": "<emu-clause id=\"sec-convertdecoratormetadatalisttoobject\" aoid=\"ConvertDecoratorMetadataListToObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-convertdecoratormetadatalisttoobject\">#sec-convertdecoratormetadatalisttoobject</span> ConvertDecoratorMetadataListToObject ( <var>metadataList</var>, <var>parentMetadataObj</var> )</h1>\n      <p>\n        The abstract operation ConvertDecoratorMetadataListToObject takes arguments <var>metadataList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Metadata Records) and <var>parentMetadataObj</var> (an Object or <emu-val>undefined</emu-val>). It converts the list into an object, which it then returns.\n      </p>\n      <emu-alg><ol><li>If <var>parentMetadataObj</var> is <emu-val>undefined</emu-val>, let <var>metadataObj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>Else, let <var>metadataObj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>parentMetadataObj</var>).</li><li>For each element <var>metadataRecord</var> of <var>metadataList</var>, do<ol><li>Let <var>key</var> be <var>metadataRecord</var>.[[Key]].</li><li>If <var>parentMetadataObj</var> is not <emu-val>undefined</emu-val>, let <var>parentMetadataObjForKey</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>parentMetadataObj</var>, <var>key</var>).</li><li>Else, let <var>parentMetadataObjForKey</var> be <emu-val>undefined</emu-val>.</li><li>If <var>parentMetadataObjForKey</var> is not <emu-val>undefined</emu-val>, let <var>metadataObjForKey</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>parentMetadataObjForKey</var>).</li><li>Else, let <var>metadataObjForKey</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>If <var>metadataRecord</var>.[[Constructor]] is not <emu-const>empty</emu-const>, perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>metadataObjForKey</var>, <emu-val>\"constructor\"</emu-val>, <var>metadataRecord</var>.[[Constructor]]).</li><li>If <var>metadataRecord</var>.[[Public]] is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, then<ol><li>Let <var>parentPublicMetadata</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>parentMetadataObjForKey</var>, <emu-val>\"public\"</emu-val>).</li><li>If <var>parentPublicMetadata</var> is <emu-val>undefined</emu-val>, set <var>parentPublicMetadata</var> to <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li><li>Let <var>publicMetadata</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>parentPublicMetadata</var>).</li><li>For each element <var>meta</var> of <var>metadataRecord</var>.[[Public]], do<ol><li>Let <var>key</var> be <var>meta</var>.[[Key]].</li><li>Let <var>value</var> be <var>meta</var>.[[Value]].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>publicMetadata</var>, <var>key</var>, <var>value</var>).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>metadataObjForKey</var>, <emu-val>\"public\"</emu-val>, <var>publicMetadata</var>).</li></ol></li><li>If <var>metadataRecord</var>.[[Private]] is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, then<ol><li>Let <var>privateMetadata</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>meta</var> of <var>metadataRecord</var>.[[Private]], do<ol><li>Append <var>meta</var>.[[Value]] to <var>privateMetadata</var>.</li></ol></li><li>Let <var>steps</var> be the steps of a GetPrivateMetadata function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of a GetDecoratorMetadata function as specified below.</li><li>Let <var>closure</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[OwnPrivateMetadata]] &#187;).</li><li>Set <var>closure</var>.[[OwnPrivateMetadata]] to <var>privateMetadata</var>.</li><li>Let <var>desc</var> be the PropertyDescriptor { [[Get]]: <var>closure</var>, [[Enumerable]]: <var>enumerable</var>, [[Configurable]]: <emu-val>true</emu-val> }.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>metadataObjForKey</var>, <emu-val>\"private\"</emu-val>, <var>desc</var>).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>metadataObj</var>, <var>key</var>, <var>metadataObjForKey</var>).</li></ol></li><li>Return <var>metadataObj</var>.</li></ol></emu-alg>\n      <p>A GetPrivateMetadata function is an anonymous built-in function with [[OwnPrivateMetadata]] internal slots. When a GetPrivateMetadata function is called the following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>o</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Let <var>ownMetadata</var> be <var>f</var>.[[OwnPrivateMetadata]].</li><li>Let <var>prototype</var> be ? <var>o</var>.[[GetPrototypeOf]]().</li><li>Let <var>parentMetadata</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>prototype</var>, <emu-val>\"private\"</emu-val>).</li><li>If <var>parentMetadata</var> is <emu-val>undefined</emu-val>, let <var>metadataList</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Else, let <var>metadataList</var> be ?&#160;<emu-xref aoid=\"CreateListFromArrayLike\"><a href=\"#sec-createlistfromarraylike\">CreateListFromArrayLike</a></emu-xref>(<var>parentMetadata</var>).</li><li>Append the elements of <var>ownMetadata</var> to <var>metadataList</var>.</li><li>Return !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>metadataList</var>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-initializeinstanceelements": {"num": "7.3.32", "title": "#sec-initializeinstanceelements InitializeInstanceElements ( O, constructor )", "html": "<emu-clause id=\"sec-initializeinstanceelements\" aoid=\"InitializeInstanceElements\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializeinstanceelements\">#sec-initializeinstanceelements</span> InitializeInstanceElements ( <var>O</var>, <var>constructor</var> )</h1>\n      <p>The abstract operation InitializeInstanceElements takes arguments <var>O</var> (an Object) and <var>constructor</var> (an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>methods</var> be the value of <var>constructor</var>.[[PrivateMethods]].</li><li>For each <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> <var>method</var> of <var>methods</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"PrivateMethodOrAccessorAdd\"><a href=\"#sec-privatemethodoraccessoradd\">PrivateMethodOrAccessorAdd</a></emu-xref>(<var>method</var>, <var>O</var>).</li></ol></li><li>Let <var>elements</var> be the value of <var>constructor</var>.[[Elements]].</li><li>For each element <var>elementRecord</var> of <var>elements</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"DefineElement\"><a href=\"#sec-defineelement\">DefineElement</a></emu-xref>(<var>O</var>, <var>elementRecord</var>).</li></ol></li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-static-semantics-classelementevaluation": {"num": "15.8.15", "title": "#sec-static-semantics-classelementevaluation Runtime Semantics: ClassElementEvaluation", "html": "<emu-clause id=\"sec-static-semantics-classelementevaluation\" type=\"sdo\" aoid=\"ClassElementEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-classelementevaluation\">#sec-static-semantics-classelementevaluation</span> Runtime Semantics: ClassElementEvaluation</h1>\n      <p>With parameters <var>object</var>, <var>enumerable</var>, and <var>metadataList</var>.</p>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ikh0x701\" id=\"prod-C9GJvIMe\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <emu-xref aoid=\"ClassFieldDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classfielddefinitionevaluation\">ClassFieldDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt> with arguments <var>object</var>, <var>decorators</var>, <var>metadataList</var>, and <emu-val>false</emu-val>.</li></ol></emu-alg>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bdjcselz\" id=\"prod-V9a4aRcc\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>static</emu-t>\n        <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <emu-xref aoid=\"ClassFieldDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classfielddefinitionevaluation\">ClassFieldDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-FieldDefinition\">FieldDefinition</a></emu-nt> with arguments <var>object</var>, <var>decorators</var>, <var>metadataList</var>, and <emu-val>true</emu-val>.</li></ol></emu-alg>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j0ngpxlp\" id=\"prod-nisEihIr\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <emu-xref aoid=\"MethodDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-methoddefinitionevaluation\">MethodDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> with arguments <var>object</var>, <var>enumerable</var>, <var>decorators</var>, <var>metadataList</var>, and <emu-val>false</emu-val>.</li></ol></emu-alg>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wil5eqwq\" id=\"prod-UoEBQ-wb\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>static</emu-t>\n        <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <emu-xref aoid=\"MethodDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-methoddefinitionevaluation\">MethodDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> with arguments <var>object</var>, <var>enumerable</var>, <var>decorators</var>, <var>metadataList</var>, and <emu-val>true</emu-val>.</li></ol></emu-alg>\n\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sg2sawim\" id=\"prod-V88LvFxI\"><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-createdecoratoraccessobject": {"num": "15.7.3", "title": "#sec-createdecoratoraccessobject CreateDecoratorAccessObject ( kind, name )", "html": "<emu-clause id=\"sec-createdecoratoraccessobject\" aoid=\"CreateDecoratorAccessObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createdecoratoraccessobject\">#sec-createdecoratoraccessobject</span> CreateDecoratorAccessObject ( <var>kind</var>, <var>name</var> )</h1>\n      <p>\n        The abstract operation CreateDecoratorAccessObject takes arguments <var>kind</var> (one of <emu-val>\"field\"</emu-val>, <emu-val>\"accessor\"</emu-val>, <emu-val>\"method\"</emu-val>, <emu-val>\"getter\"</emu-val>, <emu-val>\"setter\"</emu-val>) and <var>name</var> (a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>). It returns an object with appropriate accessor functions for the private value.\n      </p>\n      <emu-alg><ol><li>Let <var>accessObj</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>).</li><li>If <var>kind</var> is <emu-val>\"field\"</emu-val>, <emu-val>\"accessor\"</emu-val>, <emu-val>\"method\"</emu-val>, or <emu-val>\"getter\"</emu-val>, then<ol><li>Let <var>steps</var> be the steps of a PrivateValueGetter function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of a PrivateValueGetter function as specified below.</li><li>Let <var>getter</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[PrivateStateKey]] &#187;).</li><li>Set <var>getter</var>.[[PrivateStateKey]] to <var>name</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>accessObj</var>, <emu-val>\"get\"</emu-val>, <var>getter</var>).</li></ol></li><li>If <var>kind</var> is <emu-val>\"field\"</emu-val>, <emu-val>\"accessor\"</emu-val>, or <emu-val>\"setter\"</emu-val>, then<ol><li>Let <var>steps</var> be the steps of a PrivateValueSetter function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of a PrivateValueSetter function as specified below.</li><li>Let <var>setter</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[PrivateStateKey]] &#187;).</li><li>Set <var>setter</var>.[[PrivateStateKey]] to <var>name</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>accessObj</var>, <emu-val>\"get\"</emu-val>, <var>setter</var>).</li></ol></li><li>Return <var>accessObj</var>.</li></ol></emu-alg>\n      <p>A PrivateValueGetter function is an anonymous built-in function with a [[PrivateStateKey]] internal slot. When a PrivateValueGetter function that expects no arguments is called it performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>o</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Return ?&#160;<emu-xref aoid=\"PrivateGet\"><a href=\"#sec-privateget\">PrivateGet</a></emu-xref>(<var>f</var>.[[PrivateStateKey]], <var>o</var>).</li></ol></emu-alg>\n      <p>A PrivateValueSetter function is an anonymous built-in function with a [[PrivateStateKey]] internal slot. When a PrivateValueSetter function is called with argument <var>value</var> it performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>o</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Perform ?&#160;<emu-xref aoid=\"PrivateSet\"><a href=\"#sec-privateset\">PrivateSet</a></emu-xref>(<var>f</var>.[[PrivateStateKey]], <var>o</var>, <var>value</var>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-class-definitions-static-semantics-methoddecorators": {"num": "15.8.10", "title": "#sec-class-definitions-static-semantics-methoddecorators Static Semantics: Method Decorators", "html": "<emu-clause id=\"sec-class-definitions-static-semantics-methoddecorators\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions-static-semantics-methoddecorators\">#sec-class-definitions-static-semantics-methoddecorators</span> Static Semantics: Method Decorators</h1>\n      <emu-grammar><emu-production name=\"ClassElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j0ngpxlp\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt> is present and <emu-xref aoid=\"PropName\"><a href=\"#sec-static-semantics-propname\">PropName</a></emu-xref> of <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> is <code>\"constructor\"</code>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-runtime-semantics-namedevaluation": {"num": "8.3.5", "title": "#sec-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-namedevaluation\" oldids=\"sec-grouping-operator-runtime-semantics-namedevaluation,sec-function-definitions-runtime-semantics-namedevaluation,sec-arrow-function-definitions-runtime-semantics-namedevaluation,sec-generator-function-definitions-runtime-semantics-namedevaluation,sec-asyncgenerator-definitions-namedevaluation,sec-class-definitions-runtime-semantics-namedevaluation,sec-async-function-definitions-runtime-semantics-namedevaluation,sec-async-arrow-function-definitions-runtime-semantics-namedevaluation\" type=\"sdo\" aoid=\"NamedEvaluation\"><span id=\"sec-async-arrow-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-async-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-class-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-asyncgenerator-definitions-namedevaluation\"></span><span id=\"sec-generator-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-arrow-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-function-definitions-runtime-semantics-namedevaluation\"></span><span id=\"sec-grouping-operator-runtime-semantics-namedevaluation\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-namedevaluation\">#sec-runtime-semantics-namedevaluation</span> Runtime Semantics: NamedEvaluation</h1>\n      <p>With parameter <var>name</var>.</p>\n      <emu-grammar><emu-production name=\"PrimaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PrimaryExpression\">PrimaryExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yrb110hm\" id=\"prod-mytcbPJI\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>expr</var> be the <emu-nt><a href=\"#prod-ParenthesizedExpression\">ParenthesizedExpression</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return the result of performing <emu-xref aoid=\"NamedEvaluation\"><a href=\"#sec-runtime-semantics-namedevaluation\">NamedEvaluation</a></emu-xref> for <var>expr</var> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ParenthesizedExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ParenthesizedExpression\">ParenthesizedExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s6bvnd5v\" id=\"prod-Q_6y5mca\">\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>) is <emu-val>true</emu-val>.</li><li>Return the result of performing <emu-xref aoid=\"NamedEvaluation\"><a href=\"#sec-runtime-semantics-namedevaluation\">NamedEvaluation</a></emu-xref> for <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"smus6qca\" id=\"prod-pLzR2hGq\">\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateOrdinaryFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateordinaryfunctionexpression\">InstantiateOrdinaryFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"GeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dsczygsq\" id=\"prod--NqycDNV\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateGeneratorFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiategeneratorfunctionexpression\">InstantiateGeneratorFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncGeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xruu4gg0\" id=\"prod-2hHyfg58\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateAsyncGeneratorFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression\">InstantiateAsyncGeneratorFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncFunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"agdmcdye\" id=\"prod-WZTY8BeC\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateAsyncFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateasyncfunctionexpression\">InstantiateAsyncFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ieeod2mi\" id=\"prod-2_XE6Qur\">\n        <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateArrowFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiatearrowfunctionexpression\">InstantiateArrowFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dqxgopsb\" id=\"prod-acGpB7So\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"auwv8gbh\" id=\"prod-AntIZd-c\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"InstantiateAsyncArrowFunctionExpression\"><a href=\"#sec-runtime-semantics-instantiateasyncarrowfunctionexpression\">InstantiateAsyncArrowFunctionExpression</a></emu-xref> of <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> with argument <var>name</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hevpq5jw\" id=\"prod-2c7Rw2XJ\">\n        <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-nt optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>Let <var>decorators</var> be ? <emu-xref aoid=\"DecoratorListEvaluation\"><a href=\"#sec-decoratorlistevaluation\">DecoratorListEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-DecoratorList\">DecoratorList</a></emu-nt>.</li></ol></li><li>Else, let <var>decorators</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>value</var> be the result of <emu-xref aoid=\"ClassDefinitionEvaluation\"><a href=\"#sec-runtime-semantics-classdefinitionevaluation\">ClassDefinitionEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> with arguments <emu-val>undefined</emu-val>, <var>name</var>, and <var>decorators</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>value</var>).</li><li>Set <var>value</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</li><li>Return <var>value</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-operations-on-objects": {"num": "7.3", "title": "#sec-operations-on-objects Operations on Objects", "html": "<emu-clause id=\"sec-operations-on-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-operations-on-objects\">#sec-operations-on-objects</span> Operations on Objects</h1>\n\n    <div id=\"excluded-sec-makebasicobject\"><h1><span class=\"secnum\">7.3.1</span>#sec-makebasicobject MakeBasicObject ( internalSlotsList )</h1>...</div><div id=\"excluded-sec-get-o-p\"><h1><span class=\"secnum\">7.3.2</span>#sec-get-o-p Get ( O, P )</h1>...</div><div id=\"excluded-sec-getv\"><h1><span class=\"secnum\">7.3.3</span>#sec-getv GetV ( V, P )</h1>...</div><div id=\"excluded-sec-set-o-p-v-throw\"><h1><span class=\"secnum\">7.3.4</span>#sec-set-o-p-v-throw Set ( O, P, V, Throw )</h1>...</div><div id=\"excluded-sec-createdataproperty\"><h1><span class=\"secnum\">7.3.5</span>#sec-createdataproperty CreateDataProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createmethodproperty\"><h1><span class=\"secnum\">7.3.6</span>#sec-createmethodproperty CreateMethodProperty ( O, P, V )</h1>...</div><div id=\"excluded-sec-createdatapropertyorthrow\"><h1><span class=\"secnum\">7.3.7</span>#sec-createdatapropertyorthrow CreateDataPropertyOrThrow ( O, P, V )</h1>...</div><div id=\"excluded-sec-definepropertyorthrow\"><h1><span class=\"secnum\">7.3.8</span>#sec-definepropertyorthrow DefinePropertyOrThrow ( O, P, desc )</h1>...</div><div id=\"excluded-sec-deletepropertyorthrow\"><h1><span class=\"secnum\">7.3.9</span>#sec-deletepropertyorthrow DeletePropertyOrThrow ( O, P )</h1>...</div><div id=\"excluded-sec-getmethod\"><h1><span class=\"secnum\">7.3.10</span>#sec-getmethod GetMethod ( V, P )</h1>...</div><div id=\"excluded-sec-hasproperty\"><h1><span class=\"secnum\">7.3.11</span>#sec-hasproperty HasProperty ( O, P )</h1>...</div><div id=\"excluded-sec-hasownproperty\"><h1><span class=\"secnum\">7.3.12</span>#sec-hasownproperty HasOwnProperty ( O, P )</h1>...</div><div id=\"excluded-sec-call\"><h1><span class=\"secnum\">7.3.13</span>#sec-call Call ( F, V [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-construct\"><h1><span class=\"secnum\">7.3.14</span>#sec-construct Construct ( F [ , argumentsList [ , newTarget ] ] )</h1>...</div><div id=\"excluded-sec-setintegritylevel\"><h1><span class=\"secnum\">7.3.15</span>#sec-setintegritylevel SetIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-testintegritylevel\"><h1><span class=\"secnum\">7.3.16</span>#sec-testintegritylevel TestIntegrityLevel ( O, level )</h1>...</div><div id=\"excluded-sec-createarrayfromlist\"><h1><span class=\"secnum\">7.3.17</span>#sec-createarrayfromlist CreateArrayFromList ( elements )</h1>...</div><div id=\"excluded-sec-lengthofarraylike\"><h1><span class=\"secnum\">7.3.18</span>#sec-lengthofarraylike LengthOfArrayLike ( obj )</h1>...</div><div id=\"excluded-sec-createlistfromarraylike\"><h1><span class=\"secnum\">7.3.19</span>#sec-createlistfromarraylike CreateListFromArrayLike ( obj [ , elementTypes ] )</h1>...</div><div id=\"excluded-sec-invoke\"><h1><span class=\"secnum\">7.3.20</span>#sec-invoke Invoke ( V, P [ , argumentsList ] )</h1>...</div><div id=\"excluded-sec-ordinaryhasinstance\"><h1><span class=\"secnum\">7.3.21</span>#sec-ordinaryhasinstance OrdinaryHasInstance ( C, O )</h1>...</div><div id=\"excluded-sec-speciesconstructor\"><h1><span class=\"secnum\">7.3.22</span>#sec-speciesconstructor SpeciesConstructor ( O, defaultConstructor )</h1>...</div><div id=\"excluded-sec-enumerableownpropertynames\"><h1><span class=\"secnum\">7.3.23</span>#sec-enumerableownpropertynames EnumerableOwnPropertyNames ( O, kind )</h1>...</div><div id=\"excluded-sec-getfunctionrealm\"><h1><span class=\"secnum\">7.3.24</span>#sec-getfunctionrealm GetFunctionRealm ( obj )</h1>...</div><div id=\"excluded-sec-copydataproperties\"><h1><span class=\"secnum\">7.3.25</span>#sec-copydataproperties CopyDataProperties ( target, source, excludedItems )</h1>...</div><div id=\"excluded-sec-privateelementfind\"><h1><span class=\"secnum\">7.3.26</span>#sec-privateelementfind PrivateElementFind ( P, O )</h1>...</div><div id=\"excluded-sec-privatefieldadd\"><h1><span class=\"secnum\">7.3.27</span>#sec-privatefieldadd PrivateFieldAdd ( P, O, value )</h1>...</div><div id=\"excluded-sec-privatemethodoraccessoradd\"><h1><span class=\"secnum\">7.3.28</span>#sec-privatemethodoraccessoradd PrivateMethodOrAccessorAdd ( method, O )</h1>...</div><div id=\"excluded-sec-privateget\"><h1><span class=\"secnum\">7.3.29</span>#sec-privateget PrivateGet ( P, O )</h1>...</div><div id=\"excluded-sec-privateset\"><h1><span class=\"secnum\">7.3.30</span>#sec-privateset PrivateSet ( P, O, value )</h1>...</div><div id=\"excluded-sec-defineelement\"><h1><span class=\"secnum\">7.3.31</span>#sec-defineelement DefineElement ( receiver, elementRecord )</h1>...</div><div id=\"excluded-sec-initializeinstanceelements\"><h1><span class=\"secnum\">7.3.32</span>#sec-initializeinstanceelements InitializeInstanceElements ( O, constructor )</h1>...</div></emu-clause>\n\n  "}, "sec-class-definitions": {"num": "15.8", "title": "#sec-class-definitions Class Definitions", "html": "<emu-clause id=\"sec-class-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-class-definitions\">#sec-class-definitions</span> Class Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"ClassDeclaration\" params=\"Yield, Await, Default\" id=\"prod-ClassDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zjnoitib\" id=\"prod-DqWnRJPZ\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"vkeew36z\" constraints=\"+Default\" id=\"prod-F2WWa1vA\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassExpression\" params=\"Yield, Await\" id=\"prod-ClassExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassExpression\">ClassExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5mnnp241\" id=\"prod-W4DvcjlY\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>class</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassTail\" params=\"Yield, Await\" id=\"prod-ClassTail\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassTail\">ClassTail</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0tcpjpju\" id=\"prod-mIr25y7h\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassHeritage\" params=\"Yield, Await\" id=\"prod-ClassHeritage\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"eyngn05c\">\n        <emu-t>extends</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassBody\" params=\"Yield, Await\" id=\"prod-ClassBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"hi6rf-a8\" id=\"prod-YUQCWiaa\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElementList\" params=\"Yield, Await\" id=\"prod-ClassElementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"l7zmtagw\" id=\"prod-ADR6-dWZ\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ga1dtfdq\" id=\"prod-sKhHHXFQ\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementList\">ClassElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElement\" params=\"Yield, Await\" id=\"prod-ClassElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElement\">ClassElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gq6zomhx\" id=\"prod-xHcZGKTA\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"02kqysds\" id=\"prod-ZXs_6NVt\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"3oyde-rg\" id=\"prod-uhtH5oeH\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"ontb5hi8\" id=\"prod-D5Wln7TX\">\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-DecoratorList\">DecoratorList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>static</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"sg2sawim\" id=\"prod-0Xskgzt4\"><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FieldDefinition\" params=\"Yield, Await\" id=\"prod-FieldDefinition\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FieldDefinition\">FieldDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tlc4azd3\" id=\"prod-qdC94hXo\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"5p-oa_qw\" id=\"prod-ZQHsgv17\">\n        <emu-t>accessor</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ClassElementName\" params=\"Yield, Await\" id=\"prod-ClassElementName\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"jbcjyldj\" id=\"prod-G9YdmiD5\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ie2-zc1c\" id=\"prod-BPUn8Lt3\"><emu-nt><a href=\"#prod-PrivateIdentifier\">PrivateIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>A class definition is always <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-class-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.8.1</span>#sec-class-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-classelementkind\"><h1><span class=\"secnum\">15.8.2</span>#sec-static-semantics-classelementkind Static Semantics: ClassElementKind</h1>...</div><div id=\"excluded-sec-static-semantics-constructormethod\"><h1><span class=\"secnum\">15.8.3</span>#sec-static-semantics-constructormethod Static Semantics: ConstructorMethod</h1>...</div><div id=\"excluded-sec-static-semantics-isstatic\"><h1><span class=\"secnum\">15.8.4</span>#sec-static-semantics-isstatic Static Semantics: IsStatic</h1>...</div><div id=\"excluded-sec-static-semantics-nonconstructorelements\"><h1><span class=\"secnum\">15.8.5</span>#sec-static-semantics-nonconstructorelements Static Semantics: NonConstructorElements</h1>...</div><div id=\"excluded-sec-static-semantics-prototypepropertynamelist\"><h1><span class=\"secnum\">15.8.6</span>#sec-static-semantics-prototypepropertynamelist Static Semantics: PrototypePropertyNameList</h1>...</div><div id=\"excluded-sec-static-semantics-allprivateidentifiersvalid\"><h1><span class=\"secnum\">15.8.7</span>#sec-static-semantics-allprivateidentifiersvalid Static Semantics: AllPrivateIdentifiersValid</h1>...</div><div id=\"excluded-sec-static-semantics-privateboundidentifiers\"><h1><span class=\"secnum\">15.8.8</span>#sec-static-semantics-privateboundidentifiers Static Semantics: PrivateBoundIdentifiers</h1>...</div><div id=\"excluded-sec-static-semantics-containsarguments\"><h1><span class=\"secnum\">15.8.9</span>#sec-static-semantics-containsarguments Static Semantics: ContainsArguments</h1>...</div><div id=\"excluded-sec-class-definitions-static-semantics-methoddecorators\"><h1><span class=\"secnum\">15.8.10</span>#sec-class-definitions-static-semantics-methoddecorators Static Semantics: Method Decorators</h1>...</div><div id=\"excluded-sec-createfieldinitializerfunction\"><h1><span class=\"secnum\">15.8.11</span>#sec-createfieldinitializerfunction CreateFieldInitializerFunction ( propName, homeObject, Initializer )</h1>...</div><div id=\"excluded-sec-makeautoaccessorgetter\"><h1><span class=\"secnum\">15.8.12</span>#sec-makeautoaccessorgetter MakeAutoAccessorGetter ( name, privateStateName, homeObject )</h1>...</div><div id=\"excluded-sec-makeautoaccessorsetter\"><h1><span class=\"secnum\">15.8.13</span>#sec-makeautoaccessorsetter MakeAutoAccessorSetter ( name, privateStateName, homeObject )</h1>...</div><div id=\"excluded-sec-runtime-semantics-classfielddefinitionevaluation\"><h1><span class=\"secnum\">15.8.14</span>#sec-runtime-semantics-classfielddefinitionevaluation Runtime Semantics: ClassFieldDefinitionEvaluation</h1>...</div><div id=\"excluded-sec-static-semantics-classelementevaluation\"><h1><span class=\"secnum\">15.8.15</span>#sec-static-semantics-classelementevaluation Runtime Semantics: ClassElementEvaluation</h1>...</div><div id=\"excluded-sec-runtime-semantics-classdefinitionevaluation\"><h1><span class=\"secnum\">15.8.16</span>#sec-runtime-semantics-classdefinitionevaluation Runtime Semantics: ClassDefinitionEvaluation</h1>...</div><div id=\"excluded-sec-runtime-semantics-bindingclassdeclarationevaluation\"><h1><span class=\"secnum\">15.8.17</span>#sec-runtime-semantics-bindingclassdeclarationevaluation Runtime Semantics: BindingClassDeclarationEvaluation</h1>...</div><div id=\"excluded-sec-class-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.8.18</span>#sec-class-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cmjfjhkc\" id=\"prod-k7_ObWcc\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mn4pemzx\" id=\"prod-he3lY70e\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uvsblmsd\" id=\"prod-J1Dzjg4f\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"iqenfemp\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ap7dhqxm\" id=\"prod-oFwa4ZD6\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"dd23jrxs\" id=\"prod-GXF21Ewo\">\n        <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>\n        <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4fwtd8-6\" id=\"prod-0vrrEsBm\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ky6bsn7x\" id=\"prod-WCJmhvY4\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"unijm5xs\" id=\"prod-jXCkpXv4\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"glhuxxec\" id=\"prod-WzAgO-V_\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"odcuzpbi\" id=\"prod-CDGJVPkq\">\n        <emu-t>import</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"oi8izote\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"81tm-dw4\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"zfagpfvq\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"y9r1l58g\" id=\"prod-kEa0XgB6\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ih8rgsdx\" id=\"prod-wyOKxI9w\">\n        <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-XiX5S_vU\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"t2qf80pb\" id=\"prod-AScJop1Y\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-SkqVKtrZ\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"g1js-lhi\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"bxjtogxx\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"rev6es22\">\n        <emu-t>from</emu-t>\n        <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"upllvvnq\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ggcfvgot\" id=\"prod-UCgvcMcb\">\n        <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vt7awvcp\" id=\"prod-5TmWi69r\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"onppcdhk\" id=\"prod-Pd4rUvEL\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"xhtltz00\" id=\"prod-sCJUL89L\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bsylxsqy\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4kqfdugp\" id=\"prod-xWvkB_EQ\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>\n        <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"j2lh_kda\" id=\"prod---2Mdo2Q\">\n        <emu-t>export</emu-t>\n        <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"awunbvdu\" id=\"prod-w_WAVAwX\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"a8mbl6ic\" id=\"prod-60Xh0dpZ\">\n        <emu-t>export</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"0pjhun9m\" id=\"prod-bE4rfMak\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"ridmvkht\" id=\"prod-KPFnW3Lq\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"r5fy4tuz\" id=\"prod-hZQ57BEN\">\n        <emu-t>export</emu-t>\n        <emu-t>default</emu-t>\n        <emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t>, <emu-t>@</emu-t> }]</emu-gann>\n        <emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>;</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"sb5ztei-\" id=\"prod-A39AIi_B\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"dtcd7req\" id=\"prod-o48mDNgZ\">\n        <emu-t>*</emu-t>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"_xs5tuve\" id=\"prod-bKXP43lb\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"gbpaspne\" id=\"prod-tKOro2Xm\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"kbfbtt8z\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"wwyi_qo2\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"w1vp78-i\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"gqfndot_\" id=\"prod-JgWQiNCe\">\n        <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"drsx4tka\" id=\"prod-JyH8gtYm\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"qvusrr4h\" id=\"prod-HMTDwQcl\">\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n        <emu-t>as</emu-t>\n        <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-async-function-definitions": {"num": "15.9", "title": "#sec-async-function-definitions Async Function Definitions", "html": "<emu-clause id=\"sec-async-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</span> Async Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncFunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-AsyncFunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"9rildsyw\" id=\"prod-iAuKx0s9\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"_vbcugdo\" constraints=\"+Default\" id=\"prod-TaHP58mu\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" id=\"prod-AsyncFunctionExpression\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mviccgpw\" id=\"prod-LFCRNt3l\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncMethod\" params=\"Yield, Await\" id=\"prod-AsyncMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tzooi3sy\" id=\"prod-80co-gZ6\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionBody\" id=\"prod-AsyncFunctionBody\">\n    <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"j_tcfidx\" id=\"prod-WjFwGBMF\"><emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"AwaitExpression\" params=\"Yield\" id=\"prod-AwaitExpression\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AwaitExpression\">AwaitExpression</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"wzxw5xwu\">\n        <emu-t>await</emu-t>\n        <emu-nt params=\"?Yield, +Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p><code>await</code> is parsed as an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> when the <sub>[Await]</sub> parameter is present. The <sub>[Await]</sub> parameter is present in the following contexts:</p>\n      <ul>\n        <li>In an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>. <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> in this position is a Syntax error via <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref>.</li>\n      </ul>\n      <p>When <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> and the <sub>[Await]</sub> parameter is absent, <code>await</code> is parsed as a <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> and will be a Syntax error. When <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> is the syntactic <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>, <code>await</code> may be parsed as an identifier when the <sub>[Await]</sub> parameter is absent. This includes the following contexts:</p>\n      <ul>\n        <li>Anywhere outside of an <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> or <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n        <li>In the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>.</li>\n      </ul>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>Unlike <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt>, it is a Syntax Error to omit the operand of an <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt>. You must await something.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-async-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.9.1</span>#sec-async-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncfunctionobject\"><h1><span class=\"secnum\">15.9.2</span>#sec-runtime-semantics-instantiateasyncfunctionobject Runtime Semantics: InstantiateAsyncFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncfunctionexpression\"><h1><span class=\"secnum\">15.9.3</span>#sec-runtime-semantics-instantiateasyncfunctionexpression Runtime Semantics: InstantiateAsyncFunctionExpression</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluateasyncfunctionbody\"><h1><span class=\"secnum\">15.9.4</span>#sec-runtime-semantics-evaluateasyncfunctionbody Runtime Semantics: EvaluateAsyncFunctionBody</h1>...</div><div id=\"excluded-sec-async-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.9.5</span>#sec-async-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-metadata-record-specification-type": {"num": "6.2.11", "title": "#sec-metadata-record-specification-type The Metadata Record Specification Type", "html": "<emu-clause id=\"sec-metadata-record-specification-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-metadata-record-specification-type\">#sec-metadata-record-specification-type</span> The Metadata Record Specification Type</h1>\n      <p>The Metadata type is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> used in the specification of decorator metadata. When defining metadata for a given decorated value, one Metadata Record is created for each user unique provided metadata key.</p>\n      <p>Values of the Metadata type are <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> values whose fields are defined as by <emu-xref href=\"#table-metadata-fields\"><a href=\"#table-metadata-fields\" class=\"excluded-xref\" excluded-id=\"table-metadata-fields\">#table-metadata-fields</a></emu-xref>. Such values are referred to as <dfn>Metadata Record</dfn>s.</p>\n      <emu-table id=\"table-metadata-fields\" caption=\"Metadata Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-metadata-fields\">#table-metadata-fields</span>: <emu-xref href=\"#sec-metadata-record-specification-type\"><a href=\"#sec-metadata-record-specification-type\">Metadata Record</a></emu-xref> Fields</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Field Name\n            </th>\n            <th>\n              Value\n            </th>\n            <th>\n              Meaning\n            </th>\n          </tr>\n          <tr>\n            <td>\n              [[Key]]\n            </td>\n            <td>\n              a Symbol\n            </td>\n            <td>\n              The key the metadata is associated with\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Constructor]]\n            </td>\n            <td>\n              any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> or <emu-const>empty</emu-const>\n            </td>\n            <td>\n              The metadata associated with a class directly via a class decorator\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Public]]\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose values are records with [[Key]] and [[Value]] fields which contain metadata associated with the public class elements of a class\n            </td>\n          </tr>\n          <tr>\n            <td>\n              [[Private]]\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>\n            </td>\n            <td>\n              a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose values are records with [[Key]] and [[Value]] fields which contain metadata associated with the private class elements of a class\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-runtime-semantics-classdefinitionevaluation": {"num": "15.8.16", "title": "#sec-runtime-semantics-classdefinitionevaluation Runtime Semantics: ClassDefinitionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-classdefinitionevaluation\" type=\"sdo\" aoid=\"ClassDefinitionEvaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-classdefinitionevaluation\">#sec-runtime-semantics-classdefinitionevaluation</span> Runtime Semantics: ClassDefinitionEvaluation</h1>\n      <p>With parameters <var>classBinding</var>, <var>className</var>, and <var>decorators</var>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For ease of specification, private methods and accessors are included alongside private fields in the [[PrivateElements]] slot of class instances. However, any given object has either all or none of the private methods and accessors defined by a given class. This feature has been designed so that implementations may choose to implement private methods and accessors using a strategy which does not require tracking each method or accessor individually.</p>\n        <p>For example, an implementation could directly associate instance private methods with their corresponding <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> and track, for each object, which class constructors have run with that object as their <code>this</code> value. Looking up an instance private method on an object then consists of checking that the class <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> which defines the method has been used to initialize the object, then returning the method associated with the <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>.</p>\n        <p>This differs from private fields: because field initializers can throw during class instantiation, an individual object may have some proper subset of the private fields of a given class, and so private fields must in general be tracked individually.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"ClassTail\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassTail\">ClassTail</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"uopqpdqx\" id=\"prod-AcPtObVs\">\n        <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>{</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>env</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>classScope</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>env</var>).</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.CreateImmutableBinding(<var>classBinding</var>, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>outerPrivateEnvironment</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment.</li><li>Let <var>classPrivateEnvironment</var> be <emu-xref aoid=\"NewPrivateEnvironment\"><a href=\"#sec-newprivateenvironment\">NewPrivateEnvironment</a></emu-xref>(<var>outerPrivateEnvironment</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, then<ol><li>For each String <var>dn</var> of the <emu-xref aoid=\"PrivateBoundIdentifiers\"><a href=\"#sec-static-semantics-privateboundidentifiers\">PrivateBoundIdentifiers</a></emu-xref> of <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>, do<ol><li>If <var>classPrivateEnvironment</var>.[[Names]] contains a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] is <var>dn</var>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is only possible for getter/setter pairs.</li></ol></li><li>Else,<ol><li>Let <var>name</var> be a new <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref> whose [[Description]] value is <var>dn</var>.</li><li>Append <var>name</var> to <var>classPrivateEnvironment</var>.[[Names]].</li></ol></li></ol></li></ol></li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, then<ol><li>Let <var>protoParent</var> be <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else,<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>NOTE: The <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment is <var>outerPrivateEnvironment</var> when evaluating <emu-nt><a href=\"#prod-ClassHeritage\">ClassHeritage</a></emu-nt>.</li><li>Let <var>superclassRef</var> be the result of evaluating <emu-nt><a href=\"#prod-ClassHeritage\">ClassHeritage</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Let <var>superclass</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>superclassRef</var>).</li><li>If <var>superclass</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>protoParent</var> be <emu-val>null</emu-val>.</li><li>Let <var>constructorParent</var> be <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li></ol></li><li>Else if <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>superclass</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Else,<ol><li>Let <var>protoParent</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>superclass</var>, <emu-val>\"prototype\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>protoParent</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorParent</var> be <var>superclass</var>.</li></ol></li></ol></li><li>Let <var>proto</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>protoParent</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>constructor</var> be <emu-const>empty</emu-const>.</li><li>Else, let <var>constructor</var> be <emu-xref aoid=\"ConstructorMethod\"><a href=\"#sec-static-semantics-constructormethod\">ConstructorMethod</a></emu-xref> of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>classScope</var>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>classPrivateEnvironment</var>.</li><li>If <var>constructor</var> is <emu-const>empty</emu-const>, then<ol><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-default-constructor-functions\" title=\"\"><a href=\"#sec-default-constructor-functions\">Default Constructor Functions</a></emu-xref>.</li><li>Let <var>F</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, 0, <var>className</var>, &#171; [[ConstructorKind]], [[SourceText]] &#187;, <emu-const>empty</emu-const>, <var>constructorParent</var>).</li></ol></li><li>Else,<ol><li>Let <var>constructorInfo</var> be ! <emu-xref aoid=\"DefineMethod\"><a href=\"#sec-runtime-semantics-definemethod\">DefineMethod</a></emu-xref> of <var>constructor</var> with arguments <var>proto</var> and <var>constructorParent</var>.</li><li>Let <var>F</var> be <var>constructorInfo</var>.[[Closure]].</li><li>Perform !&#160;<emu-xref aoid=\"MakeClassConstructor\"><a href=\"#sec-makeclassconstructor\">MakeClassConstructor</a></emu-xref>(<var>F</var>).</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>className</var>).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>, <emu-val>false</emu-val>, <var>proto</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassHeritage\">ClassHeritage</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present, set <var>F</var>.[[ConstructorKind]] to <emu-const>derived</emu-const>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateMethodProperty\"><a href=\"#sec-createmethodproperty\">CreateMethodProperty</a></emu-xref>(<var>proto</var>, <emu-val>\"constructor\"</emu-val>, <var>F</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-ClassBody\">ClassBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is not present, let <var>elements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Else, let <var>elements</var> be <emu-xref aoid=\"NonConstructorElements\"><a href=\"#sec-static-semantics-nonconstructorelements\">NonConstructorElements</a></emu-xref> of <emu-nt><a href=\"#prod-ClassBody\">ClassBody</a></emu-nt>.</li><li>Let <var>instancePrivateMethods</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>staticPrivateMethods</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>instanceElements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>staticElements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>instanceMetadataList</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>staticMetadataList</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> <var>e</var> of <var>elements</var>, do<ol><li>If <emu-xref aoid=\"IsStatic\"><a href=\"#sec-static-semantics-isstatic\">IsStatic</a></emu-xref> of <var>e</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>element</var> be <emu-xref aoid=\"ClassElementEvaluation\"><a href=\"#sec-static-semantics-classelementevaluation\">ClassElementEvaluation</a></emu-xref> of <var>e</var> with arguments <var>proto</var>, <emu-val>false</emu-val>, and <var>instanceMetadataList</var>.</li></ol></li><li>Else,<ol><li>Let <var>element</var> be <emu-xref aoid=\"ClassElementEvaluation\"><a href=\"#sec-static-semantics-classelementevaluation\">ClassElementEvaluation</a></emu-xref> of <var>e</var> with arguments <var>F</var>, <emu-val>false</emu-val>, and <var>staticMetadataList</var>.</li></ol></li><li>If <var>element</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>outerPrivateEnvironment</var>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>element</var>).</li></ol></li><li>Set <var>element</var> to <var>element</var>.[[Value]].</li><li>If <var>element</var>.[[Kind]] is not <emu-const>field</emu-const> and <var>element</var>.[[Key]] is a <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Name</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"IsStatic\"><a href=\"#sec-static-semantics-isstatic\">IsStatic</a></emu-xref> of <var>e</var> is <emu-val>false</emu-val>, let <var>container</var> be <var>instancePrivateMethods</var>.</li><li>Else, let <var>container</var> be <var>staticPrivateMethods</var>.</li><li>If <var>container</var> contains a <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> whose [[Key]] is <var>element</var>.[[Key]], then<ol><li>Let <var>existing</var> be that <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>element</var>.[[Kind]] is <emu-const>getter</emu-const> or <emu-const>setter</emu-const>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>existing</var>.[[Kind]] is <emu-const>accessor</emu-const>.</li><li>If <var>element</var>.[[Get]] is <emu-val>undefined</emu-val>, then<ol><li>Let <var>combined</var> be <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>existing</var>.[[Key]], [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <var>existing</var>.[[Get]], [[Set]]: <var>element</var>.[[Set]] }.</li></ol></li><li>Else,<ol><li>Let <var>combined</var> be <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>existing</var>.[[Key]], [[Kind]]: <emu-const>accessor</emu-const>, [[Get]]: <var>element</var>.[[Get]], [[Set]]: <var>existing</var>.[[Set]] }.</li></ol></li><li>Replace <var>existing</var> in <var>container</var> with <var>combined</var>.</li></ol></li><li>Else,<ol><li>If <var>element</var>.[[Kind]] is <emu-const>getter</emu-const> or <emu-const>setter</emu-const>, let <var>kind</var> be <emu-const>accessor</emu-const>.</li><li>Else, let <var>kind</var> be <var>element</var>.[[Kind]].</li><li>Let <var>privateElement</var> be <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> { [[Key]]: <var>element</var>.[[Key]], [[Kind]]: <var>kind</var>, [[Value]]: <var>element</var>.[[Value]], [[Get]]: <var>element</var>.[[Get]], [[Set]]: <var>element</var>.[[Set]] }.</li><li>Append <var>privateElement</var> to <var>container</var>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"IsStatic\"><a href=\"#sec-static-semantics-isstatic\">IsStatic</a></emu-xref> of <var>e</var> is <emu-val>false</emu-val>, append <var>element</var> to <var>instanceElements</var>.</li><li>Else, append <var>element</var> to <var>staticElements</var>.</li></ol></li><li>Let <var>parentInstanceMetadata</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>protoParent</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@metadata</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>proto</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@metadata</a></emu-xref>, <emu-xref aoid=\"ConvertDecoratorMetadataListToObject\"><a href=\"#sec-convertdecoratormetadatalisttoobject\">ConvertDecoratorMetadataListToObject</a></emu-xref>(<var>instanceMetadataList</var>, <var>parentInstanceMetadata</var>)).</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>env</var>.</li><li>If <var>classBinding</var> is not <emu-val>undefined</emu-val>, then<ol><li>Perform <var>classScope</var>.InitializeBinding(<var>classBinding</var>, <var>F</var>).</li></ol></li><li>Set <var>F</var>.[[PrivateMethods]] to <var>instancePrivateMethods</var>.</li><li>Set <var>F</var>.[[Elements]] to <var>instanceElements</var>.</li><li>For each <emu-xref href=\"#sec-privateelement-specification-type\"><a href=\"#sec-privateelement-specification-type\">PrivateElement</a></emu-xref> <var>method</var> of <var>staticPrivateMethods</var>, do<ol><li>Perform !&#160;<emu-xref aoid=\"PrivateMethodOrAccessorAdd\"><a href=\"#sec-privatemethodoraccessoradd\">PrivateMethodOrAccessorAdd</a></emu-xref>(<var>method</var>, <var>F</var>).</li></ol></li><li>Let <var>initializers</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>decorator</var> of <var>decorators</var>, do<ol><li>Let <var>context</var> be <emu-xref aoid=\"CreateDecoratorContextObject\"><a href=\"#sec-createdecoratorcontextobject\">CreateDecoratorContextObject</a></emu-xref>(<emu-val>\"class\"</emu-val>, <var>className</var>, <var>staticMetadataList</var>, <var>initializers</var>).</li><li>Let <var>newF</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>decorator</var>.[[Decorator]], <emu-val>undefined</emu-val>, &#171; <var>F</var>, <var>context</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>newF</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>F</var> to <var>newF</var>.</li></ol></li><li>Else if <var>newF</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>For each element <var>elementRecord</var> of <var>staticElements</var>, do<ol><li>Let <var>result</var> be <emu-xref aoid=\"DefineElement\"><a href=\"#sec-defineelement\">DefineElement</a></emu-xref>(<var>F</var>, <var>elementRecord</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>outerPrivateEnvironment</var>.</li><li>Return <var>result</var>.</li></ol></li></ol></li><li>Let <var>parentStaticMetadata</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>constructorParent</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@metadata</a></emu-xref>).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@metadata</a></emu-xref>, <emu-xref aoid=\"ConvertDecoratorMetadataListToObject\"><a href=\"#sec-convertdecoratormetadatalisttoobject\">ConvertDecoratorMetadataListToObject</a></emu-xref>(<var>staticMetadataList</var>, <var>parentStaticMetadata</var>)).</li><li>For each element <var>initializer</var> of <var>initializers</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>initializer</var>, <var>F</var>).</li></ol></li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s PrivateEnvironment to <var>outerPrivateEnvironment</var>.</li><li>Return <var>F</var>.</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-default-constructor-functions\"><h1><span class=\"secnum\">15.8.16.1</span>#sec-default-constructor-functions Default Constructor Functions</h1>...</div></emu-clause>\n\n    "}, "sec-makeautoaccessorsetter": {"num": "15.8.13", "title": "#sec-makeautoaccessorsetter MakeAutoAccessorSetter ( name, privateStateName, homeObject )", "html": "<emu-clause id=\"sec-makeautoaccessorsetter\" aoid=\"MakeAutoAccessorSetter\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makeautoaccessorsetter\">#sec-makeautoaccessorsetter</span> MakeAutoAccessorSetter ( <var>name</var>, <var>privateStateName</var>, <var>homeObject</var> )</h1>\n      <p>The abstract operation <emu-xref aoid=\"MakeAutoAccessorGetter\"><a href=\"#sec-makeautoaccessorgetter\">MakeAutoAccessorGetter</a></emu-xref> takes arguments <var>name</var>, <var>privateStateName</var>, and <var>homeObject</var>. It creates a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that when executed sets the value stored in the private field associated with <var>privateStateName</var> on the current <code>this</code> value of the function call. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>steps</var> be the steps of an AutoAccessorSetter function as specified below.</li><li>Let <var>length</var> be the number of non-optional parameters of an AutoAccessorSetter function as specified below.</li><li>Let <var>setter</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, <var>length</var>, <emu-val>\"\"</emu-val>, &#171; [[PrivateStateKey]] &#187;).</li><li>Set <var>setter</var>.[[PrivateStateKey]] to <var>privateStateName</var>.</li><li>Perform <emu-xref aoid=\"MakeMethod\"><a href=\"#sec-makemethod\">MakeMethod</a></emu-xref>(<var>setter</var>, <var>homeObject</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>setter</var>, <var>name</var>, <emu-val>\"set\"</emu-val>).</li><li>Return <var>setter</var>.</li></ol></emu-alg>\n      <p>An AutoAccessorSetter function is an anonymous built-in function with a [[PrivateStateKey]] internal slot. When an AutoAccessorSetter function is called with argument <var>value</var> it performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>o</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>f</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Perform ?&#160;<emu-xref aoid=\"PrivateSet\"><a href=\"#sec-privateset\">PrivateSet</a></emu-xref>(<var>f</var>.[[PrivateStateKey]], <var>o</var>, <var>value</var>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions": {"num": "15.10", "title": "#sec-async-arrow-function-definitions Async Arrow Function Definitions", "html": "<emu-clause id=\"sec-async-arrow-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</span> Async Arrow Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\" id=\"prod-AsyncArrowFunction\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"u1dc5ef3\" id=\"prod-YIoJOc1p\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"callcover\" id=\"prod-WTX_aban\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncConciseBody\" params=\"In\" id=\"prod-AsyncConciseBody\">\n    <emu-nt params=\"In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bpu3_ipt\" id=\"prod-Dfs5WPuP\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, +Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"bm-b5ose\" id=\"prod-Kq4Uu2cU\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\" id=\"prod-AsyncArrowBindingIdentifier\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yuozsg2r\" id=\"prod-cDxY5q2J\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" params=\"Yield, Await\" id=\"prod-CoverCallExpressionAndAsyncArrowHead\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"90e-xzcw\" id=\"prod-HT-vtkeW\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MemberExpression\">MemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <h2>Supplemental Syntax</h2>\n    <p>When processing an instance of the production\n      <br>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"auwv8gbh\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is refined using the following grammar:</p>\n\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowHead\" id=\"prod-AsyncArrowHead\">\n    <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ydfl_ghb\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.10.1</span>#sec-async-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-asyncconcisebodycontainsusestrict\"><h1><span class=\"secnum\">15.10.2</span>#sec-static-semantics-asyncconcisebodycontainsusestrict Static Semantics: AsyncConciseBodyContainsUseStrict</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluateasyncconcisebody\"><h1><span class=\"secnum\">15.10.3</span>#sec-runtime-semantics-evaluateasyncconcisebody Runtime Semantics: EvaluateAsyncConciseBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncarrowfunctionexpression\"><h1><span class=\"secnum\">15.10.4</span>#sec-runtime-semantics-instantiateasyncarrowfunctionexpression Runtime Semantics: InstantiateAsyncArrowFunctionExpression</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.10.5</span>#sec-async-arrow-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-tail-position-calls": {"num": "15.11", "title": "#sec-tail-position-calls Tail Position Calls", "html": "<emu-clause id=\"sec-tail-position-calls\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tail-position-calls\">#sec-tail-position-calls</span> Tail Position Calls</h1>\n\n    <div id=\"excluded-sec-isintailposition\"><h1><span class=\"secnum\">15.11.1</span>#sec-isintailposition Static Semantics: IsInTailPosition ( call )</h1>...</div><div id=\"excluded-sec-static-semantics-hascallintailposition\"><h1><span class=\"secnum\">15.11.2</span>#sec-static-semantics-hascallintailposition Static Semantics: HasCallInTailPosition</h1>...</div><div id=\"excluded-sec-preparefortailcall\"><h1><span class=\"secnum\">15.11.3</span>#sec-preparefortailcall PrepareForTailCall ( )</h1>...</div></emu-clause>\n"}}, "figData": {"table-well-known-symbols": "Table 1", "table-classelementdefinition-fields": "Table 12", "table-metadata-fields": "Table 13", "table-internal-slots-of-ecmascript-function-objects": "Table 34"}}}