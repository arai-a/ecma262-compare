{"from": {"secList": ["sec-array-exotic-objects-defineownproperty-p-desc"], "secData": {"sec-array-exotic-objects-defineownproperty-p-desc": {"num": "9.4.2.1", "title": "#sec-array-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-array-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>When the [[DefineOwnProperty]] internal method of an Array <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>A</var> is called with property key <var>P</var>, and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <var>P</var> is <emu-val>\"length\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"ArraySetLength\"><a href=\"#sec-arraysetlength\">ArraySetLength</a></emu-xref>(<var>A</var>, <var>Desc</var>).</li></ol></li><li>Else if <var>P</var> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, then<ol><li>Let <var>oldLenDesc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLenDesc</var> will never be <emu-val>undefined</emu-val> or an accessor descriptor because Array objects are created with a length <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> that cannot be deleted or reconfigured.</li><li>Let <var>oldLen</var> be <var>oldLenDesc</var>.[[Value]].</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>).</li><li>If <var>index</var> &#8805; <var>oldLen</var> and <var>oldLenDesc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>succeeded</var> be !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> &#8805; <var>oldLen</var>, then<ol><li>Set <var>oldLenDesc</var>.[[Value]] to <var>index</var> + 1.</li><li>Let <var>succeeded</var> be <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>oldLenDesc</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>succeeded</var> is <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-array-exotic-objects-defineownproperty-p-desc"], "secData": {"sec-array-exotic-objects-defineownproperty-p-desc": {"num": "9.4.2.1", "title": "#sec-array-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-array-exotic-objects-defineownproperty-p-desc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n        <p>When the [[DefineOwnProperty]] internal method of an Array <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> <var>A</var> is called with property key <var>P</var>, and <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> <var>Desc</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <var>P</var> is <emu-val>\"length\"</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"ArraySetLength\"><a href=\"#sec-arraysetlength\">ArraySetLength</a></emu-xref>(<var>A</var>, <var>Desc</var>).</li></ol></li><li>Else if <var>P</var> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, then<ol><li>Let <var>lengthDesc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>lengthDesc</var> will never be <emu-val>undefined</emu-val> or an accessor descriptor because Array objects are created with a length <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> that cannot be deleted or reconfigured.</li><li>Let <var>length</var> be <var>lengthDesc</var>.[[Value]].</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>).</li><li>If <var>index</var> &#8805; <var>length</var> and <var>lengthDesc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>succeeded</var> be !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> &#8805; <var>length</var>, then<ol><li>Set <var>lengthDesc</var>.[[Value]] to <var>index</var> + 1.</li><li>Let <var>succeeded</var> be <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>lengthDesc</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>succeeded</var> is <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <var>P</var>, <var>Desc</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}}