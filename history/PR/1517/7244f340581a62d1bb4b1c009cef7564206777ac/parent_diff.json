{"from": {"secList": ["sec-regexp-prototype-matchall"], "secData": {"sec-regexp-prototype-matchall": {"num": "21.2.5.8", "title": "#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )", "html": "<emu-clause id=\"sec-regexp-prototype-matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-prototype-matchall\">#sec-regexp-prototype-matchall</span> RegExp.prototype [ @@matchAll ] ( <var>string</var> )</h1>\n\n        <p>When the <code>@@matchAll</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"flags\"</code>)).</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>R</var>, <var>flags</var> &#187;).</li><li>Let <var>lastIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"lastIndex\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>matcher</var>, <code>\"lastIndex\"</code>, <var>lastIndex</var>, <emu-val>true</emu-val>).</li><li>If <var>flags</var> contains <code>\"g\"</code>, let <var>global</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>global</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <code>\"u\"</code>, let <var>fullUnicode</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>fullUnicode</var> be <emu-val>false</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"CreateRegExpStringIterator\"><a href=\"#sec-createregexpstringiterator\">CreateRegExpStringIterator</a></emu-xref>(<var>matcher</var>, <var>S</var>, <var>global</var>, <var>fullUnicode</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>name</emu-val> property of this function is <emu-val>\"[Symbol.matchAll]\"</emu-val>.</p>\n\n        <div id=\"excluded-sec-createregexpstringiterator\"><h1><span class=\"secnum\">21.2.5.8.1</span>#sec-createregexpstringiterator CreateRegExpStringIterator ( R, S, global, fullUnicode )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-regexp-prototype-matchall"], "secData": {"sec-regexp-prototype-matchall": {"num": "21.2.5.8", "title": "#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )", "html": "<emu-clause id=\"sec-regexp-prototype-matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-prototype-matchall\">#sec-regexp-prototype-matchall</span> RegExp.prototype [ @@matchAll ] ( <var>string</var> )</h1>\n\n        <p>When the <code>@@matchAll</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flagsValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"flags\"</code>).</li><li>If <var>flagsValue</var> is <emu-val>undefined</emu-val>, let <var>flags</var> be the empty String, else let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flagsValue</var>).</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>R</var>, <var>flags</var> &#187;).</li><li>Let <var>lastIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"lastIndex\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>matcher</var>, <code>\"lastIndex\"</code>, <var>lastIndex</var>, <emu-val>true</emu-val>).</li><li>If <var>flags</var> contains <code>\"g\"</code>, let <var>global</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>global</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <code>\"u\"</code>, let <var>fullUnicode</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>fullUnicode</var> be <emu-val>false</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"CreateRegExpStringIterator\"><a href=\"#sec-createregexpstringiterator\">CreateRegExpStringIterator</a></emu-xref>(<var>matcher</var>, <var>S</var>, <var>global</var>, <var>fullUnicode</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>name</emu-val> property of this function is <emu-val>\"[Symbol.matchAll]\"</emu-val>.</p>\n\n        <div id=\"excluded-sec-createregexpstringiterator\"><h1><span class=\"secnum\">21.2.5.8.1</span>#sec-createregexpstringiterator CreateRegExpStringIterator ( R, S, global, fullUnicode )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}}