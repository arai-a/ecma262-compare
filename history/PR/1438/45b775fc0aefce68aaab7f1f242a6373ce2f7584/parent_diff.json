{"from": {"secList": ["sec-object-type"], "secData": {"sec-object-type": {"num": "6.1.7", "title": "#sec-object-type The Object Type", "html": "<emu-clause id=\"sec-object-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-type\">#sec-object-type</span> The Object Type</h1>\n      <p>An Object is logically a collection of properties. Each property is either a data property, or an accessor property:</p>\n      <ul>\n        <li>\n          A  <dfn>data property</dfn> associates a key value with an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> and a set of Boolean attributes.\n        \n        </li>\n        <li>\n          An  <dfn>accessor property</dfn> associates a key value with one or two accessor functions, and a set of Boolean attributes. The accessor functions are used to store or retrieve an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> that is associated with the property.\n        \n        </li>\n      </ul>\n      <p>Properties are identified using key values. A property key value is either an ECMAScript String value or a Symbol value. All String and Symbol values, including the empty string, are valid as property keys. A  <dfn id=\"property-name\">property name</dfn> is a property key that is a String value.</p>\n      <p>An  <dfn id=\"integer-index\">integer index</dfn> is a String-valued property key that is a canonical numeric String (see  <emu-xref href=\"#sec-canonicalnumericindexstring\"><a href=\"#sec-canonicalnumericindexstring\" class=\"excluded-xref\" excluded-id=\"sec-canonicalnumericindexstring\">#sec-canonicalnumericindexstring</a></emu-xref>) and whose numeric value is either <emu-val>+0</emu-val> or a positive integer &#8804; 2<sup>53</sup> - 1. An  <dfn id=\"array-index\">array index</dfn> is an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> whose numeric value <var>i</var> is in the range  <emu-eqn class=\"inline\">+0 &#8804; <var>i</var> &lt; 2<sup>32</sup> - 1</emu-eqn>.</p>\n      <p>Property keys are used to access properties and their values. There are two kinds of access for properties:  <em>get</em> and  <em>set</em>, corresponding to value retrieval and assignment, respectively. The properties accessible via get and set access includes both  <em>own properties</em> that are a direct part of an object and  <em>inherited properties</em> which are provided by another associated object via a property inheritance relationship. Inherited properties may be either own or inherited properties of the associated object. Each own property of an object must each have a key value that is distinct from the key values of the other own properties of that object.</p>\n      <p>All objects are logically collections of properties, but there are multiple forms of objects that differ in their semantics for accessing and manipulating their properties.  <dfn id=\"ordinary-objects\">Ordinary objects</dfn> are the most common form of objects and have the default object semantics. An  <dfn id=\"exotic-object\">exotic object</dfn> is any form of object whose property semantics differ in any way from the default semantics.</p>\n\n      <div id=\"excluded-sec-property-attributes\"><h1><span class=\"secnum\">6.1.7.1</span>#sec-property-attributes Property Attributes</h1>...</div><div id=\"excluded-sec-object-internal-methods-and-internal-slots\"><h1><span class=\"secnum\">6.1.7.2</span>#sec-object-internal-methods-and-internal-slots Object Internal Methods and Internal Slots</h1>...</div><div id=\"excluded-sec-invariants-of-the-essential-internal-methods\"><h1><span class=\"secnum\">6.1.7.3</span>#sec-invariants-of-the-essential-internal-methods Invariants of the Essential Internal Methods</h1>...</div><div id=\"excluded-sec-well-known-intrinsic-objects\"><h1><span class=\"secnum\">6.1.7.4</span>#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects</h1>...</div></emu-clause>\n  "}}, "figData": {}}, "to": {"secList": ["sec-object-type"], "secData": {"sec-object-type": {"num": "6.1.7", "title": "#sec-object-type The Object Type", "html": "<emu-clause id=\"sec-object-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-type\">#sec-object-type</span> The Object Type</h1>\n      <p>An Object is logically a collection of properties. Each property is either a data property, or an accessor property:</p>\n      <ul>\n        <li>\n          A  <dfn>data property</dfn> associates a key value with an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> and a set of Boolean attributes.\n        \n        </li>\n        <li>\n          An  <dfn>accessor property</dfn> associates a key value with one or two accessor functions, and a set of Boolean attributes. The accessor functions are used to store or retrieve an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> that is associated with the property.\n        \n        </li>\n      </ul>\n      <p>Properties are identified using key values. A property key value is either an ECMAScript String value or a Symbol value. All String and Symbol values, including the empty string, are valid as property keys. A  <dfn id=\"property-name\">property name</dfn> is a property key that is a String value.</p>\n      <p>An  <dfn id=\"integer-index\">integer index</dfn> is a String-valued property key that is a canonical numeric String (see  <emu-xref href=\"#sec-canonicalnumericindexstring\"><a href=\"#sec-canonicalnumericindexstring\" class=\"excluded-xref\" excluded-id=\"sec-canonicalnumericindexstring\">#sec-canonicalnumericindexstring</a></emu-xref>) and whose numeric value is either <emu-val>+0</emu-val> or a positive integer &#8804; 2<sup>53</sup> - 1. An  <dfn id=\"array-index\">array index</dfn> is an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> whose numeric value <var>i</var> is in the range  <emu-eqn class=\"inline\">+0 &#8804; <var>i</var> &lt; 2<sup>32</sup> - 1</emu-eqn>.</p>\n      <p>Property keys are used to access properties and their values. There are three kinds of access for properties:  <em>get</em>,  <em>has</em>, and  <em>set</em>; corresponding respectively to value retrieval, existence, and assignment. The properties accessible via get, has, and set access includes both  <em>own properties</em> that are a direct part of an object and  <em>inherited properties</em> which are provided by another associated object via a property inheritance relationship. Inherited properties may be either own or inherited properties of the associated object. Each own property of an object must each have a key value that is distinct from the key values of the other own properties of that object.</p>\n      <p>All objects are logically collections of properties, but there are multiple forms of objects that differ in their semantics for accessing and manipulating their properties.  <dfn id=\"ordinary-objects\">Ordinary objects</dfn> are the most common form of objects and have the default object semantics. An  <dfn id=\"exotic-object\">exotic object</dfn> is any form of object whose property semantics differ in any way from the default semantics.</p>\n\n      <div id=\"excluded-sec-property-attributes\"><h1><span class=\"secnum\">6.1.7.1</span>#sec-property-attributes Property Attributes</h1>...</div><div id=\"excluded-sec-object-internal-methods-and-internal-slots\"><h1><span class=\"secnum\">6.1.7.2</span>#sec-object-internal-methods-and-internal-slots Object Internal Methods and Internal Slots</h1>...</div><div id=\"excluded-sec-invariants-of-the-essential-internal-methods\"><h1><span class=\"secnum\">6.1.7.3</span>#sec-invariants-of-the-essential-internal-methods Invariants of the Essential Internal Methods</h1>...</div><div id=\"excluded-sec-well-known-intrinsic-objects\"><h1><span class=\"secnum\">6.1.7.4</span>#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects</h1>...</div></emu-clause>\n  "}}, "figData": {}}}