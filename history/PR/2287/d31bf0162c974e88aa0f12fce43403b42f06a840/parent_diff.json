{"from": {"secList": ["sec-object-environment-records-hasbinding-n", "sec-environment-record-operations", "sec-object-environment-records-createmutablebinding-n-d", "sec-hasrestrictedglobalproperty", "sec-createglobalfunctionbinding", "sec-object-environment-records-deletebinding-n", "sec-createglobalvarbinding", "sec-object-environment-records-setmutablebinding-n-v-s", "sec-newobjectenvironment", "sec-object-environment-records-getbindingvalue-n-s", "sec-newglobalenvironment", "sec-object-environment-records", "sec-with-statement-runtime-semantics-evaluation", "sec-object-environment-records-withbaseobject", "sec-global-environment-records-deletebinding-n", "sec-candeclareglobalvar", "sec-candeclareglobalfunction"], "secData": {"sec-object-environment-records-hasbinding-n": {"num": "9.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if its associated binding object has a property whose name is the value of the argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-environment-record-operations": {"num": "9.1.2", "title": "#sec-environment-record-operations Environment Record Operations", "html": "<emu-clause id=\"sec-environment-record-operations\" oldids=\"sec-lexical-environment-operations\"><span id=\"sec-lexical-environment-operations\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-environment-record-operations\">#sec-environment-record-operations</span> Environment Record Operations</h1>\n      <p>The following <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are used in this specification to operate upon Environment Records:</p>\n\n      <div id=\"excluded-sec-getidentifierreference\"><h1><span class=\"secnum\">9.1.2.1</span>#sec-getidentifierreference GetIdentifierReference ( env, name, strict )</h1>...</div><div id=\"excluded-sec-newdeclarativeenvironment\"><h1><span class=\"secnum\">9.1.2.2</span>#sec-newdeclarativeenvironment NewDeclarativeEnvironment ( E )</h1>...</div><div id=\"excluded-sec-newobjectenvironment\"><h1><span class=\"secnum\">9.1.2.3</span>#sec-newobjectenvironment NewObjectEnvironment ( O, E )</h1>...</div><div id=\"excluded-sec-newfunctionenvironment\"><h1><span class=\"secnum\">9.1.2.4</span>#sec-newfunctionenvironment NewFunctionEnvironment ( F, newTarget )</h1>...</div><div id=\"excluded-sec-newglobalenvironment\"><h1><span class=\"secnum\">9.1.2.5</span>#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )</h1>...</div><div id=\"excluded-sec-newmoduleenvironment\"><h1><span class=\"secnum\">9.1.2.6</span>#sec-newmoduleenvironment NewModuleEnvironment ( E )</h1>...</div></emu-clause>\n  "}, "sec-object-environment-records-createmutablebinding-n-d": {"num": "9.1.1.2.2", "title": "#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-object-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createmutablebinding-n-d\">#sec-object-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates in an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object a property whose name is the String value and initializes it to the value <emu-val>undefined</emu-val>. If <var>D</var> has the value <emu-val>true</emu-val>, the new property's [[Configurable]] attribute is set to <emu-val>true</emu-val>; otherwise it is set to <emu-val>false</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>bindings</var>, <var>N</var>, PropertyDescriptor { [[Value]]: <emu-val>undefined</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Normally <var>envRec</var> will not have a binding for <var>N</var> but if it does, the semantics of <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref> may result in an existing binding being replaced or shadowed or cause an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> to be returned.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-hasrestrictedglobalproperty": {"num": "9.1.1.4.14", "title": "#sec-hasrestrictedglobalproperty HasRestrictedGlobalProperty ( N )", "html": "<emu-clause id=\"sec-hasrestrictedglobalproperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasrestrictedglobalproperty\">#sec-hasrestrictedglobalproperty</span> HasRestrictedGlobalProperty ( <var>N</var> )</h1>\n          <p>The HasRestrictedGlobalProperty concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is the name of a property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that must not be shadowed by a global lexical binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Properties may exist upon a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that were directly created rather than being declared using a var or function declaration. A global lexical binding may not be created that has the same name as a non-configurable property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. The global property <emu-val>\"undefined\"</emu-val> is an example of such a property.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-createglobalfunctionbinding": {"num": "9.1.1.4.18", "title": "#sec-createglobalfunctionbinding CreateGlobalFunctionBinding ( N, V, D )", "html": "<emu-clause id=\"sec-createglobalfunctionbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</span> CreateGlobalFunctionBinding ( <var>N</var>, <var>V</var>, <var>D</var> )</h1>\n          <p>The CreateGlobalFunctionBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>D</var> (a Boolean). It creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is replaced. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val> or <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var> }.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>desc</var>).</li><li id=\"step-createglobalfunctionbinding-set\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global function declarations are always represented as own properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. If possible, an existing own property is reconfigured to have a standard set of attribute values. Step <emu-xref href=\"#step-createglobalfunctionbinding-set\"><a href=\"#step-createglobalfunctionbinding-set\" class=\"excluded-xref\" excluded-id=\"step-createglobalfunctionbinding-set\">#step-createglobalfunctionbinding-set</a></emu-xref> is equivalent to what calling the InitializeBinding concrete method would do and if <var>globalObject</var> is a Proxy will produce the same sequence of Proxy trap calls.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-object-environment-records-deletebinding-n": {"num": "9.1.1.2.7", "title": "#sec-object-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-deletebinding-n\">#sec-object-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that correspond to properties of the environment object whose [[Configurable]] attribute have the value <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Return ? <var>bindings</var>.[[Delete]](<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createglobalvarbinding": {"num": "9.1.1.4.17", "title": "#sec-createglobalvarbinding CreateGlobalVarBinding ( N, D )", "html": "<emu-clause id=\"sec-createglobalvarbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalvarbinding\">#sec-createglobalvarbinding</span> CreateGlobalVarBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateGlobalVarBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is reused and assumed to be initialized. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>Let <var>extensible</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>hasProperty</var> is <emu-val>false</emu-val> and <var>extensible</var> is <emu-val>true</emu-val>, then<ol><li>Perform ? <var>ObjRec</var>.CreateMutableBinding(<var>N</var>, <var>D</var>).</li><li>Perform ? <var>ObjRec</var>.InitializeBinding(<var>N</var>, <emu-val>undefined</emu-val>).</li></ol></li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-setmutablebinding-n-v-s": {"num": "9.1.1.2.5", "title": "#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-object-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-setmutablebinding-n-v-s\">#sec-object-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to set the value of the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object's property whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>stillExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>stillExists</var> is <emu-val>false</emu-val> and <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>bindings</var>, <var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newobjectenvironment": {"num": "9.1.2.3", "title": "#sec-newobjectenvironment NewObjectEnvironment ( O, E )", "html": "<emu-clause id=\"sec-newobjectenvironment\" aoid=\"NewObjectEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newobjectenvironment\">#sec-newobjectenvironment</span> NewObjectEnvironment ( <var>O</var>, <var>E</var> )</h1>\n        <p>The abstract operation NewObjectEnvironment takes arguments <var>O</var> (an Object) and <var>E</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be a new <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> containing <var>O</var> as the binding object.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>E</var>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-object-environment-records-getbindingvalue-n-s": {"num": "9.1.1.2.6", "title": "#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-getbindingvalue-n-s\">#sec-object-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its associated binding object's property whose name is the String value of the argument identifier <var>N</var>. The property should already exist but if it does not the result depends upon <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>value</var> is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>false</emu-val>, return the value <emu-val>undefined</emu-val>; otherwise throw a <emu-val>ReferenceError</emu-val> exception.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newglobalenvironment": {"num": "9.1.2.5", "title": "#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )", "html": "<emu-clause id=\"sec-newglobalenvironment\" aoid=\"NewGlobalEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newglobalenvironment\">#sec-newglobalenvironment</span> NewGlobalEnvironment ( <var>G</var>, <var>thisValue</var> )</h1>\n        <p>The abstract operation NewGlobalEnvironment takes arguments <var>G</var> and <var>thisValue</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>objRec</var> be a new <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> containing <var>G</var> as the binding object.</li><li>Let <var>dclRec</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> containing no bindings.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[ObjectRecord]] to <var>objRec</var>.</li><li>Set <var>env</var>.[[GlobalThisValue]] to <var>thisValue</var>.</li><li>Set <var>env</var>.[[DeclarativeRecord]] to <var>dclRec</var>.</li><li>Set <var>env</var>.[[VarNames]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>env</var>.[[OuterEnv]] to <emu-val>null</emu-val>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-object-environment-records": {"num": "9.1.1.2", "title": "#sec-object-environment-records Object Environment Records", "html": "<emu-clause id=\"sec-object-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records\">#sec-object-environment-records</span> Object Environment Records</h1>\n        <p>Each <dfn>object Environment Record</dfn> is associated with an object called its <em>binding object</em>. An object Environment Record binds the set of string identifier names that directly correspond to the property names of its binding object. Property keys that are not strings in the form of an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are not included in the set of bound identifiers. Both own and inherited properties are included in the set regardless of the setting of their [[Enumerable]] attribute. Because properties can be dynamically added and deleted from objects, the set of identifiers bound by an object Environment Record may potentially change as a side-effect of any operation that adds or deletes properties. Any bindings that are created as a result of such a side-effect are considered to be a mutable binding even if the Writable attribute of the corresponding property has the value <emu-val>false</emu-val>. Immutable bindings do not exist for object Environment Records.</p>\n        <p>Object Environment Records created for <code>with</code> statements (<emu-xref href=\"#sec-with-statement\"><a href=\"#sec-with-statement\" class=\"excluded-xref\" excluded-id=\"sec-with-statement\">#sec-with-statement</a></emu-xref>) can provide their binding object as an implicit <emu-val>this</emu-val> value for use in function calls. The capability is controlled by a <var>withEnvironment</var> Boolean value that is associated with each object Environment Record. By default, the value of <var>withEnvironment</var> is <emu-val>false</emu-val> for any object Environment Record.</p>\n        <p>The behaviour of the concrete specification methods for object Environment Records is defined by the following algorithms.</p>\n\n        <div id=\"excluded-sec-object-environment-records-hasbinding-n\"><h1><span class=\"secnum\">9.1.1.2.1</span>#sec-object-environment-records-hasbinding-n HasBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-createmutablebinding-n-d\"><h1><span class=\"secnum\">9.1.1.2.2</span>#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )</h1>...</div><div id=\"excluded-sec-object-environment-records-createimmutablebinding-n-s\"><h1><span class=\"secnum\">9.1.1.2.3</span>#sec-object-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-initializebinding-n-v\"><h1><span class=\"secnum\">9.1.1.2.4</span>#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )</h1>...</div><div id=\"excluded-sec-object-environment-records-setmutablebinding-n-v-s\"><h1><span class=\"secnum\">9.1.1.2.5</span>#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.2.6</span>#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.2.7</span>#sec-object-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.2.8</span>#sec-object-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-hassuperbinding\"><h1><span class=\"secnum\">9.1.1.2.9</span>#sec-object-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-withbaseobject\"><h1><span class=\"secnum\">9.1.1.2.10</span>#sec-object-environment-records-withbaseobject WithBaseObject ( )</h1>...</div></emu-clause>\n\n      "}, "sec-with-statement-runtime-semantics-evaluation": {"num": "14.11.2", "title": "#sec-with-statement-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-with-statement-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-with-statement-runtime-semantics-evaluation\">#sec-with-statement-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"WithStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"23bd2456\">\n        <emu-t>with</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>val</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>val</var>)).</li><li>Let <var>oldEnv</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>newEnv</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>obj</var>, <var>oldEnv</var>).</li><li>Set the <var>withEnvironment</var> flag of <var>newEnv</var> to <emu-val>true</emu-val>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>newEnv</var>.</li><li>Let <var>C</var> be the result of evaluating <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>oldEnv</var>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<emu-xref aoid=\"UpdateEmpty\"><a href=\"#sec-updateempty\">UpdateEmpty</a></emu-xref>(<var>C</var>, <emu-val>undefined</emu-val>)).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>No matter how control leaves the embedded <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>, whether normally or by some form of <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> or exception, the LexicalEnvironment is always restored to its former state.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-object-environment-records-withbaseobject": {"num": "9.1.1.2.10", "title": "#sec-object-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-object-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-withbaseobject\">#sec-object-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>The WithBaseObject concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>true</emu-val>, return the binding object for <var>envRec</var>.</li><li>Otherwise, return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-global-environment-records-deletebinding-n": {"num": "9.1.1.4.7", "title": "#sec-global-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-global-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-deletebinding-n\">#sec-global-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that have been explicitly designated as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.DeleteBinding(<var>N</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>status</var> be ? <var>ObjRec</var>.DeleteBinding(<var>N</var>).</li><li>If <var>status</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>varNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>N</var> is an element of <var>varNames</var>, remove that element from the <var>varNames</var>.</li></ol></li><li>Return <var>status</var>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalvar": {"num": "9.1.1.4.15", "title": "#sec-candeclareglobalvar CanDeclareGlobalVar ( N )", "html": "<emu-clause id=\"sec-candeclareglobalvar\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</span> CanDeclareGlobalVar ( <var>N</var> )</h1>\n          <p>The CanDeclareGlobalVar concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if a corresponding CreateGlobalVarBinding call would succeed if called for the same argument <var>N</var>. Redundant var declarations and var declarations for pre-existing <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> properties are allowed. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>hasProperty</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalfunction": {"num": "9.1.1.4.16", "title": "#sec-candeclareglobalfunction CanDeclareGlobalFunction ( N )", "html": "<emu-clause id=\"sec-candeclareglobalfunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalfunction\">#sec-candeclareglobalfunction</span> CanDeclareGlobalFunction ( <var>N</var> )</h1>\n          <p>The CanDeclareGlobalFunction concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if a corresponding CreateGlobalFunctionBinding call would succeed if called for the same argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>existingProp</var>) is <emu-val>true</emu-val> and <var>existingProp</var> has attribute values { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val> }, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}}, "figData": {}}, "to": {"secList": ["sec-object-environment-records-hasbinding-n", "sec-environment-record-operations", "sec-object-environment-records-createmutablebinding-n-d", "sec-hasrestrictedglobalproperty", "sec-createglobalfunctionbinding", "sec-object-environment-records-deletebinding-n", "sec-createglobalvarbinding", "sec-object-environment-records-setmutablebinding-n-v-s", "sec-newobjectenvironment", "sec-object-environment-records-getbindingvalue-n-s", "sec-newglobalenvironment", "sec-object-environment-records", "sec-with-statement-runtime-semantics-evaluation", "sec-object-environment-records-withbaseobject", "sec-global-environment-records-deletebinding-n", "sec-candeclareglobalvar", "sec-candeclareglobalfunction"], "secData": {"sec-object-environment-records-hasbinding-n": {"num": "9.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if its associated binding object has a property whose name is the value of the argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>envRec</var>.[[WithEnvironmentFlag]] is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindingObject</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-environment-record-operations": {"num": "9.1.2", "title": "#sec-environment-record-operations Environment Record Operations", "html": "<emu-clause id=\"sec-environment-record-operations\" oldids=\"sec-lexical-environment-operations\"><span id=\"sec-lexical-environment-operations\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-environment-record-operations\">#sec-environment-record-operations</span> Environment Record Operations</h1>\n      <p>The following <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are used in this specification to operate upon Environment Records:</p>\n\n      <div id=\"excluded-sec-getidentifierreference\"><h1><span class=\"secnum\">9.1.2.1</span>#sec-getidentifierreference GetIdentifierReference ( env, name, strict )</h1>...</div><div id=\"excluded-sec-newdeclarativeenvironment\"><h1><span class=\"secnum\">9.1.2.2</span>#sec-newdeclarativeenvironment NewDeclarativeEnvironment ( E )</h1>...</div><div id=\"excluded-sec-newobjectenvironment\"><h1><span class=\"secnum\">9.1.2.3</span>#sec-newobjectenvironment NewObjectEnvironment ( O, W, E )</h1>...</div><div id=\"excluded-sec-newfunctionenvironment\"><h1><span class=\"secnum\">9.1.2.4</span>#sec-newfunctionenvironment NewFunctionEnvironment ( F, newTarget )</h1>...</div><div id=\"excluded-sec-newglobalenvironment\"><h1><span class=\"secnum\">9.1.2.5</span>#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )</h1>...</div><div id=\"excluded-sec-newmoduleenvironment\"><h1><span class=\"secnum\">9.1.2.6</span>#sec-newmoduleenvironment NewModuleEnvironment ( E )</h1>...</div></emu-clause>\n  "}, "sec-object-environment-records-createmutablebinding-n-d": {"num": "9.1.1.2.2", "title": "#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-object-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createmutablebinding-n-d\">#sec-object-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates in an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object a property whose name is the String value and initializes it to the value <emu-val>undefined</emu-val>. If <var>D</var> has the value <emu-val>true</emu-val>, the new property's [[Configurable]] attribute is set to <emu-val>true</emu-val>; otherwise it is set to <emu-val>false</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>bindingObject</var>, <var>N</var>, PropertyDescriptor { [[Value]]: <emu-val>undefined</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Normally <var>envRec</var> will not have a binding for <var>N</var> but if it does, the semantics of <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref> may result in an existing binding being replaced or shadowed or cause an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> to be returned.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-hasrestrictedglobalproperty": {"num": "9.1.1.4.14", "title": "#sec-hasrestrictedglobalproperty HasRestrictedGlobalProperty ( N )", "html": "<emu-clause id=\"sec-hasrestrictedglobalproperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasrestrictedglobalproperty\">#sec-hasrestrictedglobalproperty</span> HasRestrictedGlobalProperty ( <var>N</var> )</h1>\n          <p>The HasRestrictedGlobalProperty concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is the name of a property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that must not be shadowed by a global lexical binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be <var>ObjRec</var>.[[BindingObject]].</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Properties may exist upon a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that were directly created rather than being declared using a var or function declaration. A global lexical binding may not be created that has the same name as a non-configurable property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. The global property <emu-val>\"undefined\"</emu-val> is an example of such a property.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-createglobalfunctionbinding": {"num": "9.1.1.4.18", "title": "#sec-createglobalfunctionbinding CreateGlobalFunctionBinding ( N, V, D )", "html": "<emu-clause id=\"sec-createglobalfunctionbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</span> CreateGlobalFunctionBinding ( <var>N</var>, <var>V</var>, <var>D</var> )</h1>\n          <p>The CreateGlobalFunctionBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>D</var> (a Boolean). It creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is replaced. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be <var>ObjRec</var>.[[BindingObject]].</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val> or <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var> }.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>desc</var>).</li><li id=\"step-createglobalfunctionbinding-set\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global function declarations are always represented as own properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. If possible, an existing own property is reconfigured to have a standard set of attribute values. Step <emu-xref href=\"#step-createglobalfunctionbinding-set\"><a href=\"#step-createglobalfunctionbinding-set\" class=\"excluded-xref\" excluded-id=\"step-createglobalfunctionbinding-set\">#step-createglobalfunctionbinding-set</a></emu-xref> is equivalent to what calling the InitializeBinding concrete method would do and if <var>globalObject</var> is a Proxy will produce the same sequence of Proxy trap calls.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-object-environment-records-deletebinding-n": {"num": "9.1.1.2.7", "title": "#sec-object-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-deletebinding-n\">#sec-object-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that correspond to properties of the environment object whose [[Configurable]] attribute have the value <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Return ? <var>bindingObject</var>.[[Delete]](<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createglobalvarbinding": {"num": "9.1.1.4.17", "title": "#sec-createglobalvarbinding CreateGlobalVarBinding ( N, D )", "html": "<emu-clause id=\"sec-createglobalvarbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalvarbinding\">#sec-createglobalvarbinding</span> CreateGlobalVarBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateGlobalVarBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is reused and assumed to be initialized. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be <var>ObjRec</var>.[[BindingObject]].</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>Let <var>extensible</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>hasProperty</var> is <emu-val>false</emu-val> and <var>extensible</var> is <emu-val>true</emu-val>, then<ol><li>Perform ? <var>ObjRec</var>.CreateMutableBinding(<var>N</var>, <var>D</var>).</li><li>Perform ? <var>ObjRec</var>.InitializeBinding(<var>N</var>, <emu-val>undefined</emu-val>).</li></ol></li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-setmutablebinding-n-v-s": {"num": "9.1.1.2.5", "title": "#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-object-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-setmutablebinding-n-v-s\">#sec-object-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to set the value of the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object's property whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>stillExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li><li>If <var>stillExists</var> is <emu-val>false</emu-val> and <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>bindingObject</var>, <var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newobjectenvironment": {"num": "9.1.2.3", "title": "#sec-newobjectenvironment NewObjectEnvironment ( O, W, E )", "html": "<emu-clause id=\"sec-newobjectenvironment\" aoid=\"NewObjectEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newobjectenvironment\">#sec-newobjectenvironment</span> NewObjectEnvironment ( <var>O</var>, <var>W</var>, <var>E</var> )</h1>\n        <p>The abstract operation NewObjectEnvironment takes arguments <var>O</var> (an Object), <var>W</var> (a Boolean) and <var>E</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Return <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> { [[OuterEnv]]: <var>E</var>, [[BindingObject]]: <var>O</var>, [[WithEnvironmentFlag]]: <var>W</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-object-environment-records-getbindingvalue-n-s": {"num": "9.1.1.2.6", "title": "#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-getbindingvalue-n-s\">#sec-object-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its associated binding object's property whose name is the String value of the argument identifier <var>N</var>. The property should already exist but if it does not the result depends upon <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindingObject</var> be <var>envRec</var>.[[BindingObject]].</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li><li>If <var>value</var> is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>false</emu-val>, return the value <emu-val>undefined</emu-val>; otherwise throw a <emu-val>ReferenceError</emu-val> exception.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindingObject</var>, <var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newglobalenvironment": {"num": "9.1.2.5", "title": "#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )", "html": "<emu-clause id=\"sec-newglobalenvironment\" aoid=\"NewGlobalEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newglobalenvironment\">#sec-newglobalenvironment</span> NewGlobalEnvironment ( <var>G</var>, <var>thisValue</var> )</h1>\n        <p>The abstract operation NewGlobalEnvironment takes arguments <var>G</var> and <var>thisValue</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>objRec</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>G</var>, <emu-val>false</emu-val>, <emu-val>null</emu-val>).</li><li>Let <var>dclRec</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> containing no bindings.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[ObjectRecord]] to <var>objRec</var>.</li><li>Set <var>env</var>.[[GlobalThisValue]] to <var>thisValue</var>.</li><li>Set <var>env</var>.[[DeclarativeRecord]] to <var>dclRec</var>.</li><li>Set <var>env</var>.[[VarNames]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>env</var>.[[OuterEnv]] to <emu-val>null</emu-val>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-object-environment-records": {"num": "9.1.1.2", "title": "#sec-object-environment-records Object Environment Records", "html": "<emu-clause id=\"sec-object-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records\">#sec-object-environment-records</span> Object Environment Records</h1>\n        <p>Each <dfn>object Environment Record</dfn> is associated with an object called its <em>binding object</em>. An object Environment Record binds the set of string identifier names that directly correspond to the property names of its binding object. Property keys that are not strings in the form of an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are not included in the set of bound identifiers. Both own and inherited properties are included in the set regardless of the setting of their [[Enumerable]] attribute. Because properties can be dynamically added and deleted from objects, the set of identifiers bound by an object Environment Record may potentially change as a side-effect of any operation that adds or deletes properties. Any bindings that are created as a result of such a side-effect are considered to be a mutable binding even if the Writable attribute of the corresponding property has the value <emu-val>false</emu-val>. Immutable bindings do not exist for object Environment Records.</p>\n        <p>Object Environment Records created for <code>with</code> statements (<emu-xref href=\"#sec-with-statement\"><a href=\"#sec-with-statement\" class=\"excluded-xref\" excluded-id=\"sec-with-statement\">#sec-with-statement</a></emu-xref>) can provide their binding object as an implicit <emu-val>this</emu-val> value for use in function calls. The capability is controlled by a Boolean [[WithEnvironmentFlag]] field.</p>\n        <p>Object Environment Records have the additional state fields listed in <emu-xref href=\"#table-additional-fields-of-object-environment-records\"><a href=\"#table-additional-fields-of-object-environment-records\" class=\"excluded-xref\" excluded-id=\"table-additional-fields-of-object-environment-records\">#table-additional-fields-of-object-environment-records</a></emu-xref>.</p>\n        <emu-table id=\"table-additional-fields-of-object-environment-records\" caption=\"Additional Fields of Object Environment Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-fields-of-object-environment-records\">#table-additional-fields-of-object-environment-records</span>: Additional Fields of Object Environment Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[BindingObject]]\n              </td>\n              <td>\n                Object\n              </td>\n              <td>\n                The binding object of this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[WithEnvironmentFlag]]\n              </td>\n              <td>\n                Boolean\n              </td>\n              <td>\n                Determines whether this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> provides its binding object as an implicit <emu-val>this</emu-val> value for use in function calls.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>The behaviour of the concrete specification methods for object Environment Records is defined by the following algorithms.</p>\n\n        <div id=\"excluded-sec-object-environment-records-hasbinding-n\"><h1><span class=\"secnum\">9.1.1.2.1</span>#sec-object-environment-records-hasbinding-n HasBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-createmutablebinding-n-d\"><h1><span class=\"secnum\">9.1.1.2.2</span>#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )</h1>...</div><div id=\"excluded-sec-object-environment-records-createimmutablebinding-n-s\"><h1><span class=\"secnum\">9.1.1.2.3</span>#sec-object-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-initializebinding-n-v\"><h1><span class=\"secnum\">9.1.1.2.4</span>#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )</h1>...</div><div id=\"excluded-sec-object-environment-records-setmutablebinding-n-v-s\"><h1><span class=\"secnum\">9.1.1.2.5</span>#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.2.6</span>#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.2.7</span>#sec-object-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.2.8</span>#sec-object-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-hassuperbinding\"><h1><span class=\"secnum\">9.1.1.2.9</span>#sec-object-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-withbaseobject\"><h1><span class=\"secnum\">9.1.1.2.10</span>#sec-object-environment-records-withbaseobject WithBaseObject ( )</h1>...</div></emu-clause>\n\n      "}, "sec-with-statement-runtime-semantics-evaluation": {"num": "14.11.2", "title": "#sec-with-statement-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-with-statement-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-with-statement-runtime-semantics-evaluation\">#sec-with-statement-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"WithStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"23bd2456\">\n        <emu-t>with</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>val</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>val</var>)).</li><li>Let <var>oldEnv</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>newEnv</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>obj</var>, <emu-val>true</emu-val>, <var>oldEnv</var>).</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>newEnv</var>.</li><li>Let <var>C</var> be the result of evaluating <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>oldEnv</var>.</li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<emu-xref aoid=\"UpdateEmpty\"><a href=\"#sec-updateempty\">UpdateEmpty</a></emu-xref>(<var>C</var>, <emu-val>undefined</emu-val>)).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>No matter how control leaves the embedded <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>, whether normally or by some form of <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> or exception, the LexicalEnvironment is always restored to its former state.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-object-environment-records-withbaseobject": {"num": "9.1.1.2.10", "title": "#sec-object-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-object-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-withbaseobject\">#sec-object-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>The WithBaseObject concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>envRec</var>.[[WithEnvironmentFlag]] is <emu-val>true</emu-val>, return <var>envRec</var>.[[BindingObject]].</li><li>Otherwise, return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-global-environment-records-deletebinding-n": {"num": "9.1.1.4.7", "title": "#sec-global-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-global-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-deletebinding-n\">#sec-global-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that have been explicitly designated as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.DeleteBinding(<var>N</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be <var>ObjRec</var>.[[BindingObject]].</li><li>Let <var>existingProp</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>status</var> be ? <var>ObjRec</var>.DeleteBinding(<var>N</var>).</li><li>If <var>status</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>varNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>N</var> is an element of <var>varNames</var>, remove that element from the <var>varNames</var>.</li></ol></li><li>Return <var>status</var>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalvar": {"num": "9.1.1.4.15", "title": "#sec-candeclareglobalvar CanDeclareGlobalVar ( N )", "html": "<emu-clause id=\"sec-candeclareglobalvar\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</span> CanDeclareGlobalVar ( <var>N</var> )</h1>\n          <p>The CanDeclareGlobalVar concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if a corresponding CreateGlobalVarBinding call would succeed if called for the same argument <var>N</var>. Redundant var declarations and var declarations for pre-existing <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> properties are allowed. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be <var>ObjRec</var>.[[BindingObject]].</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>hasProperty</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalfunction": {"num": "9.1.1.4.16", "title": "#sec-candeclareglobalfunction CanDeclareGlobalFunction ( N )", "html": "<emu-clause id=\"sec-candeclareglobalfunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalfunction\">#sec-candeclareglobalfunction</span> CanDeclareGlobalFunction ( <var>N</var> )</h1>\n          <p>The CanDeclareGlobalFunction concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if a corresponding CreateGlobalFunctionBinding call would succeed if called for the same argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be <var>ObjRec</var>.[[BindingObject]].</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>existingProp</var>) is <emu-val>true</emu-val> and <var>existingProp</var> has attribute values { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val> }, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}}, "figData": {"table-additional-fields-of-object-environment-records": "Table 18"}}}