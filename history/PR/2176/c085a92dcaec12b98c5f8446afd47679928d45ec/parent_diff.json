{"from": {"secList": ["sec-date-constructor-date", "sec-typedarray-objects", "sec-validatetypedarray", "sec-date-constructor", "sec-array-constructor", "sec-typedarray", "sec-%typedarray%.prototype.set-typedarray-offset", "sec-date-year-month-date-hours-minutes-seconds-ms", "sec-%typedarray%.prototype.set-array-offset", "sec-array-len", "sec-properties-of-typedarray-prototype-objects", "sec-array-items", "sec-date-value", "sec-array-constructor-array", "sec-%typedarray%.prototype.copywithin", "sec-allocatetypedarray", "sec-typedarray-object", "sec-properties-of-the-typedarray-constructors", "sec-typedarray-constructors", "sec-typedarray-typedarray", "sec-typedarray-length", "sec-properties-of-the-%typedarrayprototype%-object", "sec-typedarray-buffer-byteoffset-length", "sec-%typedarray%.prototype.set-overloaded-offset"], "secData": {"sec-date-constructor-date": {"num": "20.4.2.3", "title": "#sec-date-constructor-date Date ( )", "html": "<emu-clause id=\"sec-date-constructor-date\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor-date\">#sec-date-constructor-date</span> Date ( )</h1>\n        <p>This description applies only if the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called with no arguments.</p>\n        <p>When the <code>Date</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>numberOfArgs</var> be the number of arguments passed to this function call.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>numberOfArgs</var> = 0.</li><li>If NewTarget is <emu-val>undefined</emu-val>, then<ol><li>Let <var>now</var> be the Number that is the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> (UTC) identifying the current time.</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>now</var>).</li></ol></li><li>Else,<ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Date.prototype%\"</emu-val>, &#171; [[DateValue]] &#187;).</li><li>Set <var>O</var>.[[DateValue]] to the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> (UTC) identifying the current time.</li><li>Return <var>O</var>.</li></ol></li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-typedarray-objects": {"num": "22.2", "title": "#sec-typedarray-objects TypedArray Objects", "html": "<emu-clause id=\"sec-typedarray-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</span> TypedArray Objects</h1>\n    <p><var>TypedArray</var> objects present an array-like view of an underlying binary data buffer (<emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>). Each element of a <var>TypedArray</var> instance has the same underlying binary scalar data type. There is a distinct <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, listed in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>, for each of the supported element types. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> has a corresponding distinct prototype object.</p>\n    <emu-table id=\"table-the-typedarray-constructors\" caption=\"The TypedArray Constructors\" oldids=\"table-49\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</span>: The TypedArray Constructors</figcaption><span id=\"table-49\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name and Intrinsic\n          </th>\n          <th>\n            Element Type\n          </th>\n          <th>\n            Element Size\n          </th>\n          <th>\n            Conversion Operation\n          </th>\n          <th>\n            Description\n          </th>\n        </tr>\n        <tr>\n          <td>\n            Int8Array\n            <br>\n            <dfn>%Int8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt8\"><a href=\"#sec-toint8\">ToInt8</a></emu-xref>\n          </td>\n          <td>\n            8-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8Array\n            <br>\n            <dfn>%Uint8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8\"><a href=\"#sec-touint8\">ToUint8</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8ClampedArray\n            <br>\n            <dfn>%Uint8ClampedArray%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8C</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8Clamp\"><a href=\"#sec-touint8clamp\">ToUint8Clamp</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> (clamped conversion)\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int16Array\n            <br>\n            <dfn>%Int16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt16\"><a href=\"#sec-toint16\">ToInt16</a></emu-xref>\n          </td>\n          <td>\n            16-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint16Array\n            <br>\n            <dfn>%Uint16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint16\"><a href=\"#sec-touint16\">ToUint16</a></emu-xref>\n          </td>\n          <td>\n            16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int32Array\n            <br>\n            <dfn>%Int32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>\n          </td>\n          <td>\n            32-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint32Array\n            <br>\n            <dfn>%Uint32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>\n          </td>\n          <td>\n            32-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigInt64Array\n            <br>\n            <dfn>%BigInt64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigInt64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-tobigint64\">ToBigInt64</a></emu-xref>\n          </td>\n          <td>\n            64-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigUint64Array\n            <br>\n            <dfn>%BigUint64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigUint64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigUint64\"><a href=\"#sec-tobiguint64\">ToBigUint64</a></emu-xref>\n          </td>\n          <td>\n            64-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float32Array\n            <br>\n            <dfn>%Float32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n          </td>\n          <td>\n            32-bit IEEE floating point\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float64Array\n            <br>\n            <dfn>%Float64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n          </td>\n          <td>\n            64-bit IEEE floating point\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In the definitions below, references to <var>TypedArray</var> should be replaced with the appropriate <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name from the above table.</p>\n\n    <div id=\"excluded-sec-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.1</span>#sec-%typedarray%-intrinsic-object The %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.2</span>#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarrayprototype%-object\"><h1><span class=\"secnum\">22.2.3</span>#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray% Prototype Object</h1>...</div><div id=\"excluded-sec-typedarray-constructors\"><h1><span class=\"secnum\">22.2.4</span>#sec-typedarray-constructors The TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-typedarray-constructors\"><h1><span class=\"secnum\">22.2.5</span>#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-prototype-objects\"><h1><span class=\"secnum\">22.2.6</span>#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-instances\"><h1><span class=\"secnum\">22.2.7</span>#sec-properties-of-typedarray-instances Properties of TypedArray Instances</h1>...</div></emu-clause>\n"}, "sec-validatetypedarray": {"num": "22.2.3.5.1", "title": "#sec-validatetypedarray Runtime Semantics: ValidateTypedArray ( O )", "html": "<emu-clause id=\"sec-validatetypedarray\" aoid=\"ValidateTypedArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validatetypedarray\">#sec-validatetypedarray</span> Runtime Semantics: ValidateTypedArray ( <var>O</var> )</h1>\n          <p>The abstract operation ValidateTypedArray takes argument <var>O</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>buffer</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.4.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.4.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "22.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 1.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array-constructor-array\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-array-constructor-array Array ( )</h1>...</div><div id=\"excluded-sec-array-len\"><h1><span class=\"secnum\">22.1.1.2</span>#sec-array-len Array ( len )</h1>...</div><div id=\"excluded-sec-array-items\"><h1><span class=\"secnum\">22.1.1.3</span>#sec-array-items Array ( ...items )</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray": {"num": "22.2.4.1", "title": "#sec-typedarray TypedArray ( )", "html": "<emu-clause id=\"sec-typedarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray\">#sec-typedarray</span> <var>TypedArray</var> ( )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with no arguments.</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Return ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>, 0).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%typedarray%.prototype.set-typedarray-offset": {"num": "22.2.3.23.2", "title": "#sec-%typedarray%.prototype.set-typedarray-offset %TypedArray%.prototype.set ( typedArray [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-typedarray-offset\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-typedarray-offset\">#sec-%typedarray%.prototype.set-typedarray-offset</span> %TypedArray%.prototype.set ( <var>typedArray</var> [ , <var>offset</var> ] )</h1>\n          <p>Sets multiple values in this <var>TypedArray</var>, reading the values from the <var>typedArray</var> argument object. The optional <var>offset</var> value indicates the first element index in this <var>TypedArray</var> where values are written. If omitted, it is assumed to be 0.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> has a [[TypedArrayName]] internal slot. If it does not, the definition in <emu-xref href=\"#sec-%typedarray%.prototype.set-array-offset\"><a href=\"#sec-%typedarray%.prototype.set-array-offset\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%.prototype.set-array-offset\">#sec-%typedarray%.prototype.set-array-offset</a></emu-xref> applies.</li><li>Let <var>target</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>target</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>target</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>targetOffset</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>offset</var>).</li><li>If <var>targetOffset</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>srcBuffer</var> be <var>typedArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>srcName</var> be the String value of <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcLength</var> be <var>typedArray</var>.[[ArrayLength]].</li><li>Let <var>srcByteOffset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>target</var>.[[ContentType]] is not equal to <var>typedArray</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>If both <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcBuffer</var>) and <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>targetBuffer</var>) are <emu-val>true</emu-val>, then<ol><li>If <var>srcBuffer</var>.[[ArrayBufferData]] and <var>targetBuffer</var>.[[ArrayBufferData]] are the same <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values, let <var>same</var> be <emu-val>true</emu-val>; else let <var>same</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else, let <var>same</var> be <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcBuffer</var>, <var>targetBuffer</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>srcByteLength</var> be <var>typedArray</var>.[[ByteLength]].</li><li>Set <var>srcBuffer</var> to ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcByteLength</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li><li>NOTE: <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref> is used to clone <var>srcBuffer</var> because is it known to not have any observable side-effects.</li><li>Let <var>srcByteIndex</var> be 0.</li></ol></li><li>Else, let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>If <var>srcType</var> is the same as <var>targetType</var>, then<ol><li>NOTE: If <var>srcType</var> and <var>targetType</var> are the same, the transfer must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <emu-const>Uint8</emu-const>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <emu-const>Uint8</emu-const>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-date-year-month-date-hours-minutes-seconds-ms": {"num": "20.4.2.1", "title": "#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )", "html": "<emu-clause id=\"sec-date-year-month-date-hours-minutes-seconds-ms\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-year-month-date-hours-minutes-seconds-ms\">#sec-date-year-month-date-hours-minutes-seconds-ms</span> Date ( <var>year</var>, <var>month</var> [ , <var>date</var> [ , <var>hours</var> [ , <var>minutes</var> [ , <var>seconds</var> [ , <var>ms</var> ] ] ] ] ] )</h1>\n        <p>This description applies only if the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called with at least two arguments.</p>\n        <p>When the <code>Date</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>numberOfArgs</var> be the number of arguments passed to this function call.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>numberOfArgs</var> &#8805; 2.</li><li>If NewTarget is <emu-val>undefined</emu-val>, then<ol><li>Let <var>now</var> be the Number that is the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> (UTC) identifying the current time.</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>now</var>).</li></ol></li><li>Else,<ol><li>Let <var>y</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>year</var>).</li><li>Let <var>m</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>month</var>).</li><li>If <var>date</var> is present, let <var>dt</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>date</var>); else let <var>dt</var> be 1.</li><li>If <var>hours</var> is present, let <var>h</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>hours</var>); else let <var>h</var> be 0.</li><li>If <var>minutes</var> is present, let <var>min</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>minutes</var>); else let <var>min</var> be 0.</li><li>If <var>seconds</var> is present, let <var>s</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>seconds</var>); else let <var>s</var> be 0.</li><li>If <var>ms</var> is present, let <var>milli</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>ms</var>); else let <var>milli</var> be 0.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, let <var>yr</var> be <emu-val>NaN</emu-val>.</li><li>Else,<ol><li>Let <var>yi</var> be !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>y</var>).</li><li>If 0 &#8804; <var>yi</var> &#8804; 99, let <var>yr</var> be 1900 + <var>yi</var>; otherwise, let <var>yr</var> be <var>y</var>.</li></ol></li><li>Let <var>finalDate</var> be <emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(<var>yr</var>, <var>m</var>, <var>dt</var>), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(<var>h</var>, <var>min</var>, <var>s</var>, <var>milli</var>)).</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Date.prototype%\"</emu-val>, &#171; [[DateValue]] &#187;).</li><li>Set <var>O</var>.[[DateValue]] to <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"UTC\"><a href=\"#sec-utc-t\">UTC</a></emu-xref>(<var>finalDate</var>)).</li><li>Return <var>O</var>.</li></ol></li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%typedarray%.prototype.set-array-offset": {"num": "22.2.3.23.1", "title": "#sec-%typedarray%.prototype.set-array-offset %TypedArray%.prototype.set ( array [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-array-offset\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-array-offset\">#sec-%typedarray%.prototype.set-array-offset</span> %TypedArray%.prototype.set ( <var>array</var> [ , <var>offset</var> ] )</h1>\n          <p>Sets multiple values in this <var>TypedArray</var>, reading the values from the object <var>array</var>. The optional <var>offset</var> value indicates the first element index in this <var>TypedArray</var> where values are written. If omitted, it is assumed to be 0.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>array</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> other than an Object with a [[TypedArrayName]] internal slot. If it is such an Object, the definition in <emu-xref href=\"#sec-%typedarray%.prototype.set-typedarray-offset\"><a href=\"#sec-%typedarray%.prototype.set-typedarray-offset\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%.prototype.set-typedarray-offset\">#sec-%typedarray%.prototype.set-typedarray-offset</a></emu-xref> applies.</li><li>Let <var>target</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>target</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>target</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>targetOffset</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>offset</var>).</li><li>If <var>targetOffset</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>src</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>array</var>).</li><li>Let <var>srcLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>src</var>).</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>k</var> be 0.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>src</var>, <var>Pk</var>).</li><li>If <var>target</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, set <var>value</var> to ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, set <var>value</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-array-len": {"num": "22.1.1.2", "title": "#sec-array-len Array ( len )", "html": "<emu-clause id=\"sec-array-len\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-len\">#sec-array-len</span> Array ( <var>len</var> )</h1>\n        <p>This description applies if and only if the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called with exactly one argument.</p>\n        <emu-alg><ol><li>Let <var>numberOfArgs</var> be the number of arguments passed to this function call.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>numberOfArgs</var> = 1.</li><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Array.prototype%\"</emu-val>).</li><li>Let <var>array</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0, <var>proto</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>len</var>) is not Number, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, <emu-val>\"0\"</emu-val>, <var>len</var>).</li><li>Let <var>intLen</var> be 1.</li></ol></li><li>Else,<ol><li>Let <var>intLen</var> be <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>len</var>).</li><li>If <var>intLen</var> &#8800; <var>len</var>, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>array</var>, <emu-val>\"length\"</emu-val>, <var>intLen</var>, <emu-val>true</emu-val>).</li><li>Return <var>array</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-typedarray-prototype-objects": {"num": "22.2.6", "title": "#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects", "html": "<emu-clause id=\"sec-properties-of-typedarray-prototype-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-typedarray-prototype-objects\">#sec-properties-of-typedarray-prototype-objects</span> Properties of the <var>TypedArray</var> Prototype Objects</h1>\n      <p>Each <var>TypedArray</var> prototype object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray.prototype.bytes_per_element\"><h1><span class=\"secnum\">22.2.6.1</span>#sec-typedarray.prototype.bytes_per_element TypedArray.prototype.BYTES_PER_ELEMENT</h1>...</div><div id=\"excluded-sec-typedarray.prototype.constructor\"><h1><span class=\"secnum\">22.2.6.2</span>#sec-typedarray.prototype.constructor TypedArray.prototype.constructor</h1>...</div></emu-clause>\n\n    "}, "sec-array-items": {"num": "22.1.1.3", "title": "#sec-array-items Array ( ...items )", "html": "<emu-clause id=\"sec-array-items\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-items\">#sec-array-items</span> Array ( ...<var>items</var> )</h1>\n        <p>This description applies if and only if the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called with at least two arguments.</p>\n        <p>When the <code>Array</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>numberOfArgs</var> be the number of arguments passed to this function call.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>numberOfArgs</var> &#8805; 2.</li><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Array.prototype%\"</emu-val>).</li><li>Let <var>array</var> be ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>numberOfArgs</var>, <var>proto</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>numberOfArgs</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>itemK</var> be <var>items</var>[<var>k</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, <var>Pk</var>, <var>itemK</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The value of <var>array</var>'s <emu-val>\"length\"</emu-val> property is <var>numberOfArgs</var>.</li><li>Return <var>array</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-date-value": {"num": "20.4.2.2", "title": "#sec-date-value Date ( value )", "html": "<emu-clause id=\"sec-date-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-value\">#sec-date-value</span> Date ( <var>value</var> )</h1>\n        <p>This description applies only if the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called with exactly one argument.</p>\n        <p>When the <code>Date</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>numberOfArgs</var> be the number of arguments passed to this function call.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>numberOfArgs</var> = 1.</li><li>If NewTarget is <emu-val>undefined</emu-val>, then<ol><li>Let <var>now</var> be the Number that is the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> (UTC) identifying the current time.</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>now</var>).</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Let <var>tv</var> be <emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref>(<var>value</var>).</li></ol></li><li>Else,<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is String, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The next step never returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> because <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is String.</li><li>Let <var>tv</var> be the result of parsing <var>v</var> as a date, in exactly the same manner as for the <code>parse</code> method (<emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\" class=\"excluded-xref\" excluded-id=\"sec-date.parse\">#sec-date.parse</a></emu-xref>).</li></ol></li><li>Else,<ol><li>Let <var>tv</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>v</var>).</li></ol></li></ol></li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Date.prototype%\"</emu-val>, &#171; [[DateValue]] &#187;).</li><li>Set <var>O</var>.[[DateValue]] to <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<var>tv</var>).</li><li>Return <var>O</var>.</li></ol></li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-array-constructor-array": {"num": "22.1.1.1", "title": "#sec-array-constructor-array Array ( )", "html": "<emu-clause id=\"sec-array-constructor-array\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor-array\">#sec-array-constructor-array</span> Array ( )</h1>\n        <p>This description applies if and only if the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called with no arguments.</p>\n        <emu-alg><ol><li>Let <var>numberOfArgs</var> be the number of arguments passed to this function call.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>numberOfArgs</var> = 0.</li><li>If NewTarget is <emu-val>undefined</emu-val>, let <var>newTarget</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>; else let <var>newTarget</var> be NewTarget.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <emu-val>\"%Array.prototype%\"</emu-val>).</li><li>Return !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0, <var>proto</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%typedarray%.prototype.copywithin": {"num": "22.2.3.5", "title": "#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.copywithin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.copywithin\">#sec-%typedarray%.prototype.copywithin</span> %TypedArray%.prototype.copyWithin ( <var>target</var>, <var>start</var> [ , <var>end</var> ] )</h1>\n        <p>The interpretation and use of the arguments of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.copyWithin</code> are the same as for <code>Array.prototype.copyWithin</code> as defined in <emu-xref href=\"#sec-array.prototype.copywithin\"><a href=\"#sec-array.prototype.copywithin\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.copywithin\">#sec-array.prototype.copywithin</a></emu-xref>.</p>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>O</var>).</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>Let <var>relativeTarget</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>target</var>).</li><li>If <var>relativeTarget</var> &lt; 0, let <var>to</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeTarget</var>), 0); else let <var>to</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeTarget</var>, <var>len</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> &lt; 0, let <var>from</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeStart</var>), 0); else let <var>from</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeEnd</var>), 0); else let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Let <var>count</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>final</var> - <var>from</var>, <var>len</var> - <var>to</var>).</li><li>If <var>count</var> &gt; 0, then<ol><li>NOTE: The copying must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>typedArrayName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>typedArrayName</var>.</li><li>Let <var>byteOffset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>toByteIndex</var> be <var>to</var> &#215; <var>elementSize</var> + <var>byteOffset</var>.</li><li>Let <var>fromByteIndex</var> be <var>from</var> &#215; <var>elementSize</var> + <var>byteOffset</var>.</li><li>Let <var>countBytes</var> be <var>count</var> &#215; <var>elementSize</var>.</li><li>If <var>fromByteIndex</var> &lt; <var>toByteIndex</var> and <var>toByteIndex</var> &lt; <var>fromByteIndex</var> + <var>countBytes</var>, then<ol><li>Let <var>direction</var> be -1.</li><li>Set <var>fromByteIndex</var> to <var>fromByteIndex</var> + <var>countBytes</var> - 1.</li><li>Set <var>toByteIndex</var> to <var>toByteIndex</var> + <var>countBytes</var> - 1.</li></ol></li><li>Else,<ol><li>Let <var>direction</var> be 1.</li></ol></li><li>Repeat, while <var>countBytes</var> &gt; 0,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>fromByteIndex</var>, <emu-const>Uint8</emu-const>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>toByteIndex</var>, <emu-const>Uint8</emu-const>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>fromByteIndex</var> to <var>fromByteIndex</var> + <var>direction</var>.</li><li>Set <var>toByteIndex</var> to <var>toByteIndex</var> + <var>direction</var>.</li><li>Set <var>countBytes</var> to <var>countBytes</var> - 1.</li></ol></li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-validatetypedarray\"><h1><span class=\"secnum\">22.2.3.5.1</span>#sec-validatetypedarray Runtime Semantics: ValidateTypedArray ( O )</h1>...</div></emu-clause>\n\n      "}, "sec-allocatetypedarray": {"num": "22.2.4.2.1", "title": "#sec-allocatetypedarray Runtime Semantics: AllocateTypedArray ( constructorName, newTarget, defaultProto [ , length ] )", "html": "<emu-clause id=\"sec-allocatetypedarray\" aoid=\"AllocateTypedArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatetypedarray\">#sec-allocatetypedarray</span> Runtime Semantics: AllocateTypedArray ( <var>constructorName</var>, <var>newTarget</var>, <var>defaultProto</var> [ , <var>length</var> ] )</h1>\n          <p>The abstract operation AllocateTypedArray takes arguments <var>constructorName</var> (a String which is the name of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>), <var>newTarget</var>, and <var>defaultProto</var> and optional argument <var>length</var>. It is used to validate and create an instance of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. If the <var>length</var> argument is passed, an ArrayBuffer of that length is also allocated and associated with the new TypedArray instance. AllocateTypedArray provides common semantics that is used by all of the <var>TypedArray</var> overloads. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>defaultProto</var>).</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"IntegerIndexedObjectCreate\"><a href=\"#sec-integerindexedobjectcreate\">IntegerIndexedObjectCreate</a></emu-xref>(<var>proto</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var>.[[ViewedArrayBuffer]] is <emu-val>undefined</emu-val>.</li><li>Set <var>obj</var>.[[TypedArrayName]] to <var>constructorName</var>.</li><li>If <var>constructorName</var> is <emu-val>\"BigInt64Array\"</emu-val> or <emu-val>\"BigUint64Array\"</emu-val>, set <var>obj</var>.[[ContentType]] to <emu-const>BigInt</emu-const>.</li><li>Otherwise, set <var>obj</var>.[[ContentType]] to <emu-const>Number</emu-const>.</li><li>If <var>length</var> is not present, then<ol><li>Set <var>obj</var>.[[ByteLength]] to 0.</li><li>Set <var>obj</var>.[[ByteOffset]] to 0.</li><li>Set <var>obj</var>.[[ArrayLength]] to 0.</li></ol></li><li>Else,<ol><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>obj</var>, <var>length</var>).</li></ol></li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-typedarray-object": {"num": "22.2.4.4", "title": "#sec-typedarray-object TypedArray ( object )", "html": "<emu-clause id=\"sec-typedarray-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-object\">#sec-typedarray-object</span> <var>TypedArray</var> ( <var>object</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object does not have either a [[TypedArrayName]] or an [[ArrayBufferData]] internal slot.</p>\n        <p><var>TypedArray</var> called with argument <var>object</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>object</var>) is Object and <var>object</var> does not have either a [[TypedArrayName]] or an [[ArrayBufferData]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>object</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@iterator</a></emu-xref>).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>values</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>object</var>, <var>usingIterator</var>).</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <var>O</var>.</li></ol></li><li>NOTE: <var>object</var> is not an Iterable so assume it is already an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be <var>object</var>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-typedarray-constructors": {"num": "22.2.5", "title": "#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors", "html": "<emu-clause id=\"sec-properties-of-the-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-typedarray-constructors\">#sec-properties-of-the-typedarray-constructors</span> Properties of the <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name specified for it in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray.bytes_per_element\"><h1><span class=\"secnum\">22.2.5.1</span>#sec-typedarray.bytes_per_element TypedArray.BYTES_PER_ELEMENT</h1>...</div><div id=\"excluded-sec-typedarray.prototype\"><h1><span class=\"secnum\">22.2.5.2</span>#sec-typedarray.prototype TypedArray.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray-constructors": {"num": "22.2.4", "title": "#sec-typedarray-constructors The TypedArray Constructors", "html": "<emu-clause id=\"sec-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-constructors\">#sec-typedarray-constructors</span> The <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is an intrinsic object that has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>TypedArray</var>, in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments. The actual behaviour of a call of <var>TypedArray</var> depends upon the number and kind of arguments that are passed to it.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>TypedArray</var> behaviour must include a <code>super</code> call to the <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype</code> built-in methods.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 3.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray\"><h1><span class=\"secnum\">22.2.4.1</span>#sec-typedarray TypedArray ( )</h1>...</div><div id=\"excluded-sec-typedarray-length\"><h1><span class=\"secnum\">22.2.4.2</span>#sec-typedarray-length TypedArray ( length )</h1>...</div><div id=\"excluded-sec-typedarray-typedarray\"><h1><span class=\"secnum\">22.2.4.3</span>#sec-typedarray-typedarray TypedArray ( typedArray )</h1>...</div><div id=\"excluded-sec-typedarray-object\"><h1><span class=\"secnum\">22.2.4.4</span>#sec-typedarray-object TypedArray ( object )</h1>...</div><div id=\"excluded-sec-typedarray-buffer-byteoffset-length\"><h1><span class=\"secnum\">22.2.4.5</span>#sec-typedarray-buffer-byteoffset-length TypedArray ( buffer [ , byteOffset [ , length ] ] )</h1>...</div><emu-clause id=\"typedarray-create\" aoid=\"TypedArrayCreate\">\n        <h1><span class=\"secnum\">22.2.4.6</span> TypedArrayCreate ( <var>constructor</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArrayCreate takes arguments <var>constructor</var> and <var>argumentList</var>. It is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>newTypedArray</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>newTypedArray</var>).</li><li>If <var>argumentList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of a single Number, then<ol><li>If <var>newTypedArray</var>.[[ArrayLength]] &lt; <var>argumentList</var>[0], throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>newTypedArray</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      <emu-clause id=\"typedarray-species-create\" aoid=\"TypedArraySpeciesCreate\">\n        <h1><span class=\"secnum\">22.2.4.7</span> TypedArraySpeciesCreate ( <var>exemplar</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArraySpeciesCreate takes arguments <var>exemplar</var> and <var>argumentList</var>. It is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>exemplar</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>exemplar</var> is an Object that has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>Let <var>defaultConstructor</var> be the intrinsic object listed in column one of <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>exemplar</var>.[[TypedArrayName]].</li><li>Let <var>constructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>exemplar</var>, <var>defaultConstructor</var>).</li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>If <var>result</var>.[[ContentType]] is not equal to <var>exemplar</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n    </emu-clause>\n\n    "}, "sec-typedarray-typedarray": {"num": "22.2.4.3", "title": "#sec-typedarray-typedarray TypedArray ( typedArray )", "html": "<emu-clause id=\"sec-typedarray-typedarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-typedarray\">#sec-typedarray-typedarray</span> <var>TypedArray</var> ( <var>typedArray</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object has a [[TypedArrayName]] internal slot.</p>\n        <p><var>TypedArray</var> called with argument <var>typedArray</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>typedArray</var>) is Object and <var>typedArray</var> has a [[TypedArrayName]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>srcArray</var> be <var>typedArray</var>.</li><li>Let <var>srcData</var> be <var>srcArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>elementLength</var> be <var>srcArray</var>.[[ArrayLength]].</li><li>Let <var>srcName</var> be the String value of <var>srcArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcByteOffset</var> be <var>srcArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>elementLength</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>bufferConstructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>srcData</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li></ol></li><li>Else,<ol><li>Let <var>bufferConstructor</var> be <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>.</li></ol></li><li>If <var>elementType</var> is the same as <var>srcType</var>, then<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteOffset</var>, <var>byteLength</var>, <var>bufferConstructor</var>).</li></ol></li><li>Else,<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>bufferConstructor</var>, <var>byteLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>srcArray</var>.[[ContentType]] is not equal to <var>O</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be 0.</li><li>Let <var>count</var> be <var>elementLength</var>.</li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>data</var>, <var>targetByteIndex</var>, <var>elementType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>elementSize</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>elementLength</var>.</li><li>Return <var>O</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-typedarray-length": {"num": "22.2.4.2", "title": "#sec-typedarray-length TypedArray ( length )", "html": "<emu-clause id=\"sec-typedarray-length\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-length\">#sec-typedarray-length</span> <var>TypedArray</var> ( <var>length</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is not Object.</p>\n        <p><var>TypedArray</var> called with argument <var>length</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>length</var>) is not Object.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>elementLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>length</var>).</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Return ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>, <var>elementLength</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-allocatetypedarray\"><h1><span class=\"secnum\">22.2.4.2.1</span>#sec-allocatetypedarray Runtime Semantics: AllocateTypedArray ( constructorName, newTarget, defaultProto [ , length ] )</h1>...</div><div id=\"excluded-sec-allocatetypedarraybuffer\"><h1><span class=\"secnum\">22.2.4.2.2</span>#sec-allocatetypedarraybuffer Runtime Semantics: AllocateTypedArrayBuffer ( O, length )</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-%typedarrayprototype%-object": {"num": "22.2.3", "title": "#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray% Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarrayprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarrayprototype%-object\">#sec-properties-of-the-%typedarrayprototype%-object</span> Properties of the %TypedArray% Prototype Object</h1>\n      <p>The <dfn>%TypedArray% prototype object</dfn>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is <dfn>%TypedArray.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-%typedarray%.prototype.buffer\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-get-%typedarray%.prototype.buffer get %TypedArray%.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.bytelength\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-get-%typedarray%.prototype.bytelength get %TypedArray%.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.byteoffset\"><h1><span class=\"secnum\">22.2.3.3</span>#sec-get-%typedarray%.prototype.byteoffset get %TypedArray%.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.constructor\"><h1><span class=\"secnum\">22.2.3.4</span>#sec-%typedarray%.prototype.constructor %TypedArray%.prototype.constructor</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.copywithin\"><h1><span class=\"secnum\">22.2.3.5</span>#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.entries\"><h1><span class=\"secnum\">22.2.3.6</span>#sec-%typedarray%.prototype.entries %TypedArray%.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.every\"><h1><span class=\"secnum\">22.2.3.7</span>#sec-%typedarray%.prototype.every %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.fill\"><h1><span class=\"secnum\">22.2.3.8</span>#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.filter\"><h1><span class=\"secnum\">22.2.3.9</span>#sec-%typedarray%.prototype.filter %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.find\"><h1><span class=\"secnum\">22.2.3.10</span>#sec-%typedarray%.prototype.find %TypedArray%.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.findindex\"><h1><span class=\"secnum\">22.2.3.11</span>#sec-%typedarray%.prototype.findindex %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.foreach\"><h1><span class=\"secnum\">22.2.3.12</span>#sec-%typedarray%.prototype.foreach %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.includes\"><h1><span class=\"secnum\">22.2.3.13</span>#sec-%typedarray%.prototype.includes %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.indexof\"><h1><span class=\"secnum\">22.2.3.14</span>#sec-%typedarray%.prototype.indexof %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.join\"><h1><span class=\"secnum\">22.2.3.15</span>#sec-%typedarray%.prototype.join %TypedArray%.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.keys\"><h1><span class=\"secnum\">22.2.3.16</span>#sec-%typedarray%.prototype.keys %TypedArray%.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.lastindexof\"><h1><span class=\"secnum\">22.2.3.17</span>#sec-%typedarray%.prototype.lastindexof %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.length\"><h1><span class=\"secnum\">22.2.3.18</span>#sec-get-%typedarray%.prototype.length get %TypedArray%.prototype.length</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.map\"><h1><span class=\"secnum\">22.2.3.19</span>#sec-%typedarray%.prototype.map %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduce\"><h1><span class=\"secnum\">22.2.3.20</span>#sec-%typedarray%.prototype.reduce %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduceright\"><h1><span class=\"secnum\">22.2.3.21</span>#sec-%typedarray%.prototype.reduceright %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reverse\"><h1><span class=\"secnum\">22.2.3.22</span>#sec-%typedarray%.prototype.reverse %TypedArray%.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set-overloaded-offset\"><h1><span class=\"secnum\">22.2.3.23</span>#sec-%typedarray%.prototype.set-overloaded-offset %TypedArray%.prototype.set ( overloaded [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.slice\"><h1><span class=\"secnum\">22.2.3.24</span>#sec-%typedarray%.prototype.slice %TypedArray%.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.some\"><h1><span class=\"secnum\">22.2.3.25</span>#sec-%typedarray%.prototype.some %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.sort\"><h1><span class=\"secnum\">22.2.3.26</span>#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.subarray\"><h1><span class=\"secnum\">22.2.3.27</span>#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tolocalestring\"><h1><span class=\"secnum\">22.2.3.28</span>#sec-%typedarray%.prototype.tolocalestring %TypedArray%.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tostring\"><h1><span class=\"secnum\">22.2.3.29</span>#sec-%typedarray%.prototype.tostring %TypedArray%.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.values\"><h1><span class=\"secnum\">22.2.3.30</span>#sec-%typedarray%.prototype.values %TypedArray%.prototype.values ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype-@@iterator\"><h1><span class=\"secnum\">22.2.3.31</span>#sec-%typedarray%.prototype-@@iterator %TypedArray%.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype-@@tostringtag\"><h1><span class=\"secnum\">22.2.3.32</span>#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray-buffer-byteoffset-length": {"num": "22.2.4.5", "title": "#sec-typedarray-buffer-byteoffset-length TypedArray ( buffer [ , byteOffset [ , length ] ] )", "html": "<emu-clause id=\"sec-typedarray-buffer-byteoffset-length\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-buffer-byteoffset-length\">#sec-typedarray-buffer-byteoffset-length</span> <var>TypedArray</var> ( <var>buffer</var> [ , <var>byteOffset</var> [ , <var>length</var> ] ] )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object has an [[ArrayBufferData]] internal slot.</p>\n        <p><var>TypedArray</var> called with at least one argument <var>buffer</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>buffer</var>) is Object and <var>buffer</var> has an [[ArrayBufferData]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>offset</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>byteOffset</var>).</li><li>If <var>offset</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> <var>elementSize</var> &#8800; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>length</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>newLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>length</var>).</li></ol></li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>bufferByteLength</var> be <var>buffer</var>.[[ArrayBufferByteLength]].</li><li>If <var>length</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>bufferByteLength</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> <var>elementSize</var> &#8800; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>newByteLength</var> be <var>bufferByteLength</var> - <var>offset</var>.</li><li>If <var>newByteLength</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>Let <var>newByteLength</var> be <var>newLength</var> &#215; <var>elementSize</var>.</li><li>If <var>offset</var> + <var>newByteLength</var> &gt; <var>bufferByteLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>buffer</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>newByteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to <var>offset</var>.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>newByteLength</var> / <var>elementSize</var>.</li><li>Return <var>O</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%typedarray%.prototype.set-overloaded-offset": {"num": "22.2.3.23", "title": "#sec-%typedarray%.prototype.set-overloaded-offset %TypedArray%.prototype.set ( overloaded [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-overloaded-offset\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-overloaded-offset\">#sec-%typedarray%.prototype.set-overloaded-offset</span> %TypedArray%.prototype.set ( <var>overloaded</var> [ , <var>offset</var> ] )</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.set</code> is a single function whose behaviour is overloaded based upon the type of its first argument.</p>\n        <p>This function is not generic. The <emu-val>this</emu-val> value must be an object with a [[TypedArrayName]] internal slot.</p>\n\n        <div id=\"excluded-sec-%typedarray%.prototype.set-array-offset\"><h1><span class=\"secnum\">22.2.3.23.1</span>#sec-%typedarray%.prototype.set-array-offset %TypedArray%.prototype.set ( array [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set-typedarray-offset\"><h1><span class=\"secnum\">22.2.3.23.2</span>#sec-%typedarray%.prototype.set-typedarray-offset %TypedArray%.prototype.set ( typedArray [ , offset ] )</h1>...</div></emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}, "to": {"secList": ["sec-typedarray-objects", "sec-validatetypedarray", "sec-date-constructor", "sec-array-constructor", "sec-typedarray", "sec-properties-of-typedarray-prototype-objects", "sec-%typedarray%.prototype.copywithin", "sec-allocatetypedarray", "sec-properties-of-the-typedarray-constructors", "sec-typedarray-constructors", "sec-properties-of-the-%typedarrayprototype%-object"], "secData": {"sec-typedarray-objects": {"num": "22.2", "title": "#sec-typedarray-objects TypedArray Objects", "html": "<emu-clause id=\"sec-typedarray-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</span> TypedArray Objects</h1>\n    <p><var>TypedArray</var> objects present an array-like view of an underlying binary data buffer (<emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>). Each element of a <var>TypedArray</var> instance has the same underlying binary scalar data type. There is a distinct <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, listed in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>, for each of the supported element types. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> has a corresponding distinct prototype object.</p>\n    <emu-table id=\"table-the-typedarray-constructors\" caption=\"The TypedArray Constructors\" oldids=\"table-49\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</span>: The TypedArray Constructors</figcaption><span id=\"table-49\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name and Intrinsic\n          </th>\n          <th>\n            Element Type\n          </th>\n          <th>\n            Element Size\n          </th>\n          <th>\n            Conversion Operation\n          </th>\n          <th>\n            Description\n          </th>\n        </tr>\n        <tr>\n          <td>\n            Int8Array\n            <br>\n            <dfn>%Int8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt8\"><a href=\"#sec-toint8\">ToInt8</a></emu-xref>\n          </td>\n          <td>\n            8-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8Array\n            <br>\n            <dfn>%Uint8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8\"><a href=\"#sec-touint8\">ToUint8</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8ClampedArray\n            <br>\n            <dfn>%Uint8ClampedArray%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8C</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8Clamp\"><a href=\"#sec-touint8clamp\">ToUint8Clamp</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> (clamped conversion)\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int16Array\n            <br>\n            <dfn>%Int16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt16\"><a href=\"#sec-toint16\">ToInt16</a></emu-xref>\n          </td>\n          <td>\n            16-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint16Array\n            <br>\n            <dfn>%Uint16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint16\"><a href=\"#sec-touint16\">ToUint16</a></emu-xref>\n          </td>\n          <td>\n            16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int32Array\n            <br>\n            <dfn>%Int32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>\n          </td>\n          <td>\n            32-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint32Array\n            <br>\n            <dfn>%Uint32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>\n          </td>\n          <td>\n            32-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigInt64Array\n            <br>\n            <dfn>%BigInt64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigInt64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-tobigint64\">ToBigInt64</a></emu-xref>\n          </td>\n          <td>\n            64-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigUint64Array\n            <br>\n            <dfn>%BigUint64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigUint64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigUint64\"><a href=\"#sec-tobiguint64\">ToBigUint64</a></emu-xref>\n          </td>\n          <td>\n            64-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float32Array\n            <br>\n            <dfn>%Float32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n          </td>\n          <td>\n            32-bit IEEE floating point\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float64Array\n            <br>\n            <dfn>%Float64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n          </td>\n          <td>\n            64-bit IEEE floating point\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In the definitions below, references to <var>TypedArray</var> should be replaced with the appropriate <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name from the above table.</p>\n\n    <div id=\"excluded-sec-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.1</span>#sec-%typedarray%-intrinsic-object The %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.2</span>#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarrayprototype%-object\"><h1><span class=\"secnum\">22.2.3</span>#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray% Prototype Object</h1>...</div><div id=\"excluded-sec-abstract-operations-for-typedarray-objects\"><h1><span class=\"secnum\">22.2.4</span>#sec-abstract-operations-for-typedarray-objects Abstract Operations for TypedArray Objects</h1>...</div><div id=\"excluded-sec-typedarray-constructors\"><h1><span class=\"secnum\">22.2.5</span>#sec-typedarray-constructors The TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-typedarray-constructors\"><h1><span class=\"secnum\">22.2.6</span>#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-prototype-objects\"><h1><span class=\"secnum\">22.2.7</span>#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-instances\"><h1><span class=\"secnum\">22.2.8</span>#sec-properties-of-typedarray-instances Properties of TypedArray Instances</h1>...</div></emu-clause>\n"}, "sec-validatetypedarray": {"num": "22.2.4.3", "title": "#sec-validatetypedarray Runtime Semantics: ValidateTypedArray ( O )", "html": "<emu-clause id=\"sec-validatetypedarray\" aoid=\"ValidateTypedArray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validatetypedarray\">#sec-validatetypedarray</span> Runtime Semantics: ValidateTypedArray ( <var>O</var> )</h1>\n        <p>The abstract operation ValidateTypedArray takes argument <var>O</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>buffer</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date Date ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "22.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a single function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 1.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-array Array ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray": {"num": "22.2.5.1", "title": "#sec-typedarray TypedArray ( ...args )", "html": "<emu-clause id=\"sec-typedarray\" oldids=\"sec-typedarray-length\"><span id=\"sec-typedarray-length\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray\">#sec-typedarray</span> <var>TypedArray</var> ( ...<var>args</var> )</h1>\n        <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> performs the following steps when called:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>proto</var> be <code>\"%<var>TypedArray</var>.prototype%\"</code>.</li><li>Let <var>numberOfArgs</var> be the number of elements in <var>args</var>.</li><li>If <var>numberOfArgs</var> = 0, then<ol><li>Return ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <var>proto</var>, 0).</li></ol></li><li>Else,<ol><li>Let <var>firstArgument</var> be <var>args</var>[0].</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>firstArgument</var>) is Object, then<ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <var>proto</var>).</li><li>If <var>firstArgument</var> has a [[TypedArrayName]] internal slot, then<ol><li>Perform ?&#160;<emu-xref aoid=\"InitializeTypedArrayFromTypedArray\"><a href=\"#sec-initializetypedarrayfromtypedarray\">InitializeTypedArrayFromTypedArray</a></emu-xref>(<var>O</var>, <var>firstArgument</var>).</li></ol></li><li>Else if <var>firstArgument</var> has an [[ArrayBufferData]] internal slot, then<ol><li>If <var>numberOfArgs</var> &gt; 1, let <var>byteOffset</var> be <var>args</var>[1]; else let <var>byteOffset</var> be <emu-val>undefined</emu-val>.</li><li>If <var>numberOfArgs</var> &gt; 2, let <var>length</var> be <var>args</var>[2]; else let <var>length</var> be <emu-val>undefined</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"InitializeTypedArrayFromArrayBuffer\"><a href=\"#sec-initializetypedarrayfromarraybuffer\">InitializeTypedArrayFromArrayBuffer</a></emu-xref>(<var>O</var>, <var>firstArgument</var>, <var>byteOffset</var>, <var>length</var>).</li></ol></li><li>Else,<ol><li>Perform ?&#160;<emu-xref aoid=\"InitializeTypedArrayFromOtherObject\"><a href=\"#sec-initializetypedarrayfromotherobject\">InitializeTypedArrayFromOtherObject</a></emu-xref>(<var>O</var>, <var>firstArgument</var>).</li></ol></li><li>Return <var>O</var>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>firstArgument</var> is not an Object.</li><li>Let <var>elementLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>firstArgument</var>).</li><li>Return ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <var>proto</var>, <var>elementLength</var>).</li></ol></li></ol></li></ol></emu-alg>\n\n        <div id=\"excluded-sec-allocatetypedarray\"><h1><span class=\"secnum\">22.2.5.1.1</span>#sec-allocatetypedarray Runtime Semantics: AllocateTypedArray ( constructorName, newTarget, defaultProto [ , length ] )</h1>...</div><div id=\"excluded-sec-initializetypedarrayfromtypedarray\"><h1><span class=\"secnum\">22.2.5.1.2</span>#sec-initializetypedarrayfromtypedarray InitializeTypedArrayFromTypedArray ( O, srcArray )</h1>...</div><div id=\"excluded-sec-initializetypedarrayfromarraybuffer\"><h1><span class=\"secnum\">22.2.5.1.3</span>#sec-initializetypedarrayfromarraybuffer InitializeTypedArrayFromArrayBuffer ( O, buffer, byteOffset, length )</h1>...</div><div id=\"excluded-sec-initializetypedarrayfromotherobject\"><h1><span class=\"secnum\">22.2.5.1.4</span>#sec-initializetypedarrayfromotherobject InitializeTypedArrayFromOtherObject ( O, object )</h1>...</div><div id=\"excluded-sec-allocatetypedarraybuffer\"><h1><span class=\"secnum\">22.2.5.1.5</span>#sec-allocatetypedarraybuffer Runtime Semantics: AllocateTypedArrayBuffer ( O, length )</h1>...</div></emu-clause>\n    "}, "sec-properties-of-typedarray-prototype-objects": {"num": "22.2.7", "title": "#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects", "html": "<emu-clause id=\"sec-properties-of-typedarray-prototype-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-typedarray-prototype-objects\">#sec-properties-of-typedarray-prototype-objects</span> Properties of the <var>TypedArray</var> Prototype Objects</h1>\n      <p>Each <var>TypedArray</var> prototype object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray.prototype.bytes_per_element\"><h1><span class=\"secnum\">22.2.7.1</span>#sec-typedarray.prototype.bytes_per_element TypedArray.prototype.BYTES_PER_ELEMENT</h1>...</div><div id=\"excluded-sec-typedarray.prototype.constructor\"><h1><span class=\"secnum\">22.2.7.2</span>#sec-typedarray.prototype.constructor TypedArray.prototype.constructor</h1>...</div></emu-clause>\n\n    "}, "sec-%typedarray%.prototype.copywithin": {"num": "22.2.3.5", "title": "#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.copywithin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.copywithin\">#sec-%typedarray%.prototype.copywithin</span> %TypedArray%.prototype.copyWithin ( <var>target</var>, <var>start</var> [ , <var>end</var> ] )</h1>\n        <p>The interpretation and use of the arguments of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.copyWithin</code> are the same as for <code>Array.prototype.copyWithin</code> as defined in <emu-xref href=\"#sec-array.prototype.copywithin\"><a href=\"#sec-array.prototype.copywithin\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.copywithin\">#sec-array.prototype.copywithin</a></emu-xref>.</p>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>O</var>).</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>Let <var>relativeTarget</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>target</var>).</li><li>If <var>relativeTarget</var> &lt; 0, let <var>to</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeTarget</var>), 0); else let <var>to</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeTarget</var>, <var>len</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> &lt; 0, let <var>from</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeStart</var>), 0); else let <var>from</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeEnd</var>), 0); else let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Let <var>count</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>final</var> - <var>from</var>, <var>len</var> - <var>to</var>).</li><li>If <var>count</var> &gt; 0, then<ol><li>NOTE: The copying must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>typedArrayName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>typedArrayName</var>.</li><li>Let <var>byteOffset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>toByteIndex</var> be <var>to</var> &#215; <var>elementSize</var> + <var>byteOffset</var>.</li><li>Let <var>fromByteIndex</var> be <var>from</var> &#215; <var>elementSize</var> + <var>byteOffset</var>.</li><li>Let <var>countBytes</var> be <var>count</var> &#215; <var>elementSize</var>.</li><li>If <var>fromByteIndex</var> &lt; <var>toByteIndex</var> and <var>toByteIndex</var> &lt; <var>fromByteIndex</var> + <var>countBytes</var>, then<ol><li>Let <var>direction</var> be -1.</li><li>Set <var>fromByteIndex</var> to <var>fromByteIndex</var> + <var>countBytes</var> - 1.</li><li>Set <var>toByteIndex</var> to <var>toByteIndex</var> + <var>countBytes</var> - 1.</li></ol></li><li>Else,<ol><li>Let <var>direction</var> be 1.</li></ol></li><li>Repeat, while <var>countBytes</var> &gt; 0,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>fromByteIndex</var>, <emu-const>Uint8</emu-const>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>toByteIndex</var>, <emu-const>Uint8</emu-const>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>fromByteIndex</var> to <var>fromByteIndex</var> + <var>direction</var>.</li><li>Set <var>toByteIndex</var> to <var>toByteIndex</var> + <var>direction</var>.</li><li>Set <var>countBytes</var> to <var>countBytes</var> - 1.</li></ol></li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-allocatetypedarray": {"num": "22.2.5.1.1", "title": "#sec-allocatetypedarray Runtime Semantics: AllocateTypedArray ( constructorName, newTarget, defaultProto [ , length ] )", "html": "<emu-clause id=\"sec-allocatetypedarray\" aoid=\"AllocateTypedArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatetypedarray\">#sec-allocatetypedarray</span> Runtime Semantics: AllocateTypedArray ( <var>constructorName</var>, <var>newTarget</var>, <var>defaultProto</var> [ , <var>length</var> ] )</h1>\n          <p>The abstract operation AllocateTypedArray takes arguments <var>constructorName</var> (a String which is the name of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>), <var>newTarget</var>, and <var>defaultProto</var> and optional argument <var>length</var>. It is used to validate and create an instance of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. If the <var>length</var> argument is passed, an ArrayBuffer of that length is also allocated and associated with the new TypedArray instance. AllocateTypedArray provides common semantics that is used by <var>TypedArray</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>defaultProto</var>).</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"IntegerIndexedObjectCreate\"><a href=\"#sec-integerindexedobjectcreate\">IntegerIndexedObjectCreate</a></emu-xref>(<var>proto</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var>.[[ViewedArrayBuffer]] is <emu-val>undefined</emu-val>.</li><li>Set <var>obj</var>.[[TypedArrayName]] to <var>constructorName</var>.</li><li>If <var>constructorName</var> is <emu-val>\"BigInt64Array\"</emu-val> or <emu-val>\"BigUint64Array\"</emu-val>, set <var>obj</var>.[[ContentType]] to <emu-const>BigInt</emu-const>.</li><li>Otherwise, set <var>obj</var>.[[ContentType]] to <emu-const>Number</emu-const>.</li><li>If <var>length</var> is not present, then<ol><li>Set <var>obj</var>.[[ByteLength]] to 0.</li><li>Set <var>obj</var>.[[ByteOffset]] to 0.</li><li>Set <var>obj</var>.[[ArrayLength]] to 0.</li></ol></li><li>Else,<ol><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>obj</var>, <var>length</var>).</li></ol></li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-the-typedarray-constructors": {"num": "22.2.6", "title": "#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors", "html": "<emu-clause id=\"sec-properties-of-the-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-typedarray-constructors\">#sec-properties-of-the-typedarray-constructors</span> Properties of the <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name specified for it in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray.bytes_per_element\"><h1><span class=\"secnum\">22.2.6.1</span>#sec-typedarray.bytes_per_element TypedArray.BYTES_PER_ELEMENT</h1>...</div><div id=\"excluded-sec-typedarray.prototype\"><h1><span class=\"secnum\">22.2.6.2</span>#sec-typedarray.prototype TypedArray.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray-constructors": {"num": "22.2.5", "title": "#sec-typedarray-constructors The TypedArray Constructors", "html": "<emu-clause id=\"sec-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-constructors\">#sec-typedarray-constructors</span> The <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is an intrinsic object that has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>TypedArray</var>, in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>.</li>\n        <li>is a single function whose behaviour differs based upon the number and types of its arguments. The actual behaviour of a call of <var>TypedArray</var> depends upon the number and kind of arguments that are passed to it.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>TypedArray</var> behaviour must include a <code>super</code> call to the <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype</code> built-in methods.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 3.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray\"><h1><span class=\"secnum\">22.2.5.1</span>#sec-typedarray TypedArray ( ...args )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-%typedarrayprototype%-object": {"num": "22.2.3", "title": "#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray% Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarrayprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarrayprototype%-object\">#sec-properties-of-the-%typedarrayprototype%-object</span> Properties of the %TypedArray% Prototype Object</h1>\n      <p>The <dfn>%TypedArray% prototype object</dfn>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n        <li>is <dfn>%TypedArray.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-%typedarray%.prototype.buffer\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-get-%typedarray%.prototype.buffer get %TypedArray%.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.bytelength\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-get-%typedarray%.prototype.bytelength get %TypedArray%.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.byteoffset\"><h1><span class=\"secnum\">22.2.3.3</span>#sec-get-%typedarray%.prototype.byteoffset get %TypedArray%.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.constructor\"><h1><span class=\"secnum\">22.2.3.4</span>#sec-%typedarray%.prototype.constructor %TypedArray%.prototype.constructor</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.copywithin\"><h1><span class=\"secnum\">22.2.3.5</span>#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.entries\"><h1><span class=\"secnum\">22.2.3.6</span>#sec-%typedarray%.prototype.entries %TypedArray%.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.every\"><h1><span class=\"secnum\">22.2.3.7</span>#sec-%typedarray%.prototype.every %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.fill\"><h1><span class=\"secnum\">22.2.3.8</span>#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.filter\"><h1><span class=\"secnum\">22.2.3.9</span>#sec-%typedarray%.prototype.filter %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.find\"><h1><span class=\"secnum\">22.2.3.10</span>#sec-%typedarray%.prototype.find %TypedArray%.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.findindex\"><h1><span class=\"secnum\">22.2.3.11</span>#sec-%typedarray%.prototype.findindex %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.foreach\"><h1><span class=\"secnum\">22.2.3.12</span>#sec-%typedarray%.prototype.foreach %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.includes\"><h1><span class=\"secnum\">22.2.3.13</span>#sec-%typedarray%.prototype.includes %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.indexof\"><h1><span class=\"secnum\">22.2.3.14</span>#sec-%typedarray%.prototype.indexof %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.join\"><h1><span class=\"secnum\">22.2.3.15</span>#sec-%typedarray%.prototype.join %TypedArray%.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.keys\"><h1><span class=\"secnum\">22.2.3.16</span>#sec-%typedarray%.prototype.keys %TypedArray%.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.lastindexof\"><h1><span class=\"secnum\">22.2.3.17</span>#sec-%typedarray%.prototype.lastindexof %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.length\"><h1><span class=\"secnum\">22.2.3.18</span>#sec-get-%typedarray%.prototype.length get %TypedArray%.prototype.length</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.map\"><h1><span class=\"secnum\">22.2.3.19</span>#sec-%typedarray%.prototype.map %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduce\"><h1><span class=\"secnum\">22.2.3.20</span>#sec-%typedarray%.prototype.reduce %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduceright\"><h1><span class=\"secnum\">22.2.3.21</span>#sec-%typedarray%.prototype.reduceright %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reverse\"><h1><span class=\"secnum\">22.2.3.22</span>#sec-%typedarray%.prototype.reverse %TypedArray%.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set\"><h1><span class=\"secnum\">22.2.3.23</span>#sec-%typedarray%.prototype.set %TypedArray%.prototype.set ( source [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.slice\"><h1><span class=\"secnum\">22.2.3.24</span>#sec-%typedarray%.prototype.slice %TypedArray%.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.some\"><h1><span class=\"secnum\">22.2.3.25</span>#sec-%typedarray%.prototype.some %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.sort\"><h1><span class=\"secnum\">22.2.3.26</span>#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.subarray\"><h1><span class=\"secnum\">22.2.3.27</span>#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tolocalestring\"><h1><span class=\"secnum\">22.2.3.28</span>#sec-%typedarray%.prototype.tolocalestring %TypedArray%.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tostring\"><h1><span class=\"secnum\">22.2.3.29</span>#sec-%typedarray%.prototype.tostring %TypedArray%.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.values\"><h1><span class=\"secnum\">22.2.3.30</span>#sec-%typedarray%.prototype.values %TypedArray%.prototype.values ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype-@@iterator\"><h1><span class=\"secnum\">22.2.3.31</span>#sec-%typedarray%.prototype-@@iterator %TypedArray%.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype-@@tostringtag\"><h1><span class=\"secnum\">22.2.3.32</span>#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}}