{"from": {"secList": ["sec-number-constructor", "sec-regexp-constructor", "sec-aggregate-error-constructor", "sec-promise-constructor", "sec-finalization-registry-constructor", "sec-set-constructor", "sec-map-constructor", "sec-error-constructor", "sec-nativeerror-constructors", "sec-object-constructor", "sec-weakmap-constructor", "sec-async-function-constructor", "sec-generatorfunction-constructor", "sec-arraybuffer-constructor", "sec-function-constructor", "sec-array-constructor", "sec-typedarray-constructors", "sec-string-constructor", "sec-weakset-constructor", "sec-weak-ref-constructor", "sec-date-constructor", "sec-sharedarraybuffer-constructor", "sec-asyncgeneratorfunction-constructor", "sec-dataview-constructor", "sec-boolean-constructor"], "secData": {"sec-number-constructor": {"num": "21.1.1", "title": "#sec-number-constructor The Number Constructor", "html": "<emu-clause id=\"sec-number-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</span> The Number Constructor</h1>\n      <p>The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Number%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Number\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Number object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Number behaviour must include a <code>super</code> call to the Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[NumberData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-number-constructor-number-value\"><h1><span class=\"secnum\">21.1.1.1</span>#sec-number-constructor-number-value Number ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-regexp-constructor": {"num": "22.2.3", "title": "#sec-regexp-constructor The RegExp Constructor", "html": "<emu-clause id=\"sec-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</span> The RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%RegExp%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"RegExp\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new RegExp object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>RegExp(&#8230;)</code> is equivalent to the object creation expression <code>new RegExp(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified RegExp behaviour must include a <code>super</code> call to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the necessary internal slots.</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp-pattern-flags\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-regexp-pattern-flags RegExp ( pattern, flags )</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-regexp-constructor\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-abstract-operations-for-the-regexp-constructor Abstract Operations for the RegExp Constructor</h1>...</div></emu-clause>\n\n    "}, "sec-aggregate-error-constructor": {"num": "20.5.7.1", "title": "#sec-aggregate-error-constructor The AggregateError Constructor", "html": "<emu-clause id=\"sec-aggregate-error-constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</span> The AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>is <dfn>%AggregateError%</dfn>.</li>\n          <li>is the initial value of the <emu-val>\"AggregateError\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n          <li>creates and initializes a new AggregateError object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AggregateError(&#8230;)</code> is equivalent to the object creation expression <code>new AggregateError(&#8230;)</code> with the same arguments.</li>\n          <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AggregateError behaviour must include a <code>super</code> call to the AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error\"><h1><span class=\"secnum\">20.5.7.1.1</span>#sec-aggregate-error AggregateError ( errors, message )</h1>...</div></emu-clause>\n\n      "}, "sec-promise-constructor": {"num": "27.2.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">27.2.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-finalization-registry-constructor": {"num": "26.2.1", "title": "#sec-finalization-registry-constructor The FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</span> The FinalizationRegistry Constructor</h1>\n      <p>The <dfn>FinalizationRegistry</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%FinalizationRegistry%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"FinalizationRegistry\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new FinalizationRegistry object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>FinalizationRegistry</code> behaviour must include a <code>super</code> call to the <code>FinalizationRegistry</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>FinalizationRegistry.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry-cleanup-callback\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-finalization-registry-cleanup-callback FinalizationRegistry ( cleanupCallback )</h1>...</div></emu-clause>\n\n    "}, "sec-set-constructor": {"num": "24.2.1", "title": "#sec-set-constructor The Set Constructor", "html": "<emu-clause id=\"sec-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</span> The Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Set%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Set\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Set object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Set behaviour must include a <code>super</code> call to the Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Set.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set-iterable\"><h1><span class=\"secnum\">24.2.1.1</span>#sec-set-iterable Set ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-map-constructor": {"num": "24.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Map\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Map behaviour must include a <code>super</code> call to the Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">24.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">24.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-error-constructor": {"num": "20.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Error\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Error behaviour must include a <code>super</code> call to the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">20.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-nativeerror-constructors": {"num": "20.5.6.1", "title": "#sec-nativeerror-constructors The NativeError Constructors", "html": "<emu-clause id=\"sec-nativeerror-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror-constructors\">#sec-nativeerror-constructors</span> The <var>NativeError</var> Constructors</h1>\n        <p>Each <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>creates and initializes a new <var>NativeError</var> object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. A call of the object as a function is equivalent to calling it as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the same arguments. Thus the function call <code><var>NativeError</var>(&#8230;)</code> is equivalent to the object creation expression <code>new <var>NativeError</var>(&#8230;)</code> with the same arguments.</li>\n          <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>NativeError</var> behaviour must include a <code>super</code> call to the <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror\"><h1><span class=\"secnum\">20.5.6.1.1</span>#sec-nativeerror NativeError ( message )</h1>...</div></emu-clause>\n\n      "}, "sec-object-constructor": {"num": "20.1.1", "title": "#sec-object-constructor The Object Constructor", "html": "<emu-clause id=\"sec-object-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</span> The Object Constructor</h1>\n      <p>The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Object%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Object\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates a new <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition.</li>\n      </ul>\n\n      <div id=\"excluded-sec-object-value\"><h1><span class=\"secnum\">20.1.1.1</span>#sec-object-value Object ( [ value ] )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "24.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakMap\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified WeakMap behaviour must include a <code>super</code> call to the WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">24.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-async-function-constructor": {"num": "27.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour. All ECMAScript syntactic forms for defining async function objects create direct instances of AsyncFunction. There is no syntactic means to create instances of AsyncFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">27.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-constructor": {"num": "27.3.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of GeneratorFunction. There is no syntactic means to create instances of GeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">27.3.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-arraybuffer-constructor": {"num": "25.1.3", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"ArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified ArrayBuffer behaviour must include a <code>super</code> call to the ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-function-constructor": {"num": "20.2.1", "title": "#sec-function-constructor The Function Constructor", "html": "<emu-clause id=\"sec-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</span> The Function Constructor</h1>\n      <p>The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Function%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Function\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Function(&#8230;)</code> is equivalent to the object creation expression <code>new Function(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Function behaviour must include a <code>super</code> call to the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in function behaviour. All ECMAScript syntactic forms for defining function objects create instances of Function. There is no syntactic means to create instances of Function subclasses except for the built-in GeneratorFunction, AsyncFunction, and AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-function-p1-p2-pn-body\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-function-p1-p2-pn-body Function ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "23.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>1</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-array Array ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray-constructors": {"num": "23.2.5", "title": "#sec-typedarray-constructors The TypedArray Constructors", "html": "<emu-clause id=\"sec-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-constructors\">#sec-typedarray-constructors</span> The <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is an intrinsic object that has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>TypedArray</var>, in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments. The actual behaviour of a call of <var>TypedArray</var> depends upon the number and kind of arguments that are passed to it.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>TypedArray</var> behaviour must include a <code>super</code> call to the <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype</code> built-in methods.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>3</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray\"><h1><span class=\"secnum\">23.2.5.1</span>#sec-typedarray TypedArray ( ...args )</h1>...</div></emu-clause>\n\n    "}, "sec-string-constructor": {"num": "22.1.1", "title": "#sec-string-constructor The String Constructor", "html": "<emu-clause id=\"sec-string-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</span> The String Constructor</h1>\n      <p>The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%String%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"String\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new String object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified String behaviour must include a <code>super</code> call to the String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[StringData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-string-constructor-string-value\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-string-constructor-string-value String ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-weakset-constructor": {"num": "24.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakSet\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified WeakSet behaviour must include a <code>super</code> call to the WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-weak-ref-constructor": {"num": "26.1.1", "title": "#sec-weak-ref-constructor The WeakRef Constructor", "html": "<emu-clause id=\"sec-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</span> The WeakRef Constructor</h1>\n      <p>The <dfn>WeakRef</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakRef%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"WeakRef\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new WeakRef object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakRef</code> behaviour must include a <code>super</code> call to the <code>WeakRef</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakRef.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref-target\"><h1><span class=\"secnum\">26.1.1.1</span>#sec-weak-ref-target WeakRef ( target )</h1>...</div></emu-clause>\n\n    "}, "sec-date-constructor": {"num": "21.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>7</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date\"><h1><span class=\"secnum\">21.4.2.1</span>#sec-date Date ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-sharedarraybuffer-constructor": {"num": "25.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, if that property is present (see below).</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <p>Whenever a <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> does not provide concurrent access to SharedArrayBuffer objects it may omit the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-constructor": {"num": "27.4.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of AsyncGeneratorFunction. There is no syntactic means to create instances of AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">27.4.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-dataview-constructor": {"num": "25.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"DataView\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified DataView behaviour must include a <code>super</code> call to the DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-boolean-constructor": {"num": "20.3.1", "title": "#sec-boolean-constructor The Boolean Constructor", "html": "<emu-clause id=\"sec-boolean-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</span> The Boolean Constructor</h1>\n      <p>The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Boolean%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Boolean\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Boolean object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Boolean behaviour must include a <code>super</code> call to the Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[BooleanData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-boolean-constructor-boolean-value\"><h1><span class=\"secnum\">20.3.1.1</span>#sec-boolean-constructor-boolean-value Boolean ( value )</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-the-typedarray-constructors": "Table 61"}}, "to": {"secList": ["sec-number-constructor", "sec-regexp-constructor", "sec-aggregate-error-constructor", "sec-promise-constructor", "sec-finalization-registry-constructor", "sec-set-constructor", "sec-map-constructor", "sec-error-constructor", "sec-nativeerror-constructors", "sec-object-constructor", "sec-weakmap-constructor", "sec-async-function-constructor", "sec-generatorfunction-constructor", "sec-arraybuffer-constructor", "sec-function-constructor", "sec-array-constructor", "sec-typedarray-constructors", "sec-string-constructor", "sec-weakset-constructor", "sec-weak-ref-constructor", "sec-date-constructor", "sec-sharedarraybuffer-constructor", "sec-asyncgeneratorfunction-constructor", "sec-dataview-constructor", "sec-boolean-constructor"], "secData": {"sec-number-constructor": {"num": "21.1.1", "title": "#sec-number-constructor The Number Constructor", "html": "<emu-clause id=\"sec-number-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</span> The Number Constructor</h1>\n      <p>The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Number%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Number\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Number object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Number behaviour must include a <code>super</code> call to the Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[NumberData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-number-constructor-number-value\"><h1><span class=\"secnum\">21.1.1.1</span>#sec-number-constructor-number-value Number ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-regexp-constructor": {"num": "22.2.3", "title": "#sec-regexp-constructor The RegExp Constructor", "html": "<emu-clause id=\"sec-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</span> The RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%RegExp%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"RegExp\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new RegExp object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>RegExp(&#8230;)</code> is equivalent to the object creation expression <code>new RegExp(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified RegExp behaviour must include a <code>super</code> call to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the necessary internal slots.</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp-pattern-flags\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-regexp-pattern-flags RegExp ( pattern, flags )</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-regexp-constructor\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-abstract-operations-for-the-regexp-constructor Abstract Operations for the RegExp Constructor</h1>...</div></emu-clause>\n\n    "}, "sec-aggregate-error-constructor": {"num": "20.5.7.1", "title": "#sec-aggregate-error-constructor The AggregateError Constructor", "html": "<emu-clause id=\"sec-aggregate-error-constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</span> The AggregateError Constructor</h1>\n        <p>The AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>is <dfn>%AggregateError%</dfn>.</li>\n          <li>is the initial value of the <emu-val>\"AggregateError\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n          <li>creates and initializes a new AggregateError object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AggregateError(&#8230;)</code> is equivalent to the object creation expression <code>new AggregateError(&#8230;)</code> with the same arguments.</li>\n          <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AggregateError behaviour must include a <code>super</code> call to the AggregateError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-aggregate-error\"><h1><span class=\"secnum\">20.5.7.1.1</span>#sec-aggregate-error AggregateError ( errors, message )</h1>...</div></emu-clause>\n\n      "}, "sec-promise-constructor": {"num": "27.2.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">27.2.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-finalization-registry-constructor": {"num": "26.2.1", "title": "#sec-finalization-registry-constructor The FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</span> The FinalizationRegistry Constructor</h1>\n      <p>The <dfn>FinalizationRegistry</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%FinalizationRegistry%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"FinalizationRegistry\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new FinalizationRegistry object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>FinalizationRegistry</code> behaviour must include a <code>super</code> call to the <code>FinalizationRegistry</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>FinalizationRegistry.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry-cleanup-callback\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-finalization-registry-cleanup-callback FinalizationRegistry ( cleanupCallback )</h1>...</div></emu-clause>\n\n    "}, "sec-set-constructor": {"num": "24.2.1", "title": "#sec-set-constructor The Set Constructor", "html": "<emu-clause id=\"sec-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</span> The Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Set%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Set\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Set object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Set behaviour must include a <code>super</code> call to the Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Set.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set-iterable\"><h1><span class=\"secnum\">24.2.1.1</span>#sec-set-iterable Set ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-map-constructor": {"num": "24.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Map\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Map behaviour must include a <code>super</code> call to the Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">24.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">24.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-error-constructor": {"num": "20.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Error\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Error behaviour must include a <code>super</code> call to the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">20.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-nativeerror-constructors": {"num": "20.5.6.1", "title": "#sec-nativeerror-constructors The NativeError Constructors", "html": "<emu-clause id=\"sec-nativeerror-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror-constructors\">#sec-nativeerror-constructors</span> The <var>NativeError</var> Constructors</h1>\n        <p>Each <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>creates and initializes a new <var>NativeError</var> object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. A call of the object as a function is equivalent to calling it as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the same arguments. Thus the function call <code><var>NativeError</var>(&#8230;)</code> is equivalent to the object creation expression <code>new <var>NativeError</var>(&#8230;)</code> with the same arguments.</li>\n          <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>NativeError</var> behaviour must include a <code>super</code> call to the <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror\"><h1><span class=\"secnum\">20.5.6.1.1</span>#sec-nativeerror NativeError ( message )</h1>...</div></emu-clause>\n\n      "}, "sec-object-constructor": {"num": "20.1.1", "title": "#sec-object-constructor The Object Constructor", "html": "<emu-clause id=\"sec-object-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</span> The Object Constructor</h1>\n      <p>The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Object%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Object\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates a new <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition.</li>\n      </ul>\n\n      <div id=\"excluded-sec-object-value\"><h1><span class=\"secnum\">20.1.1.1</span>#sec-object-value Object ( [ value ] )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "24.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakMap\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified WeakMap behaviour must include a <code>super</code> call to the WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">24.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-async-function-constructor": {"num": "27.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour. All ECMAScript syntactic forms for defining async function objects create direct instances of AsyncFunction. There is no syntactic means to create instances of AsyncFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">27.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-constructor": {"num": "27.3.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of GeneratorFunction. There is no syntactic means to create instances of GeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">27.3.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-arraybuffer-constructor": {"num": "25.1.3", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"ArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified ArrayBuffer behaviour must include a <code>super</code> call to the ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-function-constructor": {"num": "20.2.1", "title": "#sec-function-constructor The Function Constructor", "html": "<emu-clause id=\"sec-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</span> The Function Constructor</h1>\n      <p>The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Function%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Function\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Function(&#8230;)</code> is equivalent to the object creation expression <code>new Function(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Function behaviour must include a <code>super</code> call to the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in function behaviour. All ECMAScript syntactic forms for defining function objects create instances of Function. There is no syntactic means to create instances of Function subclasses except for the built-in GeneratorFunction, AsyncFunction, and AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-function-p1-p2-pn-body\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-function-p1-p2-pn-body Function ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "23.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>1</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-array Array ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray-constructors": {"num": "23.2.5", "title": "#sec-typedarray-constructors The TypedArray Constructors", "html": "<emu-clause id=\"sec-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-constructors\">#sec-typedarray-constructors</span> The <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is an intrinsic object that has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>TypedArray</var>, in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments. The actual behaviour of a call of <var>TypedArray</var> depends upon the number and kind of arguments that are passed to it.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>TypedArray</var> behaviour must include a <code>super</code> call to the <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype</code> built-in methods.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>3</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray\"><h1><span class=\"secnum\">23.2.5.1</span>#sec-typedarray TypedArray ( ...args )</h1>...</div></emu-clause>\n\n    "}, "sec-string-constructor": {"num": "22.1.1", "title": "#sec-string-constructor The String Constructor", "html": "<emu-clause id=\"sec-string-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</span> The String Constructor</h1>\n      <p>The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%String%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"String\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new String object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified String behaviour must include a <code>super</code> call to the String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[StringData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-string-constructor-string-value\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-string-constructor-string-value String ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-weakset-constructor": {"num": "24.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakSet\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified WeakSet behaviour must include a <code>super</code> call to the WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-weak-ref-constructor": {"num": "26.1.1", "title": "#sec-weak-ref-constructor The WeakRef Constructor", "html": "<emu-clause id=\"sec-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</span> The WeakRef Constructor</h1>\n      <p>The <dfn>WeakRef</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakRef%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"WeakRef\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new WeakRef object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakRef</code> behaviour must include a <code>super</code> call to the <code>WeakRef</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakRef.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref-target\"><h1><span class=\"secnum\">26.1.1.1</span>#sec-weak-ref-target WeakRef ( target )</h1>...</div></emu-clause>\n\n    "}, "sec-date-constructor": {"num": "21.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>7</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date\"><h1><span class=\"secnum\">21.4.2.1</span>#sec-date Date ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-sharedarraybuffer-constructor": {"num": "25.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, if that property is present (see below).</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <p>Whenever a <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> does not provide concurrent access to SharedArrayBuffer objects it may omit the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-constructor": {"num": "27.4.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of AsyncGeneratorFunction. There is no syntactic means to create instances of AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">27.4.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-dataview-constructor": {"num": "25.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"DataView\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified DataView behaviour must include a <code>super</code> call to the DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-boolean-constructor": {"num": "20.3.1", "title": "#sec-boolean-constructor The Boolean Constructor", "html": "<emu-clause id=\"sec-boolean-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</span> The Boolean Constructor</h1>\n      <p>The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Boolean%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Boolean\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Boolean object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Boolean behaviour must include a <code>super</code> call to the Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[BooleanData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-boolean-constructor-boolean-value\"><h1><span class=\"secnum\">20.3.1.1</span>#sec-boolean-constructor-boolean-value Boolean ( value )</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-the-typedarray-constructors": "Table 61"}}}