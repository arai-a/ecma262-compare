{"from": {"secList": ["sec-declarative-environment-records-createmutablebinding-n-d", "sec-createimportbinding", "sec-declarative-environment-records-createimmutablebinding-n-s", "sec-newmoduleenvironment", "sec-declarative-environment-records-initializebinding-n-v", "sec-declarative-environment-records", "sec-newdeclarativeenvironment", "sec-module-environment-records-getbindingvalue-n-s", "sec-module-environment-records", "sec-newglobalenvironment", "sec-declarative-environment-records-setmutablebinding-n-v-s", "sec-declarative-environment-records-getbindingvalue-n-s", "sec-declarative-environment-records-hasbinding-n", "sec-newfunctionenvironment", "sec-declarative-environment-records-deletebinding-n", "sec-web-compat-blockdeclarationinstantiation"], "secData": {"sec-declarative-environment-records-createmutablebinding-n-d": {"num": "9.1.1.1.2", "title": "#sec-declarative-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-declarative-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createmutablebinding-n-d\">#sec-declarative-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates a new mutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>D</var> has the value <emu-val>true</emu-val>, the new binding is marked as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li>Create a mutable binding in <var>envRec</var> for <var>N</var> and record that it is uninitialized. If <var>D</var> is <emu-val>true</emu-val>, record that the newly created binding may be deleted by a subsequent DeleteBinding call.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createimportbinding": {"num": "9.1.1.5.5", "title": "#sec-createimportbinding CreateImportBinding ( N, M, N2 )", "html": "<emu-clause id=\"sec-createimportbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createimportbinding\">#sec-createimportbinding</span> CreateImportBinding ( <var>N</var>, <var>M</var>, <var>N2</var> )</h1>\n          <p>The CreateImportBinding concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>M</var> (a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>), and <var>N2</var> (a String). It creates a new initialized immutable indirect binding for the name <var>N</var>. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. <var>N2</var> is the name of a binding that exists in <var>M</var>'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>. Accesses to the value of the new binding will indirectly access the bound value of the target binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When <var>M</var>.[[Environment]] is instantiated it will have a direct binding for <var>N2</var>.</li><li>Create an immutable indirect binding in <var>envRec</var> for <var>N</var> that references <var>M</var> and <var>N2</var> as its target binding and record that the binding is initialized.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-declarative-environment-records-createimmutablebinding-n-s": {"num": "9.1.1.1.3", "title": "#sec-declarative-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">#sec-declarative-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The CreateImmutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It creates a new immutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>S</var> has the value <emu-val>true</emu-val>, the new binding is marked as a strict binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li>Create an immutable binding in <var>envRec</var> for <var>N</var> and record that it is uninitialized. If <var>S</var> is <emu-val>true</emu-val>, record that the newly created binding is a strict binding.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newmoduleenvironment": {"num": "9.1.2.6", "title": "#sec-newmoduleenvironment NewModuleEnvironment ( E )", "html": "<emu-clause id=\"sec-newmoduleenvironment\" aoid=\"NewModuleEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newmoduleenvironment\">#sec-newmoduleenvironment</span> NewModuleEnvironment ( <var>E</var> )</h1>\n        <p>The abstract operation NewModuleEnvironment takes argument <var>E</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be a new <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> containing no bindings.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>E</var>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-declarative-environment-records-initializebinding-n-v": {"num": "9.1.1.1.4", "title": "#sec-declarative-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-declarative-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-initializebinding-n-v\">#sec-declarative-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The InitializeBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> must have an uninitialized binding for <var>N</var>.</li><li>Set the bound value for <var>N</var> in <var>envRec</var> to <var>V</var>.</li><li><emu-not-ref>Record</emu-not-ref> that the binding for <var>N</var> in <var>envRec</var> has been initialized.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records": {"num": "9.1.1.1", "title": "#sec-declarative-environment-records Declarative Environment Records", "html": "<emu-clause id=\"sec-declarative-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records\">#sec-declarative-environment-records</span> Declarative Environment Records</h1>\n        <p>Each <dfn variants=\"declarative Environment Records\">declarative Environment Record</dfn> is associated with an ECMAScript program scope containing variable, constant, let, class, module, import, and/or function declarations. A declarative Environment Record binds the set of identifiers defined by the declarations contained within its scope.</p>\n        <p>The behaviour of the concrete specification methods for declarative Environment Records is defined by the following algorithms.</p>\n\n        <div id=\"excluded-sec-declarative-environment-records-hasbinding-n\"><h1><span class=\"secnum\">9.1.1.1.1</span>#sec-declarative-environment-records-hasbinding-n HasBinding ( N )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-createmutablebinding-n-d\"><h1><span class=\"secnum\">9.1.1.1.2</span>#sec-declarative-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-createimmutablebinding-n-s\"><h1><span class=\"secnum\">9.1.1.1.3</span>#sec-declarative-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-initializebinding-n-v\"><h1><span class=\"secnum\">9.1.1.1.4</span>#sec-declarative-environment-records-initializebinding-n-v InitializeBinding ( N, V )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-setmutablebinding-n-v-s\"><h1><span class=\"secnum\">9.1.1.1.5</span>#sec-declarative-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.1.6</span>#sec-declarative-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.1.7</span>#sec-declarative-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.1.8</span>#sec-declarative-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-hassuperbinding\"><h1><span class=\"secnum\">9.1.1.1.9</span>#sec-declarative-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-withbaseobject\"><h1><span class=\"secnum\">9.1.1.1.10</span>#sec-declarative-environment-records-withbaseobject WithBaseObject ( )</h1>...</div></emu-clause>\n\n      "}, "sec-newdeclarativeenvironment": {"num": "9.1.2.2", "title": "#sec-newdeclarativeenvironment NewDeclarativeEnvironment ( E )", "html": "<emu-clause id=\"sec-newdeclarativeenvironment\" aoid=\"NewDeclarativeEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newdeclarativeenvironment\">#sec-newdeclarativeenvironment</span> NewDeclarativeEnvironment ( <var>E</var> )</h1>\n        <p>The abstract operation NewDeclarativeEnvironment takes argument <var>E</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> containing no bindings.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>E</var>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-environment-records-getbindingvalue-n-s": {"num": "9.1.1.5.1", "title": "#sec-module-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-module-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-getbindingvalue-n-s\">#sec-module-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. However, if the binding is an indirect binding the value of the target binding is returned. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>S</var> is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for <var>N</var>.</li><li>If the binding for <var>N</var> is an indirect binding, then<ol><li>Let <var>M</var> and <var>N2</var> be the indirection values provided when this binding for <var>N</var> was created.</li><li>Let <var>targetEnv</var> be <var>M</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-const>empty</emu-const>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>N2</var>, <emu-val>true</emu-val>).</li></ol></li><li>If the binding for <var>N</var> in <var>envRec</var> is an uninitialized binding, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return the value currently bound to <var>N</var> in <var>envRec</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p><var>S</var> will always be <emu-val>true</emu-val> because a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is always <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-module-environment-records": {"num": "9.1.1.5", "title": "#sec-module-environment-records Module Environment Records", "html": "<emu-clause id=\"sec-module-environment-records\" oldids=\"module-environment\"><span id=\"module-environment\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records\">#sec-module-environment-records</span> Module Environment Records</h1>\n        <p>A <dfn variants=\"module Environment Records\">module Environment Record</dfn> is a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> that is used to represent the outer scope of an ECMAScript <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. In additional to normal mutable and immutable bindings, module Environment Records also provide immutable import bindings which are bindings that provide indirect access to a target binding that exists in another <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</p>\n        <p>Module Environment Records support all of the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> methods listed in <emu-xref href=\"#table-abstract-methods-of-environment-records\"><a href=\"#table-abstract-methods-of-environment-records\" class=\"excluded-xref\" excluded-id=\"table-abstract-methods-of-environment-records\">#table-abstract-methods-of-environment-records</a></emu-xref> and share the same specifications for all of those methods except for GetBindingValue, DeleteBinding, HasThisBinding and GetThisBinding. In addition, module Environment Records support the methods listed in <emu-xref href=\"#table-additional-methods-of-module-environment-records\"><a href=\"#table-additional-methods-of-module-environment-records\" class=\"excluded-xref\" excluded-id=\"table-additional-methods-of-module-environment-records\">#table-additional-methods-of-module-environment-records</a></emu-xref>:</p>\n        <emu-table id=\"table-additional-methods-of-module-environment-records\" caption=\"Additional Methods of Module Environment Records\" oldids=\"table-20\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-methods-of-module-environment-records\">#table-additional-methods-of-module-environment-records</span>: Additional Methods of <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">Module Environment Records</a></emu-xref></figcaption><span id=\"table-20\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              </th>\n              <th>\n                Purpose\n              </th>\n            </tr>\n            <tr>\n              <td>\n                CreateImportBinding(N, M, N2)\n              </td>\n              <td>\n                Create an immutable indirect binding in a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>. The String value <var>N</var> is the text of the bound name. <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, and <var>N2</var> is a binding that exists in <var>M</var>'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                GetThisBinding()\n              </td>\n              <td>\n                Return the value of this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s <code>this</code> binding.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>The behaviour of the additional concrete specification methods for module Environment Records are defined by the following algorithms:</p>\n\n        <div id=\"excluded-sec-module-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.5.1</span>#sec-module-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-module-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.5.2</span>#sec-module-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-module-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.5.3</span>#sec-module-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-module-environment-records-getthisbinding\"><h1><span class=\"secnum\">9.1.1.5.4</span>#sec-module-environment-records-getthisbinding GetThisBinding ( )</h1>...</div><div id=\"excluded-sec-createimportbinding\"><h1><span class=\"secnum\">9.1.1.5.5</span>#sec-createimportbinding CreateImportBinding ( N, M, N2 )</h1>...</div></emu-clause>\n    "}, "sec-newglobalenvironment": {"num": "9.1.2.5", "title": "#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )", "html": "<emu-clause id=\"sec-newglobalenvironment\" aoid=\"NewGlobalEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newglobalenvironment\">#sec-newglobalenvironment</span> NewGlobalEnvironment ( <var>G</var>, <var>thisValue</var> )</h1>\n        <p>The abstract operation NewGlobalEnvironment takes arguments <var>G</var> and <var>thisValue</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>objRec</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>G</var>, <emu-val>false</emu-val>, <emu-val>null</emu-val>).</li><li>Let <var>dclRec</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> containing no bindings.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[ObjectRecord]] to <var>objRec</var>.</li><li>Set <var>env</var>.[[GlobalThisValue]] to <var>thisValue</var>.</li><li>Set <var>env</var>.[[DeclarativeRecord]] to <var>dclRec</var>.</li><li>Set <var>env</var>.[[VarNames]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>env</var>.[[OuterEnv]] to <emu-val>null</emu-val>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-declarative-environment-records-setmutablebinding-n-v-s": {"num": "9.1.1.1.5", "title": "#sec-declarative-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">#sec-declarative-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to change the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A binding for <var>N</var> normally already exists, but in rare cases it may not. If the binding is an immutable binding, a <emu-val>TypeError</emu-val> is thrown if <var>S</var> is <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li id=\"step-setmutablebinding-missing-binding\">If <var>envRec</var> does not have a binding for <var>N</var>, then<ol><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Perform <var>envRec</var>.CreateMutableBinding(<var>N</var>, <emu-val>true</emu-val>).</li><li>Perform <var>envRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></li><li>If the binding for <var>N</var> in <var>envRec</var> is a strict binding, set <var>S</var> to <emu-val>true</emu-val>.</li><li>If the binding for <var>N</var> in <var>envRec</var> has not yet been initialized, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Else if the binding for <var>N</var> in <var>envRec</var> is a mutable binding, change its bound value to <var>V</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is an attempt to change the value of an immutable binding.</li><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>An example of ECMAScript code that results in a missing binding at step <emu-xref href=\"#step-setmutablebinding-missing-binding\"><a href=\"#step-setmutablebinding-missing-binding\" class=\"excluded-xref\" excluded-id=\"step-setmutablebinding-missing-binding\">#step-setmutablebinding-missing-binding</a></emu-xref> is:</p>\n            <pre><code class=\"javascript hljs\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">f</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-built_in\">eval</span>(<span class=\"hljs-string\">\"var x; x = (delete x, 0);\"</span>); }</code></pre>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-getbindingvalue-n-s": {"num": "9.1.1.1.6", "title": "#sec-declarative-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-getbindingvalue-n-s\">#sec-declarative-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown, regardless of the value of <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for <var>N</var>.</li><li>If the binding for <var>N</var> in <var>envRec</var> is an uninitialized binding, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return the value currently bound to <var>N</var> in <var>envRec</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hasbinding-n": {"num": "9.1.1.1.1", "title": "#sec-declarative-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hasbinding-n\">#sec-declarative-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is one of the identifiers bound by the record. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>envRec</var> has a binding for the name that is the value of <var>N</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newfunctionenvironment": {"num": "9.1.2.4", "title": "#sec-newfunctionenvironment NewFunctionEnvironment ( F, newTarget )", "html": "<emu-clause id=\"sec-newfunctionenvironment\" aoid=\"NewFunctionEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newfunctionenvironment\">#sec-newfunctionenvironment</span> NewFunctionEnvironment ( <var>F</var>, <var>newTarget</var> )</h1>\n        <p>The abstract operation NewFunctionEnvironment takes arguments <var>F</var> and <var>newTarget</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript function.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newTarget</var>) is Undefined or Object.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> containing no bindings.</li><li>Set <var>env</var>.[[FunctionObject]] to <var>F</var>.</li><li>If <var>F</var>.[[ThisMode]] is <emu-const>lexical</emu-const>, set <var>env</var>.[[ThisBindingStatus]] to <emu-const>lexical</emu-const>.</li><li>Else, set <var>env</var>.[[ThisBindingStatus]] to <emu-const>uninitialized</emu-const>.</li><li>Set <var>env</var>.[[NewTarget]] to <var>newTarget</var>.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>F</var>.[[Environment]].</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-declarative-environment-records-deletebinding-n": {"num": "9.1.1.1.7", "title": "#sec-declarative-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-deletebinding-n\">#sec-declarative-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that have been explicitly designated as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for the name that is the value of <var>N</var>.</li><li>If the binding for <var>N</var> in <var>envRec</var> cannot be deleted, return <emu-val>false</emu-val>.</li><li>Remove the binding for <var>N</var> from <var>envRec</var>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-web-compat-blockdeclarationinstantiation": {"num": "B.3.2.6", "title": "#sec-web-compat-blockdeclarationinstantiation Changes to BlockDeclarationInstantiation", "html": "<emu-annex id=\"sec-web-compat-blockdeclarationinstantiation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-web-compat-blockdeclarationinstantiation\">#sec-web-compat-blockdeclarationinstantiation</span> Changes to BlockDeclarationInstantiation</h1>\n        <p>During <emu-xref aoid=\"BlockDeclarationInstantiation\"><a href=\"#sec-blockdeclarationinstantiation\">BlockDeclarationInstantiation</a></emu-xref> the following steps are performed in place of step <emu-xref href=\"#step-blockdeclarationinstantiation-createmutablebinding\"><a href=\"#step-blockdeclarationinstantiation-createmutablebinding\">4.a.ii.1</a></emu-xref>:</p>\n        <emu-alg replaces-step=\"step-blockdeclarationinstantiation-createmutablebinding\"><ol start=\"1\" class=\"nested-thrice\"><li>If <var>env</var>.HasBinding(<var>dn</var>) is <emu-val>false</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li></ol></li></ol></emu-alg>\n        <p>During <emu-xref aoid=\"BlockDeclarationInstantiation\"><a href=\"#sec-blockdeclarationinstantiation\">BlockDeclarationInstantiation</a></emu-xref> the following steps are performed in place of step <emu-xref href=\"#step-blockdeclarationinstantiation-initializebinding\"><a href=\"#step-blockdeclarationinstantiation-initializebinding\">4.b.iii</a></emu-xref>:</p>\n        <emu-alg replaces-step=\"step-blockdeclarationinstantiation-initializebinding\"><ol start=\"3\" class=\"nested-twice\"><li>If the binding for <var>fn</var> in <var>env</var> is an uninitialized binding, then<ol><li>Perform <var>env</var>.InitializeBinding(<var>fn</var>, <var>fo</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>d</var> is a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>.</li><li>Perform <var>env</var>.SetMutableBinding(<var>fn</var>, <var>fo</var>, <emu-val>false</emu-val>).</li></ol></li></ol></emu-alg>\n      </emu-annex>\n    "}}, "figData": {"table-abstract-methods-of-environment-records": "Table 19", "table-additional-methods-of-module-environment-records": "Table 25"}}, "to": {"secList": ["sec-declarative-environment-records-createmutablebinding-n-d", "sec-createimportbinding", "sec-declarative-environment-records-createimmutablebinding-n-s", "sec-newmoduleenvironment", "sec-declarative-environment-records-initializebinding-n-v", "sec-declarative-environment-records", "sec-newdeclarativeenvironment", "sec-module-environment-records-getbindingvalue-n-s", "sec-module-environment-records", "sec-newglobalenvironment", "sec-declarative-environment-records-setmutablebinding-n-v-s", "sec-declarative-environment-records-getbindingvalue-n-s", "sec-declarative-environment-records-hasbinding-n", "sec-newfunctionenvironment", "sec-declarative-environment-records-deletebinding-n", "sec-web-compat-blockdeclarationinstantiation"], "secData": {"sec-declarative-environment-records-createmutablebinding-n-d": {"num": "9.1.1.1.2", "title": "#sec-declarative-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-declarative-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createmutablebinding-n-d\">#sec-declarative-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates a new mutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>D</var> has the value <emu-val>true</emu-val>, the new binding is marked as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>false</emu-val>.</li><li>Let <var>binding</var> be <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> { [[BoundName]]: <var>N</var>, [[IsInitialized]]: <emu-val>false</emu-val>, [[BoundValue]]: <emu-val>undefined</emu-val>, [[IsMutable]]: <emu-val>true</emu-val>, [[IsDeletable]]: <var>D</var>, [[IsStrict]]: <emu-val>false</emu-val> }.</li><li>Append <var>binding</var> to <var>envRec</var>.[[Bindings]].</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createimportbinding": {"num": "9.1.1.5.5", "title": "#sec-createimportbinding CreateImportBinding ( N, M, N2 )", "html": "<emu-clause id=\"sec-createimportbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createimportbinding\">#sec-createimportbinding</span> CreateImportBinding ( <var>N</var>, <var>M</var>, <var>N2</var> )</h1>\n          <p>The CreateImportBinding concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>M</var> (a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>), and <var>N2</var> (a String). It creates a new initialized immutable indirect binding for the name <var>N</var>. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. <var>N2</var> is the name of a binding that exists in <var>M</var>'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>. Accesses to the value of the new binding will indirectly access the bound value of the target binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When <var>M</var>.[[Environment]] is instantiated it will have a direct binding for <var>N2</var>.</li><li>Let <var>binding</var> be ImportDeclarativeBindingRecord { [[BoundName]]: <var>N</var>, [[IsInitialized]]: <emu-val>true</emu-val>, [[BoundValue]]: <emu-val>undefined</emu-val>, [[IsMutable]]: <emu-val>false</emu-val>, [[IsDeletable]]: <emu-val>false</emu-val>, [[IsStrict]]: <emu-val>false</emu-val>, [[TargetModuleRec]]: <var>M</var>, [[TargetName]]: <var>N2</var> }.</li><li>Append <var>binding</var> to <var>envRec</var>.[[Bindings]].</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-declarative-environment-records-createimmutablebinding-n-s": {"num": "9.1.1.1.3", "title": "#sec-declarative-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">#sec-declarative-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The CreateImmutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It creates a new immutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>S</var> has the value <emu-val>true</emu-val>, the new binding is marked as a strict binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>false</emu-val>.</li><li>Let <var>binding</var> be <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> { [[BoundName]]: <var>N</var>, [[IsInitialized]]: <emu-val>false</emu-val>, [[BoundValue]]: <emu-val>undefined</emu-val>, [[IsMutable]]: <emu-val>false</emu-val>, [[IsDeletable]]: <emu-val>false</emu-val>, [[IsStrict]]: <var>S</var> }.</li><li>Append <var>binding</var> to <var>envRec</var>.[[Bindings]].</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newmoduleenvironment": {"num": "9.1.2.6", "title": "#sec-newmoduleenvironment NewModuleEnvironment ( E )", "html": "<emu-clause id=\"sec-newmoduleenvironment\" aoid=\"NewModuleEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newmoduleenvironment\">#sec-newmoduleenvironment</span> NewModuleEnvironment ( <var>E</var> )</h1>\n        <p>The abstract operation NewModuleEnvironment takes argument <var>E</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be a new <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[Bindings]] to &#171; &#187;.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>E</var>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-declarative-environment-records-initializebinding-n-v": {"num": "9.1.1.1.4", "title": "#sec-declarative-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-declarative-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-initializebinding-n-v\">#sec-declarative-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The InitializeBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>.</li><li>Let <var>binding</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> in <var>envRec</var>.[[Bindings]] whose [[BoundName]] field equals <var>N</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>binding</var>.[[IsInitialized]] is <emu-val>false</emu-val>.</li><li>Set <var>binding</var>.[[BoundValue]] to <var>V</var>.</li><li>Set <var>binding</var>.[[IsInitialized]] to <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records": {"num": "9.1.1.1", "title": "#sec-declarative-environment-records Declarative Environment Records", "html": "<emu-clause id=\"sec-declarative-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records\">#sec-declarative-environment-records</span> Declarative Environment Records</h1>\n        <p>Each <dfn variants=\"declarative Environment Records\">declarative Environment Record</dfn> is associated with an ECMAScript program scope containing variable, constant, let, class, module, import, and/or function declarations. A declarative Environment Record binds the set of identifiers defined by the declarations contained within its scope.</p>\n        <p><emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">Object Environment Records</a></emu-xref> have the additional state field listed in <emu-xref href=\"#table-additional-fields-of-declarative-environment-records\"><a href=\"#table-additional-fields-of-declarative-environment-records\" class=\"excluded-xref\" excluded-id=\"table-additional-fields-of-declarative-environment-records\">#table-additional-fields-of-declarative-environment-records</a></emu-xref>.</p>\n        <emu-table id=\"table-additional-fields-of-declarative-environment-records\" caption=\"Additional Fields of Declarative Environment Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-fields-of-declarative-environment-records\">#table-additional-fields-of-declarative-environment-records</span>: Additional Fields of <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">Declarative Environment Records</a></emu-xref></figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Bindings]]\n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref>\n              </td>\n              <td>\n                Satisfies the invariant that no two records in [[Bindings]] have the same [[BoundName]].\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <p>A <dfn>DeclarativeBindingRecord</dfn> has the following fields:</p>\n        <emu-table id=\"table-fields-of-declarative-binding-records\" caption=\"DeclarativeBindingRecord Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-fields-of-declarative-binding-records\">#table-fields-of-declarative-binding-records</span>: <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[BoundName]]\n              </td>\n              <td>\n                a String\n              </td>\n              <td>\n                the name being bound.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IsInitialized]]\n              </td>\n              <td>\n                a Boolean\n              </td>\n              <td>\n                indicates whether the binding is initialized.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[BoundValue]]\n              </td>\n              <td>\n                an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>\n              </td>\n              <td>\n                the value that the name is bound to.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IsMutable]]\n              </td>\n              <td>\n                a Boolean\n              </td>\n              <td>\n                if <emu-val>true</emu-val>, indicates that the binding is mutable.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IsDeletable]]\n              </td>\n              <td>\n                a Boolean\n              </td>\n              <td>\n                if <emu-val>true</emu-val>, indicates that the binding may be deleted by a subsequent DeleteBinding call.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IsStrict]]\n              </td>\n              <td>\n                a Boolean\n              </td>\n              <td>\n                if <emu-val>true</emu-val>, indicates that the binding is a strict binding.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <p>The behaviour of the concrete specification methods for declarative Environment Records is defined by the following algorithms.</p>\n\n        <div id=\"excluded-sec-declarative-environment-records-hasbinding-n\"><h1><span class=\"secnum\">9.1.1.1.1</span>#sec-declarative-environment-records-hasbinding-n HasBinding ( N )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-createmutablebinding-n-d\"><h1><span class=\"secnum\">9.1.1.1.2</span>#sec-declarative-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-createimmutablebinding-n-s\"><h1><span class=\"secnum\">9.1.1.1.3</span>#sec-declarative-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-initializebinding-n-v\"><h1><span class=\"secnum\">9.1.1.1.4</span>#sec-declarative-environment-records-initializebinding-n-v InitializeBinding ( N, V )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-setmutablebinding-n-v-s\"><h1><span class=\"secnum\">9.1.1.1.5</span>#sec-declarative-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.1.6</span>#sec-declarative-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.1.7</span>#sec-declarative-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.1.8</span>#sec-declarative-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-hassuperbinding\"><h1><span class=\"secnum\">9.1.1.1.9</span>#sec-declarative-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-declarative-environment-records-withbaseobject\"><h1><span class=\"secnum\">9.1.1.1.10</span>#sec-declarative-environment-records-withbaseobject WithBaseObject ( )</h1>...</div></emu-clause>\n\n      "}, "sec-newdeclarativeenvironment": {"num": "9.1.2.2", "title": "#sec-newdeclarativeenvironment NewDeclarativeEnvironment ( E )", "html": "<emu-clause id=\"sec-newdeclarativeenvironment\" aoid=\"NewDeclarativeEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newdeclarativeenvironment\">#sec-newdeclarativeenvironment</span> NewDeclarativeEnvironment ( <var>E</var> )</h1>\n        <p>The abstract operation NewDeclarativeEnvironment takes argument <var>E</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[Bindings]] to &#171; &#187;.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>E</var>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-module-environment-records-getbindingvalue-n-s": {"num": "9.1.1.5.1", "title": "#sec-module-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-module-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-getbindingvalue-n-s\">#sec-module-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. However, if the binding is an indirect binding the value of the target binding is returned. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>S</var> is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>.</li><li>Let <var>binding</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> in <var>envRec</var>.[[Bindings]] whose [[BoundName]] field equals <var>N</var>.</li><li>If <var>binding</var> is an ImportDeclarativeBindingRecord, then<ol><li>Let <var>M</var> be <var>binding</var>.[[TargetModuleRec]].</li><li>Let <var>N2</var> be <var>binding</var>.[[TargetName]].</li><li>Let <var>targetEnv</var> be <var>M</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-const>empty</emu-const>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>N2</var>, <emu-val>true</emu-val>).</li></ol></li><li>If <var>binding</var>.[[IsInitialized]] is <emu-val>false</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return <var>binding</var>.[[BoundValue]].</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p><var>S</var> will always be <emu-val>true</emu-val> because a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is always <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-module-environment-records": {"num": "9.1.1.5", "title": "#sec-module-environment-records Module Environment Records", "html": "<emu-clause id=\"sec-module-environment-records\" oldids=\"module-environment\"><span id=\"module-environment\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records\">#sec-module-environment-records</span> Module Environment Records</h1>\n        <p>A <dfn variants=\"module Environment Records\">module Environment Record</dfn> is a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> that is used to represent the outer scope of an ECMAScript <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. In additional to normal mutable and immutable bindings, module Environment Records also provide immutable import bindings which are bindings that provide indirect access to a target binding that exists in another <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</p>\n        <p>Module Environment Records support all of the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> methods listed in <emu-xref href=\"#table-abstract-methods-of-environment-records\"><a href=\"#table-abstract-methods-of-environment-records\" class=\"excluded-xref\" excluded-id=\"table-abstract-methods-of-environment-records\">#table-abstract-methods-of-environment-records</a></emu-xref> and share the same specifications for all of those methods except for GetBindingValue, DeleteBinding, HasThisBinding and GetThisBinding. In addition, module Environment Records support the methods listed in <emu-xref href=\"#table-additional-methods-of-module-environment-records\"><a href=\"#table-additional-methods-of-module-environment-records\" class=\"excluded-xref\" excluded-id=\"table-additional-methods-of-module-environment-records\">#table-additional-methods-of-module-environment-records</a></emu-xref>:</p>\n        <emu-table id=\"table-additional-methods-of-module-environment-records\" caption=\"Additional Methods of Module Environment Records\" oldids=\"table-20\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-methods-of-module-environment-records\">#table-additional-methods-of-module-environment-records</span>: Additional Methods of <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">Module Environment Records</a></emu-xref></figcaption><span id=\"table-20\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              </th>\n              <th>\n                Purpose\n              </th>\n            </tr>\n            <tr>\n              <td>\n                CreateImportBinding(N, M, N2)\n              </td>\n              <td>\n                Create an immutable indirect binding in a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>. The String value <var>N</var> is the text of the bound name. <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, and <var>N2</var> is a binding that exists in <var>M</var>'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                GetThisBinding()\n              </td>\n              <td>\n                Return the value of this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s <code>this</code> binding.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>The [[Bindings]] of a Module Environment Record can include ImportDeclarativeBindingRecords. These have all the fields of DeclarativeBindingRecords, plus the additional state fields listed in the following table.</p>\n        <emu-table id=\"table-additional-fields-of-importdeclarativebindingrecords\" caption=\"Additional Fields of ImportDeclarativeBindingRecords\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-fields-of-importdeclarativebindingrecords\">#table-additional-fields-of-importdeclarativebindingrecords</span>: Additional Fields of ImportDeclarativeBindingRecords</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[TargetModuleRec]]\n              </td>\n              <td>\n                a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>\n              </td>\n              <td>\n                ?\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[TargetName]]\n              </td>\n              <td>\n                a String\n              </td>\n              <td>\n                the name of a binding that exists in [[TargetModuleRec]]'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>The behaviour of the additional concrete specification methods for module Environment Records are defined by the following algorithms:</p>\n\n        <div id=\"excluded-sec-module-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.5.1</span>#sec-module-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-module-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.5.2</span>#sec-module-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-module-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.5.3</span>#sec-module-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-module-environment-records-getthisbinding\"><h1><span class=\"secnum\">9.1.1.5.4</span>#sec-module-environment-records-getthisbinding GetThisBinding ( )</h1>...</div><div id=\"excluded-sec-createimportbinding\"><h1><span class=\"secnum\">9.1.1.5.5</span>#sec-createimportbinding CreateImportBinding ( N, M, N2 )</h1>...</div></emu-clause>\n    "}, "sec-newglobalenvironment": {"num": "9.1.2.5", "title": "#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )", "html": "<emu-clause id=\"sec-newglobalenvironment\" aoid=\"NewGlobalEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newglobalenvironment\">#sec-newglobalenvironment</span> NewGlobalEnvironment ( <var>G</var>, <var>thisValue</var> )</h1>\n        <p>The abstract operation NewGlobalEnvironment takes arguments <var>G</var> and <var>thisValue</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>objRec</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>G</var>, <emu-val>false</emu-val>, <emu-val>null</emu-val>).</li><li>Let <var>dclRec</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[ObjectRecord]] to <var>objRec</var>.</li><li>Set <var>env</var>.[[GlobalThisValue]] to <var>thisValue</var>.</li><li>Set <var>env</var>.[[DeclarativeRecord]] to <var>dclRec</var>.</li><li>Set <var>env</var>.[[VarNames]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>env</var>.[[OuterEnv]] to <emu-val>null</emu-val>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-declarative-environment-records-setmutablebinding-n-v-s": {"num": "9.1.1.1.5", "title": "#sec-declarative-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">#sec-declarative-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to change the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A binding for <var>N</var> normally already exists, but in rare cases it may not. If the binding is an immutable binding, a <emu-val>TypeError</emu-val> is thrown if <var>S</var> is <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li id=\"step-setmutablebinding-missing-binding\">If <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Perform <var>envRec</var>.CreateMutableBinding(<var>N</var>, <emu-val>true</emu-val>).</li><li>Perform <var>envRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></li><li>Let <var>binding</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> in <var>envRec</var>.[[Bindings]] whose [[BoundName]] field equals <var>N</var>.</li><li>If <var>binding</var>.[[IsStrict]] is <emu-val>true</emu-val>, set <var>S</var> to <emu-val>true</emu-val>.</li><li>If <var>binding</var>.[[IsInitialized]] is <emu-val>false</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Else if <var>binding</var>.[[IsMutable]] is <emu-val>true</emu-val>, change its bound value to <var>V</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is an attempt to change the value of an immutable binding.</li><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>An example of ECMAScript code that results in a missing binding at step <emu-xref href=\"#step-setmutablebinding-missing-binding\"><a href=\"#step-setmutablebinding-missing-binding\" class=\"excluded-xref\" excluded-id=\"step-setmutablebinding-missing-binding\">#step-setmutablebinding-missing-binding</a></emu-xref> is:</p>\n            <pre><code class=\"javascript hljs\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">f</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-built_in\">eval</span>(<span class=\"hljs-string\">\"var x; x = (delete x, 0);\"</span>); }</code></pre>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-getbindingvalue-n-s": {"num": "9.1.1.1.6", "title": "#sec-declarative-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-getbindingvalue-n-s\">#sec-declarative-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown, regardless of the value of <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>.</li><li>Let <var>binding</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> in <var>envRec</var>.[[Bindings]] whose [[BoundName]] field equals <var>N</var>.</li><li>If <var>binding</var>.[[IsInitialized]] is <emu-val>false</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return <var>binding</var>.[[BoundValue]].</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hasbinding-n": {"num": "9.1.1.1.1", "title": "#sec-declarative-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hasbinding-n\">#sec-declarative-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is one of the identifiers bound by the record. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>envRec</var>.[[Bindings]] contains a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> whose [[BoundName]] field is equal to the value of <var>N</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-newfunctionenvironment": {"num": "9.1.2.4", "title": "#sec-newfunctionenvironment NewFunctionEnvironment ( F, newTarget )", "html": "<emu-clause id=\"sec-newfunctionenvironment\" aoid=\"NewFunctionEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newfunctionenvironment\">#sec-newfunctionenvironment</span> NewFunctionEnvironment ( <var>F</var>, <var>newTarget</var> )</h1>\n        <p>The abstract operation NewFunctionEnvironment takes arguments <var>F</var> and <var>newTarget</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript function.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newTarget</var>) is Undefined or Object.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[Bindings]] to &#171; &#187;.</li><li>Set <var>env</var>.[[FunctionObject]] to <var>F</var>.</li><li>If <var>F</var>.[[ThisMode]] is <emu-const>lexical</emu-const>, set <var>env</var>.[[ThisBindingStatus]] to <emu-const>lexical</emu-const>.</li><li>Else, set <var>env</var>.[[ThisBindingStatus]] to <emu-const>uninitialized</emu-const>.</li><li>Set <var>env</var>.[[NewTarget]] to <var>newTarget</var>.</li><li>Set <var>env</var>.[[OuterEnv]] to <var>F</var>.[[Environment]].</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-declarative-environment-records-deletebinding-n": {"num": "9.1.1.1.7", "title": "#sec-declarative-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-deletebinding-n\">#sec-declarative-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that have been explicitly designated as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>.</li><li>Let <var>binding</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> in <var>envRec</var>.[[Bindings]] whose [[BoundName]] field equals <var>N</var>.</li><li>If <var>binding</var>.[[IsDeletable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Remove <var>binding</var> from <var>envRec</var>.[[Bindings]].</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-web-compat-blockdeclarationinstantiation": {"num": "B.3.2.6", "title": "#sec-web-compat-blockdeclarationinstantiation Changes to BlockDeclarationInstantiation", "html": "<emu-annex id=\"sec-web-compat-blockdeclarationinstantiation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-web-compat-blockdeclarationinstantiation\">#sec-web-compat-blockdeclarationinstantiation</span> Changes to BlockDeclarationInstantiation</h1>\n        <p>During <emu-xref aoid=\"BlockDeclarationInstantiation\"><a href=\"#sec-blockdeclarationinstantiation\">BlockDeclarationInstantiation</a></emu-xref> the following steps are performed in place of step <emu-xref href=\"#step-blockdeclarationinstantiation-createmutablebinding\"><a href=\"#step-blockdeclarationinstantiation-createmutablebinding\">4.a.ii.1</a></emu-xref>:</p>\n        <emu-alg replaces-step=\"step-blockdeclarationinstantiation-createmutablebinding\"><ol start=\"1\" class=\"nested-thrice\"><li>If <var>env</var>.HasBinding(<var>dn</var>) is <emu-val>false</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li></ol></li></ol></emu-alg>\n        <p>During <emu-xref aoid=\"BlockDeclarationInstantiation\"><a href=\"#sec-blockdeclarationinstantiation\">BlockDeclarationInstantiation</a></emu-xref> the following steps are performed in place of step <emu-xref href=\"#step-blockdeclarationinstantiation-initializebinding\"><a href=\"#step-blockdeclarationinstantiation-initializebinding\">4.b.iii</a></emu-xref>:</p>\n        <emu-alg replaces-step=\"step-blockdeclarationinstantiation-initializebinding\"><ol start=\"3\" class=\"nested-twice\"><li>Let <var>binding</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">DeclarativeBindingRecord</a></emu-xref> in <var>env</var>.[[Bindings]] whose [[BoundName]] field equals <var>fn</var>.</li><li>If <var>binding</var>.[[IsInitialized]] is <emu-val>false</emu-val>, then<ol><li>Perform <var>env</var>.InitializeBinding(<var>fn</var>, <var>fo</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>d</var> is a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>.</li><li>Perform <var>env</var>.SetMutableBinding(<var>fn</var>, <var>fo</var>, <emu-val>false</emu-val>).</li></ol></li></ol></emu-alg>\n      </emu-annex>\n    "}}, "figData": {"table-abstract-methods-of-environment-records": "Table 19", "table-additional-fields-of-declarative-environment-records": "Table 20", "table-fields-of-declarative-binding-records": "Table 21", "table-additional-methods-of-module-environment-records": "Table 27", "table-additional-fields-of-importdeclarativebindingrecords": "Table 28"}}}