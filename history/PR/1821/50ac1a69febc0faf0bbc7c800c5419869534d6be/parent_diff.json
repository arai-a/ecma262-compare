{"from": {"secList": ["sec-switch-statement-runtime-semantics-evaluation"], "secData": {"sec-switch-statement-runtime-semantics-evaluation": {"num": "13.12.11", "title": "#sec-switch-statement-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-switch-statement-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-switch-statement-runtime-semantics-evaluation\">#sec-switch-statement-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"SwitchStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"515acffe\"><emu-t>switch</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>exprRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>switchValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprRef</var>).</li><li>Let <var>oldEnv</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>blockEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>oldEnv</var>).</li><li>Perform <emu-xref aoid=\"BlockDeclarationInstantiation\"><a href=\"#sec-blockdeclarationinstantiation\">BlockDeclarationInstantiation</a></emu-xref>(<emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt>, <var>blockEnv</var>).</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>blockEnv</var>.</li><li>Let <var>R</var> be CaseBlockEvaluation of <emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt> with argument <var>switchValue</var>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>oldEnv</var>.</li><li>Return <var>R</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>No matter how control leaves the <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> the LexicalEnvironment is always restored to its former state.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"CaseClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CaseClause\">CaseClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0261b19a\"><emu-t>case</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>:</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"CaseClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CaseClause\">CaseClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7849dc0f\"><emu-t>case</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"DefaultClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DefaultClause\">DefaultClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b79ae3b1\"><emu-t>default</emu-t><emu-t>:</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"DefaultClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DefaultClause\">DefaultClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a1d00856\"><emu-t>default</emu-t><emu-t>:</emu-t><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}}, "figData": {}}, "to": {"secList": ["sec-switch-statement-runtime-semantics-evaluation"], "secData": {"sec-switch-statement-runtime-semantics-evaluation": {"num": "13.12.11", "title": "#sec-switch-statement-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-switch-statement-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-switch-statement-runtime-semantics-evaluation\">#sec-switch-statement-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"SwitchStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"515acffe\"><emu-t>switch</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>exprRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>switchValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprRef</var>).</li><li>Let <var>oldEnv</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>blockEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>oldEnv</var>).</li><li>Perform <emu-xref aoid=\"BlockDeclarationInstantiation\"><a href=\"#sec-blockdeclarationinstantiation\">BlockDeclarationInstantiation</a></emu-xref>(<emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt>, <var>blockEnv</var>).</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>blockEnv</var>.</li><li>Let <var>R</var> be <emu-xref aoid=\"CaseBlockEvaluation\"><a href=\"#sec-runtime-semantics-caseblockevaluation\">CaseBlockEvaluation</a></emu-xref> of <emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt> with argument <var>switchValue</var>.</li><li>Set the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment to <var>oldEnv</var>.</li><li>Return <var>R</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>No matter how control leaves the <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> the LexicalEnvironment is always restored to its former state.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"CaseClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CaseClause\">CaseClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0261b19a\"><emu-t>case</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>:</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"CaseClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CaseClause\">CaseClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7849dc0f\"><emu-t>case</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"DefaultClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DefaultClause\">DefaultClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b79ae3b1\"><emu-t>default</emu-t><emu-t>:</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"DefaultClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DefaultClause\">DefaultClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a1d00856\"><emu-t>default</emu-t><emu-t>:</emu-t><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the result of evaluating <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}}, "figData": {}}}