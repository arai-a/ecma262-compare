{"from": {"secList": ["sec-properties-of-the-map-constructor", "sec-symbol.isconcatspreadable", "sec-sharedarraybuffer-@@species", "sec-%iteratorprototype%-@@iterator", "sec-array.from", "sec-get-array-@@species", "sec-string.prototype.replace", "sec-string.prototype.matchall", "sec-generator.prototype-@@tostringtag", "sec-properties-of-generator-prototype", "sec-properties-of-the-map-prototype-object", "sec-set.prototype-@@iterator", "sec-properties-of-the-function-prototype-object", "sec-map-iterable", "sec-array.prototype-@@iterator", "sec-properties-of-the-dataview-prototype-object", "sec-properties-of-the-regexp-constructor", "sec-properties-of-the-bigint-prototype-object", "sec-properties-of-the-weakset-prototype-object", "sec-%mapiteratorprototype%-object", "sec-object.prototype.tostring", "sec-json-object", "sec-properties-of-the-sharedarraybuffer-prototype-object", "sec-set.prototype-@@tostringtag", "sec-properties-of-the-symbol-prototype-object", "sec-iterable-interface", "sec-asynciteratorprototype", "sec-string.prototype.split", "sec-asynciterable-interface", "sec-get-arraybuffer-@@species", "sec-%regexpstringiteratorprototype%-@@tostringtag", "sec-weakmap.prototype-@@tostringtag", "sec-map.prototype-@@tostringtag", "sec-async-function-prototype-properties-toStringTag", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-symbol.search", "sec-isregexp", "sec-%typedarray%.prototype-@@iterator", "sec-symbol.match", "sec-properties-of-the-promise-prototype-object", "sec-%stringiteratorprototype%-@@tostringtag", "sec-get-regexp-@@species", "sec-atomics-@@tostringtag", "sec-atomics-object", "sec-date.prototype-@@toprimitive", "sec-properties-of-the-generatorfunction-prototype-object", "sec-symbol.tostringtag", "sec-%arrayiteratorprototype%-@@tostringtag", "sec-properties-of-the-weakmap-prototype-object", "sec-bigint.prototype-@@tostringtag", "sec-properties-of-the-regexp-prototype-object", "sec-properties-of-the-sharedarraybuffer-constructor", "sec-properties-of-the-%typedarrayprototype%-object", "sec-string.prototype-@@iterator", "sec-symbol.replace", "sec-properties-of-the-arraybuffer-prototype-object", "sec-createunmappedargumentsobject", "sec-string.prototype.match", "sec-symbol.iterator", "sec-array.prototype-@@unscopables", "sec-regexp.prototype-@@search", "sec-function.prototype-@@hasinstance", "sec-%setiteratorprototype%-@@tostringtag", "sec-arrayspeciescreate", "sec-get-set-@@species", "sec-value-properties-of-the-math-object", "sec-regexp.prototype-@@replace", "sec-typedarray-object", "sec-properties-of-asyncgenerator-prototype", "sec-sharedarraybuffer.prototype.toString", "sec-symbol.hasinstance", "sec-get-%typedarray%-@@species", "sec-dataview.prototype-@@tostringtag", "sec-asynciteratorprototype-asynciterator", "sec-properties-of-the-string-prototype-object", "sec-promise.prototype-@@tostringtag", "sec-module-namespace-objects", "sec-symbol.asynciterator", "sec-properties-of-the-array-constructor", "sec-%arrayiteratorprototype%-object", "sec-@@tostringtag", "sec-symbol.toprimitive", "sec-get-promise-@@species", "sec-asyncgeneratorfunction-prototype-tostringtag", "sec-properties-of-the-set-prototype-object", "sec-json-@@tostringtag", "sec-properties-of-the-promise-constructor", "sec-arraybuffer.prototype-@@tostringtag", "sec-instanceofoperator", "sec-regexp.prototype-@@split", "sec-add-entries-from-iterable", "sec-createmappedargumentsobject", "sec-regexp.prototype-@@match", "sec-string.prototype.search", "sec-object-environment-records-hasbinding-n", "sec-properties-of-the-arraybuffer-constructor", "sec-get-map-@@species", "sec-math-@@tostringtag", "sec-symbol.matchall", "sec-properties-of-the-%typedarray%-intrinsic-object", "sec-properties-of-the-date-prototype-object", "sec-getiterator", "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact", "sec-symbol.split", "sec-properties-of-the-set-constructor", "sec-map.prototype-@@iterator", "sec-symbol.prototype-@@tostringtag", "sec-properties-of-the-array-prototype-object", "sec-asyncgenerator-prototype-tostringtag", "sec-symbol.species", "sec-toprimitive", "sec-async-function-prototype-properties", "sec-weakmap-iterable", "sec-weakset.prototype-@@tostringtag", "sec-get-%typedarray%.prototype-@@tostringtag", "sec-speciesconstructor", "sec-isconcatspreadable", "sec-%regexpstringiteratorprototype%-object", "sec-%stringiteratorprototype%-object", "sec-symbol.unscopables", "sec-well-known-symbols", "sec-generatorfunction.prototype-@@tostringtag", "sec-regexp-prototype-matchall", "sec-%mapiteratorprototype%-@@tostringtag", "sec-%setiteratorprototype%-object", "sec-%iteratorprototype%-object", "sec-%typedarray%.from", "sec-symbol.prototype-@@toprimitive"], "secData": {"sec-properties-of-the-map-constructor": {"num": "23.1.2", "title": "#sec-properties-of-the-map-constructor Properties of the Map Constructor", "html": "<emu-clause id=\"sec-properties-of-the-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-map-constructor\">#sec-properties-of-the-map-constructor</span> Properties of the Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-map.prototype\"><h1><span class=\"secnum\">23.1.2.1</span>#sec-map.prototype Map.prototype</h1>...</div><div id=\"excluded-sec-get-map-@@species\"><h1><span class=\"secnum\">23.1.2.2</span>#sec-get-map-@@species get Map [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.isconcatspreadable": {"num": "19.4.2.4", "title": "#sec-symbol.isconcatspreadable Symbol.isConcatSpreadable", "html": "<emu-clause id=\"sec-symbol.isconcatspreadable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.isconcatspreadable\">#sec-symbol.isconcatspreadable</span> Symbol.isConcatSpreadable</h1>\n        <p>The initial value of <code>Symbol.isConcatSpreadable</code> is the well-known symbol @@isConcatSpreadable (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-sharedarraybuffer-@@species": {"num": "24.2.3.2", "title": "#sec-sharedarraybuffer-@@species get SharedArrayBuffer [ @@species ]", "html": "<emu-clause id=\"sec-sharedarraybuffer-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-@@species\">#sec-sharedarraybuffer-@@species</span> get SharedArrayBuffer [ @@species ]</h1>\n        <p><code>SharedArrayBuffer[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-%iteratorprototype%-@@iterator": {"num": "25.1.2.1", "title": "#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-%iteratorprototype%-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-@@iterator\">#sec-%iteratorprototype%-@@iterator</span> %IteratorPrototype% [ @@iterator ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.iterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-array.from": {"num": "22.1.2.1", "title": "#sec-array.from Array.from ( items [ , mapfn [ , thisArg ] ] )", "html": "<emu-clause id=\"sec-array.from\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.from\">#sec-array.from</span> Array.from ( <var>items</var> [ , <var>mapfn</var> [ , <var>thisArg</var> ] ] )</h1>\n        <p>When the <code>from</code> method is called with argument <var>items</var> and optional arguments <var>mapfn</var> and <var>thisArg</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <var>mapfn</var> is <emu-val>undefined</emu-val>, let <var>mapping</var> be <emu-val>false</emu-val>.</li><li>Else,<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>mapping</var> be <emu-val>true</emu-val>.</li></ol></li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>items</var>, @@iterator).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>).</li></ol></li><li>Else,<ol><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li></ol></li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>items</var>, <emu-const>sync</emu-const>, <var>usingIterator</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> &#8805; 2<sup>53</sup> - 1, then<ol><li>Let <var>error</var> be <emu-xref aoid=\"ThrowCompletion\"><a href=\"#sec-throwcompletion\">ThrowCompletion</a></emu-xref>(a newly created <emu-val>TypeError</emu-val> object).</li><li>Return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>error</var>).</li></ol></li><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>k</var>, <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>nextValue</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>nextValue</var>, <var>k</var> &#187;).</li><li>If <var>mappedValue</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>mappedValue</var>).</li><li>Set <var>mappedValue</var> to <var>mappedValue</var>.[[Value]].</li></ol></li><li>Else, let <var>mappedValue</var> be <var>nextValue</var>.</li><li>Let <var>defineStatus</var> be <emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <var>Pk</var>, <var>mappedValue</var>).</li><li>If <var>defineStatus</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>defineStatus</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>NOTE: <var>items</var> is not an Iterable so assume it is an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>items</var>).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>len</var> &#187;).</li></ol></li><li>Else,<ol><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>len</var>).</li></ol></li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var> &#187;).</li></ol></li><li>Else, let <var>mappedValue</var> be <var>kValue</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <var>Pk</var>, <var>mappedValue</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>len</var>, <emu-val>true</emu-val>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>from</code> function is an intentionally generic factory method; it does not require that its <emu-val>this</emu-val> value be the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Therefore it can be transferred to or inherited by any other constructors that may be called with a single numeric argument.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-get-array-@@species": {"num": "22.1.2.5", "title": "#sec-get-array-@@species get Array [ @@species ]", "html": "<emu-clause id=\"sec-get-array-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-array-@@species\">#sec-get-array-@@species</span> get Array [ @@species ]</h1>\n        <p><code>Array[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Array prototype methods normally use their <emu-val>this</emu-val> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-string.prototype.replace": {"num": "21.1.3.17", "title": "#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replace\">#sec-string.prototype.replace</span> String.prototype.replace ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replace</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, @@replace).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Search <var>string</var> for the first occurrence of <var>searchString</var> and let <var>pos</var> be the index within <var>string</var> of the first code unit of the matched substring and let <var>matched</var> be <var>searchString</var>. If no occurrences of <var>searchString</var> were found, return <var>string</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>matched</var>, <var>pos</var>, <var>string</var> &#187;).</li><li>Let <var>replStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replStr</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>string</var>, <var>pos</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Let <var>tailPos</var> be <var>pos</var> + the number of code units in <var>matched</var>.</li><li>Let <var>newString</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the first <var>pos</var> code units of <var>string</var>, <var>replStr</var>, and the trailing substring of <var>string</var> starting at index <var>tailPos</var>. If <var>pos</var> is 0, the first element of the concatenation will be the empty String.</li><li>Return <var>newString</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>replace</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getsubstitution\"><h1><span class=\"secnum\">21.1.3.17.1</span>#sec-getsubstitution Runtime Semantics: GetSubstitution ( matched, str, position, captures, namedCaptures, replacement )</h1>...</div></emu-clause>\n\n      "}, "sec-string.prototype.matchall": {"num": "21.1.3.12", "title": "#sec-string.prototype.matchall String.prototype.matchAll ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.matchall\">#sec-string.prototype.matchall</span> String.prototype.matchAll ( <var>regexp</var> )</h1>\n        <p>Performs a regular expression match of the String representing the <emu-val>this</emu-val> value against <var>regexp</var> and returns an iterator. Each iteration result's value is an Array object containing the results of the match, or <emu-val>null</emu-val> if the String did not match.</p>\n        <p>When the <code>matchAll</code> method is called, the following steps are taken:</p>\n\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>regexp</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>regexp</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, @@matchAll).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>\"g\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, @@matchAll, &#171; <var>S</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">The <code>matchAll</code> function is intentionally generic, it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">Similarly to <code>String.prototype.split</code>, <code>String.prototype.matchAll</code> is designed to typically act without mutating its inputs.</div></emu-note>\n      </emu-clause>\n\n      "}, "sec-generator.prototype-@@tostringtag": {"num": "25.4.1.5", "title": "#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-generator.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator.prototype-@@tostringtag\">#sec-generator.prototype-@@tostringtag</span> Generator.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Generator\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-generator-prototype": {"num": "25.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref> (the <code>GeneratorFunction.prototype</code>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-map-prototype-object": {"num": "23.1.3", "title": "#sec-properties-of-the-map-prototype-object Properties of the Map Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-map-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-map-prototype-object\">#sec-properties-of-the-map-prototype-object</span> Properties of the Map Prototype Object</h1>\n      <p>The Map prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%MapPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[MapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map.prototype.clear\"><h1><span class=\"secnum\">23.1.3.1</span>#sec-map.prototype.clear Map.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-map.prototype.constructor\"><h1><span class=\"secnum\">23.1.3.2</span>#sec-map.prototype.constructor Map.prototype.constructor</h1>...</div><div id=\"excluded-sec-map.prototype.delete\"><h1><span class=\"secnum\">23.1.3.3</span>#sec-map.prototype.delete Map.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.entries\"><h1><span class=\"secnum\">23.1.3.4</span>#sec-map.prototype.entries Map.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-map.prototype.foreach\"><h1><span class=\"secnum\">23.1.3.5</span>#sec-map.prototype.foreach Map.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-map.prototype.get\"><h1><span class=\"secnum\">23.1.3.6</span>#sec-map.prototype.get Map.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.has\"><h1><span class=\"secnum\">23.1.3.7</span>#sec-map.prototype.has Map.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.keys\"><h1><span class=\"secnum\">23.1.3.8</span>#sec-map.prototype.keys Map.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-map.prototype.set\"><h1><span class=\"secnum\">23.1.3.9</span>#sec-map.prototype.set Map.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-get-map.prototype.size\"><h1><span class=\"secnum\">23.1.3.10</span>#sec-get-map.prototype.size get Map.prototype.size</h1>...</div><div id=\"excluded-sec-map.prototype.values\"><h1><span class=\"secnum\">23.1.3.11</span>#sec-map.prototype.values Map.prototype.values ( )</h1>...</div><div id=\"excluded-sec-map.prototype-@@iterator\"><h1><span class=\"secnum\">23.1.3.12</span>#sec-map.prototype-@@iterator Map.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-map.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.1.3.13</span>#sec-map.prototype-@@tostringtag Map.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-set.prototype-@@iterator": {"num": "23.2.3.11", "title": "#sec-set.prototype-@@iterator Set.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-set.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype-@@iterator\">#sec-set.prototype-@@iterator</span> Set.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <emu-val>\"values\"</emu-val> property.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-function-prototype-object": {"num": "19.2.3", "title": "#sec-properties-of-the-function-prototype-object Properties of the Function Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-function-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</span> Properties of the Function Prototype Object</h1>\n      <p>The Function prototype object:</p>\n      <ul>\n        <li>is  <dfn>%Function.prototype%</dfn>.</li>\n        <li>is itself a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n        <li>accepts any arguments and returns <emu-val>undefined</emu-val> when invoked.</li>\n        <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 0.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is the empty String.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Function prototype object is specified to be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-function.prototype.apply\"><h1><span class=\"secnum\">19.2.3.1</span>#sec-function.prototype.apply Function.prototype.apply ( thisArg, argArray )</h1>...</div><div id=\"excluded-sec-function.prototype.bind\"><h1><span class=\"secnum\">19.2.3.2</span>#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.call\"><h1><span class=\"secnum\">19.2.3.3</span>#sec-function.prototype.call Function.prototype.call ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.constructor\"><h1><span class=\"secnum\">19.2.3.4</span>#sec-function.prototype.constructor Function.prototype.constructor</h1>...</div><div id=\"excluded-sec-function.prototype.tostring\"><h1><span class=\"secnum\">19.2.3.5</span>#sec-function.prototype.tostring Function.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-function.prototype-@@hasinstance\"><h1><span class=\"secnum\">19.2.3.6</span>#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )</h1>...</div></emu-clause>\n\n    "}, "sec-map-iterable": {"num": "23.1.1.1", "title": "#sec-map-iterable Map ( [ iterable ] )", "html": "<emu-clause id=\"sec-map-iterable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-iterable\">#sec-map-iterable</span> Map ( [ <var>iterable</var> ] )</h1>\n        <p>When the <code>Map</code> function is called with optional argument <var>iterable</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>map</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Map.prototype%\"</emu-val>, &#171; [[MapData]] &#187;).</li><li>Set <var>map</var>.[[MapData]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>iterable</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <var>map</var>.</li><li>Let <var>adder</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <emu-val>\"set\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"AddEntriesFromIterable\"><a href=\"#sec-add-entries-from-iterable\">AddEntriesFromIterable</a></emu-xref>(<var>map</var>, <var>iterable</var>, <var>adder</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If the parameter <var>iterable</var> is present, it is expected to be an object that implements an @@iterator method that returns an iterator object that produces a two element <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> whose first element is a value that will be used as a Map key and whose second element is the value to associate with that key.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype-@@iterator": {"num": "22.1.3.33", "title": "#sec-array.prototype-@@iterator Array.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-array.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype-@@iterator\">#sec-array.prototype-@@iterator</span> Array.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>Array.prototype.values</code> property.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-dataview-prototype-object": {"num": "24.3.4", "title": "#sec-properties-of-the-dataview-prototype-object Properties of the DataView Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-dataview-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-dataview-prototype-object\">#sec-properties-of-the-dataview-prototype-object</span> Properties of the DataView Prototype Object</h1>\n      <p>The DataView prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataViewPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-dataview.prototype.buffer\"><h1><span class=\"secnum\">24.3.4.1</span>#sec-get-dataview.prototype.buffer get DataView.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.bytelength\"><h1><span class=\"secnum\">24.3.4.2</span>#sec-get-dataview.prototype.bytelength get DataView.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.byteoffset\"><h1><span class=\"secnum\">24.3.4.3</span>#sec-get-dataview.prototype.byteoffset get DataView.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-dataview.prototype.constructor\"><h1><span class=\"secnum\">24.3.4.4</span>#sec-dataview.prototype.constructor DataView.prototype.constructor</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbigint64\"><h1><span class=\"secnum\">24.3.4.5</span>#sec-dataview.prototype.getbigint64 DataView.prototype.getBigInt64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbiguint64\"><h1><span class=\"secnum\">24.3.4.6</span>#sec-dataview.prototype.getbiguint64 DataView.prototype.getBigUint64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat32\"><h1><span class=\"secnum\">24.3.4.7</span>#sec-dataview.prototype.getfloat32 DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat64\"><h1><span class=\"secnum\">24.3.4.8</span>#sec-dataview.prototype.getfloat64 DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint8\"><h1><span class=\"secnum\">24.3.4.9</span>#sec-dataview.prototype.getint8 DataView.prototype.getInt8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint16\"><h1><span class=\"secnum\">24.3.4.10</span>#sec-dataview.prototype.getint16 DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint32\"><h1><span class=\"secnum\">24.3.4.11</span>#sec-dataview.prototype.getint32 DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint8\"><h1><span class=\"secnum\">24.3.4.12</span>#sec-dataview.prototype.getuint8 DataView.prototype.getUint8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint16\"><h1><span class=\"secnum\">24.3.4.13</span>#sec-dataview.prototype.getuint16 DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint32\"><h1><span class=\"secnum\">24.3.4.14</span>#sec-dataview.prototype.getuint32 DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbigint64\"><h1><span class=\"secnum\">24.3.4.15</span>#sec-dataview.prototype.setbigint64 DataView.prototype.setBigInt64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbiguint64\"><h1><span class=\"secnum\">24.3.4.16</span>#sec-dataview.prototype.setbiguint64 DataView.prototype.setBigUint64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat32\"><h1><span class=\"secnum\">24.3.4.17</span>#sec-dataview.prototype.setfloat32 DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat64\"><h1><span class=\"secnum\">24.3.4.18</span>#sec-dataview.prototype.setfloat64 DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint8\"><h1><span class=\"secnum\">24.3.4.19</span>#sec-dataview.prototype.setint8 DataView.prototype.setInt8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint16\"><h1><span class=\"secnum\">24.3.4.20</span>#sec-dataview.prototype.setint16 DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint32\"><h1><span class=\"secnum\">24.3.4.21</span>#sec-dataview.prototype.setint32 DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint8\"><h1><span class=\"secnum\">24.3.4.22</span>#sec-dataview.prototype.setuint8 DataView.prototype.setUint8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint16\"><h1><span class=\"secnum\">24.3.4.23</span>#sec-dataview.prototype.setuint16 DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint32\"><h1><span class=\"secnum\">24.3.4.24</span>#sec-dataview.prototype.setuint32 DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.3.4.25</span>#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-regexp-constructor": {"num": "21.2.4", "title": "#sec-properties-of-the-regexp-constructor Properties of the RegExp Constructor", "html": "<emu-clause id=\"sec-properties-of-the-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-constructor\">#sec-properties-of-the-regexp-constructor</span> Properties of the RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp.prototype\"><h1><span class=\"secnum\">21.2.4.1</span>#sec-regexp.prototype RegExp.prototype</h1>...</div><div id=\"excluded-sec-get-regexp-@@species\"><h1><span class=\"secnum\">21.2.4.2</span>#sec-get-regexp-@@species get RegExp [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-bigint-prototype-object": {"num": "20.2.3", "title": "#sec-properties-of-the-bigint-prototype-object Properties of the BigInt Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-bigint-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-bigint-prototype-object\">#sec-properties-of-the-bigint-prototype-object</span> Properties of the BigInt Prototype Object</h1>\n      <p>The BigInt prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a BigInt object; it does not have a [[BigIntData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation  <dfn id=\"sec-thisbigintvalue\" aoid=\"thisBigIntValue\">thisBigIntValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BigIntData]] internal slot, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>.[[BigIntData]]) is BigInt.</li><li>Return <var>value</var>.[[BigIntData]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>The phrase &#8220;this BigInt value&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thisbigintvalue\"><a href=\"#sec-thisbigintvalue\">thisBigIntValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-bigint.prototype.constructor\"><h1><span class=\"secnum\">20.2.3.1</span>#sec-bigint.prototype.constructor BigInt.prototype.constructor</h1>...</div><div id=\"excluded-sec-bigint.prototype.tolocalestring\"><h1><span class=\"secnum\">20.2.3.2</span>#sec-bigint.prototype.tolocalestring BigInt.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.tostring\"><h1><span class=\"secnum\">20.2.3.3</span>#sec-bigint.prototype.tostring BigInt.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.valueof\"><h1><span class=\"secnum\">20.2.3.4</span>#sec-bigint.prototype.valueof BigInt.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-bigint.prototype-@@tostringtag\"><h1><span class=\"secnum\">20.2.3.5</span>#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n  "}, "sec-properties-of-the-weakset-prototype-object": {"num": "23.4.3", "title": "#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakset-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakset-prototype-object\">#sec-properties-of-the-weakset-prototype-object</span> Properties of the WeakSet Prototype Object</h1>\n      <p>The WeakSet prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakSetPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakSetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset.prototype.add\"><h1><span class=\"secnum\">23.4.3.1</span>#sec-weakset.prototype.add WeakSet.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.constructor\"><h1><span class=\"secnum\">23.4.3.2</span>#sec-weakset.prototype.constructor WeakSet.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakset.prototype.delete\"><h1><span class=\"secnum\">23.4.3.3</span>#sec-weakset.prototype.delete WeakSet.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.has\"><h1><span class=\"secnum\">23.4.3.4</span>#sec-weakset.prototype.has WeakSet.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.4.3.5</span>#sec-weakset.prototype-@@tostringtag WeakSet.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-%mapiteratorprototype%-object": {"num": "23.1.5.2", "title": "#sec-%mapiteratorprototype%-object The %MapIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%mapiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%-object\">#sec-%mapiteratorprototype%-object</span> The %MapIteratorPrototype% Object</h1>\n        <p>The  <dfn>%MapIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Map Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%mapiteratorprototype%.next\"><h1><span class=\"secnum\">23.1.5.2.1</span>#sec-%mapiteratorprototype%.next %MapIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%mapiteratorprototype%-@@tostringtag\"><h1><span class=\"secnum\">23.1.5.2.2</span>#sec-%mapiteratorprototype%-@@tostringtag %MapIteratorPrototype% [ @@toStringTag ]</h1>...</div></emu-clause>\n\n      "}, "sec-object.prototype.tostring": {"num": "19.1.3.6", "title": "#sec-object.prototype.tostring Object.prototype.toString ( )", "html": "<emu-clause id=\"sec-object.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</span> Object.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If the <emu-val>this</emu-val> value is <emu-val>undefined</emu-val>, return <emu-val>\"[object Undefined]\"</emu-val>.</li><li>If the <emu-val>this</emu-val> value is <emu-val>null</emu-val>, return <emu-val>\"[object Null]\"</emu-val>.</li><li>Let <var>O</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>O</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, let <var>builtinTag</var> be <emu-val>\"Array\"</emu-val>.</li><li>Else if <var>O</var> has a [[ParameterMap]] internal slot, let <var>builtinTag</var> be <emu-val>\"Arguments\"</emu-val>.</li><li>Else if <var>O</var> has a [[Call]] internal method, let <var>builtinTag</var> be <emu-val>\"Function\"</emu-val>.</li><li>Else if <var>O</var> has an [[ErrorData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Error\"</emu-val>.</li><li>Else if <var>O</var> has a [[BooleanData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Boolean\"</emu-val>.</li><li>Else if <var>O</var> has a [[NumberData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Number\"</emu-val>.</li><li>Else if <var>O</var> has a [[StringData]] internal slot, let <var>builtinTag</var> be <emu-val>\"String\"</emu-val>.</li><li>Else if <var>O</var> has a [[DateValue]] internal slot, let <var>builtinTag</var> be <emu-val>\"Date\"</emu-val>.</li><li>Else if <var>O</var> has a [[RegExpMatcher]] internal slot, let <var>builtinTag</var> be <emu-val>\"RegExp\"</emu-val>.</li><li>Else, let <var>builtinTag</var> be <emu-val>\"Object\"</emu-val>.</li><li>Let <var>tag</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, @@toStringTag).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>tag</var>) is not String, set <var>tag</var> to <var>builtinTag</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"[object \"</emu-val>, <var>tag</var>, and <emu-val>\"]\"</emu-val>.\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%ObjProto_toString%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Historically, this function was occasionally used to access the String value of the [[Class]] internal slot that was used in previous editions of this specification as a nominal type tag for various built-in objects. The above definition of <code>toString</code> preserves compatibility for legacy code that uses <code>toString</code> as a test for those specific kinds of built-in objects. It does not provide a reliable type testing mechanism for other kinds of built-in or program defined objects. In addition, programs can use @@toStringTag in ways that will invalidate the reliability of such legacy type tests.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-json-object": {"num": "24.5", "title": "#sec-json-object The JSON Object", "html": "<emu-clause id=\"sec-json-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-object\">#sec-json-object</span> The JSON Object</h1>\n    <p>The JSON object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%JSON%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"JSON\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>contains two functions, <code>parse</code> and <code>stringify</code>, that are used to parse and construct JSON texts.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The JSON Data Interchange Format is defined in ECMA-404. The JSON interchange format used in this specification is exactly that described by ECMA-404. Conforming implementations of <code>JSON.parse</code> and <code>JSON.stringify</code> must support the exact interchange format described in the ECMA-404 specification without any deletions or extensions to the format.</p>\n\n    <div id=\"excluded-sec-json.parse\"><h1><span class=\"secnum\">24.5.1</span>#sec-json.parse JSON.parse ( text [ , reviver ] )</h1>...</div><div id=\"excluded-sec-json.stringify\"><h1><span class=\"secnum\">24.5.2</span>#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )</h1>...</div><div id=\"excluded-sec-json-@@tostringtag\"><h1><span class=\"secnum\">24.5.3</span>#sec-json-@@tostringtag JSON [ @@toStringTag ]</h1>...</div></emu-clause>\n"}, "sec-properties-of-the-sharedarraybuffer-prototype-object": {"num": "24.2.4", "title": "#sec-properties-of-the-sharedarraybuffer-prototype-object Properties of the SharedArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">#sec-properties-of-the-sharedarraybuffer-prototype-object</span> Properties of the SharedArrayBuffer Prototype Object</h1>\n      <p>The SharedArrayBuffer prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SharedArrayBufferPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-sharedarraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.2.4.1</span>#sec-get-sharedarraybuffer.prototype.bytelength get SharedArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.2.4.2</span>#sec-sharedarraybuffer.prototype.constructor SharedArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.2.4.3</span>#sec-sharedarraybuffer.prototype.slice SharedArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.toString\"><h1><span class=\"secnum\">24.2.4.4</span>#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-set.prototype-@@tostringtag": {"num": "23.2.3.12", "title": "#sec-set.prototype-@@tostringtag Set.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-set.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype-@@tostringtag\">#sec-set.prototype-@@tostringtag</span> Set.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Set\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-symbol-prototype-object": {"num": "19.4.3", "title": "#sec-properties-of-the-symbol-prototype-object Properties of the Symbol Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-symbol-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</span> Properties of the Symbol Prototype Object</h1>\n      <p>The Symbol prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SymbolPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Symbol instance and does not have a [[SymbolData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation  <dfn id=\"sec-thissymbolvalue\" aoid=\"thisSymbolValue\">thisSymbolValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Symbol, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[SymbolData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[SymbolData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is Symbol.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n\n      <div id=\"excluded-sec-symbol.prototype.constructor\"><h1><span class=\"secnum\">19.4.3.1</span>#sec-symbol.prototype.constructor Symbol.prototype.constructor</h1>...</div><div id=\"excluded-sec-symbol.prototype.description\"><h1><span class=\"secnum\">19.4.3.2</span>#sec-symbol.prototype.description get Symbol.prototype.description</h1>...</div><div id=\"excluded-sec-symbol.prototype.tostring\"><h1><span class=\"secnum\">19.4.3.3</span>#sec-symbol.prototype.tostring Symbol.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype.valueof\"><h1><span class=\"secnum\">19.4.3.4</span>#sec-symbol.prototype.valueof Symbol.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype-@@toprimitive\"><h1><span class=\"secnum\">19.4.3.5</span>#sec-symbol.prototype-@@toprimitive Symbol.prototype [ @@toPrimitive ] ( hint )</h1>...</div><div id=\"excluded-sec-symbol.prototype-@@tostringtag\"><h1><span class=\"secnum\">19.4.3.6</span>#sec-symbol.prototype-@@tostringtag Symbol.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-iterable-interface": {"num": "25.1.1.1", "title": "#sec-iterable-interface The  Iterable Interface", "html": "<emu-clause id=\"sec-iterable-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iterable-interface\">#sec-iterable-interface</span> The  <i>Iterable</i> Interface</h1>\n        <p>The  <i>Iterable</i> interface includes the property described in  <emu-xref href=\"#table-52\"><a href=\"#table-52\" class=\"excluded-xref\" excluded-id=\"table-52\">#table-52</a></emu-xref>:</p>\n        <emu-table id=\"table-52\" caption=\"&lt;i&gt;Iterable&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-52\">#table-52</span>:  <i>Iterable</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>@@iterator</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>Iterator</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>Iterator</i> interface.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-asynciteratorprototype": {"num": "25.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The  <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype.split": {"num": "21.1.3.20", "title": "#sec-string.prototype.split String.prototype.split ( separator, limit )", "html": "<emu-clause id=\"sec-string.prototype.split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.split\">#sec-string.prototype.split</span> String.prototype.split ( <var>separator</var>, <var>limit</var> )</h1>\n        <p>Returns an Array object into which substrings of the result of converting this object to a String have been stored. The substrings are determined by searching from left to right for occurrences of <var>separator</var>; these occurrences are not part of any substring in the returned array, but serve to divide up the String value. The value of <var>separator</var> may be a String of any length or it may be an object, such as a RegExp, that has a @@split method.</p>\n        <p>When the <code>split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>separator</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>separator</var>, @@split).</li><li>If <var>splitter</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>splitter</var>, <var>separator</var>, &#171; <var>O</var>, <var>limit</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>).</li><li>Let <var>R</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>separator</var>).</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>If <var>separator</var> is <emu-val>undefined</emu-val>, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>s</var> be the length of <var>S</var>.</li><li>If <var>s</var> = 0, then<ol><li>Let <var>z</var> be <emu-xref aoid=\"SplitMatch\"><a href=\"#sec-splitmatch\">SplitMatch</a></emu-xref>(<var>S</var>, 0, <var>R</var>).</li><li>If <var>z</var> is not <emu-val>false</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &#8800; <var>s</var><ol><li>Let <var>e</var> be <emu-xref aoid=\"SplitMatch\"><a href=\"#sec-splitmatch\">SplitMatch</a></emu-xref>(<var>S</var>, <var>q</var>, <var>R</var>).</li><li>If <var>e</var> is <emu-val>false</emu-val>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>e</var> is an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> &#8804; <var>s</var>.</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>q</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>s</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The value of <var>separator</var> may be an empty String. In this case, <var>separator</var> does not match the empty substring at the beginning or end of the input String, nor does it match the empty substring at the end of the previous separator match. If <var>separator</var> is the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each substring contains one code unit.</p>\n          <p>If the <emu-val>this</emu-val> object is (or converts to) the empty String, the result depends on whether <var>separator</var> can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If <var>separator</var> is <emu-val>undefined</emu-val>, then the result array contains just one String, which is the <emu-val>this</emu-val> value (converted to a String). If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>split</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-splitmatch\"><h1><span class=\"secnum\">21.1.3.20.1</span>#sec-splitmatch Runtime Semantics: SplitMatch ( S, q, R )</h1>...</div></emu-clause>\n\n      "}, "sec-asynciterable-interface": {"num": "25.1.1.3", "title": "#sec-asynciterable-interface The  AsyncIterable Interface", "html": "<emu-clause id=\"sec-asynciterable-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciterable-interface\">#sec-asynciterable-interface</span> The  <i>AsyncIterable</i> Interface</h1>\n        <p>The  <i>AsyncIterable</i> interface includes the properties described in  <emu-xref href=\"#table-async-iterable\"><a href=\"#table-async-iterable\" class=\"excluded-xref\" excluded-id=\"table-async-iterable\">#table-async-iterable</a></emu-xref>:</p>\n        <emu-table id=\"table-async-iterable\" caption=\"&lt;i&gt;AsyncIterable&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterable\">#table-async-iterable</span>:  <i>AsyncIterable</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><code>@@asyncIterator</code></td>\n              <td>A function that returns an  <i>AsyncIterator</i> object.</td>\n              <td>The returned object must conform to the  <i>AsyncIterator</i> interface.</td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-get-arraybuffer-@@species": {"num": "24.1.3.3", "title": "#sec-get-arraybuffer-@@species get ArrayBuffer [ @@species ]", "html": "<emu-clause id=\"sec-get-arraybuffer-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-arraybuffer-@@species\">#sec-get-arraybuffer-@@species</span> get ArrayBuffer [ @@species ]</h1>\n        <p><code>ArrayBuffer[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ArrayBuffer prototype methods normally use their <emu-val>this</emu-val> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-%regexpstringiteratorprototype%-@@tostringtag": {"num": "21.2.7.1.2", "title": "#sec-%regexpstringiteratorprototype%-@@tostringtag %RegExpStringIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%regexpstringiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%regexpstringiteratorprototype%-@@tostringtag\">#sec-%regexpstringiteratorprototype%-@@tostringtag</span> %RegExpStringIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"RegExp String Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-weakmap.prototype-@@tostringtag": {"num": "23.3.3.6", "title": "#sec-weakmap.prototype-@@tostringtag WeakMap.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-weakmap.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap.prototype-@@tostringtag\">#sec-weakmap.prototype-@@tostringtag</span> WeakMap.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"WeakMap\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-map.prototype-@@tostringtag": {"num": "23.1.3.13", "title": "#sec-map.prototype-@@tostringtag Map.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-map.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype-@@tostringtag\">#sec-map.prototype-@@tostringtag</span> Map.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Map\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-async-function-prototype-properties-toStringTag": {"num": "25.7.3.2", "title": "#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-async-function-prototype-properties-toStringTag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties-toStringTag\">#sec-async-function-prototype-properties-toStringTag</span> AsyncFunction.prototype [ @@toStringTag ]</h1>\n\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"AsyncFunction\"</emu-val>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>is the value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>.</li>\n        <li>is <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.search": {"num": "19.4.2.11", "title": "#sec-symbol.search Symbol.search", "html": "<emu-clause id=\"sec-symbol.search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.search\">#sec-symbol.search</span> Symbol.search</h1>\n        <p>The initial value of <code>Symbol.search</code> is the well-known symbol @@search (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-isregexp": {"num": "7.2.9", "title": "#sec-isregexp IsRegExp ( argument )", "html": "<emu-clause id=\"sec-isregexp\" aoid=\"IsRegExp\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isregexp\">#sec-isregexp</span> IsRegExp ( <var>argument</var> )</h1>\n      <p>The abstract operation IsRegExp takes argument <var>argument</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>argument</var>) is not Object, return <emu-val>false</emu-val>.</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>argument</var>, @@match).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(<var>matcher</var>).</li><li>If <var>argument</var> has a [[RegExpMatcher]] internal slot, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype-@@iterator": {"num": "22.2.3.31", "title": "#sec-%typedarray%.prototype-@@iterator %TypedArray%.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-%typedarray%.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype-@@iterator\">#sec-%typedarray%.prototype-@@iterator</span> %TypedArray%.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.values</code> property.</p>\n      </emu-clause>\n\n      "}, "sec-symbol.match": {"num": "19.4.2.7", "title": "#sec-symbol.match Symbol.match", "html": "<emu-clause id=\"sec-symbol.match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.match\">#sec-symbol.match</span> Symbol.match</h1>\n        <p>The initial value of <code>Symbol.match</code> is the well-known symbol @@match (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-promise-prototype-object": {"num": "25.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">25.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">25.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">25.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">25.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.6.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-%stringiteratorprototype%-@@tostringtag": {"num": "21.1.5.2.2", "title": "#sec-%stringiteratorprototype%-@@tostringtag %StringIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%stringiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%-@@tostringtag\">#sec-%stringiteratorprototype%-@@tostringtag</span> %StringIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"String Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-get-regexp-@@species": {"num": "21.2.4.2", "title": "#sec-get-regexp-@@species get RegExp [ @@species ]", "html": "<emu-clause id=\"sec-get-regexp-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp-@@species\">#sec-get-regexp-@@species</span> get RegExp [ @@species ]</h1>\n        <p><code>RegExp[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>RegExp prototype methods normally use their <emu-val>this</emu-val> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-atomics-@@tostringtag": {"num": "24.4.14", "title": "#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]", "html": "<emu-clause id=\"sec-atomics-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-@@tostringtag\">#sec-atomics-@@tostringtag</span> Atomics [ @@toStringTag ]</h1>\n      <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Atomics\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-atomics-object": {"num": "24.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Atomics\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events.  When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">24.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">24.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">24.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">24.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">24.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">24.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">24.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">24.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">24.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">24.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">24.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">24.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">24.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">24.4.14</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-date.prototype-@@toprimitive": {"num": "20.4.4.45", "title": "#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-date.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</span> Date.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Date object to a primitive value. The allowed values for <var>hint</var> are <emu-val>\"default\"</emu-val>, <emu-val>\"number\"</emu-val>, and <emu-val>\"string\"</emu-val>. Date objects, are unique among built-in ECMAScript object in that they treat <emu-val>\"default\"</emu-val> as being equivalent to <emu-val>\"string\"</emu-val>, All other built-in ECMAScript objects treat <emu-val>\"default\"</emu-val> as being equivalent to <emu-val>\"number\"</emu-val>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>hint</var> is the String value <emu-val>\"string\"</emu-val> or the String value <emu-val>\"default\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-val>\"string\"</emu-val>.</li></ol></li><li>Else if <var>hint</var> is the String value <emu-val>\"number\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-val>\"number\"</emu-val>.</li></ol></li><li>Else, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>O</var>, <var>tryFirst</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.toPrimitive]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>is the value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%Generator%</dfn> (see Figure 2).</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.tostringtag": {"num": "19.4.2.15", "title": "#sec-symbol.tostringtag Symbol.toStringTag", "html": "<emu-clause id=\"sec-symbol.tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.tostringtag\">#sec-symbol.tostringtag</span> Symbol.toStringTag</h1>\n        <p>The initial value of <code>Symbol.toStringTag</code> is the well-known symbol @@toStringTag (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-%arrayiteratorprototype%-@@tostringtag": {"num": "22.1.5.2.2", "title": "#sec-%arrayiteratorprototype%-@@tostringtag %ArrayIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%-@@tostringtag\">#sec-%arrayiteratorprototype%-@@tostringtag</span> %ArrayIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Array Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-properties-of-the-weakmap-prototype-object": {"num": "23.3.3", "title": "#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakmap-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakmap-prototype-object\">#sec-properties-of-the-weakmap-prototype-object</span> Properties of the WeakMap Prototype Object</h1>\n      <p>The WeakMap prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakMapPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakMapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap.prototype.constructor\"><h1><span class=\"secnum\">23.3.3.1</span>#sec-weakmap.prototype.constructor WeakMap.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakmap.prototype.delete\"><h1><span class=\"secnum\">23.3.3.2</span>#sec-weakmap.prototype.delete WeakMap.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.get\"><h1><span class=\"secnum\">23.3.3.3</span>#sec-weakmap.prototype.get WeakMap.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.has\"><h1><span class=\"secnum\">23.3.3.4</span>#sec-weakmap.prototype.has WeakMap.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.set\"><h1><span class=\"secnum\">23.3.3.5</span>#sec-weakmap.prototype.set WeakMap.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-weakmap.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.3.3.6</span>#sec-weakmap.prototype-@@tostringtag WeakMap.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-bigint.prototype-@@tostringtag": {"num": "20.2.3.5", "title": "#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-bigint.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint.prototype-@@tostringtag\">#sec-bigint.prototype-@@tostringtag</span> BigInt.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"BigInt\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-regexp-prototype-object": {"num": "21.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The RegExp prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExpPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <emu-val>\"valueOf\"</emu-val> property of its own; however, it inherits the <emu-val>\"valueOf\"</emu-val> property from the Object prototype object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">21.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">21.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">21.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">21.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">21.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">21.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">21.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">21.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">21.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">21.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">21.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">21.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">21.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">21.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">21.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">21.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">21.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-sharedarraybuffer-constructor": {"num": "24.2.3", "title": "#sec-properties-of-the-sharedarraybuffer-constructor Properties of the SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-properties-of-the-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-sharedarraybuffer-constructor\">#sec-properties-of-the-sharedarraybuffer-constructor</span> Properties of the SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-sharedarraybuffer.prototype\"><h1><span class=\"secnum\">24.2.3.1</span>#sec-sharedarraybuffer.prototype SharedArrayBuffer.prototype</h1>...</div><div id=\"excluded-sec-sharedarraybuffer-@@species\"><h1><span class=\"secnum\">24.2.3.2</span>#sec-sharedarraybuffer-@@species get SharedArrayBuffer [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-%typedarrayprototype%-object": {"num": "22.2.3", "title": "#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray.prototype% Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarrayprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarrayprototype%-object\">#sec-properties-of-the-%typedarrayprototype%-object</span> Properties of the %TypedArray.prototype% Object</h1>\n      <p>The  <dfn>%TypedArray.prototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-%typedarray%.prototype.buffer\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-get-%typedarray%.prototype.buffer get %TypedArray%.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.bytelength\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-get-%typedarray%.prototype.bytelength get %TypedArray%.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.byteoffset\"><h1><span class=\"secnum\">22.2.3.3</span>#sec-get-%typedarray%.prototype.byteoffset get %TypedArray%.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.constructor\"><h1><span class=\"secnum\">22.2.3.4</span>#sec-%typedarray%.prototype.constructor %TypedArray%.prototype.constructor</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.copywithin\"><h1><span class=\"secnum\">22.2.3.5</span>#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.entries\"><h1><span class=\"secnum\">22.2.3.6</span>#sec-%typedarray%.prototype.entries %TypedArray%.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.every\"><h1><span class=\"secnum\">22.2.3.7</span>#sec-%typedarray%.prototype.every %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.fill\"><h1><span class=\"secnum\">22.2.3.8</span>#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.filter\"><h1><span class=\"secnum\">22.2.3.9</span>#sec-%typedarray%.prototype.filter %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.find\"><h1><span class=\"secnum\">22.2.3.10</span>#sec-%typedarray%.prototype.find %TypedArray%.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.findindex\"><h1><span class=\"secnum\">22.2.3.11</span>#sec-%typedarray%.prototype.findindex %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.foreach\"><h1><span class=\"secnum\">22.2.3.12</span>#sec-%typedarray%.prototype.foreach %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.includes\"><h1><span class=\"secnum\">22.2.3.13</span>#sec-%typedarray%.prototype.includes %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.indexof\"><h1><span class=\"secnum\">22.2.3.14</span>#sec-%typedarray%.prototype.indexof %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.join\"><h1><span class=\"secnum\">22.2.3.15</span>#sec-%typedarray%.prototype.join %TypedArray%.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.keys\"><h1><span class=\"secnum\">22.2.3.16</span>#sec-%typedarray%.prototype.keys %TypedArray%.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.lastindexof\"><h1><span class=\"secnum\">22.2.3.17</span>#sec-%typedarray%.prototype.lastindexof %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.length\"><h1><span class=\"secnum\">22.2.3.18</span>#sec-get-%typedarray%.prototype.length get %TypedArray%.prototype.length</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.map\"><h1><span class=\"secnum\">22.2.3.19</span>#sec-%typedarray%.prototype.map %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduce\"><h1><span class=\"secnum\">22.2.3.20</span>#sec-%typedarray%.prototype.reduce %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduceright\"><h1><span class=\"secnum\">22.2.3.21</span>#sec-%typedarray%.prototype.reduceright %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reverse\"><h1><span class=\"secnum\">22.2.3.22</span>#sec-%typedarray%.prototype.reverse %TypedArray%.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set-overloaded-offset\"><h1><span class=\"secnum\">22.2.3.23</span>#sec-%typedarray%.prototype.set-overloaded-offset %TypedArray%.prototype.set ( overloaded [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.slice\"><h1><span class=\"secnum\">22.2.3.24</span>#sec-%typedarray%.prototype.slice %TypedArray%.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.some\"><h1><span class=\"secnum\">22.2.3.25</span>#sec-%typedarray%.prototype.some %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.sort\"><h1><span class=\"secnum\">22.2.3.26</span>#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.subarray\"><h1><span class=\"secnum\">22.2.3.27</span>#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tolocalestring\"><h1><span class=\"secnum\">22.2.3.28</span>#sec-%typedarray%.prototype.tolocalestring %TypedArray%.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tostring\"><h1><span class=\"secnum\">22.2.3.29</span>#sec-%typedarray%.prototype.tostring %TypedArray%.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.values\"><h1><span class=\"secnum\">22.2.3.30</span>#sec-%typedarray%.prototype.values %TypedArray%.prototype.values ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype-@@iterator\"><h1><span class=\"secnum\">22.2.3.31</span>#sec-%typedarray%.prototype-@@iterator %TypedArray%.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype-@@tostringtag\"><h1><span class=\"secnum\">22.2.3.32</span>#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype-@@iterator": {"num": "21.1.3.32", "title": "#sec-string.prototype-@@iterator String.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-string.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype-@@iterator\">#sec-string.prototype-@@iterator</span> String.prototype [ @@iterator ] ( )</h1>\n        <p>When the <code>@@iterator</code> method is called it returns an Iterator object (<emu-xref href=\"#sec-iterator-interface\"><a href=\"#sec-iterator-interface\" class=\"excluded-xref\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</a></emu-xref>) that iterates over the code points of a String value, returning each code point as a String value. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Return <emu-xref aoid=\"CreateStringIterator\"><a href=\"#sec-createstringiterator\">CreateStringIterator</a></emu-xref>(<var>S</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.iterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-symbol.replace": {"num": "19.4.2.10", "title": "#sec-symbol.replace Symbol.replace", "html": "<emu-clause id=\"sec-symbol.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.replace\">#sec-symbol.replace</span> Symbol.replace</h1>\n        <p>The initial value of <code>Symbol.replace</code> is the well-known symbol @@replace (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-arraybuffer-prototype-object": {"num": "24.1.4", "title": "#sec-properties-of-the-arraybuffer-prototype-object Properties of the ArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-arraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-arraybuffer-prototype-object\">#sec-properties-of-the-arraybuffer-prototype-object</span> Properties of the ArrayBuffer Prototype Object</h1>\n      <p>The ArrayBuffer prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayBufferPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-arraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.1.4.1</span>#sec-get-arraybuffer.prototype.bytelength get ArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.1.4.2</span>#sec-arraybuffer.prototype.constructor ArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.1.4.3</span>#sec-arraybuffer.prototype.slice ArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.1.4.4</span>#sec-arraybuffer.prototype-@@tostringtag ArrayBuffer.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-createunmappedargumentsobject": {"num": "9.4.4.6", "title": "#sec-createunmappedargumentsobject CreateUnmappedArgumentsObject ( argumentsList )", "html": "<emu-clause id=\"sec-createunmappedargumentsobject\" aoid=\"CreateUnmappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</span> CreateUnmappedArgumentsObject ( <var>argumentsList</var> )</h1>\n        <p>The abstract operation CreateUnmappedArgumentsObject takes argument <var>argumentsList</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%, &#171; [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[ParameterMap]] to <emu-val>undefined</emu-val>.</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, @@iterator, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Get]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Set]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>obj</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-string.prototype.match": {"num": "21.1.3.11", "title": "#sec-string.prototype.match String.prototype.match ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.match\">#sec-string.prototype.match</span> String.prototype.match ( <var>regexp</var> )</h1>\n        <p>When the <code>match</code> method is called with argument <var>regexp</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, @@match).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>undefined</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, @@match, &#171; <var>S</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>match</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-symbol.iterator": {"num": "19.4.2.5", "title": "#sec-symbol.iterator Symbol.iterator", "html": "<emu-clause id=\"sec-symbol.iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.iterator\">#sec-symbol.iterator</span> Symbol.iterator</h1>\n        <p>The initial value of <code>Symbol.iterator</code> is the well-known symbol @@iterator (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-array.prototype-@@unscopables": {"num": "22.1.3.34", "title": "#sec-array.prototype-@@unscopables Array.prototype [ @@unscopables ]", "html": "<emu-clause id=\"sec-array.prototype-@@unscopables\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype-@@unscopables\">#sec-array.prototype-@@unscopables</span> Array.prototype [ @@unscopables ]</h1>\n        <p>The initial value of the @@unscopables <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is an object created by the following steps:</p>\n        <emu-alg><ol><li>Let <var>unscopableList</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"copyWithin\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"entries\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"fill\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"find\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"findIndex\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"flat\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"flatMap\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"includes\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"keys\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"values\"</emu-val>, <emu-val>true</emu-val>).</li><li>Return <var>unscopableList</var>.\n        </li></ol></emu-alg>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The own property names of this object are property names that were not included as standard properties of <code>Array.prototype</code> prior to the ECMAScript 2015 specification. These names are ignored for <code>with</code> statement binding purposes in order to preserve the behaviour of existing code that might use one of these names as a binding in an outer scope that is shadowed by a <code>with</code> statement whose binding object is an Array object.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-regexp.prototype-@@search": {"num": "21.2.5.11", "title": "#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )", "html": "<emu-clause id=\"sec-regexp.prototype-@@search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@search\">#sec-regexp.prototype-@@search</span> RegExp.prototype [ @@search ] ( <var>string</var> )</h1>\n        <p>When the <code>@@search</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>previousLastIndex</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>previousLastIndex</var>, 0) is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>Let <var>currentLastIndex</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>currentLastIndex</var>, <var>previousLastIndex</var>) is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <var>previousLastIndex</var>, <emu-val>true</emu-val>).</li></ol></li><li>If <var>result</var> is <emu-val>null</emu-val>, return -1.</li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"index\"</emu-val>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.search]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <emu-val>\"lastIndex\"</emu-val> and <emu-val>\"global\"</emu-val> properties of this RegExp object are ignored when performing the search. The <emu-val>\"lastIndex\"</emu-val> property is left unchanged.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-function.prototype-@@hasinstance": {"num": "19.2.3.6", "title": "#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )", "html": "<emu-clause id=\"sec-function.prototype-@@hasinstance\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype-@@hasinstance\">#sec-function.prototype-@@hasinstance</span> Function.prototype [ @@hasInstance ] ( <var>V</var> )</h1>\n        <p>When the <code>@@hasInstance</code> method of an object <var>F</var> is called with value <var>V</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>F</var> be the <emu-val>this</emu-val> value.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>F</var>, <var>V</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.hasInstance]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This is the default implementation of <code>@@hasInstance</code> that most functions inherit. <code>@@hasInstance</code> is called by the <code>instanceof</code> operator to determine whether a value is an instance of a specific <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. An expression such as</p>\n          <pre><code class=\"javascript hljs\">v <span class=\"hljs-keyword\">instanceof</span> F</code></pre>\n          <p>evaluates as</p>\n          <pre><code class=\"javascript hljs\">F[@@hasInstance](v)</code></pre>\n          <p>A <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function can control which objects are recognized as its instances by <code>instanceof</code> by exposing a different <code>@@hasInstance</code> method on the function.</p>\n        </div></emu-note>\n        <p>This property is non-writable and non-configurable to prevent tampering that could be used to globally expose the target function of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref>.</p>\n      </emu-clause>\n    "}, "sec-%setiteratorprototype%-@@tostringtag": {"num": "23.2.5.2.2", "title": "#sec-%setiteratorprototype%-@@tostringtag %SetIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%setiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%-@@tostringtag\">#sec-%setiteratorprototype%-@@tostringtag</span> %SetIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Set Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-arrayspeciescreate": {"num": "9.4.2.3", "title": "#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )", "html": "<emu-clause id=\"sec-arrayspeciescreate\" aoid=\"ArraySpeciesCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrayspeciescreate\">#sec-arrayspeciescreate</span> ArraySpeciesCreate ( <var>originalArray</var>, <var>length</var> )</h1>\n        <p>The abstract operation ArraySpeciesCreate takes arguments <var>originalArray</var> and <var>length</var>. It is used to specify the creation of a new Array object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>originalArray</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsNonNegativeInteger\"><a href=\"#sec-isnonnegativeinteger\">IsNonNegativeInteger</a></emu-xref>(<var>length</var>) is <emu-val>true</emu-val>.</li><li>If <var>length</var> is <emu-val>-0</emu-val>, set <var>length</var> to <emu-val>+0</emu-val>.</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>originalArray</var>).</li><li>If <var>isArray</var> is <emu-val>false</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>originalArray</var>, <emu-val>\"constructor\"</emu-val>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>thisRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>realmC</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>C</var>).</li><li>If <var>thisRealm</var> and <var>realmC</var> are not the same <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>C</var>, <var>realmC</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>]]) is <emu-val>true</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is Object, then<ol><li>Set <var>C</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, @@species).</li><li>If <var>C</var> is <emu-val>null</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>length</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If <var>originalArray</var> was created using the standard built-in Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> that is not the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, then a new Array is created using the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. This maintains compatibility with Web browsers that have historically had that behaviour for the <code>Array.prototype</code> methods that now are defined using ArraySpeciesCreate.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-get-set-@@species": {"num": "23.2.2.2", "title": "#sec-get-set-@@species get Set [ @@species ]", "html": "<emu-clause id=\"sec-get-set-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-set-@@species\">#sec-get-set-@@species</span> get Set [ @@species ]</h1>\n        <p><code>Set[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Methods that create derived collection objects should call @@species to determine the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use to create the derived objects. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride @@species to change the default <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> assignment.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-value-properties-of-the-math-object": {"num": "20.3.1", "title": "#sec-value-properties-of-the-math-object Value Properties of the Math Object", "html": "<emu-clause id=\"sec-value-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-value-properties-of-the-math-object\">#sec-value-properties-of-the-math-object</span> Value Properties of the Math Object</h1>\n\n      <div id=\"excluded-sec-math.e\"><h1><span class=\"secnum\">20.3.1.1</span>#sec-math.e Math.E</h1>...</div><div id=\"excluded-sec-math.ln10\"><h1><span class=\"secnum\">20.3.1.2</span>#sec-math.ln10 Math.LN10</h1>...</div><div id=\"excluded-sec-math.ln2\"><h1><span class=\"secnum\">20.3.1.3</span>#sec-math.ln2 Math.LN2</h1>...</div><div id=\"excluded-sec-math.log10e\"><h1><span class=\"secnum\">20.3.1.4</span>#sec-math.log10e Math.LOG10E</h1>...</div><div id=\"excluded-sec-math.log2e\"><h1><span class=\"secnum\">20.3.1.5</span>#sec-math.log2e Math.LOG2E</h1>...</div><div id=\"excluded-sec-math.pi\"><h1><span class=\"secnum\">20.3.1.6</span>#sec-math.pi Math.PI</h1>...</div><div id=\"excluded-sec-math.sqrt1_2\"><h1><span class=\"secnum\">20.3.1.7</span>#sec-math.sqrt1_2 Math.SQRT1_2</h1>...</div><div id=\"excluded-sec-math.sqrt2\"><h1><span class=\"secnum\">20.3.1.8</span>#sec-math.sqrt2 Math.SQRT2</h1>...</div><div id=\"excluded-sec-math-@@tostringtag\"><h1><span class=\"secnum\">20.3.1.9</span>#sec-math-@@tostringtag Math [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-regexp.prototype-@@replace": {"num": "21.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val><ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String value.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each <var>result</var> in <var>results</var>, do<ol><li>Let <var>nCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Set <var>nCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>nCaptures</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"index\"</emu-val>)).</li><li>Set <var>position</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>position</var>, <var>lengthS</var>), 0).</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var><ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>)).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"groups\"</emu-val>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in list order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <var>position</var> and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>namedCaptures</var> to ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>namedCaptures</var>).</li></ol></li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the current value of <var>accumulatedResult</var>, the substring of <var>S</var> consisting of the code units from <var>nextSourcePosition</var> (inclusive) up to <var>position</var> (exclusive), and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the substring of <var>S</var> consisting of the code units from <var>nextSourcePosition</var> (inclusive) up through the final code unit of <var>S</var> (inclusive).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.replace]\"</emu-val>.</p>\n      </emu-clause>\n\n      "}, "sec-typedarray-object": {"num": "22.2.4.4", "title": "#sec-typedarray-object TypedArray ( object )", "html": "<emu-clause id=\"sec-typedarray-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-object\">#sec-typedarray-object</span> <var>TypedArray</var> ( <var>object</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object does not have either a [[TypedArrayName]] or an [[ArrayBufferData]] internal slot.</p>\n        <p><var>TypedArray</var> called with argument <var>object</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>object</var>) is Object and <var>object</var> does not have either a [[TypedArrayName]] or an [[ArrayBufferData]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>object</var>, @@iterator).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>values</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>object</var>, <var>usingIterator</var>).</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <var>O</var>.</li></ol></li><li>NOTE: <var>object</var> is not an Iterable so assume it is already an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be <var>object</var>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref> (the <code>AsyncGeneratorFunction.prototype</code>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-sharedarraybuffer.prototype.toString": {"num": "24.2.4.4", "title": "#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-sharedarraybuffer.prototype.toString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer.prototype.toString\">#sec-sharedarraybuffer.prototype.toString</span> SharedArrayBuffer.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"SharedArrayBuffer\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-symbol.hasinstance": {"num": "19.4.2.3", "title": "#sec-symbol.hasinstance Symbol.hasInstance", "html": "<emu-clause id=\"sec-symbol.hasinstance\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.hasinstance\">#sec-symbol.hasinstance</span> Symbol.hasInstance</h1>\n        <p>The initial value of <code>Symbol.hasInstance</code> is the well-known symbol @@hasInstance (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-get-%typedarray%-@@species": {"num": "22.2.2.4", "title": "#sec-get-%typedarray%-@@species get %TypedArray% [ @@species ]", "html": "<emu-clause id=\"sec-get-%typedarray%-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-%typedarray%-@@species\">#sec-get-%typedarray%-@@species</span> get %TypedArray% [ @@species ]</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref> methods normally use their <emu-val>this</emu-val> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-dataview.prototype-@@tostringtag": {"num": "24.3.4.25", "title": "#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-dataview.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview.prototype-@@tostringtag\">#sec-dataview.prototype-@@tostringtag</span> DataView.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"DataView\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-asynciteratorprototype-asynciterator": {"num": "25.1.3.1", "title": "#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )", "html": "<emu-clause id=\"sec-asynciteratorprototype-asynciterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype-asynciterator\">#sec-asynciteratorprototype-asynciterator</span> %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.asyncIterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-string-prototype-object": {"num": "21.1.3", "title": "#sec-properties-of-the-string-prototype-object Properties of the String Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-string-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-string-prototype-object\">#sec-properties-of-the-string-prototype-object</span> Properties of the String Prototype Object</h1>\n      <p>The String prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%StringPrototype%</dfn>.</li>\n        <li>is a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a [[StringData]] internal slot whose value is the empty String.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly stated otherwise, the methods of the String prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be either a String value or an object that has a [[StringData]] internal slot that has been initialized to a String value.</p>\n      <p>The abstract operation  <dfn id=\"sec-thisstringvalue\" aoid=\"thisStringValue\">thisStringValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is String, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[StringData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is String.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n\n      <div id=\"excluded-sec-string.prototype.charat\"><h1><span class=\"secnum\">21.1.3.1</span>#sec-string.prototype.charat String.prototype.charAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.charcodeat\"><h1><span class=\"secnum\">21.1.3.2</span>#sec-string.prototype.charcodeat String.prototype.charCodeAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.codepointat\"><h1><span class=\"secnum\">21.1.3.3</span>#sec-string.prototype.codepointat String.prototype.codePointAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.concat\"><h1><span class=\"secnum\">21.1.3.4</span>#sec-string.prototype.concat String.prototype.concat ( ...args )</h1>...</div><div id=\"excluded-sec-string.prototype.constructor\"><h1><span class=\"secnum\">21.1.3.5</span>#sec-string.prototype.constructor String.prototype.constructor</h1>...</div><div id=\"excluded-sec-string.prototype.endswith\"><h1><span class=\"secnum\">21.1.3.6</span>#sec-string.prototype.endswith String.prototype.endsWith ( searchString [ , endPosition ] )</h1>...</div><div id=\"excluded-sec-string.prototype.includes\"><h1><span class=\"secnum\">21.1.3.7</span>#sec-string.prototype.includes String.prototype.includes ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.indexof\"><h1><span class=\"secnum\">21.1.3.8</span>#sec-string.prototype.indexof String.prototype.indexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.lastindexof\"><h1><span class=\"secnum\">21.1.3.9</span>#sec-string.prototype.lastindexof String.prototype.lastIndexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.localecompare\"><h1><span class=\"secnum\">21.1.3.10</span>#sec-string.prototype.localecompare String.prototype.localeCompare ( that [ , reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.match\"><h1><span class=\"secnum\">21.1.3.11</span>#sec-string.prototype.match String.prototype.match ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.matchall\"><h1><span class=\"secnum\">21.1.3.12</span>#sec-string.prototype.matchall String.prototype.matchAll ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.normalize\"><h1><span class=\"secnum\">21.1.3.13</span>#sec-string.prototype.normalize String.prototype.normalize ( [ form ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padend\"><h1><span class=\"secnum\">21.1.3.14</span>#sec-string.prototype.padend String.prototype.padEnd ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padstart\"><h1><span class=\"secnum\">21.1.3.15</span>#sec-string.prototype.padstart String.prototype.padStart ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.repeat\"><h1><span class=\"secnum\">21.1.3.16</span>#sec-string.prototype.repeat String.prototype.repeat ( count )</h1>...</div><div id=\"excluded-sec-string.prototype.replace\"><h1><span class=\"secnum\">21.1.3.17</span>#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )</h1>...</div><div id=\"excluded-sec-string.prototype.search\"><h1><span class=\"secnum\">21.1.3.18</span>#sec-string.prototype.search String.prototype.search ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.slice\"><h1><span class=\"secnum\">21.1.3.19</span>#sec-string.prototype.slice String.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.split\"><h1><span class=\"secnum\">21.1.3.20</span>#sec-string.prototype.split String.prototype.split ( separator, limit )</h1>...</div><div id=\"excluded-sec-string.prototype.startswith\"><h1><span class=\"secnum\">21.1.3.21</span>#sec-string.prototype.startswith String.prototype.startsWith ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.substring\"><h1><span class=\"secnum\">21.1.3.22</span>#sec-string.prototype.substring String.prototype.substring ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocalelowercase\"><h1><span class=\"secnum\">21.1.3.23</span>#sec-string.prototype.tolocalelowercase String.prototype.toLocaleLowerCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocaleuppercase\"><h1><span class=\"secnum\">21.1.3.24</span>#sec-string.prototype.tolocaleuppercase String.prototype.toLocaleUpperCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolowercase\"><h1><span class=\"secnum\">21.1.3.25</span>#sec-string.prototype.tolowercase String.prototype.toLowerCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.tostring\"><h1><span class=\"secnum\">21.1.3.26</span>#sec-string.prototype.tostring String.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-string.prototype.touppercase\"><h1><span class=\"secnum\">21.1.3.27</span>#sec-string.prototype.touppercase String.prototype.toUpperCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trim\"><h1><span class=\"secnum\">21.1.3.28</span>#sec-string.prototype.trim String.prototype.trim ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimend\"><h1><span class=\"secnum\">21.1.3.29</span>#sec-string.prototype.trimend String.prototype.trimEnd ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimstart\"><h1><span class=\"secnum\">21.1.3.30</span>#sec-string.prototype.trimstart String.prototype.trimStart ( )</h1>...</div><div id=\"excluded-sec-string.prototype.valueof\"><h1><span class=\"secnum\">21.1.3.31</span>#sec-string.prototype.valueof String.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-string.prototype-@@iterator\"><h1><span class=\"secnum\">21.1.3.32</span>#sec-string.prototype-@@iterator String.prototype [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.prototype-@@tostringtag": {"num": "25.6.5.5", "title": "#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-promise.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype-@@tostringtag\">#sec-promise.prototype-@@tostringtag</span> Promise.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Promise\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-module-namespace-objects": {"num": "26.3", "title": "#sec-module-namespace-objects Module Namespace Objects", "html": "<emu-clause id=\"sec-module-namespace-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</span> Module Namespace Objects</h1>\n    <p>A Module Namespace Object is a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> that provides runtime property-based access to a module's exported bindings. There is no <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function for Module Namespace Objects. Instead, such an object is created for each module that is imported by an <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> that includes a <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</p>\n    <p>In addition to the properties specified in  <emu-xref href=\"#sec-module-namespace-exotic-objects\"><a href=\"#sec-module-namespace-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-exotic-objects\">#sec-module-namespace-exotic-objects</a></emu-xref> each Module Namespace Object has the following own property:</p>\n\n    <div id=\"excluded-sec-@@tostringtag\"><h1><span class=\"secnum\">26.3.1</span>#sec-@@tostringtag @@toStringTag</h1>...</div></emu-clause>\n"}, "sec-symbol.asynciterator": {"num": "19.4.2.1", "title": "#sec-symbol.asynciterator Symbol.asyncIterator", "html": "<emu-clause id=\"sec-symbol.asynciterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.asynciterator\">#sec-symbol.asynciterator</span> Symbol.asyncIterator</h1>\n        <p>The initial value of <code>Symbol.asyncIterator</code> is the well known symbol @@asyncIterator (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-array-constructor": {"num": "22.1.2", "title": "#sec-properties-of-the-array-constructor Properties of the Array Constructor", "html": "<emu-clause id=\"sec-properties-of-the-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-array-constructor\">#sec-properties-of-the-array-constructor</span> Properties of the Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-array.from\"><h1><span class=\"secnum\">22.1.2.1</span>#sec-array.from Array.from ( items [ , mapfn [ , thisArg ] ] )</h1>...</div><div id=\"excluded-sec-array.isarray\"><h1><span class=\"secnum\">22.1.2.2</span>#sec-array.isarray Array.isArray ( arg )</h1>...</div><div id=\"excluded-sec-array.of\"><h1><span class=\"secnum\">22.1.2.3</span>#sec-array.of Array.of ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype\"><h1><span class=\"secnum\">22.1.2.4</span>#sec-array.prototype Array.prototype</h1>...</div><div id=\"excluded-sec-get-array-@@species\"><h1><span class=\"secnum\">22.1.2.5</span>#sec-get-array-@@species get Array [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-%arrayiteratorprototype%-object": {"num": "22.1.5.2", "title": "#sec-%arrayiteratorprototype%-object The %ArrayIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%-object\">#sec-%arrayiteratorprototype%-object</span> The %ArrayIteratorPrototype% Object</h1>\n        <p>The  <dfn>%ArrayIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Array Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%arrayiteratorprototype%.next\"><h1><span class=\"secnum\">22.1.5.2.1</span>#sec-%arrayiteratorprototype%.next %ArrayIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%arrayiteratorprototype%-@@tostringtag\"><h1><span class=\"secnum\">22.1.5.2.2</span>#sec-%arrayiteratorprototype%-@@tostringtag %ArrayIteratorPrototype% [ @@toStringTag ]</h1>...</div></emu-clause>\n\n      "}, "sec-@@tostringtag": {"num": "26.3.1", "title": "#sec-@@tostringtag @@toStringTag", "html": "<emu-clause id=\"sec-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-@@tostringtag\">#sec-@@tostringtag</span> @@toStringTag</h1>\n      <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Module\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-symbol.toprimitive": {"num": "19.4.2.14", "title": "#sec-symbol.toprimitive Symbol.toPrimitive", "html": "<emu-clause id=\"sec-symbol.toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.toprimitive\">#sec-symbol.toprimitive</span> Symbol.toPrimitive</h1>\n        <p>The initial value of <code>Symbol.toPrimitive</code> is the well-known symbol @@toPrimitive (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-get-promise-@@species": {"num": "25.6.4.7", "title": "#sec-get-promise-@@species get Promise [ @@species ]", "html": "<emu-clause id=\"sec-get-promise-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-promise-@@species\">#sec-get-promise-@@species</span> get Promise [ @@species ]</h1>\n        <p><code>Promise[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Promise prototype methods normally use their <emu-val>this</emu-val> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-asyncgeneratorfunction-prototype-tostringtag": {"num": "25.3.3.3", "title": "#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">#sec-asyncgeneratorfunction-prototype-tostringtag</span> AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-set-prototype-object": {"num": "23.2.3", "title": "#sec-properties-of-the-set-prototype-object Properties of the Set Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-set-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-set-prototype-object\">#sec-properties-of-the-set-prototype-object</span> Properties of the Set Prototype Object</h1>\n      <p>The Set prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SetPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[SetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set.prototype.add\"><h1><span class=\"secnum\">23.2.3.1</span>#sec-set.prototype.add Set.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.clear\"><h1><span class=\"secnum\">23.2.3.2</span>#sec-set.prototype.clear Set.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-set.prototype.constructor\"><h1><span class=\"secnum\">23.2.3.3</span>#sec-set.prototype.constructor Set.prototype.constructor</h1>...</div><div id=\"excluded-sec-set.prototype.delete\"><h1><span class=\"secnum\">23.2.3.4</span>#sec-set.prototype.delete Set.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.entries\"><h1><span class=\"secnum\">23.2.3.5</span>#sec-set.prototype.entries Set.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-set.prototype.foreach\"><h1><span class=\"secnum\">23.2.3.6</span>#sec-set.prototype.foreach Set.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-set.prototype.has\"><h1><span class=\"secnum\">23.2.3.7</span>#sec-set.prototype.has Set.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.keys\"><h1><span class=\"secnum\">23.2.3.8</span>#sec-set.prototype.keys Set.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-get-set.prototype.size\"><h1><span class=\"secnum\">23.2.3.9</span>#sec-get-set.prototype.size get Set.prototype.size</h1>...</div><div id=\"excluded-sec-set.prototype.values\"><h1><span class=\"secnum\">23.2.3.10</span>#sec-set.prototype.values Set.prototype.values ( )</h1>...</div><div id=\"excluded-sec-set.prototype-@@iterator\"><h1><span class=\"secnum\">23.2.3.11</span>#sec-set.prototype-@@iterator Set.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-set.prototype-@@tostringtag\"><h1><span class=\"secnum\">23.2.3.12</span>#sec-set.prototype-@@tostringtag Set.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-json-@@tostringtag": {"num": "24.5.3", "title": "#sec-json-@@tostringtag JSON [ @@toStringTag ]", "html": "<emu-clause id=\"sec-json-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-@@tostringtag\">#sec-json-@@tostringtag</span> JSON [ @@toStringTag ]</h1>\n      <p>The initial value of the @@toStringTag property is the String value <emu-val>\"JSON\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-properties-of-the-promise-constructor": {"num": "25.6.4", "title": "#sec-properties-of-the-promise-constructor Properties of the Promise Constructor", "html": "<emu-clause id=\"sec-properties-of-the-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-constructor\">#sec-properties-of-the-promise-constructor</span> Properties of the Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.all\"><h1><span class=\"secnum\">25.6.4.1</span>#sec-promise.all Promise.all ( iterable )</h1>...</div><div id=\"excluded-sec-promise.allsettled\"><h1><span class=\"secnum\">25.6.4.2</span>#sec-promise.allsettled Promise.allSettled ( iterable )</h1>...</div><div id=\"excluded-sec-promise.prototype\"><h1><span class=\"secnum\">25.6.4.3</span>#sec-promise.prototype Promise.prototype</h1>...</div><div id=\"excluded-sec-promise.race\"><h1><span class=\"secnum\">25.6.4.4</span>#sec-promise.race Promise.race ( iterable )</h1>...</div><div id=\"excluded-sec-promise.reject\"><h1><span class=\"secnum\">25.6.4.5</span>#sec-promise.reject Promise.reject ( r )</h1>...</div><div id=\"excluded-sec-promise.resolve\"><h1><span class=\"secnum\">25.6.4.6</span>#sec-promise.resolve Promise.resolve ( x )</h1>...</div><div id=\"excluded-sec-get-promise-@@species\"><h1><span class=\"secnum\">25.6.4.7</span>#sec-get-promise-@@species get Promise [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-arraybuffer.prototype-@@tostringtag": {"num": "24.1.4.4", "title": "#sec-arraybuffer.prototype-@@tostringtag ArrayBuffer.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-arraybuffer.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer.prototype-@@tostringtag\">#sec-arraybuffer.prototype-@@tostringtag</span> ArrayBuffer.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"ArrayBuffer\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-instanceofoperator": {"num": "12.10.4", "title": "#sec-instanceofoperator Runtime Semantics: InstanceofOperator ( V, target )", "html": "<emu-clause id=\"sec-instanceofoperator\" aoid=\"InstanceofOperator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-instanceofoperator\">#sec-instanceofoperator</span> Runtime Semantics: InstanceofOperator ( <var>V</var>, <var>target</var> )</h1>\n      <p>The abstract operation InstanceofOperator takes arguments <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>target</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It implements the generic algorithm for determining if <var>V</var> is an instance of <var>target</var> either by consulting <var>target</var>'s @@hasInstance method or, if absent, determining whether the value of <var>target</var>'s <emu-val>\"prototype\"</emu-val> property is present in <var>V</var>'s prototype chain. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>instOfHandler</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>target</var>, @@hasInstance).</li><li>If <var>instOfHandler</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>instOfHandler</var>, <var>target</var>, &#171; <var>V</var> &#187;)).</li></ol></li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>target</var>, <var>V</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Steps 4 and 5 provide compatibility with previous editions of ECMAScript that did not use a @@hasInstance method to define the <code>instanceof</code> operator semantics. If an object does not define or inherit @@hasInstance it uses the default <code>instanceof</code> semantics.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-regexp.prototype-@@split": {"num": "21.2.5.13", "title": "#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )", "html": "<emu-clause id=\"sec-regexp.prototype-@@split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@split\">#sec-regexp.prototype-@@split</span> RegExp.prototype [ @@split ] ( <var>string</var>, <var>limit</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Returns an Array object into which substrings of the result of converting <var>string</var> to a String have been stored. The substrings are determined by searching from left to right for matches of the <emu-val>this</emu-val> value regular expression; these occurrences are not part of any substring in the returned array, but serve to divide up the String value.</p>\n          <p>The <emu-val>this</emu-val> value may be an empty regular expression or a regular expression that can match an empty String. In this case, the regular expression does not match the empty substring at the beginning or end of the input String, nor does it match the empty substring at the end of the previous separator match. (For example, if the regular expression matches the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each substring contains one code unit.) Only the first match at a given index of the String is considered, even if backtracking could yield a non-empty-substring match at that index. (For example, <code>/a*?/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"a\", \"b\"]</code>, while <code>/a*/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"\",\"b\"]</code>.)</p>\n          <p>If the <var>string</var> is (or converts to) the empty String, the result depends on whether the regular expression can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If the regular expression contains capturing parentheses, then each time <var>separator</var> is matched the results (including any <emu-val>undefined</emu-val> results) of the capturing parentheses are spliced into the output array. For example,</p>\n          <pre><code class=\"javascript hljs\">/&lt;(\\/)?([^<span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>]+)&gt;/[Symbol.split](\"A<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">B</span>&gt;</span>bold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">B</span>&gt;</span>and<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CODE</span>&gt;</span>coded<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">CODE</span>&gt;</span>\")</span></code></pre>\n          <p>evaluates to the array</p>\n          <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"bold\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"and\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"coded\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"\"</span>]</code></pre>\n          <p>If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <p>When the <code>@@split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"flags\"</emu-val>)).</li><li>If <var>flags</var> contains <emu-val>\"u\"</emu-val>, let <var>unicodeMatching</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>unicodeMatching</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <emu-val>\"y\"</emu-val>, let <var>newFlags</var> be <var>flags</var>.</li><li>Else, let <var>newFlags</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>flags</var> and <emu-val>\"y\"</emu-val>.</li><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>rx</var>, <var>newFlags</var> &#187;).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>).</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>Let <var>size</var> be the length of <var>S</var>.</li><li>If <var>size</var> = 0, then<ol><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is not <emu-val>null</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &lt; <var>size</var><ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>splitter</var>, <emu-val>\"lastIndex\"</emu-val>, <var>q</var>, <emu-val>true</emu-val>).</li><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is <emu-val>null</emu-val>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>e</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>splitter</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Set <var>e</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>size</var>).</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>q</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Let <var>numberOfCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>z</var>).</li><li>Set <var>numberOfCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>numberOfCaptures</var> - 1, 0).</li><li>Let <var>i</var> be 1.</li><li>Repeat, while <var>i</var> &#8804; <var>numberOfCaptures</var>,<ol><li>Let <var>nextCapture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>z</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>i</var>)).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>nextCapture</var>).</li><li>Set <var>i</var> to <var>i</var> + 1.</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li></ol></li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>size</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.split]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>@@split</code> method ignores the value of the <emu-val>\"global\"</emu-val> and <emu-val>\"sticky\"</emu-val> properties of this RegExp object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-add-entries-from-iterable": {"num": "23.1.1.2", "title": "#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )", "html": "<emu-clause id=\"sec-add-entries-from-iterable\" aoid=\"AddEntriesFromIterable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-add-entries-from-iterable\">#sec-add-entries-from-iterable</span> AddEntriesFromIterable ( <var>target</var>, <var>iterable</var>, <var>adder</var> )</h1>\n        <p>The abstract operation AddEntriesFromIterable takes arguments <var>target</var>, <var>iterable</var>, and <var>adder</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>). <var>adder</var> will be invoked, with <var>target</var> as the receiver. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>adder</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>iterable</var> is present, and is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>.</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>target</var>.</li><li>Let <var>nextItem</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nextItem</var>) is not Object, then<ol><li>Let <var>error</var> be <emu-xref aoid=\"ThrowCompletion\"><a href=\"#sec-throwcompletion\">ThrowCompletion</a></emu-xref>(a newly created <emu-val>TypeError</emu-val> object).</li><li>Return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>error</var>).</li></ol></li><li>Let <var>k</var> be <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>nextItem</var>, <emu-val>\"0\"</emu-val>).</li><li>If <var>k</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>k</var>).</li><li>Let <var>v</var> be <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>nextItem</var>, <emu-val>\"1\"</emu-val>).</li><li>If <var>v</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>v</var>).</li><li>Let <var>status</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>adder</var>, <var>target</var>, &#171; <var>k</var>.[[Value]], <var>v</var>.[[Value]] &#187;).</li><li>If <var>status</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>status</var>).\n        </li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The parameter <var>iterable</var> is expected to be an object that implements an @@iterator method that returns an iterator object that produces a two element <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> whose first element is a value that will be used as a Map key and whose second element is the value to associate with that key.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-createmappedargumentsobject": {"num": "9.4.4.7", "title": "#sec-createmappedargumentsobject CreateMappedArgumentsObject ( func, formals, argumentsList, env )", "html": "<emu-clause id=\"sec-createmappedargumentsobject\" aoid=\"CreateMappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createmappedargumentsobject\">#sec-createmappedargumentsobject</span> CreateMappedArgumentsObject ( <var>func</var>, <var>formals</var>, <var>argumentsList</var>, <var>env</var> )</h1>\n        <p>The abstract operation CreateMappedArgumentsObject takes arguments <var>func</var> (an Object), <var>formals</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>), and <var>env</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>formals</var> does not contain a rest parameter, any binding patterns, or any initializers. It may contain duplicate identifiers.</li><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]], [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[GetOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-getownproperty-p\"><a href=\"#sec-arguments-exotic-objects-getownproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-getownproperty-p\">#sec-arguments-exotic-objects-getownproperty-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">#sec-arguments-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Set <var>obj</var>.[[Get]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-get-p-receiver\"><a href=\"#sec-arguments-exotic-objects-get-p-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-get-p-receiver\">#sec-arguments-exotic-objects-get-p-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Set]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-set-p-v-receiver\"><a href=\"#sec-arguments-exotic-objects-set-p-v-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-set-p-v-receiver\">#sec-arguments-exotic-objects-set-p-v-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Delete]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-delete-p\"><a href=\"#sec-arguments-exotic-objects-delete-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-delete-p\">#sec-arguments-exotic-objects-delete-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[Prototype]] to %Object.prototype%.</li><li>Let <var>map</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Set <var>obj</var>.[[ParameterMap]] to <var>map</var>.</li><li>Let <var>parameterNames</var> be the BoundNames of <var>formals</var>.</li><li>Let <var>numberOfParameters</var> be the number of elements in <var>parameterNames</var>.</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>mappedNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>index</var> be <var>numberOfParameters</var> - 1.</li><li>Repeat, while <var>index</var> &#8805; 0,<ol><li>Let <var>name</var> be <var>parameterNames</var>[<var>index</var>].</li><li>If <var>name</var> is not an element of <var>mappedNames</var>, then<ol><li>Add <var>name</var> as an element of the list <var>mappedNames</var>.</li><li>If <var>index</var> &lt; <var>len</var>, then<ol><li>Let <var>g</var> be <emu-xref aoid=\"MakeArgGetter\"><a href=\"#sec-makearggetter\">MakeArgGetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Let <var>p</var> be <emu-xref aoid=\"MakeArgSetter\"><a href=\"#sec-makeargsetter\">MakeArgSetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Perform <var>map</var>.[[DefineOwnProperty]](! <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), PropertyDescriptor { [[Set]]: <var>p</var>, [[Get]]: <var>g</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li></ol></li><li>Set <var>index</var> to <var>index</var> - 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, @@iterator, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Value]]: <var>func</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Return <var>obj</var>.\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-makearggetter\"><h1><span class=\"secnum\">9.4.4.7.1</span>#sec-makearggetter MakeArgGetter ( name, env )</h1>...</div><div id=\"excluded-sec-makeargsetter\"><h1><span class=\"secnum\">9.4.4.7.2</span>#sec-makeargsetter MakeArgSetter ( name, env )</h1>...</div></emu-clause>\n    "}, "sec-regexp.prototype-@@match": {"num": "21.2.5.7", "title": "#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )", "html": "<emu-clause id=\"sec-regexp.prototype-@@match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</span> RegExp.prototype [ @@match ] ( <var>string</var> )</h1>\n        <p>When the <code>@@match</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>false</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>global</var> is <emu-val>true</emu-val>.</li><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, 0, <emu-val>true</emu-val>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>Repeat,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, then<ol><li>If <var>n</var> = 0, return <emu-val>null</emu-val>.</li><li>Return <var>A</var>.</li></ol></li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>), <var>matchStr</var>).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>n</var> to <var>n</var> + 1.\n        </li></ol></li></ol></li></ol></li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.match]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The @@match property is used by the <emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref> abstract operation to identify objects that have the basic behaviour of regular expressions. The absence of a @@match property or the existence of such a property whose value does not Boolean coerce to <emu-val>true</emu-val> indicates that the object is not intended to be used as a regular expression object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-string.prototype.search": {"num": "21.1.3.18", "title": "#sec-string.prototype.search String.prototype.search ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.search\">#sec-string.prototype.search</span> String.prototype.search ( <var>regexp</var> )</h1>\n        <p>When the <code>search</code> method is called with argument <var>regexp</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>searcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, @@search).</li><li>If <var>searcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>searcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>undefined</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, @@search, &#171; <var>string</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>search</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-object-environment-records-hasbinding-n": {"num": "8.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasBinding for object Environment Records determines if its associated binding object has a property whose name is the value of the argument <var>N</var>:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, @@unscopables).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-the-arraybuffer-constructor": {"num": "24.1.3", "title": "#sec-properties-of-the-arraybuffer-constructor Properties of the ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-properties-of-the-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-arraybuffer-constructor\">#sec-properties-of-the-arraybuffer-constructor</span> Properties of the ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer.isview\"><h1><span class=\"secnum\">24.1.3.1</span>#sec-arraybuffer.isview ArrayBuffer.isView ( arg )</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype\"><h1><span class=\"secnum\">24.1.3.2</span>#sec-arraybuffer.prototype ArrayBuffer.prototype</h1>...</div><div id=\"excluded-sec-get-arraybuffer-@@species\"><h1><span class=\"secnum\">24.1.3.3</span>#sec-get-arraybuffer-@@species get ArrayBuffer [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-map-@@species": {"num": "23.1.2.2", "title": "#sec-get-map-@@species get Map [ @@species ]", "html": "<emu-clause id=\"sec-get-map-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-map-@@species\">#sec-get-map-@@species</span> get Map [ @@species ]</h1>\n        <p><code>Map[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Methods that create derived collection objects should call @@species to determine the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use to create the derived objects. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride @@species to change the default <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> assignment.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-math-@@tostringtag": {"num": "20.3.1.9", "title": "#sec-math-@@tostringtag Math [ @@toStringTag ]", "html": "<emu-clause id=\"sec-math-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-@@tostringtag\">#sec-math-@@tostringtag</span> Math [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Math\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-symbol.matchall": {"num": "19.4.2.8", "title": "#sec-symbol.matchall Symbol.matchAll", "html": "<emu-clause id=\"sec-symbol.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.matchall\">#sec-symbol.matchall</span> Symbol.matchAll</h1>\n        <p>The initial value of <code>Symbol.matchAll</code> is the well-known symbol @@matchAll (<emu-xref href=\"#table-2\"><a href=\"#table-2\" class=\"excluded-xref\" excluded-id=\"table-2\">#table-2</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-%typedarray%-intrinsic-object": {"num": "22.2.2", "title": "#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">#sec-properties-of-the-%typedarray%-intrinsic-object</span> Properties of the %TypedArray% Intrinsic Object</h1>\n      <p>The <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref> intrinsic object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"TypedArray\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-%typedarray%.from\"><h1><span class=\"secnum\">22.2.2.1</span>#sec-%typedarray%.from %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.of\"><h1><span class=\"secnum\">22.2.2.2</span>#sec-%typedarray%.of %TypedArray%.of ( ...items )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype\"><h1><span class=\"secnum\">22.2.2.3</span>#sec-%typedarray%.prototype %TypedArray%.prototype</h1>...</div><div id=\"excluded-sec-get-%typedarray%-@@species\"><h1><span class=\"secnum\">22.2.2.4</span>#sec-get-%typedarray%-@@species get %TypedArray% [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-date-prototype-object": {"num": "20.4.4", "title": "#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-date-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</span> Properties of the Date Prototype Object</h1>\n      <p>The Date prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DatePrototype%</dfn>.</li>\n        <li>is itself an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Date instance and does not have a [[DateValue]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly defined otherwise, the methods of the Date prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be an object that has a [[DateValue]] internal slot that has been initialized to a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>.</p>\n      <p>The abstract operation  <dfn id=\"sec-thistimevalue\" aoid=\"thisTimeValue\">thisTimeValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Return <var>value</var>.[[DateValue]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>In following descriptions of functions that are properties of the Date prototype object, the phrase &#8220;<dfn id=\"this-Date-object\">this Date object</dfn>&#8221; refers to the object that is the <emu-val>this</emu-val> value for the invocation of the function. If the Type of the <emu-val>this</emu-val> value is not Object, a <emu-val>TypeError</emu-val> exception is thrown. The phrase &#8220;<dfn id=\"this-time-value\">this time value</dfn>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thistimevalue\"><a href=\"#sec-thistimevalue\">thisTimeValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-date.prototype.constructor\"><h1><span class=\"secnum\">20.4.4.1</span>#sec-date.prototype.constructor Date.prototype.constructor</h1>...</div><div id=\"excluded-sec-date.prototype.getdate\"><h1><span class=\"secnum\">20.4.4.2</span>#sec-date.prototype.getdate Date.prototype.getDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getday\"><h1><span class=\"secnum\">20.4.4.3</span>#sec-date.prototype.getday Date.prototype.getDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getfullyear\"><h1><span class=\"secnum\">20.4.4.4</span>#sec-date.prototype.getfullyear Date.prototype.getFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gethours\"><h1><span class=\"secnum\">20.4.4.5</span>#sec-date.prototype.gethours Date.prototype.getHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmilliseconds\"><h1><span class=\"secnum\">20.4.4.6</span>#sec-date.prototype.getmilliseconds Date.prototype.getMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getminutes\"><h1><span class=\"secnum\">20.4.4.7</span>#sec-date.prototype.getminutes Date.prototype.getMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmonth\"><h1><span class=\"secnum\">20.4.4.8</span>#sec-date.prototype.getmonth Date.prototype.getMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getseconds\"><h1><span class=\"secnum\">20.4.4.9</span>#sec-date.prototype.getseconds Date.prototype.getSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettime\"><h1><span class=\"secnum\">20.4.4.10</span>#sec-date.prototype.gettime Date.prototype.getTime ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettimezoneoffset\"><h1><span class=\"secnum\">20.4.4.11</span>#sec-date.prototype.gettimezoneoffset Date.prototype.getTimezoneOffset ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcdate\"><h1><span class=\"secnum\">20.4.4.12</span>#sec-date.prototype.getutcdate Date.prototype.getUTCDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcday\"><h1><span class=\"secnum\">20.4.4.13</span>#sec-date.prototype.getutcday Date.prototype.getUTCDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcfullyear\"><h1><span class=\"secnum\">20.4.4.14</span>#sec-date.prototype.getutcfullyear Date.prototype.getUTCFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutchours\"><h1><span class=\"secnum\">20.4.4.15</span>#sec-date.prototype.getutchours Date.prototype.getUTCHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.16</span>#sec-date.prototype.getutcmilliseconds Date.prototype.getUTCMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcminutes\"><h1><span class=\"secnum\">20.4.4.17</span>#sec-date.prototype.getutcminutes Date.prototype.getUTCMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmonth\"><h1><span class=\"secnum\">20.4.4.18</span>#sec-date.prototype.getutcmonth Date.prototype.getUTCMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcseconds\"><h1><span class=\"secnum\">20.4.4.19</span>#sec-date.prototype.getutcseconds Date.prototype.getUTCSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.setdate\"><h1><span class=\"secnum\">20.4.4.20</span>#sec-date.prototype.setdate Date.prototype.setDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setfullyear\"><h1><span class=\"secnum\">20.4.4.21</span>#sec-date.prototype.setfullyear Date.prototype.setFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.sethours\"><h1><span class=\"secnum\">20.4.4.22</span>#sec-date.prototype.sethours Date.prototype.setHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmilliseconds\"><h1><span class=\"secnum\">20.4.4.23</span>#sec-date.prototype.setmilliseconds Date.prototype.setMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setminutes\"><h1><span class=\"secnum\">20.4.4.24</span>#sec-date.prototype.setminutes Date.prototype.setMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmonth\"><h1><span class=\"secnum\">20.4.4.25</span>#sec-date.prototype.setmonth Date.prototype.setMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setseconds\"><h1><span class=\"secnum\">20.4.4.26</span>#sec-date.prototype.setseconds Date.prototype.setSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.settime\"><h1><span class=\"secnum\">20.4.4.27</span>#sec-date.prototype.settime Date.prototype.setTime ( time )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcdate\"><h1><span class=\"secnum\">20.4.4.28</span>#sec-date.prototype.setutcdate Date.prototype.setUTCDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcfullyear\"><h1><span class=\"secnum\">20.4.4.29</span>#sec-date.prototype.setutcfullyear Date.prototype.setUTCFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutchours\"><h1><span class=\"secnum\">20.4.4.30</span>#sec-date.prototype.setutchours Date.prototype.setUTCHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.31</span>#sec-date.prototype.setutcmilliseconds Date.prototype.setUTCMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcminutes\"><h1><span class=\"secnum\">20.4.4.32</span>#sec-date.prototype.setutcminutes Date.prototype.setUTCMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmonth\"><h1><span class=\"secnum\">20.4.4.33</span>#sec-date.prototype.setutcmonth Date.prototype.setUTCMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcseconds\"><h1><span class=\"secnum\">20.4.4.34</span>#sec-date.prototype.setutcseconds Date.prototype.setUTCSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.todatestring\"><h1><span class=\"secnum\">20.4.4.35</span>#sec-date.prototype.todatestring Date.prototype.toDateString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toisostring\"><h1><span class=\"secnum\">20.4.4.36</span>#sec-date.prototype.toisostring Date.prototype.toISOString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.tojson\"><h1><span class=\"secnum\">20.4.4.37</span>#sec-date.prototype.tojson Date.prototype.toJSON ( key )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaledatestring\"><h1><span class=\"secnum\">20.4.4.38</span>#sec-date.prototype.tolocaledatestring Date.prototype.toLocaleDateString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocalestring\"><h1><span class=\"secnum\">20.4.4.39</span>#sec-date.prototype.tolocalestring Date.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaletimestring\"><h1><span class=\"secnum\">20.4.4.40</span>#sec-date.prototype.tolocaletimestring Date.prototype.toLocaleTimeString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tostring\"><h1><span class=\"secnum\">20.4.4.41</span>#sec-date.prototype.tostring Date.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.totimestring\"><h1><span class=\"secnum\">20.4.4.42</span>#sec-date.prototype.totimestring Date.prototype.toTimeString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toutcstring\"><h1><span class=\"secnum\">20.4.4.43</span>#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.valueof\"><h1><span class=\"secnum\">20.4.4.44</span>#sec-date.prototype.valueof Date.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-date.prototype-@@toprimitive\"><h1><span class=\"secnum\">20.4.4.45</span>#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )</h1>...</div></emu-clause>\n\n    "}, "sec-getiterator": {"num": "7.4.1", "title": "#sec-getiterator GetIterator ( obj [ , hint [ , method ] ] )", "html": "<emu-clause id=\"sec-getiterator\" aoid=\"GetIterator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getiterator\">#sec-getiterator</span> GetIterator ( <var>obj</var> [ , <var>hint</var> [ , <var>method</var> ] ] )</h1>\n      <p>The abstract operation GetIterator takes argument <var>obj</var> and optional arguments <var>hint</var> and <var>method</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <var>hint</var> is not present, set <var>hint</var> to <emu-const>sync</emu-const>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>hint</var> is either <emu-const>sync</emu-const> or <emu-const>async</emu-const>.</li><li>If <var>method</var> is not present, then<ol><li>If <var>hint</var> is <emu-const>async</emu-const>, then<ol><li>Set <var>method</var> to ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>obj</var>, @@asyncIterator).</li><li>If <var>method</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>syncMethod</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>obj</var>, @@iterator).</li><li>Let <var>syncIteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>obj</var>, <emu-const>sync</emu-const>, <var>syncMethod</var>).</li><li>Return !&#160;<emu-xref aoid=\"CreateAsyncFromSyncIterator\"><a href=\"#sec-createasyncfromsynciterator\">CreateAsyncFromSyncIterator</a></emu-xref>(<var>syncIteratorRecord</var>).</li></ol></li></ol></li><li>Otherwise, set <var>method</var> to ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>obj</var>, @@iterator).</li></ol></li><li>Let <var>iterator</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>method</var>, <var>obj</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>iterator</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>nextMethod</var> be ?&#160;<emu-xref aoid=\"GetV\"><a href=\"#sec-getv\">GetV</a></emu-xref>(<var>iterator</var>, <emu-val>\"next\"</emu-val>).</li><li>Let <var>iteratorRecord</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Iterator]]: <var>iterator</var>, [[NextMethod]]: <var>nextMethod</var>, [[Done]]: <emu-val>false</emu-val> }.</li><li>Return <var>iteratorRecord</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact": {"num": "D", "title": "#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact", "html": "<emu-annex id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact</span> Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact</h1>\n  <p><emu-xref href=\"#sec-candeclareglobalvar\"><a href=\"#sec-candeclareglobalvar\" class=\"excluded-xref\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</a></emu-xref>-<emu-xref href=\"#sec-createglobalfunctionbinding\"><a href=\"#sec-createglobalfunctionbinding\" class=\"excluded-xref\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</a></emu-xref> Edition 5 and 5.1 used a property existence test to determine whether a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> property corresponding to a new global declaration already existed. ECMAScript 2015 uses an own property existence test. This corresponds to what has been most commonly implemented by web browsers.</p>\n  <p><emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>: The 5<sup>th</sup> Edition moved the capture of the current array length prior to the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> conversion of the <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> or new length value. However, the captured length value could become invalid if the conversion process has the side-effect of changing the array length. ECMAScript 2015 specifies that the current array length must be captured after the possible occurrence of such side-effects.</p>\n  <p><emu-xref href=\"#sec-timeclip\"><a href=\"#sec-timeclip\" class=\"excluded-xref\" excluded-id=\"sec-timeclip\">#sec-timeclip</a></emu-xref>: Previous editions permitted the <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref> abstract operation to return either <emu-val>+0</emu-val> or <emu-val>-0</emu-val> as the representation of a 0 <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>. ECMAScript 2015 specifies that <emu-val>+0</emu-val> always returned. This means that for ECMAScript 2015 the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> of a Date object is never observably <emu-val>-0</emu-val> and methods that return time values never return <emu-val>-0</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>: If a UTC offset representation is not present, the local time zone is used. Edition 5.1 incorrectly stated that a missing time zone should be interpreted as <emu-val>\"z\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date.prototype.toisostring\"><a href=\"#sec-date.prototype.toisostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.toisostring\">#sec-date.prototype.toisostring</a></emu-xref>: If the year cannot be represented using the Date Time String Format specified in  <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref> a RangeError exception is thrown. Previous editions did not specify the behaviour for that case.</p>\n  <p><emu-xref href=\"#sec-date.prototype.tostring\"><a href=\"#sec-date.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</a></emu-xref>: Previous editions did not specify the value returned by <code>Date.prototype.toString</code> when <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref> is <emu-val>NaN</emu-val>. ECMAScript 2015 specifies the result to be the String value <emu-val>\"Invalid Date\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref>,  <emu-xref href=\"#sec-escaperegexppattern\"><a href=\"#sec-escaperegexppattern\" class=\"excluded-xref\" excluded-id=\"sec-escaperegexppattern\">#sec-escaperegexppattern</a></emu-xref>: Any LineTerminator code points in the value of the <emu-val>\"source\"</emu-val> property of a RegExp instance must be expressed using an escape sequence. Edition 5.1 only required the escaping of <code>/</code>.</p>\n  <p><emu-xref href=\"#sec-regexp.prototype-@@match\"><a href=\"#sec-regexp.prototype-@@match\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</a></emu-xref>,  <emu-xref href=\"#sec-regexp.prototype-@@replace\"><a href=\"#sec-regexp.prototype-@@replace\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</a></emu-xref>: In previous editions, the specifications for <code>String.prototype.match</code> and <code>String.prototype.replace</code> was incorrect for cases where the pattern argument was a RegExp value whose <code>global</code> flag is set. The previous specifications stated that for each attempt to match the pattern, if <code>lastIndex</code> did not change it should be incremented by 1. The correct behaviour is that <code>lastIndex</code> should be incremented by one only if the pattern matched the empty String.</p>\n  <p><emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>,  <emu-xref href=\"#sec-sortcompare\"><a href=\"#sec-sortcompare\" class=\"excluded-xref\" excluded-id=\"sec-sortcompare\">#sec-sortcompare</a></emu-xref>: Previous editions did not specify how a <emu-val>NaN</emu-val> value returned by a <var>comparefn</var> was interpreted by <code>Array.prototype.sort</code>. ECMAScript 2015 specifies that such as value is treated as if <emu-val>+0</emu-val> was returned from the <var>comparefn</var>. ECMAScript 2015 also specifies that <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is applied to the result returned by a <var>comparefn</var>. In previous editions, the effect of a <var>comparefn</var> result that is not a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> was implementation-dependent. In practice, implementations call <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>.</p>\n</emu-annex>\n\n"}, "sec-symbol.split": {"num": "19.4.2.13", "title": "#sec-symbol.split Symbol.split", "html": "<emu-clause id=\"sec-symbol.split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.split\">#sec-symbol.split</span> Symbol.split</h1>\n        <p>The initial value of <code>Symbol.split</code> is the well-known symbol @@split (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-set-constructor": {"num": "23.2.2", "title": "#sec-properties-of-the-set-constructor Properties of the Set Constructor", "html": "<emu-clause id=\"sec-properties-of-the-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-set-constructor\">#sec-properties-of-the-set-constructor</span> Properties of the Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-set.prototype\"><h1><span class=\"secnum\">23.2.2.1</span>#sec-set.prototype Set.prototype</h1>...</div><div id=\"excluded-sec-get-set-@@species\"><h1><span class=\"secnum\">23.2.2.2</span>#sec-get-set-@@species get Set [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-map.prototype-@@iterator": {"num": "23.1.3.12", "title": "#sec-map.prototype-@@iterator Map.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-map.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype-@@iterator\">#sec-map.prototype-@@iterator</span> Map.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <emu-val>\"entries\"</emu-val> property.</p>\n      </emu-clause>\n\n      "}, "sec-symbol.prototype-@@tostringtag": {"num": "19.4.3.6", "title": "#sec-symbol.prototype-@@tostringtag Symbol.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-symbol.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype-@@tostringtag\">#sec-symbol.prototype-@@tostringtag</span> Symbol.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Symbol\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-array-prototype-object": {"num": "22.1.3", "title": "#sec-properties-of-the-array-prototype-object Properties of the Array Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-array-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</span> Properties of the Array Prototype Object</h1>\n      <p>The Array prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Array prototype object is specified to be an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-array.prototype.concat\"><h1><span class=\"secnum\">22.1.3.1</span>#sec-array.prototype.concat Array.prototype.concat ( ...arguments )</h1>...</div><div id=\"excluded-sec-array.prototype.constructor\"><h1><span class=\"secnum\">22.1.3.2</span>#sec-array.prototype.constructor Array.prototype.constructor</h1>...</div><div id=\"excluded-sec-array.prototype.copywithin\"><h1><span class=\"secnum\">22.1.3.3</span>#sec-array.prototype.copywithin Array.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-array.prototype.entries\"><h1><span class=\"secnum\">22.1.3.4</span>#sec-array.prototype.entries Array.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-array.prototype.every\"><h1><span class=\"secnum\">22.1.3.5</span>#sec-array.prototype.every Array.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.fill\"><h1><span class=\"secnum\">22.1.3.6</span>#sec-array.prototype.fill Array.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.filter\"><h1><span class=\"secnum\">22.1.3.7</span>#sec-array.prototype.filter Array.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.find\"><h1><span class=\"secnum\">22.1.3.8</span>#sec-array.prototype.find Array.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.findindex\"><h1><span class=\"secnum\">22.1.3.9</span>#sec-array.prototype.findindex Array.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flat\"><h1><span class=\"secnum\">22.1.3.10</span>#sec-array.prototype.flat Array.prototype.flat ( [ depth ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flatmap\"><h1><span class=\"secnum\">22.1.3.11</span>#sec-array.prototype.flatmap Array.prototype.flatMap ( mapperFunction [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.foreach\"><h1><span class=\"secnum\">22.1.3.12</span>#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.includes\"><h1><span class=\"secnum\">22.1.3.13</span>#sec-array.prototype.includes Array.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.indexof\"><h1><span class=\"secnum\">22.1.3.14</span>#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.join\"><h1><span class=\"secnum\">22.1.3.15</span>#sec-array.prototype.join Array.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-array.prototype.keys\"><h1><span class=\"secnum\">22.1.3.16</span>#sec-array.prototype.keys Array.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-array.prototype.lastindexof\"><h1><span class=\"secnum\">22.1.3.17</span>#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.map\"><h1><span class=\"secnum\">22.1.3.18</span>#sec-array.prototype.map Array.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.pop\"><h1><span class=\"secnum\">22.1.3.19</span>#sec-array.prototype.pop Array.prototype.pop ( )</h1>...</div><div id=\"excluded-sec-array.prototype.push\"><h1><span class=\"secnum\">22.1.3.20</span>#sec-array.prototype.push Array.prototype.push ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.reduce\"><h1><span class=\"secnum\">22.1.3.21</span>#sec-array.prototype.reduce Array.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reduceright\"><h1><span class=\"secnum\">22.1.3.22</span>#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reverse\"><h1><span class=\"secnum\">22.1.3.23</span>#sec-array.prototype.reverse Array.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-array.prototype.shift\"><h1><span class=\"secnum\">22.1.3.24</span>#sec-array.prototype.shift Array.prototype.shift ( )</h1>...</div><div id=\"excluded-sec-array.prototype.slice\"><h1><span class=\"secnum\">22.1.3.25</span>#sec-array.prototype.slice Array.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-array.prototype.some\"><h1><span class=\"secnum\">22.1.3.26</span>#sec-array.prototype.some Array.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.sort\"><h1><span class=\"secnum\">22.1.3.27</span>#sec-array.prototype.sort Array.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-array.prototype.splice\"><h1><span class=\"secnum\">22.1.3.28</span>#sec-array.prototype.splice Array.prototype.splice ( start, deleteCount, ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.tolocalestring\"><h1><span class=\"secnum\">22.1.3.29</span>#sec-array.prototype.tolocalestring Array.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.tostring\"><h1><span class=\"secnum\">22.1.3.30</span>#sec-array.prototype.tostring Array.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-array.prototype.unshift\"><h1><span class=\"secnum\">22.1.3.31</span>#sec-array.prototype.unshift Array.prototype.unshift ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.values\"><h1><span class=\"secnum\">22.1.3.32</span>#sec-array.prototype.values Array.prototype.values ( )</h1>...</div><div id=\"excluded-sec-array.prototype-@@iterator\"><h1><span class=\"secnum\">22.1.3.33</span>#sec-array.prototype-@@iterator Array.prototype [ @@iterator ] ( )</h1>...</div><div id=\"excluded-sec-array.prototype-@@unscopables\"><h1><span class=\"secnum\">22.1.3.34</span>#sec-array.prototype-@@unscopables Array.prototype [ @@unscopables ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgenerator-prototype-tostringtag": {"num": "25.5.1.5", "title": "#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-asyncgenerator-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-prototype-tostringtag\">#sec-asyncgenerator-prototype-tostringtag</span> AsyncGenerator.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"AsyncGenerator\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n    "}, "sec-symbol.species": {"num": "19.4.2.12", "title": "#sec-symbol.species Symbol.species", "html": "<emu-clause id=\"sec-symbol.species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.species\">#sec-symbol.species</span> Symbol.species</h1>\n        <p>The initial value of <code>Symbol.species</code> is the well-known symbol @@species (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-toprimitive": {"num": "7.1.1", "title": "#sec-toprimitive ToPrimitive ( input [ , PreferredType ] )", "html": "<emu-clause id=\"sec-toprimitive\" aoid=\"ToPrimitive\" oldids=\"table-9\">\n      <span id=\"table-9\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toprimitive\">#sec-toprimitive</span> ToPrimitive ( <var>input</var> [ , <var>PreferredType</var> ] )</h1>\n      <p>The abstract operation ToPrimitive takes argument <var>input</var> and optional argument <var>PreferredType</var>. It converts its <var>input</var> argument to a non-Object type. If an object is capable of converting to more than one primitive type, it may use the optional hint <var>PreferredType</var> to favour that type. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>input</var> is an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>input</var>) is Object, then<ol><li>If <var>PreferredType</var> is not present, let <var>hint</var> be <emu-val>\"default\"</emu-val>.</li><li>Else if <var>PreferredType</var> is hint String, let <var>hint</var> be <emu-val>\"string\"</emu-val>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>PreferredType</var> is hint Number.</li><li>Let <var>hint</var> be <emu-val>\"number\"</emu-val>.</li></ol></li><li>Let <var>exoticToPrim</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>input</var>, @@toPrimitive).</li><li>If <var>exoticToPrim</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>exoticToPrim</var>, <var>input</var>, &#171; <var>hint</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>) is not Object, return <var>result</var>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>hint</var> is <emu-val>\"default\"</emu-val>, set <var>hint</var> to <emu-val>\"number\"</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>input</var>, <var>hint</var>).</li></ol></li><li>Return <var>input</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When ToPrimitive is called with no hint, then it generally behaves as if the hint were Number. However, objects may over-ride this behaviour by defining a @@toPrimitive method. Of the objects defined in this specification only Date objects (see  <emu-xref href=\"#sec-date.prototype-@@toprimitive\"><a href=\"#sec-date.prototype-@@toprimitive\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</a></emu-xref>) and Symbol objects (see  <emu-xref href=\"#sec-symbol.prototype-@@toprimitive\"><a href=\"#sec-symbol.prototype-@@toprimitive\" class=\"excluded-xref\" excluded-id=\"sec-symbol.prototype-@@toprimitive\">#sec-symbol.prototype-@@toprimitive</a></emu-xref>) over-ride the default ToPrimitive behaviour. Date objects treat no hint as if the hint were String.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-ordinarytoprimitive\"><h1><span class=\"secnum\">7.1.1.1</span>#sec-ordinarytoprimitive OrdinaryToPrimitive ( O, hint )</h1>...</div></emu-clause>\n\n    "}, "sec-async-function-prototype-properties": {"num": "25.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>is the value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">25.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">25.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-iterable": {"num": "23.3.1.1", "title": "#sec-weakmap-iterable WeakMap ( [ iterable ] )", "html": "<emu-clause id=\"sec-weakmap-iterable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-iterable\">#sec-weakmap-iterable</span> WeakMap ( [ <var>iterable</var> ] )</h1>\n        <p>When the <code>WeakMap</code> function is called with optional argument <var>iterable</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>map</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%WeakMap.prototype%\"</emu-val>, &#171; [[WeakMapData]] &#187;).</li><li>Set <var>map</var>.[[WeakMapData]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>iterable</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <var>map</var>.</li><li>Let <var>adder</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <emu-val>\"set\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"AddEntriesFromIterable\"><a href=\"#sec-add-entries-from-iterable\">AddEntriesFromIterable</a></emu-xref>(<var>map</var>, <var>iterable</var>, <var>adder</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If the parameter <var>iterable</var> is present, it is expected to be an object that implements an @@iterator method that returns an iterator object that produces a two element <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> whose first element is a value that will be used as a WeakMap key and whose second element is the value to associate with that key.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-weakset.prototype-@@tostringtag": {"num": "23.4.3.5", "title": "#sec-weakset.prototype-@@tostringtag WeakSet.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-weakset.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset.prototype-@@tostringtag\">#sec-weakset.prototype-@@tostringtag</span> WeakSet.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"WeakSet\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-get-%typedarray%.prototype-@@tostringtag": {"num": "22.2.3.32", "title": "#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-get-%typedarray%.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-%typedarray%.prototype-@@tostringtag\">#sec-get-%typedarray%.prototype-@@tostringtag</span> get %TypedArray%.prototype [ @@toStringTag ]</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype[@@toStringTag]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, return <emu-val>undefined</emu-val>.</li><li>If <var>O</var> does not have a [[TypedArrayName]] internal slot, return <emu-val>undefined</emu-val>.</li><li>Let <var>name</var> be <var>O</var>.[[TypedArrayName]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is String.</li><li>Return <var>name</var>.\n        </li></ol></emu-alg>\n        <p>This property has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <p>The initial value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"get [Symbol.toStringTag]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-speciesconstructor": {"num": "7.3.22", "title": "#sec-speciesconstructor SpeciesConstructor ( O, defaultConstructor )", "html": "<emu-clause id=\"sec-speciesconstructor\" aoid=\"SpeciesConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-speciesconstructor\">#sec-speciesconstructor</span> SpeciesConstructor ( <var>O</var>, <var>defaultConstructor</var> )</h1>\n      <p>The abstract operation SpeciesConstructor takes arguments <var>O</var> (an Object) and <var>defaultConstructor</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It is used to retrieve the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that should be used to create new objects that are derived from <var>O</var>. <var>defaultConstructor</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use if a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> @@species property cannot be found starting from <var>O</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <emu-val>\"constructor\"</emu-val>).</li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return <var>defaultConstructor</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, @@species).</li><li>If <var>S</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <var>defaultConstructor</var>.</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>S</var>) is <emu-val>true</emu-val>, return <var>S</var>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-isconcatspreadable": {"num": "22.1.3.1.1", "title": "#sec-isconcatspreadable Runtime Semantics: IsConcatSpreadable ( O )", "html": "<emu-clause id=\"sec-isconcatspreadable\" aoid=\"IsConcatSpreadable\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isconcatspreadable\">#sec-isconcatspreadable</span> Runtime Semantics: IsConcatSpreadable ( <var>O</var> )</h1>\n          <p>The abstract operation IsConcatSpreadable takes argument <var>O</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, return <emu-val>false</emu-val>.</li><li>Let <var>spreadable</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, @@isConcatSpreadable).</li><li>If <var>spreadable</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(<var>spreadable</var>).</li><li>Return ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>O</var>).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-%regexpstringiteratorprototype%-object": {"num": "21.2.7.1", "title": "#sec-%regexpstringiteratorprototype%-object The %RegExpStringIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%regexpstringiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%regexpstringiteratorprototype%-object\">#sec-%regexpstringiteratorprototype%-object</span> The %RegExpStringIteratorPrototype% Object</h1>\n        <p>The  <dfn>%RegExpStringIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all RegExp String Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%regexpstringiteratorprototype%.next\"><h1><span class=\"secnum\">21.2.7.1.1</span>#sec-%regexpstringiteratorprototype%.next %RegExpStringIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%regexpstringiteratorprototype%-@@tostringtag\"><h1><span class=\"secnum\">21.2.7.1.2</span>#sec-%regexpstringiteratorprototype%-@@tostringtag %RegExpStringIteratorPrototype% [ @@toStringTag ]</h1>...</div></emu-clause>\n\n      "}, "sec-%stringiteratorprototype%-object": {"num": "21.1.5.2", "title": "#sec-%stringiteratorprototype%-object The %StringIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%stringiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%-object\">#sec-%stringiteratorprototype%-object</span> The %StringIteratorPrototype% Object</h1>\n        <p>The  <dfn>%StringIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all String Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%stringiteratorprototype%.next\"><h1><span class=\"secnum\">21.1.5.2.1</span>#sec-%stringiteratorprototype%.next %StringIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%stringiteratorprototype%-@@tostringtag\"><h1><span class=\"secnum\">21.1.5.2.2</span>#sec-%stringiteratorprototype%-@@tostringtag %StringIteratorPrototype% [ @@toStringTag ]</h1>...</div></emu-clause>\n\n      "}, "sec-symbol.unscopables": {"num": "19.4.2.16", "title": "#sec-symbol.unscopables Symbol.unscopables", "html": "<emu-clause id=\"sec-symbol.unscopables\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.unscopables\">#sec-symbol.unscopables</span> Symbol.unscopables</h1>\n        <p>The initial value of <code>Symbol.unscopables</code> is the well-known symbol @@unscopables (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-well-known-symbols": {"num": "6.1.5.1", "title": "#sec-well-known-symbols Well-Known Symbols", "html": "<emu-clause id=\"sec-well-known-symbols\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-symbols\">#sec-well-known-symbols</span> Well-Known Symbols</h1>\n        <p>Well-known symbols are built-in Symbol values that are explicitly referenced by algorithms of this specification. They are typically used as the keys of properties whose values serve as extension points of a specification algorithm. Unless otherwise specified, well-known symbols values are shared by all realms (<emu-xref href=\"#sec-code-realms\"><a href=\"#sec-code-realms\" class=\"excluded-xref\" excluded-id=\"sec-code-realms\">#sec-code-realms</a></emu-xref>).</p>\n        <p>Within this specification a well-known symbol is referred to by using a notation of the form @@name, where &#8220;name&#8221; is one of the values listed in  <emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>.</p>\n        <emu-table id=\"table-1\" caption=\"Well-known Symbols\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-1\">#table-1</span>: Well-known Symbols</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Specification Name\n              \n              </th>\n              <th>\n                [[Description]]\n              \n              </th>\n              <th>\n                Value and Purpose\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                @@asyncIterator\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.asyncIterator\"</emu-val>\n              \n              </td>\n              <td>\n                A method that returns the default AsyncIterator for an object. Called by the semantics of the <code>for</code>-<code>await</code>-<code>of</code> statement.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@hasInstance\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.hasInstance\"</emu-val>\n              \n              </td>\n              <td>\n                A method that determines if a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> object recognizes an object as one of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s instances. Called by the semantics of the <code>instanceof</code> operator.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@isConcatSpreadable\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.isConcatSpreadable\"</emu-val>\n              \n              </td>\n              <td>\n                A Boolean valued property that if true indicates that an object should be flattened to its array elements by  <emu-xref href=\"#sec-array.prototype.concat\"><a href=\"#sec-array.prototype.concat\"><code>Array.prototype.concat</code></a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@iterator\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.iterator\"</emu-val>\n              \n              </td>\n              <td>\n                A method that returns the default Iterator for an object. Called by the semantics of the for-of statement.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@match\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.match\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that matches the regular expression against a string. Called by the  <emu-xref href=\"#sec-string.prototype.match\"><a href=\"#sec-string.prototype.match\"><code>String.prototype.match</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@matchAll\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.matchAll\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that returns an iterator, that yields matches of the regular expression against a string. Called by the  <emu-xref href=\"#sec-string.prototype.matchall\"><a href=\"#sec-string.prototype.matchall\"><code>String.prototype.matchAll</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@replace\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.replace\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that replaces matched substrings of a string. Called by the  <emu-xref href=\"#sec-string.prototype.replace\"><a href=\"#sec-string.prototype.replace\"><code>String.prototype.replace</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@search\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.search\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that returns the index within a string that matches the regular expression. Called by the  <emu-xref href=\"#sec-string.prototype.search\"><a href=\"#sec-string.prototype.search\"><code>String.prototype.search</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@species\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.species\"</emu-val>\n              \n              </td>\n              <td>\n                A function valued property that is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is used to create derived objects.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@split\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.split\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that splits a string at the indices that match the regular expression. Called by the  <emu-xref href=\"#sec-string.prototype.split\"><a href=\"#sec-string.prototype.split\"><code>String.prototype.split</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@toPrimitive\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.toPrimitive\"</emu-val>\n              \n              </td>\n              <td>\n                A method that converts an object to a corresponding primitive value. Called by the <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> abstract operation.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@toStringTag\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.toStringTag\"</emu-val>\n              \n              </td>\n              <td>\n                A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method  <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\"><code>Object.prototype.toString</code></a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                @@unscopables\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.unscopables\"</emu-val>\n              \n              </td>\n              <td>\n                An object valued property whose own and inherited property names are property names that are excluded from the <code>with</code> environment bindings of the associated object.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-generatorfunction.prototype-@@tostringtag": {"num": "25.2.3.3", "title": "#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-generatorfunction.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction.prototype-@@tostringtag\">#sec-generatorfunction.prototype-@@tostringtag</span> GeneratorFunction.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"GeneratorFunction\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-regexp-prototype-matchall": {"num": "21.2.5.8", "title": "#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )", "html": "<emu-clause id=\"sec-regexp-prototype-matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-prototype-matchall\">#sec-regexp-prototype-matchall</span> RegExp.prototype [ @@matchAll ] ( <var>string</var> )</h1>\n        <p>When the <code>@@matchAll</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"flags\"</emu-val>)).</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>R</var>, <var>flags</var> &#187;).</li><li>Let <var>lastIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>matcher</var>, <emu-val>\"lastIndex\"</emu-val>, <var>lastIndex</var>, <emu-val>true</emu-val>).</li><li>If <var>flags</var> contains <emu-val>\"g\"</emu-val>, let <var>global</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>global</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <emu-val>\"u\"</emu-val>, let <var>fullUnicode</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>fullUnicode</var> be <emu-val>false</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"CreateRegExpStringIterator\"><a href=\"#sec-createregexpstringiterator\">CreateRegExpStringIterator</a></emu-xref>(<var>matcher</var>, <var>S</var>, <var>global</var>, <var>fullUnicode</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.matchAll]\"</emu-val>.</p>\n\n        <div id=\"excluded-sec-createregexpstringiterator\"><h1><span class=\"secnum\">21.2.5.8.1</span>#sec-createregexpstringiterator CreateRegExpStringIterator ( R, S, global, fullUnicode )</h1>...</div></emu-clause>\n\n      "}, "sec-%mapiteratorprototype%-@@tostringtag": {"num": "23.1.5.2.2", "title": "#sec-%mapiteratorprototype%-@@tostringtag %MapIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%mapiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%-@@tostringtag\">#sec-%mapiteratorprototype%-@@tostringtag</span> %MapIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Map Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-%setiteratorprototype%-object": {"num": "23.2.5.2", "title": "#sec-%setiteratorprototype%-object The %SetIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%setiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%-object\">#sec-%setiteratorprototype%-object</span> The %SetIteratorPrototype% Object</h1>\n        <p>The  <dfn>%SetIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Set Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%setiteratorprototype%.next\"><h1><span class=\"secnum\">23.2.5.2.1</span>#sec-%setiteratorprototype%.next %SetIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%setiteratorprototype%-@@tostringtag\"><h1><span class=\"secnum\">23.2.5.2.2</span>#sec-%setiteratorprototype%-@@tostringtag %SetIteratorPrototype% [ @@toStringTag ]</h1>...</div></emu-clause>\n\n      "}, "sec-%iteratorprototype%-object": {"num": "25.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The  <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-%typedarray%.from": {"num": "22.2.2.1", "title": "#sec-%typedarray%.from %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )", "html": "<emu-clause id=\"sec-%typedarray%.from\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.from\">#sec-%typedarray%.from</span> %TypedArray%.from ( <var>source</var> [ , <var>mapfn</var> [ , <var>thisArg</var> ] ] )</h1>\n        <p>When the <code>from</code> method is called with argument <var>source</var>, and optional arguments <var>mapfn</var> and <var>thisArg</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>mapfn</var> is <emu-val>undefined</emu-val>, let <var>mapping</var> be <emu-val>false</emu-val>.</li><li>Else,<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>mapping</var> be <emu-val>true</emu-val>.</li></ol></li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>source</var>, @@iterator).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>values</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>source</var>, <var>usingIterator</var>).</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Let <var>targetObj</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>C</var>, &#171; <var>len</var> &#187;).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var> &#187;).</li></ol></li><li>Else, let <var>mappedValue</var> be <var>kValue</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>targetObj</var>, <var>Pk</var>, <var>mappedValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <var>targetObj</var>.</li></ol></li><li>NOTE: <var>source</var> is not an Iterable so assume it is already an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>source</var>).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Let <var>targetObj</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>C</var>, &#171; <var>len</var> &#187;).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var> &#187;).</li></ol></li><li>Else, let <var>mappedValue</var> be <var>kValue</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>targetObj</var>, <var>Pk</var>, <var>mappedValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>targetObj</var>.\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-iterabletolist\"><h1><span class=\"secnum\">22.2.2.1.1</span>#sec-iterabletolist Runtime Semantics: IterableToList ( items, method )</h1>...</div></emu-clause>\n\n      "}, "sec-symbol.prototype-@@toprimitive": {"num": "19.4.3.5", "title": "#sec-symbol.prototype-@@toprimitive Symbol.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-symbol.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype-@@toprimitive\">#sec-symbol.prototype-@@toprimitive</span> Symbol.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Symbol object to a primitive value. The allowed values for <var>hint</var> are <emu-val>\"default\"</emu-val>, <emu-val>\"number\"</emu-val>, and <emu-val>\"string\"</emu-val>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref href=\"#sec-thissymbolvalue\"><a href=\"#sec-thissymbolvalue\">thisSymbolValue</a></emu-xref>(<emu-val>this</emu-val> value).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.toPrimitive]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}}, "figData": {"table-1": "Table 1", "table-2": "Table 3", "table-5": "Table 6", "table-27": "Table 27", "table-the-typedarray-constructors": "Table 61", "table-52": "Table 65", "table-async-iterable": "Table 68", "table-56": "Table 73", "table-internal-slots-of-asyncgenerator-instances": "Table 74"}}, "to": {"secList": ["sec-properties-of-the-map-constructor", "sec-symbol.isconcatspreadable", "sec-array.from", "sec-string.prototype.replace", "sec-string.prototype.matchall", "sec-properties-of-generator-prototype", "sec-properties-of-the-map-prototype-object", "sec-properties-of-the-function-prototype-object", "sec-map-iterable", "sec-properties-of-the-dataview-prototype-object", "sec-properties-of-the-regexp-constructor", "sec-properties-of-the-bigint-prototype-object", "sec-properties-of-the-weakset-prototype-object", "sec-%mapiteratorprototype%-object", "sec-object.prototype.tostring", "sec-json-object", "sec-properties-of-the-sharedarraybuffer-prototype-object", "sec-properties-of-the-symbol-prototype-object", "sec-iterable-interface", "sec-asynciteratorprototype", "sec-string.prototype.split", "sec-asynciterable-interface", "sec-async-function-prototype-properties-toStringTag", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-symbol.search", "sec-isregexp", "sec-symbol.match", "sec-properties-of-the-promise-prototype-object", "sec-atomics-object", "sec-properties-of-the-generatorfunction-prototype-object", "sec-symbol.tostringtag", "sec-properties-of-the-weakmap-prototype-object", "sec-properties-of-the-regexp-prototype-object", "sec-properties-of-the-sharedarraybuffer-constructor", "sec-properties-of-the-%typedarrayprototype%-object", "sec-symbol.replace", "sec-properties-of-the-arraybuffer-prototype-object", "sec-createunmappedargumentsobject", "sec-string.prototype.match", "sec-symbol.iterator", "sec-arrayspeciescreate", "sec-value-properties-of-the-math-object", "sec-typedarray-object", "sec-properties-of-asyncgenerator-prototype", "sec-sharedarraybuffer.prototype.toString", "sec-symbol.hasinstance", "sec-asynciteratorprototype-asynciterator", "sec-properties-of-the-string-prototype-object", "sec-module-namespace-objects", "sec-symbol.asynciterator", "sec-properties-of-the-array-constructor", "sec-%arrayiteratorprototype%-object", "sec-symbol.toprimitive", "sec-asyncgeneratorfunction-prototype-tostringtag", "sec-properties-of-the-set-prototype-object", "sec-properties-of-the-promise-constructor", "sec-instanceofoperator", "sec-add-entries-from-iterable", "sec-createmappedargumentsobject", "sec-string.prototype.search", "sec-object-environment-records-hasbinding-n", "sec-properties-of-the-arraybuffer-constructor", "sec-symbol.matchall", "sec-properties-of-the-%typedarray%-intrinsic-object", "sec-properties-of-the-date-prototype-object", "sec-getiterator", "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact", "sec-symbol.split", "sec-properties-of-the-set-constructor", "sec-properties-of-the-array-prototype-object", "sec-asyncgenerator-prototype-tostringtag", "sec-symbol.species", "sec-toprimitive", "sec-async-function-prototype-properties", "sec-weakmap-iterable", "sec-speciesconstructor", "sec-isconcatspreadable", "sec-%regexpstringiteratorprototype%-object", "sec-%stringiteratorprototype%-object", "sec-symbol.unscopables", "sec-well-known-symbols", "sec-regexp-prototype-matchall", "sec-%setiteratorprototype%-object", "sec-%iteratorprototype%-object", "sec-%typedarray%.from"], "secData": {"sec-properties-of-the-map-constructor": {"num": "23.1.2", "title": "#sec-properties-of-the-map-constructor Properties of the Map Constructor", "html": "<emu-clause id=\"sec-properties-of-the-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-map-constructor\">#sec-properties-of-the-map-constructor</span> Properties of the Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-map.prototype\"><h1><span class=\"secnum\">23.1.2.1</span>#sec-map.prototype Map.prototype</h1>...</div><div id=\"excluded-sec-get-map-%symbol.species%\"><h1><span class=\"secnum\">23.1.2.2</span>#sec-get-map-%symbol.species% get Map [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.isconcatspreadable": {"num": "19.4.2.4", "title": "#sec-symbol.isconcatspreadable Symbol.isConcatSpreadable", "html": "<emu-clause id=\"sec-symbol.isconcatspreadable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.isconcatspreadable\">#sec-symbol.isconcatspreadable</span> Symbol.isConcatSpreadable</h1>\n        <p>The initial value of <code>Symbol.isConcatSpreadable</code> is the well-known symbol %Symbol.isConcatSpreadable% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-array.from": {"num": "22.1.2.1", "title": "#sec-array.from Array.from ( items [ , mapfn [ , thisArg ] ] )", "html": "<emu-clause id=\"sec-array.from\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.from\">#sec-array.from</span> Array.from ( <var>items</var> [ , <var>mapfn</var> [ , <var>thisArg</var> ] ] )</h1>\n        <p>When the <code>from</code> method is called with argument <var>items</var> and optional arguments <var>mapfn</var> and <var>thisArg</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <var>mapfn</var> is <emu-val>undefined</emu-val>, let <var>mapping</var> be <emu-val>false</emu-val>.</li><li>Else,<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>mapping</var> be <emu-val>true</emu-val>.</li></ol></li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>items</var>, %Symbol.iterator%).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>).</li></ol></li><li>Else,<ol><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li></ol></li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>items</var>, <emu-const>sync</emu-const>, <var>usingIterator</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> &#8805; 2<sup>53</sup> - 1, then<ol><li>Let <var>error</var> be <emu-xref aoid=\"ThrowCompletion\"><a href=\"#sec-throwcompletion\">ThrowCompletion</a></emu-xref>(a newly created <emu-val>TypeError</emu-val> object).</li><li>Return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>error</var>).</li></ol></li><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>k</var>, <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>nextValue</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>nextValue</var>, <var>k</var> &#187;).</li><li>If <var>mappedValue</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>mappedValue</var>).</li><li>Set <var>mappedValue</var> to <var>mappedValue</var>.[[Value]].</li></ol></li><li>Else, let <var>mappedValue</var> be <var>nextValue</var>.</li><li>Let <var>defineStatus</var> be <emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <var>Pk</var>, <var>mappedValue</var>).</li><li>If <var>defineStatus</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>defineStatus</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>NOTE: <var>items</var> is not an Iterable so assume it is an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>items</var>).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>len</var> &#187;).</li></ol></li><li>Else,<ol><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>len</var>).</li></ol></li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var> &#187;).</li></ol></li><li>Else, let <var>mappedValue</var> be <var>kValue</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <var>Pk</var>, <var>mappedValue</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>len</var>, <emu-val>true</emu-val>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>from</code> function is an intentionally generic factory method; it does not require that its <emu-val>this</emu-val> value be the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Therefore it can be transferred to or inherited by any other constructors that may be called with a single numeric argument.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-string.prototype.replace": {"num": "21.1.3.17", "title": "#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replace\">#sec-string.prototype.replace</span> String.prototype.replace ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replace</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, %Symbol.replace%).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Search <var>string</var> for the first occurrence of <var>searchString</var> and let <var>pos</var> be the index within <var>string</var> of the first code unit of the matched substring and let <var>matched</var> be <var>searchString</var>. If no occurrences of <var>searchString</var> were found, return <var>string</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>matched</var>, <var>pos</var>, <var>string</var> &#187;).</li><li>Let <var>replStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replStr</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>string</var>, <var>pos</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Let <var>tailPos</var> be <var>pos</var> + the number of code units in <var>matched</var>.</li><li>Let <var>newString</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the first <var>pos</var> code units of <var>string</var>, <var>replStr</var>, and the trailing substring of <var>string</var> starting at index <var>tailPos</var>. If <var>pos</var> is 0, the first element of the concatenation will be the empty String.</li><li>Return <var>newString</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>replace</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getsubstitution\"><h1><span class=\"secnum\">21.1.3.17.1</span>#sec-getsubstitution Runtime Semantics: GetSubstitution ( matched, str, position, captures, namedCaptures, replacement )</h1>...</div></emu-clause>\n\n      "}, "sec-string.prototype.matchall": {"num": "21.1.3.12", "title": "#sec-string.prototype.matchall String.prototype.matchAll ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.matchall\">#sec-string.prototype.matchall</span> String.prototype.matchAll ( <var>regexp</var> )</h1>\n        <p>Performs a regular expression match of the String representing the <emu-val>this</emu-val> value against <var>regexp</var> and returns an iterator. Each iteration result's value is an Array object containing the results of the match, or <emu-val>null</emu-val> if the String did not match.</p>\n        <p>When the <code>matchAll</code> method is called, the following steps are taken:</p>\n\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>regexp</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>regexp</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, %Symbol.matchAll%).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>\"g\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, %Symbol.matchAll%, &#171; <var>S</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">The <code>matchAll</code> function is intentionally generic, it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">Similarly to <code>String.prototype.split</code>, <code>String.prototype.matchAll</code> is designed to typically act without mutating its inputs.</div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-generator-prototype": {"num": "25.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref> (the <code>GeneratorFunction.prototype</code>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-generator.prototype-%symbol.tostringtag% Generator.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-map-prototype-object": {"num": "23.1.3", "title": "#sec-properties-of-the-map-prototype-object Properties of the Map Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-map-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-map-prototype-object\">#sec-properties-of-the-map-prototype-object</span> Properties of the Map Prototype Object</h1>\n      <p>The Map prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%MapPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[MapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map.prototype.clear\"><h1><span class=\"secnum\">23.1.3.1</span>#sec-map.prototype.clear Map.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-map.prototype.constructor\"><h1><span class=\"secnum\">23.1.3.2</span>#sec-map.prototype.constructor Map.prototype.constructor</h1>...</div><div id=\"excluded-sec-map.prototype.delete\"><h1><span class=\"secnum\">23.1.3.3</span>#sec-map.prototype.delete Map.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.entries\"><h1><span class=\"secnum\">23.1.3.4</span>#sec-map.prototype.entries Map.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-map.prototype.foreach\"><h1><span class=\"secnum\">23.1.3.5</span>#sec-map.prototype.foreach Map.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-map.prototype.get\"><h1><span class=\"secnum\">23.1.3.6</span>#sec-map.prototype.get Map.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.has\"><h1><span class=\"secnum\">23.1.3.7</span>#sec-map.prototype.has Map.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-map.prototype.keys\"><h1><span class=\"secnum\">23.1.3.8</span>#sec-map.prototype.keys Map.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-map.prototype.set\"><h1><span class=\"secnum\">23.1.3.9</span>#sec-map.prototype.set Map.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-get-map.prototype.size\"><h1><span class=\"secnum\">23.1.3.10</span>#sec-get-map.prototype.size get Map.prototype.size</h1>...</div><div id=\"excluded-sec-map.prototype.values\"><h1><span class=\"secnum\">23.1.3.11</span>#sec-map.prototype.values Map.prototype.values ( )</h1>...</div><div id=\"excluded-sec-map.prototype-%symbol.iterator%\"><h1><span class=\"secnum\">23.1.3.12</span>#sec-map.prototype-%symbol.iterator% Map.prototype [ %Symbol.iterator% ] ( )</h1>...</div><div id=\"excluded-sec-map.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">23.1.3.13</span>#sec-map.prototype-%symbol.tostringtag% Map.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-function-prototype-object": {"num": "19.2.3", "title": "#sec-properties-of-the-function-prototype-object Properties of the Function Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-function-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</span> Properties of the Function Prototype Object</h1>\n      <p>The Function prototype object:</p>\n      <ul>\n        <li>is  <dfn>%Function.prototype%</dfn>.</li>\n        <li>is itself a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n        <li>accepts any arguments and returns <emu-val>undefined</emu-val> when invoked.</li>\n        <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 0.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is the empty String.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Function prototype object is specified to be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-function.prototype.apply\"><h1><span class=\"secnum\">19.2.3.1</span>#sec-function.prototype.apply Function.prototype.apply ( thisArg, argArray )</h1>...</div><div id=\"excluded-sec-function.prototype.bind\"><h1><span class=\"secnum\">19.2.3.2</span>#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.call\"><h1><span class=\"secnum\">19.2.3.3</span>#sec-function.prototype.call Function.prototype.call ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.constructor\"><h1><span class=\"secnum\">19.2.3.4</span>#sec-function.prototype.constructor Function.prototype.constructor</h1>...</div><div id=\"excluded-sec-function.prototype.tostring\"><h1><span class=\"secnum\">19.2.3.5</span>#sec-function.prototype.tostring Function.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-function.prototype-%symbol.hasinstance%\"><h1><span class=\"secnum\">19.2.3.6</span>#sec-function.prototype-%symbol.hasinstance% Function.prototype [ %Symbol.hasInstance% ] ( V )</h1>...</div></emu-clause>\n\n    "}, "sec-map-iterable": {"num": "23.1.1.1", "title": "#sec-map-iterable Map ( [ iterable ] )", "html": "<emu-clause id=\"sec-map-iterable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-iterable\">#sec-map-iterable</span> Map ( [ <var>iterable</var> ] )</h1>\n        <p>When the <code>Map</code> function is called with optional argument <var>iterable</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>map</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Map.prototype%\"</emu-val>, &#171; [[MapData]] &#187;).</li><li>Set <var>map</var>.[[MapData]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>iterable</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <var>map</var>.</li><li>Let <var>adder</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <emu-val>\"set\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"AddEntriesFromIterable\"><a href=\"#sec-add-entries-from-iterable\">AddEntriesFromIterable</a></emu-xref>(<var>map</var>, <var>iterable</var>, <var>adder</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If the parameter <var>iterable</var> is present, it is expected to be an object that implements an %Symbol.iterator% method that returns an iterator object that produces a two element <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> whose first element is a value that will be used as a Map key and whose second element is the value to associate with that key.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-dataview-prototype-object": {"num": "24.3.4", "title": "#sec-properties-of-the-dataview-prototype-object Properties of the DataView Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-dataview-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-dataview-prototype-object\">#sec-properties-of-the-dataview-prototype-object</span> Properties of the DataView Prototype Object</h1>\n      <p>The DataView prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataViewPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-dataview.prototype.buffer\"><h1><span class=\"secnum\">24.3.4.1</span>#sec-get-dataview.prototype.buffer get DataView.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.bytelength\"><h1><span class=\"secnum\">24.3.4.2</span>#sec-get-dataview.prototype.bytelength get DataView.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.byteoffset\"><h1><span class=\"secnum\">24.3.4.3</span>#sec-get-dataview.prototype.byteoffset get DataView.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-dataview.prototype.constructor\"><h1><span class=\"secnum\">24.3.4.4</span>#sec-dataview.prototype.constructor DataView.prototype.constructor</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbigint64\"><h1><span class=\"secnum\">24.3.4.5</span>#sec-dataview.prototype.getbigint64 DataView.prototype.getBigInt64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbiguint64\"><h1><span class=\"secnum\">24.3.4.6</span>#sec-dataview.prototype.getbiguint64 DataView.prototype.getBigUint64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat32\"><h1><span class=\"secnum\">24.3.4.7</span>#sec-dataview.prototype.getfloat32 DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat64\"><h1><span class=\"secnum\">24.3.4.8</span>#sec-dataview.prototype.getfloat64 DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint8\"><h1><span class=\"secnum\">24.3.4.9</span>#sec-dataview.prototype.getint8 DataView.prototype.getInt8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint16\"><h1><span class=\"secnum\">24.3.4.10</span>#sec-dataview.prototype.getint16 DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint32\"><h1><span class=\"secnum\">24.3.4.11</span>#sec-dataview.prototype.getint32 DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint8\"><h1><span class=\"secnum\">24.3.4.12</span>#sec-dataview.prototype.getuint8 DataView.prototype.getUint8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint16\"><h1><span class=\"secnum\">24.3.4.13</span>#sec-dataview.prototype.getuint16 DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint32\"><h1><span class=\"secnum\">24.3.4.14</span>#sec-dataview.prototype.getuint32 DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbigint64\"><h1><span class=\"secnum\">24.3.4.15</span>#sec-dataview.prototype.setbigint64 DataView.prototype.setBigInt64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbiguint64\"><h1><span class=\"secnum\">24.3.4.16</span>#sec-dataview.prototype.setbiguint64 DataView.prototype.setBigUint64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat32\"><h1><span class=\"secnum\">24.3.4.17</span>#sec-dataview.prototype.setfloat32 DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat64\"><h1><span class=\"secnum\">24.3.4.18</span>#sec-dataview.prototype.setfloat64 DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint8\"><h1><span class=\"secnum\">24.3.4.19</span>#sec-dataview.prototype.setint8 DataView.prototype.setInt8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint16\"><h1><span class=\"secnum\">24.3.4.20</span>#sec-dataview.prototype.setint16 DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint32\"><h1><span class=\"secnum\">24.3.4.21</span>#sec-dataview.prototype.setint32 DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint8\"><h1><span class=\"secnum\">24.3.4.22</span>#sec-dataview.prototype.setuint8 DataView.prototype.setUint8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint16\"><h1><span class=\"secnum\">24.3.4.23</span>#sec-dataview.prototype.setuint16 DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint32\"><h1><span class=\"secnum\">24.3.4.24</span>#sec-dataview.prototype.setuint32 DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">24.3.4.25</span>#sec-dataview.prototype-%symbol.tostringtag% DataView.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-regexp-constructor": {"num": "21.2.4", "title": "#sec-properties-of-the-regexp-constructor Properties of the RegExp Constructor", "html": "<emu-clause id=\"sec-properties-of-the-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-constructor\">#sec-properties-of-the-regexp-constructor</span> Properties of the RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp.prototype\"><h1><span class=\"secnum\">21.2.4.1</span>#sec-regexp.prototype RegExp.prototype</h1>...</div><div id=\"excluded-sec-get-regexp-%symbol.species%\"><h1><span class=\"secnum\">21.2.4.2</span>#sec-get-regexp-%symbol.species% get RegExp [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-bigint-prototype-object": {"num": "20.2.3", "title": "#sec-properties-of-the-bigint-prototype-object Properties of the BigInt Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-bigint-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-bigint-prototype-object\">#sec-properties-of-the-bigint-prototype-object</span> Properties of the BigInt Prototype Object</h1>\n      <p>The BigInt prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a BigInt object; it does not have a [[BigIntData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation  <dfn id=\"sec-thisbigintvalue\" aoid=\"thisBigIntValue\">thisBigIntValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BigIntData]] internal slot, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>.[[BigIntData]]) is BigInt.</li><li>Return <var>value</var>.[[BigIntData]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>The phrase &#8220;this BigInt value&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thisbigintvalue\"><a href=\"#sec-thisbigintvalue\">thisBigIntValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-bigint.prototype.constructor\"><h1><span class=\"secnum\">20.2.3.1</span>#sec-bigint.prototype.constructor BigInt.prototype.constructor</h1>...</div><div id=\"excluded-sec-bigint.prototype.tolocalestring\"><h1><span class=\"secnum\">20.2.3.2</span>#sec-bigint.prototype.tolocalestring BigInt.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.tostring\"><h1><span class=\"secnum\">20.2.3.3</span>#sec-bigint.prototype.tostring BigInt.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.valueof\"><h1><span class=\"secnum\">20.2.3.4</span>#sec-bigint.prototype.valueof BigInt.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-bigint.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">20.2.3.5</span>#sec-bigint.prototype-%symbol.tostringtag% BigInt.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n  "}, "sec-properties-of-the-weakset-prototype-object": {"num": "23.4.3", "title": "#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakset-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakset-prototype-object\">#sec-properties-of-the-weakset-prototype-object</span> Properties of the WeakSet Prototype Object</h1>\n      <p>The WeakSet prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakSetPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakSetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset.prototype.add\"><h1><span class=\"secnum\">23.4.3.1</span>#sec-weakset.prototype.add WeakSet.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.constructor\"><h1><span class=\"secnum\">23.4.3.2</span>#sec-weakset.prototype.constructor WeakSet.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakset.prototype.delete\"><h1><span class=\"secnum\">23.4.3.3</span>#sec-weakset.prototype.delete WeakSet.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype.has\"><h1><span class=\"secnum\">23.4.3.4</span>#sec-weakset.prototype.has WeakSet.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-weakset.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">23.4.3.5</span>#sec-weakset.prototype-%symbol.tostringtag% WeakSet.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-%mapiteratorprototype%-object": {"num": "23.1.5.2", "title": "#sec-%mapiteratorprototype%-object The %MapIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%mapiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%-object\">#sec-%mapiteratorprototype%-object</span> The %MapIteratorPrototype% Object</h1>\n        <p>The  <dfn>%MapIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Map Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%mapiteratorprototype%.next\"><h1><span class=\"secnum\">23.1.5.2.1</span>#sec-%mapiteratorprototype%.next %MapIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%mapiteratorprototype%-%symbol.tostringtag%\"><h1><span class=\"secnum\">23.1.5.2.2</span>#sec-%mapiteratorprototype%-%symbol.tostringtag% %MapIteratorPrototype% [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n      "}, "sec-object.prototype.tostring": {"num": "19.1.3.6", "title": "#sec-object.prototype.tostring Object.prototype.toString ( )", "html": "<emu-clause id=\"sec-object.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</span> Object.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If the <emu-val>this</emu-val> value is <emu-val>undefined</emu-val>, return <emu-val>\"[object Undefined]\"</emu-val>.</li><li>If the <emu-val>this</emu-val> value is <emu-val>null</emu-val>, return <emu-val>\"[object Null]\"</emu-val>.</li><li>Let <var>O</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>O</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, let <var>builtinTag</var> be <emu-val>\"Array\"</emu-val>.</li><li>Else if <var>O</var> has a [[ParameterMap]] internal slot, let <var>builtinTag</var> be <emu-val>\"Arguments\"</emu-val>.</li><li>Else if <var>O</var> has a [[Call]] internal method, let <var>builtinTag</var> be <emu-val>\"Function\"</emu-val>.</li><li>Else if <var>O</var> has an [[ErrorData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Error\"</emu-val>.</li><li>Else if <var>O</var> has a [[BooleanData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Boolean\"</emu-val>.</li><li>Else if <var>O</var> has a [[NumberData]] internal slot, let <var>builtinTag</var> be <emu-val>\"Number\"</emu-val>.</li><li>Else if <var>O</var> has a [[StringData]] internal slot, let <var>builtinTag</var> be <emu-val>\"String\"</emu-val>.</li><li>Else if <var>O</var> has a [[DateValue]] internal slot, let <var>builtinTag</var> be <emu-val>\"Date\"</emu-val>.</li><li>Else if <var>O</var> has a [[RegExpMatcher]] internal slot, let <var>builtinTag</var> be <emu-val>\"RegExp\"</emu-val>.</li><li>Else, let <var>builtinTag</var> be <emu-val>\"Object\"</emu-val>.</li><li>Let <var>tag</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, %Symbol.toStringTag%).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>tag</var>) is not String, set <var>tag</var> to <var>builtinTag</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"[object \"</emu-val>, <var>tag</var>, and <emu-val>\"]\"</emu-val>.\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%ObjProto_toString%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Historically, this function was occasionally used to access the String value of the [[Class]] internal slot that was used in previous editions of this specification as a nominal type tag for various built-in objects. The above definition of <code>toString</code> preserves compatibility for legacy code that uses <code>toString</code> as a test for those specific kinds of built-in objects. It does not provide a reliable type testing mechanism for other kinds of built-in or program defined objects. In addition, programs can use %Symbol.toStringTag% in ways that will invalidate the reliability of such legacy type tests.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-json-object": {"num": "24.5", "title": "#sec-json-object The JSON Object", "html": "<emu-clause id=\"sec-json-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-object\">#sec-json-object</span> The JSON Object</h1>\n    <p>The JSON object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%JSON%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"JSON\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>contains two functions, <code>parse</code> and <code>stringify</code>, that are used to parse and construct JSON texts.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The JSON Data Interchange Format is defined in ECMA-404. The JSON interchange format used in this specification is exactly that described by ECMA-404. Conforming implementations of <code>JSON.parse</code> and <code>JSON.stringify</code> must support the exact interchange format described in the ECMA-404 specification without any deletions or extensions to the format.</p>\n\n    <div id=\"excluded-sec-json.parse\"><h1><span class=\"secnum\">24.5.1</span>#sec-json.parse JSON.parse ( text [ , reviver ] )</h1>...</div><div id=\"excluded-sec-json.stringify\"><h1><span class=\"secnum\">24.5.2</span>#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )</h1>...</div><div id=\"excluded-sec-json-%symbol.tostringtag%\"><h1><span class=\"secnum\">24.5.3</span>#sec-json-%symbol.tostringtag% JSON [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n"}, "sec-properties-of-the-sharedarraybuffer-prototype-object": {"num": "24.2.4", "title": "#sec-properties-of-the-sharedarraybuffer-prototype-object Properties of the SharedArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-sharedarraybuffer-prototype-object\">#sec-properties-of-the-sharedarraybuffer-prototype-object</span> Properties of the SharedArrayBuffer Prototype Object</h1>\n      <p>The SharedArrayBuffer prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SharedArrayBufferPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-sharedarraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.2.4.1</span>#sec-get-sharedarraybuffer.prototype.bytelength get SharedArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.2.4.2</span>#sec-sharedarraybuffer.prototype.constructor SharedArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.2.4.3</span>#sec-sharedarraybuffer.prototype.slice SharedArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-sharedarraybuffer.prototype.toString\"><h1><span class=\"secnum\">24.2.4.4</span>#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-symbol-prototype-object": {"num": "19.4.3", "title": "#sec-properties-of-the-symbol-prototype-object Properties of the Symbol Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-symbol-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</span> Properties of the Symbol Prototype Object</h1>\n      <p>The Symbol prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SymbolPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Symbol instance and does not have a [[SymbolData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation  <dfn id=\"sec-thissymbolvalue\" aoid=\"thisSymbolValue\">thisSymbolValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Symbol, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[SymbolData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[SymbolData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is Symbol.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n\n      <div id=\"excluded-sec-symbol.prototype.constructor\"><h1><span class=\"secnum\">19.4.3.1</span>#sec-symbol.prototype.constructor Symbol.prototype.constructor</h1>...</div><div id=\"excluded-sec-symbol.prototype.description\"><h1><span class=\"secnum\">19.4.3.2</span>#sec-symbol.prototype.description get Symbol.prototype.description</h1>...</div><div id=\"excluded-sec-symbol.prototype.tostring\"><h1><span class=\"secnum\">19.4.3.3</span>#sec-symbol.prototype.tostring Symbol.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype.valueof\"><h1><span class=\"secnum\">19.4.3.4</span>#sec-symbol.prototype.valueof Symbol.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-symbol.prototype-%symbol.toprimitive%\"><h1><span class=\"secnum\">19.4.3.5</span>#sec-symbol.prototype-%symbol.toprimitive% Symbol.prototype [ %Symbol.toPrimitive% ] ( hint )</h1>...</div><div id=\"excluded-sec-symbol.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">19.4.3.6</span>#sec-symbol.prototype-%symbol.tostringtag% Symbol.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-iterable-interface": {"num": "25.1.1.1", "title": "#sec-iterable-interface The  Iterable Interface", "html": "<emu-clause id=\"sec-iterable-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iterable-interface\">#sec-iterable-interface</span> The  <i>Iterable</i> Interface</h1>\n        <p>The  <i>Iterable</i> interface includes the property described in  <emu-xref href=\"#table-52\"><a href=\"#table-52\" class=\"excluded-xref\" excluded-id=\"table-52\">#table-52</a></emu-xref>:</p>\n        <emu-table id=\"table-52\" caption=\"&lt;i&gt;Iterable&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-52\">#table-52</span>:  <i>Iterable</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>%Symbol.iterator%</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>Iterator</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>Iterator</i> interface.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-asynciteratorprototype": {"num": "25.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The  <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ %Symbol.asyncIterator% ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype.split": {"num": "21.1.3.20", "title": "#sec-string.prototype.split String.prototype.split ( separator, limit )", "html": "<emu-clause id=\"sec-string.prototype.split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.split\">#sec-string.prototype.split</span> String.prototype.split ( <var>separator</var>, <var>limit</var> )</h1>\n        <p>Returns an Array object into which substrings of the result of converting this object to a String have been stored. The substrings are determined by searching from left to right for occurrences of <var>separator</var>; these occurrences are not part of any substring in the returned array, but serve to divide up the String value. The value of <var>separator</var> may be a String of any length or it may be an object, such as a RegExp, that has a %Symbol.split% method.</p>\n        <p>When the <code>split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>separator</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>separator</var>, %Symbol.split%).</li><li>If <var>splitter</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>splitter</var>, <var>separator</var>, &#171; <var>O</var>, <var>limit</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>).</li><li>Let <var>R</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>separator</var>).</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>If <var>separator</var> is <emu-val>undefined</emu-val>, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>s</var> be the length of <var>S</var>.</li><li>If <var>s</var> = 0, then<ol><li>Let <var>z</var> be <emu-xref aoid=\"SplitMatch\"><a href=\"#sec-splitmatch\">SplitMatch</a></emu-xref>(<var>S</var>, 0, <var>R</var>).</li><li>If <var>z</var> is not <emu-val>false</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &#8800; <var>s</var><ol><li>Let <var>e</var> be <emu-xref aoid=\"SplitMatch\"><a href=\"#sec-splitmatch\">SplitMatch</a></emu-xref>(<var>S</var>, <var>q</var>, <var>R</var>).</li><li>If <var>e</var> is <emu-val>false</emu-val>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>e</var> is an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> &#8804; <var>s</var>.</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>q</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>s</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The value of <var>separator</var> may be an empty String. In this case, <var>separator</var> does not match the empty substring at the beginning or end of the input String, nor does it match the empty substring at the end of the previous separator match. If <var>separator</var> is the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each substring contains one code unit.</p>\n          <p>If the <emu-val>this</emu-val> object is (or converts to) the empty String, the result depends on whether <var>separator</var> can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If <var>separator</var> is <emu-val>undefined</emu-val>, then the result array contains just one String, which is the <emu-val>this</emu-val> value (converted to a String). If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>split</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-splitmatch\"><h1><span class=\"secnum\">21.1.3.20.1</span>#sec-splitmatch Runtime Semantics: SplitMatch ( S, q, R )</h1>...</div></emu-clause>\n\n      "}, "sec-asynciterable-interface": {"num": "25.1.1.3", "title": "#sec-asynciterable-interface The  AsyncIterable Interface", "html": "<emu-clause id=\"sec-asynciterable-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciterable-interface\">#sec-asynciterable-interface</span> The  <i>AsyncIterable</i> Interface</h1>\n        <p>The  <i>AsyncIterable</i> interface includes the properties described in  <emu-xref href=\"#table-async-iterable\"><a href=\"#table-async-iterable\" class=\"excluded-xref\" excluded-id=\"table-async-iterable\">#table-async-iterable</a></emu-xref>:</p>\n        <emu-table id=\"table-async-iterable\" caption=\"&lt;i&gt;AsyncIterable&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterable\">#table-async-iterable</span>:  <i>AsyncIterable</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><code>%Symbol.asyncIterator%</code></td>\n              <td>A function that returns an  <i>AsyncIterator</i> object.</td>\n              <td>The returned object must conform to the  <i>AsyncIterator</i> interface.</td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n\n      "}, "sec-async-function-prototype-properties-toStringTag": {"num": "25.7.3.2", "title": "#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ %Symbol.toStringTag% ]", "html": "<emu-clause id=\"sec-async-function-prototype-properties-toStringTag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties-toStringTag\">#sec-async-function-prototype-properties-toStringTag</span> AsyncFunction.prototype [ %Symbol.toStringTag% ]</h1>\n\n        <p>The initial value of the %Symbol.toStringTag% property is the String value <emu-val>\"AsyncFunction\"</emu-val>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>is the value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>.</li>\n        <li>is <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.search": {"num": "19.4.2.11", "title": "#sec-symbol.search Symbol.search", "html": "<emu-clause id=\"sec-symbol.search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.search\">#sec-symbol.search</span> Symbol.search</h1>\n        <p>The initial value of <code>Symbol.search</code> is the well-known symbol %Symbol.search% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-isregexp": {"num": "7.2.9", "title": "#sec-isregexp IsRegExp ( argument )", "html": "<emu-clause id=\"sec-isregexp\" aoid=\"IsRegExp\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isregexp\">#sec-isregexp</span> IsRegExp ( <var>argument</var> )</h1>\n      <p>The abstract operation IsRegExp takes argument <var>argument</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>argument</var>) is not Object, return <emu-val>false</emu-val>.</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>argument</var>, %Symbol.match%).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(<var>matcher</var>).</li><li>If <var>argument</var> has a [[RegExpMatcher]] internal slot, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-symbol.match": {"num": "19.4.2.7", "title": "#sec-symbol.match Symbol.match", "html": "<emu-clause id=\"sec-symbol.match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.match\">#sec-symbol.match</span> Symbol.match</h1>\n        <p>The initial value of <code>Symbol.match</code> is the well-known symbol %Symbol.match% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-promise-prototype-object": {"num": "25.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">25.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">25.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">25.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">25.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">25.6.5.5</span>#sec-promise.prototype-%symbol.tostringtag% Promise.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "24.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Atomics\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events.  When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">24.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">24.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">24.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">24.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">24.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">24.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">24.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">24.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">24.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">24.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">24.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">24.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">24.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-%symbol.tostringtag%\"><h1><span class=\"secnum\">24.4.14</span>#sec-atomics-%symbol.tostringtag% Atomics [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n  "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>is the value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%Generator%</dfn> (see Figure 2).</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-generatorfunction.prototype-%symbol.tostringtag% GeneratorFunction.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.tostringtag": {"num": "19.4.2.15", "title": "#sec-symbol.tostringtag Symbol.toStringTag", "html": "<emu-clause id=\"sec-symbol.tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.tostringtag\">#sec-symbol.tostringtag</span> Symbol.toStringTag</h1>\n        <p>The initial value of <code>Symbol.toStringTag</code> is the well-known symbol %Symbol.toStringTag% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-weakmap-prototype-object": {"num": "23.3.3", "title": "#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-weakmap-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-weakmap-prototype-object\">#sec-properties-of-the-weakmap-prototype-object</span> Properties of the WeakMap Prototype Object</h1>\n      <p>The WeakMap prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakMapPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[WeakMapData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap.prototype.constructor\"><h1><span class=\"secnum\">23.3.3.1</span>#sec-weakmap.prototype.constructor WeakMap.prototype.constructor</h1>...</div><div id=\"excluded-sec-weakmap.prototype.delete\"><h1><span class=\"secnum\">23.3.3.2</span>#sec-weakmap.prototype.delete WeakMap.prototype.delete ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.get\"><h1><span class=\"secnum\">23.3.3.3</span>#sec-weakmap.prototype.get WeakMap.prototype.get ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.has\"><h1><span class=\"secnum\">23.3.3.4</span>#sec-weakmap.prototype.has WeakMap.prototype.has ( key )</h1>...</div><div id=\"excluded-sec-weakmap.prototype.set\"><h1><span class=\"secnum\">23.3.3.5</span>#sec-weakmap.prototype.set WeakMap.prototype.set ( key, value )</h1>...</div><div id=\"excluded-sec-weakmap.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">23.3.3.6</span>#sec-weakmap.prototype-%symbol.tostringtag% WeakMap.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-regexp-prototype-object": {"num": "21.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The RegExp prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExpPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <emu-val>\"valueOf\"</emu-val> property of its own; however, it inherits the <emu-val>\"valueOf\"</emu-val> property from the Object prototype object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">21.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">21.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">21.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">21.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">21.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">21.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-%symbol.match%\"><h1><span class=\"secnum\">21.2.5.7</span>#sec-regexp.prototype-%symbol.match% RegExp.prototype [ %Symbol.match% ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">21.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ %Symbol.matchAll% ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">21.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-%symbol.replace%\"><h1><span class=\"secnum\">21.2.5.10</span>#sec-regexp.prototype-%symbol.replace% RegExp.prototype [ %Symbol.replace% ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-%symbol.search%\"><h1><span class=\"secnum\">21.2.5.11</span>#sec-regexp.prototype-%symbol.search% RegExp.prototype [ %Symbol.search% ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">21.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-%symbol.split%\"><h1><span class=\"secnum\">21.2.5.13</span>#sec-regexp.prototype-%symbol.split% RegExp.prototype [ %Symbol.split% ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">21.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">21.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">21.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">21.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-sharedarraybuffer-constructor": {"num": "24.2.3", "title": "#sec-properties-of-the-sharedarraybuffer-constructor Properties of the SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-properties-of-the-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-sharedarraybuffer-constructor\">#sec-properties-of-the-sharedarraybuffer-constructor</span> Properties of the SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-sharedarraybuffer.prototype\"><h1><span class=\"secnum\">24.2.3.1</span>#sec-sharedarraybuffer.prototype SharedArrayBuffer.prototype</h1>...</div><div id=\"excluded-sec-sharedarraybuffer-%symbol.species%\"><h1><span class=\"secnum\">24.2.3.2</span>#sec-sharedarraybuffer-%symbol.species% get SharedArrayBuffer [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-%typedarrayprototype%-object": {"num": "22.2.3", "title": "#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray.prototype% Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarrayprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarrayprototype%-object\">#sec-properties-of-the-%typedarrayprototype%-object</span> Properties of the %TypedArray.prototype% Object</h1>\n      <p>The  <dfn>%TypedArray.prototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[ViewedArrayBuffer]] or any other of the internal slots that are specific to <var>TypedArray</var> instance objects.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-%typedarray%.prototype.buffer\"><h1><span class=\"secnum\">22.2.3.1</span>#sec-get-%typedarray%.prototype.buffer get %TypedArray%.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.bytelength\"><h1><span class=\"secnum\">22.2.3.2</span>#sec-get-%typedarray%.prototype.bytelength get %TypedArray%.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.byteoffset\"><h1><span class=\"secnum\">22.2.3.3</span>#sec-get-%typedarray%.prototype.byteoffset get %TypedArray%.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.constructor\"><h1><span class=\"secnum\">22.2.3.4</span>#sec-%typedarray%.prototype.constructor %TypedArray%.prototype.constructor</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.copywithin\"><h1><span class=\"secnum\">22.2.3.5</span>#sec-%typedarray%.prototype.copywithin %TypedArray%.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.entries\"><h1><span class=\"secnum\">22.2.3.6</span>#sec-%typedarray%.prototype.entries %TypedArray%.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.every\"><h1><span class=\"secnum\">22.2.3.7</span>#sec-%typedarray%.prototype.every %TypedArray%.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.fill\"><h1><span class=\"secnum\">22.2.3.8</span>#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.filter\"><h1><span class=\"secnum\">22.2.3.9</span>#sec-%typedarray%.prototype.filter %TypedArray%.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.find\"><h1><span class=\"secnum\">22.2.3.10</span>#sec-%typedarray%.prototype.find %TypedArray%.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.findindex\"><h1><span class=\"secnum\">22.2.3.11</span>#sec-%typedarray%.prototype.findindex %TypedArray%.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.foreach\"><h1><span class=\"secnum\">22.2.3.12</span>#sec-%typedarray%.prototype.foreach %TypedArray%.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.includes\"><h1><span class=\"secnum\">22.2.3.13</span>#sec-%typedarray%.prototype.includes %TypedArray%.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.indexof\"><h1><span class=\"secnum\">22.2.3.14</span>#sec-%typedarray%.prototype.indexof %TypedArray%.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.join\"><h1><span class=\"secnum\">22.2.3.15</span>#sec-%typedarray%.prototype.join %TypedArray%.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.keys\"><h1><span class=\"secnum\">22.2.3.16</span>#sec-%typedarray%.prototype.keys %TypedArray%.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.lastindexof\"><h1><span class=\"secnum\">22.2.3.17</span>#sec-%typedarray%.prototype.lastindexof %TypedArray%.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype.length\"><h1><span class=\"secnum\">22.2.3.18</span>#sec-get-%typedarray%.prototype.length get %TypedArray%.prototype.length</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.map\"><h1><span class=\"secnum\">22.2.3.19</span>#sec-%typedarray%.prototype.map %TypedArray%.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduce\"><h1><span class=\"secnum\">22.2.3.20</span>#sec-%typedarray%.prototype.reduce %TypedArray%.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reduceright\"><h1><span class=\"secnum\">22.2.3.21</span>#sec-%typedarray%.prototype.reduceright %TypedArray%.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.reverse\"><h1><span class=\"secnum\">22.2.3.22</span>#sec-%typedarray%.prototype.reverse %TypedArray%.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.set-overloaded-offset\"><h1><span class=\"secnum\">22.2.3.23</span>#sec-%typedarray%.prototype.set-overloaded-offset %TypedArray%.prototype.set ( overloaded [ , offset ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.slice\"><h1><span class=\"secnum\">22.2.3.24</span>#sec-%typedarray%.prototype.slice %TypedArray%.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.some\"><h1><span class=\"secnum\">22.2.3.25</span>#sec-%typedarray%.prototype.some %TypedArray%.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.sort\"><h1><span class=\"secnum\">22.2.3.26</span>#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.subarray\"><h1><span class=\"secnum\">22.2.3.27</span>#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tolocalestring\"><h1><span class=\"secnum\">22.2.3.28</span>#sec-%typedarray%.prototype.tolocalestring %TypedArray%.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.tostring\"><h1><span class=\"secnum\">22.2.3.29</span>#sec-%typedarray%.prototype.tostring %TypedArray%.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype.values\"><h1><span class=\"secnum\">22.2.3.30</span>#sec-%typedarray%.prototype.values %TypedArray%.prototype.values ( )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype-%symbol.iterator%\"><h1><span class=\"secnum\">22.2.3.31</span>#sec-%typedarray%.prototype-%symbol.iterator% %TypedArray%.prototype [ %Symbol.iterator% ] ( )</h1>...</div><div id=\"excluded-sec-get-%typedarray%.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">22.2.3.32</span>#sec-get-%typedarray%.prototype-%symbol.tostringtag% get %TypedArray%.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.replace": {"num": "19.4.2.10", "title": "#sec-symbol.replace Symbol.replace", "html": "<emu-clause id=\"sec-symbol.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.replace\">#sec-symbol.replace</span> Symbol.replace</h1>\n        <p>The initial value of <code>Symbol.replace</code> is the well-known symbol %Symbol.replace% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-arraybuffer-prototype-object": {"num": "24.1.4", "title": "#sec-properties-of-the-arraybuffer-prototype-object Properties of the ArrayBuffer Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-arraybuffer-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-arraybuffer-prototype-object\">#sec-properties-of-the-arraybuffer-prototype-object</span> Properties of the ArrayBuffer Prototype Object</h1>\n      <p>The ArrayBuffer prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayBufferPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have an [[ArrayBufferData]] or [[ArrayBufferByteLength]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-arraybuffer.prototype.bytelength\"><h1><span class=\"secnum\">24.1.4.1</span>#sec-get-arraybuffer.prototype.bytelength get ArrayBuffer.prototype.byteLength</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.constructor\"><h1><span class=\"secnum\">24.1.4.2</span>#sec-arraybuffer.prototype.constructor ArrayBuffer.prototype.constructor</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype.slice\"><h1><span class=\"secnum\">24.1.4.3</span>#sec-arraybuffer.prototype.slice ArrayBuffer.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">24.1.4.4</span>#sec-arraybuffer.prototype-%symbol.tostringtag% ArrayBuffer.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-createunmappedargumentsobject": {"num": "9.4.4.6", "title": "#sec-createunmappedargumentsobject CreateUnmappedArgumentsObject ( argumentsList )", "html": "<emu-clause id=\"sec-createunmappedargumentsobject\" aoid=\"CreateUnmappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</span> CreateUnmappedArgumentsObject ( <var>argumentsList</var> )</h1>\n        <p>The abstract operation CreateUnmappedArgumentsObject takes argument <var>argumentsList</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%, &#171; [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[ParameterMap]] to <emu-val>undefined</emu-val>.</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, %Symbol.iterator%, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Get]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Set]]: <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>obj</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-string.prototype.match": {"num": "21.1.3.11", "title": "#sec-string.prototype.match String.prototype.match ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.match\">#sec-string.prototype.match</span> String.prototype.match ( <var>regexp</var> )</h1>\n        <p>When the <code>match</code> method is called with argument <var>regexp</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, %Symbol.match%).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>undefined</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, %Symbol.match%, &#171; <var>S</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>match</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-symbol.iterator": {"num": "19.4.2.5", "title": "#sec-symbol.iterator Symbol.iterator", "html": "<emu-clause id=\"sec-symbol.iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.iterator\">#sec-symbol.iterator</span> Symbol.iterator</h1>\n        <p>The initial value of <code>Symbol.iterator</code> is the well-known symbol %Symbol.iterator% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-arrayspeciescreate": {"num": "9.4.2.3", "title": "#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )", "html": "<emu-clause id=\"sec-arrayspeciescreate\" aoid=\"ArraySpeciesCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrayspeciescreate\">#sec-arrayspeciescreate</span> ArraySpeciesCreate ( <var>originalArray</var>, <var>length</var> )</h1>\n        <p>The abstract operation ArraySpeciesCreate takes arguments <var>originalArray</var> and <var>length</var>. It is used to specify the creation of a new Array object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>originalArray</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsNonNegativeInteger\"><a href=\"#sec-isnonnegativeinteger\">IsNonNegativeInteger</a></emu-xref>(<var>length</var>) is <emu-val>true</emu-val>.</li><li>If <var>length</var> is <emu-val>-0</emu-val>, set <var>length</var> to <emu-val>+0</emu-val>.</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>originalArray</var>).</li><li>If <var>isArray</var> is <emu-val>false</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>originalArray</var>, <emu-val>\"constructor\"</emu-val>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>thisRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>realmC</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>C</var>).</li><li>If <var>thisRealm</var> and <var>realmC</var> are not the same <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>C</var>, <var>realmC</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>]]) is <emu-val>true</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is Object, then<ol><li>Set <var>C</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, %Symbol.species%).</li><li>If <var>C</var> is <emu-val>null</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>length</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If <var>originalArray</var> was created using the standard built-in Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> that is not the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, then a new Array is created using the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. This maintains compatibility with Web browsers that have historically had that behaviour for the <code>Array.prototype</code> methods that now are defined using ArraySpeciesCreate.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-value-properties-of-the-math-object": {"num": "20.3.1", "title": "#sec-value-properties-of-the-math-object Value Properties of the Math Object", "html": "<emu-clause id=\"sec-value-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-value-properties-of-the-math-object\">#sec-value-properties-of-the-math-object</span> Value Properties of the Math Object</h1>\n\n      <div id=\"excluded-sec-math.e\"><h1><span class=\"secnum\">20.3.1.1</span>#sec-math.e Math.E</h1>...</div><div id=\"excluded-sec-math.ln10\"><h1><span class=\"secnum\">20.3.1.2</span>#sec-math.ln10 Math.LN10</h1>...</div><div id=\"excluded-sec-math.ln2\"><h1><span class=\"secnum\">20.3.1.3</span>#sec-math.ln2 Math.LN2</h1>...</div><div id=\"excluded-sec-math.log10e\"><h1><span class=\"secnum\">20.3.1.4</span>#sec-math.log10e Math.LOG10E</h1>...</div><div id=\"excluded-sec-math.log2e\"><h1><span class=\"secnum\">20.3.1.5</span>#sec-math.log2e Math.LOG2E</h1>...</div><div id=\"excluded-sec-math.pi\"><h1><span class=\"secnum\">20.3.1.6</span>#sec-math.pi Math.PI</h1>...</div><div id=\"excluded-sec-math.sqrt1_2\"><h1><span class=\"secnum\">20.3.1.7</span>#sec-math.sqrt1_2 Math.SQRT1_2</h1>...</div><div id=\"excluded-sec-math.sqrt2\"><h1><span class=\"secnum\">20.3.1.8</span>#sec-math.sqrt2 Math.SQRT2</h1>...</div><div id=\"excluded-sec-math-%symbol.tostringtag%\"><h1><span class=\"secnum\">20.3.1.9</span>#sec-math-%symbol.tostringtag% Math [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-typedarray-object": {"num": "22.2.4.4", "title": "#sec-typedarray-object TypedArray ( object )", "html": "<emu-clause id=\"sec-typedarray-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-object\">#sec-typedarray-object</span> <var>TypedArray</var> ( <var>object</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object does not have either a [[TypedArrayName]] or an [[ArrayBufferData]] internal slot.</p>\n        <p><var>TypedArray</var> called with argument <var>object</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>object</var>) is Object and <var>object</var> does not have either a [[TypedArrayName]] or an [[ArrayBufferData]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>object</var>, %Symbol.iterator%).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>values</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>object</var>, <var>usingIterator</var>).</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <var>O</var>.</li></ol></li><li>NOTE: <var>object</var> is not an Iterable so assume it is already an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be <var>object</var>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref> (the <code>AsyncGeneratorFunction.prototype</code>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-sharedarraybuffer.prototype.toString": {"num": "24.2.4.4", "title": "#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ %Symbol.toStringTag% ]", "html": "<emu-clause id=\"sec-sharedarraybuffer.prototype.toString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer.prototype.toString\">#sec-sharedarraybuffer.prototype.toString</span> SharedArrayBuffer.prototype [ %Symbol.toStringTag% ]</h1>\n        <p>The initial value of the %Symbol.toStringTag% property is the String value <emu-val>\"SharedArrayBuffer\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-symbol.hasinstance": {"num": "19.4.2.3", "title": "#sec-symbol.hasinstance Symbol.hasInstance", "html": "<emu-clause id=\"sec-symbol.hasinstance\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.hasinstance\">#sec-symbol.hasinstance</span> Symbol.hasInstance</h1>\n        <p>The initial value of <code>Symbol.hasInstance</code> is the well-known symbol %Symbol.hasInstance% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-asynciteratorprototype-asynciterator": {"num": "25.1.3.1", "title": "#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ %Symbol.asyncIterator% ] ( )", "html": "<emu-clause id=\"sec-asynciteratorprototype-asynciterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype-asynciterator\">#sec-asynciteratorprototype-asynciterator</span> %AsyncIteratorPrototype% [ %Symbol.asyncIterator% ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.asyncIterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-string-prototype-object": {"num": "21.1.3", "title": "#sec-properties-of-the-string-prototype-object Properties of the String Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-string-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-string-prototype-object\">#sec-properties-of-the-string-prototype-object</span> Properties of the String Prototype Object</h1>\n      <p>The String prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%StringPrototype%</dfn>.</li>\n        <li>is a <emu-xref href=\"#string-exotic-object\"><a href=\"#string-exotic-object\">String exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a [[StringData]] internal slot whose value is the empty String.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly stated otherwise, the methods of the String prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be either a String value or an object that has a [[StringData]] internal slot that has been initialized to a String value.</p>\n      <p>The abstract operation  <dfn id=\"sec-thisstringvalue\" aoid=\"thisStringValue\">thisStringValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is String, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[StringData]] internal slot, then<ol><li>Let <var>s</var> be <var>value</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>s</var>) is String.</li><li>Return <var>s</var>.</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n\n      <div id=\"excluded-sec-string.prototype.charat\"><h1><span class=\"secnum\">21.1.3.1</span>#sec-string.prototype.charat String.prototype.charAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.charcodeat\"><h1><span class=\"secnum\">21.1.3.2</span>#sec-string.prototype.charcodeat String.prototype.charCodeAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.codepointat\"><h1><span class=\"secnum\">21.1.3.3</span>#sec-string.prototype.codepointat String.prototype.codePointAt ( pos )</h1>...</div><div id=\"excluded-sec-string.prototype.concat\"><h1><span class=\"secnum\">21.1.3.4</span>#sec-string.prototype.concat String.prototype.concat ( ...args )</h1>...</div><div id=\"excluded-sec-string.prototype.constructor\"><h1><span class=\"secnum\">21.1.3.5</span>#sec-string.prototype.constructor String.prototype.constructor</h1>...</div><div id=\"excluded-sec-string.prototype.endswith\"><h1><span class=\"secnum\">21.1.3.6</span>#sec-string.prototype.endswith String.prototype.endsWith ( searchString [ , endPosition ] )</h1>...</div><div id=\"excluded-sec-string.prototype.includes\"><h1><span class=\"secnum\">21.1.3.7</span>#sec-string.prototype.includes String.prototype.includes ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.indexof\"><h1><span class=\"secnum\">21.1.3.8</span>#sec-string.prototype.indexof String.prototype.indexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.lastindexof\"><h1><span class=\"secnum\">21.1.3.9</span>#sec-string.prototype.lastindexof String.prototype.lastIndexOf ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.localecompare\"><h1><span class=\"secnum\">21.1.3.10</span>#sec-string.prototype.localecompare String.prototype.localeCompare ( that [ , reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.match\"><h1><span class=\"secnum\">21.1.3.11</span>#sec-string.prototype.match String.prototype.match ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.matchall\"><h1><span class=\"secnum\">21.1.3.12</span>#sec-string.prototype.matchall String.prototype.matchAll ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.normalize\"><h1><span class=\"secnum\">21.1.3.13</span>#sec-string.prototype.normalize String.prototype.normalize ( [ form ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padend\"><h1><span class=\"secnum\">21.1.3.14</span>#sec-string.prototype.padend String.prototype.padEnd ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.padstart\"><h1><span class=\"secnum\">21.1.3.15</span>#sec-string.prototype.padstart String.prototype.padStart ( maxLength [ , fillString ] )</h1>...</div><div id=\"excluded-sec-string.prototype.repeat\"><h1><span class=\"secnum\">21.1.3.16</span>#sec-string.prototype.repeat String.prototype.repeat ( count )</h1>...</div><div id=\"excluded-sec-string.prototype.replace\"><h1><span class=\"secnum\">21.1.3.17</span>#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )</h1>...</div><div id=\"excluded-sec-string.prototype.search\"><h1><span class=\"secnum\">21.1.3.18</span>#sec-string.prototype.search String.prototype.search ( regexp )</h1>...</div><div id=\"excluded-sec-string.prototype.slice\"><h1><span class=\"secnum\">21.1.3.19</span>#sec-string.prototype.slice String.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.split\"><h1><span class=\"secnum\">21.1.3.20</span>#sec-string.prototype.split String.prototype.split ( separator, limit )</h1>...</div><div id=\"excluded-sec-string.prototype.startswith\"><h1><span class=\"secnum\">21.1.3.21</span>#sec-string.prototype.startswith String.prototype.startsWith ( searchString [ , position ] )</h1>...</div><div id=\"excluded-sec-string.prototype.substring\"><h1><span class=\"secnum\">21.1.3.22</span>#sec-string.prototype.substring String.prototype.substring ( start, end )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocalelowercase\"><h1><span class=\"secnum\">21.1.3.23</span>#sec-string.prototype.tolocalelowercase String.prototype.toLocaleLowerCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolocaleuppercase\"><h1><span class=\"secnum\">21.1.3.24</span>#sec-string.prototype.tolocaleuppercase String.prototype.toLocaleUpperCase ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-string.prototype.tolowercase\"><h1><span class=\"secnum\">21.1.3.25</span>#sec-string.prototype.tolowercase String.prototype.toLowerCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.tostring\"><h1><span class=\"secnum\">21.1.3.26</span>#sec-string.prototype.tostring String.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-string.prototype.touppercase\"><h1><span class=\"secnum\">21.1.3.27</span>#sec-string.prototype.touppercase String.prototype.toUpperCase ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trim\"><h1><span class=\"secnum\">21.1.3.28</span>#sec-string.prototype.trim String.prototype.trim ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimend\"><h1><span class=\"secnum\">21.1.3.29</span>#sec-string.prototype.trimend String.prototype.trimEnd ( )</h1>...</div><div id=\"excluded-sec-string.prototype.trimstart\"><h1><span class=\"secnum\">21.1.3.30</span>#sec-string.prototype.trimstart String.prototype.trimStart ( )</h1>...</div><div id=\"excluded-sec-string.prototype.valueof\"><h1><span class=\"secnum\">21.1.3.31</span>#sec-string.prototype.valueof String.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-string.prototype-%symbol.iterator%\"><h1><span class=\"secnum\">21.1.3.32</span>#sec-string.prototype-%symbol.iterator% String.prototype [ %Symbol.iterator% ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-module-namespace-objects": {"num": "26.3", "title": "#sec-module-namespace-objects Module Namespace Objects", "html": "<emu-clause id=\"sec-module-namespace-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</span> Module Namespace Objects</h1>\n    <p>A Module Namespace Object is a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> that provides runtime property-based access to a module's exported bindings. There is no <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function for Module Namespace Objects. Instead, such an object is created for each module that is imported by an <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> that includes a <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</p>\n    <p>In addition to the properties specified in  <emu-xref href=\"#sec-module-namespace-exotic-objects\"><a href=\"#sec-module-namespace-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-exotic-objects\">#sec-module-namespace-exotic-objects</a></emu-xref> each Module Namespace Object has the following own property:</p>\n\n    <div id=\"excluded-sec-%symbol.tostringtag%\"><h1><span class=\"secnum\">26.3.1</span>#sec-%symbol.tostringtag% %Symbol.toStringTag%</h1>...</div></emu-clause>\n"}, "sec-symbol.asynciterator": {"num": "19.4.2.1", "title": "#sec-symbol.asynciterator Symbol.asyncIterator", "html": "<emu-clause id=\"sec-symbol.asynciterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.asynciterator\">#sec-symbol.asynciterator</span> Symbol.asyncIterator</h1>\n        <p>The initial value of <code>Symbol.asyncIterator</code> is the well known symbol %Symbol.asyncIterator% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-array-constructor": {"num": "22.1.2", "title": "#sec-properties-of-the-array-constructor Properties of the Array Constructor", "html": "<emu-clause id=\"sec-properties-of-the-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-array-constructor\">#sec-properties-of-the-array-constructor</span> Properties of the Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-array.from\"><h1><span class=\"secnum\">22.1.2.1</span>#sec-array.from Array.from ( items [ , mapfn [ , thisArg ] ] )</h1>...</div><div id=\"excluded-sec-array.isarray\"><h1><span class=\"secnum\">22.1.2.2</span>#sec-array.isarray Array.isArray ( arg )</h1>...</div><div id=\"excluded-sec-array.of\"><h1><span class=\"secnum\">22.1.2.3</span>#sec-array.of Array.of ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype\"><h1><span class=\"secnum\">22.1.2.4</span>#sec-array.prototype Array.prototype</h1>...</div><div id=\"excluded-sec-get-array-%symbol.species%\"><h1><span class=\"secnum\">22.1.2.5</span>#sec-get-array-%symbol.species% get Array [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-%arrayiteratorprototype%-object": {"num": "22.1.5.2", "title": "#sec-%arrayiteratorprototype%-object The %ArrayIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%-object\">#sec-%arrayiteratorprototype%-object</span> The %ArrayIteratorPrototype% Object</h1>\n        <p>The  <dfn>%ArrayIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Array Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%arrayiteratorprototype%.next\"><h1><span class=\"secnum\">22.1.5.2.1</span>#sec-%arrayiteratorprototype%.next %ArrayIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%arrayiteratorprototype%-%symbol.tostringtag%\"><h1><span class=\"secnum\">22.1.5.2.2</span>#sec-%arrayiteratorprototype%-%symbol.tostringtag% %ArrayIteratorPrototype% [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n      "}, "sec-symbol.toprimitive": {"num": "19.4.2.14", "title": "#sec-symbol.toprimitive Symbol.toPrimitive", "html": "<emu-clause id=\"sec-symbol.toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.toprimitive\">#sec-symbol.toprimitive</span> Symbol.toPrimitive</h1>\n        <p>The initial value of <code>Symbol.toPrimitive</code> is the well-known symbol %Symbol.toPrimitive% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-prototype-tostringtag": {"num": "25.3.3.3", "title": "#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ %Symbol.toStringTag% ]", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">#sec-asyncgeneratorfunction-prototype-tostringtag</span> AsyncGeneratorFunction.prototype [ %Symbol.toStringTag% ]</h1>\n        <p>The initial value of the %Symbol.toStringTag% property is the String value <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-set-prototype-object": {"num": "23.2.3", "title": "#sec-properties-of-the-set-prototype-object Properties of the Set Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-set-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-set-prototype-object\">#sec-properties-of-the-set-prototype-object</span> Properties of the Set Prototype Object</h1>\n      <p>The Set prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SetPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[SetData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set.prototype.add\"><h1><span class=\"secnum\">23.2.3.1</span>#sec-set.prototype.add Set.prototype.add ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.clear\"><h1><span class=\"secnum\">23.2.3.2</span>#sec-set.prototype.clear Set.prototype.clear ( )</h1>...</div><div id=\"excluded-sec-set.prototype.constructor\"><h1><span class=\"secnum\">23.2.3.3</span>#sec-set.prototype.constructor Set.prototype.constructor</h1>...</div><div id=\"excluded-sec-set.prototype.delete\"><h1><span class=\"secnum\">23.2.3.4</span>#sec-set.prototype.delete Set.prototype.delete ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.entries\"><h1><span class=\"secnum\">23.2.3.5</span>#sec-set.prototype.entries Set.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-set.prototype.foreach\"><h1><span class=\"secnum\">23.2.3.6</span>#sec-set.prototype.foreach Set.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-set.prototype.has\"><h1><span class=\"secnum\">23.2.3.7</span>#sec-set.prototype.has Set.prototype.has ( value )</h1>...</div><div id=\"excluded-sec-set.prototype.keys\"><h1><span class=\"secnum\">23.2.3.8</span>#sec-set.prototype.keys Set.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-get-set.prototype.size\"><h1><span class=\"secnum\">23.2.3.9</span>#sec-get-set.prototype.size get Set.prototype.size</h1>...</div><div id=\"excluded-sec-set.prototype.values\"><h1><span class=\"secnum\">23.2.3.10</span>#sec-set.prototype.values Set.prototype.values ( )</h1>...</div><div id=\"excluded-sec-set.prototype-%symbol.iterator%\"><h1><span class=\"secnum\">23.2.3.11</span>#sec-set.prototype-%symbol.iterator% Set.prototype [ %Symbol.iterator% ] ( )</h1>...</div><div id=\"excluded-sec-set.prototype-%symbol.tostringtag%\"><h1><span class=\"secnum\">23.2.3.12</span>#sec-set.prototype-%symbol.tostringtag% Set.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-promise-constructor": {"num": "25.6.4", "title": "#sec-properties-of-the-promise-constructor Properties of the Promise Constructor", "html": "<emu-clause id=\"sec-properties-of-the-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-constructor\">#sec-properties-of-the-promise-constructor</span> Properties of the Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.all\"><h1><span class=\"secnum\">25.6.4.1</span>#sec-promise.all Promise.all ( iterable )</h1>...</div><div id=\"excluded-sec-promise.allsettled\"><h1><span class=\"secnum\">25.6.4.2</span>#sec-promise.allsettled Promise.allSettled ( iterable )</h1>...</div><div id=\"excluded-sec-promise.prototype\"><h1><span class=\"secnum\">25.6.4.3</span>#sec-promise.prototype Promise.prototype</h1>...</div><div id=\"excluded-sec-promise.race\"><h1><span class=\"secnum\">25.6.4.4</span>#sec-promise.race Promise.race ( iterable )</h1>...</div><div id=\"excluded-sec-promise.reject\"><h1><span class=\"secnum\">25.6.4.5</span>#sec-promise.reject Promise.reject ( r )</h1>...</div><div id=\"excluded-sec-promise.resolve\"><h1><span class=\"secnum\">25.6.4.6</span>#sec-promise.resolve Promise.resolve ( x )</h1>...</div><div id=\"excluded-sec-get-promise-%symbol.species%\"><h1><span class=\"secnum\">25.6.4.7</span>#sec-get-promise-%symbol.species% get Promise [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-instanceofoperator": {"num": "12.10.4", "title": "#sec-instanceofoperator Runtime Semantics: InstanceofOperator ( V, target )", "html": "<emu-clause id=\"sec-instanceofoperator\" aoid=\"InstanceofOperator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-instanceofoperator\">#sec-instanceofoperator</span> Runtime Semantics: InstanceofOperator ( <var>V</var>, <var>target</var> )</h1>\n      <p>The abstract operation InstanceofOperator takes arguments <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>target</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It implements the generic algorithm for determining if <var>V</var> is an instance of <var>target</var> either by consulting <var>target</var>'s %Symbol.hasInstance% method or, if absent, determining whether the value of <var>target</var>'s <emu-val>\"prototype\"</emu-val> property is present in <var>V</var>'s prototype chain. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>instOfHandler</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>target</var>, %Symbol.hasInstance%).</li><li>If <var>instOfHandler</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>instOfHandler</var>, <var>target</var>, &#171; <var>V</var> &#187;)).</li></ol></li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>target</var>, <var>V</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Steps 4 and 5 provide compatibility with previous editions of ECMAScript that did not use a %Symbol.hasInstance% method to define the <code>instanceof</code> operator semantics. If an object does not define or inherit %Symbol.hasInstance% it uses the default <code>instanceof</code> semantics.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-add-entries-from-iterable": {"num": "23.1.1.2", "title": "#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )", "html": "<emu-clause id=\"sec-add-entries-from-iterable\" aoid=\"AddEntriesFromIterable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-add-entries-from-iterable\">#sec-add-entries-from-iterable</span> AddEntriesFromIterable ( <var>target</var>, <var>iterable</var>, <var>adder</var> )</h1>\n        <p>The abstract operation AddEntriesFromIterable takes arguments <var>target</var>, <var>iterable</var>, and <var>adder</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>). <var>adder</var> will be invoked, with <var>target</var> as the receiver. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>adder</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>iterable</var> is present, and is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>.</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>target</var>.</li><li>Let <var>nextItem</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nextItem</var>) is not Object, then<ol><li>Let <var>error</var> be <emu-xref aoid=\"ThrowCompletion\"><a href=\"#sec-throwcompletion\">ThrowCompletion</a></emu-xref>(a newly created <emu-val>TypeError</emu-val> object).</li><li>Return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>error</var>).</li></ol></li><li>Let <var>k</var> be <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>nextItem</var>, <emu-val>\"0\"</emu-val>).</li><li>If <var>k</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>k</var>).</li><li>Let <var>v</var> be <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>nextItem</var>, <emu-val>\"1\"</emu-val>).</li><li>If <var>v</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>v</var>).</li><li>Let <var>status</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>adder</var>, <var>target</var>, &#171; <var>k</var>.[[Value]], <var>v</var>.[[Value]] &#187;).</li><li>If <var>status</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, return ?&#160;<emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>status</var>).\n        </li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The parameter <var>iterable</var> is expected to be an object that implements an %Symbol.iterator% method that returns an iterator object that produces a two element <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> whose first element is a value that will be used as a Map key and whose second element is the value to associate with that key.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-createmappedargumentsobject": {"num": "9.4.4.7", "title": "#sec-createmappedargumentsobject CreateMappedArgumentsObject ( func, formals, argumentsList, env )", "html": "<emu-clause id=\"sec-createmappedargumentsobject\" aoid=\"CreateMappedArgumentsObject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createmappedargumentsobject\">#sec-createmappedargumentsobject</span> CreateMappedArgumentsObject ( <var>func</var>, <var>formals</var>, <var>argumentsList</var>, <var>env</var> )</h1>\n        <p>The abstract operation CreateMappedArgumentsObject takes arguments <var>func</var> (an Object), <var>formals</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>), and <var>env</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>formals</var> does not contain a rest parameter, any binding patterns, or any initializers. It may contain duplicate identifiers.</li><li>Let <var>len</var> be the number of elements in <var>argumentsList</var>.</li><li>Let <var>obj</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]], [[ParameterMap]] &#187;).</li><li>Set <var>obj</var>.[[GetOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-getownproperty-p\"><a href=\"#sec-arguments-exotic-objects-getownproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-getownproperty-p\">#sec-arguments-exotic-objects-getownproperty-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-arguments-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-defineownproperty-p-desc\">#sec-arguments-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Set <var>obj</var>.[[Get]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-get-p-receiver\"><a href=\"#sec-arguments-exotic-objects-get-p-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-get-p-receiver\">#sec-arguments-exotic-objects-get-p-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Set]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-set-p-v-receiver\"><a href=\"#sec-arguments-exotic-objects-set-p-v-receiver\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-set-p-v-receiver\">#sec-arguments-exotic-objects-set-p-v-receiver</a></emu-xref>.</li><li>Set <var>obj</var>.[[Delete]] as specified in <emu-xref href=\"#sec-arguments-exotic-objects-delete-p\"><a href=\"#sec-arguments-exotic-objects-delete-p\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects-delete-p\">#sec-arguments-exotic-objects-delete-p</a></emu-xref>.</li><li>Set <var>obj</var>.[[Prototype]] to %Object.prototype%.</li><li>Let <var>map</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Set <var>obj</var>.[[ParameterMap]] to <var>map</var>.</li><li>Let <var>parameterNames</var> be the BoundNames of <var>formals</var>.</li><li>Let <var>numberOfParameters</var> be the number of elements in <var>parameterNames</var>.</li><li>Let <var>index</var> be 0.</li><li>Repeat, while <var>index</var> &lt; <var>len</var>,<ol><li>Let <var>val</var> be <var>argumentsList</var>[<var>index</var>].</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), <var>val</var>).</li><li>Set <var>index</var> to <var>index</var> + 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <var>len</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Let <var>mappedNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>index</var> be <var>numberOfParameters</var> - 1.</li><li>Repeat, while <var>index</var> &#8805; 0,<ol><li>Let <var>name</var> be <var>parameterNames</var>[<var>index</var>].</li><li>If <var>name</var> is not an element of <var>mappedNames</var>, then<ol><li>Add <var>name</var> as an element of the list <var>mappedNames</var>.</li><li>If <var>index</var> &lt; <var>len</var>, then<ol><li>Let <var>g</var> be <emu-xref aoid=\"MakeArgGetter\"><a href=\"#sec-makearggetter\">MakeArgGetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Let <var>p</var> be <emu-xref aoid=\"MakeArgSetter\"><a href=\"#sec-makeargsetter\">MakeArgSetter</a></emu-xref>(<var>name</var>, <var>env</var>).</li><li>Perform <var>map</var>.[[DefineOwnProperty]](! <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>index</var>), PropertyDescriptor { [[Set]]: <var>p</var>, [[Get]]: <var>g</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li></ol></li><li>Set <var>index</var> to <var>index</var> - 1.</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, %Symbol.iterator%, PropertyDescriptor { [[Value]]: %Array.prototype.values%, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>obj</var>, <emu-val>\"callee\"</emu-val>, PropertyDescriptor { [[Value]]: <var>func</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li><li>Return <var>obj</var>.\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-makearggetter\"><h1><span class=\"secnum\">9.4.4.7.1</span>#sec-makearggetter MakeArgGetter ( name, env )</h1>...</div><div id=\"excluded-sec-makeargsetter\"><h1><span class=\"secnum\">9.4.4.7.2</span>#sec-makeargsetter MakeArgSetter ( name, env )</h1>...</div></emu-clause>\n    "}, "sec-string.prototype.search": {"num": "21.1.3.18", "title": "#sec-string.prototype.search String.prototype.search ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.search\">#sec-string.prototype.search</span> String.prototype.search ( <var>regexp</var> )</h1>\n        <p>When the <code>search</code> method is called with argument <var>regexp</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>searcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, %Symbol.search%).</li><li>If <var>searcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>searcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>undefined</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, %Symbol.search%, &#171; <var>string</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>search</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-object-environment-records-hasbinding-n": {"num": "8.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasBinding for object Environment Records determines if its associated binding object has a property whose name is the value of the argument <var>N</var>:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, %Symbol.unscopables%).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-properties-of-the-arraybuffer-constructor": {"num": "24.1.3", "title": "#sec-properties-of-the-arraybuffer-constructor Properties of the ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-properties-of-the-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-arraybuffer-constructor\">#sec-properties-of-the-arraybuffer-constructor</span> Properties of the ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer.isview\"><h1><span class=\"secnum\">24.1.3.1</span>#sec-arraybuffer.isview ArrayBuffer.isView ( arg )</h1>...</div><div id=\"excluded-sec-arraybuffer.prototype\"><h1><span class=\"secnum\">24.1.3.2</span>#sec-arraybuffer.prototype ArrayBuffer.prototype</h1>...</div><div id=\"excluded-sec-get-arraybuffer-%symbol.species%\"><h1><span class=\"secnum\">24.1.3.3</span>#sec-get-arraybuffer-%symbol.species% get ArrayBuffer [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol.matchall": {"num": "19.4.2.8", "title": "#sec-symbol.matchall Symbol.matchAll", "html": "<emu-clause id=\"sec-symbol.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.matchall\">#sec-symbol.matchall</span> Symbol.matchAll</h1>\n        <p>The initial value of <code>Symbol.matchAll</code> is the well-known symbol %Symbol.matchAll% (<emu-xref href=\"#table-2\"><a href=\"#table-2\" class=\"excluded-xref\" excluded-id=\"table-2\">#table-2</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-%typedarray%-intrinsic-object": {"num": "22.2.2", "title": "#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">#sec-properties-of-the-%typedarray%-intrinsic-object</span> Properties of the %TypedArray% Intrinsic Object</h1>\n      <p>The <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref> intrinsic object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"TypedArray\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-%typedarray%.from\"><h1><span class=\"secnum\">22.2.2.1</span>#sec-%typedarray%.from %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.of\"><h1><span class=\"secnum\">22.2.2.2</span>#sec-%typedarray%.of %TypedArray%.of ( ...items )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype\"><h1><span class=\"secnum\">22.2.2.3</span>#sec-%typedarray%.prototype %TypedArray%.prototype</h1>...</div><div id=\"excluded-sec-get-%typedarray%-%symbol.species%\"><h1><span class=\"secnum\">22.2.2.4</span>#sec-get-%typedarray%-%symbol.species% get %TypedArray% [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-date-prototype-object": {"num": "20.4.4", "title": "#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-date-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</span> Properties of the Date Prototype Object</h1>\n      <p>The Date prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DatePrototype%</dfn>.</li>\n        <li>is itself an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Date instance and does not have a [[DateValue]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly defined otherwise, the methods of the Date prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be an object that has a [[DateValue]] internal slot that has been initialized to a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>.</p>\n      <p>The abstract operation  <dfn id=\"sec-thistimevalue\" aoid=\"thisTimeValue\">thisTimeValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Return <var>value</var>.[[DateValue]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>In following descriptions of functions that are properties of the Date prototype object, the phrase &#8220;<dfn id=\"this-Date-object\">this Date object</dfn>&#8221; refers to the object that is the <emu-val>this</emu-val> value for the invocation of the function. If the Type of the <emu-val>this</emu-val> value is not Object, a <emu-val>TypeError</emu-val> exception is thrown. The phrase &#8220;<dfn id=\"this-time-value\">this time value</dfn>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thistimevalue\"><a href=\"#sec-thistimevalue\">thisTimeValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-date.prototype.constructor\"><h1><span class=\"secnum\">20.4.4.1</span>#sec-date.prototype.constructor Date.prototype.constructor</h1>...</div><div id=\"excluded-sec-date.prototype.getdate\"><h1><span class=\"secnum\">20.4.4.2</span>#sec-date.prototype.getdate Date.prototype.getDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getday\"><h1><span class=\"secnum\">20.4.4.3</span>#sec-date.prototype.getday Date.prototype.getDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getfullyear\"><h1><span class=\"secnum\">20.4.4.4</span>#sec-date.prototype.getfullyear Date.prototype.getFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gethours\"><h1><span class=\"secnum\">20.4.4.5</span>#sec-date.prototype.gethours Date.prototype.getHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmilliseconds\"><h1><span class=\"secnum\">20.4.4.6</span>#sec-date.prototype.getmilliseconds Date.prototype.getMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getminutes\"><h1><span class=\"secnum\">20.4.4.7</span>#sec-date.prototype.getminutes Date.prototype.getMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmonth\"><h1><span class=\"secnum\">20.4.4.8</span>#sec-date.prototype.getmonth Date.prototype.getMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getseconds\"><h1><span class=\"secnum\">20.4.4.9</span>#sec-date.prototype.getseconds Date.prototype.getSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettime\"><h1><span class=\"secnum\">20.4.4.10</span>#sec-date.prototype.gettime Date.prototype.getTime ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettimezoneoffset\"><h1><span class=\"secnum\">20.4.4.11</span>#sec-date.prototype.gettimezoneoffset Date.prototype.getTimezoneOffset ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcdate\"><h1><span class=\"secnum\">20.4.4.12</span>#sec-date.prototype.getutcdate Date.prototype.getUTCDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcday\"><h1><span class=\"secnum\">20.4.4.13</span>#sec-date.prototype.getutcday Date.prototype.getUTCDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcfullyear\"><h1><span class=\"secnum\">20.4.4.14</span>#sec-date.prototype.getutcfullyear Date.prototype.getUTCFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutchours\"><h1><span class=\"secnum\">20.4.4.15</span>#sec-date.prototype.getutchours Date.prototype.getUTCHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.16</span>#sec-date.prototype.getutcmilliseconds Date.prototype.getUTCMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcminutes\"><h1><span class=\"secnum\">20.4.4.17</span>#sec-date.prototype.getutcminutes Date.prototype.getUTCMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmonth\"><h1><span class=\"secnum\">20.4.4.18</span>#sec-date.prototype.getutcmonth Date.prototype.getUTCMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcseconds\"><h1><span class=\"secnum\">20.4.4.19</span>#sec-date.prototype.getutcseconds Date.prototype.getUTCSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.setdate\"><h1><span class=\"secnum\">20.4.4.20</span>#sec-date.prototype.setdate Date.prototype.setDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setfullyear\"><h1><span class=\"secnum\">20.4.4.21</span>#sec-date.prototype.setfullyear Date.prototype.setFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.sethours\"><h1><span class=\"secnum\">20.4.4.22</span>#sec-date.prototype.sethours Date.prototype.setHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmilliseconds\"><h1><span class=\"secnum\">20.4.4.23</span>#sec-date.prototype.setmilliseconds Date.prototype.setMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setminutes\"><h1><span class=\"secnum\">20.4.4.24</span>#sec-date.prototype.setminutes Date.prototype.setMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmonth\"><h1><span class=\"secnum\">20.4.4.25</span>#sec-date.prototype.setmonth Date.prototype.setMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setseconds\"><h1><span class=\"secnum\">20.4.4.26</span>#sec-date.prototype.setseconds Date.prototype.setSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.settime\"><h1><span class=\"secnum\">20.4.4.27</span>#sec-date.prototype.settime Date.prototype.setTime ( time )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcdate\"><h1><span class=\"secnum\">20.4.4.28</span>#sec-date.prototype.setutcdate Date.prototype.setUTCDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcfullyear\"><h1><span class=\"secnum\">20.4.4.29</span>#sec-date.prototype.setutcfullyear Date.prototype.setUTCFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutchours\"><h1><span class=\"secnum\">20.4.4.30</span>#sec-date.prototype.setutchours Date.prototype.setUTCHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.31</span>#sec-date.prototype.setutcmilliseconds Date.prototype.setUTCMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcminutes\"><h1><span class=\"secnum\">20.4.4.32</span>#sec-date.prototype.setutcminutes Date.prototype.setUTCMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmonth\"><h1><span class=\"secnum\">20.4.4.33</span>#sec-date.prototype.setutcmonth Date.prototype.setUTCMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcseconds\"><h1><span class=\"secnum\">20.4.4.34</span>#sec-date.prototype.setutcseconds Date.prototype.setUTCSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.todatestring\"><h1><span class=\"secnum\">20.4.4.35</span>#sec-date.prototype.todatestring Date.prototype.toDateString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toisostring\"><h1><span class=\"secnum\">20.4.4.36</span>#sec-date.prototype.toisostring Date.prototype.toISOString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.tojson\"><h1><span class=\"secnum\">20.4.4.37</span>#sec-date.prototype.tojson Date.prototype.toJSON ( key )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaledatestring\"><h1><span class=\"secnum\">20.4.4.38</span>#sec-date.prototype.tolocaledatestring Date.prototype.toLocaleDateString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocalestring\"><h1><span class=\"secnum\">20.4.4.39</span>#sec-date.prototype.tolocalestring Date.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaletimestring\"><h1><span class=\"secnum\">20.4.4.40</span>#sec-date.prototype.tolocaletimestring Date.prototype.toLocaleTimeString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tostring\"><h1><span class=\"secnum\">20.4.4.41</span>#sec-date.prototype.tostring Date.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.totimestring\"><h1><span class=\"secnum\">20.4.4.42</span>#sec-date.prototype.totimestring Date.prototype.toTimeString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toutcstring\"><h1><span class=\"secnum\">20.4.4.43</span>#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.valueof\"><h1><span class=\"secnum\">20.4.4.44</span>#sec-date.prototype.valueof Date.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-date.prototype-%symbol.toprimitive%\"><h1><span class=\"secnum\">20.4.4.45</span>#sec-date.prototype-%symbol.toprimitive% Date.prototype [ %Symbol.toPrimitive% ] ( hint )</h1>...</div></emu-clause>\n\n    "}, "sec-getiterator": {"num": "7.4.1", "title": "#sec-getiterator GetIterator ( obj [ , hint [ , method ] ] )", "html": "<emu-clause id=\"sec-getiterator\" aoid=\"GetIterator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getiterator\">#sec-getiterator</span> GetIterator ( <var>obj</var> [ , <var>hint</var> [ , <var>method</var> ] ] )</h1>\n      <p>The abstract operation GetIterator takes argument <var>obj</var> and optional arguments <var>hint</var> and <var>method</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <var>hint</var> is not present, set <var>hint</var> to <emu-const>sync</emu-const>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>hint</var> is either <emu-const>sync</emu-const> or <emu-const>async</emu-const>.</li><li>If <var>method</var> is not present, then<ol><li>If <var>hint</var> is <emu-const>async</emu-const>, then<ol><li>Set <var>method</var> to ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>obj</var>, %Symbol.asyncIterator%).</li><li>If <var>method</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>syncMethod</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>obj</var>, %Symbol.iterator%).</li><li>Let <var>syncIteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>obj</var>, <emu-const>sync</emu-const>, <var>syncMethod</var>).</li><li>Return !&#160;<emu-xref aoid=\"CreateAsyncFromSyncIterator\"><a href=\"#sec-createasyncfromsynciterator\">CreateAsyncFromSyncIterator</a></emu-xref>(<var>syncIteratorRecord</var>).</li></ol></li></ol></li><li>Otherwise, set <var>method</var> to ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>obj</var>, %Symbol.iterator%).</li></ol></li><li>Let <var>iterator</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>method</var>, <var>obj</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>iterator</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>nextMethod</var> be ?&#160;<emu-xref aoid=\"GetV\"><a href=\"#sec-getv\">GetV</a></emu-xref>(<var>iterator</var>, <emu-val>\"next\"</emu-val>).</li><li>Let <var>iteratorRecord</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Iterator]]: <var>iterator</var>, [[NextMethod]]: <var>nextMethod</var>, [[Done]]: <emu-val>false</emu-val> }.</li><li>Return <var>iteratorRecord</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact": {"num": "D", "title": "#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact", "html": "<emu-annex id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact</span> Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact</h1>\n  <p><emu-xref href=\"#sec-candeclareglobalvar\"><a href=\"#sec-candeclareglobalvar\" class=\"excluded-xref\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</a></emu-xref>-<emu-xref href=\"#sec-createglobalfunctionbinding\"><a href=\"#sec-createglobalfunctionbinding\" class=\"excluded-xref\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</a></emu-xref> Edition 5 and 5.1 used a property existence test to determine whether a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> property corresponding to a new global declaration already existed. ECMAScript 2015 uses an own property existence test. This corresponds to what has been most commonly implemented by web browsers.</p>\n  <p><emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>: The 5<sup>th</sup> Edition moved the capture of the current array length prior to the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> conversion of the <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> or new length value. However, the captured length value could become invalid if the conversion process has the side-effect of changing the array length. ECMAScript 2015 specifies that the current array length must be captured after the possible occurrence of such side-effects.</p>\n  <p><emu-xref href=\"#sec-timeclip\"><a href=\"#sec-timeclip\" class=\"excluded-xref\" excluded-id=\"sec-timeclip\">#sec-timeclip</a></emu-xref>: Previous editions permitted the <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref> abstract operation to return either <emu-val>+0</emu-val> or <emu-val>-0</emu-val> as the representation of a 0 <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>. ECMAScript 2015 specifies that <emu-val>+0</emu-val> always returned. This means that for ECMAScript 2015 the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> of a Date object is never observably <emu-val>-0</emu-val> and methods that return time values never return <emu-val>-0</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>: If a UTC offset representation is not present, the local time zone is used. Edition 5.1 incorrectly stated that a missing time zone should be interpreted as <emu-val>\"z\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date.prototype.toisostring\"><a href=\"#sec-date.prototype.toisostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.toisostring\">#sec-date.prototype.toisostring</a></emu-xref>: If the year cannot be represented using the Date Time String Format specified in  <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref> a RangeError exception is thrown. Previous editions did not specify the behaviour for that case.</p>\n  <p><emu-xref href=\"#sec-date.prototype.tostring\"><a href=\"#sec-date.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</a></emu-xref>: Previous editions did not specify the value returned by <code>Date.prototype.toString</code> when <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref> is <emu-val>NaN</emu-val>. ECMAScript 2015 specifies the result to be the String value <emu-val>\"Invalid Date\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref>,  <emu-xref href=\"#sec-escaperegexppattern\"><a href=\"#sec-escaperegexppattern\" class=\"excluded-xref\" excluded-id=\"sec-escaperegexppattern\">#sec-escaperegexppattern</a></emu-xref>: Any LineTerminator code points in the value of the <emu-val>\"source\"</emu-val> property of a RegExp instance must be expressed using an escape sequence. Edition 5.1 only required the escaping of <code>/</code>.</p>\n  <p><emu-xref href=\"#sec-regexp.prototype-%symbol.match%\"><a href=\"#sec-regexp.prototype-%symbol.match%\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-%symbol.match%\">#sec-regexp.prototype-%symbol.match%</a></emu-xref>,  <emu-xref href=\"#sec-regexp.prototype-%symbol.replace%\"><a href=\"#sec-regexp.prototype-%symbol.replace%\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-%symbol.replace%\">#sec-regexp.prototype-%symbol.replace%</a></emu-xref>: In previous editions, the specifications for <code>String.prototype.match</code> and <code>String.prototype.replace</code> was incorrect for cases where the pattern argument was a RegExp value whose <code>global</code> flag is set. The previous specifications stated that for each attempt to match the pattern, if <code>lastIndex</code> did not change it should be incremented by 1. The correct behaviour is that <code>lastIndex</code> should be incremented by one only if the pattern matched the empty String.</p>\n  <p><emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>,  <emu-xref href=\"#sec-sortcompare\"><a href=\"#sec-sortcompare\" class=\"excluded-xref\" excluded-id=\"sec-sortcompare\">#sec-sortcompare</a></emu-xref>: Previous editions did not specify how a <emu-val>NaN</emu-val> value returned by a <var>comparefn</var> was interpreted by <code>Array.prototype.sort</code>. ECMAScript 2015 specifies that such as value is treated as if <emu-val>+0</emu-val> was returned from the <var>comparefn</var>. ECMAScript 2015 also specifies that <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is applied to the result returned by a <var>comparefn</var>. In previous editions, the effect of a <var>comparefn</var> result that is not a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> was implementation-dependent. In practice, implementations call <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>.</p>\n</emu-annex>\n\n"}, "sec-symbol.split": {"num": "19.4.2.13", "title": "#sec-symbol.split Symbol.split", "html": "<emu-clause id=\"sec-symbol.split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.split\">#sec-symbol.split</span> Symbol.split</h1>\n        <p>The initial value of <code>Symbol.split</code> is the well-known symbol %Symbol.split% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-set-constructor": {"num": "23.2.2", "title": "#sec-properties-of-the-set-constructor Properties of the Set Constructor", "html": "<emu-clause id=\"sec-properties-of-the-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-set-constructor\">#sec-properties-of-the-set-constructor</span> Properties of the Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-set.prototype\"><h1><span class=\"secnum\">23.2.2.1</span>#sec-set.prototype Set.prototype</h1>...</div><div id=\"excluded-sec-get-set-%symbol.species%\"><h1><span class=\"secnum\">23.2.2.2</span>#sec-get-set-%symbol.species% get Set [ %Symbol.species% ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-array-prototype-object": {"num": "22.1.3", "title": "#sec-properties-of-the-array-prototype-object Properties of the Array Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-array-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</span> Properties of the Array Prototype Object</h1>\n      <p>The Array prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayPrototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> and has the internal methods specified for such objects.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose initial value is 0 and whose attributes are { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Array prototype object is specified to be an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-array.prototype.concat\"><h1><span class=\"secnum\">22.1.3.1</span>#sec-array.prototype.concat Array.prototype.concat ( ...arguments )</h1>...</div><div id=\"excluded-sec-array.prototype.constructor\"><h1><span class=\"secnum\">22.1.3.2</span>#sec-array.prototype.constructor Array.prototype.constructor</h1>...</div><div id=\"excluded-sec-array.prototype.copywithin\"><h1><span class=\"secnum\">22.1.3.3</span>#sec-array.prototype.copywithin Array.prototype.copyWithin ( target, start [ , end ] )</h1>...</div><div id=\"excluded-sec-array.prototype.entries\"><h1><span class=\"secnum\">22.1.3.4</span>#sec-array.prototype.entries Array.prototype.entries ( )</h1>...</div><div id=\"excluded-sec-array.prototype.every\"><h1><span class=\"secnum\">22.1.3.5</span>#sec-array.prototype.every Array.prototype.every ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.fill\"><h1><span class=\"secnum\">22.1.3.6</span>#sec-array.prototype.fill Array.prototype.fill ( value [ , start [ , end ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.filter\"><h1><span class=\"secnum\">22.1.3.7</span>#sec-array.prototype.filter Array.prototype.filter ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.find\"><h1><span class=\"secnum\">22.1.3.8</span>#sec-array.prototype.find Array.prototype.find ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.findindex\"><h1><span class=\"secnum\">22.1.3.9</span>#sec-array.prototype.findindex Array.prototype.findIndex ( predicate [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flat\"><h1><span class=\"secnum\">22.1.3.10</span>#sec-array.prototype.flat Array.prototype.flat ( [ depth ] )</h1>...</div><div id=\"excluded-sec-array.prototype.flatmap\"><h1><span class=\"secnum\">22.1.3.11</span>#sec-array.prototype.flatmap Array.prototype.flatMap ( mapperFunction [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.foreach\"><h1><span class=\"secnum\">22.1.3.12</span>#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.includes\"><h1><span class=\"secnum\">22.1.3.13</span>#sec-array.prototype.includes Array.prototype.includes ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.indexof\"><h1><span class=\"secnum\">22.1.3.14</span>#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.join\"><h1><span class=\"secnum\">22.1.3.15</span>#sec-array.prototype.join Array.prototype.join ( separator )</h1>...</div><div id=\"excluded-sec-array.prototype.keys\"><h1><span class=\"secnum\">22.1.3.16</span>#sec-array.prototype.keys Array.prototype.keys ( )</h1>...</div><div id=\"excluded-sec-array.prototype.lastindexof\"><h1><span class=\"secnum\">22.1.3.17</span>#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )</h1>...</div><div id=\"excluded-sec-array.prototype.map\"><h1><span class=\"secnum\">22.1.3.18</span>#sec-array.prototype.map Array.prototype.map ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.pop\"><h1><span class=\"secnum\">22.1.3.19</span>#sec-array.prototype.pop Array.prototype.pop ( )</h1>...</div><div id=\"excluded-sec-array.prototype.push\"><h1><span class=\"secnum\">22.1.3.20</span>#sec-array.prototype.push Array.prototype.push ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.reduce\"><h1><span class=\"secnum\">22.1.3.21</span>#sec-array.prototype.reduce Array.prototype.reduce ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reduceright\"><h1><span class=\"secnum\">22.1.3.22</span>#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )</h1>...</div><div id=\"excluded-sec-array.prototype.reverse\"><h1><span class=\"secnum\">22.1.3.23</span>#sec-array.prototype.reverse Array.prototype.reverse ( )</h1>...</div><div id=\"excluded-sec-array.prototype.shift\"><h1><span class=\"secnum\">22.1.3.24</span>#sec-array.prototype.shift Array.prototype.shift ( )</h1>...</div><div id=\"excluded-sec-array.prototype.slice\"><h1><span class=\"secnum\">22.1.3.25</span>#sec-array.prototype.slice Array.prototype.slice ( start, end )</h1>...</div><div id=\"excluded-sec-array.prototype.some\"><h1><span class=\"secnum\">22.1.3.26</span>#sec-array.prototype.some Array.prototype.some ( callbackfn [ , thisArg ] )</h1>...</div><div id=\"excluded-sec-array.prototype.sort\"><h1><span class=\"secnum\">22.1.3.27</span>#sec-array.prototype.sort Array.prototype.sort ( comparefn )</h1>...</div><div id=\"excluded-sec-array.prototype.splice\"><h1><span class=\"secnum\">22.1.3.28</span>#sec-array.prototype.splice Array.prototype.splice ( start, deleteCount, ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.tolocalestring\"><h1><span class=\"secnum\">22.1.3.29</span>#sec-array.prototype.tolocalestring Array.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-array.prototype.tostring\"><h1><span class=\"secnum\">22.1.3.30</span>#sec-array.prototype.tostring Array.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-array.prototype.unshift\"><h1><span class=\"secnum\">22.1.3.31</span>#sec-array.prototype.unshift Array.prototype.unshift ( ...items )</h1>...</div><div id=\"excluded-sec-array.prototype.values\"><h1><span class=\"secnum\">22.1.3.32</span>#sec-array.prototype.values Array.prototype.values ( )</h1>...</div><div id=\"excluded-sec-array.prototype-%symbol.iterator%\"><h1><span class=\"secnum\">22.1.3.33</span>#sec-array.prototype-%symbol.iterator% Array.prototype [ %Symbol.iterator% ] ( )</h1>...</div><div id=\"excluded-sec-array.prototype-%symbol.unscopables%\"><h1><span class=\"secnum\">22.1.3.34</span>#sec-array.prototype-%symbol.unscopables% Array.prototype [ %Symbol.unscopables% ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgenerator-prototype-tostringtag": {"num": "25.5.1.5", "title": "#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ %Symbol.toStringTag% ]", "html": "<emu-clause id=\"sec-asyncgenerator-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-prototype-tostringtag\">#sec-asyncgenerator-prototype-tostringtag</span> AsyncGenerator.prototype [ %Symbol.toStringTag% ]</h1>\n        <p>The initial value of the %Symbol.toStringTag% property is the String value <emu-val>\"AsyncGenerator\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n    "}, "sec-symbol.species": {"num": "19.4.2.12", "title": "#sec-symbol.species Symbol.species", "html": "<emu-clause id=\"sec-symbol.species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.species\">#sec-symbol.species</span> Symbol.species</h1>\n        <p>The initial value of <code>Symbol.species</code> is the well-known symbol %Symbol.species% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-toprimitive": {"num": "7.1.1", "title": "#sec-toprimitive ToPrimitive ( input [ , PreferredType ] )", "html": "<emu-clause id=\"sec-toprimitive\" aoid=\"ToPrimitive\" oldids=\"table-9\">\n      <span id=\"table-9\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toprimitive\">#sec-toprimitive</span> ToPrimitive ( <var>input</var> [ , <var>PreferredType</var> ] )</h1>\n      <p>The abstract operation ToPrimitive takes argument <var>input</var> and optional argument <var>PreferredType</var>. It converts its <var>input</var> argument to a non-Object type. If an object is capable of converting to more than one primitive type, it may use the optional hint <var>PreferredType</var> to favour that type. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>input</var> is an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>input</var>) is Object, then<ol><li>If <var>PreferredType</var> is not present, let <var>hint</var> be <emu-val>\"default\"</emu-val>.</li><li>Else if <var>PreferredType</var> is hint String, let <var>hint</var> be <emu-val>\"string\"</emu-val>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>PreferredType</var> is hint Number.</li><li>Let <var>hint</var> be <emu-val>\"number\"</emu-val>.</li></ol></li><li>Let <var>exoticToPrim</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>input</var>, %Symbol.toPrimitive%).</li><li>If <var>exoticToPrim</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>exoticToPrim</var>, <var>input</var>, &#171; <var>hint</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>) is not Object, return <var>result</var>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>hint</var> is <emu-val>\"default\"</emu-val>, set <var>hint</var> to <emu-val>\"number\"</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>input</var>, <var>hint</var>).</li></ol></li><li>Return <var>input</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When ToPrimitive is called with no hint, then it generally behaves as if the hint were Number. However, objects may over-ride this behaviour by defining a %Symbol.toPrimitive% method. Of the objects defined in this specification only Date objects (see  <emu-xref href=\"#sec-date.prototype-%symbol.toprimitive%\"><a href=\"#sec-date.prototype-%symbol.toprimitive%\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype-%symbol.toprimitive%\">#sec-date.prototype-%symbol.toprimitive%</a></emu-xref>) and Symbol objects (see  <emu-xref href=\"#sec-symbol.prototype-%symbol.toprimitive%\"><a href=\"#sec-symbol.prototype-%symbol.toprimitive%\" class=\"excluded-xref\" excluded-id=\"sec-symbol.prototype-%symbol.toprimitive%\">#sec-symbol.prototype-%symbol.toprimitive%</a></emu-xref>) over-ride the default ToPrimitive behaviour. Date objects treat no hint as if the hint were String.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-ordinarytoprimitive\"><h1><span class=\"secnum\">7.1.1.1</span>#sec-ordinarytoprimitive OrdinaryToPrimitive ( O, hint )</h1>...</div></emu-clause>\n\n    "}, "sec-async-function-prototype-properties": {"num": "25.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>is the value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">25.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">25.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-iterable": {"num": "23.3.1.1", "title": "#sec-weakmap-iterable WeakMap ( [ iterable ] )", "html": "<emu-clause id=\"sec-weakmap-iterable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-iterable\">#sec-weakmap-iterable</span> WeakMap ( [ <var>iterable</var> ] )</h1>\n        <p>When the <code>WeakMap</code> function is called with optional argument <var>iterable</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>map</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%WeakMap.prototype%\"</emu-val>, &#171; [[WeakMapData]] &#187;).</li><li>Set <var>map</var>.[[WeakMapData]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If <var>iterable</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <var>map</var>.</li><li>Let <var>adder</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>map</var>, <emu-val>\"set\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"AddEntriesFromIterable\"><a href=\"#sec-add-entries-from-iterable\">AddEntriesFromIterable</a></emu-xref>(<var>map</var>, <var>iterable</var>, <var>adder</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If the parameter <var>iterable</var> is present, it is expected to be an object that implements an %Symbol.iterator% method that returns an iterator object that produces a two element <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref> whose first element is a value that will be used as a WeakMap key and whose second element is the value to associate with that key.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-speciesconstructor": {"num": "7.3.22", "title": "#sec-speciesconstructor SpeciesConstructor ( O, defaultConstructor )", "html": "<emu-clause id=\"sec-speciesconstructor\" aoid=\"SpeciesConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-speciesconstructor\">#sec-speciesconstructor</span> SpeciesConstructor ( <var>O</var>, <var>defaultConstructor</var> )</h1>\n      <p>The abstract operation SpeciesConstructor takes arguments <var>O</var> (an Object) and <var>defaultConstructor</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It is used to retrieve the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that should be used to create new objects that are derived from <var>O</var>. <var>defaultConstructor</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use if a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> %Symbol.species% property cannot be found starting from <var>O</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <emu-val>\"constructor\"</emu-val>).</li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return <var>defaultConstructor</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, %Symbol.species%).</li><li>If <var>S</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <var>defaultConstructor</var>.</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>S</var>) is <emu-val>true</emu-val>, return <var>S</var>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-isconcatspreadable": {"num": "22.1.3.1.1", "title": "#sec-isconcatspreadable Runtime Semantics: IsConcatSpreadable ( O )", "html": "<emu-clause id=\"sec-isconcatspreadable\" aoid=\"IsConcatSpreadable\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isconcatspreadable\">#sec-isconcatspreadable</span> Runtime Semantics: IsConcatSpreadable ( <var>O</var> )</h1>\n          <p>The abstract operation IsConcatSpreadable takes argument <var>O</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, return <emu-val>false</emu-val>.</li><li>Let <var>spreadable</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, %Symbol.isConcatSpreadable%).</li><li>If <var>spreadable</var> is not <emu-val>undefined</emu-val>, return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(<var>spreadable</var>).</li><li>Return ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>O</var>).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-%regexpstringiteratorprototype%-object": {"num": "21.2.7.1", "title": "#sec-%regexpstringiteratorprototype%-object The %RegExpStringIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%regexpstringiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%regexpstringiteratorprototype%-object\">#sec-%regexpstringiteratorprototype%-object</span> The %RegExpStringIteratorPrototype% Object</h1>\n        <p>The  <dfn>%RegExpStringIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all RegExp String Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is the intrinsic object <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%regexpstringiteratorprototype%.next\"><h1><span class=\"secnum\">21.2.7.1.1</span>#sec-%regexpstringiteratorprototype%.next %RegExpStringIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%regexpstringiteratorprototype%-%symbol.tostringtag%\"><h1><span class=\"secnum\">21.2.7.1.2</span>#sec-%regexpstringiteratorprototype%-%symbol.tostringtag% %RegExpStringIteratorPrototype% [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n      "}, "sec-%stringiteratorprototype%-object": {"num": "21.1.5.2", "title": "#sec-%stringiteratorprototype%-object The %StringIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%stringiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%-object\">#sec-%stringiteratorprototype%-object</span> The %StringIteratorPrototype% Object</h1>\n        <p>The  <dfn>%StringIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all String Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%stringiteratorprototype%.next\"><h1><span class=\"secnum\">21.1.5.2.1</span>#sec-%stringiteratorprototype%.next %StringIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%stringiteratorprototype%-%symbol.tostringtag%\"><h1><span class=\"secnum\">21.1.5.2.2</span>#sec-%stringiteratorprototype%-%symbol.tostringtag% %StringIteratorPrototype% [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n      "}, "sec-symbol.unscopables": {"num": "19.4.2.16", "title": "#sec-symbol.unscopables Symbol.unscopables", "html": "<emu-clause id=\"sec-symbol.unscopables\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.unscopables\">#sec-symbol.unscopables</span> Symbol.unscopables</h1>\n        <p>The initial value of <code>Symbol.unscopables</code> is the well-known symbol %Symbol.unscopables% (<emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-well-known-symbols": {"num": "6.1.5.1", "title": "#sec-well-known-symbols Well-Known Symbols", "html": "<emu-clause id=\"sec-well-known-symbols\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-symbols\">#sec-well-known-symbols</span> Well-Known Symbols</h1>\n        <p>Well-known symbols are built-in Symbol values that are explicitly referenced by algorithms of this specification. They are typically used as the keys of properties whose values serve as extension points of a specification algorithm. Unless otherwise specified, well-known symbols values are shared by all realms (<emu-xref href=\"#sec-code-realms\"><a href=\"#sec-code-realms\" class=\"excluded-xref\" excluded-id=\"sec-code-realms\">#sec-code-realms</a></emu-xref>).</p>\n        <p>Within this specification a well-known symbol is referred to using the standard  <emu-xref href=\"#sec-well-known-intrinsic-objects\"><a href=\"#sec-well-known-intrinsic-objects\">intrinsic notation</a></emu-xref> where the intrinsic is one of the values listed in  <emu-xref href=\"#table-1\"><a href=\"#table-1\" class=\"excluded-xref\" excluded-id=\"table-1\">#table-1</a></emu-xref>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">Previous editions of this specification used a notation of the form @@name, where the current edition would use <code>%Symbol.name%</code>.</div></emu-note>\n        <emu-table id=\"table-1\" caption=\"Well-known Symbols\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-1\">#table-1</span>: Well-known Symbols</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Specification Name\n              \n              </th>\n              <th>\n                [[Description]]\n              \n              </th>\n              <th>\n                Value and Purpose\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.asyncIterator%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.asyncIterator\"</emu-val>\n              \n              </td>\n              <td>\n                A method that returns the default AsyncIterator for an object. Called by the semantics of the <code>for</code>-<code>await</code>-<code>of</code> statement.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.hasInstance%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.hasInstance\"</emu-val>\n              \n              </td>\n              <td>\n                A method that determines if a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> object recognizes an object as one of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s instances. Called by the semantics of the <code>instanceof</code> operator.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.isConcatSpreadable%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.isConcatSpreadable\"</emu-val>\n              \n              </td>\n              <td>\n                A Boolean valued property that if true indicates that an object should be flattened to its array elements by  <emu-xref href=\"#sec-array.prototype.concat\"><a href=\"#sec-array.prototype.concat\"><code>Array.prototype.concat</code></a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.iterator%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.iterator\"</emu-val>\n              \n              </td>\n              <td>\n                A method that returns the default Iterator for an object. Called by the semantics of the for-of statement.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.match%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.match\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that matches the regular expression against a string. Called by the  <emu-xref href=\"#sec-string.prototype.match\"><a href=\"#sec-string.prototype.match\"><code>String.prototype.match</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.matchAll%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.matchAll\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that returns an iterator, that yields matches of the regular expression against a string. Called by the  <emu-xref href=\"#sec-string.prototype.matchall\"><a href=\"#sec-string.prototype.matchall\"><code>String.prototype.matchAll</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.replace%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.replace\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that replaces matched substrings of a string. Called by the  <emu-xref href=\"#sec-string.prototype.replace\"><a href=\"#sec-string.prototype.replace\"><code>String.prototype.replace</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.search%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.search\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that returns the index within a string that matches the regular expression. Called by the  <emu-xref href=\"#sec-string.prototype.search\"><a href=\"#sec-string.prototype.search\"><code>String.prototype.search</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.species%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.species\"</emu-val>\n              \n              </td>\n              <td>\n                A function valued property that is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is used to create derived objects.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.split%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.split\"</emu-val>\n              \n              </td>\n              <td>\n                A regular expression method that splits a string at the indices that match the regular expression. Called by the  <emu-xref href=\"#sec-string.prototype.split\"><a href=\"#sec-string.prototype.split\"><code>String.prototype.split</code></a></emu-xref> method.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.toPrimitive%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.toPrimitive\"</emu-val>\n              \n              </td>\n              <td>\n                A method that converts an object to a corresponding primitive value. Called by the <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> abstract operation.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.toStringTag%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.toStringTag\"</emu-val>\n              \n              </td>\n              <td>\n                A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method  <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\"><code>Object.prototype.toString</code></a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Symbol.unscopables%\n              \n              </td>\n              <td>\n                <emu-val>\"Symbol.unscopables\"</emu-val>\n              \n              </td>\n              <td>\n                An object valued property whose own and inherited property names are property names that are excluded from the <code>with</code> environment bindings of the associated object.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-regexp-prototype-matchall": {"num": "21.2.5.8", "title": "#sec-regexp-prototype-matchall RegExp.prototype [ %Symbol.matchAll% ] ( string )", "html": "<emu-clause id=\"sec-regexp-prototype-matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-prototype-matchall\">#sec-regexp-prototype-matchall</span> RegExp.prototype [ %Symbol.matchAll% ] ( <var>string</var> )</h1>\n        <p>When the <code>%Symbol.matchAll%</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"flags\"</emu-val>)).</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>R</var>, <var>flags</var> &#187;).</li><li>Let <var>lastIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"lastIndex\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>matcher</var>, <emu-val>\"lastIndex\"</emu-val>, <var>lastIndex</var>, <emu-val>true</emu-val>).</li><li>If <var>flags</var> contains <emu-val>\"g\"</emu-val>, let <var>global</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>global</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <emu-val>\"u\"</emu-val>, let <var>fullUnicode</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>fullUnicode</var> be <emu-val>false</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"CreateRegExpStringIterator\"><a href=\"#sec-createregexpstringiterator\">CreateRegExpStringIterator</a></emu-xref>(<var>matcher</var>, <var>S</var>, <var>global</var>, <var>fullUnicode</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.matchAll]\"</emu-val>.</p>\n\n        <div id=\"excluded-sec-createregexpstringiterator\"><h1><span class=\"secnum\">21.2.5.8.1</span>#sec-createregexpstringiterator CreateRegExpStringIterator ( R, S, global, fullUnicode )</h1>...</div></emu-clause>\n\n      "}, "sec-%setiteratorprototype%-object": {"num": "23.2.5.2", "title": "#sec-%setiteratorprototype%-object The %SetIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%setiteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%-object\">#sec-%setiteratorprototype%-object</span> The %SetIteratorPrototype% Object</h1>\n        <p>The  <dfn>%SetIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Set Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%setiteratorprototype%.next\"><h1><span class=\"secnum\">23.2.5.2.1</span>#sec-%setiteratorprototype%.next %SetIteratorPrototype%.next ( )</h1>...</div><div id=\"excluded-sec-%setiteratorprototype%-%symbol.tostringtag%\"><h1><span class=\"secnum\">23.2.5.2.2</span>#sec-%setiteratorprototype%-%symbol.tostringtag% %SetIteratorPrototype% [ %Symbol.toStringTag% ]</h1>...</div></emu-clause>\n\n      "}, "sec-%iteratorprototype%-object": {"num": "25.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The  <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-%symbol.iterator%\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-%iteratorprototype%-%symbol.iterator% %IteratorPrototype% [ %Symbol.iterator% ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-%typedarray%.from": {"num": "22.2.2.1", "title": "#sec-%typedarray%.from %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )", "html": "<emu-clause id=\"sec-%typedarray%.from\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.from\">#sec-%typedarray%.from</span> %TypedArray%.from ( <var>source</var> [ , <var>mapfn</var> [ , <var>thisArg</var> ] ] )</h1>\n        <p>When the <code>from</code> method is called with argument <var>source</var>, and optional arguments <var>mapfn</var> and <var>thisArg</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>mapfn</var> is <emu-val>undefined</emu-val>, let <var>mapping</var> be <emu-val>false</emu-val>.</li><li>Else,<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>mapfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>mapping</var> be <emu-val>true</emu-val>.</li></ol></li><li>Let <var>usingIterator</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>source</var>, %Symbol.iterator%).</li><li>If <var>usingIterator</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>values</var> be ?&#160;<emu-xref aoid=\"IterableToList\"><a href=\"#sec-iterabletolist\">IterableToList</a></emu-xref>(<var>source</var>, <var>usingIterator</var>).</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Let <var>targetObj</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>C</var>, &#171; <var>len</var> &#187;).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var> &#187;).</li></ol></li><li>Else, let <var>mappedValue</var> be <var>kValue</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>targetObj</var>, <var>Pk</var>, <var>mappedValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return <var>targetObj</var>.</li></ol></li><li>NOTE: <var>source</var> is not an Iterable so assume it is already an <emu-xref href=\"#sec-lengthofarraylike\"><a href=\"#sec-lengthofarraylike\">array-like object</a></emu-xref>.</li><li>Let <var>arrayLike</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>source</var>).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Let <var>targetObj</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>C</var>, &#171; <var>len</var> &#187;).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>If <var>mapping</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>mapfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <var>k</var> &#187;).</li></ol></li><li>Else, let <var>mappedValue</var> be <var>kValue</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>targetObj</var>, <var>Pk</var>, <var>mappedValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>targetObj</var>.\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-iterabletolist\"><h1><span class=\"secnum\">22.2.2.1.1</span>#sec-iterabletolist Runtime Semantics: IterableToList ( items, method )</h1>...</div></emu-clause>\n\n      "}}, "figData": {"table-1": "Table 1", "table-2": "Table 3", "table-5": "Table 6", "table-27": "Table 27", "table-the-typedarray-constructors": "Table 61", "table-52": "Table 65", "table-async-iterable": "Table 68", "table-56": "Table 73", "table-internal-slots-of-asyncgenerator-instances": "Table 74"}}}