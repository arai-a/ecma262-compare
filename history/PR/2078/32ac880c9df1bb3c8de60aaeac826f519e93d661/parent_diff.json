{"from": {"secList": ["sec-getsuperbase", "sec-makesuperpropertyreference"], "secData": {"sec-getsuperbase": {"num": "8.1.1.3.5", "title": "#sec-getsuperbase GetSuperBase ( )", "html": "<emu-clause id=\"sec-getsuperbase\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getsuperbase\">#sec-getsuperbase</span> GetSuperBase ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>home</var> be <var>envRec</var>.[[HomeObject]].</li><li>If <var>home</var> has the value <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>home</var>) is Object.</li><li>Return ? <var>home</var>.[[GetPrototypeOf]]().</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-makesuperpropertyreference": {"num": "12.3.7.3", "title": "#sec-makesuperpropertyreference Runtime Semantics: MakeSuperPropertyReference ( actualThis, propertyKey, strict )", "html": "<emu-clause id=\"sec-makesuperpropertyreference\" aoid=\"MakeSuperPropertyReference\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makesuperpropertyreference\">#sec-makesuperpropertyreference</span> Runtime Semantics: MakeSuperPropertyReference ( <var>actualThis</var>, <var>propertyKey</var>, <var>strict</var> )</h1>\n        <p>The abstract operation MakeSuperPropertyReference takes arguments <var>actualThis</var>, <var>propertyKey</var>, and <var>strict</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be <emu-xref aoid=\"GetThisEnvironment\"><a href=\"#sec-getthisenvironment\">GetThisEnvironment</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>env</var>.HasSuperBinding() is <emu-val>true</emu-val>.</li><li>Let <var>baseValue</var> be ? <var>env</var>.GetSuperBase().</li><li>Let <var>bv</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>baseValue</var>).</li><li>Return a value of type <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref> that is a <emu-xref href=\"#super-reference\"><a href=\"#super-reference\">Super Reference</a></emu-xref> whose base value component is <var>bv</var>, whose referenced name component is <var>propertyKey</var>, whose thisValue component is <var>actualThis</var>, and whose strict reference flag is <var>strict</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}}, "figData": {}}, "to": {"secList": ["sec-getsuperbase", "sec-makesuperpropertyreference"], "secData": {"sec-getsuperbase": {"num": "8.1.1.3.5", "title": "#sec-getsuperbase GetSuperBase ( )", "html": "<emu-clause id=\"sec-getsuperbase\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getsuperbase\">#sec-getsuperbase</span> GetSuperBase ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>home</var> be <var>envRec</var>.[[HomeObject]].</li><li>If <var>home</var> has the value <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li id=\"step-getsuperbase-assert\"><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>home</var> is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li><li>Return ! <var>home</var>.[[GetPrototypeOf]]().</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>The assert in step <emu-xref href=\"#step-getsuperbase-assert\"><a href=\"#step-getsuperbase-assert\" class=\"excluded-xref\" excluded-id=\"step-getsuperbase-assert\">#step-getsuperbase-assert</a></emu-xref> is due to no observable facility to redefine the [[HomeObject]] internal slot from ECMAScript code, rather than an intentional design decision.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-makesuperpropertyreference": {"num": "12.3.7.3", "title": "#sec-makesuperpropertyreference Runtime Semantics: MakeSuperPropertyReference ( actualThis, propertyKey, strict )", "html": "<emu-clause id=\"sec-makesuperpropertyreference\" aoid=\"MakeSuperPropertyReference\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makesuperpropertyreference\">#sec-makesuperpropertyreference</span> Runtime Semantics: MakeSuperPropertyReference ( <var>actualThis</var>, <var>propertyKey</var>, <var>strict</var> )</h1>\n        <p>The abstract operation MakeSuperPropertyReference takes arguments <var>actualThis</var>, <var>propertyKey</var>, and <var>strict</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be <emu-xref aoid=\"GetThisEnvironment\"><a href=\"#sec-getthisenvironment\">GetThisEnvironment</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>env</var>.HasSuperBinding() is <emu-val>true</emu-val>.</li><li>Let <var>baseValue</var> be ! <var>env</var>.GetSuperBase().</li><li>Let <var>bv</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>baseValue</var>).</li><li>Return a value of type <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref> that is a <emu-xref href=\"#super-reference\"><a href=\"#super-reference\">Super Reference</a></emu-xref> whose base value component is <var>bv</var>, whose referenced name component is <var>propertyKey</var>, whose thisValue component is <var>actualThis</var>, and whose strict reference flag is <var>strict</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}}, "figData": {}}}