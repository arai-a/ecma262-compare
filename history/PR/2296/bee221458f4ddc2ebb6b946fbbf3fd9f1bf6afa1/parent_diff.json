{"from": {"secList": ["sec-splitmatch"], "secData": {"sec-splitmatch": {"num": "22.1.3.21.1", "title": "#sec-splitmatch SplitMatch ( S, q, R )", "html": "<emu-clause id=\"sec-splitmatch\" aoid=\"SplitMatch\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-splitmatch\">#sec-splitmatch</span> SplitMatch ( <var>S</var>, <var>q</var>, <var>R</var> )</h1>\n          <p>The abstract operation SplitMatch takes arguments <var>S</var> (a String), <var>q</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), and <var>R</var> (a String). It returns either <emu-const>not-matched</emu-const> or the end index of a match. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is String.</li><li>Let <var>r</var> be the number of code units in <var>R</var>.</li><li>Let <var>s</var> be the number of code units in <var>S</var>.</li><li>If <var>q</var> + <var>r</var> &gt; <var>s</var>, return <emu-const>not-matched</emu-const>.</li><li>If there exists an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> between 0 (inclusive) and <var>r</var> (exclusive) such that the code unit at index <var>q</var> + <var>i</var> within <var>S</var> is different from the code unit at index <var>i</var> within <var>R</var>, return <emu-const>not-matched</emu-const>.</li><li>Return <var>q</var> + <var>r</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}}, "figData": {}}, "to": {"secList": ["sec-splitmatch"], "secData": {"sec-splitmatch": {"num": "22.1.3.21.1", "title": "#sec-splitmatch SplitMatch ( S, q, R )", "html": "<emu-clause id=\"sec-splitmatch\" aoid=\"SplitMatch\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-splitmatch\">#sec-splitmatch</span> SplitMatch ( <var>S</var>, <var>q</var>, <var>R</var> )</h1>\n          <p>The abstract operation SplitMatch takes arguments <var>S</var> (a String), <var>q</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), and <var>R</var> (a String). It returns either <emu-const>not-matched</emu-const> or the end index of a match. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>r</var> be the number of code units in <var>R</var>.</li><li>Let <var>s</var> be the number of code units in <var>S</var>.</li><li>If <var>q</var> + <var>r</var> &gt; <var>s</var>, return <emu-const>not-matched</emu-const>.</li><li>If there exists an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> between 0 (inclusive) and <var>r</var> (exclusive) such that the code unit at index <var>q</var> + <var>i</var> within <var>S</var> is different from the code unit at index <var>i</var> within <var>R</var>, return <emu-const>not-matched</emu-const>.</li><li>Return <var>q</var> + <var>r</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}}, "figData": {}}}