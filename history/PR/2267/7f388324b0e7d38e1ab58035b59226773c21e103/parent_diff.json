{"from": {"secList": ["sec-copyright-and-software-license", "sec-getvalue", "sec-reference-record-specification-type", "sec-ispropertyreference", "sec-evaluate-property-access-with-expression-key", "sec-putvalue", "sec-makesuperpropertyreference", "sec-delete-operator-runtime-semantics-evaluation", "sec-evaluate-property-access-with-identifier-key"], "secData": {"sec-copyright-and-software-license": {"num": "I", "title": "#sec-copyright-and-software-license Copyright & Software License", "html": "<emu-annex id=\"sec-copyright-and-software-license\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-copyright-and-software-license\">#sec-copyright-and-software-license</span> Copyright &amp; Software License</h1>\n      <p class=\"ECMAaddress\">Ecma International</p>\n<p class=\"ECMAaddress\">Rue du Rhone 114</p>\n<p class=\"ECMAaddress\">CH-1204 Geneva</p>\n<p class=\"ECMAaddress\">Tel: +41 22 849 6000</p>\n<p class=\"ECMAaddress\">Fax: +41 22 849 6001</p>\n<p class=\"ECMAaddress\">Web: <a href=\"https://ecma-international.org/\">https://ecma-international.org/</a></p>\n\n      <h2>Copyright Notice</h2>\n      <p>&#169; 2020 Ecma International</p>\n\n<p>This draft document may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to Ecma International, except as needed for the purpose of developing any document or deliverable produced by Ecma International.</p>\n\n<p>This disclaimer is valid only prior to final version of this document. After approval all rights on the standard are reserved by Ecma International.</p>\n\n<p>The limited permissions are granted through the standardization phase and will not be revoked by Ecma International or its successors or assigns during this time.</p>\n\n<p>This document and the information contained herein is provided on an \"AS IS\" basis and ECMA INTERNATIONAL DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</p>\n\n      <h2>Software License</h2>\n      <p>All Software contained in this document (\"Software\") is protected by copyright and is being made available under the \"BSD License\", included below. This Software may be subject to third party rights (rights from parties other than Ecma International), including patent rights, and no licenses under such third party rights are granted under this license even if the third party concerned is a member of Ecma International. SEE THE ECMA CODE OF CONDUCT IN PATENT MATTERS AVAILABLE AT https://ecma-international.org/memento/codeofconduct.htm FOR INFORMATION REGARDING THE LICENSING OF PATENT CLAIMS THAT ARE REQUIRED TO IMPLEMENT ECMA INTERNATIONAL STANDARDS.</p>\n\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n\n<ol>\n  <li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>\n  <li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>\n  <li>Neither the name of the authors nor Ecma International may be used to endorse or promote products derived from this software without specific prior written permission.</li>\n</ol>\n\n<p>THIS SOFTWARE IS PROVIDED BY THE ECMA INTERNATIONAL \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ECMA INTERNATIONAL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n\n    </emu-annex>\n\n\n"}, "sec-getvalue": {"num": "6.2.4.4", "title": "#sec-getvalue GetValue ( V )", "html": "<emu-clause id=\"sec-getvalue\" aoid=\"GetValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getvalue\">#sec-getvalue</span> GetValue ( <var>V</var> )</h1>\n        <p>The abstract operation GetValue takes argument <var>V</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>V</var>).</li><li>If <var>V</var> is not a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>, return <var>V</var>.</li><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsPropertyReference\"><a href=\"#sec-ispropertyreference\">IsPropertyReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, then<ol><li id=\"step-getvalue-toobject\">Let <var>baseObj</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>V</var>.[[Base]]).</li><li>Return ? <var>baseObj</var>.[[Get]](<var>V</var>.[[ReferencedName]], <emu-xref aoid=\"GetThisValue\"><a href=\"#sec-getthisvalue\">GetThisValue</a></emu-xref>(<var>V</var>)).</li></ol></li><li>Else,<ol><li>Let <var>base</var> be <var>V</var>.[[Base]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>base</var> is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li><li>Return ? <var>base</var>.GetBindingValue(<var>V</var>.[[ReferencedName]], <var>V</var>.[[Strict]]) (see <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\" class=\"excluded-xref\" excluded-id=\"sec-environment-records\">#sec-environment-records</a></emu-xref>).</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The object that may be created in step <emu-xref href=\"#step-getvalue-toobject\"><a href=\"#step-getvalue-toobject\">4.a</a></emu-xref> is not accessible outside of the above abstract operation and the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> [[Get]] internal method. An implementation might choose to avoid the actual creation of the object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-reference-record-specification-type": {"num": "6.2.4", "title": "#sec-reference-record-specification-type The Reference Record Specification Type", "html": "<emu-clause id=\"sec-reference-record-specification-type\" oldids=\"sec-reference-specification-type\"><span id=\"sec-reference-specification-type\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reference-record-specification-type\">#sec-reference-record-specification-type</span> The Reference Record Specification Type</h1>\n      <p>The <dfn>Reference Record</dfn> type is used to explain the behaviour of such operators as <code>delete</code>, <code>typeof</code>, the assignment operators, the <code>super</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> and other language features. For example, the left-hand operand of an assignment is expected to produce a Reference Record.</p>\n      <p>A Reference Record is a resolved name or property binding; its fields are defined by <emu-xref href=\"#table-reference-record-fields\"><a href=\"#table-reference-record-fields\" class=\"excluded-xref\" excluded-id=\"table-reference-record-fields\">#table-reference-record-fields</a></emu-xref>.</p>\n\n      <emu-table id=\"table-reference-record-fields\" caption=\"Reference Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-reference-record-fields\">#table-reference-record-fields</span>: <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> Fields</figcaption>\n        <table>\n          <tbody>\n            <tr>\n              <th>Field Name</th>\n              <th>Value</th>\n              <th>Meaning</th>\n            </tr>\n            <tr>\n              <td oldids=\"sec-getbase,ao-getbase\"><span id=\"ao-getbase\"></span><span id=\"sec-getbase\"></span>[[Base]]</td>\n              <td>\n                One of:\n                <ul>\n                  <li>\n                    any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> except <emu-val>undefined</emu-val> or <emu-val>null</emu-val>,\n                  </li>\n                  <li>\n                    an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>, or\n                  </li>\n                  <li>\n                    <emu-const>unresolvable</emu-const>.\n                  </li>\n                </ul>\n              </td>\n              <td>The value or <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> which holds the binding. A [[Base]] of <emu-const>unresolvable</emu-const> indicates that the binding could not be resolved.</td>\n            </tr>\n            <tr>\n              <td oldids=\"sec-getreferencedname,ao-getreferencedname\"><span id=\"ao-getreferencedname\"></span><span id=\"sec-getreferencedname\"></span>[[ReferencedName]]</td>\n              <td>String or Symbol</td>\n              <td>The name of the binding. Always a String if [[Base]] value is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</td>\n            </tr>\n            <tr>\n              <td oldids=\"sec-isstrictreference,ao-isstrictreference\"><span id=\"ao-isstrictreference\"></span><span id=\"sec-isstrictreference\"></span>[[Strict]]</td>\n              <td>Boolean</td>\n              <td><emu-val>true</emu-val> if the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> originated in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, <emu-val>false</emu-val> otherwise.</td>\n            </tr>\n            <tr>\n              <td>[[ThisValue]]</td>\n              <td>any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> or <emu-const>empty</emu-const></td>\n              <td>If not <emu-const>empty</emu-const>, the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> represents a property binding that was expressed using the <code>super</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref>; it is called a <dfn id=\"super-reference-record\" oldids=\"super-reference\"><span id=\"super-reference\"></span>Super Reference Record</dfn> and its [[Base]] value will never be an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. In that case, the [[ThisValue]] field holds the <emu-val>this</emu-val> value at the time the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> was created.</td>\n            </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <p>The following <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are used in this specification to operate upon References:</p>\n\n      <div id=\"excluded-sec-ispropertyreference\"><h1><span class=\"secnum\">6.2.4.1</span>#sec-ispropertyreference IsPropertyReference ( V )</h1>...</div><div id=\"excluded-sec-isunresolvablereference\"><h1><span class=\"secnum\">6.2.4.2</span>#sec-isunresolvablereference IsUnresolvableReference ( V )</h1>...</div><div id=\"excluded-sec-issuperreference\"><h1><span class=\"secnum\">6.2.4.3</span>#sec-issuperreference IsSuperReference ( V )</h1>...</div><div id=\"excluded-sec-getvalue\"><h1><span class=\"secnum\">6.2.4.4</span>#sec-getvalue GetValue ( V )</h1>...</div><div id=\"excluded-sec-putvalue\"><h1><span class=\"secnum\">6.2.4.5</span>#sec-putvalue PutValue ( V, W )</h1>...</div><div id=\"excluded-sec-getthisvalue\"><h1><span class=\"secnum\">6.2.4.6</span>#sec-getthisvalue GetThisValue ( V )</h1>...</div><div id=\"excluded-sec-initializereferencedbinding\"><h1><span class=\"secnum\">6.2.4.7</span>#sec-initializereferencedbinding InitializeReferencedBinding ( V, W )</h1>...</div></emu-clause>\n\n    "}, "sec-ispropertyreference": {"num": "6.2.4.1", "title": "#sec-ispropertyreference IsPropertyReference ( V )", "html": "<emu-clause id=\"sec-ispropertyreference\" aoid=\"IsPropertyReference\" oldids=\"ao-ispropertyreference\"><span id=\"ao-ispropertyreference\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ispropertyreference\">#sec-ispropertyreference</span> IsPropertyReference ( <var>V</var> )</h1>\n        <p>The abstract operation IsPropertyReference takes argument <var>V</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>V</var> is a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>.</li><li>If <var>V</var>.[[Base]] is <emu-const>unresolvable</emu-const>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>.[[Base]]) is Boolean, String, Symbol, BigInt, Number, or Object, return <emu-val>true</emu-val>; otherwise return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-evaluate-property-access-with-expression-key": {"num": "12.3.3", "title": "#sec-evaluate-property-access-with-expression-key EvaluatePropertyAccessWithExpressionKey ( baseValue, expression, strict )", "html": "<emu-clause id=\"sec-evaluate-property-access-with-expression-key\" aoid=\"EvaluatePropertyAccessWithExpressionKey\" oldids=\"sec-evaluate-expression-key-property-access\"><span id=\"sec-evaluate-expression-key-property-access\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-evaluate-property-access-with-expression-key\">#sec-evaluate-property-access-with-expression-key</span> EvaluatePropertyAccessWithExpressionKey ( <var>baseValue</var>, <var>expression</var>, <var>strict</var> )</h1>\n      <p>The abstract operation EvaluatePropertyAccessWithExpressionKey takes arguments <var>baseValue</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), <var>expression</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), and <var>strict</var> (a Boolean). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>propertyNameReference</var> be the result of evaluating <var>expression</var>.</li><li>Let <var>propertyNameValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>propertyNameReference</var>).</li><li>Let <var>bv</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>baseValue</var>).</li><li>Let <var>propertyKey</var> be ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propertyNameValue</var>).</li><li>Return the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> { [[Base]]: <var>bv</var>, [[ReferencedName]]: <var>propertyKey</var>, [[Strict]]: <var>strict</var>, [[ThisValue]]: <emu-const>empty</emu-const> }.</li></ol></emu-alg>\n    </emu-clause>\n    "}, "sec-putvalue": {"num": "6.2.4.5", "title": "#sec-putvalue PutValue ( V, W )", "html": "<emu-clause id=\"sec-putvalue\" aoid=\"PutValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-putvalue\">#sec-putvalue</span> PutValue ( <var>V</var>, <var>W</var> )</h1>\n        <p>The abstract operation PutValue takes arguments <var>V</var> and <var>W</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>V</var>).</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>W</var>).</li><li>If <var>V</var> is not a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>V</var>.[[Strict]] is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Let <var>globalObj</var> be <emu-xref aoid=\"GetGlobalObject\"><a href=\"#sec-getglobalobject\">GetGlobalObject</a></emu-xref>().</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObj</var>, <var>V</var>.[[ReferencedName]], <var>W</var>, <emu-val>false</emu-val>).</li></ol></li><li>If <emu-xref aoid=\"IsPropertyReference\"><a href=\"#sec-ispropertyreference\">IsPropertyReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, then<ol><li id=\"step-putvalue-toobject\">Let <var>baseObj</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>V</var>.[[Base]]).</li><li>Let <var>succeeded</var> be ? <var>baseObj</var>.[[Set]](<var>V</var>.[[ReferencedName]], <var>W</var>, <emu-xref aoid=\"GetThisValue\"><a href=\"#sec-getthisvalue\">GetThisValue</a></emu-xref>(<var>V</var>)).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val> and <var>V</var>.[[Strict]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return.</li></ol></li><li>Else,<ol><li>Let <var>base</var> be <var>V</var>.[[Base]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>base</var> is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li><li>Return ? <var>base</var>.SetMutableBinding(<var>V</var>.[[ReferencedName]], <var>W</var>, <var>V</var>.[[Strict]]) (see <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\" class=\"excluded-xref\" excluded-id=\"sec-environment-records\">#sec-environment-records</a></emu-xref>).</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The object that may be created in step <emu-xref href=\"#step-putvalue-toobject\"><a href=\"#step-putvalue-toobject\">5.a</a></emu-xref> is not accessible outside of the above abstract operation and the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> [[Set]] internal method. An implementation might choose to avoid the actual creation of that object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-makesuperpropertyreference": {"num": "12.3.7.3", "title": "#sec-makesuperpropertyreference MakeSuperPropertyReference ( actualThis, propertyKey, strict )", "html": "<emu-clause id=\"sec-makesuperpropertyreference\" aoid=\"MakeSuperPropertyReference\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makesuperpropertyreference\">#sec-makesuperpropertyreference</span> MakeSuperPropertyReference ( <var>actualThis</var>, <var>propertyKey</var>, <var>strict</var> )</h1>\n        <p>The abstract operation MakeSuperPropertyReference takes arguments <var>actualThis</var>, <var>propertyKey</var>, and <var>strict</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be <emu-xref aoid=\"GetThisEnvironment\"><a href=\"#sec-getthisenvironment\">GetThisEnvironment</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>env</var>.HasSuperBinding() is <emu-val>true</emu-val>.</li><li>Let <var>baseValue</var> be ? <var>env</var>.GetSuperBase().</li><li>Let <var>bv</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>baseValue</var>).</li><li>Return the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> { [[Base]]: <var>bv</var>, [[ReferencedName]]: <var>propertyKey</var>, [[Strict]]: <var>strict</var>, [[ThisValue]]: <var>actualThis</var> }.</li><li>NOTE: This returns a <emu-xref href=\"#super-reference-record\"><a href=\"#super-reference-record\">Super Reference Record</a></emu-xref>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-delete-operator-runtime-semantics-evaluation": {"num": "12.5.3.2", "title": "#sec-delete-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-delete-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bfdc08c3\">\n        <emu-t>delete</emu-t>\n        <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>ref</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>ref</var>).</li><li>If <var>ref</var> is not a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>ref</var>) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ref</var>.[[Strict]] is <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></li><li>If <emu-xref aoid=\"IsPropertyReference\"><a href=\"#sec-ispropertyreference\">IsPropertyReference</a></emu-xref>(<var>ref</var>) is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"IsSuperReference\"><a href=\"#sec-issuperreference\">IsSuperReference</a></emu-xref>(<var>ref</var>) is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li id=\"step-delete-operator-toobject\">Let <var>baseObj</var> be !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>ref</var>.[[Base]]).</li><li>Let <var>deleteStatus</var> be ? <var>baseObj</var>.[[Delete]](<var>ref</var>.[[ReferencedName]]).</li><li>If <var>deleteStatus</var> is <emu-val>false</emu-val> and <var>ref</var>.[[Strict]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>deleteStatus</var>.</li></ol></li><li>Else,<ol><li>Let <var>base</var> be <var>ref</var>.[[Base]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>base</var> is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li><li>Return ? <var>base</var>.DeleteBinding(<var>ref</var>.[[ReferencedName]]).</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> exception is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name. In addition, if a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (or otherwise cannot be deleted), a <emu-val>TypeError</emu-val> exception is thrown.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The object that may be created in step <emu-xref href=\"#step-delete-operator-toobject\"><a href=\"#step-delete-operator-toobject\">5.b</a></emu-xref> is not accessible outside of the above abstract operation and the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> [[Delete]] internal method. An implementation might choose to avoid the actual creation of that object.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-evaluate-property-access-with-identifier-key": {"num": "12.3.4", "title": "#sec-evaluate-property-access-with-identifier-key EvaluatePropertyAccessWithIdentifierKey ( baseValue, identifierName, strict )", "html": "<emu-clause id=\"sec-evaluate-property-access-with-identifier-key\" aoid=\"EvaluatePropertyAccessWithIdentifierKey\" oldids=\"sec-evaluate-identifier-key-property-access\"><span id=\"sec-evaluate-identifier-key-property-access\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-evaluate-property-access-with-identifier-key\">#sec-evaluate-property-access-with-identifier-key</span> EvaluatePropertyAccessWithIdentifierKey ( <var>baseValue</var>, <var>identifierName</var>, <var>strict</var> )</h1>\n      <p>The abstract operation EvaluatePropertyAccessWithIdentifierKey takes arguments <var>baseValue</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), <var>identifierName</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), and <var>strict</var> (a Boolean). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>identifierName</var> is an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>bv</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>baseValue</var>).</li><li>Let <var>propertyNameString</var> be StringValue of <var>identifierName</var>.</li><li>Return the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> { [[Base]]: <var>bv</var>, [[ReferencedName]]: <var>propertyNameString</var>, [[Strict]]: <var>strict</var>, [[ThisValue]]: <emu-const>empty</emu-const> }.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {"table-reference-record-fields": "Table 10"}}, "to": {"secList": ["sec-copyright-and-software-license", "sec-getvalue", "sec-reference-record-specification-type", "sec-ispropertyreference", "sec-evaluate-property-access-with-expression-key", "sec-putvalue", "sec-makesuperpropertyreference", "sec-delete-operator-runtime-semantics-evaluation", "sec-evaluate-property-access-with-identifier-key"], "secData": {"sec-copyright-and-software-license": {"num": "I", "title": "#sec-copyright-and-software-license Copyright & Software License", "html": "<emu-annex id=\"sec-copyright-and-software-license\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-copyright-and-software-license\">#sec-copyright-and-software-license</span> Copyright &amp; Software License</h1>\n      <p class=\"ECMAaddress\">Ecma International</p>\n<p class=\"ECMAaddress\">Rue du Rhone 114</p>\n<p class=\"ECMAaddress\">CH-1204 Geneva</p>\n<p class=\"ECMAaddress\">Tel: +41 22 849 6000</p>\n<p class=\"ECMAaddress\">Fax: +41 22 849 6001</p>\n<p class=\"ECMAaddress\">Web: <a href=\"https://ecma-international.org/\">https://ecma-international.org/</a></p>\n\n      <h2>Copyright Notice</h2>\n      <p>&#169; 2021 Ecma International</p>\n\n<p>This draft document may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to Ecma International, except as needed for the purpose of developing any document or deliverable produced by Ecma International.</p>\n\n<p>This disclaimer is valid only prior to final version of this document. After approval all rights on the standard are reserved by Ecma International.</p>\n\n<p>The limited permissions are granted through the standardization phase and will not be revoked by Ecma International or its successors or assigns during this time.</p>\n\n<p>This document and the information contained herein is provided on an \"AS IS\" basis and ECMA INTERNATIONAL DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</p>\n\n      <h2>Software License</h2>\n      <p>All Software contained in this document (\"Software\") is protected by copyright and is being made available under the \"BSD License\", included below. This Software may be subject to third party rights (rights from parties other than Ecma International), including patent rights, and no licenses under such third party rights are granted under this license even if the third party concerned is a member of Ecma International. SEE THE ECMA CODE OF CONDUCT IN PATENT MATTERS AVAILABLE AT https://ecma-international.org/memento/codeofconduct.htm FOR INFORMATION REGARDING THE LICENSING OF PATENT CLAIMS THAT ARE REQUIRED TO IMPLEMENT ECMA INTERNATIONAL STANDARDS.</p>\n\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n\n<ol>\n  <li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>\n  <li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>\n  <li>Neither the name of the authors nor Ecma International may be used to endorse or promote products derived from this software without specific prior written permission.</li>\n</ol>\n\n<p>THIS SOFTWARE IS PROVIDED BY THE ECMA INTERNATIONAL \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ECMA INTERNATIONAL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n\n    </emu-annex>\n\n\n"}, "sec-getvalue": {"num": "6.2.4.4", "title": "#sec-getvalue GetValue ( V )", "html": "<emu-clause id=\"sec-getvalue\" aoid=\"GetValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getvalue\">#sec-getvalue</span> GetValue ( <var>V</var> )</h1>\n        <p>The abstract operation GetValue takes argument <var>V</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>V</var>).</li><li>If <var>V</var> is not a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>, return <var>V</var>.</li><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsPropertyReference\"><a href=\"#sec-ispropertyreference\">IsPropertyReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, then<ol><li id=\"step-getvalue-toobject\">Let <var>baseObj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>V</var>.[[Base]]).</li><li>Return ? <var>baseObj</var>.[[Get]](<var>V</var>.[[ReferencedName]], <emu-xref aoid=\"GetThisValue\"><a href=\"#sec-getthisvalue\">GetThisValue</a></emu-xref>(<var>V</var>)).</li></ol></li><li>Else,<ol><li>Let <var>base</var> be <var>V</var>.[[Base]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>base</var> is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li><li>Return ? <var>base</var>.GetBindingValue(<var>V</var>.[[ReferencedName]], <var>V</var>.[[Strict]]) (see <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\" class=\"excluded-xref\" excluded-id=\"sec-environment-records\">#sec-environment-records</a></emu-xref>).</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The object that may be created in step <emu-xref href=\"#step-getvalue-toobject\"><a href=\"#step-getvalue-toobject\">4.a</a></emu-xref> is not accessible outside of the above abstract operation and the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> [[Get]] internal method. An implementation might choose to avoid the actual creation of the object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-reference-record-specification-type": {"num": "6.2.4", "title": "#sec-reference-record-specification-type The Reference Record Specification Type", "html": "<emu-clause id=\"sec-reference-record-specification-type\" oldids=\"sec-reference-specification-type\"><span id=\"sec-reference-specification-type\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reference-record-specification-type\">#sec-reference-record-specification-type</span> The Reference Record Specification Type</h1>\n      <p>The <dfn>Reference Record</dfn> type is used to explain the behaviour of such operators as <code>delete</code>, <code>typeof</code>, the assignment operators, the <code>super</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref> and other language features. For example, the left-hand operand of an assignment is expected to produce a Reference Record.</p>\n      <p>A Reference Record is a resolved name or property binding; its fields are defined by <emu-xref href=\"#table-reference-record-fields\"><a href=\"#table-reference-record-fields\" class=\"excluded-xref\" excluded-id=\"table-reference-record-fields\">#table-reference-record-fields</a></emu-xref>.</p>\n\n      <emu-table id=\"table-reference-record-fields\" caption=\"Reference Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-reference-record-fields\">#table-reference-record-fields</span>: <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> Fields</figcaption>\n        <table>\n          <tbody>\n            <tr>\n              <th>Field Name</th>\n              <th>Value</th>\n              <th>Meaning</th>\n            </tr>\n            <tr>\n              <td oldids=\"sec-getbase,ao-getbase\"><span id=\"ao-getbase\"></span><span id=\"sec-getbase\"></span>[[Base]]</td>\n              <td>\n                One of:\n                <ul>\n                  <li>\n                    any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>,\n                  </li>\n                  <li>\n                    an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>, or\n                  </li>\n                  <li>\n                    <emu-const>unresolvable</emu-const>.\n                  </li>\n                </ul>\n              </td>\n              <td>The value or <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> which holds the binding. A [[Base]] of <emu-const>unresolvable</emu-const> indicates that the binding could not be resolved.</td>\n            </tr>\n            <tr>\n              <td oldids=\"sec-getreferencedname,ao-getreferencedname\"><span id=\"ao-getreferencedname\"></span><span id=\"sec-getreferencedname\"></span>[[ReferencedName]]</td>\n              <td>String or Symbol</td>\n              <td>The name of the binding. Always a String if [[Base]] value is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</td>\n            </tr>\n            <tr>\n              <td oldids=\"sec-isstrictreference,ao-isstrictreference\"><span id=\"ao-isstrictreference\"></span><span id=\"sec-isstrictreference\"></span>[[Strict]]</td>\n              <td>Boolean</td>\n              <td><emu-val>true</emu-val> if the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> originated in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, <emu-val>false</emu-val> otherwise.</td>\n            </tr>\n            <tr>\n              <td>[[ThisValue]]</td>\n              <td>any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> or <emu-const>empty</emu-const></td>\n              <td>If not <emu-const>empty</emu-const>, the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> represents a property binding that was expressed using the <code>super</code> <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\">keyword</a></emu-xref>; it is called a <dfn id=\"super-reference-record\" oldids=\"super-reference\"><span id=\"super-reference\"></span>Super Reference Record</dfn> and its [[Base]] value will never be an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. In that case, the [[ThisValue]] field holds the <emu-val>this</emu-val> value at the time the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> was created.</td>\n            </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <p>The following <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are used in this specification to operate upon References:</p>\n\n      <div id=\"excluded-sec-ispropertyreference\"><h1><span class=\"secnum\">6.2.4.1</span>#sec-ispropertyreference IsPropertyReference ( V )</h1>...</div><div id=\"excluded-sec-isunresolvablereference\"><h1><span class=\"secnum\">6.2.4.2</span>#sec-isunresolvablereference IsUnresolvableReference ( V )</h1>...</div><div id=\"excluded-sec-issuperreference\"><h1><span class=\"secnum\">6.2.4.3</span>#sec-issuperreference IsSuperReference ( V )</h1>...</div><div id=\"excluded-sec-getvalue\"><h1><span class=\"secnum\">6.2.4.4</span>#sec-getvalue GetValue ( V )</h1>...</div><div id=\"excluded-sec-putvalue\"><h1><span class=\"secnum\">6.2.4.5</span>#sec-putvalue PutValue ( V, W )</h1>...</div><div id=\"excluded-sec-getthisvalue\"><h1><span class=\"secnum\">6.2.4.6</span>#sec-getthisvalue GetThisValue ( V )</h1>...</div><div id=\"excluded-sec-initializereferencedbinding\"><h1><span class=\"secnum\">6.2.4.7</span>#sec-initializereferencedbinding InitializeReferencedBinding ( V, W )</h1>...</div></emu-clause>\n\n    "}, "sec-ispropertyreference": {"num": "6.2.4.1", "title": "#sec-ispropertyreference IsPropertyReference ( V )", "html": "<emu-clause id=\"sec-ispropertyreference\" aoid=\"IsPropertyReference\" oldids=\"ao-ispropertyreference\"><span id=\"ao-ispropertyreference\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ispropertyreference\">#sec-ispropertyreference</span> IsPropertyReference ( <var>V</var> )</h1>\n        <p>The abstract operation IsPropertyReference takes argument <var>V</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>V</var> is a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>.</li><li>If <var>V</var>.[[Base]] is <emu-const>unresolvable</emu-const>, return <emu-val>false</emu-val>.</li><li>If <var>V</var>.[[Base]] is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-evaluate-property-access-with-expression-key": {"num": "12.3.3", "title": "#sec-evaluate-property-access-with-expression-key EvaluatePropertyAccessWithExpressionKey ( baseValue, expression, strict )", "html": "<emu-clause id=\"sec-evaluate-property-access-with-expression-key\" aoid=\"EvaluatePropertyAccessWithExpressionKey\" oldids=\"sec-evaluate-expression-key-property-access\"><span id=\"sec-evaluate-expression-key-property-access\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-evaluate-property-access-with-expression-key\">#sec-evaluate-property-access-with-expression-key</span> EvaluatePropertyAccessWithExpressionKey ( <var>baseValue</var>, <var>expression</var>, <var>strict</var> )</h1>\n      <p>The abstract operation EvaluatePropertyAccessWithExpressionKey takes arguments <var>baseValue</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), <var>expression</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), and <var>strict</var> (a Boolean). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>propertyNameReference</var> be the result of evaluating <var>expression</var>.</li><li>Let <var>propertyNameValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>propertyNameReference</var>).</li><li>Let <var>propertyKey</var> be ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propertyNameValue</var>).</li><li>Return the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> { [[Base]]: <var>baseValue</var>, [[ReferencedName]]: <var>propertyKey</var>, [[Strict]]: <var>strict</var>, [[ThisValue]]: <emu-const>empty</emu-const> }.</li></ol></emu-alg>\n    </emu-clause>\n    "}, "sec-putvalue": {"num": "6.2.4.5", "title": "#sec-putvalue PutValue ( V, W )", "html": "<emu-clause id=\"sec-putvalue\" aoid=\"PutValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-putvalue\">#sec-putvalue</span> PutValue ( <var>V</var>, <var>W</var> )</h1>\n        <p>The abstract operation PutValue takes arguments <var>V</var> and <var>W</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>V</var>).</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>W</var>).</li><li>If <var>V</var> is not a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>V</var>.[[Strict]] is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Let <var>globalObj</var> be <emu-xref aoid=\"GetGlobalObject\"><a href=\"#sec-getglobalobject\">GetGlobalObject</a></emu-xref>().</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObj</var>, <var>V</var>.[[ReferencedName]], <var>W</var>, <emu-val>false</emu-val>).</li></ol></li><li>If <emu-xref aoid=\"IsPropertyReference\"><a href=\"#sec-ispropertyreference\">IsPropertyReference</a></emu-xref>(<var>V</var>) is <emu-val>true</emu-val>, then<ol><li id=\"step-putvalue-toobject\">Let <var>baseObj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>V</var>.[[Base]]).</li><li>Let <var>succeeded</var> be ? <var>baseObj</var>.[[Set]](<var>V</var>.[[ReferencedName]], <var>W</var>, <emu-xref aoid=\"GetThisValue\"><a href=\"#sec-getthisvalue\">GetThisValue</a></emu-xref>(<var>V</var>)).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val> and <var>V</var>.[[Strict]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return.</li></ol></li><li>Else,<ol><li>Let <var>base</var> be <var>V</var>.[[Base]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>base</var> is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li><li>Return ? <var>base</var>.SetMutableBinding(<var>V</var>.[[ReferencedName]], <var>W</var>, <var>V</var>.[[Strict]]) (see <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\" class=\"excluded-xref\" excluded-id=\"sec-environment-records\">#sec-environment-records</a></emu-xref>).</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The object that may be created in step <emu-xref href=\"#step-putvalue-toobject\"><a href=\"#step-putvalue-toobject\">5.a</a></emu-xref> is not accessible outside of the above abstract operation and the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> [[Set]] internal method. An implementation might choose to avoid the actual creation of that object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-makesuperpropertyreference": {"num": "12.3.7.3", "title": "#sec-makesuperpropertyreference MakeSuperPropertyReference ( actualThis, propertyKey, strict )", "html": "<emu-clause id=\"sec-makesuperpropertyreference\" aoid=\"MakeSuperPropertyReference\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makesuperpropertyreference\">#sec-makesuperpropertyreference</span> MakeSuperPropertyReference ( <var>actualThis</var>, <var>propertyKey</var>, <var>strict</var> )</h1>\n        <p>The abstract operation MakeSuperPropertyReference takes arguments <var>actualThis</var>, <var>propertyKey</var>, and <var>strict</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>env</var> be <emu-xref aoid=\"GetThisEnvironment\"><a href=\"#sec-getthisenvironment\">GetThisEnvironment</a></emu-xref>().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>env</var>.HasSuperBinding() is <emu-val>true</emu-val>.</li><li>Let <var>baseValue</var> be ? <var>env</var>.GetSuperBase().</li><li>Return the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> { [[Base]]: <var>baseValue</var>, [[ReferencedName]]: <var>propertyKey</var>, [[Strict]]: <var>strict</var>, [[ThisValue]]: <var>actualThis</var> }.</li><li>NOTE: This returns a <emu-xref href=\"#super-reference-record\"><a href=\"#super-reference-record\">Super Reference Record</a></emu-xref>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-delete-operator-runtime-semantics-evaluation": {"num": "12.5.3.2", "title": "#sec-delete-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-delete-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bfdc08c3\">\n        <emu-t>delete</emu-t>\n        <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>ref</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>ref</var>).</li><li>If <var>ref</var> is not a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>ref</var>) is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>ref</var>.[[Strict]] is <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></li><li>If <emu-xref aoid=\"IsPropertyReference\"><a href=\"#sec-ispropertyreference\">IsPropertyReference</a></emu-xref>(<var>ref</var>) is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"IsSuperReference\"><a href=\"#sec-issuperreference\">IsSuperReference</a></emu-xref>(<var>ref</var>) is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li id=\"step-delete-operator-toobject\">Let <var>baseObj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>ref</var>.[[Base]]).</li><li>Let <var>deleteStatus</var> be ? <var>baseObj</var>.[[Delete]](<var>ref</var>.[[ReferencedName]]).</li><li>If <var>deleteStatus</var> is <emu-val>false</emu-val> and <var>ref</var>.[[Strict]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>deleteStatus</var>.</li></ol></li><li>Else,<ol><li>Let <var>base</var> be <var>ref</var>.[[Base]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>base</var> is an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li><li>Return ? <var>base</var>.DeleteBinding(<var>ref</var>.[[ReferencedName]]).</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> exception is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name. In addition, if a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (or otherwise cannot be deleted), a <emu-val>TypeError</emu-val> exception is thrown.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The object that may be created in step <emu-xref href=\"#step-delete-operator-toobject\"><a href=\"#step-delete-operator-toobject\">5.b</a></emu-xref> is not accessible outside of the above abstract operation and the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> [[Delete]] internal method. An implementation might choose to avoid the actual creation of that object.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-evaluate-property-access-with-identifier-key": {"num": "12.3.4", "title": "#sec-evaluate-property-access-with-identifier-key EvaluatePropertyAccessWithIdentifierKey ( baseValue, identifierName, strict )", "html": "<emu-clause id=\"sec-evaluate-property-access-with-identifier-key\" aoid=\"EvaluatePropertyAccessWithIdentifierKey\" oldids=\"sec-evaluate-identifier-key-property-access\"><span id=\"sec-evaluate-identifier-key-property-access\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-evaluate-property-access-with-identifier-key\">#sec-evaluate-property-access-with-identifier-key</span> EvaluatePropertyAccessWithIdentifierKey ( <var>baseValue</var>, <var>identifierName</var>, <var>strict</var> )</h1>\n      <p>The abstract operation EvaluatePropertyAccessWithIdentifierKey takes arguments <var>baseValue</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), <var>identifierName</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), and <var>strict</var> (a Boolean). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>identifierName</var> is an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>propertyNameString</var> be StringValue of <var>identifierName</var>.</li><li>Return the <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> { [[Base]]: <var>baseValue</var>, [[ReferencedName]]: <var>propertyNameString</var>, [[Strict]]: <var>strict</var>, [[ThisValue]]: <emu-const>empty</emu-const> }.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {"table-reference-record-fields": "Table 10"}}}