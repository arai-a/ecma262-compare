{"from": {"secList": ["sec-stringtobigint", "sec-type-conversion", "sec-number-conversions"], "secData": {"sec-stringtobigint": {"num": "7.1.14", "title": "#sec-stringtobigint StringToBigInt ( argument )", "html": "<emu-clause id=\"sec-stringtobigint\" type=\"abstract operation\" aoid=\"StringToBigInt\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-stringtobigint\">#sec-stringtobigint</span> StringToBigInt ( <var>argument</var> )</h1>\n      <p>The abstract operation StringToBigInt takes argument <var>argument</var>.</p>\n      <p>Apply the algorithm in <emu-xref href=\"#sec-tonumber-applied-to-the-string-type\"><a href=\"#sec-tonumber-applied-to-the-string-type\" class=\"excluded-xref\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</a></emu-xref> with the following changes:</p>\n      <ul>\n        <li>Replace the <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> production with <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> to not allow <emu-val>Infinity</emu-val>, decimal points, or exponents.</li>\n        <li>If the MV is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>, otherwise return the BigInt which exactly corresponds to the MV, rather than rounding to a Number.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-type-conversion": {"num": "7.1", "title": "#sec-type-conversion Type Conversion", "html": "<emu-clause id=\"sec-type-conversion\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-type-conversion\">#sec-type-conversion</span> Type Conversion</h1>\n    <p>The ECMAScript language implicitly performs automatic type conversion as needed. To clarify the semantics of certain constructs it is useful to define a set of conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref>. The conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are polymorphic; they can accept a value of any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language type</a></emu-xref>. But no other specification types are used with these operations.</p>\n    <p>The BigInt type has no implicit conversions in the ECMAScript language; programmers must call BigInt explicitly to convert values from other types.</p>\n\n    <div id=\"excluded-sec-toprimitive\"><h1><span class=\"secnum\">7.1.1</span>#sec-toprimitive ToPrimitive ( input [ , preferredType ] )</h1>...</div><div id=\"excluded-sec-toboolean\"><h1><span class=\"secnum\">7.1.2</span>#sec-toboolean ToBoolean ( argument )</h1>...</div><div id=\"excluded-sec-tonumeric\"><h1><span class=\"secnum\">7.1.3</span>#sec-tonumeric ToNumeric ( value )</h1>...</div><div id=\"excluded-sec-tonumber\"><h1><span class=\"secnum\">7.1.4</span>#sec-tonumber ToNumber ( argument )</h1>...</div><div id=\"excluded-sec-tointegerorinfinity\"><h1><span class=\"secnum\">7.1.5</span>#sec-tointegerorinfinity ToIntegerOrInfinity ( argument )</h1>...</div><div id=\"excluded-sec-toint32\"><h1><span class=\"secnum\">7.1.6</span>#sec-toint32 ToInt32 ( argument )</h1>...</div><div id=\"excluded-sec-touint32\"><h1><span class=\"secnum\">7.1.7</span>#sec-touint32 ToUint32 ( argument )</h1>...</div><div id=\"excluded-sec-toint16\"><h1><span class=\"secnum\">7.1.8</span>#sec-toint16 ToInt16 ( argument )</h1>...</div><div id=\"excluded-sec-touint16\"><h1><span class=\"secnum\">7.1.9</span>#sec-touint16 ToUint16 ( argument )</h1>...</div><div id=\"excluded-sec-toint8\"><h1><span class=\"secnum\">7.1.10</span>#sec-toint8 ToInt8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8\"><h1><span class=\"secnum\">7.1.11</span>#sec-touint8 ToUint8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8clamp\"><h1><span class=\"secnum\">7.1.12</span>#sec-touint8clamp ToUint8Clamp ( argument )</h1>...</div><div id=\"excluded-sec-tobigint\"><h1><span class=\"secnum\">7.1.13</span>#sec-tobigint ToBigInt ( argument )</h1>...</div><div id=\"excluded-sec-stringtobigint\"><h1><span class=\"secnum\">7.1.14</span>#sec-stringtobigint StringToBigInt ( argument )</h1>...</div><div id=\"excluded-sec-tobigint64\"><h1><span class=\"secnum\">7.1.15</span>#sec-tobigint64 ToBigInt64 ( argument )</h1>...</div><div id=\"excluded-sec-tobiguint64\"><h1><span class=\"secnum\">7.1.16</span>#sec-tobiguint64 ToBigUint64 ( argument )</h1>...</div><div id=\"excluded-sec-tostring\"><h1><span class=\"secnum\">7.1.17</span>#sec-tostring ToString ( argument )</h1>...</div><div id=\"excluded-sec-toobject\"><h1><span class=\"secnum\">7.1.18</span>#sec-toobject ToObject ( argument )</h1>...</div><div id=\"excluded-sec-topropertykey\"><h1><span class=\"secnum\">7.1.19</span>#sec-topropertykey ToPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-tolength\"><h1><span class=\"secnum\">7.1.20</span>#sec-tolength ToLength ( argument )</h1>...</div><div id=\"excluded-sec-canonicalnumericindexstring\"><h1><span class=\"secnum\">7.1.21</span>#sec-canonicalnumericindexstring CanonicalNumericIndexString ( argument )</h1>...</div><div id=\"excluded-sec-toindex\"><h1><span class=\"secnum\">7.1.22</span>#sec-toindex ToIndex ( value )</h1>...</div></emu-clause>\n\n  "}, "sec-number-conversions": {"num": "A.6", "title": "#sec-number-conversions Number Conversions", "html": "<emu-annex id=\"sec-number-conversions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-conversions\">#sec-number-conversions</span> Number Conversions</h1>\n    <emu-production name=\"StringNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\" id=\"prod-1aA0wnf8\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"_ljdljxm\" id=\"prod-m-6uXikA\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpace\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"kw6izkq9\">\n        <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"fctcswat\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ozmczrck\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"2zae4kd4\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"kidoa90l\" id=\"prod-8_TyHvtP\"><emu-nt params=\"~Sep\"><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"r3_niz0j\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"o_y5qzvk\">\n        <emu-t>+</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"1g8bpsll\" id=\"prod-glMHXxnX\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"sv6n-gkb\" id=\"prod-E5z8Bfrk\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"bw_ix5cg\" id=\"prod-0clqUBRw\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"m3hgvw0t\" id=\"prod-h9Y6iP78\">\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"eg9cc2yh\" id=\"prod-14bLNUM8\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <p>All grammar symbols not explicitly defined by the <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> grammar have the definitions used in the <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\">Lexical Grammar for numeric literals</a></emu-xref>.</p>\n  </emu-annex>\n\n  "}}, "figData": {}}, "to": {"secList": ["sec-runtime-semantics-mv-for-stringintegerliteral", "sec-stringtobigint", "sec-type-conversion", "sec-number-conversions", "sec-stringintegerliteral-grammar"], "secData": {"sec-runtime-semantics-mv-for-stringintegerliteral": {"num": "7.1.14.2", "title": "#sec-runtime-semantics-mv-for-stringintegerliteral Runtime Semantics: MV", "html": "<emu-clause id=\"sec-runtime-semantics-mv-for-stringintegerliteral\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-mv-for-stringintegerliteral\">#sec-runtime-semantics-mv-for-stringintegerliteral</span> Runtime Semantics: MV</h1>\n        <ul>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"StringIntegerLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringIntegerLiteral\">StringIntegerLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"StringIntegerLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringIntegerLiteral\">StringIntegerLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"7d2sahst\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrIntegerLiteral\">StrIntegerLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrIntegerLiteral\">StrIntegerLiteral</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n    "}, "sec-stringtobigint": {"num": "7.1.14", "title": "#sec-stringtobigint StringToBigInt ( str )", "html": "<emu-clause id=\"sec-stringtobigint\" type=\"abstract operation\" aoid=\"StringToBigInt\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-stringtobigint\">#sec-stringtobigint</span> StringToBigInt ( <var>str</var> )</h1>\n      <p>The abstract operation StringToBigInt takes argument <var>str</var> (a String). It returns a BigInt or <emu-val>NaN</emu-val>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>text</var> be !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>str</var>).</li><li>Let <var>literal</var> be <emu-xref aoid=\"ParseText\"><a href=\"#sec-parsetext\">ParseText</a></emu-xref>(<var>text</var>, <emu-nt><a href=\"#prod-StringIntegerLiteral\">StringIntegerLiteral</a></emu-nt>).</li><li>If <var>literal</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, return <emu-val>NaN</emu-val>.</li><li>Let <var>mv</var> be the MV of <var>literal</var>.</li><li>Return <emu-xref href=\"#%E2%84%A4\"><a href=\"#%E2%84%A4\">&#8484;</a></emu-xref>(<var>mv</var>).</li></ol></emu-alg>\n\n      <div id=\"excluded-sec-stringintegerliteral-grammar\"><h1><span class=\"secnum\">7.1.14.1</span>#sec-stringintegerliteral-grammar StringIntegerLiteral Grammar</h1>...</div><div id=\"excluded-sec-runtime-semantics-mv-for-stringintegerliteral\"><h1><span class=\"secnum\">7.1.14.2</span>#sec-runtime-semantics-mv-for-stringintegerliteral Runtime Semantics: MV</h1>...</div></emu-clause>\n\n    "}, "sec-type-conversion": {"num": "7.1", "title": "#sec-type-conversion Type Conversion", "html": "<emu-clause id=\"sec-type-conversion\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-type-conversion\">#sec-type-conversion</span> Type Conversion</h1>\n    <p>The ECMAScript language implicitly performs automatic type conversion as needed. To clarify the semantics of certain constructs it is useful to define a set of conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref>. The conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are polymorphic; they can accept a value of any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language type</a></emu-xref>. But no other specification types are used with these operations.</p>\n    <p>The BigInt type has no implicit conversions in the ECMAScript language; programmers must call BigInt explicitly to convert values from other types.</p>\n\n    <div id=\"excluded-sec-toprimitive\"><h1><span class=\"secnum\">7.1.1</span>#sec-toprimitive ToPrimitive ( input [ , preferredType ] )</h1>...</div><div id=\"excluded-sec-toboolean\"><h1><span class=\"secnum\">7.1.2</span>#sec-toboolean ToBoolean ( argument )</h1>...</div><div id=\"excluded-sec-tonumeric\"><h1><span class=\"secnum\">7.1.3</span>#sec-tonumeric ToNumeric ( value )</h1>...</div><div id=\"excluded-sec-tonumber\"><h1><span class=\"secnum\">7.1.4</span>#sec-tonumber ToNumber ( argument )</h1>...</div><div id=\"excluded-sec-tointegerorinfinity\"><h1><span class=\"secnum\">7.1.5</span>#sec-tointegerorinfinity ToIntegerOrInfinity ( argument )</h1>...</div><div id=\"excluded-sec-toint32\"><h1><span class=\"secnum\">7.1.6</span>#sec-toint32 ToInt32 ( argument )</h1>...</div><div id=\"excluded-sec-touint32\"><h1><span class=\"secnum\">7.1.7</span>#sec-touint32 ToUint32 ( argument )</h1>...</div><div id=\"excluded-sec-toint16\"><h1><span class=\"secnum\">7.1.8</span>#sec-toint16 ToInt16 ( argument )</h1>...</div><div id=\"excluded-sec-touint16\"><h1><span class=\"secnum\">7.1.9</span>#sec-touint16 ToUint16 ( argument )</h1>...</div><div id=\"excluded-sec-toint8\"><h1><span class=\"secnum\">7.1.10</span>#sec-toint8 ToInt8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8\"><h1><span class=\"secnum\">7.1.11</span>#sec-touint8 ToUint8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8clamp\"><h1><span class=\"secnum\">7.1.12</span>#sec-touint8clamp ToUint8Clamp ( argument )</h1>...</div><div id=\"excluded-sec-tobigint\"><h1><span class=\"secnum\">7.1.13</span>#sec-tobigint ToBigInt ( argument )</h1>...</div><div id=\"excluded-sec-stringtobigint\"><h1><span class=\"secnum\">7.1.14</span>#sec-stringtobigint StringToBigInt ( str )</h1>...</div><div id=\"excluded-sec-tobigint64\"><h1><span class=\"secnum\">7.1.15</span>#sec-tobigint64 ToBigInt64 ( argument )</h1>...</div><div id=\"excluded-sec-tobiguint64\"><h1><span class=\"secnum\">7.1.16</span>#sec-tobiguint64 ToBigUint64 ( argument )</h1>...</div><div id=\"excluded-sec-tostring\"><h1><span class=\"secnum\">7.1.17</span>#sec-tostring ToString ( argument )</h1>...</div><div id=\"excluded-sec-toobject\"><h1><span class=\"secnum\">7.1.18</span>#sec-toobject ToObject ( argument )</h1>...</div><div id=\"excluded-sec-topropertykey\"><h1><span class=\"secnum\">7.1.19</span>#sec-topropertykey ToPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-tolength\"><h1><span class=\"secnum\">7.1.20</span>#sec-tolength ToLength ( argument )</h1>...</div><div id=\"excluded-sec-canonicalnumericindexstring\"><h1><span class=\"secnum\">7.1.21</span>#sec-canonicalnumericindexstring CanonicalNumericIndexString ( argument )</h1>...</div><div id=\"excluded-sec-toindex\"><h1><span class=\"secnum\">7.1.22</span>#sec-toindex ToIndex ( value )</h1>...</div></emu-clause>\n\n  "}, "sec-number-conversions": {"num": "A.6", "title": "#sec-number-conversions Number Conversions", "html": "<emu-annex id=\"sec-number-conversions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-conversions\">#sec-number-conversions</span> Number Conversions</h1>\n    <emu-production name=\"StringNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\" id=\"prod-1aA0wnf8\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"_ljdljxm\" id=\"prod-m-6uXikA\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpace\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"kw6izkq9\">\n        <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"fctcswat\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ozmczrck\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"2zae4kd4\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"kidoa90l\" id=\"prod-8_TyHvtP\"><emu-nt params=\"~Sep\"><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"r3_niz0j\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"o_y5qzvk\">\n        <emu-t>+</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"1g8bpsll\" id=\"prod-glMHXxnX\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"sv6n-gkb\" id=\"prod-E5z8Bfrk\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"bw_ix5cg\" id=\"prod-0clqUBRw\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"m3hgvw0t\" id=\"prod-h9Y6iP78\">\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"eg9cc2yh\" id=\"prod-14bLNUM8\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <p>All grammar symbols not explicitly defined by the <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> grammar have the definitions used in the <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\">Lexical Grammar for numeric literals</a></emu-xref>.</p>\n    <emu-production name=\"StringIntegerLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StringIntegerLiteral\">StringIntegerLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"7d2sahst\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrIntegerLiteral\">StrIntegerLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n    <emu-production name=\"StrIntegerLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrIntegerLiteral\">StrIntegerLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"6uygnxlw\"><emu-nt params=\"~Sep\"><a href=\"#prod-SignedInteger\">SignedInteger</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"kidoa90l\"><emu-nt params=\"~Sep\"><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-stringintegerliteral-grammar": {"num": "7.1.14.1", "title": "#sec-stringintegerliteral-grammar StringIntegerLiteral Grammar", "html": "<emu-clause id=\"sec-stringintegerliteral-grammar\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-stringintegerliteral-grammar\">#sec-stringintegerliteral-grammar</span> StringIntegerLiteral Grammar</h1>\n        <p><emu-xref aoid=\"StringToBigInt\"><a href=\"#sec-stringtobigint\">StringToBigInt</a></emu-xref> uses the following grammar.</p>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"StringIntegerLiteral\" type=\"regexp\" id=\"prod-StringIntegerLiteral\">\n    <emu-nt><a href=\"#prod-StringIntegerLiteral\">StringIntegerLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"7d2sahst\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrIntegerLiteral\">StrIntegerLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrIntegerLiteral\" type=\"regexp\" id=\"prod-StrIntegerLiteral\">\n    <emu-nt><a href=\"#prod-StrIntegerLiteral\">StrIntegerLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"6uygnxlw\"><emu-nt params=\"~Sep\"><a href=\"#prod-SignedInteger\">SignedInteger</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"kidoa90l\"><emu-nt params=\"~Sep\"><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      </emu-clause>\n\n      "}}, "figData": {}}}