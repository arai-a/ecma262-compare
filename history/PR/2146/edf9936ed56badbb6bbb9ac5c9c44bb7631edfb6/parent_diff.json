{"from": {"secList": ["sec-function.prototype.bind"], "secData": {"sec-function.prototype.bind": {"num": "19.2.3.2", "title": "#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )", "html": "<emu-clause id=\"sec-function.prototype.bind\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</span> Function.prototype.bind ( <var>thisArg</var>, ...<var>args</var> )</h1>\n        <p>When the <code>bind</code> method is called with argument <var>thisArg</var> and zero or more <var>args</var>, it performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>Target</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>Target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>args</var> be a new (possibly empty) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of all of the argument values provided after <var>thisArg</var> in order.</li><li>Let <var>F</var> be ?&#160;<emu-xref aoid=\"BoundFunctionCreate\"><a href=\"#sec-boundfunctioncreate\">BoundFunctionCreate</a></emu-xref>(<var>Target</var>, <var>thisArg</var>, <var>args</var>).</li><li>Let <var>targetHasLength</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>Target</var>, <emu-val>\"length\"</emu-val>).</li><li>If <var>targetHasLength</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>targetLen</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <emu-val>\"length\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetLen</var>) is not Number, let <var>L</var> be 0.</li><li>Else,<ol><li>Set <var>targetLen</var> to !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>targetLen</var>).</li><li>Let <var>L</var> be the larger of 0 and the result of <var>targetLen</var> minus the number of elements of <var>args</var>.</li></ol></li></ol></li><li>Else, let <var>L</var> be 0.</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionLength\"><a href=\"#sec-setfunctionlength\">SetFunctionLength</a></emu-xref>(<var>F</var>, <var>L</var>).</li><li>Let <var>targetName</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <emu-val>\"name\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetName</var>) is not String, set <var>targetName</var> to the empty String.</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>targetName</var>, <emu-val>\"bound\"</emu-val>).</li><li>Return <var>F</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Function objects created using <code>Function.prototype.bind</code> are exotic objects. They also do not have a <emu-val>\"prototype\"</emu-val> property.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>Target</var> is an arrow function or a <emu-xref href=\"#bound-function-exotic-object\"><a href=\"#bound-function-exotic-object\">bound function exotic object</a></emu-xref> then the <var>thisArg</var> passed to this method will not be used by subsequent calls to <var>F</var>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-function.prototype.bind"], "secData": {"sec-function.prototype.bind": {"num": "19.2.3.2", "title": "#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )", "html": "<emu-clause id=\"sec-function.prototype.bind\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</span> Function.prototype.bind ( <var>thisArg</var>, ...<var>args</var> )</h1>\n        <p>When the <code>bind</code> method is called with argument <var>thisArg</var> and zero or more <var>args</var>, it performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>Target</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>Target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>args</var> be a new (possibly empty) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of all of the argument values provided after <var>thisArg</var> in order.</li><li>Let <var>F</var> be ?&#160;<emu-xref aoid=\"BoundFunctionCreate\"><a href=\"#sec-boundfunctioncreate\">BoundFunctionCreate</a></emu-xref>(<var>Target</var>, <var>thisArg</var>, <var>args</var>).</li><li>Let <var>L</var> be 0.</li><li>Let <var>targetHasLength</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>Target</var>, <emu-val>\"length\"</emu-val>).</li><li>If <var>targetHasLength</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>targetLen</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <emu-val>\"length\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetLen</var>) is Number, then<ol><li>Set <var>targetLen</var> to !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>targetLen</var>).</li><li>Let <var>argCount</var> be the number of elements in <var>args</var>.</li><li>Set <var>L</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>targetLen</var> - <var>argCount</var>, 0).</li></ol></li></ol></li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionLength\"><a href=\"#sec-setfunctionlength\">SetFunctionLength</a></emu-xref>(<var>F</var>, <var>L</var>).</li><li>Let <var>targetName</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <emu-val>\"name\"</emu-val>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetName</var>) is not String, set <var>targetName</var> to the empty String.</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>targetName</var>, <emu-val>\"bound\"</emu-val>).</li><li>Return <var>F</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Function objects created using <code>Function.prototype.bind</code> are exotic objects. They also do not have a <emu-val>\"prototype\"</emu-val> property.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>Target</var> is an arrow function or a <emu-xref href=\"#bound-function-exotic-object\"><a href=\"#bound-function-exotic-object\">bound function exotic object</a></emu-xref> then the <var>thisArg</var> passed to this method will not be used by subsequent calls to <var>F</var>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}}