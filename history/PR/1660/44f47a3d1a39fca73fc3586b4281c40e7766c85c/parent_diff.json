{"from": {"secList": ["sec-createglobalfunctionbinding", "sec-object-environment-records-initializebinding-n-v"], "secData": {"sec-createglobalfunctionbinding": {"num": "8.1.1.4.18", "title": "#sec-createglobalfunctionbinding CreateGlobalFunctionBinding ( N, V, D )", "html": "<emu-clause id=\"sec-createglobalfunctionbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</span> CreateGlobalFunctionBinding ( <var>N</var>, <var>V</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateGlobalFunctionBinding for global Environment Records creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is replaced.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val> or <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var> }.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>desc</var>).</li><li><emu-not-ref>Record</emu-not-ref> that the binding for <var>N</var> in <var>ObjRec</var> has been initialized.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global function declarations are always represented as own properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. If possible, an existing own property is reconfigured to have a standard set of attribute values. Steps 8-9 are equivalent to what calling the InitializeBinding concrete method would do and if <var>globalObject</var> is a Proxy will produce the same sequence of Proxy trap calls.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-object-environment-records-initializebinding-n-v": {"num": "8.1.1.2.4", "title": "#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-object-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-initializebinding-n-v\">#sec-object-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method InitializeBinding for object Environment Records is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> must have an uninitialized binding for <var>N</var>.</li><li><emu-not-ref>Record</emu-not-ref> that the binding for <var>N</var> in <var>envRec</var> has been initialized.</li><li>Return ? <var>envRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>In this specification, all uses of CreateMutableBinding for object Environment Records are immediately followed by a call to InitializeBinding for the same name. Hence, implementations do not need to explicitly track the initialization state of individual <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> bindings.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}}, "figData": {}}, "to": {"secList": ["sec-createglobalfunctionbinding", "sec-object-environment-records-initializebinding-n-v"], "secData": {"sec-createglobalfunctionbinding": {"num": "8.1.1.4.18", "title": "#sec-createglobalfunctionbinding CreateGlobalFunctionBinding ( N, V, D )", "html": "<emu-clause id=\"sec-createglobalfunctionbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</span> CreateGlobalFunctionBinding ( <var>N</var>, <var>V</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateGlobalFunctionBinding for global Environment Records creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is replaced.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val> or <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var> }.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>desc</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global function declarations are always represented as own properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. If possible, an existing own property is reconfigured to have a standard set of attribute values. Steps 8-9 are equivalent to what calling the InitializeBinding concrete method would do and if <var>globalObject</var> is a Proxy will produce the same sequence of Proxy trap calls.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-object-environment-records-initializebinding-n-v": {"num": "8.1.1.2.4", "title": "#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-object-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-initializebinding-n-v\">#sec-object-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method InitializeBinding for object Environment Records is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Return ? <var>envRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>In this specification, all uses of CreateMutableBinding for object Environment Records are immediately followed by a call to InitializeBinding for the same name. Hence, implementations do not need to explicitly track the initialization state of individual <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> bindings.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}}, "figData": {}}}