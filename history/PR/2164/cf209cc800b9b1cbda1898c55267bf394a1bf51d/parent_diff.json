{"from": {"secList": ["sec-integerindexedelementget", "sec-integerindexedelementset", "sec-integer-indexed-exotic-objects-hasproperty-p", "sec-get-arraybuffer.prototype.bytelength"], "secData": {"sec-integerindexedelementget": {"num": "9.4.5.9", "title": "#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )", "html": "<emu-clause id=\"sec-integerindexedelementget\" aoid=\"IntegerIndexedElementGet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementget\">#sec-integerindexedelementget</span> IntegerIndexedElementGet ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementGet takes arguments <var>O</var> and <var>index</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integerindexedelementset": {"num": "9.4.5.10", "title": "#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )", "html": "<emu-clause id=\"sec-integerindexedelementset\" aoid=\"IntegerIndexedElementSet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementset\">#sec-integerindexedelementset</span> IntegerIndexedElementSet ( <var>O</var>, <var>index</var>, <var>value</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementSet takes arguments <var>O</var>, <var>index</var>, and <var>value</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li>If <var>O</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>numValue</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-integer-indexed-exotic-objects-hasproperty-p": {"num": "9.4.5.2", "title": "#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>When the [[HasProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-get-arraybuffer.prototype.bytelength": {"num": "24.1.5.1", "title": "#sec-get-arraybuffer.prototype.bytelength get ArrayBuffer.prototype.byteLength", "html": "<emu-clause id=\"sec-get-arraybuffer.prototype.bytelength\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-arraybuffer.prototype.bytelength\">#sec-get-arraybuffer.prototype.bytelength</span> get ArrayBuffer.prototype.byteLength</h1>\n        <p><code>ArrayBuffer.prototype.byteLength</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[ArrayBufferData]]).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>O</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>length</var> be <var>O</var>.[[ArrayBufferByteLength]].</li><li>Return <var>length</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}, "to": {"secList": ["sec-integerindexedelementget", "sec-integerindexedelementset", "sec-integer-indexed-exotic-objects-hasproperty-p", "sec-get-arraybuffer.prototype.bytelength"], "secData": {"sec-integerindexedelementget": {"num": "9.4.5.9", "title": "#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )", "html": "<emu-clause id=\"sec-integerindexedelementget\" aoid=\"IntegerIndexedElementGet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementget\">#sec-integerindexedelementget</span> IntegerIndexedElementGet ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementGet takes arguments <var>O</var> and <var>index</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integerindexedelementset": {"num": "9.4.5.10", "title": "#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )", "html": "<emu-clause id=\"sec-integerindexedelementset\" aoid=\"IntegerIndexedElementSet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementset\">#sec-integerindexedelementset</span> IntegerIndexedElementSet ( <var>O</var>, <var>index</var>, <var>value</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementSet takes arguments <var>O</var>, <var>index</var>, and <var>value</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li>If <var>O</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>numValue</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-integer-indexed-exotic-objects-hasproperty-p": {"num": "9.4.5.2", "title": "#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n        <p>When the [[HasProperty]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called with property key <var>P</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String, then<ol><li>Let <var>numericIndex</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>numericIndex</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If !&#160;<emu-xref aoid=\"IsValidIntegerIndex\"><a href=\"#sec-isvalidintegerindex\">IsValidIntegerIndex</a></emu-xref>(<var>O</var>, <var>numericIndex</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></li></ol></li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasProperty\"><a href=\"#sec-ordinaryhasproperty\">OrdinaryHasProperty</a></emu-xref>(<var>O</var>, <var>P</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-get-arraybuffer.prototype.bytelength": {"num": "24.1.5.1", "title": "#sec-get-arraybuffer.prototype.bytelength get ArrayBuffer.prototype.byteLength", "html": "<emu-clause id=\"sec-get-arraybuffer.prototype.bytelength\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-arraybuffer.prototype.bytelength\">#sec-get-arraybuffer.prototype.bytelength</span> get ArrayBuffer.prototype.byteLength</h1>\n        <p><code>ArrayBuffer.prototype.byteLength</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[ArrayBufferData]]).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>O</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>) is <emu-val>true</emu-val>, return 0.</li><li>Let <var>length</var> be <var>O</var>.[[ArrayBufferByteLength]].</li><li>Return <var>length</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}}