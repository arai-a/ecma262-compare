{"from": {"secList": ["sec-%throwtypeerror%", "sec-addrestrictedfunctionproperties", "sec-createintrinsics", "sec-ecmascript-function-objects"], "secData": {"sec-%throwtypeerror%": {"num": "9.2.8.1", "title": "#sec-%throwtypeerror% %ThrowTypeError% ( )", "html": "<emu-clause id=\"sec-%throwtypeerror%\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%throwtypeerror%\">#sec-%throwtypeerror%</span> %ThrowTypeError% ( )</h1>\n        <p>The  <dfn>%ThrowTypeError%</dfn> intrinsic is an anonymous built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is defined once for each <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>. When %ThrowTypeError% is called it performs the following steps:</p>\n        <emu-alg><ol><li>Throw a <emu-val>TypeError</emu-val> exception.\n        </li></ol></emu-alg>\n        <p>The value of the [[Extensible]] internal slot of a %ThrowTypeError% function is <emu-val>false</emu-val>.</p>\n        <p>The <code>length</code> property of a %ThrowTypeError% function has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-addrestrictedfunctionproperties": {"num": "9.2.8", "title": "#sec-addrestrictedfunctionproperties AddRestrictedFunctionProperties ( F, realm )", "html": "<emu-clause id=\"sec-addrestrictedfunctionproperties\" aoid=\"AddRestrictedFunctionProperties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-addrestrictedfunctionproperties\">#sec-addrestrictedfunctionproperties</span> AddRestrictedFunctionProperties ( <var>F</var>, <var>realm</var> )</h1>\n      <p>The abstract operation AddRestrictedFunctionProperties is called with a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> and <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> <var>realm</var> as its argument. It performs the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>]] exists and has been initialized.</li><li>Let <var>thrower</var> be <var>realm</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>]].</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"caller\"</code>, PropertyDescriptor {[[Get]]: <var>thrower</var>, [[Set]]: <var>thrower</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val>}).</li><li>Return !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"arguments\"</code>, PropertyDescriptor {[[Get]]: <var>thrower</var>, [[Set]]: <var>thrower</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val>}).\n      </li></ol></emu-alg>\n\n      <!-- es6num=\"9.2.7.1\" -->\n      <div id=\"excluded-sec-%throwtypeerror%\"><h1><span class=\"secnum\">9.2.8.1</span>#sec-%throwtypeerror% %ThrowTypeError% ( )</h1>...</div></emu-clause>\n\n    "}, "sec-createintrinsics": {"num": "8.2.2", "title": "#sec-createintrinsics CreateIntrinsics ( realmRec )", "html": "<emu-clause id=\"sec-createintrinsics\" aoid=\"CreateIntrinsics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createintrinsics\">#sec-createintrinsics</span> CreateIntrinsics ( <var>realmRec</var> )</h1>\n      <p>The abstract operation CreateIntrinsics with argument <var>realmRec</var> performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>intrinsics</var> be a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref>.</li><li>Set <var>realmRec</var>.[[Intrinsics]] to <var>intrinsics</var>.</li><li>Let <var>objProto</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Set <var>intrinsics</var>.[[<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>]] to <var>objProto</var>.</li><li>Let <var>throwerSteps</var> be the algorithm steps specified in <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\" class=\"excluded-xref\" excluded-id=\"sec-%throwtypeerror%\">#sec-%throwtypeerror%</a></emu-xref> for the <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref> function.</li><li>Let <var>thrower</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>throwerSteps</var>, &#171; &#187;, <var>realmRec</var>, <emu-val>null</emu-val>).</li><li>Set <var>intrinsics</var>.[[<emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>]] to <var>thrower</var>.</li><li>Let <var>noSteps</var> be an empty sequence of algorithm steps.</li><li>Let <var>funcProto</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>noSteps</var>, &#171; &#187;, <var>realmRec</var>, <var>objProto</var>).</li><li>Set <var>intrinsics</var>.[[<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>]] to <var>funcProto</var>.</li><li>Call <var>thrower</var>.[[SetPrototypeOf]](<var>funcProto</var>).</li><li>Perform <emu-xref aoid=\"AddRestrictedFunctionProperties\"><a href=\"#sec-addrestrictedfunctionproperties\">AddRestrictedFunctionProperties</a></emu-xref>(<var>funcProto</var>, <var>realmRec</var>).</li><li>Set fields of <var>intrinsics</var> with the values listed in <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref> that have not already been handled above. The field names are the names listed in column one of the table. The value of each field is a new object value fully and recursively populated with property values as defined by the specification of each object in clauses 18-26. All object property values are newly created object values. All values that are built-in function objects are created by performing <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(&lt;steps&gt;, &lt;slots&gt;, <var>realmRec</var>, &lt;prototype&gt;) where &lt;steps&gt; is the definition of that function provided by this specification, &lt;slots&gt; is a list of the names, if any, of the function's specified internal slots, and &lt;prototype&gt; is the specified value of the function's [[Prototype]] internal slot. The creation of the intrinsics and their properties must be ordered to avoid any dependencies upon objects that have not yet been created.</li><li>Return <var>intrinsics</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ecmascript-function-objects": {"num": "9.2", "title": "#sec-ecmascript-function-objects ECMAScript Function Objects", "html": "<emu-clause id=\"sec-ecmascript-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</span> ECMAScript Function Objects</h1>\n    <p>ECMAScript function objects encapsulate parameterized ECMAScript code closed over a lexical environment and support the dynamic evaluation of that code. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is an ordinary object and has the same internal slots and the same internal methods as other ordinary objects. The code of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> may be either <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\" class=\"excluded-xref\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</a></emu-xref>) or <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> whose code is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a  <dfn id=\"strict-function\">strict function</dfn>. One whose code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a  <dfn id=\"non-strict-function\">non-strict function</dfn>.</p>\n    <p>ECMAScript function objects have the additional internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</p>\n    <emu-table id=\"table-27\" caption=\"Internal Slots of ECMAScript Function Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-27\">#table-27</span>: Internal Slots of ECMAScript Function Objects</figcaption>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Internal Slot\n          \n          </th>\n          <th>\n            Type\n          \n          </th>\n          <th>\n            Description\n          \n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[Environment]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">Lexical Environment</a></emu-xref>\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">Lexical Environment</a></emu-xref> that the function was closed over. Used as the outer environment when evaluating the code of the function.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[FormalParameters]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          \n          </td>\n          <td>\n            The root parse node of the source text that defines the function's formal parameter list.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[FunctionKind]]\n          \n          </td>\n          <td>\n            String\n          \n          </td>\n          <td>\n            Either <code>\"normal\"</code>, <code>\"classConstructor\"</code>, <code>\"generator\"</code>, or <code>\"async\"</code>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ECMAScriptCode]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          \n          </td>\n          <td>\n            The root parse node of the source text that defines the function's body.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ConstructorKind]]\n          \n          </td>\n          <td>\n            String\n          \n          </td>\n          <td>\n            Either <code>\"base\"</code> or <code>\"derived\"</code>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Realm]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> in which the function was created and which provides any intrinsic objects that are accessed when evaluating the function.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ScriptOrModule]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#script-record\"><a href=\"#script-record\">Script Record</a></emu-xref> or <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>\n          \n          </td>\n          <td>\n            The script or module in which the function was created.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ThisMode]]\n          \n          </td>\n          <td>\n            (lexical, strict, global)\n          \n          </td>\n          <td>\n            Defines how <code>this</code> references are interpreted within the formal parameters and code body of the function. <emu-const>lexical</emu-const> means that <code>this</code> refers to the <emu-val>this</emu-val> value of a lexically enclosing function. <emu-const>strict</emu-const> means that the <emu-val>this</emu-val> value is used exactly as provided by an invocation of the function. <emu-const>global</emu-const> means that a <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> is interpreted as a reference to the <emu-xref href=\"#global-object\"><a href=\"#global-object\">global object</a></emu-xref>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Strict]]\n          \n          </td>\n          <td>\n            Boolean\n          \n          </td>\n          <td>\n            <emu-val>true</emu-val> if this is a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>, <emu-val>false</emu-val> if this is a <emu-xref href=\"#non-strict-function\"><a href=\"#non-strict-function\">non-strict function</a></emu-xref>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HomeObject]]\n          \n          </td>\n          <td>\n            Object\n          \n          </td>\n          <td>\n            If the function uses <code>super</code>, this is the object whose [[GetPrototypeOf]] provides the object where <code>super</code> property lookups begin.\n          \n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>All ECMAScript function objects have the [[Call]] internal method defined here. ECMAScript functions that are also constructors in addition have the [[Construct]] internal method.</p>\n\n    <!-- es6num=\"9.2.1\" -->\n    <div id=\"excluded-sec-ecmascript-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.2.1</span>#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><!-- es6num=\"9.2.2\" -->\n    <div id=\"excluded-sec-ecmascript-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.2.2</span>#sec-ecmascript-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><!-- es6num=\"9.2.3\" -->\n    <div id=\"excluded-sec-functionallocate\"><h1><span class=\"secnum\">9.2.3</span>#sec-functionallocate FunctionAllocate ( functionPrototype, strict, functionKind )</h1>...</div><!-- es6num=\"9.2.4\" -->\n    <div id=\"excluded-sec-functioninitialize\"><h1><span class=\"secnum\">9.2.4</span>#sec-functioninitialize FunctionInitialize ( F, kind, ParameterList, Body, Scope )</h1>...</div><!-- es6num=\"9.2.5\" -->\n    <div id=\"excluded-sec-functioncreate\"><h1><span class=\"secnum\">9.2.5</span>#sec-functioncreate FunctionCreate ( kind, ParameterList, Body, Scope, Strict [ , prototype ] )</h1>...</div><!-- es6num=\"9.2.6\" -->\n    <div id=\"excluded-sec-generatorfunctioncreate\"><h1><span class=\"secnum\">9.2.6</span>#sec-generatorfunctioncreate GeneratorFunctionCreate ( kind, ParameterList, Body, Scope, Strict )</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunctioncreate\"><h1><span class=\"secnum\">9.2.7</span>#sec-asyncgeneratorfunctioncreate AsyncGeneratorFunctionCreate (kind, ParameterList, Body, Scope, Strict)</h1>...</div><!-- es6num=\"9.2.7\" -->\n    <div id=\"excluded-sec-addrestrictedfunctionproperties\"><h1><span class=\"secnum\">9.2.8</span>#sec-addrestrictedfunctionproperties AddRestrictedFunctionProperties ( F, realm )</h1>...</div><!-- es6num=\"9.2.8\" -->\n    <div id=\"excluded-sec-makeconstructor\"><h1><span class=\"secnum\">9.2.9</span>#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )</h1>...</div><!-- es6num=\"9.2.9\" -->\n    <div id=\"excluded-sec-makeclassconstructor\"><h1><span class=\"secnum\">9.2.10</span>#sec-makeclassconstructor MakeClassConstructor ( F )</h1>...</div><!-- es6num=\"9.2.10\" -->\n    <div id=\"excluded-sec-makemethod\"><h1><span class=\"secnum\">9.2.11</span>#sec-makemethod MakeMethod ( F, homeObject )</h1>...</div><!-- es6num=\"9.2.11\" -->\n    <div id=\"excluded-sec-setfunctionname\"><h1><span class=\"secnum\">9.2.12</span>#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )</h1>...</div><!-- es6num=\"9.2.12\" -->\n    <div id=\"excluded-sec-functiondeclarationinstantiation\"><h1><span class=\"secnum\">9.2.13</span>#sec-functiondeclarationinstantiation FunctionDeclarationInstantiation ( func, argumentsList )</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-2": "Table 2", "table-7": "Table 7", "table-27": "Table 27"}}, "to": {"secList": ["sec-%throwtypeerror%", "sec-createintrinsics", "sec-ecmascript-function-objects"], "secData": {"sec-%throwtypeerror%": {"num": "9.2.8", "title": "#sec-%throwtypeerror% %ThrowTypeError% ( )", "html": "<emu-clause id=\"sec-%throwtypeerror%\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%throwtypeerror%\">#sec-%throwtypeerror%</span> %ThrowTypeError% ( )</h1>\n      <p>The  <dfn>%ThrowTypeError%</dfn> intrinsic is an anonymous built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is defined once for each <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>. When %ThrowTypeError% is called it performs the following steps:</p>\n      <emu-alg><ol><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>The value of the [[Extensible]] internal slot of a %ThrowTypeError% function is <emu-val>false</emu-val>.</p>\n      <p>The <code>length</code> property of a %ThrowTypeError% function has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n    </emu-clause>\n\n    "}, "sec-createintrinsics": {"num": "8.2.2", "title": "#sec-createintrinsics CreateIntrinsics ( realmRec )", "html": "<emu-clause id=\"sec-createintrinsics\" aoid=\"CreateIntrinsics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createintrinsics\">#sec-createintrinsics</span> CreateIntrinsics ( <var>realmRec</var> )</h1>\n      <p>The abstract operation CreateIntrinsics with argument <var>realmRec</var> performs the following steps:</p>\n      <emu-alg><ol><li>Let <var>intrinsics</var> be a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref>.</li><li>Set <var>realmRec</var>.[[Intrinsics]] to <var>intrinsics</var>.</li><li>Let <var>objProto</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Set <var>intrinsics</var>.[[<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>]] to <var>objProto</var>.</li><li>Let <var>throwerSteps</var> be the algorithm steps specified in <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\" class=\"excluded-xref\" excluded-id=\"sec-%throwtypeerror%\">#sec-%throwtypeerror%</a></emu-xref> for the <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref> function.</li><li>Let <var>thrower</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>throwerSteps</var>, &#171; &#187;, <var>realmRec</var>, <emu-val>null</emu-val>).</li><li>Set <var>intrinsics</var>.[[<emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>]] to <var>thrower</var>.</li><li>Let <var>noSteps</var> be an empty sequence of algorithm steps.</li><li>Let <var>funcProto</var> be <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>noSteps</var>, &#171; &#187;, <var>realmRec</var>, <var>objProto</var>).</li><li>Set <var>intrinsics</var>.[[<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%FunctionPrototype%</a></emu-xref>]] to <var>funcProto</var>.</li><li>Call <var>thrower</var>.[[SetPrototypeOf]](<var>funcProto</var>).</li><li>Set fields of <var>intrinsics</var> with the values listed in <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref> that have not already been handled above. The field names are the names listed in column one of the table. The value of each field is a new object value fully and recursively populated with property values as defined by the specification of each object in clauses 18-26. All object property values are newly created object values. All values that are built-in function objects are created by performing <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(&lt;steps&gt;, &lt;slots&gt;, <var>realmRec</var>, &lt;prototype&gt;) where &lt;steps&gt; is the definition of that function provided by this specification, &lt;slots&gt; is a list of the names, if any, of the function's specified internal slots, and &lt;prototype&gt; is the specified value of the function's [[Prototype]] internal slot. The creation of the intrinsics and their properties must be ordered to avoid any dependencies upon objects that have not yet been created.</li><li>Return <var>intrinsics</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ecmascript-function-objects": {"num": "9.2", "title": "#sec-ecmascript-function-objects ECMAScript Function Objects", "html": "<emu-clause id=\"sec-ecmascript-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</span> ECMAScript Function Objects</h1>\n    <p>ECMAScript function objects encapsulate parameterized ECMAScript code closed over a lexical environment and support the dynamic evaluation of that code. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is an ordinary object and has the same internal slots and the same internal methods as other ordinary objects. The code of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> may be either <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\" class=\"excluded-xref\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</a></emu-xref>) or <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>. An ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> whose code is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a  <dfn id=\"strict-function\">strict function</dfn>. One whose code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> is called a  <dfn id=\"non-strict-function\">non-strict function</dfn>.</p>\n    <p>ECMAScript function objects have the additional internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</p>\n    <emu-table id=\"table-27\" caption=\"Internal Slots of ECMAScript Function Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-27\">#table-27</span>: Internal Slots of ECMAScript Function Objects</figcaption>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Internal Slot\n          \n          </th>\n          <th>\n            Type\n          \n          </th>\n          <th>\n            Description\n          \n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[Environment]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">Lexical Environment</a></emu-xref>\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">Lexical Environment</a></emu-xref> that the function was closed over. Used as the outer environment when evaluating the code of the function.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[FormalParameters]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          \n          </td>\n          <td>\n            The root parse node of the source text that defines the function's formal parameter list.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[FunctionKind]]\n          \n          </td>\n          <td>\n            String\n          \n          </td>\n          <td>\n            Either <code>\"normal\"</code>, <code>\"classConstructor\"</code>, <code>\"generator\"</code>, or <code>\"async\"</code>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ECMAScriptCode]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n          \n          </td>\n          <td>\n            The root parse node of the source text that defines the function's body.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ConstructorKind]]\n          \n          </td>\n          <td>\n            String\n          \n          </td>\n          <td>\n            Either <code>\"base\"</code> or <code>\"derived\"</code>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Realm]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>\n          \n          </td>\n          <td>\n            The <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> in which the function was created and which provides any intrinsic objects that are accessed when evaluating the function.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ScriptOrModule]]\n          \n          </td>\n          <td>\n            <emu-xref href=\"#script-record\"><a href=\"#script-record\">Script Record</a></emu-xref> or <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>\n          \n          </td>\n          <td>\n            The script or module in which the function was created.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[ThisMode]]\n          \n          </td>\n          <td>\n            (lexical, strict, global)\n          \n          </td>\n          <td>\n            Defines how <code>this</code> references are interpreted within the formal parameters and code body of the function. <emu-const>lexical</emu-const> means that <code>this</code> refers to the <emu-val>this</emu-val> value of a lexically enclosing function. <emu-const>strict</emu-const> means that the <emu-val>this</emu-val> value is used exactly as provided by an invocation of the function. <emu-const>global</emu-const> means that a <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> is interpreted as a reference to the <emu-xref href=\"#global-object\"><a href=\"#global-object\">global object</a></emu-xref>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Strict]]\n          \n          </td>\n          <td>\n            Boolean\n          \n          </td>\n          <td>\n            <emu-val>true</emu-val> if this is a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>, <emu-val>false</emu-val> if this is a <emu-xref href=\"#non-strict-function\"><a href=\"#non-strict-function\">non-strict function</a></emu-xref>.\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HomeObject]]\n          \n          </td>\n          <td>\n            Object\n          \n          </td>\n          <td>\n            If the function uses <code>super</code>, this is the object whose [[GetPrototypeOf]] provides the object where <code>super</code> property lookups begin.\n          \n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>All ECMAScript function objects have the [[Call]] internal method defined here. ECMAScript functions that are also constructors in addition have the [[Construct]] internal method.</p>\n\n    <!-- es6num=\"9.2.1\" -->\n    <div id=\"excluded-sec-ecmascript-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.2.1</span>#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><!-- es6num=\"9.2.2\" -->\n    <div id=\"excluded-sec-ecmascript-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.2.2</span>#sec-ecmascript-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><!-- es6num=\"9.2.3\" -->\n    <div id=\"excluded-sec-functionallocate\"><h1><span class=\"secnum\">9.2.3</span>#sec-functionallocate FunctionAllocate ( functionPrototype, strict, functionKind )</h1>...</div><!-- es6num=\"9.2.4\" -->\n    <div id=\"excluded-sec-functioninitialize\"><h1><span class=\"secnum\">9.2.4</span>#sec-functioninitialize FunctionInitialize ( F, kind, ParameterList, Body, Scope )</h1>...</div><!-- es6num=\"9.2.5\" -->\n    <div id=\"excluded-sec-functioncreate\"><h1><span class=\"secnum\">9.2.5</span>#sec-functioncreate FunctionCreate ( kind, ParameterList, Body, Scope, Strict [ , prototype ] )</h1>...</div><!-- es6num=\"9.2.6\" -->\n    <div id=\"excluded-sec-generatorfunctioncreate\"><h1><span class=\"secnum\">9.2.6</span>#sec-generatorfunctioncreate GeneratorFunctionCreate ( kind, ParameterList, Body, Scope, Strict )</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunctioncreate\"><h1><span class=\"secnum\">9.2.7</span>#sec-asyncgeneratorfunctioncreate AsyncGeneratorFunctionCreate (kind, ParameterList, Body, Scope, Strict)</h1>...</div><!-- es6num=\"9.2.7.1\" -->\n    <div id=\"excluded-sec-%throwtypeerror%\"><h1><span class=\"secnum\">9.2.8</span>#sec-%throwtypeerror% %ThrowTypeError% ( )</h1>...</div><!-- es6num=\"9.2.8\" -->\n    <div id=\"excluded-sec-makeconstructor\"><h1><span class=\"secnum\">9.2.9</span>#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )</h1>...</div><!-- es6num=\"9.2.9\" -->\n    <div id=\"excluded-sec-makeclassconstructor\"><h1><span class=\"secnum\">9.2.10</span>#sec-makeclassconstructor MakeClassConstructor ( F )</h1>...</div><!-- es6num=\"9.2.10\" -->\n    <div id=\"excluded-sec-makemethod\"><h1><span class=\"secnum\">9.2.11</span>#sec-makemethod MakeMethod ( F, homeObject )</h1>...</div><!-- es6num=\"9.2.11\" -->\n    <div id=\"excluded-sec-setfunctionname\"><h1><span class=\"secnum\">9.2.12</span>#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )</h1>...</div><!-- es6num=\"9.2.12\" -->\n    <div id=\"excluded-sec-functiondeclarationinstantiation\"><h1><span class=\"secnum\">9.2.13</span>#sec-functiondeclarationinstantiation FunctionDeclarationInstantiation ( func, argumentsList )</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-2": "Table 2", "table-7": "Table 7", "table-27": "Table 27"}}}