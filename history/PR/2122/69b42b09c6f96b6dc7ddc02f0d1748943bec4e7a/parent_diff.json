{"from": {"secList": ["sec-asyncgeneratorfunction-instances", "sec-math.log1p", "sec-promise.prototype.finally", "sec-math.abs", "sec-properties-of-generator-prototype", "sec-promise-abstract-operations", "sec-properties-of-the-promise-constructor", "sec-properties-of-asyncgeneratorfunction", "sec-async-functions-abstract-operations", "sec-properties-of-the-promise-prototype-object", "sec-async-function-constructor", "sec-async-function-prototype-properties", "sec-math.asin", "sec-math.tanh", "sec-promise.resolve", "sec-promise.race", "sec-properties-of-the-proxy-constructor", "sec-async-from-sync-iterator-objects", "sec-promise.allsettled", "sec-promise.all", "sec-relations-of-candidate-executions", "sec-async-function-constructor-properties", "sec-createbuiltinfunction", "sec-%iteratorprototype%-object", "sec-common-iteration-interfaces", "sec-forward-progress", "sec-math.sin", "sec-well-known-intrinsic-objects", "sec-generator-abstract-operations", "sec-asyncgeneratorfunction-constructor", "sec-math.sqrt", "sec-promise-jobs", "sec-asyncgeneratorresumenext", "sec-async-function-instances", "sec-iteration", "sec-math.log", "sec-math.min", "sec-weakmap-objects", "sec-promise-objects", "sec-properties-of-asyncgenerator-prototype", "sec-reflect-object", "sec-math.log10", "sec-math.tan", "sec-async-function-objects", "sec-promise-constructor", "sec-math.log2", "sec-agents", "sec-newpromisecapability", "sec-math.max", "sec-reflection", "sec-module-namespace-objects", "sec-generatorfunction-instances", "sec-createresolvingfunctions", "sec-built-in-function-objects", "sec-generator-objects", "sec-generatorfunction-constructor", "sec-math.acos", "sec-%asyncfromsynciteratorprototype%-object", "sec-math.acosh", "sec-memory-model", "sec-constructor-properties-of-the-global-object", "sec-proxy.revocable", "sec-properties-of-valid-executions", "sec-runtime-semantics-iteratordestructuringassignmentevaluation", "sec-math.hypot", "sec-host-hooks-summary", "sec-math.atanh", "sec-setfunctionname", "sec-function-properties-of-the-math-object", "sec-promise.any", "sec-math.round", "sec-proxy-constructor", "sec-math.trunc", "sec-math.atan2", "sec-abstract-operations-for-the-memory-model", "sec-asyncgenerator-objects", "sec-promise.prototype.then", "sec-proxy-objects", "sec-math.sinh", "sec-properties-of-the-generatorfunction-prototype-object", "sec-asyncgeneratorfunction-objects", "sec-regexp.prototype.compile", "sec-ecmascript-standard-built-in-objects", "sec-function.prototype.tostring", "sec-properties-of-the-generatorfunction-constructor", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-math.sign", "sec-math.atan", "sec-math.asinh", "sec-weakset-objects", "sec-generatorfunction-objects", "sec-executable-code-and-execution-contexts", "sec-control-abstraction-objects", "sec-asynciteratorprototype", "sec-asyncgenerator-abstract-operations", "sec-promisecapability-records"], "secData": {"sec-asyncgeneratorfunction-instances": {"num": "25.3.4", "title": "#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instances\">#sec-asyncgeneratorfunction-instances</span> AsyncGeneratorFunction Instances</h1>\n      <p>Every AsyncGeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[IsClassConstructor]] internal slot for all such instances is <emu-val>false</emu-val>.</p>\n      <p>Each AsyncGeneratorFunction instance has the following own properties:</p>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-instance-length\"><h1><span class=\"secnum\">25.3.4.1</span>#sec-asyncgeneratorfunction-instance-length length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-name\"><h1><span class=\"secnum\">25.3.4.2</span>#sec-asyncgeneratorfunction-instance-name name</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-prototype\"><h1><span class=\"secnum\">25.3.4.3</span>#sec-asyncgeneratorfunction-instance-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-math.log1p": {"num": "20.3.2.21", "title": "#sec-math.log1p Math.log1p ( x )", "html": "<emu-clause id=\"sec-math.log1p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log1p\">#sec-math.log1p</span> Math.log1p ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the natural logarithm of 1 + <var>x</var>. The result is computed in a way that is accurate even when the value of x is close to zero.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than -1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If x is -1, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-promise.prototype.finally": {"num": "25.6.5.3", "title": "#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )", "html": "<emu-clause id=\"sec-promise.prototype.finally\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.finally\">#sec-promise.prototype.finally</span> Promise.prototype.finally ( <var>onFinally</var> )</h1>\n        <p>When the <code>finally</code> method is called with argument <var>onFinally</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>promise</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>onFinally</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>thenFinally</var> be <var>onFinally</var>.</li><li>Let <var>catchFinally</var> be <var>onFinally</var>.</li></ol></li><li>Else,<ol><li>Let <var>stepsThenFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-thenfinallyfunctions\" title=\"\"><a href=\"#sec-thenfinallyfunctions\">Then Finally Functions</a></emu-xref>.</li><li>Let <var>thenFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsThenFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>thenFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>thenFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li><li>Let <var>stepsCatchFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-catchfinallyfunctions\" title=\"\"><a href=\"#sec-catchfinallyfunctions\">Catch Finally Functions</a></emu-xref>.</li><li>Let <var>catchFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsCatchFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>catchFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>catchFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>promise</var>, <emu-val>\"then\"</emu-val>, &#171; <var>thenFinally</var>, <var>catchFinally</var> &#187;).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-thenfinallyfunctions\"><h1><span class=\"secnum\">25.6.5.3.1</span>#sec-thenfinallyfunctions Then Finally Functions</h1>...</div><div id=\"excluded-sec-catchfinallyfunctions\"><h1><span class=\"secnum\">25.6.5.3.2</span>#sec-catchfinallyfunctions Catch Finally Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.abs": {"num": "20.3.2.1", "title": "#sec-math.abs Math.abs ( x )", "html": "<emu-clause id=\"sec-math.abs\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.abs\">#sec-math.abs</span> Math.abs ( <var>x</var> )</h1>\n        <p>Returns the absolute value of <var>x</var>; the result has the same magnitude as <var>x</var> but has positive sign.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-properties-of-generator-prototype": {"num": "25.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is <dfn>%Generator.prototype%</dfn> (<dfn>%GeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-promise-abstract-operations": {"num": "25.6.1", "title": "#sec-promise-abstract-operations Promise Abstract Operations", "html": "<emu-clause id=\"sec-promise-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-abstract-operations\">#sec-promise-abstract-operations</span> Promise Abstract Operations</h1>\n\n      <div id=\"excluded-sec-promisecapability-records\"><h1><span class=\"secnum\">25.6.1.1</span>#sec-promisecapability-records PromiseCapability Records</h1>...</div><div id=\"excluded-sec-promisereaction-records\"><h1><span class=\"secnum\">25.6.1.2</span>#sec-promisereaction-records PromiseReaction Records</h1>...</div><div id=\"excluded-sec-createresolvingfunctions\"><h1><span class=\"secnum\">25.6.1.3</span>#sec-createresolvingfunctions CreateResolvingFunctions ( promise )</h1>...</div><div id=\"excluded-sec-fulfillpromise\"><h1><span class=\"secnum\">25.6.1.4</span>#sec-fulfillpromise FulfillPromise ( promise, value )</h1>...</div><div id=\"excluded-sec-newpromisecapability\"><h1><span class=\"secnum\">25.6.1.5</span>#sec-newpromisecapability NewPromiseCapability ( C )</h1>...</div><div id=\"excluded-sec-ispromise\"><h1><span class=\"secnum\">25.6.1.6</span>#sec-ispromise IsPromise ( x )</h1>...</div><div id=\"excluded-sec-rejectpromise\"><h1><span class=\"secnum\">25.6.1.7</span>#sec-rejectpromise RejectPromise ( promise, reason )</h1>...</div><div id=\"excluded-sec-triggerpromisereactions\"><h1><span class=\"secnum\">25.6.1.8</span>#sec-triggerpromisereactions TriggerPromiseReactions ( reactions, argument )</h1>...</div><div id=\"excluded-sec-host-promise-rejection-tracker\"><h1><span class=\"secnum\">25.6.1.9</span>#sec-host-promise-rejection-tracker HostPromiseRejectionTracker ( promise, operation )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-promise-constructor": {"num": "25.6.4", "title": "#sec-properties-of-the-promise-constructor Properties of the Promise Constructor", "html": "<emu-clause id=\"sec-properties-of-the-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-constructor\">#sec-properties-of-the-promise-constructor</span> Properties of the Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.all\"><h1><span class=\"secnum\">25.6.4.1</span>#sec-promise.all Promise.all ( iterable )</h1>...</div><div id=\"excluded-sec-promise.allsettled\"><h1><span class=\"secnum\">25.6.4.2</span>#sec-promise.allsettled Promise.allSettled ( iterable )</h1>...</div><div id=\"excluded-sec-promise.any\"><h1><span class=\"secnum\">25.6.4.3</span>#sec-promise.any Promise.any ( iterable )</h1>...</div><div id=\"excluded-sec-promise.prototype\"><h1><span class=\"secnum\">25.6.4.4</span>#sec-promise.prototype Promise.prototype</h1>...</div><div id=\"excluded-sec-promise.race\"><h1><span class=\"secnum\">25.6.4.5</span>#sec-promise.race Promise.race ( iterable )</h1>...</div><div id=\"excluded-sec-promise.reject\"><h1><span class=\"secnum\">25.6.4.6</span>#sec-promise.reject Promise.reject ( r )</h1>...</div><div id=\"excluded-sec-promise.resolve\"><h1><span class=\"secnum\">25.6.4.7</span>#sec-promise.resolve Promise.resolve ( x )</h1>...</div><div id=\"excluded-sec-get-promise-@@species\"><h1><span class=\"secnum\">25.6.4.8</span>#sec-get-promise-@@species get Promise [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-async-functions-abstract-operations": {"num": "25.7.5", "title": "#sec-async-functions-abstract-operations Async Functions Abstract Operations", "html": "<emu-clause id=\"sec-async-functions-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-functions-abstract-operations\">#sec-async-functions-abstract-operations</span> Async Functions Abstract Operations</h1>\n\n      <div id=\"excluded-sec-async-functions-abstract-operations-async-function-start\"><h1><span class=\"secnum\">25.7.5.1</span>#sec-async-functions-abstract-operations-async-function-start AsyncFunctionStart ( promiseCapability, asyncFunctionBody )</h1>...</div></emu-clause>\n  "}, "sec-properties-of-the-promise-prototype-object": {"num": "25.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">25.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">25.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">25.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">25.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.6.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-async-function-constructor": {"num": "25.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour. All ECMAScript syntactic forms for defining async function objects create direct instances of AsyncFunction. There is no syntactic means to create instances of AsyncFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">25.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n    "}, "sec-async-function-prototype-properties": {"num": "25.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>is <dfn>%AsyncFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">25.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">25.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-math.asin": {"num": "20.3.2.4", "title": "#sec-math.asin Math.asin ( x )", "html": "<emu-clause id=\"sec-math.asin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.asin\">#sec-math.asin</span> Math.asin ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc sine of <var>x</var>. The result is expressed in radians and ranges from -&#960; / 2 to +&#960; / 2.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is greater than 1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than -1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-math.tanh": {"num": "20.3.2.34", "title": "#sec-math.tanh Math.tanh ( x )", "html": "<emu-clause id=\"sec-math.tanh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.tanh\">#sec-math.tanh</span> Math.tanh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the hyperbolic tangent of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is +1.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is -1.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.tanh(x)</code> is the same as the value of <code>(Math.exp(x) - Math.exp(-x)) / (Math.exp(x) + Math.exp(-x))</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise.resolve": {"num": "25.6.4.7", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">25.6.4.7.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.race": {"num": "25.6.4.5", "title": "#sec-promise.race Promise.race ( iterable )", "html": "<emu-clause id=\"sec-promise.race\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.race\">#sec-promise.race</span> Promise.race ( <var>iterable</var> )</h1>\n        <p>The <code>race</code> function returns a new promise which is settled in the same way as the first passed promise to settle. It resolves all elements of the passed <var>iterable</var> to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseRace\"><a href=\"#sec-performpromiserace\">PerformPromiseRace</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If the <var>iterable</var> argument is empty or if none of the promises in <var>iterable</var> ever settle then the pending promise returned by this method will never be settled.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>race</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It also expects that its <emu-val>this</emu-val> value provides a <code>resolve</code> method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiserace\"><h1><span class=\"secnum\">25.6.4.5.1</span>#sec-performpromiserace Runtime Semantics: PerformPromiseRace ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-proxy-constructor": {"num": "26.2.2", "title": "#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor", "html": "<emu-clause id=\"sec-properties-of-the-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-proxy-constructor\">#sec-properties-of-the-proxy-constructor</span> Properties of the Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property because proxy exotic objects do not have a [[Prototype]] internal slot that requires initialization.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy.revocable\"><h1><span class=\"secnum\">26.2.2.1</span>#sec-proxy.revocable Proxy.revocable ( target, handler )</h1>...</div></emu-clause>\n  "}, "sec-async-from-sync-iterator-objects": {"num": "25.1.4", "title": "#sec-async-from-sync-iterator-objects Async-from-Sync Iterator Objects", "html": "<emu-clause id=\"sec-async-from-sync-iterator-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</span> Async-from-Sync Iterator Objects</h1>\n      <p>An Async-from-Sync Iterator object is an async iterator that adapts a specific synchronous iterator. There is not a named <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for Async-from-Sync Iterator objects. Instead, Async-from-Sync iterator objects are created by the <emu-xref aoid=\"CreateAsyncFromSyncIterator\"><a href=\"#sec-createasyncfromsynciterator\">CreateAsyncFromSyncIterator</a></emu-xref> abstract operation as needed.</p>\n\n      <div id=\"excluded-sec-createasyncfromsynciterator\"><h1><span class=\"secnum\">25.1.4.1</span>#sec-createasyncfromsynciterator CreateAsyncFromSyncIterator ( syncIteratorRecord )</h1>...</div><div id=\"excluded-sec-%asyncfromsynciteratorprototype%-object\"><h1><span class=\"secnum\">25.1.4.2</span>#sec-%asyncfromsynciteratorprototype%-object The %AsyncFromSyncIteratorPrototype% Object</h1>...</div><div id=\"excluded-sec-properties-of-async-from-sync-iterator-instances\"><h1><span class=\"secnum\">25.1.4.3</span>#sec-properties-of-async-from-sync-iterator-instances Properties of Async-from-Sync Iterator Instances</h1>...</div><div id=\"excluded-sec-asyncfromsynciteratorcontinuation\"><h1><span class=\"secnum\">25.1.4.4</span>#sec-asyncfromsynciteratorcontinuation AsyncFromSyncIteratorContinuation ( result, promiseCapability )</h1>...</div></emu-clause>\n  "}, "sec-promise.allsettled": {"num": "25.6.4.2", "title": "#sec-promise.allsettled Promise.allSettled ( iterable )", "html": "<emu-clause id=\"sec-promise.allsettled\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled\">#sec-promise.allsettled</span> Promise.allSettled ( <var>iterable</var> )</h1>\n        <p>The <code>allSettled</code> function returns a promise that is fulfilled with an array of promise state snapshots, but only after all the original promises have settled, i.e. become either fulfilled or rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAllSettled\"><a href=\"#sec-performpromiseallsettled\">PerformPromiseAllSettled</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>allSettled</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseallsettled\"><h1><span class=\"secnum\">25.6.4.2.1</span>#sec-performpromiseallsettled Runtime Semantics: PerformPromiseAllSettled ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.allsettled-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.2.2</span>#sec-promise.allsettled-resolve-element-functions Promise.allSettled Resolve Element Functions</h1>...</div><div id=\"excluded-sec-promise.allsettled-reject-element-functions\"><h1><span class=\"secnum\">25.6.4.2.3</span>#sec-promise.allsettled-reject-element-functions Promise.allSettled Reject Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-promise.all": {"num": "25.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getpromiseresolve\"><h1><span class=\"secnum\">25.6.4.1.1</span>#sec-getpromiseresolve Runtime Semantics: GetPromiseResolve ( promiseConstructor )</h1>...</div><div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">25.6.4.1.2</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.1.3</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-relations-of-candidate-executions": {"num": "27.6", "title": "#sec-relations-of-candidate-executions Relations of Candidate Executions", "html": "<emu-clause id=\"sec-relations-of-candidate-executions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-relations-of-candidate-executions\">#sec-relations-of-candidate-executions</span> Relations of Candidate Executions</h1>\n    <div id=\"excluded-sec-agent-order\"><h1><span class=\"secnum\">27.6.1</span>#sec-agent-order agent-order</h1>...</div><div id=\"excluded-sec-reads-bytes-from\"><h1><span class=\"secnum\">27.6.2</span>#sec-reads-bytes-from reads-bytes-from</h1>...</div><div id=\"excluded-sec-reads-from\"><h1><span class=\"secnum\">27.6.3</span>#sec-reads-from reads-from</h1>...</div><div id=\"excluded-sec-host-synchronizes-with\"><h1><span class=\"secnum\">27.6.4</span>#sec-host-synchronizes-with host-synchronizes-with</h1>...</div><div id=\"excluded-sec-synchronizes-with\"><h1><span class=\"secnum\">27.6.5</span>#sec-synchronizes-with synchronizes-with</h1>...</div><div id=\"excluded-sec-happens-before\"><h1><span class=\"secnum\">27.6.6</span>#sec-happens-before happens-before</h1>...</div></emu-clause>\n\n  "}, "sec-async-function-constructor-properties": {"num": "25.7.2", "title": "#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor-properties\">#sec-async-function-constructor-properties</span> Properties of the AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-length\"><h1><span class=\"secnum\">25.7.2.1</span>#sec-async-function-constructor-length AsyncFunction.length</h1>...</div><div id=\"excluded-sec-async-function-constructor-prototype\"><h1><span class=\"secnum\">25.7.2.2</span>#sec-async-function-constructor-prototype AsyncFunction.prototype</h1>...</div></emu-clause>\n    "}, "sec-createbuiltinfunction": {"num": "9.3.3", "title": "#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )", "html": "<emu-clause id=\"sec-createbuiltinfunction\" aoid=\"CreateBuiltinFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</span> CreateBuiltinFunction ( <var>steps</var>, <var>internalSlotsList</var> [ , <var>realm</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation CreateBuiltinFunction takes arguments <var>steps</var> and <var>internalSlotsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of names of internal slots) and optional arguments <var>realm</var> and <var>prototype</var>. <var>internalSlotsList</var> contains the names of additional internal slots that must be defined as part of the object. This operation creates a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>steps</var> is either a set of algorithm steps or other definition of a function's behaviour provided in this specification.</li><li>If <var>realm</var> is not present, set <var>realm</var> to <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var> is a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.</li><li>If <var>prototype</var> is not present, set <var>prototype</var> to <var>realm</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>]].</li><li>Let <var>func</var> be a new built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that when called performs the action described by <var>steps</var>. The new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has internal slots whose names are the elements of <var>internalSlotsList</var>.</li><li>Set <var>func</var>.[[Realm]] to <var>realm</var>.</li><li>Set <var>func</var>.[[Prototype]] to <var>prototype</var>.</li><li>Set <var>func</var>.[[Extensible]] to <emu-val>true</emu-val>.</li><li>Set <var>func</var>.[[ScriptOrModule]] to <emu-val>null</emu-val>.</li><li>Return <var>func</var>.</li></ol></emu-alg>\n      <p>Each built-in function defined in this specification is created by calling the CreateBuiltinFunction abstract operation.</p>\n    </emu-clause>\n  "}, "sec-%iteratorprototype%-object": {"num": "25.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-common-iteration-interfaces": {"num": "25.1.1", "title": "#sec-common-iteration-interfaces Common Iteration Interfaces", "html": "<emu-clause id=\"sec-common-iteration-interfaces\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-common-iteration-interfaces\">#sec-common-iteration-interfaces</span> Common Iteration Interfaces</h1>\n      <p>An interface is a set of property keys whose associated values match a specific specification. Any object that provides all the properties as described by an interface's specification <em>conforms</em> to that interface. An interface is not represented by a distinct object. There may be many separately implemented objects that conform to any interface. An individual object may conform to multiple interfaces.</p>\n\n      <div id=\"excluded-sec-iterable-interface\"><h1><span class=\"secnum\">25.1.1.1</span>#sec-iterable-interface The Iterable Interface</h1>...</div><div id=\"excluded-sec-iterator-interface\"><h1><span class=\"secnum\">25.1.1.2</span>#sec-iterator-interface The Iterator Interface</h1>...</div><div id=\"excluded-sec-asynciterable-interface\"><h1><span class=\"secnum\">25.1.1.3</span>#sec-asynciterable-interface The AsyncIterable Interface</h1>...</div><div id=\"excluded-sec-asynciterator-interface\"><h1><span class=\"secnum\">25.1.1.4</span>#sec-asynciterator-interface The AsyncIterator Interface</h1>...</div><div id=\"excluded-sec-iteratorresult-interface\"><h1><span class=\"secnum\">25.1.1.5</span>#sec-iteratorresult-interface The IteratorResult Interface</h1>...</div></emu-clause>\n\n    "}, "sec-forward-progress": {"num": "8.8", "title": "#sec-forward-progress Forward Progress", "html": "<emu-clause id=\"sec-forward-progress\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-forward-progress\">#sec-forward-progress</span> Forward Progress</h1>\n    <p>For an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to <em>make forward progress</em> is for it to perform an evaluation step according to this specification.</p>\n    <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> becomes <em>blocked</em> when its <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> waits synchronously and indefinitely for an external event. Only agents whose <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s [[CanBlock]] property is <emu-val>true</emu-val> can become blocked in this sense.  An <em>unblocked</em> <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is one that is not blocked.</p>\n\n    <p>Implementations must ensure that:</p>\n    <ul>\n      <li>every unblocked <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> with a dedicated <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> eventually makes forward progress</li>\n      <li>in a set of agents that share an <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref>, one <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> eventually makes forward progress</li>\n      <li>an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> does not cause another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to become blocked except via explicit APIs that provide blocking.</li>\n    </ul>\n\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>This, along with the liveness guarantee in the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, ensures that all <emu-const>SeqCst</emu-const> writes eventually become observable to all agents.</p>\n    </div></emu-note>\n  </emu-clause>\n"}, "sec-math.sin": {"num": "20.3.2.30", "title": "#sec-math.sin Math.sin ( x )", "html": "<emu-clause id=\"sec-math.sin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sin\">#sec-math.sin</span> Math.sin ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the sine of <var>x</var>. The argument is expressed in radians.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val> or <emu-val>-&#8734;</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              </th>\n              <th>\n                Global Name\n              </th>\n              <th>\n                ECMAScript Language Association\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>\n              </td>\n              <td>\n                <code>AggregateError</code>\n              </td>\n              <td>\n                The <code>AggregateError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %AggregateErrorPrototype%\n              </td>\n              <td>\n                <code>AggregateError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-aggregate-error-prototype-objects\"><a href=\"#sec-properties-of-the-aggregate-error-prototype-objects\">%AggregateError.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array</code>\n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"entries\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"forEach\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"keys\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"values\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGeneratorFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGenerator.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              </td>\n              <td>\n                <code>Atomics</code>\n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt</code>\n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigInt64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigUint64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean</code>\n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView</code>\n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date</code>\n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURI</code>\n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURI</code>\n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error</code>\n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              </td>\n              <td>\n                <code>eval</code>\n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>\n              </td>\n              <td>\n                <code>EvalError</code>\n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>; i.e., %EvalError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float32Array</code>\n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>; i.e., %Float32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float64Array</code>\n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>; i.e., %Float64Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              </td>\n              <td>\n                <code>Function</code>\n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              </td>\n              <td>\n                <code>Function.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%Generator.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int8Array</code>\n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>; i.e., %Int8Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int16Array</code>\n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>; i.e., %Int16Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int32Array</code>\n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>; i.e., %Int32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              </td>\n              <td>\n                <code>isFinite</code>\n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              </td>\n              <td>\n                <code>isNaN</code>\n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON</code>\n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON.parse</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"parse\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\">%JSONStringify%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"stringify\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map</code>\n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              </td>\n              <td>\n                <code>Math</code>\n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number</code>\n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object</code>\n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"toString\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"valueOf\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseFloat</code>\n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseInt</code>\n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise</code>\n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"then\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.all</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"all\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.reject</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"reject\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"resolve\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              </td>\n              <td>\n                <code>Proxy</code>\n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>RangeError</code>\n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>; i.e., %RangeError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>\n              </td>\n              <td>\n                <code>ReferenceError</code>\n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>; i.e., %ReferenceError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              </td>\n              <td>\n                <code>Reflect</code>\n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp</code>\n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set</code>\n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              </td>\n              <td>\n                <code>String</code>\n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>String.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol</code>\n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>\n              </td>\n              <td>\n                <code>SyntaxError</code>\n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>; i.e., %SyntaxError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>TypeError</code>\n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>; i.e., %TypeError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8Array</code>\n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>; i.e., %Uint8Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>; i.e., %Uint8ClampedArray.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint16Array</code>\n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>; i.e., %Uint16Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint32Array</code>\n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>; i.e., %Uint32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>\n              </td>\n              <td>\n                <code>URIError</code>\n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>; i.e., %URIError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap</code>\n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet</code>\n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-generator-abstract-operations": {"num": "25.4.3", "title": "#sec-generator-abstract-operations Generator Abstract Operations", "html": "<emu-clause id=\"sec-generator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-abstract-operations\">#sec-generator-abstract-operations</span> Generator Abstract Operations</h1>\n\n      <div id=\"excluded-sec-generatorstart\"><h1><span class=\"secnum\">25.4.3.1</span>#sec-generatorstart GeneratorStart ( generator, generatorBody )</h1>...</div><div id=\"excluded-sec-generatorvalidate\"><h1><span class=\"secnum\">25.4.3.2</span>#sec-generatorvalidate GeneratorValidate ( generator )</h1>...</div><div id=\"excluded-sec-generatorresume\"><h1><span class=\"secnum\">25.4.3.3</span>#sec-generatorresume GeneratorResume ( generator, value )</h1>...</div><div id=\"excluded-sec-generatorresumeabrupt\"><h1><span class=\"secnum\">25.4.3.4</span>#sec-generatorresumeabrupt GeneratorResumeAbrupt ( generator, abruptCompletion )</h1>...</div><div id=\"excluded-sec-getgeneratorkind\"><h1><span class=\"secnum\">25.4.3.5</span>#sec-getgeneratorkind GetGeneratorKind ( )</h1>...</div><div id=\"excluded-sec-generatoryield\"><h1><span class=\"secnum\">25.4.3.6</span>#sec-generatoryield GeneratorYield ( iterNextObj )</h1>...</div></emu-clause>\n  "}, "sec-asyncgeneratorfunction-constructor": {"num": "25.3.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of AsyncGeneratorFunction. There is no syntactic means to create instances of AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.3.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-math.sqrt": {"num": "20.3.2.32", "title": "#sec-math.sqrt Math.sqrt ( x )", "html": "<emu-clause id=\"sec-math.sqrt\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sqrt\">#sec-math.sqrt</span> Math.sqrt ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the square root of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than 0, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-promise-jobs": {"num": "25.6.2", "title": "#sec-promise-jobs Promise Jobs", "html": "<emu-clause id=\"sec-promise-jobs\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-jobs\">#sec-promise-jobs</span> Promise Jobs</h1>\n\n      <div id=\"excluded-sec-newpromisereactionjob\"><h1><span class=\"secnum\">25.6.2.1</span>#sec-newpromisereactionjob NewPromiseReactionJob ( reaction, argument )</h1>...</div><div id=\"excluded-sec-newpromiseresolvethenablejob\"><h1><span class=\"secnum\">25.6.2.2</span>#sec-newpromiseresolvethenablejob NewPromiseResolveThenableJob ( promiseToResolve, thenable, then )</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorresumenext": {"num": "25.5.3.5", "title": "#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )", "html": "<emu-clause id=\"sec-asyncgeneratorresumenext\" aoid=\"AsyncGeneratorResumeNext\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorresumenext\">#sec-asyncgeneratorresumenext</span> AsyncGeneratorResumeNext ( <var>generator</var> )</h1>\n        <p>The abstract operation AsyncGeneratorResumeNext takes argument <var>generator</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>generator</var> is an AsyncGenerator instance.</li><li>Let <var>state</var> be <var>generator</var>.[[AsyncGeneratorState]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is not <emu-const>executing</emu-const>.</li><li>If <var>state</var> is <emu-const>awaiting-return</emu-const>, return <emu-val>undefined</emu-val>.</li><li>Let <var>queue</var> be <var>generator</var>.[[AsyncGeneratorQueue]].</li><li>If <var>queue</var> is an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, return <emu-val>undefined</emu-val>.</li><li>Let <var>next</var> be the value of the first element of <var>queue</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>next</var> is an AsyncGeneratorRequest record.</li><li>Let <var>completion</var> be <var>next</var>.[[Completion]].</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>state</var> is <emu-const>suspendedStart</emu-const>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <emu-const>completed</emu-const>.</li><li>Set <var>state</var> to <emu-const>completed</emu-const>.</li></ol></li><li>If <var>state</var> is <emu-const>completed</emu-const>, then<ol><li>If <var>completion</var>.[[Type]] is <emu-const>return</emu-const>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <emu-const>awaiting-return</emu-const>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>, <var>completion</var>.[[Value]]).</li><li>Let <var>stepsFulfilled</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-fulfilled\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-fulfilled\">AsyncGeneratorResumeNext Return Processor Fulfilled Functions</a></emu-xref>.</li><li>Let <var>onFulfilled</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsFulfilled</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onFulfilled</var>.[[Generator]] to <var>generator</var>.</li><li>Let <var>stepsRejected</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-rejected\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-rejected\">AsyncGeneratorResumeNext Return Processor Rejected Functions</a></emu-xref>.</li><li>Let <var>onRejected</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsRejected</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onRejected</var>.[[Generator]] to <var>generator</var>.</li><li>Perform !&#160;<emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>completion</var>.[[Type]] is <emu-const>throw</emu-const>.</li><li>Perform !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>generator</var>, <var>completion</var>.[[Value]]).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li></ol></li></ol></li><li>Else if <var>state</var> is <emu-const>completed</emu-const>, return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>generator</var>, <emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is either <emu-const>suspendedStart</emu-const> or <emu-const>suspendedYield</emu-const>.</li><li>Let <var>genContext</var> be <var>generator</var>.[[AsyncGeneratorContext]].</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> <var>callerContext</var>.</li><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <emu-const>executing</emu-const>.</li><li>Push <var>genContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>genContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Resume the suspended evaluation of <var>genContext</var> using <var>completion</var> as the result of the operation that suspended it. Let <var>result</var> be the completion record returned by the resumed computation.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> is never an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When we return here, <var>genContext</var> has already been removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and <var>callerContext</var> is the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-fulfilled\">\n          <h1><span class=\"secnum\">25.5.3.5.1</span> AsyncGeneratorResumeNext Return Processor Fulfilled Functions</h1>\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function has a [[Generator]] internal slot.</p>\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is called with argument <var>value</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <emu-const>completed</emu-const>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>F</var>.[[Generator]], <var>value</var>, <emu-val>true</emu-val>).</li></ol></emu-alg>\n\n          <p>The <emu-val>\"length\"</emu-val> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is 1.</p>\n        </emu-clause>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-rejected\">\n          <h1><span class=\"secnum\">25.5.3.5.2</span> AsyncGeneratorResumeNext Return Processor Rejected Functions</h1>\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function has a [[Generator]] internal slot.</p>\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is called with argument <var>reason</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <emu-const>completed</emu-const>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>F</var>.[[Generator]], <var>reason</var>).</li></ol></emu-alg>\n\n          <p>The <emu-val>\"length\"</emu-val> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is 1.</p>\n        </emu-clause>\n      </emu-clause>\n\n      "}, "sec-async-function-instances": {"num": "25.7.4", "title": "#sec-async-function-instances AsyncFunction Instances", "html": "<emu-clause id=\"sec-async-function-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-instances\">#sec-async-function-instances</span> AsyncFunction Instances</h1>\n\n      <p>Every AsyncFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[IsClassConstructor]] internal slot for all such instances is <emu-val>false</emu-val>. AsyncFunction instances are not constructors and do not have a [[Construct]] internal method. AsyncFunction instances do not have a prototype property as they are not constructible.</p>\n      <p>Each AsyncFunction instance has the following own properties:</p>\n      <div id=\"excluded-sec-async-function-instances-length\"><h1><span class=\"secnum\">25.7.4.1</span>#sec-async-function-instances-length length</h1>...</div><div id=\"excluded-sec-async-function-instances-name\"><h1><span class=\"secnum\">25.7.4.2</span>#sec-async-function-instances-name name</h1>...</div></emu-clause>\n\n    "}, "sec-iteration": {"num": "25.1", "title": "#sec-iteration Iteration", "html": "<emu-clause id=\"sec-iteration\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iteration\">#sec-iteration</span> Iteration</h1>\n\n    <div id=\"excluded-sec-common-iteration-interfaces\"><h1><span class=\"secnum\">25.1.1</span>#sec-common-iteration-interfaces Common Iteration Interfaces</h1>...</div><div id=\"excluded-sec-%iteratorprototype%-object\"><h1><span class=\"secnum\">25.1.2</span>#sec-%iteratorprototype%-object The %IteratorPrototype% Object</h1>...</div><div id=\"excluded-sec-asynciteratorprototype\"><h1><span class=\"secnum\">25.1.3</span>#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object</h1>...</div><div id=\"excluded-sec-async-from-sync-iterator-objects\"><h1><span class=\"secnum\">25.1.4</span>#sec-async-from-sync-iterator-objects Async-from-Sync Iterator Objects</h1>...</div></emu-clause>\n\n  "}, "sec-math.log": {"num": "20.3.2.20", "title": "#sec-math.log Math.log ( x )", "html": "<emu-clause id=\"sec-math.log\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log\">#sec-math.log</span> Math.log ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the natural logarithm of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than 0, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val> or <emu-val>-0</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is 1, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-math.min": {"num": "20.3.2.25", "title": "#sec-math.min Math.min ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.min\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.min\">#sec-math.min</span> Math.min ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the smallest of the resulting values.</p>\n        <ul>\n          <li>\n            If no arguments are given, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If any value is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            The comparison of values to determine the smallest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-weakmap-objects": {"num": "23.3", "title": "#sec-weakmap-objects WeakMap Objects", "html": "<emu-clause id=\"sec-weakmap-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</span> WeakMap Objects</h1>\n    <p>WeakMap objects are collections of key/value pairs where the keys are objects and values may be arbitrary ECMAScript language values. A WeakMap may be queried to see if it contains a key/value pair with a specific key, but no mechanism is provided for enumerating the objects it holds as keys. If an object that is being used as the key of a WeakMap key/value pair is only reachable by following a chain of references that start within that WeakMap, then that key/value pair is inaccessible and is automatically removed from the WeakMap. WeakMap implementations must detect and remove such key/value pairs and any associated resources.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time a key/value pair of a WeakMap becomes inaccessible and the time when the key/value pair is removed from the WeakMap. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to observe a key of a WeakMap that does not require the observer to present the observed key.</p>\n    <p>WeakMap objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of key/value pairs in the collection. The data structure used in this WeakMap objects specification are only intended to describe the required observable semantics of WeakMap objects. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>WeakMap and WeakSets are intended to provide mechanisms for dynamically associating state with an object in a manner that does not &#8220;leak&#8221; memory resources if, in the absence of the WeakMap or WeakSet, the object otherwise became inaccessible and subject to resource reclamation by the implementation's garbage collection mechanisms. This characteristic can be achieved by using an inverted per-object mapping of weak map instances to keys. Alternatively each weak map may internally store its key to value mappings but this approach requires coordination between the WeakMap or WeakSet implementation and the garbage collector. The following references describe mechanism that may be useful to implementations of WeakMap and WeakSets:</p>\n      <p>Barry Hayes. 1997. Ephemerons: a new finalization mechanism. In <i>Proceedings of the 12th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA '97)</i>, A. Michael Berman (Ed.). ACM, New York, NY, USA, 176-183, <a href=\"http://doi.acm.org/10.1145/263698.263733\">http://doi.acm.org/10.1145/263698.263733</a>.</p>\n      <p>Alexandra Barros, Roberto Ierusalimschy, Eliminating Cycles in Weak Tables. Journal of Universal Computer Science - J.UCS, vol. 14, no. 21, pp. 3481-3497, 2008, <a href=\"http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak\">http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak</a></p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakmap-constructor\"><h1><span class=\"secnum\">23.3.1</span>#sec-weakmap-constructor The WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-constructor\"><h1><span class=\"secnum\">23.3.2</span>#sec-properties-of-the-weakmap-constructor Properties of the WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-prototype-object\"><h1><span class=\"secnum\">23.3.3</span>#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakmap-instances\"><h1><span class=\"secnum\">23.3.4</span>#sec-properties-of-weakmap-instances Properties of WeakMap Instances</h1>...</div></emu-clause>\n\n  "}, "sec-promise-objects": {"num": "25.6", "title": "#sec-promise-objects Promise Objects", "html": "<emu-clause id=\"sec-promise-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-objects\">#sec-promise-objects</span> Promise Objects</h1>\n    <p>A Promise is an object that is used as a placeholder for the eventual results of a deferred (and possibly asynchronous) computation.</p>\n    <p>Any Promise object is in one of three mutually exclusive states: <em>fulfilled</em>, <em>rejected</em>, and <em>pending</em>:</p>\n    <ul>\n      <li>\n        A promise <code>p</code> is fulfilled if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>f</code>.\n      </li>\n      <li>\n        A promise <code>p</code> is rejected if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>r</code>.\n      </li>\n      <li>\n        A promise is pending if it is neither fulfilled nor rejected.\n      </li>\n    </ul>\n    <p>A promise is said to be <em>settled</em> if it is not pending, i.e. if it is either fulfilled or rejected.</p>\n    <p>A promise is <em>resolved</em> if it is settled or if it has been &#8220;locked in&#8221; to match the state of another promise. Attempting to resolve or reject a resolved promise has no effect. A promise is <em>unresolved</em> if it is not resolved. An unresolved promise is always in the pending state. A resolved promise may be pending, fulfilled or rejected.</p>\n\n    <div id=\"excluded-sec-promise-abstract-operations\"><h1><span class=\"secnum\">25.6.1</span>#sec-promise-abstract-operations Promise Abstract Operations</h1>...</div><div id=\"excluded-sec-promise-jobs\"><h1><span class=\"secnum\">25.6.2</span>#sec-promise-jobs Promise Jobs</h1>...</div><div id=\"excluded-sec-promise-constructor\"><h1><span class=\"secnum\">25.6.3</span>#sec-promise-constructor The Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-constructor\"><h1><span class=\"secnum\">25.6.4</span>#sec-properties-of-the-promise-constructor Properties of the Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-prototype-object\"><h1><span class=\"secnum\">25.6.5</span>#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-promise-instances\"><h1><span class=\"secnum\">25.6.6</span>#sec-properties-of-promise-instances Properties of Promise Instances</h1>...</div></emu-clause>\n\n  "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is <dfn>%AsyncGenerator.prototype%</dfn> (<dfn>%AsyncGeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-reflect-object": {"num": "26.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Reflect\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">26.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">26.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">26.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">26.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">26.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">26.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">26.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">26.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">26.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">26.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">26.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">26.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">26.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div><div id=\"excluded-sec-reflect-@@tostringtag\"><h1><span class=\"secnum\">26.1.14</span>#sec-reflect-@@tostringtag Reflect [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-math.log10": {"num": "20.3.2.22", "title": "#sec-math.log10 Math.log10 ( x )", "html": "<emu-clause id=\"sec-math.log10\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log10\">#sec-math.log10</span> Math.log10 ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the base 10 logarithm of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than 0, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is 1, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-math.tan": {"num": "20.3.2.33", "title": "#sec-math.tan Math.tan ( x )", "html": "<emu-clause id=\"sec-math.tan\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.tan\">#sec-math.tan</span> Math.tan ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the tangent of <var>x</var>. The argument is expressed in radians.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val> or <emu-val>-&#8734;</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-async-function-objects": {"num": "25.7", "title": "#sec-async-function-objects AsyncFunction Objects", "html": "<emu-clause id=\"sec-async-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-objects\">#sec-async-function-objects</span> AsyncFunction Objects</h1>\n    <p>AsyncFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt>s, and <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-async-function-constructor\"><h1><span class=\"secnum\">25.7.1</span>#sec-async-function-constructor The AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-constructor-properties\"><h1><span class=\"secnum\">25.7.2</span>#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties\"><h1><span class=\"secnum\">25.7.3</span>#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object</h1>...</div><div id=\"excluded-sec-async-function-instances\"><h1><span class=\"secnum\">25.7.4</span>#sec-async-function-instances AsyncFunction Instances</h1>...</div><div id=\"excluded-sec-async-functions-abstract-operations\"><h1><span class=\"secnum\">25.7.5</span>#sec-async-functions-abstract-operations Async Functions Abstract Operations</h1>...</div></emu-clause>\n"}, "sec-promise-constructor": {"num": "25.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-math.log2": {"num": "20.3.2.23", "title": "#sec-math.log2 Math.log2 ( x )", "html": "<emu-clause id=\"sec-math.log2\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log2\">#sec-math.log2</span> Math.log2 ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the base 2 logarithm of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than 0, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is 1, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-agents": {"num": "8.6", "title": "#sec-agents Agents", "html": "<emu-clause id=\"sec-agents\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-agents\">#sec-agents</span> Agents</h1>\n\n    <p>An <dfn id=\"agent\">agent</dfn> comprises a set of ECMAScript execution contexts, an <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, a <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, an <dfn id=\"agent-record\">Agent Record</dfn>, and an <dfn id=\"executing-thread\">executing thread</dfn>. Except for the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref>, the constituents of an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> belong exclusively to that <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>.</p>\n    <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes a job on the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s execution contexts independently of other agents, except that an <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> may be used as the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> by multiple agents, provided none of the agents sharing the thread have an <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> whose [[CanBlock]] property is <emu-val>true</emu-val>.</p>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Some web browsers share a single <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> across multiple unrelated tabs of a browser window, for example.</p>\n    </div></emu-note>\n    <p>While an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes jobs, the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is the <dfn id=\"surrounding-agent\">surrounding agent</dfn> for the code in those jobs. The code uses the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref> to access the specification level execution objects held within the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>: the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, and the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s fields.</p>\n    <emu-table id=\"table-agent-record\" caption=\"Agent Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-agent-record\">#table-agent-record</span>: <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> Fields</figcaption>\n      <table>\n        <tbody>\n          <tr>\n            <th>Field Name</th>\n            <th>Value</th>\n            <th>Meaning</th>\n          </tr>\n          <tr>\n            <td>[[LittleEndian]]</td>\n            <td>Boolean</td>\n            <td>The default value computed for the <em>isLittleEndian</em> parameter when it is needed by the algorithms <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref> and <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>. The choice is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> and should be the alternative that is most efficient for the implementation.  Once the value has been observed it cannot change.</td>\n          </tr>\n          <tr>\n            <td>[[CanBlock]]</td>\n            <td>Boolean</td>\n            <td>Determines whether the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> can block or not.</td>\n          </tr>\n          <tr>\n            <td>[[Signifier]]</td>\n            <td>Any globally-unique value</td>\n            <td>Uniquely identifies the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> within its <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree1]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on one-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree2]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on two-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree8]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on eight-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[CandidateExecution]]</td>\n            <td>A <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref></td>\n            <td>See the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>.</td>\n          </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n\n    <p>Once the values of [[Signifier]], [[IsLockFree1]], and [[IsLockFree2]] have been observed by any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> they cannot change.</p>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The values of [[IsLockFree1]] and [[IsLockFree2]] are not necessarily determined by the hardware, but may also reflect implementation choices that can vary over time and between ECMAScript implementations.</p>\n\n      <p>There is no [[IsLockFree4]] property: 4-byte atomic operations are always lock-free.</p>\n\n      <p>In practice, if an atomic operation is implemented with any type of lock the operation is not lock-free.  Lock-free does not imply wait-free: there is no upper bound on how many machine steps may be required to complete a lock-free atomic operation.</p>\n\n      <p>That an atomic access of size <em>n</em> is lock-free does not imply anything about the (perceived) atomicity of non-atomic accesses of size <em>n</em>, specifically, non-atomic accesses may still be performed as a sequence of several separate memory accesses.  See <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> and <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> for details.</p>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-agentsignifier\"><h1><span class=\"secnum\">8.6.1</span>#sec-agentsignifier AgentSignifier ( )</h1>...</div><div id=\"excluded-sec-agentcansuspend\"><h1><span class=\"secnum\">8.6.2</span>#sec-agentcansuspend AgentCanSuspend ( )</h1>...</div></emu-clause>\n\n  "}, "sec-newpromisecapability": {"num": "25.6.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" aoid=\"NewPromiseCapability\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes argument <var>C</var>. It attempts to use <var>C</var> as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in the fashion of the built-in Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its <code>resolve</code> and <code>reject</code> functions. The Promise object plus the <code>resolve</code> and <code>reject</code> functions are used to initialize a new <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be the <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-getcapabilitiesexecutor-functions\" title=\"\"><a href=\"#sec-getcapabilitiesexecutor-functions\">GetCapabilitiesExecutor Functions</a></emu-xref>.</li><li>Let <var>executor</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[Capability]] &#187;).</li><li>Set <var>executor</var>.[[Capability]] to <var>promiseCapability</var>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getcapabilitiesexecutor-functions\"><h1><span class=\"secnum\">25.6.1.5.1</span>#sec-getcapabilitiesexecutor-functions GetCapabilitiesExecutor Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.max": {"num": "20.3.2.24", "title": "#sec-math.max Math.max ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.max\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.max\">#sec-math.max</span> Math.max ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the largest of the resulting values.</p>\n        <ul>\n          <li>\n            If no arguments are given, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If any value is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-reflection": {"num": "26", "title": "#sec-reflection Reflection", "html": "<emu-clause id=\"sec-reflection\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflection\">#sec-reflection</span> Reflection</h1>\n\n  <div id=\"excluded-sec-reflect-object\"><h1><span class=\"secnum\">26.1</span>#sec-reflect-object The Reflect Object</h1>...</div><div id=\"excluded-sec-proxy-objects\"><h1><span class=\"secnum\">26.2</span>#sec-proxy-objects Proxy Objects</h1>...</div><div id=\"excluded-sec-module-namespace-objects\"><h1><span class=\"secnum\">26.3</span>#sec-module-namespace-objects Module Namespace Objects</h1>...</div></emu-clause>\n\n"}, "sec-module-namespace-objects": {"num": "26.3", "title": "#sec-module-namespace-objects Module Namespace Objects", "html": "<emu-clause id=\"sec-module-namespace-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</span> Module Namespace Objects</h1>\n    <p>A Module Namespace Object is a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> that provides runtime property-based access to a module's exported bindings. There is no <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function for Module Namespace Objects. Instead, such an object is created for each module that is imported by an <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> that includes a <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</p>\n    <p>In addition to the properties specified in <emu-xref href=\"#sec-module-namespace-exotic-objects\"><a href=\"#sec-module-namespace-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-exotic-objects\">#sec-module-namespace-exotic-objects</a></emu-xref> each Module Namespace Object has the following own property:</p>\n\n    <div id=\"excluded-sec-@@tostringtag\"><h1><span class=\"secnum\">26.3.1</span>#sec-@@tostringtag @@toStringTag</h1>...</div></emu-clause>\n"}, "sec-generatorfunction-instances": {"num": "25.2.4", "title": "#sec-generatorfunction-instances GeneratorFunction Instances", "html": "<emu-clause id=\"sec-generatorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances\">#sec-generatorfunction-instances</span> GeneratorFunction Instances</h1>\n      <p>Every GeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[IsClassConstructor]] internal slot for all such instances is <emu-val>false</emu-val>.</p>\n      <p>Each GeneratorFunction instance has the following own properties:</p>\n\n      <div id=\"excluded-sec-generatorfunction-instances-length\"><h1><span class=\"secnum\">25.2.4.1</span>#sec-generatorfunction-instances-length length</h1>...</div><div id=\"excluded-sec-generatorfunction-instances-name\"><h1><span class=\"secnum\">25.2.4.2</span>#sec-generatorfunction-instances-name name</h1>...</div><div id=\"excluded-sec-generatorfunction-instances-prototype\"><h1><span class=\"secnum\">25.2.4.3</span>#sec-generatorfunction-instances-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-createresolvingfunctions": {"num": "25.6.1.3", "title": "#sec-createresolvingfunctions CreateResolvingFunctions ( promise )", "html": "<emu-clause id=\"sec-createresolvingfunctions\" aoid=\"CreateResolvingFunctions\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createresolvingfunctions\">#sec-createresolvingfunctions</span> CreateResolvingFunctions ( <var>promise</var> )</h1>\n        <p>The abstract operation CreateResolvingFunctions takes argument <var>promise</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>alreadyResolved</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Value]]: <emu-val>false</emu-val> }.</li><li>Let <var>stepsResolve</var> be the algorithm steps defined in <emu-xref href=\"#sec-promise-resolve-functions\" title=\"\"><a href=\"#sec-promise-resolve-functions\">Promise Resolve Functions</a></emu-xref>.</li><li>Let <var>resolve</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsResolve</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>resolve</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>resolve</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Let <var>stepsReject</var> be the algorithm steps defined in <emu-xref href=\"#sec-promise-reject-functions\" title=\"\"><a href=\"#sec-promise-reject-functions\">Promise Reject Functions</a></emu-xref>.</li><li>Let <var>reject</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsReject</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>reject</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>reject</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Resolve]]: <var>resolve</var>, [[Reject]]: <var>reject</var> }.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-promise-reject-functions\"><h1><span class=\"secnum\">25.6.1.3.1</span>#sec-promise-reject-functions Promise Reject Functions</h1>...</div><div id=\"excluded-sec-promise-resolve-functions\"><h1><span class=\"secnum\">25.6.1.3.2</span>#sec-promise-resolve-functions Promise Resolve Functions</h1>...</div></emu-clause>\n\n      "}, "sec-built-in-function-objects": {"num": "9.3", "title": "#sec-built-in-function-objects Built-in Function Objects", "html": "<emu-clause id=\"sec-built-in-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</span> Built-in Function Objects</h1>\n    <p>The built-in function objects defined in this specification may be implemented as either ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) whose behaviour is provided using ECMAScript code or as implementation provided function exotic objects whose behaviour is provided in some other manner. In either case, the effect of calling such functions must conform to their specifications. An implementation may also provide additional built-in function objects that are not defined in this specification.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> it must have the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> behaviour specified in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. All such function exotic objects also have [[Prototype]], [[Extensible]], [[Realm]], and [[ScriptOrModule]] internal slots.</p>\n    <p>Unless otherwise specified every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref> object as the initial value of its [[Prototype]] internal slot.</p>\n    <p>The behaviour specified for each built-in function via algorithm steps or other means is the specification of the function body behaviour for both [[Call]] and [[Construct]] invocations of the function. However, [[Construct]] invocation is not supported by all built-in functions. For each built-in function, when invoked with [[Call]], the [[Call]] <var>thisArgument</var> provides the <emu-val>this</emu-val> value, the [[Call]] <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>. When invoked with [[Construct]], the <emu-val>this</emu-val> value is uninitialized, the [[Construct]] <var>argumentsList</var> provides the named parameters, and the [[Construct]] <var>newTarget</var> parameter provides the NewTarget value. If the built-in function is implemented as an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> then this specified behaviour must be implemented by the ECMAScript code that is the body of the function. Built-in functions that are ECMAScript function objects must be strict functions. If a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has any [[Call]] behaviour other than throwing a <emu-val>TypeError</emu-val> exception, an ECMAScript implementation of the function must be done in a manner that does not cause the function's [[IsClassConstructor]] internal slot to have the value <emu-val>true</emu-val>.</p>\n    <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function. When a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called as part of a <code>new</code> expression the <var>argumentsList</var> parameter of the invoked [[Construct]] internal method provides the values for the built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s named parameters.</p>\n    <p>Built-in functions that are not constructors do not have a <emu-val>\"prototype\"</emu-val> property unless otherwise specified in the description of a particular function.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is not implemented as an ECMAScript function it must provide [[Call]] and [[Construct]] internal methods that conform to the following definitions:</p>\n\n    <div id=\"excluded-sec-built-in-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.3.1</span>#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-built-in-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.3.2</span>#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-createbuiltinfunction\"><h1><span class=\"secnum\">9.3.3</span>#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )</h1>...</div></emu-clause>\n\n  "}, "sec-generator-objects": {"num": "25.4", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the <i>Iterator</i> and <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the value of the <emu-val>\"prototype\"</emu-val> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%Generator.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">25.4.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">25.4.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">25.4.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-generatorfunction-constructor": {"num": "25.2.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of GeneratorFunction. There is no syntactic means to create instances of GeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-math.acos": {"num": "20.3.2.2", "title": "#sec-math.acos Math.acos ( x )", "html": "<emu-clause id=\"sec-math.acos\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.acos\">#sec-math.acos</span> Math.acos ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc cosine of <var>x</var>. The result is expressed in radians and ranges from <emu-val>+0</emu-val> to +&#960;.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is greater than 1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than -1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is exactly 1, the result is <emu-val>+0</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-%asyncfromsynciteratorprototype%-object": {"num": "25.1.4.2", "title": "#sec-%asyncfromsynciteratorprototype%-object The %AsyncFromSyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%asyncfromsynciteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%asyncfromsynciteratorprototype%-object\">#sec-%asyncfromsynciteratorprototype%-object</span> The %AsyncFromSyncIteratorPrototype% Object</h1>\n        <p>The <dfn>%AsyncFromSyncIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Async-from-Sync Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%asyncfromsynciteratorprototype%.next\"><h1><span class=\"secnum\">25.1.4.2.1</span>#sec-%asyncfromsynciteratorprototype%.next %AsyncFromSyncIteratorPrototype%.next ( [ value ] )</h1>...</div><div id=\"excluded-sec-%asyncfromsynciteratorprototype%.return\"><h1><span class=\"secnum\">25.1.4.2.2</span>#sec-%asyncfromsynciteratorprototype%.return %AsyncFromSyncIteratorPrototype%.return ( [ value ] )</h1>...</div><div id=\"excluded-sec-%asyncfromsynciteratorprototype%.throw\"><h1><span class=\"secnum\">25.1.4.2.3</span>#sec-%asyncfromsynciteratorprototype%.throw %AsyncFromSyncIteratorPrototype%.throw ( [ value ] )</h1>...</div><div id=\"excluded-sec-async-from-sync-iterator-value-unwrap-functions\"><h1><span class=\"secnum\">25.1.4.2.4</span>#sec-async-from-sync-iterator-value-unwrap-functions Async-from-Sync Iterator Value Unwrap Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.acosh": {"num": "20.3.2.3", "title": "#sec-math.acosh Math.acosh ( x )", "html": "<emu-clause id=\"sec-math.acosh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.acosh\">#sec-math.acosh</span> Math.acosh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic cosine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If x is less than 1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If x is 1, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-memory-model": {"num": "27", "title": "#sec-memory-model Memory Model", "html": "<emu-clause id=\"sec-memory-model\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-memory-model\">#sec-memory-model</span> Memory Model</h1>\n  <p>The memory consistency model, or <dfn>memory model</dfn>, specifies the possible orderings of <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> events, arising via accessing TypedArray instances backed by a SharedArrayBuffer and via methods on the Atomics object. When the program has no data races (defined below), the ordering of events appears as sequentially consistent, i.e., as an interleaving of actions from each <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>. When the program has data races, shared memory operations may appear sequentially inconsistent. For example, programs may exhibit causality-violating behaviour and other astonishments. These astonishments arise from compiler transforms and the design of CPUs (e.g., out-of-order execution and speculation). The memory model defines both the precise conditions under which a program exhibits sequentially consistent behaviour as well as the possible values read from data races. To wit, there is no undefined behaviour.</p>\n  <p>The memory model is defined as relational constraints on events introduced by <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> on SharedArrayBuffer or by methods on the Atomics object during an evaluation.</p>\n  <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n    <p>This section provides an axiomatic model on events introduced by the <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> on SharedArrayBuffers. It bears stressing that the model is not expressible algorithmically, unlike the rest of this specification. The nondeterministic introduction of events by <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> is the interface between the operational semantics of ECMAScript evaluation and the axiomatic semantics of the memory model. The semantics of these events is defined by considering graphs of all events in an evaluation. These are neither Static Semantics nor Runtime Semantics. There is no demonstrated algorithmic implementation, but instead a set of constraints that determine if a particular event graph is allowed or disallowed.</p>\n  </div></emu-note>\n\n  <div id=\"excluded-sec-memory-model-fundamentals\"><h1><span class=\"secnum\">27.1</span>#sec-memory-model-fundamentals Memory Model Fundamentals</h1>...</div><div id=\"excluded-sec-agent-event-records\"><h1><span class=\"secnum\">27.2</span>#sec-agent-event-records Agent Events Records</h1>...</div><div id=\"excluded-sec-chosen-value-records\"><h1><span class=\"secnum\">27.3</span>#sec-chosen-value-records Chosen Value Records</h1>...</div><div id=\"excluded-sec-candidate-executions\"><h1><span class=\"secnum\">27.4</span>#sec-candidate-executions Candidate Executions</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-memory-model\"><h1><span class=\"secnum\">27.5</span>#sec-abstract-operations-for-the-memory-model Abstract Operations for the Memory Model</h1>...</div><div id=\"excluded-sec-relations-of-candidate-executions\"><h1><span class=\"secnum\">27.6</span>#sec-relations-of-candidate-executions Relations of Candidate Executions</h1>...</div><div id=\"excluded-sec-properties-of-valid-executions\"><h1><span class=\"secnum\">27.7</span>#sec-properties-of-valid-executions Properties of Valid Executions</h1>...</div><div id=\"excluded-sec-races\"><h1><span class=\"secnum\">27.8</span>#sec-races Races</h1>...</div><div id=\"excluded-sec-data-races\"><h1><span class=\"secnum\">27.9</span>#sec-data-races Data Races</h1>...</div><div id=\"excluded-sec-data-race-freedom\"><h1><span class=\"secnum\">27.10</span>#sec-data-race-freedom Data Race Freedom</h1>...</div><div id=\"excluded-sec-shared-memory-guidelines\"><h1><span class=\"secnum\">27.11</span>#sec-shared-memory-guidelines Shared Memory Guidelines</h1>...</div></emu-clause>\n\n"}, "sec-constructor-properties-of-the-global-object": {"num": "18.3", "title": "#sec-constructor-properties-of-the-global-object Constructor Properties of the Global Object", "html": "<emu-clause id=\"sec-constructor-properties-of-the-global-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-constructor-properties-of-the-global-object\">#sec-constructor-properties-of-the-global-object</span> Constructor Properties of the Global Object</h1>\n\n    <div id=\"excluded-sec-constructor-properties-of-the-global-object-array\"><h1><span class=\"secnum\">18.3.1</span>#sec-constructor-properties-of-the-global-object-array Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-arraybuffer\"><h1><span class=\"secnum\">18.3.2</span>#sec-constructor-properties-of-the-global-object-arraybuffer ArrayBuffer ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-bigint\"><h1><span class=\"secnum\">18.3.3</span>#sec-constructor-properties-of-the-global-object-bigint BigInt ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-bigint64array\"><h1><span class=\"secnum\">18.3.4</span>#sec-constructor-properties-of-the-global-object-bigint64array BigInt64Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-biguint64array\"><h1><span class=\"secnum\">18.3.5</span>#sec-constructor-properties-of-the-global-object-biguint64array BigUint64Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-boolean\"><h1><span class=\"secnum\">18.3.6</span>#sec-constructor-properties-of-the-global-object-boolean Boolean ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-dataview\"><h1><span class=\"secnum\">18.3.7</span>#sec-constructor-properties-of-the-global-object-dataview DataView ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-date\"><h1><span class=\"secnum\">18.3.8</span>#sec-constructor-properties-of-the-global-object-date Date ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-error\"><h1><span class=\"secnum\">18.3.9</span>#sec-constructor-properties-of-the-global-object-error Error ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-evalerror\"><h1><span class=\"secnum\">18.3.10</span>#sec-constructor-properties-of-the-global-object-evalerror EvalError ( . . . )</h1>...</div><div id=\"excluded-sec-float32array\"><h1><span class=\"secnum\">18.3.11</span>#sec-float32array Float32Array ( . . . )</h1>...</div><div id=\"excluded-sec-float64array\"><h1><span class=\"secnum\">18.3.12</span>#sec-float64array Float64Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-function\"><h1><span class=\"secnum\">18.3.13</span>#sec-constructor-properties-of-the-global-object-function Function ( . . . )</h1>...</div><div id=\"excluded-sec-int8array\"><h1><span class=\"secnum\">18.3.14</span>#sec-int8array Int8Array ( . . . )</h1>...</div><div id=\"excluded-sec-int16array\"><h1><span class=\"secnum\">18.3.15</span>#sec-int16array Int16Array ( . . . )</h1>...</div><div id=\"excluded-sec-int32array\"><h1><span class=\"secnum\">18.3.16</span>#sec-int32array Int32Array ( . . . )</h1>...</div><div id=\"excluded-sec-map\"><h1><span class=\"secnum\">18.3.17</span>#sec-map Map ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-number\"><h1><span class=\"secnum\">18.3.18</span>#sec-constructor-properties-of-the-global-object-number Number ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-object\"><h1><span class=\"secnum\">18.3.19</span>#sec-constructor-properties-of-the-global-object-object Object ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-promise\"><h1><span class=\"secnum\">18.3.20</span>#sec-constructor-properties-of-the-global-object-promise Promise ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-proxy\"><h1><span class=\"secnum\">18.3.21</span>#sec-constructor-properties-of-the-global-object-proxy Proxy ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-rangeerror\"><h1><span class=\"secnum\">18.3.22</span>#sec-constructor-properties-of-the-global-object-rangeerror RangeError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-referenceerror\"><h1><span class=\"secnum\">18.3.23</span>#sec-constructor-properties-of-the-global-object-referenceerror ReferenceError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-regexp\"><h1><span class=\"secnum\">18.3.24</span>#sec-constructor-properties-of-the-global-object-regexp RegExp ( . . . )</h1>...</div><div id=\"excluded-sec-set\"><h1><span class=\"secnum\">18.3.25</span>#sec-set Set ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-sharedarraybuffer\"><h1><span class=\"secnum\">18.3.26</span>#sec-constructor-properties-of-the-global-object-sharedarraybuffer SharedArrayBuffer ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-string\"><h1><span class=\"secnum\">18.3.27</span>#sec-constructor-properties-of-the-global-object-string String ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-symbol\"><h1><span class=\"secnum\">18.3.28</span>#sec-constructor-properties-of-the-global-object-symbol Symbol ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-syntaxerror\"><h1><span class=\"secnum\">18.3.29</span>#sec-constructor-properties-of-the-global-object-syntaxerror SyntaxError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-typeerror\"><h1><span class=\"secnum\">18.3.30</span>#sec-constructor-properties-of-the-global-object-typeerror TypeError ( . . . )</h1>...</div><div id=\"excluded-sec-uint8array\"><h1><span class=\"secnum\">18.3.31</span>#sec-uint8array Uint8Array ( . . . )</h1>...</div><div id=\"excluded-sec-uint8clampedarray\"><h1><span class=\"secnum\">18.3.32</span>#sec-uint8clampedarray Uint8ClampedArray ( . . . )</h1>...</div><div id=\"excluded-sec-uint16array\"><h1><span class=\"secnum\">18.3.33</span>#sec-uint16array Uint16Array ( . . . )</h1>...</div><div id=\"excluded-sec-uint32array\"><h1><span class=\"secnum\">18.3.34</span>#sec-uint32array Uint32Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-urierror\"><h1><span class=\"secnum\">18.3.35</span>#sec-constructor-properties-of-the-global-object-urierror URIError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-weakmap\"><h1><span class=\"secnum\">18.3.36</span>#sec-constructor-properties-of-the-global-object-weakmap WeakMap ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-weakset\"><h1><span class=\"secnum\">18.3.37</span>#sec-constructor-properties-of-the-global-object-weakset WeakSet ( . . . )</h1>...</div></emu-clause>\n\n  "}, "sec-proxy.revocable": {"num": "26.2.2.1", "title": "#sec-proxy.revocable Proxy.revocable ( target, handler )", "html": "<emu-clause id=\"sec-proxy.revocable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy.revocable\">#sec-proxy.revocable</span> Proxy.revocable ( <var>target</var>, <var>handler</var> )</h1>\n        <p>The <code>Proxy.revocable</code> function is used to create a revocable Proxy object. When <code>Proxy.revocable</code> is called with arguments <var>target</var> and <var>handler</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>p</var> be ?&#160;<emu-xref aoid=\"ProxyCreate\"><a href=\"#sec-proxycreate\">ProxyCreate</a></emu-xref>(<var>target</var>, <var>handler</var>).</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-proxy-revocation-functions\" title=\"\"><a href=\"#sec-proxy-revocation-functions\">Proxy Revocation Functions</a></emu-xref>.</li><li>Let <var>revoker</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[RevocableProxy]] &#187;).</li><li>Set <var>revoker</var>.[[RevocableProxy]] to <var>p</var>.</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"proxy\"</emu-val>, <var>p</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"revoke\"</emu-val>, <var>revoker</var>).</li><li>Return <var>result</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-proxy-revocation-functions\"><h1><span class=\"secnum\">26.2.2.1.1</span>#sec-proxy-revocation-functions Proxy Revocation Functions</h1>...</div></emu-clause>\n    "}, "sec-properties-of-valid-executions": {"num": "27.7", "title": "#sec-properties-of-valid-executions Properties of Valid Executions", "html": "<emu-clause id=\"sec-properties-of-valid-executions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-valid-executions\">#sec-properties-of-valid-executions</span> Properties of Valid Executions</h1>\n    <div id=\"excluded-sec-valid-chosen-reads\"><h1><span class=\"secnum\">27.7.1</span>#sec-valid-chosen-reads Valid Chosen Reads</h1>...</div><div id=\"excluded-sec-coherent-reads\"><h1><span class=\"secnum\">27.7.2</span>#sec-coherent-reads Coherent Reads</h1>...</div><div id=\"excluded-sec-tear-free-aligned-reads\"><h1><span class=\"secnum\">27.7.3</span>#sec-tear-free-aligned-reads Tear Free Reads</h1>...</div><div id=\"excluded-sec-memory-order\"><h1><span class=\"secnum\">27.7.4</span>#sec-memory-order Sequentially Consistent Atomics</h1>...</div><div id=\"excluded-sec-valid-executions\"><h1><span class=\"secnum\">27.7.5</span>#sec-valid-executions Valid Executions</h1>...</div></emu-clause>\n\n  "}, "sec-runtime-semantics-iteratordestructuringassignmentevaluation": {"num": "12.15.7.5", "title": "#sec-runtime-semantics-iteratordestructuringassignmentevaluation Runtime Semantics: IteratorDestructuringAssignmentEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-iteratordestructuringassignmentevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-iteratordestructuringassignmentevaluation\">#sec-runtime-semantics-iteratordestructuringassignmentevaluation</span> Runtime Semantics: IteratorDestructuringAssignmentEvaluation</h1>\n        <p>With parameter <var>iteratorRecord</var>.</p>\n        <emu-grammar><emu-production name=\"AssignmentElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e2bbd46c\"><emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt> using <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bdc5c277\"><emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Perform ? IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt> using <var>iteratorRecord</var> as the argument.</li><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt> using <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"816d4abc\"><emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"696f42ef\"><emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Perform ? IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9471f753\"><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, then<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"806d0124\"><emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Perform ? IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, then<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a73ccacf\"><emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is neither an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> nor an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>lref</var>).</li></ol></li><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, then<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>value</var> be <emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <var>value</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>value</var>).</li></ol></li></ol></li><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>true</emu-val>, let <var>value</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> is present and <var>value</var> is <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>) is <emu-val>true</emu-val> and IsIdentifierRef of <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> is <emu-val>true</emu-val>, then<ol><li>Let <var>v</var> be NamedEvaluation of <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> with argument <emu-xref aoid=\"GetReferencedName\"><a href=\"#sec-getreferencedname\">GetReferencedName</a></emu-xref>(<var>lref</var>).</li></ol></li><li>Else,<ol><li>Let <var>defaultValue</var> be the result of evaluating <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>defaultValue</var>).</li></ol></li></ol></li><li>Else, let <var>v</var> be <var>value</var>.</li><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> or an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Let <var>nestedAssignmentPattern</var> be the <emu-nt><a href=\"#prod-AssignmentPattern\">AssignmentPattern</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li>Return the result of performing DestructuringAssignmentEvaluation of <var>nestedAssignmentPattern</var> with <var>v</var> as the argument.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>v</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Left to right evaluation order is maintained by evaluating a <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> that is not a destructuring pattern prior to accessing the iterator or evaluating the <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"AssignmentRestElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentRestElement\">AssignmentRestElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cf470c76\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is neither an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> nor an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>lref</var>).</li></ol></li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>Repeat, while <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>,<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>nextValue</var> be <emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <var>nextValue</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextValue</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>), <var>nextValue</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li></ol></li><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is neither an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> nor an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Return ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>A</var>).</li></ol></li><li>Let <var>nestedAssignmentPattern</var> be the <emu-nt><a href=\"#prod-AssignmentPattern\">AssignmentPattern</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li>Return the result of performing DestructuringAssignmentEvaluation of <var>nestedAssignmentPattern</var> with <var>A</var> as the argument.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.hypot": {"num": "20.3.2.18", "title": "#sec-math.hypot Math.hypot ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.hypot\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.hypot\">#sec-math.hypot</span> Math.hypot ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p><code>Math.hypot</code> returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the square root of the sum of squares of its arguments.</p>\n        <ul>\n          <li>\n            If no arguments are passed, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If any argument is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If any argument is <emu-val>-&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If no argument is <emu-val>+&#8734;</emu-val> or <emu-val>-&#8734;</emu-val>, and any argument is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If all arguments are either <emu-val>+0</emu-val> or <emu-val>-0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Implementations should take care to avoid the loss of precision from overflows and underflows that are prone to occur in naive implementations when this function is called with two or more arguments.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-host-hooks-summary": {"num": "D.1", "title": "#sec-host-hooks-summary Host Hooks", "html": "<emu-annex id=\"sec-host-hooks-summary\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-host-hooks-summary\">#sec-host-hooks-summary</span> Host Hooks</h1>\n    <p><b><emu-xref aoid=\"HostEnqueuePromiseJob\"><a href=\"#sec-hostenqueuepromisejob\">HostEnqueuePromiseJob</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostEnsureCanCompileStrings\"><a href=\"#sec-hostensurecancompilestrings\">HostEnsureCanCompileStrings</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostFinalizeImportMeta\"><a href=\"#sec-hostfinalizeimportmeta\">HostFinalizeImportMeta</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostGetImportMetaProperties\"><a href=\"#sec-hostgetimportmetaproperties\">HostGetImportMetaProperties</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostHasSourceTextAvailable\"><a href=\"#sec-hosthassourcetextavailable\">HostHasSourceTextAvailable</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostImportModuleDynamically\"><a href=\"#sec-hostimportmoduledynamically\">HostImportModuleDynamically</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostPromiseRejectionTracker\"><a href=\"#sec-host-promise-rejection-tracker\">HostPromiseRejectionTracker</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"InitializeHostDefinedRealm\"><a href=\"#sec-initializehostdefinedrealm\">InitializeHostDefinedRealm</a></emu-xref>(...)</b></p>\n  </emu-annex>\n  "}, "sec-math.atanh": {"num": "20.3.2.7", "title": "#sec-math.atanh Math.atanh ( x )", "html": "<emu-clause id=\"sec-math.atanh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atanh\">#sec-math.atanh</span> Math.atanh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic tangent of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than -1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is greater than 1, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is -1, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is +1, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-setfunctionname": {"num": "9.2.8", "title": "#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )", "html": "<emu-clause id=\"sec-setfunctionname\" aoid=\"SetFunctionName\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setfunctionname\">#sec-setfunctionname</span> SetFunctionName ( <var>F</var>, <var>name</var> [ , <var>prefix</var> ] )</h1>\n      <p>The abstract operation SetFunctionName takes arguments <var>F</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>) and <var>name</var> (a property key) and optional argument <var>prefix</var> (a String). It adds a <emu-val>\"name\"</emu-val> property to <var>F</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <emu-val>\"name\"</emu-val> own property.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is either Symbol or String.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>prefix</var> is present, then <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>prefix</var>) is String.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is Symbol, then<ol><li>Let <var>description</var> be <var>name</var>'s [[Description]] value.</li><li>If <var>description</var> is <emu-val>undefined</emu-val>, set <var>name</var> to the empty String.</li><li>Else, set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"[\"</emu-val>, <var>description</var>, and <emu-val>\"]\"</emu-val>.</li></ol></li><li>If <var>prefix</var> is present, then<ol><li>Set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>prefix</var>, the code unit 0x0020 (SPACE), and <var>name</var>.</li></ol></li><li>Return !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"name\"</emu-val>, PropertyDescriptor { [[Value]]: <var>name</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-properties-of-the-math-object": {"num": "20.3.2", "title": "#sec-function-properties-of-the-math-object Function Properties of the Math Object", "html": "<emu-clause id=\"sec-function-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-properties-of-the-math-object\">#sec-function-properties-of-the-math-object</span> Function Properties of the Math Object</h1>\n      <p>Each of the following <code>Math</code> object functions applies the <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> abstract operation to each of its arguments (in left-to-right order if there is more than one). If <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, that <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> is immediately returned. Otherwise, the function performs a computation on the resulting <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>(s). The value returned by each function is a Number.</p>\n      <p>In the function descriptions below, the symbols <emu-val>NaN</emu-val>, <emu-val>-0</emu-val>, <emu-val>+0</emu-val>, <emu-val>-&#8734;</emu-val> and <emu-val>+&#8734;</emu-val> refer to the Number values described in <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The behaviour of the functions <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atanh</code>, <code>atan2</code>, <code>cbrt</code>, <code>cos</code>, <code>cosh</code>, <code>exp</code>, <code>expm1</code>, <code>hypot</code>, <code>log</code>,<code>log1p</code>, <code>log2</code>, <code>log10</code>, <code>pow</code>, <code>random</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, and <code>tanh</code> is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest. For other argument values, these functions are intended to compute approximations to the results of familiar mathematical functions, but some latitude is allowed in the choice of approximation algorithms. The general intent is that an implementer should be able to use the same mathematical library for ECMAScript on a given hardware platform that is available to C programmers on that platform.</p>\n        <p>Although the choice of algorithms is left to the implementation, it is recommended (but not specified by this standard) that implementations use the approximation algorithms for <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> arithmetic contained in <code>fdlibm</code>, the freely distributable mathematical library from Sun Microsystems (<a href=\"http://www.netlib.org/fdlibm\">http://www.netlib.org/fdlibm</a>).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-math.abs\"><h1><span class=\"secnum\">20.3.2.1</span>#sec-math.abs Math.abs ( x )</h1>...</div><div id=\"excluded-sec-math.acos\"><h1><span class=\"secnum\">20.3.2.2</span>#sec-math.acos Math.acos ( x )</h1>...</div><div id=\"excluded-sec-math.acosh\"><h1><span class=\"secnum\">20.3.2.3</span>#sec-math.acosh Math.acosh ( x )</h1>...</div><div id=\"excluded-sec-math.asin\"><h1><span class=\"secnum\">20.3.2.4</span>#sec-math.asin Math.asin ( x )</h1>...</div><div id=\"excluded-sec-math.asinh\"><h1><span class=\"secnum\">20.3.2.5</span>#sec-math.asinh Math.asinh ( x )</h1>...</div><div id=\"excluded-sec-math.atan\"><h1><span class=\"secnum\">20.3.2.6</span>#sec-math.atan Math.atan ( x )</h1>...</div><div id=\"excluded-sec-math.atanh\"><h1><span class=\"secnum\">20.3.2.7</span>#sec-math.atanh Math.atanh ( x )</h1>...</div><div id=\"excluded-sec-math.atan2\"><h1><span class=\"secnum\">20.3.2.8</span>#sec-math.atan2 Math.atan2 ( y, x )</h1>...</div><div id=\"excluded-sec-math.cbrt\"><h1><span class=\"secnum\">20.3.2.9</span>#sec-math.cbrt Math.cbrt ( x )</h1>...</div><div id=\"excluded-sec-math.ceil\"><h1><span class=\"secnum\">20.3.2.10</span>#sec-math.ceil Math.ceil ( x )</h1>...</div><div id=\"excluded-sec-math.clz32\"><h1><span class=\"secnum\">20.3.2.11</span>#sec-math.clz32 Math.clz32 ( x )</h1>...</div><div id=\"excluded-sec-math.cos\"><h1><span class=\"secnum\">20.3.2.12</span>#sec-math.cos Math.cos ( x )</h1>...</div><div id=\"excluded-sec-math.cosh\"><h1><span class=\"secnum\">20.3.2.13</span>#sec-math.cosh Math.cosh ( x )</h1>...</div><div id=\"excluded-sec-math.exp\"><h1><span class=\"secnum\">20.3.2.14</span>#sec-math.exp Math.exp ( x )</h1>...</div><div id=\"excluded-sec-math.expm1\"><h1><span class=\"secnum\">20.3.2.15</span>#sec-math.expm1 Math.expm1 ( x )</h1>...</div><div id=\"excluded-sec-math.floor\"><h1><span class=\"secnum\">20.3.2.16</span>#sec-math.floor Math.floor ( x )</h1>...</div><div id=\"excluded-sec-math.fround\"><h1><span class=\"secnum\">20.3.2.17</span>#sec-math.fround Math.fround ( x )</h1>...</div><div id=\"excluded-sec-math.hypot\"><h1><span class=\"secnum\">20.3.2.18</span>#sec-math.hypot Math.hypot ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.imul\"><h1><span class=\"secnum\">20.3.2.19</span>#sec-math.imul Math.imul ( x, y )</h1>...</div><div id=\"excluded-sec-math.log\"><h1><span class=\"secnum\">20.3.2.20</span>#sec-math.log Math.log ( x )</h1>...</div><div id=\"excluded-sec-math.log1p\"><h1><span class=\"secnum\">20.3.2.21</span>#sec-math.log1p Math.log1p ( x )</h1>...</div><div id=\"excluded-sec-math.log10\"><h1><span class=\"secnum\">20.3.2.22</span>#sec-math.log10 Math.log10 ( x )</h1>...</div><div id=\"excluded-sec-math.log2\"><h1><span class=\"secnum\">20.3.2.23</span>#sec-math.log2 Math.log2 ( x )</h1>...</div><div id=\"excluded-sec-math.max\"><h1><span class=\"secnum\">20.3.2.24</span>#sec-math.max Math.max ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.min\"><h1><span class=\"secnum\">20.3.2.25</span>#sec-math.min Math.min ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.pow\"><h1><span class=\"secnum\">20.3.2.26</span>#sec-math.pow Math.pow ( base, exponent )</h1>...</div><div id=\"excluded-sec-math.random\"><h1><span class=\"secnum\">20.3.2.27</span>#sec-math.random Math.random ( )</h1>...</div><div id=\"excluded-sec-math.round\"><h1><span class=\"secnum\">20.3.2.28</span>#sec-math.round Math.round ( x )</h1>...</div><div id=\"excluded-sec-math.sign\"><h1><span class=\"secnum\">20.3.2.29</span>#sec-math.sign Math.sign ( x )</h1>...</div><div id=\"excluded-sec-math.sin\"><h1><span class=\"secnum\">20.3.2.30</span>#sec-math.sin Math.sin ( x )</h1>...</div><div id=\"excluded-sec-math.sinh\"><h1><span class=\"secnum\">20.3.2.31</span>#sec-math.sinh Math.sinh ( x )</h1>...</div><div id=\"excluded-sec-math.sqrt\"><h1><span class=\"secnum\">20.3.2.32</span>#sec-math.sqrt Math.sqrt ( x )</h1>...</div><div id=\"excluded-sec-math.tan\"><h1><span class=\"secnum\">20.3.2.33</span>#sec-math.tan Math.tan ( x )</h1>...</div><div id=\"excluded-sec-math.tanh\"><h1><span class=\"secnum\">20.3.2.34</span>#sec-math.tanh Math.tanh ( x )</h1>...</div><div id=\"excluded-sec-math.trunc\"><h1><span class=\"secnum\">20.3.2.35</span>#sec-math.trunc Math.trunc ( x )</h1>...</div></emu-clause>\n  "}, "sec-promise.any": {"num": "25.6.4.3", "title": "#sec-promise.any Promise.any ( iterable )", "html": "<emu-clause id=\"sec-promise.any\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.any\">#sec-promise.any</span> Promise.any ( <var>iterable</var> )</h1>\n        <p>The <code>any</code> function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an <code>AggregateError</code> holding the rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAny\"><a href=\"#sec-performpromiseany\">PerformPromiseAny</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>any</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseany\"><h1><span class=\"secnum\">25.6.4.3.1</span>#sec-performpromiseany Runtime Semantics: PerformPromiseAny ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.any-reject-element-functions\"><h1><span class=\"secnum\">25.6.4.3.2</span>#sec-promise.any-reject-element-functions Promise.any Reject Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.round": {"num": "20.3.2.28", "title": "#sec-math.round Math.round ( x )", "html": "<emu-clause id=\"sec-math.round\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.round\">#sec-math.round</span> Math.round ( <var>x</var> )</h1>\n        <p>Returns the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closest to <var>x</var> and is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. If two integers are equally close to <var>x</var>, then the result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closer to <emu-val>+&#8734;</emu-val>. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is greater than 0 but less than 0.5, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than 0 but greater than or equal to -0.5, the result is <emu-val>-0</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>Math.round(3.5)</code> returns 4, but <code>Math.round(-3.5)</code> returns -3.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The value of <code>Math.round(x)</code> is not always the same as the value of <code>Math.floor(x + 0.5)</code>. When <code>x</code> is <emu-val>-0</emu-val> or is less than 0 but greater than or equal to -0.5, <code>Math.round(x)</code> returns <emu-val>-0</emu-val>, but <code>Math.floor(x + 0.5)</code> returns <emu-val>+0</emu-val>. <code>Math.round(x)</code> may also differ from the value of <code>Math.floor(x + 0.5)</code>because of internal rounding when computing <code>x + 0.5</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-proxy-constructor": {"num": "26.2.1", "title": "#sec-proxy-constructor The Proxy Constructor", "html": "<emu-clause id=\"sec-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</span> The Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Proxy%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Proxy\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy-target-handler\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-proxy-target-handler Proxy ( target, handler )</h1>...</div></emu-clause>\n\n    "}, "sec-math.trunc": {"num": "20.3.2.35", "title": "#sec-math.trunc Math.trunc ( x )", "html": "<emu-clause id=\"sec-math.trunc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.trunc\">#sec-math.trunc</span> Math.trunc ( <var>x</var> )</h1>\n        <p>Returns the integral part of the number <var>x</var>, removing any fractional digits. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is greater than 0 but less than 1, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is less than 0 but greater than -1, the result is <emu-val>-0</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n    "}, "sec-math.atan2": {"num": "20.3.2.8", "title": "#sec-math.atan2 Math.atan2 ( y, x )", "html": "<emu-clause id=\"sec-math.atan2\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atan2\">#sec-math.atan2</span> Math.atan2 ( <var>y</var>, <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc tangent of the quotient <emu-eqn class=\"inline\"><var>y</var> / <var>x</var></emu-eqn> of the arguments <var>y</var> and <var>x</var>, where the signs of <var>y</var> and <var>x</var> are used to determine the quadrant of the result. Note that it is intentional and traditional for the two-argument arc tangent function that the argument named <var>y</var> be first and the argument named <var>x</var> be second. The result is expressed in radians and ranges from -&#960; to +&#960;.</p>\n        <ul>\n          <li>\n            If either <var>x</var> or <var>y</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> &gt; 0 and <var>x</var> is <emu-val>+0</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.\n          </li>\n          <li>\n            If <var>y</var> &gt; 0 and <var>x</var> is <emu-val>-0</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+0</emu-val> and <var>x</var> &gt; 0, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+0</emu-val> and <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+0</emu-val> and <var>x</var> is <emu-val>-0</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+0</emu-val> and <var>x</var> &lt; 0, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-0</emu-val> and <var>x</var> &gt; 0, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-0</emu-val> and <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-0</emu-val> and <var>x</var> is <emu-val>-0</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-0</emu-val> and <var>x</var> &lt; 0, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.\n          </li>\n          <li>\n            If <var>y</var> &lt; 0 and <var>x</var> is <emu-val>+0</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.\n          </li>\n          <li>\n            If <var>y</var> &lt; 0 and <var>x</var> is <emu-val>-0</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.\n          </li>\n          <li>\n            If <var>y</var> &gt; 0 and <var>y</var> is finite and <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> &gt; 0 and <var>y</var> is finite and <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.\n          </li>\n          <li>\n            If <var>y</var> &lt; 0 and <var>y</var> is finite and <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>y</var> &lt; 0 and <var>y</var> is finite and <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+&#8734;</emu-val> and <var>x</var> is finite, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-&#8734;</emu-val> and <var>x</var> is finite, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+&#8734;</emu-val> and <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 4.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>+&#8734;</emu-val> and <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +3&#960; / 4.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-&#8734;</emu-val> and <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 4.\n          </li>\n          <li>\n            If <var>y</var> is <emu-val>-&#8734;</emu-val> and <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -3&#960; / 4.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-abstract-operations-for-the-memory-model": {"num": "27.5", "title": "#sec-abstract-operations-for-the-memory-model Abstract Operations for the Memory Model", "html": "<emu-clause id=\"sec-abstract-operations-for-the-memory-model\" oldids=\"sec-synchronizeeventset\">\n    <span id=\"sec-synchronizeeventset\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-the-memory-model\">#sec-abstract-operations-for-the-memory-model</span> Abstract Operations for the Memory Model</h1>\n    <div id=\"excluded-sec-event-set\"><h1><span class=\"secnum\">27.5.1</span>#sec-event-set EventSet ( execution )</h1>...</div><div id=\"excluded-sec-sharedatablockeventset\"><h1><span class=\"secnum\">27.5.2</span>#sec-sharedatablockeventset SharedDataBlockEventSet ( execution )</h1>...</div><div id=\"excluded-sec-hosteventset\"><h1><span class=\"secnum\">27.5.3</span>#sec-hosteventset HostEventSet ( execution )</h1>...</div><div id=\"excluded-sec-composewriteeventbytes\"><h1><span class=\"secnum\">27.5.4</span>#sec-composewriteeventbytes ComposeWriteEventBytes ( execution, byteIndex, Ws )</h1>...</div><div id=\"excluded-sec-valueofreadevent\"><h1><span class=\"secnum\">27.5.5</span>#sec-valueofreadevent ValueOfReadEvent ( execution, R )</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgenerator-objects": {"num": "25.5", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the value of the <emu-val>\"prototype\"</emu-val> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGenerator.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">25.5.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">25.5.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">25.5.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-promise.prototype.then": {"num": "25.6.5.4", "title": "#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )", "html": "<emu-clause id=\"sec-promise.prototype.then\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</span> Promise.prototype.then ( <var>onFulfilled</var>, <var>onRejected</var> )</h1>\n        <p>When the <code>then</code> method is called with arguments <var>onFulfilled</var> and <var>onRejected</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsPromise\"><a href=\"#sec-ispromise\">IsPromise</a></emu-xref>(<var>promise</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Let <var>resultCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Return <emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>, <var>resultCapability</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%PromiseProto_then%</dfn> intrinsic object.</p>\n\n        <div id=\"excluded-sec-performpromisethen\"><h1><span class=\"secnum\">25.6.5.4.1</span>#sec-performpromisethen PerformPromiseThen ( promise, onFulfilled, onRejected [ , resultCapability ] )</h1>...</div></emu-clause>\n\n      "}, "sec-proxy-objects": {"num": "26.2", "title": "#sec-proxy-objects Proxy Objects", "html": "<emu-clause id=\"sec-proxy-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-objects\">#sec-proxy-objects</span> Proxy Objects</h1>\n\n    <div id=\"excluded-sec-proxy-constructor\"><h1><span class=\"secnum\">26.2.1</span>#sec-proxy-constructor The Proxy Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-proxy-constructor\"><h1><span class=\"secnum\">26.2.2</span>#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor</h1>...</div></emu-clause>\n\n  "}, "sec-math.sinh": {"num": "20.3.2.31", "title": "#sec-math.sinh Math.sinh ( x )", "html": "<emu-clause id=\"sec-math.sinh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sinh\">#sec-math.sinh</span> Math.sinh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the hyperbolic sine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.sinh(x)</code> is the same as the value of <code>(Math.exp(x) - Math.exp(-x)) / 2</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%Generator%</dfn> (see <emu-xref href=\"#figure-2\"><a href=\"#figure-2\" class=\"excluded-xref\" excluded-id=\"figure-2\">#figure-2</a></emu-xref>).</li>\n        <li>is <dfn>%GeneratorFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-objects": {"num": "25.3", "title": "#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-objects\">#sec-asyncgeneratorfunction-objects</span> AsyncGeneratorFunction Objects</h1>\n    <p>AsyncGeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, and <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> syntactic productions. They may also be created by calling the <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-asyncgeneratorfunction-constructor\"><h1><span class=\"secnum\">25.3.1</span>#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.3.2</span>#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.3</span>#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instances\"><h1><span class=\"secnum\">25.3.4</span>#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-regexp.prototype.compile": {"num": "B.2.5.1", "title": "#sec-regexp.prototype.compile RegExp.prototype.compile ( pattern, flags )", "html": "<emu-annex id=\"sec-regexp.prototype.compile\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype.compile\">#sec-regexp.prototype.compile</span> RegExp.prototype.compile ( <var>pattern</var>, <var>flags</var> )</h1>\n        <p>When the <code>compile</code> method is called with arguments <var>pattern</var> and <var>flags</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object and <var>O</var> does not have a [[RegExpMatcher]] internal slot, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>pattern</var>) is Object and <var>pattern</var> has a [[RegExpMatcher]] internal slot, then<ol><li>If <var>flags</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>P</var> be <var>pattern</var>.[[OriginalSource]].</li><li>Let <var>F</var> be <var>pattern</var>.[[OriginalFlags]].</li></ol></li><li>Else,<ol><li>Let <var>P</var> be <var>pattern</var>.</li><li>Let <var>F</var> be <var>flags</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"RegExpInitialize\"><a href=\"#sec-regexpinitialize\">RegExpInitialize</a></emu-xref>(<var>O</var>, <var>P</var>, <var>F</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>compile</code> method completely reinitializes the <emu-val>this</emu-val> value RegExp with a new pattern and flags. An implementation may interpret use of this method as an assertion that the resulting RegExp object will be used multiple times and hence is a candidate for extra optimization.</p>\n        </div></emu-note>\n      </emu-annex>\n    "}, "sec-ecmascript-standard-built-in-objects": {"num": "17", "title": "#sec-ecmascript-standard-built-in-objects ECMAScript Standard Built-in Objects", "html": "<emu-clause id=\"sec-ecmascript-standard-built-in-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-standard-built-in-objects\">#sec-ecmascript-standard-built-in-objects</span> ECMAScript Standard Built-in Objects</h1>\n  <p>There are certain built-in objects available whenever an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> or <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> begins execution. One, the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, is part of the <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref> of the executing program. Others are accessible as initial properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> or indirectly as properties of accessible built-in objects.</p>\n  <p>Unless specified otherwise, a built-in object that is callable as a function is a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> with the characteristics described in <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>. Unless specified otherwise, the [[Extensible]] internal slot of a built-in object initially has the value <emu-val>true</emu-val>. Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has a [[Realm]] internal slot whose value is the <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> of the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> for which the object was initially created.</p>\n  <p>Many built-in objects are functions: they can be invoked with arguments. Some of them furthermore are constructors: they are functions intended for use with the <code>new</code> operator. For each built-in function, this specification describes the arguments required by that function and the properties of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. For each built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, this specification furthermore describes properties of the prototype object of that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> and properties of specific object instances returned by a <code>new</code> expression that invokes that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is given fewer arguments than the function is specified to require, the function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> shall behave exactly as if it had been given sufficient additional arguments, each such argument being the <emu-val>undefined</emu-val> value. Such missing arguments are considered to be &#8220;not present&#8221; and may be identified in that manner by specification algorithms. In the description of a particular function, the terms &#8220;<emu-val>this</emu-val> value&#8221; and &#8220;NewTarget&#8221; have the meanings given in <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> described is given more arguments than the function is specified to allow, the extra arguments are evaluated by the call and then ignored by the function. However, an implementation may define implementation specific behaviour relating to such arguments as long as the behaviour is not the throwing of a <emu-val>TypeError</emu-val> exception that is predicated simply on the presence of an extra argument.</p>\n  <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n    <p>Implementations that add additional capabilities to the set of built-in functions are encouraged to do so by adding new functions rather than adding new parameters to existing functions.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified every built-in function and every built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has the Function prototype object, which is the initial value of the expression <code>Function.prototype</code> (<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot.</p>\n  <p>Unless otherwise specified every built-in prototype object has the Object prototype object, which is the initial value of the expression <code>Object.prototype</code> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot, except the Object prototype object itself.</p>\n  <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function.</p>\n  <p>Each built-in function defined in this specification is created by calling the <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref> abstract operation (<emu-xref href=\"#sec-createbuiltinfunction\"><a href=\"#sec-createbuiltinfunction\" class=\"excluded-xref\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</a></emu-xref>).</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, has a <emu-val>\"length\"</emu-val> property whose value is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. Unless otherwise specified, this value is equal to the largest number of named arguments shown in the subclause headings for the function description. Optional parameters (which are indicated with brackets: <code>[</code> <code>]</code>) or rest parameters (which are shown using the form &#171;...name&#187;) are not included in the default argument count.</p>\n  <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n    <p>For example, the <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of the <emu-val>\"map\"</emu-val> property of the Array prototype object is described under the subclause heading &#171;Array.prototype.map (callbackFn [ , thisArg])&#187; which shows the two named arguments callbackFn and thisArg, the latter being optional; therefore the value of the <emu-val>\"length\"</emu-val> property of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is 1.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified, the <emu-val>\"length\"</emu-val> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, has a <emu-val>\"name\"</emu-val> property whose value is a String. Unless otherwise specified, this value is the name that is given to the function in this specification. Functions that are identified as anonymous functions use the empty String as the value of the <emu-val>\"name\"</emu-val> property. For functions that are specified as properties of objects, the name value is the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string used to access the function. Functions that are specified as get or set accessor functions of built-in properties have <emu-val>\"get \"</emu-val> or <emu-val>\"set \"</emu-val> prepended to the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string. The value of the <emu-val>\"name\"</emu-val> property is explicitly specified for each built-in functions whose property key is a Symbol value.</p>\n  <p>Unless otherwise specified, the <emu-val>\"name\"</emu-val> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every other <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> described in clauses 18 through 26 and in Annex <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified.</p>\n  <p>Every <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> described in clauses 18 through 26 and in Annex <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified. If only a get accessor function is described, the set accessor function is the default value, <emu-val>undefined</emu-val>. If only a set accessor is described the get accessor is the default value, <emu-val>undefined</emu-val>.</p>\n</emu-clause>\n\n"}, "sec-function.prototype.tostring": {"num": "19.2.3.5", "title": "#sec-function.prototype.tostring Function.prototype.toString ( )", "html": "<emu-clause id=\"sec-function.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.tostring\">#sec-function.prototype.tostring</span> Function.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>func</var> be the <emu-val>this</emu-val> value.</li><li>If <var>func</var> is a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function exotic object</a></emu-xref> or a <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\">built-in function object</a></emu-xref>, then return an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>. Additionally, if <var>func</var> is a <emu-xref href=\"#sec-well-known-intrinsic-objects\"><a href=\"#sec-well-known-intrinsic-objects\">Well-known Intrinsic Object</a></emu-xref> and is not identified as an anonymous function, the portion of the returned String that would be matched by <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt> must be the initial value of the <emu-val>\"name\"</emu-val> property of <var>func</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <var>func</var> has a [[SourceText]] internal slot and <var>func</var>.[[SourceText]] is a sequence of Unicode code points and !&#160;<emu-xref aoid=\"HostHasSourceTextAvailable\"><a href=\"#sec-hosthassourcetextavailable\">HostHasSourceTextAvailable</a></emu-xref>(<var>func</var>) is <emu-val>true</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"UTF16Encode\"><a href=\"#sec-utf16encode\">UTF16Encode</a></emu-xref>(<var>func</var>.[[SourceText]]).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>func</var>) is <emu-val>true</emu-val>, then return an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n        <emu-grammar type=\"definition\"><emu-production name=\"NativeFunction\" id=\"prod-NativeFunction\">\n    <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1fcbc9e6\"><emu-t>function</emu-t><emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-t>[</emu-t><emu-t>native</emu-t><emu-t>code</emu-t><emu-t>]</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"GeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncGenerator%</dfn>.</li>\n        <li>is <dfn>%AsyncGeneratorFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-math.sign": {"num": "20.3.2.29", "title": "#sec-math.sign Math.sign ( x )", "html": "<emu-clause id=\"sec-math.sign\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sign\">#sec-math.sign</span> Math.sign ( <var>x</var> )</h1>\n        <p>Returns the sign of <var>x</var>, indicating whether <var>x</var> is positive, negative, or zero.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is negative and not <emu-val>-0</emu-val>, the result is -1.\n          </li>\n          <li>\n            If <var>x</var> is positive and not <emu-val>+0</emu-val>, the result is +1.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-math.atan": {"num": "20.3.2.6", "title": "#sec-math.atan Math.atan ( x )", "html": "<emu-clause id=\"sec-math.atan\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atan\">#sec-math.atan</span> Math.atan ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc tangent of <var>x</var>. The result is expressed in radians and ranges from -&#960; / 2 to +&#960; / 2.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing to -&#960; / 2.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-math.asinh": {"num": "20.3.2.5", "title": "#sec-math.asinh Math.asinh ( x )", "html": "<emu-clause id=\"sec-math.asinh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.asinh\">#sec-math.asinh</span> Math.asinh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic sine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          </li>\n          <li>\n            If x is <emu-val>-&#8734;</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-weakset-objects": {"num": "23.4", "title": "#sec-weakset-objects WeakSet Objects", "html": "<emu-clause id=\"sec-weakset-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-objects\">#sec-weakset-objects</span> WeakSet Objects</h1>\n    <p>WeakSet objects are collections of objects. A distinct object may only occur once as an element of a WeakSet's collection. A WeakSet may be queried to see if it contains a specific object, but no mechanism is provided for enumerating the objects it holds. If an object that is contained by a WeakSet is only reachable by following a chain of references that start within that WeakSet, then that object is inaccessible and is automatically removed from the WeakSet. WeakSet implementations must detect and remove such objects and any associated resources.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time an object contained in a WeakSet becomes inaccessible and the time when the object is removed from the WeakSet. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to determine if a WeakSet contains a particular object that does not require the observer to present the observed object.</p>\n    <p>WeakSet objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this WeakSet objects specification is only intended to describe the required observable semantics of WeakSet objects. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>See the NOTE in <emu-xref href=\"#sec-weakmap-objects\"><a href=\"#sec-weakmap-objects\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakset-constructor\"><h1><span class=\"secnum\">23.4.1</span>#sec-weakset-constructor The WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-constructor\"><h1><span class=\"secnum\">23.4.2</span>#sec-properties-of-the-weakset-constructor Properties of the WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-prototype-object\"><h1><span class=\"secnum\">23.4.3</span>#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakset-instances\"><h1><span class=\"secnum\">23.4.4</span>#sec-properties-of-weakset-instances Properties of WeakSet Instances</h1>...</div></emu-clause>\n"}, "sec-generatorfunction-objects": {"num": "25.2", "title": "#sec-generatorfunction-objects GeneratorFunction Objects", "html": "<emu-clause id=\"sec-generatorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-objects\">#sec-generatorfunction-objects</span> GeneratorFunction Objects</h1>\n    <p>GeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>s, and <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref> intrinsic.</p>\n    <emu-figure id=\"figure-2\" caption=\"Generator Objects Relationships\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-2\">#figure-2</span> (Informative): Generator Objects Relationships</figcaption>\n      <img alt=\"A staggering variety of boxes and arrows.\" src=\"img/figure-2.png\">\n    </figure></emu-figure>\n\n    <div id=\"excluded-sec-generatorfunction-constructor\"><h1><span class=\"secnum\">25.2.1</span>#sec-generatorfunction-constructor The GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-constructor\"><h1><span class=\"secnum\">25.2.2</span>#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-prototype-object\"><h1><span class=\"secnum\">25.2.3</span>#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-generatorfunction-instances\"><h1><span class=\"secnum\">25.2.4</span>#sec-generatorfunction-instances GeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-executable-code-and-execution-contexts": {"num": "8", "title": "#sec-executable-code-and-execution-contexts Executable Code and Execution Contexts", "html": "<emu-clause id=\"sec-executable-code-and-execution-contexts\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-executable-code-and-execution-contexts\">#sec-executable-code-and-execution-contexts</span> Executable Code and Execution Contexts</h1>\n\n  <div id=\"excluded-sec-environment-records\"><h1><span class=\"secnum\">8.1</span>#sec-environment-records Environment Records</h1>...</div><div id=\"excluded-sec-code-realms\"><h1><span class=\"secnum\">8.2</span>#sec-code-realms Realms</h1>...</div><div id=\"excluded-sec-execution-contexts\"><h1><span class=\"secnum\">8.3</span>#sec-execution-contexts Execution Contexts</h1>...</div><div id=\"excluded-sec-jobs\"><h1><span class=\"secnum\">8.4</span>#sec-jobs Jobs and Host Operations to Enqueue Jobs</h1>...</div><div id=\"excluded-sec-initializehostdefinedrealm\"><h1><span class=\"secnum\">8.5</span>#sec-initializehostdefinedrealm InitializeHostDefinedRealm ( )</h1>...</div><div id=\"excluded-sec-agents\"><h1><span class=\"secnum\">8.6</span>#sec-agents Agents</h1>...</div><div id=\"excluded-sec-agent-clusters\"><h1><span class=\"secnum\">8.7</span>#sec-agent-clusters Agent Clusters</h1>...</div><div id=\"excluded-sec-forward-progress\"><h1><span class=\"secnum\">8.8</span>#sec-forward-progress Forward Progress</h1>...</div></emu-clause>\n\n"}, "sec-control-abstraction-objects": {"num": "25", "title": "#sec-control-abstraction-objects Control Abstraction Objects", "html": "<emu-clause id=\"sec-control-abstraction-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-control-abstraction-objects\">#sec-control-abstraction-objects</span> Control Abstraction Objects</h1>\n\n  <div id=\"excluded-sec-iteration\"><h1><span class=\"secnum\">25.1</span>#sec-iteration Iteration</h1>...</div><div id=\"excluded-sec-generatorfunction-objects\"><h1><span class=\"secnum\">25.2</span>#sec-generatorfunction-objects GeneratorFunction Objects</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-objects\"><h1><span class=\"secnum\">25.3</span>#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects</h1>...</div><div id=\"excluded-sec-generator-objects\"><h1><span class=\"secnum\">25.4</span>#sec-generator-objects Generator Objects</h1>...</div><div id=\"excluded-sec-asyncgenerator-objects\"><h1><span class=\"secnum\">25.5</span>#sec-asyncgenerator-objects AsyncGenerator Objects</h1>...</div><div id=\"excluded-sec-promise-objects\"><h1><span class=\"secnum\">25.6</span>#sec-promise-objects Promise Objects</h1>...</div><div id=\"excluded-sec-async-function-objects\"><h1><span class=\"secnum\">25.7</span>#sec-async-function-objects AsyncFunction Objects</h1>...</div></emu-clause>\n\n"}, "sec-asynciteratorprototype": {"num": "25.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgenerator-abstract-operations": {"num": "25.5.3", "title": "#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations", "html": "<emu-clause id=\"sec-asyncgenerator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-abstract-operations\">#sec-asyncgenerator-abstract-operations</span> AsyncGenerator Abstract Operations</h1>\n      <div id=\"excluded-sec-asyncgeneratorrequest-records\"><h1><span class=\"secnum\">25.5.3.1</span>#sec-asyncgeneratorrequest-records AsyncGeneratorRequest Records</h1>...</div><div id=\"excluded-sec-asyncgeneratorstart\"><h1><span class=\"secnum\">25.5.3.2</span>#sec-asyncgeneratorstart AsyncGeneratorStart ( generator, generatorBody )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresolve\"><h1><span class=\"secnum\">25.5.3.3</span>#sec-asyncgeneratorresolve AsyncGeneratorResolve ( generator, value, done )</h1>...</div><div id=\"excluded-sec-asyncgeneratorreject\"><h1><span class=\"secnum\">25.5.3.4</span>#sec-asyncgeneratorreject AsyncGeneratorReject ( generator, exception )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresumenext\"><h1><span class=\"secnum\">25.5.3.5</span>#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )</h1>...</div><div id=\"excluded-sec-asyncgeneratorenqueue\"><h1><span class=\"secnum\">25.5.3.6</span>#sec-asyncgeneratorenqueue AsyncGeneratorEnqueue ( generator, completion )</h1>...</div><div id=\"excluded-sec-asyncgeneratoryield\"><h1><span class=\"secnum\">25.5.3.7</span>#sec-asyncgeneratoryield AsyncGeneratorYield ( value )</h1>...</div></emu-clause>\n  "}, "sec-promisecapability-records": {"num": "25.6.1.1", "title": "#sec-promisecapability-records PromiseCapability Records", "html": "<emu-clause id=\"sec-promisecapability-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promisecapability-records\">#sec-promisecapability-records</span> PromiseCapability Records</h1>\n        <p>A <dfn>PromiseCapability Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value used to encapsulate a promise object along with the functions that are capable of resolving or rejecting that promise object. PromiseCapability Records are produced by the <emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref> abstract operation.</p>\n        <p>PromiseCapability Records have the fields listed in <emu-xref href=\"#table-57\"><a href=\"#table-57\" class=\"excluded-xref\" excluded-id=\"table-57\">#table-57</a></emu-xref>.</p>\n        <emu-table id=\"table-57\" caption=\"PromiseCapability Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-57\">#table-57</span>: <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Promise]]\n              </td>\n              <td>\n                An object\n              </td>\n              <td>\n                An object that is usable as a promise.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Resolve]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to resolve the given promise object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Reject]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to reject the given promise object.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-ifabruptrejectpromise\"><h1><span class=\"secnum\">25.6.1.1.1</span>#sec-ifabruptrejectpromise IfAbruptRejectPromise ( value, capability )</h1>...</div></emu-clause>\n\n      "}}, "figData": {"figure-2": "Figure 5", "table-2": "Table 3", "table-5": "Table 6", "table-7": "Table 8", "table-agent-record": "Table 26", "table-27": "Table 27", "table-56": "Table 73", "table-internal-slots-of-asyncgenerator-instances": "Table 74", "table-57": "Table 76"}}, "to": {"secList": ["sec-asyncgeneratorfunction-instances", "sec-math.log1p", "sec-promise.prototype.finally", "sec-math.abs", "sec-properties-of-generator-prototype", "sec-promise-abstract-operations", "sec-properties-of-the-promise-constructor", "sec-properties-of-asyncgeneratorfunction", "sec-async-functions-abstract-operations", "sec-properties-of-the-promise-prototype-object", "sec-async-function-constructor", "sec-async-function-prototype-properties", "sec-math.asin", "sec-math.tanh", "sec-promise.resolve", "sec-promise.race", "sec-properties-of-the-proxy-constructor", "sec-async-from-sync-iterator-objects", "sec-promise.allsettled", "sec-promise.all", "sec-relations-of-candidate-executions", "sec-async-function-constructor-properties", "sec-createbuiltinfunction", "sec-%iteratorprototype%-object", "sec-common-iteration-interfaces", "sec-forward-progress", "sec-math.sin", "sec-well-known-intrinsic-objects", "sec-generator-abstract-operations", "sec-asyncgeneratorfunction-constructor", "sec-math.sqrt", "sec-promise-jobs", "sec-asyncgeneratorresumenext", "sec-async-function-instances", "sec-iteration", "sec-math.log", "sec-math.min", "sec-weakmap-objects", "sec-promise-objects", "sec-properties-of-asyncgenerator-prototype", "sec-reflect-object", "sec-math.log10", "sec-math.tan", "sec-async-function-objects", "sec-promise-constructor", "sec-math.log2", "sec-agents", "sec-newpromisecapability", "sec-math.max", "sec-reflection", "sec-module-namespace-objects", "sec-generatorfunction-instances", "sec-createresolvingfunctions", "sec-built-in-function-objects", "sec-generator-objects", "sec-generatorfunction-constructor", "sec-math.acos", "sec-%asyncfromsynciteratorprototype%-object", "sec-math.acosh", "sec-memory-model", "sec-constructor-properties-of-the-global-object", "sec-proxy.revocable", "sec-properties-of-valid-executions", "sec-runtime-semantics-iteratordestructuringassignmentevaluation", "sec-math.hypot", "sec-host-hooks-summary", "sec-math.atanh", "sec-setfunctionname", "sec-function-properties-of-the-math-object", "sec-promise.any", "sec-math.round", "sec-proxy-constructor", "sec-math.trunc", "sec-math.atan2", "sec-abstract-operations-for-the-memory-model", "sec-asyncgenerator-objects", "sec-promise.prototype.then", "sec-proxy-objects", "sec-math.sinh", "sec-properties-of-the-generatorfunction-prototype-object", "sec-asyncgeneratorfunction-objects", "sec-regexp.prototype.compile", "sec-ecmascript-standard-built-in-objects", "sec-function.prototype.tostring", "sec-properties-of-the-generatorfunction-constructor", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-math.sign", "sec-math.atan", "sec-math.asinh", "sec-weakset-objects", "sec-generatorfunction-objects", "sec-executable-code-and-execution-contexts", "sec-control-abstraction-objects", "sec-asynciteratorprototype", "sec-asyncgenerator-abstract-operations", "sec-promisecapability-records"], "secData": {"sec-asyncgeneratorfunction-instances": {"num": "26.3.4", "title": "#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instances\">#sec-asyncgeneratorfunction-instances</span> AsyncGeneratorFunction Instances</h1>\n      <p>Every AsyncGeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[IsClassConstructor]] internal slot for all such instances is <emu-val>false</emu-val>.</p>\n      <p>Each AsyncGeneratorFunction instance has the following own properties:</p>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-instance-length\"><h1><span class=\"secnum\">26.3.4.1</span>#sec-asyncgeneratorfunction-instance-length length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-name\"><h1><span class=\"secnum\">26.3.4.2</span>#sec-asyncgeneratorfunction-instance-name name</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instance-prototype\"><h1><span class=\"secnum\">26.3.4.3</span>#sec-asyncgeneratorfunction-instance-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-math.log1p": {"num": "20.3.2.21", "title": "#sec-math.log1p Math.log1p ( x )", "html": "<emu-clause id=\"sec-math.log1p\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log1p\">#sec-math.log1p</span> Math.log1p ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the natural logarithm of 1 + <var>x</var>. The result is computed in a way that is accurate even when the value of x is close to zero.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val> or <var>n</var> &lt; -1, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, or <var>n</var> is <emu-val>+&#8734;</emu-val>, return <var>n</var>.</li><li>If <var>n</var> is -1, return <emu-val>-&#8734;</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the natural logarithm of 1 + <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-promise.prototype.finally": {"num": "26.6.5.3", "title": "#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )", "html": "<emu-clause id=\"sec-promise.prototype.finally\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.finally\">#sec-promise.prototype.finally</span> Promise.prototype.finally ( <var>onFinally</var> )</h1>\n        <p>When the <code>finally</code> method is called with argument <var>onFinally</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>promise</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>onFinally</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>thenFinally</var> be <var>onFinally</var>.</li><li>Let <var>catchFinally</var> be <var>onFinally</var>.</li></ol></li><li>Else,<ol><li>Let <var>stepsThenFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-thenfinallyfunctions\" title=\"\"><a href=\"#sec-thenfinallyfunctions\">Then Finally Functions</a></emu-xref>.</li><li>Let <var>thenFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsThenFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>thenFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>thenFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li><li>Let <var>stepsCatchFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-catchfinallyfunctions\" title=\"\"><a href=\"#sec-catchfinallyfunctions\">Catch Finally Functions</a></emu-xref>.</li><li>Let <var>catchFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsCatchFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>catchFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>catchFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>promise</var>, <emu-val>\"then\"</emu-val>, &#171; <var>thenFinally</var>, <var>catchFinally</var> &#187;).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-thenfinallyfunctions\"><h1><span class=\"secnum\">26.6.5.3.1</span>#sec-thenfinallyfunctions Then Finally Functions</h1>...</div><div id=\"excluded-sec-catchfinallyfunctions\"><h1><span class=\"secnum\">26.6.5.3.2</span>#sec-catchfinallyfunctions Catch Finally Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.abs": {"num": "20.3.2.1", "title": "#sec-math.abs Math.abs ( x )", "html": "<emu-clause id=\"sec-math.abs\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.abs\">#sec-math.abs</span> Math.abs ( <var>x</var> )</h1>\n        <p>Returns the absolute value of <var>x</var>; the result has the same magnitude as <var>x</var> but has positive sign.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>-0</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>If <var>n</var> &lt; 0, return -<var>n</var>.</li><li>Return <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-properties-of-generator-prototype": {"num": "26.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is <dfn>%Generator.prototype%</dfn> (<dfn>%GeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">26.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">26.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">26.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">26.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-promise-abstract-operations": {"num": "26.6.1", "title": "#sec-promise-abstract-operations Promise Abstract Operations", "html": "<emu-clause id=\"sec-promise-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-abstract-operations\">#sec-promise-abstract-operations</span> Promise Abstract Operations</h1>\n\n      <div id=\"excluded-sec-promisecapability-records\"><h1><span class=\"secnum\">26.6.1.1</span>#sec-promisecapability-records PromiseCapability Records</h1>...</div><div id=\"excluded-sec-promisereaction-records\"><h1><span class=\"secnum\">26.6.1.2</span>#sec-promisereaction-records PromiseReaction Records</h1>...</div><div id=\"excluded-sec-createresolvingfunctions\"><h1><span class=\"secnum\">26.6.1.3</span>#sec-createresolvingfunctions CreateResolvingFunctions ( promise )</h1>...</div><div id=\"excluded-sec-fulfillpromise\"><h1><span class=\"secnum\">26.6.1.4</span>#sec-fulfillpromise FulfillPromise ( promise, value )</h1>...</div><div id=\"excluded-sec-newpromisecapability\"><h1><span class=\"secnum\">26.6.1.5</span>#sec-newpromisecapability NewPromiseCapability ( C )</h1>...</div><div id=\"excluded-sec-ispromise\"><h1><span class=\"secnum\">26.6.1.6</span>#sec-ispromise IsPromise ( x )</h1>...</div><div id=\"excluded-sec-rejectpromise\"><h1><span class=\"secnum\">26.6.1.7</span>#sec-rejectpromise RejectPromise ( promise, reason )</h1>...</div><div id=\"excluded-sec-triggerpromisereactions\"><h1><span class=\"secnum\">26.6.1.8</span>#sec-triggerpromisereactions TriggerPromiseReactions ( reactions, argument )</h1>...</div><div id=\"excluded-sec-host-promise-rejection-tracker\"><h1><span class=\"secnum\">26.6.1.9</span>#sec-host-promise-rejection-tracker HostPromiseRejectionTracker ( promise, operation )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-promise-constructor": {"num": "26.6.4", "title": "#sec-properties-of-the-promise-constructor Properties of the Promise Constructor", "html": "<emu-clause id=\"sec-properties-of-the-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-constructor\">#sec-properties-of-the-promise-constructor</span> Properties of the Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.all\"><h1><span class=\"secnum\">26.6.4.1</span>#sec-promise.all Promise.all ( iterable )</h1>...</div><div id=\"excluded-sec-promise.allsettled\"><h1><span class=\"secnum\">26.6.4.2</span>#sec-promise.allsettled Promise.allSettled ( iterable )</h1>...</div><div id=\"excluded-sec-promise.any\"><h1><span class=\"secnum\">26.6.4.3</span>#sec-promise.any Promise.any ( iterable )</h1>...</div><div id=\"excluded-sec-promise.prototype\"><h1><span class=\"secnum\">26.6.4.4</span>#sec-promise.prototype Promise.prototype</h1>...</div><div id=\"excluded-sec-promise.race\"><h1><span class=\"secnum\">26.6.4.5</span>#sec-promise.race Promise.race ( iterable )</h1>...</div><div id=\"excluded-sec-promise.reject\"><h1><span class=\"secnum\">26.6.4.6</span>#sec-promise.reject Promise.reject ( r )</h1>...</div><div id=\"excluded-sec-promise.resolve\"><h1><span class=\"secnum\">26.6.4.7</span>#sec-promise.resolve Promise.resolve ( x )</h1>...</div><div id=\"excluded-sec-get-promise-@@species\"><h1><span class=\"secnum\">26.6.4.8</span>#sec-get-promise-@@species get Promise [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction": {"num": "26.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">26.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">26.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-async-functions-abstract-operations": {"num": "26.7.5", "title": "#sec-async-functions-abstract-operations Async Functions Abstract Operations", "html": "<emu-clause id=\"sec-async-functions-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-functions-abstract-operations\">#sec-async-functions-abstract-operations</span> Async Functions Abstract Operations</h1>\n\n      <div id=\"excluded-sec-async-functions-abstract-operations-async-function-start\"><h1><span class=\"secnum\">26.7.5.1</span>#sec-async-functions-abstract-operations-async-function-start AsyncFunctionStart ( promiseCapability, asyncFunctionBody )</h1>...</div></emu-clause>\n  "}, "sec-properties-of-the-promise-prototype-object": {"num": "26.6.5", "title": "#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-promise-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-promise-prototype-object\">#sec-properties-of-the-promise-prototype-object</span> Properties of the Promise Prototype Object</h1>\n      <p>The Promise prototype object:</p>\n      <ul>\n        <li>is <dfn>%PromisePrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>does not have a [[PromiseState]] internal slot or any of the other internal slots of Promise instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise.prototype.catch\"><h1><span class=\"secnum\">26.6.5.1</span>#sec-promise.prototype.catch Promise.prototype.catch ( onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype.constructor\"><h1><span class=\"secnum\">26.6.5.2</span>#sec-promise.prototype.constructor Promise.prototype.constructor</h1>...</div><div id=\"excluded-sec-promise.prototype.finally\"><h1><span class=\"secnum\">26.6.5.3</span>#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )</h1>...</div><div id=\"excluded-sec-promise.prototype.then\"><h1><span class=\"secnum\">26.6.5.4</span>#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )</h1>...</div><div id=\"excluded-sec-promise.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.6.5.5</span>#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-async-function-constructor": {"num": "26.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour. All ECMAScript syntactic forms for defining async function objects create direct instances of AsyncFunction. There is no syntactic means to create instances of AsyncFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">26.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n    "}, "sec-async-function-prototype-properties": {"num": "26.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>is <dfn>%AsyncFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">26.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">26.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-math.asin": {"num": "20.3.2.4", "title": "#sec-math.asin Math.asin ( x )", "html": "<emu-clause id=\"sec-math.asin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.asin\">#sec-math.asin</span> Math.asin ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc sine of <var>x</var>. The result is expressed in radians and ranges from -&#960; / 2 to +&#960; / 2.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> &gt; 1, or <var>n</var> &lt; -1, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val> or <var>n</var> is <emu-val>-0</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc sine of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.tanh": {"num": "20.3.2.34", "title": "#sec-math.tanh Math.tanh ( x )", "html": "<emu-clause id=\"sec-math.tanh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.tanh\">#sec-math.tanh</span> Math.tanh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the hyperbolic tangent of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, or <var>n</var> is <emu-val>+0</emu-val>, return <var>n</var>.</li><li>If <var>n</var> is <emu-val>+&#8734;</emu-val>, return +1.</li><li>If <var>n</var> is <emu-val>-&#8734;</emu-val>, return -1.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the hyperbolic tangent of <var>n</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.tanh(x)</code> is the same as the value of <code>(Math.exp(x) - Math.exp(-x)) / (Math.exp(x) + Math.exp(-x))</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise.resolve": {"num": "26.6.4.7", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">26.6.4.7.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.race": {"num": "26.6.4.5", "title": "#sec-promise.race Promise.race ( iterable )", "html": "<emu-clause id=\"sec-promise.race\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.race\">#sec-promise.race</span> Promise.race ( <var>iterable</var> )</h1>\n        <p>The <code>race</code> function returns a new promise which is settled in the same way as the first passed promise to settle. It resolves all elements of the passed <var>iterable</var> to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseRace\"><a href=\"#sec-performpromiserace\">PerformPromiseRace</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If the <var>iterable</var> argument is empty or if none of the promises in <var>iterable</var> ever settle then the pending promise returned by this method will never be settled.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>race</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It also expects that its <emu-val>this</emu-val> value provides a <code>resolve</code> method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiserace\"><h1><span class=\"secnum\">26.6.4.5.1</span>#sec-performpromiserace Runtime Semantics: PerformPromiseRace ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-proxy-constructor": {"num": "27.2.2", "title": "#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor", "html": "<emu-clause id=\"sec-properties-of-the-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-proxy-constructor\">#sec-properties-of-the-proxy-constructor</span> Properties of the Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property because proxy exotic objects do not have a [[Prototype]] internal slot that requires initialization.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy.revocable\"><h1><span class=\"secnum\">27.2.2.1</span>#sec-proxy.revocable Proxy.revocable ( target, handler )</h1>...</div></emu-clause>\n  "}, "sec-async-from-sync-iterator-objects": {"num": "26.1.4", "title": "#sec-async-from-sync-iterator-objects Async-from-Sync Iterator Objects", "html": "<emu-clause id=\"sec-async-from-sync-iterator-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</span> Async-from-Sync Iterator Objects</h1>\n      <p>An Async-from-Sync Iterator object is an async iterator that adapts a specific synchronous iterator. There is not a named <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for Async-from-Sync Iterator objects. Instead, Async-from-Sync iterator objects are created by the <emu-xref aoid=\"CreateAsyncFromSyncIterator\"><a href=\"#sec-createasyncfromsynciterator\">CreateAsyncFromSyncIterator</a></emu-xref> abstract operation as needed.</p>\n\n      <div id=\"excluded-sec-createasyncfromsynciterator\"><h1><span class=\"secnum\">26.1.4.1</span>#sec-createasyncfromsynciterator CreateAsyncFromSyncIterator ( syncIteratorRecord )</h1>...</div><div id=\"excluded-sec-%asyncfromsynciteratorprototype%-object\"><h1><span class=\"secnum\">26.1.4.2</span>#sec-%asyncfromsynciteratorprototype%-object The %AsyncFromSyncIteratorPrototype% Object</h1>...</div><div id=\"excluded-sec-properties-of-async-from-sync-iterator-instances\"><h1><span class=\"secnum\">26.1.4.3</span>#sec-properties-of-async-from-sync-iterator-instances Properties of Async-from-Sync Iterator Instances</h1>...</div><div id=\"excluded-sec-asyncfromsynciteratorcontinuation\"><h1><span class=\"secnum\">26.1.4.4</span>#sec-asyncfromsynciteratorcontinuation AsyncFromSyncIteratorContinuation ( result, promiseCapability )</h1>...</div></emu-clause>\n  "}, "sec-promise.allsettled": {"num": "26.6.4.2", "title": "#sec-promise.allsettled Promise.allSettled ( iterable )", "html": "<emu-clause id=\"sec-promise.allsettled\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled\">#sec-promise.allsettled</span> Promise.allSettled ( <var>iterable</var> )</h1>\n        <p>The <code>allSettled</code> function returns a promise that is fulfilled with an array of promise state snapshots, but only after all the original promises have settled, i.e. become either fulfilled or rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAllSettled\"><a href=\"#sec-performpromiseallsettled\">PerformPromiseAllSettled</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>allSettled</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseallsettled\"><h1><span class=\"secnum\">26.6.4.2.1</span>#sec-performpromiseallsettled Runtime Semantics: PerformPromiseAllSettled ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.allsettled-resolve-element-functions\"><h1><span class=\"secnum\">26.6.4.2.2</span>#sec-promise.allsettled-resolve-element-functions Promise.allSettled Resolve Element Functions</h1>...</div><div id=\"excluded-sec-promise.allsettled-reject-element-functions\"><h1><span class=\"secnum\">26.6.4.2.3</span>#sec-promise.allsettled-reject-element-functions Promise.allSettled Reject Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-promise.all": {"num": "26.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getpromiseresolve\"><h1><span class=\"secnum\">26.6.4.1.1</span>#sec-getpromiseresolve Runtime Semantics: GetPromiseResolve ( promiseConstructor )</h1>...</div><div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">26.6.4.1.2</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">26.6.4.1.3</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-relations-of-candidate-executions": {"num": "28.6", "title": "#sec-relations-of-candidate-executions Relations of Candidate Executions", "html": "<emu-clause id=\"sec-relations-of-candidate-executions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-relations-of-candidate-executions\">#sec-relations-of-candidate-executions</span> Relations of Candidate Executions</h1>\n    <div id=\"excluded-sec-agent-order\"><h1><span class=\"secnum\">28.6.1</span>#sec-agent-order agent-order</h1>...</div><div id=\"excluded-sec-reads-bytes-from\"><h1><span class=\"secnum\">28.6.2</span>#sec-reads-bytes-from reads-bytes-from</h1>...</div><div id=\"excluded-sec-reads-from\"><h1><span class=\"secnum\">28.6.3</span>#sec-reads-from reads-from</h1>...</div><div id=\"excluded-sec-host-synchronizes-with\"><h1><span class=\"secnum\">28.6.4</span>#sec-host-synchronizes-with host-synchronizes-with</h1>...</div><div id=\"excluded-sec-synchronizes-with\"><h1><span class=\"secnum\">28.6.5</span>#sec-synchronizes-with synchronizes-with</h1>...</div><div id=\"excluded-sec-happens-before\"><h1><span class=\"secnum\">28.6.6</span>#sec-happens-before happens-before</h1>...</div></emu-clause>\n\n  "}, "sec-async-function-constructor-properties": {"num": "26.7.2", "title": "#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor-properties\">#sec-async-function-constructor-properties</span> Properties of the AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-length\"><h1><span class=\"secnum\">26.7.2.1</span>#sec-async-function-constructor-length AsyncFunction.length</h1>...</div><div id=\"excluded-sec-async-function-constructor-prototype\"><h1><span class=\"secnum\">26.7.2.2</span>#sec-async-function-constructor-prototype AsyncFunction.prototype</h1>...</div></emu-clause>\n    "}, "sec-createbuiltinfunction": {"num": "9.3.3", "title": "#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )", "html": "<emu-clause id=\"sec-createbuiltinfunction\" aoid=\"CreateBuiltinFunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</span> CreateBuiltinFunction ( <var>steps</var>, <var>internalSlotsList</var> [ , <var>realm</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation CreateBuiltinFunction takes arguments <var>steps</var> and <var>internalSlotsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of names of internal slots) and optional arguments <var>realm</var> and <var>prototype</var>. <var>internalSlotsList</var> contains the names of additional internal slots that must be defined as part of the object. This operation creates a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>steps</var> is either a set of algorithm steps or other definition of a function's behaviour provided in this specification.</li><li>If <var>realm</var> is not present, set <var>realm</var> to <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>realm</var> is a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.</li><li>If <var>prototype</var> is not present, set <var>prototype</var> to <var>realm</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>]].</li><li>Let <var>func</var> be a new built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that when called performs the action described by <var>steps</var>. The new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has internal slots whose names are the elements of <var>internalSlotsList</var>, and an [[InitialName]] internal slot.</li><li>Set <var>func</var>.[[Realm]] to <var>realm</var>.</li><li>Set <var>func</var>.[[Prototype]] to <var>prototype</var>.</li><li>Set <var>func</var>.[[Extensible]] to <emu-val>true</emu-val>.</li><li>Set <var>func</var>.[[ScriptOrModule]] to <emu-val>null</emu-val>.</li><li>Set <var>func</var>.[[InitialName]] to <emu-val>null</emu-val>.</li><li>Return <var>func</var>.</li></ol></emu-alg>\n      <p>Each built-in function defined in this specification is created by calling the CreateBuiltinFunction abstract operation.</p>\n    </emu-clause>\n  "}, "sec-%iteratorprototype%-object": {"num": "26.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">26.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-common-iteration-interfaces": {"num": "26.1.1", "title": "#sec-common-iteration-interfaces Common Iteration Interfaces", "html": "<emu-clause id=\"sec-common-iteration-interfaces\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-common-iteration-interfaces\">#sec-common-iteration-interfaces</span> Common Iteration Interfaces</h1>\n      <p>An interface is a set of property keys whose associated values match a specific specification. Any object that provides all the properties as described by an interface's specification <em>conforms</em> to that interface. An interface is not represented by a distinct object. There may be many separately implemented objects that conform to any interface. An individual object may conform to multiple interfaces.</p>\n\n      <div id=\"excluded-sec-iterable-interface\"><h1><span class=\"secnum\">26.1.1.1</span>#sec-iterable-interface The Iterable Interface</h1>...</div><div id=\"excluded-sec-iterator-interface\"><h1><span class=\"secnum\">26.1.1.2</span>#sec-iterator-interface The Iterator Interface</h1>...</div><div id=\"excluded-sec-asynciterable-interface\"><h1><span class=\"secnum\">26.1.1.3</span>#sec-asynciterable-interface The AsyncIterable Interface</h1>...</div><div id=\"excluded-sec-asynciterator-interface\"><h1><span class=\"secnum\">26.1.1.4</span>#sec-asynciterator-interface The AsyncIterator Interface</h1>...</div><div id=\"excluded-sec-iteratorresult-interface\"><h1><span class=\"secnum\">26.1.1.5</span>#sec-iteratorresult-interface The IteratorResult Interface</h1>...</div></emu-clause>\n\n    "}, "sec-forward-progress": {"num": "8.8", "title": "#sec-forward-progress Forward Progress", "html": "<emu-clause id=\"sec-forward-progress\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-forward-progress\">#sec-forward-progress</span> Forward Progress</h1>\n    <p>For an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to <em>make forward progress</em> is for it to perform an evaluation step according to this specification.</p>\n    <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> becomes <em>blocked</em> when its <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> waits synchronously and indefinitely for an external event. Only agents whose <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s [[CanBlock]] property is <emu-val>true</emu-val> can become blocked in this sense.  An <em>unblocked</em> <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is one that is not blocked.</p>\n\n    <p>Implementations must ensure that:</p>\n    <ul>\n      <li>every unblocked <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> with a dedicated <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> eventually makes forward progress</li>\n      <li>in a set of agents that share an <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref>, one <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> eventually makes forward progress</li>\n      <li>an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> does not cause another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to become blocked except via explicit APIs that provide blocking.</li>\n    </ul>\n\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>This, along with the liveness guarantee in the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, ensures that all <emu-const>SeqCst</emu-const> writes eventually become observable to all agents.</p>\n    </div></emu-note>\n  </emu-clause>\n\n  "}, "sec-math.sin": {"num": "20.3.2.30", "title": "#sec-math.sin Math.sin ( x )", "html": "<emu-clause id=\"sec-math.sin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sin\">#sec-math.sin</span> Math.sin ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the sine of <var>x</var>. The argument is expressed in radians.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-&#8734;</emu-val>, or <var>n</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>-0</emu-val> or <var>n</var> is <emu-val>+0</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the sine of <var>n</var>.</li></ol></emu-alg>\n        \n      </emu-clause>\n\n      "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              </th>\n              <th>\n                Global Name\n              </th>\n              <th>\n                ECMAScript Language Association\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>\n              </td>\n              <td>\n                <code>AggregateError</code>\n              </td>\n              <td>\n                The <code>AggregateError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %AggregateErrorPrototype%\n              </td>\n              <td>\n                <code>AggregateError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-aggregate-error-prototype-objects\"><a href=\"#sec-properties-of-the-aggregate-error-prototype-objects\">%AggregateError.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array</code>\n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"entries\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"forEach\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"keys\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"values\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGeneratorFunction.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-properties-of-asyncgeneratorfunction-prototype\"><a href=\"#sec-properties-of-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGenerator.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              </td>\n              <td>\n                <code>Atomics</code>\n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt</code>\n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigInt64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigUint64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean</code>\n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView</code>\n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date</code>\n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURI</code>\n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURI</code>\n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error</code>\n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              </td>\n              <td>\n                <code>eval</code>\n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>\n              </td>\n              <td>\n                <code>EvalError</code>\n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>; i.e., %EvalError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>\n              </td>\n              <td>\n                <code>FinalizationRegistry</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\" class=\"excluded-xref\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float32Array</code>\n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>; i.e., %Float32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float64Array</code>\n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>; i.e., %Float64Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              </td>\n              <td>\n                <code>Function</code>\n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              </td>\n              <td>\n                <code>Function.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%Generator.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int8Array</code>\n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>; i.e., %Int8Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int16Array</code>\n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>; i.e., %Int16Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int32Array</code>\n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>; i.e., %Int32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              </td>\n              <td>\n                <code>isFinite</code>\n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              </td>\n              <td>\n                <code>isNaN</code>\n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON</code>\n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON.parse</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"parse\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\">%JSONStringify%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"stringify\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map</code>\n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              </td>\n              <td>\n                <code>Math</code>\n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number</code>\n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object</code>\n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"toString\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"valueOf\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseFloat</code>\n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseInt</code>\n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise</code>\n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"then\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.all</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"all\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.reject</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"reject\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"resolve\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              </td>\n              <td>\n                <code>Proxy</code>\n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>RangeError</code>\n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>; i.e., %RangeError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>\n              </td>\n              <td>\n                <code>ReferenceError</code>\n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>; i.e., %ReferenceError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              </td>\n              <td>\n                <code>Reflect</code>\n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp</code>\n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set</code>\n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              </td>\n              <td>\n                <code>String</code>\n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>String.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol</code>\n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>\n              </td>\n              <td>\n                <code>SyntaxError</code>\n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>; i.e., %SyntaxError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>TypeError</code>\n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>; i.e., %TypeError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8Array</code>\n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>; i.e., %Uint8Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>; i.e., %Uint8ClampedArray.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint16Array</code>\n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>; i.e., %Uint16Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint32Array</code>\n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>; i.e., %Uint32Array.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>\n              </td>\n              <td>\n                <code>URIError</code>\n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>; i.e., %URIError.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap</code>\n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              </td>\n            </tr>\n            <tr>\n              <td>\n                %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%\n              </td>\n              <td>\n                <code>WeakRef</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet</code>\n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-generator-abstract-operations": {"num": "26.4.3", "title": "#sec-generator-abstract-operations Generator Abstract Operations", "html": "<emu-clause id=\"sec-generator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-abstract-operations\">#sec-generator-abstract-operations</span> Generator Abstract Operations</h1>\n\n      <div id=\"excluded-sec-generatorstart\"><h1><span class=\"secnum\">26.4.3.1</span>#sec-generatorstart GeneratorStart ( generator, generatorBody )</h1>...</div><div id=\"excluded-sec-generatorvalidate\"><h1><span class=\"secnum\">26.4.3.2</span>#sec-generatorvalidate GeneratorValidate ( generator )</h1>...</div><div id=\"excluded-sec-generatorresume\"><h1><span class=\"secnum\">26.4.3.3</span>#sec-generatorresume GeneratorResume ( generator, value )</h1>...</div><div id=\"excluded-sec-generatorresumeabrupt\"><h1><span class=\"secnum\">26.4.3.4</span>#sec-generatorresumeabrupt GeneratorResumeAbrupt ( generator, abruptCompletion )</h1>...</div><div id=\"excluded-sec-getgeneratorkind\"><h1><span class=\"secnum\">26.4.3.5</span>#sec-getgeneratorkind GetGeneratorKind ( )</h1>...</div><div id=\"excluded-sec-generatoryield\"><h1><span class=\"secnum\">26.4.3.6</span>#sec-generatoryield GeneratorYield ( iterNextObj )</h1>...</div></emu-clause>\n  "}, "sec-asyncgeneratorfunction-constructor": {"num": "26.3.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of AsyncGeneratorFunction. There is no syntactic means to create instances of AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">26.3.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-math.sqrt": {"num": "20.3.2.32", "title": "#sec-math.sqrt Math.sqrt ( x )", "html": "<emu-clause id=\"sec-math.sqrt\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sqrt\">#sec-math.sqrt</span> Math.sqrt ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the square root of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val> or <var>n</var> &lt; 0, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>-0</emu-val>, <var>n</var> is <emu-val>+0</emu-val>, or <var>n</var> is <emu-val>+&#8734;</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the square root of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-promise-jobs": {"num": "26.6.2", "title": "#sec-promise-jobs Promise Jobs", "html": "<emu-clause id=\"sec-promise-jobs\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-jobs\">#sec-promise-jobs</span> Promise Jobs</h1>\n\n      <div id=\"excluded-sec-newpromisereactionjob\"><h1><span class=\"secnum\">26.6.2.1</span>#sec-newpromisereactionjob NewPromiseReactionJob ( reaction, argument )</h1>...</div><div id=\"excluded-sec-newpromiseresolvethenablejob\"><h1><span class=\"secnum\">26.6.2.2</span>#sec-newpromiseresolvethenablejob NewPromiseResolveThenableJob ( promiseToResolve, thenable, then )</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorresumenext": {"num": "26.5.3.5", "title": "#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )", "html": "<emu-clause id=\"sec-asyncgeneratorresumenext\" aoid=\"AsyncGeneratorResumeNext\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorresumenext\">#sec-asyncgeneratorresumenext</span> AsyncGeneratorResumeNext ( <var>generator</var> )</h1>\n        <p>The abstract operation AsyncGeneratorResumeNext takes argument <var>generator</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>generator</var> is an AsyncGenerator instance.</li><li>Let <var>state</var> be <var>generator</var>.[[AsyncGeneratorState]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is not <emu-const>executing</emu-const>.</li><li>If <var>state</var> is <emu-const>awaiting-return</emu-const>, return <emu-val>undefined</emu-val>.</li><li>Let <var>queue</var> be <var>generator</var>.[[AsyncGeneratorQueue]].</li><li>If <var>queue</var> is an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, return <emu-val>undefined</emu-val>.</li><li>Let <var>next</var> be the value of the first element of <var>queue</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>next</var> is an AsyncGeneratorRequest record.</li><li>Let <var>completion</var> be <var>next</var>.[[Completion]].</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>state</var> is <emu-const>suspendedStart</emu-const>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <emu-const>completed</emu-const>.</li><li>Set <var>state</var> to <emu-const>completed</emu-const>.</li></ol></li><li>If <var>state</var> is <emu-const>completed</emu-const>, then<ol><li>If <var>completion</var>.[[Type]] is <emu-const>return</emu-const>, then<ol><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <emu-const>awaiting-return</emu-const>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>, <var>completion</var>.[[Value]]).</li><li>Let <var>stepsFulfilled</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-fulfilled\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-fulfilled\">AsyncGeneratorResumeNext Return Processor Fulfilled Functions</a></emu-xref>.</li><li>Let <var>onFulfilled</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsFulfilled</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onFulfilled</var>.[[Generator]] to <var>generator</var>.</li><li>Let <var>stepsRejected</var> be the algorithm steps defined in <emu-xref href=\"#async-generator-resume-next-return-processor-rejected\" title=\"\"><a href=\"#async-generator-resume-next-return-processor-rejected\">AsyncGeneratorResumeNext Return Processor Rejected Functions</a></emu-xref>.</li><li>Let <var>onRejected</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsRejected</var>, &#171; [[Generator]] &#187;).</li><li>Set <var>onRejected</var>.[[Generator]] to <var>generator</var>.</li><li>Perform !&#160;<emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>completion</var>.[[Type]] is <emu-const>throw</emu-const>.</li><li>Perform !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>generator</var>, <var>completion</var>.[[Value]]).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li></ol></li></ol></li><li>Else if <var>state</var> is <emu-const>completed</emu-const>, return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>generator</var>, <emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>state</var> is either <emu-const>suspendedStart</emu-const> or <emu-const>suspendedYield</emu-const>.</li><li>Let <var>genContext</var> be <var>generator</var>.[[AsyncGeneratorContext]].</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li><emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref> <var>callerContext</var>.</li><li>Set <var>generator</var>.[[AsyncGeneratorState]] to <emu-const>executing</emu-const>.</li><li>Push <var>genContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>genContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Resume the suspended evaluation of <var>genContext</var> using <var>completion</var> as the result of the operation that suspended it. Let <var>result</var> be the completion record returned by the resumed computation.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> is never an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When we return here, <var>genContext</var> has already been removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and <var>callerContext</var> is the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-fulfilled\">\n          <h1><span class=\"secnum\">26.5.3.5.1</span> AsyncGeneratorResumeNext Return Processor Fulfilled Functions</h1>\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function has a [[Generator]] internal slot.</p>\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is called with argument <var>value</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <emu-const>completed</emu-const>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorResolve\"><a href=\"#sec-asyncgeneratorresolve\">AsyncGeneratorResolve</a></emu-xref>(<var>F</var>.[[Generator]], <var>value</var>, <emu-val>true</emu-val>).</li></ol></emu-alg>\n\n          <p>The <emu-val>\"length\"</emu-val> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor fulfilled function is 1.</p>\n        </emu-clause>\n\n        <emu-clause id=\"async-generator-resume-next-return-processor-rejected\">\n          <h1><span class=\"secnum\">26.5.3.5.2</span> AsyncGeneratorResumeNext Return Processor Rejected Functions</h1>\n          <p>An <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is an anonymous built-in function that is used as part of the <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> specification device to unwrap promises passed in to the <emu-xref href=\"#sec-asyncgenerator-prototype-return\" title=\"\"><a href=\"#sec-asyncgenerator-prototype-return\">AsyncGenerator.prototype.return ( <var>value</var> )</a></emu-xref> method. Each <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function has a [[Generator]] internal slot.</p>\n          <p>When an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is called with argument <var>reason</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Set <var>F</var>.[[Generator]].[[AsyncGeneratorState]] to <emu-const>completed</emu-const>.</li><li>Return !&#160;<emu-xref aoid=\"AsyncGeneratorReject\"><a href=\"#sec-asyncgeneratorreject\">AsyncGeneratorReject</a></emu-xref>(<var>F</var>.[[Generator]], <var>reason</var>).</li></ol></emu-alg>\n\n          <p>The <emu-val>\"length\"</emu-val> property of an <emu-xref aoid=\"AsyncGeneratorResumeNext\"><a href=\"#sec-asyncgeneratorresumenext\">AsyncGeneratorResumeNext</a></emu-xref> return processor rejected function is 1.</p>\n        </emu-clause>\n      </emu-clause>\n\n      "}, "sec-async-function-instances": {"num": "26.7.4", "title": "#sec-async-function-instances AsyncFunction Instances", "html": "<emu-clause id=\"sec-async-function-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-instances\">#sec-async-function-instances</span> AsyncFunction Instances</h1>\n\n      <p>Every AsyncFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[IsClassConstructor]] internal slot for all such instances is <emu-val>false</emu-val>. AsyncFunction instances are not constructors and do not have a [[Construct]] internal method. AsyncFunction instances do not have a prototype property as they are not constructible.</p>\n      <p>Each AsyncFunction instance has the following own properties:</p>\n      <div id=\"excluded-sec-async-function-instances-length\"><h1><span class=\"secnum\">26.7.4.1</span>#sec-async-function-instances-length length</h1>...</div><div id=\"excluded-sec-async-function-instances-name\"><h1><span class=\"secnum\">26.7.4.2</span>#sec-async-function-instances-name name</h1>...</div></emu-clause>\n\n    "}, "sec-iteration": {"num": "26.1", "title": "#sec-iteration Iteration", "html": "<emu-clause id=\"sec-iteration\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iteration\">#sec-iteration</span> Iteration</h1>\n\n    <div id=\"excluded-sec-common-iteration-interfaces\"><h1><span class=\"secnum\">26.1.1</span>#sec-common-iteration-interfaces Common Iteration Interfaces</h1>...</div><div id=\"excluded-sec-%iteratorprototype%-object\"><h1><span class=\"secnum\">26.1.2</span>#sec-%iteratorprototype%-object The %IteratorPrototype% Object</h1>...</div><div id=\"excluded-sec-asynciteratorprototype\"><h1><span class=\"secnum\">26.1.3</span>#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object</h1>...</div><div id=\"excluded-sec-async-from-sync-iterator-objects\"><h1><span class=\"secnum\">26.1.4</span>#sec-async-from-sync-iterator-objects Async-from-Sync Iterator Objects</h1>...</div></emu-clause>\n\n  "}, "sec-math.log": {"num": "20.3.2.20", "title": "#sec-math.log Math.log ( x )", "html": "<emu-clause id=\"sec-math.log\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log\">#sec-math.log</span> Math.log ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the natural logarithm of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val> or <var>n</var> &lt; 0, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val> or <var>n</var> is <emu-val>-0</emu-val>, return <emu-val>-&#8734;</emu-val>.</li><li>If <var>n</var> is 1, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the natural logarithm of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.min": {"num": "20.3.2.25", "title": "#sec-math.min Math.min ( value1, value2, ...values )", "html": "<emu-clause id=\"sec-math.min\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.min\">#sec-math.min</span> Math.min ( <var>value1</var>, <var>value2</var>, ...<var>values</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the smallest of the resulting values.</p>\n        <emu-alg><ol><li>Let <var>values</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are, in left to right order, the arguments that were passed to this function invocation.</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Let <var>v</var> be <emu-val>+&#8734;</emu-val>.</li><li>Repeat, while <var>values</var> is not empty,<ol><li>Remove the first element from <var>values</var> and let <var>value</var> be the value of the element.</li><li>Let <var>x</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <var>x</var> &lt; <var>v</var>, set <var>v</var> to <var>x</var>.</li></ol></li><li>Return <var>v</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weakmap-objects": {"num": "23.3", "title": "#sec-weakmap-objects WeakMap Objects", "html": "<emu-clause id=\"sec-weakmap-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</span> WeakMap Objects</h1>\n    <p>WeakMap objects are collections of key/value pairs where the keys are objects and values may be arbitrary ECMAScript language values. A WeakMap may be queried to see if it contains a key/value pair with a specific key, but no mechanism is provided for enumerating the objects it holds as keys. In certain conditions, objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> are removed as WeakMap keys, as described in <emu-xref href=\"#sec-weakref-execution\"><a href=\"#sec-weakref-execution\" class=\"excluded-xref\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</a></emu-xref>.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time a key/value pair of a WeakMap becomes inaccessible and the time when the key/value pair is removed from the WeakMap. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to observe a key of a WeakMap that does not require the observer to present the observed key.</p>\n    <p>WeakMap objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of key/value pairs in the collection. The data structure used in this WeakMap objects specification are only intended to describe the required observable semantics of WeakMap objects. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>WeakMap and WeakSets are intended to provide mechanisms for dynamically associating state with an object in a manner that does not &#8220;leak&#8221; memory resources if, in the absence of the WeakMap or WeakSet, the object otherwise became inaccessible and subject to resource reclamation by the implementation's garbage collection mechanisms. This characteristic can be achieved by using an inverted per-object mapping of weak map instances to keys. Alternatively each weak map may internally store its key to value mappings but this approach requires coordination between the WeakMap or WeakSet implementation and the garbage collector. The following references describe mechanism that may be useful to implementations of WeakMap and WeakSets:</p>\n      <p>Barry Hayes. 1997. Ephemerons: a new finalization mechanism. In <i>Proceedings of the 12th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA '97)</i>, A. Michael Berman (Ed.). ACM, New York, NY, USA, 176-183, <a href=\"http://doi.acm.org/10.1145/263698.263733\">http://doi.acm.org/10.1145/263698.263733</a>.</p>\n      <p>Alexandra Barros, Roberto Ierusalimschy, Eliminating Cycles in Weak Tables. Journal of Universal Computer Science - J.UCS, vol. 14, no. 21, pp. 3481-3497, 2008, <a href=\"http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak\">http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak</a></p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakmap-constructor\"><h1><span class=\"secnum\">23.3.1</span>#sec-weakmap-constructor The WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-constructor\"><h1><span class=\"secnum\">23.3.2</span>#sec-properties-of-the-weakmap-constructor Properties of the WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-prototype-object\"><h1><span class=\"secnum\">23.3.3</span>#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakmap-instances\"><h1><span class=\"secnum\">23.3.4</span>#sec-properties-of-weakmap-instances Properties of WeakMap Instances</h1>...</div></emu-clause>\n\n  "}, "sec-promise-objects": {"num": "26.6", "title": "#sec-promise-objects Promise Objects", "html": "<emu-clause id=\"sec-promise-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-objects\">#sec-promise-objects</span> Promise Objects</h1>\n    <p>A Promise is an object that is used as a placeholder for the eventual results of a deferred (and possibly asynchronous) computation.</p>\n    <p>Any Promise object is in one of three mutually exclusive states: <em>fulfilled</em>, <em>rejected</em>, and <em>pending</em>:</p>\n    <ul>\n      <li>\n        A promise <code>p</code> is fulfilled if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>f</code>.\n      </li>\n      <li>\n        A promise <code>p</code> is rejected if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>r</code>.\n      </li>\n      <li>\n        A promise is pending if it is neither fulfilled nor rejected.\n      </li>\n    </ul>\n    <p>A promise is said to be <em>settled</em> if it is not pending, i.e. if it is either fulfilled or rejected.</p>\n    <p>A promise is <em>resolved</em> if it is settled or if it has been &#8220;locked in&#8221; to match the state of another promise. Attempting to resolve or reject a resolved promise has no effect. A promise is <em>unresolved</em> if it is not resolved. An unresolved promise is always in the pending state. A resolved promise may be pending, fulfilled or rejected.</p>\n\n    <div id=\"excluded-sec-promise-abstract-operations\"><h1><span class=\"secnum\">26.6.1</span>#sec-promise-abstract-operations Promise Abstract Operations</h1>...</div><div id=\"excluded-sec-promise-jobs\"><h1><span class=\"secnum\">26.6.2</span>#sec-promise-jobs Promise Jobs</h1>...</div><div id=\"excluded-sec-promise-constructor\"><h1><span class=\"secnum\">26.6.3</span>#sec-promise-constructor The Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-constructor\"><h1><span class=\"secnum\">26.6.4</span>#sec-properties-of-the-promise-constructor Properties of the Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-prototype-object\"><h1><span class=\"secnum\">26.6.5</span>#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-promise-instances\"><h1><span class=\"secnum\">26.6.6</span>#sec-properties-of-promise-instances Properties of Promise Instances</h1>...</div></emu-clause>\n\n  "}, "sec-properties-of-asyncgenerator-prototype": {"num": "26.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is <dfn>%AsyncGenerator.prototype%</dfn> (<dfn>%AsyncGeneratorFunction.prototype.prototype%</dfn>).</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">26.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">26.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">26.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">26.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">26.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-reflect-object": {"num": "27.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Reflect\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">27.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">27.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">27.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">27.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">27.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">27.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">27.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">27.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">27.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">27.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">27.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">27.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">27.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div><div id=\"excluded-sec-reflect-@@tostringtag\"><h1><span class=\"secnum\">27.1.14</span>#sec-reflect-@@tostringtag Reflect [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-math.log10": {"num": "20.3.2.22", "title": "#sec-math.log10 Math.log10 ( x )", "html": "<emu-clause id=\"sec-math.log10\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log10\">#sec-math.log10</span> Math.log10 ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the base 10 logarithm of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val> or <var>n</var> &lt; 0, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val> or <var>n</var> is <emu-val>-0</emu-val>, return <emu-val>-&#8734;</emu-val>.</li><li>If <var>n</var> is 1, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the base 10 logarithm of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.tan": {"num": "20.3.2.33", "title": "#sec-math.tan Math.tan ( x )", "html": "<emu-clause id=\"sec-math.tan\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.tan\">#sec-math.tan</span> Math.tan ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the tangent of <var>x</var>. The argument is expressed in radians.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-&#8734;</emu-val>, or <var>n</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>-0</emu-val> or <var>n</var> is <emu-val>+0</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the tangent of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-async-function-objects": {"num": "26.7", "title": "#sec-async-function-objects AsyncFunction Objects", "html": "<emu-clause id=\"sec-async-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-objects\">#sec-async-function-objects</span> AsyncFunction Objects</h1>\n    <p>AsyncFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt>s, and <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-async-function-constructor\"><h1><span class=\"secnum\">26.7.1</span>#sec-async-function-constructor The AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-constructor-properties\"><h1><span class=\"secnum\">26.7.2</span>#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties\"><h1><span class=\"secnum\">26.7.3</span>#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object</h1>...</div><div id=\"excluded-sec-async-function-instances\"><h1><span class=\"secnum\">26.7.4</span>#sec-async-function-instances AsyncFunction Instances</h1>...</div><div id=\"excluded-sec-async-functions-abstract-operations\"><h1><span class=\"secnum\">26.7.5</span>#sec-async-functions-abstract-operations Async Functions Abstract Operations</h1>...</div></emu-clause>\n"}, "sec-promise-constructor": {"num": "26.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">26.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-math.log2": {"num": "20.3.2.23", "title": "#sec-math.log2 Math.log2 ( x )", "html": "<emu-clause id=\"sec-math.log2\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.log2\">#sec-math.log2</span> Math.log2 ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the base 2 logarithm of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val> or <var>n</var> &lt; 0, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val> or <var>n</var> is <emu-val>-0</emu-val>, return <emu-val>-&#8734;</emu-val>.</li><li>If <var>n</var> is 1, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the base 2 logarithm of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-agents": {"num": "8.6", "title": "#sec-agents Agents", "html": "<emu-clause id=\"sec-agents\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-agents\">#sec-agents</span> Agents</h1>\n\n    <p>An <dfn id=\"agent\">agent</dfn> comprises a set of ECMAScript execution contexts, an <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, a <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, an <dfn id=\"agent-record\">Agent Record</dfn>, and an <dfn id=\"executing-thread\">executing thread</dfn>. Except for the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref>, the constituents of an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> belong exclusively to that <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>.</p>\n    <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes a job on the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s execution contexts independently of other agents, except that an <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> may be used as the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> by multiple agents, provided none of the agents sharing the thread have an <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> whose [[CanBlock]] property is <emu-val>true</emu-val>.</p>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Some web browsers share a single <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> across multiple unrelated tabs of a browser window, for example.</p>\n    </div></emu-note>\n    <p>While an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes jobs, the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is the <dfn id=\"surrounding-agent\">surrounding agent</dfn> for the code in those jobs. The code uses the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref> to access the specification level execution objects held within the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>: the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, and the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s fields.</p>\n    <emu-table id=\"table-agent-record\" caption=\"Agent Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-agent-record\">#table-agent-record</span>: <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> Fields</figcaption>\n      <table>\n        <tbody>\n          <tr>\n            <th>Field Name</th>\n            <th>Value</th>\n            <th>Meaning</th>\n          </tr>\n          <tr>\n            <td>[[LittleEndian]]</td>\n            <td>Boolean</td>\n            <td>The default value computed for the <em>isLittleEndian</em> parameter when it is needed by the algorithms <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref> and <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>. The choice is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> and should be the alternative that is most efficient for the implementation.  Once the value has been observed it cannot change.</td>\n          </tr>\n          <tr>\n            <td>[[CanBlock]]</td>\n            <td>Boolean</td>\n            <td>Determines whether the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> can block or not.</td>\n          </tr>\n          <tr>\n            <td>[[Signifier]]</td>\n            <td>Any globally-unique value</td>\n            <td>Uniquely identifies the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> within its <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree1]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on one-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree2]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on two-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree8]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on eight-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[CandidateExecution]]</td>\n            <td>A <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref></td>\n            <td>See the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>.</td>\n          </tr>\n          <tr>\n            <td>[[KeptAlive]]</td>\n            <td><emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of objects</td>\n            <td>Initially a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, representing the list of objects to be kept alive until the end of the current <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref></td>\n          </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n\n    <p>Once the values of [[Signifier]], [[IsLockFree1]], and [[IsLockFree2]] have been observed by any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> they cannot change.</p>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The values of [[IsLockFree1]] and [[IsLockFree2]] are not necessarily determined by the hardware, but may also reflect implementation choices that can vary over time and between ECMAScript implementations.</p>\n\n      <p>There is no [[IsLockFree4]] property: 4-byte atomic operations are always lock-free.</p>\n\n      <p>In practice, if an atomic operation is implemented with any type of lock the operation is not lock-free.  Lock-free does not imply wait-free: there is no upper bound on how many machine steps may be required to complete a lock-free atomic operation.</p>\n\n      <p>That an atomic access of size <em>n</em> is lock-free does not imply anything about the (perceived) atomicity of non-atomic accesses of size <em>n</em>, specifically, non-atomic accesses may still be performed as a sequence of several separate memory accesses.  See <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> and <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> for details.</p>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-agentsignifier\"><h1><span class=\"secnum\">8.6.1</span>#sec-agentsignifier AgentSignifier ( )</h1>...</div><div id=\"excluded-sec-agentcansuspend\"><h1><span class=\"secnum\">8.6.2</span>#sec-agentcansuspend AgentCanSuspend ( )</h1>...</div></emu-clause>\n\n  "}, "sec-newpromisecapability": {"num": "26.6.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" aoid=\"NewPromiseCapability\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes argument <var>C</var>. It attempts to use <var>C</var> as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in the fashion of the built-in Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its <code>resolve</code> and <code>reject</code> functions. The Promise object plus the <code>resolve</code> and <code>reject</code> functions are used to initialize a new <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be the <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-getcapabilitiesexecutor-functions\" title=\"\"><a href=\"#sec-getcapabilitiesexecutor-functions\">GetCapabilitiesExecutor Functions</a></emu-xref>.</li><li>Let <var>executor</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[Capability]] &#187;).</li><li>Set <var>executor</var>.[[Capability]] to <var>promiseCapability</var>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getcapabilitiesexecutor-functions\"><h1><span class=\"secnum\">26.6.1.5.1</span>#sec-getcapabilitiesexecutor-functions GetCapabilitiesExecutor Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.max": {"num": "20.3.2.24", "title": "#sec-math.max Math.max ( ...values )", "html": "<emu-clause id=\"sec-math.max\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.max\">#sec-math.max</span> Math.max ( ...<var>values</var> )</h1>\n        <p>Given zero or more arguments, calls <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> on each of the arguments and returns the largest of the resulting values.</p>\n        <emu-alg><ol><li>Let <var>values</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are, in left to right order, the arguments that were passed to this function invocation.</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Let <var>v</var> be <emu-val>-&#8734;</emu-val>.</li><li>Repeat, while <var>values</var> is not empty,<ol><li>Remove the first element from <var>values</var> and let <var>value</var> be the value of the element.</li><li>Let <var>x</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <var>x</var> &gt; <var>v</var>, set <var>v</var> to <var>x</var>.</li></ol></li><li>Return <var>v</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          The comparison of values to determine the largest value is done using the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm except that <emu-val>+0</emu-val> is considered to be larger than <emu-val>-0</emu-val>.\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-reflection": {"num": "27", "title": "#sec-reflection Reflection", "html": "<emu-clause id=\"sec-reflection\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflection\">#sec-reflection</span> Reflection</h1>\n\n  <div id=\"excluded-sec-reflect-object\"><h1><span class=\"secnum\">27.1</span>#sec-reflect-object The Reflect Object</h1>...</div><div id=\"excluded-sec-proxy-objects\"><h1><span class=\"secnum\">27.2</span>#sec-proxy-objects Proxy Objects</h1>...</div><div id=\"excluded-sec-module-namespace-objects\"><h1><span class=\"secnum\">27.3</span>#sec-module-namespace-objects Module Namespace Objects</h1>...</div></emu-clause>\n\n"}, "sec-module-namespace-objects": {"num": "27.3", "title": "#sec-module-namespace-objects Module Namespace Objects", "html": "<emu-clause id=\"sec-module-namespace-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-namespace-objects\">#sec-module-namespace-objects</span> Module Namespace Objects</h1>\n    <p>A Module Namespace Object is a <emu-xref href=\"#module-namespace-exotic-object\"><a href=\"#module-namespace-exotic-object\">module namespace exotic object</a></emu-xref> that provides runtime property-based access to a module's exported bindings. There is no <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function for Module Namespace Objects. Instead, such an object is created for each module that is imported by an <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt> that includes a <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt>.</p>\n    <p>In addition to the properties specified in <emu-xref href=\"#sec-module-namespace-exotic-objects\"><a href=\"#sec-module-namespace-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-module-namespace-exotic-objects\">#sec-module-namespace-exotic-objects</a></emu-xref> each Module Namespace Object has the following own property:</p>\n\n    <div id=\"excluded-sec-@@tostringtag\"><h1><span class=\"secnum\">27.3.1</span>#sec-@@tostringtag @@toStringTag</h1>...</div></emu-clause>\n"}, "sec-generatorfunction-instances": {"num": "26.2.4", "title": "#sec-generatorfunction-instances GeneratorFunction Instances", "html": "<emu-clause id=\"sec-generatorfunction-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances\">#sec-generatorfunction-instances</span> GeneratorFunction Instances</h1>\n      <p>Every GeneratorFunction instance is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and has the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>. The value of the [[IsClassConstructor]] internal slot for all such instances is <emu-val>false</emu-val>.</p>\n      <p>Each GeneratorFunction instance has the following own properties:</p>\n\n      <div id=\"excluded-sec-generatorfunction-instances-length\"><h1><span class=\"secnum\">26.2.4.1</span>#sec-generatorfunction-instances-length length</h1>...</div><div id=\"excluded-sec-generatorfunction-instances-name\"><h1><span class=\"secnum\">26.2.4.2</span>#sec-generatorfunction-instances-name name</h1>...</div><div id=\"excluded-sec-generatorfunction-instances-prototype\"><h1><span class=\"secnum\">26.2.4.3</span>#sec-generatorfunction-instances-prototype prototype</h1>...</div></emu-clause>\n  "}, "sec-createresolvingfunctions": {"num": "26.6.1.3", "title": "#sec-createresolvingfunctions CreateResolvingFunctions ( promise )", "html": "<emu-clause id=\"sec-createresolvingfunctions\" aoid=\"CreateResolvingFunctions\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createresolvingfunctions\">#sec-createresolvingfunctions</span> CreateResolvingFunctions ( <var>promise</var> )</h1>\n        <p>The abstract operation CreateResolvingFunctions takes argument <var>promise</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>alreadyResolved</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Value]]: <emu-val>false</emu-val> }.</li><li>Let <var>stepsResolve</var> be the algorithm steps defined in <emu-xref href=\"#sec-promise-resolve-functions\" title=\"\"><a href=\"#sec-promise-resolve-functions\">Promise Resolve Functions</a></emu-xref>.</li><li>Let <var>resolve</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsResolve</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>resolve</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>resolve</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Let <var>stepsReject</var> be the algorithm steps defined in <emu-xref href=\"#sec-promise-reject-functions\" title=\"\"><a href=\"#sec-promise-reject-functions\">Promise Reject Functions</a></emu-xref>.</li><li>Let <var>reject</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsReject</var>, &#171; [[Promise]], [[AlreadyResolved]] &#187;).</li><li>Set <var>reject</var>.[[Promise]] to <var>promise</var>.</li><li>Set <var>reject</var>.[[AlreadyResolved]] to <var>alreadyResolved</var>.</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Resolve]]: <var>resolve</var>, [[Reject]]: <var>reject</var> }.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-promise-reject-functions\"><h1><span class=\"secnum\">26.6.1.3.1</span>#sec-promise-reject-functions Promise Reject Functions</h1>...</div><div id=\"excluded-sec-promise-resolve-functions\"><h1><span class=\"secnum\">26.6.1.3.2</span>#sec-promise-resolve-functions Promise Resolve Functions</h1>...</div></emu-clause>\n\n      "}, "sec-built-in-function-objects": {"num": "9.3", "title": "#sec-built-in-function-objects Built-in Function Objects", "html": "<emu-clause id=\"sec-built-in-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</span> Built-in Function Objects</h1>\n    <p>The built-in function objects defined in this specification may be implemented as either ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) whose behaviour is provided using ECMAScript code or as implementation provided function exotic objects whose behaviour is provided in some other manner. In either case, the effect of calling such functions must conform to their specifications. An implementation may also provide additional built-in function objects that are not defined in this specification.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> it must have the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> behaviour specified in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. All such function exotic objects also have [[Prototype]], [[Extensible]], [[Realm]], and [[ScriptOrModule]] internal slots.</p>\n    <p>Unless otherwise specified every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref> object as the initial value of its [[Prototype]] internal slot.</p>\n    <p>The behaviour specified for each built-in function via algorithm steps or other means is the specification of the function body behaviour for both [[Call]] and [[Construct]] invocations of the function. However, [[Construct]] invocation is not supported by all built-in functions. For each built-in function, when invoked with [[Call]], the [[Call]] <var>thisArgument</var> provides the <emu-val>this</emu-val> value, the [[Call]] <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>. When invoked with [[Construct]], the <emu-val>this</emu-val> value is uninitialized, the [[Construct]] <var>argumentsList</var> provides the named parameters, and the [[Construct]] <var>newTarget</var> parameter provides the NewTarget value. If the built-in function is implemented as an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> then this specified behaviour must be implemented by the ECMAScript code that is the body of the function. Built-in functions that are ECMAScript function objects must be strict functions. If a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has any [[Call]] behaviour other than throwing a <emu-val>TypeError</emu-val> exception, an ECMAScript implementation of the function must be done in a manner that does not cause the function's [[IsClassConstructor]] internal slot to have the value <emu-val>true</emu-val>.</p>\n    <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function. When a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called as part of a <code>new</code> expression the <var>argumentsList</var> parameter of the invoked [[Construct]] internal method provides the values for the built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s named parameters.</p>\n    <p>Built-in functions that are not constructors do not have a <emu-val>\"prototype\"</emu-val> property unless otherwise specified in the description of a particular function.</p>\n    <p>Built-in functions have an [[InitialName]] internal slot.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is not implemented as an ECMAScript function it must provide [[Call]] and [[Construct]] internal methods that conform to the following definitions:</p>\n\n    <div id=\"excluded-sec-built-in-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.3.1</span>#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-built-in-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.3.2</span>#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-createbuiltinfunction\"><h1><span class=\"secnum\">9.3.3</span>#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )</h1>...</div></emu-clause>\n\n  "}, "sec-generator-objects": {"num": "26.4", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the <i>Iterator</i> and <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the value of the <emu-val>\"prototype\"</emu-val> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%Generator.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">26.4.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">26.4.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">26.4.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-generatorfunction-constructor": {"num": "26.2.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of GeneratorFunction. There is no syntactic means to create instances of GeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-math.acos": {"num": "20.3.2.2", "title": "#sec-math.acos Math.acos ( x )", "html": "<emu-clause id=\"sec-math.acos\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.acos\">#sec-math.acos</span> Math.acos ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc cosine of <var>x</var>. The result is expressed in radians and ranges from <emu-val>+0</emu-val> to +&#960;.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> &gt; 1, or <var>n</var> &lt; -1, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is 1, return <emu-val>+0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc cosine of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-%asyncfromsynciteratorprototype%-object": {"num": "26.1.4.2", "title": "#sec-%asyncfromsynciteratorprototype%-object The %AsyncFromSyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-%asyncfromsynciteratorprototype%-object\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%asyncfromsynciteratorprototype%-object\">#sec-%asyncfromsynciteratorprototype%-object</span> The %AsyncFromSyncIteratorPrototype% Object</h1>\n        <p>The <dfn>%AsyncFromSyncIteratorPrototype%</dfn> object:</p>\n        <ul>\n          <li>has properties that are inherited by all Async-from-Sync Iterator Objects.</li>\n          <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-%asyncfromsynciteratorprototype%.next\"><h1><span class=\"secnum\">26.1.4.2.1</span>#sec-%asyncfromsynciteratorprototype%.next %AsyncFromSyncIteratorPrototype%.next ( [ value ] )</h1>...</div><div id=\"excluded-sec-%asyncfromsynciteratorprototype%.return\"><h1><span class=\"secnum\">26.1.4.2.2</span>#sec-%asyncfromsynciteratorprototype%.return %AsyncFromSyncIteratorPrototype%.return ( [ value ] )</h1>...</div><div id=\"excluded-sec-%asyncfromsynciteratorprototype%.throw\"><h1><span class=\"secnum\">26.1.4.2.3</span>#sec-%asyncfromsynciteratorprototype%.throw %AsyncFromSyncIteratorPrototype%.throw ( [ value ] )</h1>...</div><div id=\"excluded-sec-async-from-sync-iterator-value-unwrap-functions\"><h1><span class=\"secnum\">26.1.4.2.4</span>#sec-async-from-sync-iterator-value-unwrap-functions Async-from-Sync Iterator Value Unwrap Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.acosh": {"num": "20.3.2.3", "title": "#sec-math.acosh Math.acosh ( x )", "html": "<emu-clause id=\"sec-math.acosh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.acosh\">#sec-math.acosh</span> Math.acosh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic cosine of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val> or <var>n</var> &lt; 1, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is 1, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic cosine of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-memory-model": {"num": "28", "title": "#sec-memory-model Memory Model", "html": "<emu-clause id=\"sec-memory-model\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-memory-model\">#sec-memory-model</span> Memory Model</h1>\n  <p>The memory consistency model, or <dfn>memory model</dfn>, specifies the possible orderings of <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> events, arising via accessing TypedArray instances backed by a SharedArrayBuffer and via methods on the Atomics object. When the program has no data races (defined below), the ordering of events appears as sequentially consistent, i.e., as an interleaving of actions from each <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>. When the program has data races, shared memory operations may appear sequentially inconsistent. For example, programs may exhibit causality-violating behaviour and other astonishments. These astonishments arise from compiler transforms and the design of CPUs (e.g., out-of-order execution and speculation). The memory model defines both the precise conditions under which a program exhibits sequentially consistent behaviour as well as the possible values read from data races. To wit, there is no undefined behaviour.</p>\n  <p>The memory model is defined as relational constraints on events introduced by <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> on SharedArrayBuffer or by methods on the Atomics object during an evaluation.</p>\n  <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n    <p>This section provides an axiomatic model on events introduced by the <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> on SharedArrayBuffers. It bears stressing that the model is not expressible algorithmically, unlike the rest of this specification. The nondeterministic introduction of events by <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> is the interface between the operational semantics of ECMAScript evaluation and the axiomatic semantics of the memory model. The semantics of these events is defined by considering graphs of all events in an evaluation. These are neither Static Semantics nor Runtime Semantics. There is no demonstrated algorithmic implementation, but instead a set of constraints that determine if a particular event graph is allowed or disallowed.</p>\n  </div></emu-note>\n\n  <div id=\"excluded-sec-memory-model-fundamentals\"><h1><span class=\"secnum\">28.1</span>#sec-memory-model-fundamentals Memory Model Fundamentals</h1>...</div><div id=\"excluded-sec-agent-event-records\"><h1><span class=\"secnum\">28.2</span>#sec-agent-event-records Agent Events Records</h1>...</div><div id=\"excluded-sec-chosen-value-records\"><h1><span class=\"secnum\">28.3</span>#sec-chosen-value-records Chosen Value Records</h1>...</div><div id=\"excluded-sec-candidate-executions\"><h1><span class=\"secnum\">28.4</span>#sec-candidate-executions Candidate Executions</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-memory-model\"><h1><span class=\"secnum\">28.5</span>#sec-abstract-operations-for-the-memory-model Abstract Operations for the Memory Model</h1>...</div><div id=\"excluded-sec-relations-of-candidate-executions\"><h1><span class=\"secnum\">28.6</span>#sec-relations-of-candidate-executions Relations of Candidate Executions</h1>...</div><div id=\"excluded-sec-properties-of-valid-executions\"><h1><span class=\"secnum\">28.7</span>#sec-properties-of-valid-executions Properties of Valid Executions</h1>...</div><div id=\"excluded-sec-races\"><h1><span class=\"secnum\">28.8</span>#sec-races Races</h1>...</div><div id=\"excluded-sec-data-races\"><h1><span class=\"secnum\">28.9</span>#sec-data-races Data Races</h1>...</div><div id=\"excluded-sec-data-race-freedom\"><h1><span class=\"secnum\">28.10</span>#sec-data-race-freedom Data Race Freedom</h1>...</div><div id=\"excluded-sec-shared-memory-guidelines\"><h1><span class=\"secnum\">28.11</span>#sec-shared-memory-guidelines Shared Memory Guidelines</h1>...</div></emu-clause>\n\n"}, "sec-constructor-properties-of-the-global-object": {"num": "18.3", "title": "#sec-constructor-properties-of-the-global-object Constructor Properties of the Global Object", "html": "<emu-clause id=\"sec-constructor-properties-of-the-global-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-constructor-properties-of-the-global-object\">#sec-constructor-properties-of-the-global-object</span> Constructor Properties of the Global Object</h1>\n\n    <div id=\"excluded-sec-constructor-properties-of-the-global-object-array\"><h1><span class=\"secnum\">18.3.1</span>#sec-constructor-properties-of-the-global-object-array Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-arraybuffer\"><h1><span class=\"secnum\">18.3.2</span>#sec-constructor-properties-of-the-global-object-arraybuffer ArrayBuffer ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-bigint\"><h1><span class=\"secnum\">18.3.3</span>#sec-constructor-properties-of-the-global-object-bigint BigInt ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-bigint64array\"><h1><span class=\"secnum\">18.3.4</span>#sec-constructor-properties-of-the-global-object-bigint64array BigInt64Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-biguint64array\"><h1><span class=\"secnum\">18.3.5</span>#sec-constructor-properties-of-the-global-object-biguint64array BigUint64Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-boolean\"><h1><span class=\"secnum\">18.3.6</span>#sec-constructor-properties-of-the-global-object-boolean Boolean ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-dataview\"><h1><span class=\"secnum\">18.3.7</span>#sec-constructor-properties-of-the-global-object-dataview DataView ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-date\"><h1><span class=\"secnum\">18.3.8</span>#sec-constructor-properties-of-the-global-object-date Date ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-error\"><h1><span class=\"secnum\">18.3.9</span>#sec-constructor-properties-of-the-global-object-error Error ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-evalerror\"><h1><span class=\"secnum\">18.3.10</span>#sec-constructor-properties-of-the-global-object-evalerror EvalError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-finnalization-registry\"><h1><span class=\"secnum\">18.3.11</span>#sec-constructor-properties-of-the-global-object-finnalization-registry FinalizationRegistry ( . . . )</h1>...</div><div id=\"excluded-sec-float32array\"><h1><span class=\"secnum\">18.3.12</span>#sec-float32array Float32Array ( . . . )</h1>...</div><div id=\"excluded-sec-float64array\"><h1><span class=\"secnum\">18.3.13</span>#sec-float64array Float64Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-function\"><h1><span class=\"secnum\">18.3.14</span>#sec-constructor-properties-of-the-global-object-function Function ( . . . )</h1>...</div><div id=\"excluded-sec-int8array\"><h1><span class=\"secnum\">18.3.15</span>#sec-int8array Int8Array ( . . . )</h1>...</div><div id=\"excluded-sec-int16array\"><h1><span class=\"secnum\">18.3.16</span>#sec-int16array Int16Array ( . . . )</h1>...</div><div id=\"excluded-sec-int32array\"><h1><span class=\"secnum\">18.3.17</span>#sec-int32array Int32Array ( . . . )</h1>...</div><div id=\"excluded-sec-map\"><h1><span class=\"secnum\">18.3.18</span>#sec-map Map ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-number\"><h1><span class=\"secnum\">18.3.19</span>#sec-constructor-properties-of-the-global-object-number Number ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-object\"><h1><span class=\"secnum\">18.3.20</span>#sec-constructor-properties-of-the-global-object-object Object ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-promise\"><h1><span class=\"secnum\">18.3.21</span>#sec-constructor-properties-of-the-global-object-promise Promise ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-proxy\"><h1><span class=\"secnum\">18.3.22</span>#sec-constructor-properties-of-the-global-object-proxy Proxy ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-rangeerror\"><h1><span class=\"secnum\">18.3.23</span>#sec-constructor-properties-of-the-global-object-rangeerror RangeError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-referenceerror\"><h1><span class=\"secnum\">18.3.24</span>#sec-constructor-properties-of-the-global-object-referenceerror ReferenceError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-regexp\"><h1><span class=\"secnum\">18.3.25</span>#sec-constructor-properties-of-the-global-object-regexp RegExp ( . . . )</h1>...</div><div id=\"excluded-sec-set\"><h1><span class=\"secnum\">18.3.26</span>#sec-set Set ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-sharedarraybuffer\"><h1><span class=\"secnum\">18.3.27</span>#sec-constructor-properties-of-the-global-object-sharedarraybuffer SharedArrayBuffer ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-string\"><h1><span class=\"secnum\">18.3.28</span>#sec-constructor-properties-of-the-global-object-string String ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-symbol\"><h1><span class=\"secnum\">18.3.29</span>#sec-constructor-properties-of-the-global-object-symbol Symbol ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-syntaxerror\"><h1><span class=\"secnum\">18.3.30</span>#sec-constructor-properties-of-the-global-object-syntaxerror SyntaxError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-typeerror\"><h1><span class=\"secnum\">18.3.31</span>#sec-constructor-properties-of-the-global-object-typeerror TypeError ( . . . )</h1>...</div><div id=\"excluded-sec-uint8array\"><h1><span class=\"secnum\">18.3.32</span>#sec-uint8array Uint8Array ( . . . )</h1>...</div><div id=\"excluded-sec-uint8clampedarray\"><h1><span class=\"secnum\">18.3.33</span>#sec-uint8clampedarray Uint8ClampedArray ( . . . )</h1>...</div><div id=\"excluded-sec-uint16array\"><h1><span class=\"secnum\">18.3.34</span>#sec-uint16array Uint16Array ( . . . )</h1>...</div><div id=\"excluded-sec-uint32array\"><h1><span class=\"secnum\">18.3.35</span>#sec-uint32array Uint32Array ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-urierror\"><h1><span class=\"secnum\">18.3.36</span>#sec-constructor-properties-of-the-global-object-urierror URIError ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-weakmap\"><h1><span class=\"secnum\">18.3.37</span>#sec-constructor-properties-of-the-global-object-weakmap WeakMap ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-weakref\"><h1><span class=\"secnum\">18.3.38</span>#sec-constructor-properties-of-the-global-object-weakref WeakRef ( . . . )</h1>...</div><div id=\"excluded-sec-constructor-properties-of-the-global-object-weakset\"><h1><span class=\"secnum\">18.3.39</span>#sec-constructor-properties-of-the-global-object-weakset WeakSet ( . . . )</h1>...</div></emu-clause>\n\n  "}, "sec-proxy.revocable": {"num": "27.2.2.1", "title": "#sec-proxy.revocable Proxy.revocable ( target, handler )", "html": "<emu-clause id=\"sec-proxy.revocable\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy.revocable\">#sec-proxy.revocable</span> Proxy.revocable ( <var>target</var>, <var>handler</var> )</h1>\n        <p>The <code>Proxy.revocable</code> function is used to create a revocable Proxy object. When <code>Proxy.revocable</code> is called with arguments <var>target</var> and <var>handler</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>p</var> be ?&#160;<emu-xref aoid=\"ProxyCreate\"><a href=\"#sec-proxycreate\">ProxyCreate</a></emu-xref>(<var>target</var>, <var>handler</var>).</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-proxy-revocation-functions\" title=\"\"><a href=\"#sec-proxy-revocation-functions\">Proxy Revocation Functions</a></emu-xref>.</li><li>Let <var>revoker</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[RevocableProxy]] &#187;).</li><li>Set <var>revoker</var>.[[RevocableProxy]] to <var>p</var>.</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"proxy\"</emu-val>, <var>p</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>result</var>, <emu-val>\"revoke\"</emu-val>, <var>revoker</var>).</li><li>Return <var>result</var>.</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-proxy-revocation-functions\"><h1><span class=\"secnum\">27.2.2.1.1</span>#sec-proxy-revocation-functions Proxy Revocation Functions</h1>...</div></emu-clause>\n    "}, "sec-properties-of-valid-executions": {"num": "28.7", "title": "#sec-properties-of-valid-executions Properties of Valid Executions", "html": "<emu-clause id=\"sec-properties-of-valid-executions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-valid-executions\">#sec-properties-of-valid-executions</span> Properties of Valid Executions</h1>\n    <div id=\"excluded-sec-valid-chosen-reads\"><h1><span class=\"secnum\">28.7.1</span>#sec-valid-chosen-reads Valid Chosen Reads</h1>...</div><div id=\"excluded-sec-coherent-reads\"><h1><span class=\"secnum\">28.7.2</span>#sec-coherent-reads Coherent Reads</h1>...</div><div id=\"excluded-sec-tear-free-aligned-reads\"><h1><span class=\"secnum\">28.7.3</span>#sec-tear-free-aligned-reads Tear Free Reads</h1>...</div><div id=\"excluded-sec-memory-order\"><h1><span class=\"secnum\">28.7.4</span>#sec-memory-order Sequentially Consistent Atomics</h1>...</div><div id=\"excluded-sec-valid-executions\"><h1><span class=\"secnum\">28.7.5</span>#sec-valid-executions Valid Executions</h1>...</div></emu-clause>\n\n  "}, "sec-runtime-semantics-iteratordestructuringassignmentevaluation": {"num": "12.15.7.5", "title": "#sec-runtime-semantics-iteratordestructuringassignmentevaluation Runtime Semantics: IteratorDestructuringAssignmentEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-iteratordestructuringassignmentevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-iteratordestructuringassignmentevaluation\">#sec-runtime-semantics-iteratordestructuringassignmentevaluation</span> Runtime Semantics: IteratorDestructuringAssignmentEvaluation</h1>\n        <p>With parameter <var>iteratorRecord</var>.</p>\n        <emu-grammar><emu-production name=\"AssignmentElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e2bbd46c\"><emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt> using <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bdc5c277\"><emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Perform ? IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElementList\">AssignmentElementList</a></emu-nt> using <var>iteratorRecord</var> as the argument.</li><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt> using <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"816d4abc\"><emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElisionElement\">AssignmentElisionElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"696f42ef\"><emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Perform ? IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li><li>Return the result of performing IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9471f753\"><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, then<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"806d0124\"><emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Perform ? IteratorDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with <var>iteratorRecord</var> as the argument.</li><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, then<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"AssignmentElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a73ccacf\"><emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is neither an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> nor an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>lref</var>).</li></ol></li><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, then<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>value</var> be <emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <var>value</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>value</var>).</li></ol></li></ol></li><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>true</emu-val>, let <var>value</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> is present and <var>value</var> is <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>) is <emu-val>true</emu-val> and IsIdentifierRef of <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is <emu-val>true</emu-val>, then<ol><li>Let <var>v</var> be NamedEvaluation of <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> with argument <emu-xref aoid=\"GetReferencedName\"><a href=\"#sec-getreferencedname\">GetReferencedName</a></emu-xref>(<var>lref</var>).</li></ol></li><li>Else,<ol><li>Let <var>defaultValue</var> be the result of evaluating <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>defaultValue</var>).</li></ol></li></ol></li><li>Else, let <var>v</var> be <var>value</var>.</li><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> or an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Let <var>nestedAssignmentPattern</var> be the <emu-nt><a href=\"#prod-AssignmentPattern\">AssignmentPattern</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li>Return the result of performing DestructuringAssignmentEvaluation of <var>nestedAssignmentPattern</var> with <var>v</var> as the argument.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>v</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Left to right evaluation order is maintained by evaluating a <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> that is not a destructuring pattern prior to accessing the iterator or evaluating the <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"AssignmentRestElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentRestElement\">AssignmentRestElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cf470c76\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is neither an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> nor an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>lref</var>).</li></ol></li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>Repeat, while <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>,<ol><li>Let <var>next</var> be <emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>next</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>nextValue</var> be <emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>If <var>nextValue</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, set <var>iteratorRecord</var>.[[Done]] to <emu-val>true</emu-val>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextValue</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>), <var>nextValue</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li></ol></li><li>If <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt> is neither an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> nor an <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt>, then<ol><li>Return ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>A</var>).</li></ol></li><li>Let <var>nestedAssignmentPattern</var> be the <emu-nt><a href=\"#prod-AssignmentPattern\">AssignmentPattern</a></emu-nt> that is <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covered</a></emu-xref> by <emu-nt><a href=\"#prod-DestructuringAssignmentTarget\">DestructuringAssignmentTarget</a></emu-nt>.</li><li>Return the result of performing DestructuringAssignmentEvaluation of <var>nestedAssignmentPattern</var> with <var>A</var> as the argument.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.hypot": {"num": "20.3.2.18", "title": "#sec-math.hypot Math.hypot ( ...values )", "html": "<emu-clause id=\"sec-math.hypot\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.hypot\">#sec-math.hypot</span> Math.hypot ( ...<var>values</var> )</h1>\n        <p><code>Math.hypot</code> returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the square root of the sum of squares of its arguments.</p>\n        <emu-alg><ol><li>Let <var>values</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are, in left to right order, the arguments that were passed to this function invocation.</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>If <var>len</var> is 0, return <emu-val>+0</emu-val>.</li><li>Let <var>hasNaN</var> be <emu-val>false</emu-val>.</li><li>Let <var>onlyZero</var> be <emu-val>true</emu-val>.</li><li>Repeat, while <var>values</var> is not empty,<ol><li>Remove the first element from <var>values</var> and let <var>value</var> be the value of the element.</li><li>Let <var>x</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <var>x</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+&#8734;</emu-val>.</li><li>If <var>x</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>-&#8734;</emu-val>.</li><li>If <var>x</var> is <emu-val>NaN</emu-val>, set <var>hasNaN</var> to <emu-val>true</emu-val>.</li><li>If <var>x</var> is not <emu-val>+0</emu-val> or <var>x</var> is not <emu-val>-0</emu-val>, set <var>onlyZero</var> to be <emu-val>false</emu-val>.</li></ol></li><li>If <var>hasNaN</var> is <emu-val>true</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>onlyZero</var> is <emu-val>true</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the square root of the sum of squares of its arguments.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Implementations should take care to avoid the loss of precision from overflows and underflows that are prone to occur in naive implementations when this function is called with two or more arguments.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-host-hooks-summary": {"num": "D.1", "title": "#sec-host-hooks-summary Host Hooks", "html": "<emu-annex id=\"sec-host-hooks-summary\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-host-hooks-summary\">#sec-host-hooks-summary</span> Host Hooks</h1>\n    <p><b><emu-xref aoid=\"HostEnqueueFinalizationRegistryCleanupJob\"><a href=\"#sec-host-cleanup-finalization-registry\">HostEnqueueFinalizationRegistryCleanupJob</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostEnqueuePromiseJob\"><a href=\"#sec-hostenqueuepromisejob\">HostEnqueuePromiseJob</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostEnsureCanCompileStrings\"><a href=\"#sec-hostensurecancompilestrings\">HostEnsureCanCompileStrings</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostFinalizeImportMeta\"><a href=\"#sec-hostfinalizeimportmeta\">HostFinalizeImportMeta</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostGetImportMetaProperties\"><a href=\"#sec-hostgetimportmetaproperties\">HostGetImportMetaProperties</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostHasSourceTextAvailable\"><a href=\"#sec-hosthassourcetextavailable\">HostHasSourceTextAvailable</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostImportModuleDynamically\"><a href=\"#sec-hostimportmoduledynamically\">HostImportModuleDynamically</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostPromiseRejectionTracker\"><a href=\"#sec-host-promise-rejection-tracker\">HostPromiseRejectionTracker</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"HostResolveImportedModule\"><a href=\"#sec-hostresolveimportedmodule\">HostResolveImportedModule</a></emu-xref>(...)</b></p>\n    <p><b><emu-xref aoid=\"InitializeHostDefinedRealm\"><a href=\"#sec-initializehostdefinedrealm\">InitializeHostDefinedRealm</a></emu-xref>(...)</b></p>\n  </emu-annex>\n  "}, "sec-math.atanh": {"num": "20.3.2.7", "title": "#sec-math.atanh Math.atanh ( x )", "html": "<emu-clause id=\"sec-math.atanh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atanh\">#sec-math.atanh</span> Math.atanh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic tangent of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> &gt; 1, or <var>n</var> &lt; -1, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is -1, return <emu-val>-&#8734;</emu-val>.</li><li>If <var>n</var> is +1, return <emu-val>+&#8734;</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val>, or <var>n</var> is <emu-val>-0</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic tangent of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-setfunctionname": {"num": "9.2.8", "title": "#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )", "html": "<emu-clause id=\"sec-setfunctionname\" aoid=\"SetFunctionName\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setfunctionname\">#sec-setfunctionname</span> SetFunctionName ( <var>F</var>, <var>name</var> [ , <var>prefix</var> ] )</h1>\n      <p>The abstract operation SetFunctionName takes arguments <var>F</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>) and <var>name</var> (a property key) and optional argument <var>prefix</var> (a String). It adds a <emu-val>\"name\"</emu-val> property to <var>F</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <emu-val>\"name\"</emu-val> own property.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is either Symbol or String.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>prefix</var> is present, then <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>prefix</var>) is String.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is Symbol, then<ol><li>Let <var>description</var> be <var>name</var>'s [[Description]] value.</li><li>If <var>description</var> is <emu-val>undefined</emu-val>, set <var>name</var> to the empty String.</li><li>Else, set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <emu-val>\"[\"</emu-val>, <var>description</var>, and <emu-val>\"]\"</emu-val>.</li></ol></li><li>If <var>F</var> has an [[InitialName]] internal slot, then<ol><li>Set <var>F</var>.[[InitialName]] to <var>name</var>.</li></ol></li><li>If <var>prefix</var> is present, then<ol><li>Set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>prefix</var>, the code unit 0x0020 (SPACE), and <var>name</var>.</li><li>If <var>F</var> has an [[InitialName]] internal slot, then<ol><li>Optionally, set <var>F</var>.[[InitialName]] to <var>name</var>.</li></ol></li></ol></li><li>Return !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"name\"</emu-val>, PropertyDescriptor { [[Value]]: <var>name</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-properties-of-the-math-object": {"num": "20.3.2", "title": "#sec-function-properties-of-the-math-object Function Properties of the Math Object", "html": "<emu-clause id=\"sec-function-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-properties-of-the-math-object\">#sec-function-properties-of-the-math-object</span> Function Properties of the Math Object</h1>\n      <p>Each of the following <code>Math</code> object functions applies the <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> abstract operation to each of its arguments (in left-to-right order if there is more than one). If <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, that <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> is immediately returned. Otherwise, the function performs a computation on the resulting <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>(s). The value returned by each function is a Number.</p>\n      <p>In the function descriptions below, the symbols <emu-val>NaN</emu-val>, <emu-val>-0</emu-val>, <emu-val>+0</emu-val>, <emu-val>-&#8734;</emu-val> and <emu-val>+&#8734;</emu-val> refer to the Number values described in <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The behaviour of the functions <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atanh</code>, <code>atan2</code>, <code>cbrt</code>, <code>cos</code>, <code>cosh</code>, <code>exp</code>, <code>expm1</code>, <code>hypot</code>, <code>log</code>,<code>log1p</code>, <code>log2</code>, <code>log10</code>, <code>pow</code>, <code>random</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, and <code>tanh</code> is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest. For other argument values, these functions are intended to compute approximations to the results of familiar mathematical functions, but some latitude is allowed in the choice of approximation algorithms. The general intent is that an implementer should be able to use the same mathematical library for ECMAScript on a given hardware platform that is available to C programmers on that platform.</p>\n        <p>Although the choice of algorithms is left to the implementation, it is recommended (but not specified by this standard) that implementations use the approximation algorithms for <emu-xref href=\"#sec-bibliography\"><a href=\"#sec-bibliography\">IEEE 754-2019</a></emu-xref> arithmetic contained in <code>fdlibm</code>, the freely distributable mathematical library from Sun Microsystems (<a href=\"http://www.netlib.org/fdlibm\">http://www.netlib.org/fdlibm</a>).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-math.abs\"><h1><span class=\"secnum\">20.3.2.1</span>#sec-math.abs Math.abs ( x )</h1>...</div><div id=\"excluded-sec-math.acos\"><h1><span class=\"secnum\">20.3.2.2</span>#sec-math.acos Math.acos ( x )</h1>...</div><div id=\"excluded-sec-math.acosh\"><h1><span class=\"secnum\">20.3.2.3</span>#sec-math.acosh Math.acosh ( x )</h1>...</div><div id=\"excluded-sec-math.asin\"><h1><span class=\"secnum\">20.3.2.4</span>#sec-math.asin Math.asin ( x )</h1>...</div><div id=\"excluded-sec-math.asinh\"><h1><span class=\"secnum\">20.3.2.5</span>#sec-math.asinh Math.asinh ( x )</h1>...</div><div id=\"excluded-sec-math.atan\"><h1><span class=\"secnum\">20.3.2.6</span>#sec-math.atan Math.atan ( x )</h1>...</div><div id=\"excluded-sec-math.atanh\"><h1><span class=\"secnum\">20.3.2.7</span>#sec-math.atanh Math.atanh ( x )</h1>...</div><div id=\"excluded-sec-math.atan2\"><h1><span class=\"secnum\">20.3.2.8</span>#sec-math.atan2 Math.atan2 ( y, x )</h1>...</div><div id=\"excluded-sec-math.cbrt\"><h1><span class=\"secnum\">20.3.2.9</span>#sec-math.cbrt Math.cbrt ( x )</h1>...</div><div id=\"excluded-sec-math.ceil\"><h1><span class=\"secnum\">20.3.2.10</span>#sec-math.ceil Math.ceil ( x )</h1>...</div><div id=\"excluded-sec-math.clz32\"><h1><span class=\"secnum\">20.3.2.11</span>#sec-math.clz32 Math.clz32 ( x )</h1>...</div><div id=\"excluded-sec-math.cos\"><h1><span class=\"secnum\">20.3.2.12</span>#sec-math.cos Math.cos ( x )</h1>...</div><div id=\"excluded-sec-math.cosh\"><h1><span class=\"secnum\">20.3.2.13</span>#sec-math.cosh Math.cosh ( x )</h1>...</div><div id=\"excluded-sec-math.exp\"><h1><span class=\"secnum\">20.3.2.14</span>#sec-math.exp Math.exp ( x )</h1>...</div><div id=\"excluded-sec-math.expm1\"><h1><span class=\"secnum\">20.3.2.15</span>#sec-math.expm1 Math.expm1 ( x )</h1>...</div><div id=\"excluded-sec-math.floor\"><h1><span class=\"secnum\">20.3.2.16</span>#sec-math.floor Math.floor ( x )</h1>...</div><div id=\"excluded-sec-math.fround\"><h1><span class=\"secnum\">20.3.2.17</span>#sec-math.fround Math.fround ( x )</h1>...</div><div id=\"excluded-sec-math.hypot\"><h1><span class=\"secnum\">20.3.2.18</span>#sec-math.hypot Math.hypot ( ...values )</h1>...</div><div id=\"excluded-sec-math.imul\"><h1><span class=\"secnum\">20.3.2.19</span>#sec-math.imul Math.imul ( x, y )</h1>...</div><div id=\"excluded-sec-math.log\"><h1><span class=\"secnum\">20.3.2.20</span>#sec-math.log Math.log ( x )</h1>...</div><div id=\"excluded-sec-math.log1p\"><h1><span class=\"secnum\">20.3.2.21</span>#sec-math.log1p Math.log1p ( x )</h1>...</div><div id=\"excluded-sec-math.log10\"><h1><span class=\"secnum\">20.3.2.22</span>#sec-math.log10 Math.log10 ( x )</h1>...</div><div id=\"excluded-sec-math.log2\"><h1><span class=\"secnum\">20.3.2.23</span>#sec-math.log2 Math.log2 ( x )</h1>...</div><div id=\"excluded-sec-math.max\"><h1><span class=\"secnum\">20.3.2.24</span>#sec-math.max Math.max ( ...values )</h1>...</div><div id=\"excluded-sec-math.min\"><h1><span class=\"secnum\">20.3.2.25</span>#sec-math.min Math.min ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.pow\"><h1><span class=\"secnum\">20.3.2.26</span>#sec-math.pow Math.pow ( base, exponent )</h1>...</div><div id=\"excluded-sec-math.random\"><h1><span class=\"secnum\">20.3.2.27</span>#sec-math.random Math.random ( )</h1>...</div><div id=\"excluded-sec-math.round\"><h1><span class=\"secnum\">20.3.2.28</span>#sec-math.round Math.round ( x )</h1>...</div><div id=\"excluded-sec-math.sign\"><h1><span class=\"secnum\">20.3.2.29</span>#sec-math.sign Math.sign ( x )</h1>...</div><div id=\"excluded-sec-math.sin\"><h1><span class=\"secnum\">20.3.2.30</span>#sec-math.sin Math.sin ( x )</h1>...</div><div id=\"excluded-sec-math.sinh\"><h1><span class=\"secnum\">20.3.2.31</span>#sec-math.sinh Math.sinh ( x )</h1>...</div><div id=\"excluded-sec-math.sqrt\"><h1><span class=\"secnum\">20.3.2.32</span>#sec-math.sqrt Math.sqrt ( x )</h1>...</div><div id=\"excluded-sec-math.tan\"><h1><span class=\"secnum\">20.3.2.33</span>#sec-math.tan Math.tan ( x )</h1>...</div><div id=\"excluded-sec-math.tanh\"><h1><span class=\"secnum\">20.3.2.34</span>#sec-math.tanh Math.tanh ( x )</h1>...</div><div id=\"excluded-sec-math.trunc\"><h1><span class=\"secnum\">20.3.2.35</span>#sec-math.trunc Math.trunc ( x )</h1>...</div></emu-clause>\n  "}, "sec-promise.any": {"num": "26.6.4.3", "title": "#sec-promise.any Promise.any ( iterable )", "html": "<emu-clause id=\"sec-promise.any\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.any\">#sec-promise.any</span> Promise.any ( <var>iterable</var> )</h1>\n        <p>The <code>any</code> function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an <code>AggregateError</code> holding the rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>promiseResolve</var> be <emu-xref aoid=\"GetPromiseResolve\"><a href=\"#sec-getpromiseresolve\">GetPromiseResolve</a></emu-xref>(<var>C</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>promiseResolve</var>, <var>promiseCapability</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAny\"><a href=\"#sec-performpromiseany\">PerformPromiseAny</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>, <var>promiseResolve</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>any</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseany\"><h1><span class=\"secnum\">26.6.4.3.1</span>#sec-performpromiseany Runtime Semantics: PerformPromiseAny ( iteratorRecord, constructor, resultCapability, promiseResolve )</h1>...</div><div id=\"excluded-sec-promise.any-reject-element-functions\"><h1><span class=\"secnum\">26.6.4.3.2</span>#sec-promise.any-reject-element-functions Promise.any Reject Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-math.round": {"num": "20.3.2.28", "title": "#sec-math.round Math.round ( x )", "html": "<emu-clause id=\"sec-math.round\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.round\">#sec-math.round</span> Math.round ( <var>x</var> )</h1>\n        <p>Returns the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closest to <var>x</var> and is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. If two integers are equally close to <var>x</var>, then the result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closer to <emu-val>+&#8734;</emu-val>. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, <var>n</var> is <emu-val>+0</emu-val>, <var>n</var> is <emu-val>+&#8734;</emu-val>, or <var>n</var> is <emu-val>-&#8734;</emu-val>, return <var>n</var>.</li><li>If <var>n</var> &gt; 0 and <var>n</var> &lt; 0.5, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> &lt; 0 and <var>n</var> &lt;= -0.5, return <emu-val>-0</emu-val>.</li><li>Let <var>r</var> be <var>n</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 1.</li><li>Let <var>v</var> be <var>n</var> - <var>r</var>.</li><li>If <var>r</var> is 0, return <var>v</var>.</li><li>If <var>r</var> &gt;= -0.5 and <var>r</var> &lt; 0, return <var>v</var>.</li><li>If <var>r</var> &lt; 0.5 and <var>r</var> &gt; 0, return <var>v</var>.</li><li>If <var>r</var> &lt; -0.5, return <var>v</var> - 1.</li><li>Return <var>v</var> + 1.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>Math.round(3.5)</code> returns 4, but <code>Math.round(-3.5)</code> returns -3.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The value of <code>Math.round(x)</code> is not always the same as the value of <code>Math.floor(x + 0.5)</code>. When <code>x</code> is <emu-val>-0</emu-val> or is less than 0 but greater than or equal to -0.5, <code>Math.round(x)</code> returns <emu-val>-0</emu-val>, but <code>Math.floor(x + 0.5)</code> returns <emu-val>+0</emu-val>. <code>Math.round(x)</code> may also differ from the value of <code>Math.floor(x + 0.5)</code>because of internal rounding when computing <code>x + 0.5</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-proxy-constructor": {"num": "27.2.1", "title": "#sec-proxy-constructor The Proxy Constructor", "html": "<emu-clause id=\"sec-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</span> The Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Proxy%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Proxy\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy-target-handler\"><h1><span class=\"secnum\">27.2.1.1</span>#sec-proxy-target-handler Proxy ( target, handler )</h1>...</div></emu-clause>\n\n    "}, "sec-math.trunc": {"num": "20.3.2.35", "title": "#sec-math.trunc Math.trunc ( x )", "html": "<emu-clause id=\"sec-math.trunc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.trunc\">#sec-math.trunc</span> Math.trunc ( <var>x</var> )</h1>\n        <p>Returns the integral part of the number <var>x</var>, removing any fractional digits. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, <var>n</var> is <emu-val>+0</emu-val>, <var>n</var> is <emu-val>+&#8734;</emu-val>, or <var>n</var> is <emu-val>-&#8734;</emu-val>, return <var>n</var>.</li><li>If <var>n</var> &gt; 0 and <var>n</var> &lt; 1, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> &lt; 0 and <var>n</var> &lt;= -1, return <emu-val>-0</emu-val>.</li><li>Let <var>r</var> be <var>n</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> 1.</li><li>Return <var>n</var> - <var>r</var>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-math.atan2": {"num": "20.3.2.8", "title": "#sec-math.atan2 Math.atan2 ( y, x )", "html": "<emu-clause id=\"sec-math.atan2\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atan2\">#sec-math.atan2</span> Math.atan2 ( <var>y</var>, <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc tangent of the quotient <emu-eqn class=\"inline\"><var>y</var> / <var>x</var></emu-eqn> of the arguments <var>y</var> and <var>x</var>, where the signs of <var>y</var> and <var>x</var> are used to determine the quadrant of the result. Note that it is intentional and traditional for the two-argument arc tangent function that the argument named <var>y</var> be first and the argument named <var>x</var> be second. The result is expressed in radians and ranges from -&#960; to +&#960;.</p>\n        <emu-alg><ol><li>Let <var>ny</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>Let <var>nx</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>ny</var> is <emu-val>NaN</emu-val> or <var>nx</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>ny</var> &gt; 0, then<ol><li>If <var>nx</var> is <emu-val>+0</emu-val> or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li></ol></li><li>If <var>ny</var> is <emu-val>+0</emu-val>, then<ol><li>If <var>nx</var> &gt; 0 or <var>nx</var> is <emu-val>+0</emu-val>, return <emu-val>-0</emu-val>.</li><li>If <var>nx</var> &lt; 0 or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.</li></ol></li><li>If <var>ny</var> is <emu-val>-0</emu-val>, then<ol><li>If <var>nx</var> &gt; 0 or <var>nx</var> is <emu-val>+0</emu-val>, return <emu-val>-0</emu-val>.</li><li>If <var>nx</var> &lt; 0 or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.</li></ol></li><li>If <var>ny</var> &lt; 0, then<ol><li>If <var>nx</var> is <emu-val>+0</emu-val> or <var>nx</var> is <emu-val>-0</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li></ol></li><li>If <var>ny</var> &gt; 0 and <var>ny</var> is finite, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960;.</li></ol></li><li>If <var>ny</var> &lt; 0 and <var>ny</var> is finite, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>-0</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960;.</li></ol></li><li>If <var>nx</var> is finite, then<ol><li>If <var>ny</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li><li>If <var>ny</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li></ol></li><li>If <var>ny</var> is <emu-val>+&#8734;</emu-val>, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 4.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +3&#960; / 4.</li></ol></li><li>If <var>ny</var> is <emu-val>-&#8734;</emu-val>, then<ol><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 4.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -3&#960; / 4.</li></ol></li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc tangent of the quotient <var>ny</var> / <var>nx</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-abstract-operations-for-the-memory-model": {"num": "28.5", "title": "#sec-abstract-operations-for-the-memory-model Abstract Operations for the Memory Model", "html": "<emu-clause id=\"sec-abstract-operations-for-the-memory-model\" oldids=\"sec-synchronizeeventset\">\n    <span id=\"sec-synchronizeeventset\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-the-memory-model\">#sec-abstract-operations-for-the-memory-model</span> Abstract Operations for the Memory Model</h1>\n    <div id=\"excluded-sec-event-set\"><h1><span class=\"secnum\">28.5.1</span>#sec-event-set EventSet ( execution )</h1>...</div><div id=\"excluded-sec-sharedatablockeventset\"><h1><span class=\"secnum\">28.5.2</span>#sec-sharedatablockeventset SharedDataBlockEventSet ( execution )</h1>...</div><div id=\"excluded-sec-hosteventset\"><h1><span class=\"secnum\">28.5.3</span>#sec-hosteventset HostEventSet ( execution )</h1>...</div><div id=\"excluded-sec-composewriteeventbytes\"><h1><span class=\"secnum\">28.5.4</span>#sec-composewriteeventbytes ComposeWriteEventBytes ( execution, byteIndex, Ws )</h1>...</div><div id=\"excluded-sec-valueofreadevent\"><h1><span class=\"secnum\">28.5.5</span>#sec-valueofreadevent ValueOfReadEvent ( execution, R )</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgenerator-objects": {"num": "26.5", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the value of the <emu-val>\"prototype\"</emu-val> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGenerator.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">26.5.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">26.5.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">26.5.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-promise.prototype.then": {"num": "26.6.5.4", "title": "#sec-promise.prototype.then Promise.prototype.then ( onFulfilled, onRejected )", "html": "<emu-clause id=\"sec-promise.prototype.then\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</span> Promise.prototype.then ( <var>onFulfilled</var>, <var>onRejected</var> )</h1>\n        <p>When the <code>then</code> method is called with arguments <var>onFulfilled</var> and <var>onRejected</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsPromise\"><a href=\"#sec-ispromise\">IsPromise</a></emu-xref>(<var>promise</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li>Let <var>resultCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Return <emu-xref aoid=\"PerformPromiseThen\"><a href=\"#sec-performpromisethen\">PerformPromiseThen</a></emu-xref>(<var>promise</var>, <var>onFulfilled</var>, <var>onRejected</var>, <var>resultCapability</var>).</li></ol></emu-alg>\n        <p>This function is the <dfn>%PromiseProto_then%</dfn> intrinsic object.</p>\n\n        <div id=\"excluded-sec-performpromisethen\"><h1><span class=\"secnum\">26.6.5.4.1</span>#sec-performpromisethen PerformPromiseThen ( promise, onFulfilled, onRejected [ , resultCapability ] )</h1>...</div></emu-clause>\n\n      "}, "sec-proxy-objects": {"num": "27.2", "title": "#sec-proxy-objects Proxy Objects", "html": "<emu-clause id=\"sec-proxy-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-objects\">#sec-proxy-objects</span> Proxy Objects</h1>\n\n    <div id=\"excluded-sec-proxy-constructor\"><h1><span class=\"secnum\">27.2.1</span>#sec-proxy-constructor The Proxy Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-proxy-constructor\"><h1><span class=\"secnum\">27.2.2</span>#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor</h1>...</div></emu-clause>\n\n  "}, "sec-math.sinh": {"num": "20.3.2.31", "title": "#sec-math.sinh Math.sinh ( x )", "html": "<emu-clause id=\"sec-math.sinh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sinh\">#sec-math.sinh</span> Math.sinh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the hyperbolic sine of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, <var>n</var> is <emu-val>+0</emu-val>, <var>n</var> is <emu-val>+&#8734;</emu-val>, or <var>n</var> is <emu-val>-&#8734;</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the hyperbolic sine of <var>n</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.sinh(x)</code> is the same as the value of <code>(Math.exp(x) - Math.exp(-x)) / 2</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "26.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%Generator%</dfn> (see <emu-xref href=\"#figure-2\"><a href=\"#figure-2\" class=\"excluded-xref\" excluded-id=\"figure-2\">#figure-2</a></emu-xref>).</li>\n        <li>is <dfn>%GeneratorFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">26.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">26.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">26.2.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-objects": {"num": "26.3", "title": "#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-objects\">#sec-asyncgeneratorfunction-objects</span> AsyncGeneratorFunction Objects</h1>\n    <p>AsyncGeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, and <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> syntactic productions. They may also be created by calling the <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-asyncgeneratorfunction-constructor\"><h1><span class=\"secnum\">26.3.1</span>#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction\"><h1><span class=\"secnum\">26.3.2</span>#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">26.3.3</span>#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instances\"><h1><span class=\"secnum\">26.3.4</span>#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-regexp.prototype.compile": {"num": "B.2.5.1", "title": "#sec-regexp.prototype.compile RegExp.prototype.compile ( pattern, flags )", "html": "<emu-annex id=\"sec-regexp.prototype.compile\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype.compile\">#sec-regexp.prototype.compile</span> RegExp.prototype.compile ( <var>pattern</var>, <var>flags</var> )</h1>\n        <p>When the <code>compile</code> method is called with arguments <var>pattern</var> and <var>flags</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[RegExpMatcher]]).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>pattern</var>) is Object and <var>pattern</var> has a [[RegExpMatcher]] internal slot, then<ol><li>If <var>flags</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>P</var> be <var>pattern</var>.[[OriginalSource]].</li><li>Let <var>F</var> be <var>pattern</var>.[[OriginalFlags]].</li></ol></li><li>Else,<ol><li>Let <var>P</var> be <var>pattern</var>.</li><li>Let <var>F</var> be <var>flags</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"RegExpInitialize\"><a href=\"#sec-regexpinitialize\">RegExpInitialize</a></emu-xref>(<var>O</var>, <var>P</var>, <var>F</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>compile</code> method completely reinitializes the <emu-val>this</emu-val> value RegExp with a new pattern and flags. An implementation may interpret use of this method as an assertion that the resulting RegExp object will be used multiple times and hence is a candidate for extra optimization.</p>\n        </div></emu-note>\n      </emu-annex>\n    "}, "sec-ecmascript-standard-built-in-objects": {"num": "17", "title": "#sec-ecmascript-standard-built-in-objects ECMAScript Standard Built-in Objects", "html": "<emu-clause id=\"sec-ecmascript-standard-built-in-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-standard-built-in-objects\">#sec-ecmascript-standard-built-in-objects</span> ECMAScript Standard Built-in Objects</h1>\n  <p>There are certain built-in objects available whenever an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> or <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> begins execution. One, the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, is part of the <emu-xref href=\"#global-environment\"><a href=\"https://tc39.es/ecma262/#global-environment\">global environment</a></emu-xref> of the executing program. Others are accessible as initial properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> or indirectly as properties of accessible built-in objects.</p>\n  <p>Unless specified otherwise, a built-in object that is callable as a function is a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> with the characteristics described in <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>. Unless specified otherwise, the [[Extensible]] internal slot of a built-in object initially has the value <emu-val>true</emu-val>. Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has a [[Realm]] internal slot whose value is the <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> of the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> for which the object was initially created.</p>\n  <p>Many built-in objects are functions: they can be invoked with arguments. Some of them furthermore are constructors: they are functions intended for use with the <code>new</code> operator. For each built-in function, this specification describes the arguments required by that function and the properties of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. For each built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, this specification furthermore describes properties of the prototype object of that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> and properties of specific object instances returned by a <code>new</code> expression that invokes that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is given fewer arguments than the function is specified to require, the function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> shall behave exactly as if it had been given sufficient additional arguments, each such argument being the <emu-val>undefined</emu-val> value. Such missing arguments are considered to be &#8220;not present&#8221; and may be identified in that manner by specification algorithms. In the description of a particular function, the terms &#8220;<emu-val>this</emu-val> value&#8221; and &#8220;NewTarget&#8221; have the meanings given in <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> described is given more arguments than the function is specified to allow, the extra arguments are evaluated by the call and then ignored by the function. However, an implementation may define implementation specific behaviour relating to such arguments as long as the behaviour is not the throwing of a <emu-val>TypeError</emu-val> exception that is predicated simply on the presence of an extra argument.</p>\n  <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n    <p>Implementations that add additional capabilities to the set of built-in functions are encouraged to do so by adding new functions rather than adding new parameters to existing functions.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified every built-in function and every built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has the Function prototype object, which is the initial value of the expression <code>Function.prototype</code> (<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot.</p>\n  <p>Unless otherwise specified every built-in prototype object has the Object prototype object, which is the initial value of the expression <code>Object.prototype</code> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot, except the Object prototype object itself.</p>\n  <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function.</p>\n  <p>Each built-in function defined in this specification is created by calling the <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref> abstract operation (<emu-xref href=\"#sec-createbuiltinfunction\"><a href=\"#sec-createbuiltinfunction\" class=\"excluded-xref\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</a></emu-xref>).</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, has a <emu-val>\"length\"</emu-val> property whose value is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. Unless otherwise specified, this value is equal to the largest number of named arguments shown in the subclause headings for the function description. Optional parameters (which are indicated with brackets: <code>[</code> <code>]</code>) or rest parameters (which are shown using the form &#171;...name&#187;) are not included in the default argument count.</p>\n  <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n    <p>For example, the <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of the <emu-val>\"map\"</emu-val> property of the Array prototype object is described under the subclause heading &#171;Array.prototype.map (callbackFn [ , thisArg])&#187; which shows the two named arguments callbackFn and thisArg, the latter being optional; therefore the value of the <emu-val>\"length\"</emu-val> property of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is 1.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified, the <emu-val>\"length\"</emu-val> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, has a <emu-val>\"name\"</emu-val> property whose value is a String. Unless otherwise specified, this value is the name that is given to the function in this specification. Functions that are identified as anonymous functions use the empty String as the value of the <emu-val>\"name\"</emu-val> property. For functions that are specified as properties of objects, the name value is the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string used to access the function. Functions that are specified as get or set accessor functions of built-in properties have <emu-val>\"get \"</emu-val> or <emu-val>\"set \"</emu-val> prepended to the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string. The value of the <emu-val>\"name\"</emu-val> property is explicitly specified for each built-in functions whose property key is a Symbol value. The <emu-val>\"name\"</emu-val> property is set using <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>.</p>\n  <p>Unless otherwise specified, the <emu-val>\"name\"</emu-val> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every other <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> described in clauses 18 through 26 and in Annex <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified.</p>\n  <p>Every <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> described in clauses 18 through 26 and in Annex <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified. If only a get accessor function is described, the set accessor function is the default value, <emu-val>undefined</emu-val>. If only a set accessor is described the get accessor is the default value, <emu-val>undefined</emu-val>.</p>\n</emu-clause>\n\n"}, "sec-function.prototype.tostring": {"num": "19.2.3.5", "title": "#sec-function.prototype.tostring Function.prototype.toString ( )", "html": "<emu-clause id=\"sec-function.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.tostring\">#sec-function.prototype.tostring</span> Function.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>func</var> be the <emu-val>this</emu-val> value.</li><li>If <var>func</var> is a <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\">built-in function object</a></emu-xref>, then return an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>. Additionally, if <var>func</var> has an [[InitialName]] internal slot and <var>func</var>.[[InitialName]] is a String, the portion of the returned String that would be matched by <emu-nt optional=\"\"><a href=\"#prod-NativeFunctionAccessor\">NativeFunctionAccessor</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt> must be the value of <var>func</var>.[[InitialName]].</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <var>func</var> has a [[SourceText]] internal slot and <var>func</var>.[[SourceText]] is a sequence of Unicode code points and !&#160;<emu-xref aoid=\"HostHasSourceTextAvailable\"><a href=\"#sec-hosthassourcetextavailable\">HostHasSourceTextAvailable</a></emu-xref>(<var>func</var>) is <emu-val>true</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"UTF16Encode\"><a href=\"#sec-utf16encode\">UTF16Encode</a></emu-xref>(<var>func</var>.[[SourceText]]).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>func</var>) is <emu-val>true</emu-val>, then return an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n\n        <emu-grammar type=\"definition\"><emu-production name=\"NativeFunction\" id=\"prod-NativeFunction\">\n    <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"959625bf\"><emu-t>function</emu-t><emu-nt optional=\"\"><a href=\"#prod-NativeFunctionAccessor\">NativeFunctionAccessor</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-t>[</emu-t><emu-t>native</emu-t><emu-t>code</emu-t><emu-t>]</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NativeFunctionAccessor\" id=\"prod-NativeFunctionAccessor\">\n    <emu-nt><a href=\"#prod-NativeFunctionAccessor\">NativeFunctionAccessor</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3d88de52\"><emu-t>get</emu-t></emu-rhs>\n    <emu-rhs a=\"c9970c11\"><emu-t>set</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "26.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"GeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">26.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">26.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "26.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is <dfn>%AsyncGenerator%</dfn>.</li>\n        <li>is <dfn>%AsyncGeneratorFunction.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">26.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">26.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">26.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-math.sign": {"num": "20.3.2.29", "title": "#sec-math.sign Math.sign ( x )", "html": "<emu-clause id=\"sec-math.sign\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sign\">#sec-math.sign</span> Math.sign ( <var>x</var> )</h1>\n        <p>Returns the sign of <var>x</var>, indicating whether <var>x</var> is positive, negative, or zero.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, or <var>n</var> is <emu-val>+0</emu-val>, return <var>n</var>.</li><li>If <var>n</var> &lt; 0, return -1.</li><li>Return +1.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.atan": {"num": "20.3.2.6", "title": "#sec-math.atan Math.atan ( x )", "html": "<emu-clause id=\"sec-math.atan\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.atan\">#sec-math.atan</span> Math.atan ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc tangent of <var>x</var>. The result is expressed in radians and ranges from -&#960; / 2 to +&#960; / 2.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val> or <var>n</var> is <emu-val>-0</emu-val>, return <var>n</var>.</li><li>If <var>n</var> is <emu-val>+&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing +&#960; / 2.</li><li>If <var>n</var> is <emu-val>-&#8734;</emu-val>, return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing -&#960; / 2.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the arc tangent of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-math.asinh": {"num": "20.3.2.5", "title": "#sec-math.asinh Math.asinh ( x )", "html": "<emu-clause id=\"sec-math.asinh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.asinh\">#sec-math.asinh</span> Math.asinh ( <var>x</var> )</h1>\n        <p>Returns an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic sine of <var>x</var>.</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>If <var>n</var> is <emu-val>+0</emu-val>, <var>n</var> is <emu-val>-0</emu-val>, <var>n</var> is <emu-val>+&#8734;</emu-val>, or <var>n</var> is <emu-val>-&#8734;</emu-val>, return <var>n</var>.</li><li>Return an <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref> value representing the result of the inverse hyperbolic sine of <var>n</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-weakset-objects": {"num": "23.4", "title": "#sec-weakset-objects WeakSet Objects", "html": "<emu-clause id=\"sec-weakset-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-objects\">#sec-weakset-objects</span> WeakSet Objects</h1>\n    <p>WeakSet objects are collections of objects. A distinct object may only occur once as an element of a WeakSet's collection. A WeakSet may be queried to see if it contains a specific object, but no mechanism is provided for enumerating the objects it holds. In certain conditions, objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> are removed as WeakSet elements, as described in <emu-xref href=\"#sec-weakref-execution\"><a href=\"#sec-weakref-execution\" class=\"excluded-xref\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</a></emu-xref>.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time an object contained in a WeakSet becomes inaccessible and the time when the object is removed from the WeakSet. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to determine if a WeakSet contains a particular object that does not require the observer to present the observed object.</p>\n    <p>WeakSet objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this WeakSet objects specification is only intended to describe the required observable semantics of WeakSet objects. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>See the NOTE in <emu-xref href=\"#sec-weakmap-objects\"><a href=\"#sec-weakmap-objects\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakset-constructor\"><h1><span class=\"secnum\">23.4.1</span>#sec-weakset-constructor The WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-constructor\"><h1><span class=\"secnum\">23.4.2</span>#sec-properties-of-the-weakset-constructor Properties of the WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-prototype-object\"><h1><span class=\"secnum\">23.4.3</span>#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakset-instances\"><h1><span class=\"secnum\">23.4.4</span>#sec-properties-of-weakset-instances Properties of WeakSet Instances</h1>...</div></emu-clause>\n"}, "sec-generatorfunction-objects": {"num": "26.2", "title": "#sec-generatorfunction-objects GeneratorFunction Objects", "html": "<emu-clause id=\"sec-generatorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-objects\">#sec-generatorfunction-objects</span> GeneratorFunction Objects</h1>\n    <p>GeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>s, and <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref> intrinsic.</p>\n    <emu-figure id=\"figure-2\" caption=\"Generator Objects Relationships\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-2\">#figure-2</span> (Informative): Generator Objects Relationships</figcaption>\n      <img alt=\"A staggering variety of boxes and arrows.\" src=\"img/figure-2.png\">\n    </figure></emu-figure>\n\n    <div id=\"excluded-sec-generatorfunction-constructor\"><h1><span class=\"secnum\">26.2.1</span>#sec-generatorfunction-constructor The GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-constructor\"><h1><span class=\"secnum\">26.2.2</span>#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-prototype-object\"><h1><span class=\"secnum\">26.2.3</span>#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-generatorfunction-instances\"><h1><span class=\"secnum\">26.2.4</span>#sec-generatorfunction-instances GeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-executable-code-and-execution-contexts": {"num": "8", "title": "#sec-executable-code-and-execution-contexts Executable Code and Execution Contexts", "html": "<emu-clause id=\"sec-executable-code-and-execution-contexts\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-executable-code-and-execution-contexts\">#sec-executable-code-and-execution-contexts</span> Executable Code and Execution Contexts</h1>\n\n  <div id=\"excluded-sec-environment-records\"><h1><span class=\"secnum\">8.1</span>#sec-environment-records Environment Records</h1>...</div><div id=\"excluded-sec-code-realms\"><h1><span class=\"secnum\">8.2</span>#sec-code-realms Realms</h1>...</div><div id=\"excluded-sec-execution-contexts\"><h1><span class=\"secnum\">8.3</span>#sec-execution-contexts Execution Contexts</h1>...</div><div id=\"excluded-sec-jobs\"><h1><span class=\"secnum\">8.4</span>#sec-jobs Jobs and Host Operations to Enqueue Jobs</h1>...</div><div id=\"excluded-sec-initializehostdefinedrealm\"><h1><span class=\"secnum\">8.5</span>#sec-initializehostdefinedrealm InitializeHostDefinedRealm ( )</h1>...</div><div id=\"excluded-sec-agents\"><h1><span class=\"secnum\">8.6</span>#sec-agents Agents</h1>...</div><div id=\"excluded-sec-agent-clusters\"><h1><span class=\"secnum\">8.7</span>#sec-agent-clusters Agent Clusters</h1>...</div><div id=\"excluded-sec-forward-progress\"><h1><span class=\"secnum\">8.8</span>#sec-forward-progress Forward Progress</h1>...</div><div id=\"excluded-sec-weakref-processing-model\"><h1><span class=\"secnum\">8.9</span>#sec-weakref-processing-model Processing model of WeakRef and FinalizationRegistry objects</h1>...</div><div id=\"excluded-sec-clear-kept-objects\"><h1><span class=\"secnum\">8.10</span>#sec-clear-kept-objects ClearKeptObjects ( )</h1>...</div><div id=\"excluded-sec-addtokeptobjects\"><h1><span class=\"secnum\">8.11</span>#sec-addtokeptobjects AddToKeptObjects ( object )</h1>...</div><div id=\"excluded-sec-cleanup-finalization-registry\"><h1><span class=\"secnum\">8.12</span>#sec-cleanup-finalization-registry CleanupFinalizationRegistry ( finalizationRegistry )</h1>...</div></emu-clause>\n\n"}, "sec-control-abstraction-objects": {"num": "26", "title": "#sec-control-abstraction-objects Control Abstraction Objects", "html": "<emu-clause id=\"sec-control-abstraction-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-control-abstraction-objects\">#sec-control-abstraction-objects</span> Control Abstraction Objects</h1>\n\n  <div id=\"excluded-sec-iteration\"><h1><span class=\"secnum\">26.1</span>#sec-iteration Iteration</h1>...</div><div id=\"excluded-sec-generatorfunction-objects\"><h1><span class=\"secnum\">26.2</span>#sec-generatorfunction-objects GeneratorFunction Objects</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-objects\"><h1><span class=\"secnum\">26.3</span>#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects</h1>...</div><div id=\"excluded-sec-generator-objects\"><h1><span class=\"secnum\">26.4</span>#sec-generator-objects Generator Objects</h1>...</div><div id=\"excluded-sec-asyncgenerator-objects\"><h1><span class=\"secnum\">26.5</span>#sec-asyncgenerator-objects AsyncGenerator Objects</h1>...</div><div id=\"excluded-sec-promise-objects\"><h1><span class=\"secnum\">26.6</span>#sec-promise-objects Promise Objects</h1>...</div><div id=\"excluded-sec-async-function-objects\"><h1><span class=\"secnum\">26.7</span>#sec-async-function-objects AsyncFunction Objects</h1>...</div></emu-clause>\n\n"}, "sec-asynciteratorprototype": {"num": "26.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">26.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgenerator-abstract-operations": {"num": "26.5.3", "title": "#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations", "html": "<emu-clause id=\"sec-asyncgenerator-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-abstract-operations\">#sec-asyncgenerator-abstract-operations</span> AsyncGenerator Abstract Operations</h1>\n      <div id=\"excluded-sec-asyncgeneratorrequest-records\"><h1><span class=\"secnum\">26.5.3.1</span>#sec-asyncgeneratorrequest-records AsyncGeneratorRequest Records</h1>...</div><div id=\"excluded-sec-asyncgeneratorstart\"><h1><span class=\"secnum\">26.5.3.2</span>#sec-asyncgeneratorstart AsyncGeneratorStart ( generator, generatorBody )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresolve\"><h1><span class=\"secnum\">26.5.3.3</span>#sec-asyncgeneratorresolve AsyncGeneratorResolve ( generator, value, done )</h1>...</div><div id=\"excluded-sec-asyncgeneratorreject\"><h1><span class=\"secnum\">26.5.3.4</span>#sec-asyncgeneratorreject AsyncGeneratorReject ( generator, exception )</h1>...</div><div id=\"excluded-sec-asyncgeneratorresumenext\"><h1><span class=\"secnum\">26.5.3.5</span>#sec-asyncgeneratorresumenext AsyncGeneratorResumeNext ( generator )</h1>...</div><div id=\"excluded-sec-asyncgeneratorenqueue\"><h1><span class=\"secnum\">26.5.3.6</span>#sec-asyncgeneratorenqueue AsyncGeneratorEnqueue ( generator, completion )</h1>...</div><div id=\"excluded-sec-asyncgeneratoryield\"><h1><span class=\"secnum\">26.5.3.7</span>#sec-asyncgeneratoryield AsyncGeneratorYield ( value )</h1>...</div></emu-clause>\n  "}, "sec-promisecapability-records": {"num": "26.6.1.1", "title": "#sec-promisecapability-records PromiseCapability Records", "html": "<emu-clause id=\"sec-promisecapability-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promisecapability-records\">#sec-promisecapability-records</span> PromiseCapability Records</h1>\n        <p>A <dfn>PromiseCapability Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value used to encapsulate a promise object along with the functions that are capable of resolving or rejecting that promise object. PromiseCapability Records are produced by the <emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref> abstract operation.</p>\n        <p>PromiseCapability Records have the fields listed in <emu-xref href=\"#table-57\"><a href=\"#table-57\" class=\"excluded-xref\" excluded-id=\"table-57\">#table-57</a></emu-xref>.</p>\n        <emu-table id=\"table-57\" caption=\"PromiseCapability Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-57\">#table-57</span>: <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Promise]]\n              </td>\n              <td>\n                An object\n              </td>\n              <td>\n                An object that is usable as a promise.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Resolve]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to resolve the given promise object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Reject]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to reject the given promise object.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-ifabruptrejectpromise\"><h1><span class=\"secnum\">26.6.1.1.1</span>#sec-ifabruptrejectpromise IfAbruptRejectPromise ( value, capability )</h1>...</div></emu-clause>\n\n      "}}, "figData": {"figure-2": "Figure 5", "table-2": "Table 3", "table-5": "Table 6", "table-7": "Table 8", "table-agent-record": "Table 26", "table-27": "Table 27", "table-56": "Table 73", "table-internal-slots-of-asyncgenerator-instances": "Table 74", "table-57": "Table 76"}}}