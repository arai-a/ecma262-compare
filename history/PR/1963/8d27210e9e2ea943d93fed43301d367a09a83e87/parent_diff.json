{"from": {"secList": ["sec-stringgetownproperty"], "secData": {"sec-stringgetownproperty": {"num": "9.4.3.5", "title": "#sec-stringgetownproperty StringGetOwnProperty ( S, P )", "html": "<emu-clause id=\"sec-stringgetownproperty\" aoid=\"StringGetOwnProperty\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-stringgetownproperty\">#sec-stringgetownproperty</span> StringGetOwnProperty ( <var>S</var>, <var>P</var> )</h1>\n        <p>The abstract operation StringGetOwnProperty takes arguments <var>S</var> and <var>P</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>S</var> is an Object that has a [[StringData]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is not String, return <emu-val>undefined</emu-val>.</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>index</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>index</var> = <emu-val>-0</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>str</var> be <var>S</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>str</var>) is String.</li><li>Let <var>len</var> be the length of <var>str</var>.</li><li>If <var>index</var> &lt; 0 or <var>len</var> &#8804; <var>index</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>resultStr</var> be the String value of length 1, containing one code unit from <var>str</var>, specifically the code unit at index <var>index</var>.</li><li>Return the PropertyDescriptor { [[Value]]: <var>resultStr</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}}, "figData": {}}, "to": {"secList": ["sec-stringgetownproperty"], "secData": {"sec-stringgetownproperty": {"num": "9.4.3.5", "title": "#sec-stringgetownproperty StringGetOwnProperty ( S, P )", "html": "<emu-clause id=\"sec-stringgetownproperty\" aoid=\"StringGetOwnProperty\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-stringgetownproperty\">#sec-stringgetownproperty</span> StringGetOwnProperty ( <var>S</var>, <var>P</var> )</h1>\n        <p>The abstract operation StringGetOwnProperty takes arguments <var>S</var> and <var>P</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>S</var> is an Object that has a [[StringData]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is not String, return <emu-val>undefined</emu-val>.</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"CanonicalNumericIndexString\"><a href=\"#sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a></emu-xref>(<var>P</var>).</li><li>If <var>index</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>index</var> is <emu-val>-0</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>str</var> be <var>S</var>.[[StringData]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>str</var>) is String.</li><li>Let <var>len</var> be the length of <var>str</var>.</li><li>If <var>index</var> &lt; 0 or <var>len</var> &#8804; <var>index</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>resultStr</var> be the String value of length 1, containing one code unit from <var>str</var>, specifically the code unit at index <var>index</var>.</li><li>Return the PropertyDescriptor { [[Value]]: <var>resultStr</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}}, "figData": {}}}