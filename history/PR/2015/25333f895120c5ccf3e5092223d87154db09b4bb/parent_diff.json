{"from": {"secList": ["sec-atomics.notify", "sec-atomics.store", "sec-abstract-operations-for-atomics", "sec-atomicload", "sec-validateatomicaccess", "sec-atomicreadmodifywrite", "sec-atomics.load", "sec-atomics.wait", "sec-atomics.compareexchange"], "secData": {"sec-atomics.notify": {"num": "24.4.12", "title": "#sec-atomics.notify Atomics.notify ( typedArray, index, count )", "html": "<emu-clause id=\"sec-atomics.notify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.notify\">#sec-atomics.notify</span> Atomics.notify ( <var>typedArray</var>, <var>index</var>, <var>count</var> )</h1>\n      <p><code>Atomics.notify</code> notifies some agents that are sleeping in the wait queue. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <var>count</var> is <emu-val>undefined</emu-val>, let <var>c</var> be <emu-val>+&#8734;</emu-val>.</li><li>Else,<ol><li>Let <var>intCount</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>count</var>).</li><li>Let <var>c</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>intCount</var>, 0).</li></ol></li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>false</emu-val>, return 0.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Let <var>n</var> be 0.</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>S</var> be <emu-xref aoid=\"RemoveWaiters\"><a href=\"#sec-removewaiters\">RemoveWaiters</a></emu-xref>(<var>WL</var>, <var>c</var>).</li><li>Repeat, while <var>S</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>,<ol><li>Let <var>W</var> be the first <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in <var>S</var>.</li><li>Remove <var>W</var> from the front of <var>S</var>.</li><li>Perform <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return <var>n</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-atomics.store": {"num": "24.4.9", "title": "#sec-atomics.store Atomics.store ( typedArray, index, value )", "html": "<emu-clause id=\"sec-atomics.store\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.store\">#sec-atomics.store</span> Atomics.store ( <var>typedArray</var>, <var>index</var>, <var>value</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>arrayTypeName</var> is <emu-val>\"BigUint64Array\"</emu-val> or <emu-val>\"BigInt64Array\"</emu-val>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref> or <emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref> on the preceding lines can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <emu-val>true</emu-val>, <emu-const>SeqCst</emu-const>).</li><li>Return <var>v</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-abstract-operations-for-atomics": {"num": "24.4.1", "title": "#sec-abstract-operations-for-atomics Abstract Operations for Atomics", "html": "<emu-clause id=\"sec-abstract-operations-for-atomics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-atomics\">#sec-abstract-operations-for-atomics</span> Abstract Operations for Atomics</h1>\n\n      <div id=\"excluded-sec-validateintegertypedarray\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-validateintegertypedarray ValidateIntegerTypedArray ( typedArray [ , waitable ] )</h1>...</div><div id=\"excluded-sec-validateatomicaccess\"><h1><span class=\"secnum\">24.4.1.2</span>#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )</h1>...</div><div id=\"excluded-sec-getwaiterlist\"><h1><span class=\"secnum\">24.4.1.3</span>#sec-getwaiterlist GetWaiterList ( block, i )</h1>...</div><div id=\"excluded-sec-entercriticalsection\"><h1><span class=\"secnum\">24.4.1.4</span>#sec-entercriticalsection EnterCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-leavecriticalsection\"><h1><span class=\"secnum\">24.4.1.5</span>#sec-leavecriticalsection LeaveCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-addwaiter\"><h1><span class=\"secnum\">24.4.1.6</span>#sec-addwaiter AddWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiter\"><h1><span class=\"secnum\">24.4.1.7</span>#sec-removewaiter RemoveWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiters\"><h1><span class=\"secnum\">24.4.1.8</span>#sec-removewaiters RemoveWaiters ( WL, c )</h1>...</div><div id=\"excluded-sec-suspend\"><h1><span class=\"secnum\">24.4.1.9</span>#sec-suspend Suspend ( WL, W, timeout )</h1>...</div><div id=\"excluded-sec-notifywaiter\"><h1><span class=\"secnum\">24.4.1.10</span>#sec-notifywaiter NotifyWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-atomicreadmodifywrite\"><h1><span class=\"secnum\">24.4.1.11</span>#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )</h1>...</div><div id=\"excluded-sec-atomicload\"><h1><span class=\"secnum\">24.4.1.12</span>#sec-atomicload AtomicLoad ( typedArray, index )</h1>...</div><div id=\"excluded-sec-bytelistbitwiseop\"><h1><span class=\"secnum\">24.4.1.13</span>#sec-bytelistbitwiseop ByteListBitwiseOp ( op, xBytes, yBytes )</h1>...</div><div id=\"excluded-sec-bytelistequal\"><h1><span class=\"secnum\">24.4.1.14</span>#sec-bytelistequal ByteListEqual ( xBytes, yBytes )</h1>...</div></emu-clause>\n\n    "}, "sec-atomicload": {"num": "24.4.1.12", "title": "#sec-atomicload AtomicLoad ( typedArray, index )", "html": "<emu-clause id=\"sec-atomicload\" aoid=\"AtomicLoad\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomicload\">#sec-atomicload</span> AtomicLoad ( <var>typedArray</var>, <var>index</var> )</h1>\n        <p>The abstract operation AtomicLoad takes arguments <var>typedArray</var> and <var>index</var>. It atomically loads a value and returns the loaded value. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref> on the preceding line can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>SeqCst</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-validateatomicaccess": {"num": "24.4.1.2", "title": "#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )", "html": "<emu-clause id=\"sec-validateatomicaccess\" aoid=\"ValidateAtomicAccess\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validateatomicaccess\">#sec-validateatomicaccess</span> ValidateAtomicAccess ( <var>typedArray</var>, <var>requestIndex</var> )</h1>\n        <p>The abstract operation ValidateAtomicAccess takes arguments <var>typedArray</var> and <var>requestIndex</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> is an Object that has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>length</var> be <var>typedArray</var>.[[ArrayLength]].</li><li>Let <var>accessIndex</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>requestIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>accessIndex</var> &#8805; 0.</li><li>If <var>accessIndex</var> &#8805; <var>length</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Return <var>accessIndex</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atomicreadmodifywrite": {"num": "24.4.1.11", "title": "#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )", "html": "<emu-clause id=\"sec-atomicreadmodifywrite\" aoid=\"AtomicReadModifyWrite\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomicreadmodifywrite\">#sec-atomicreadmodifywrite</span> AtomicReadModifyWrite ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>op</var> )</h1>\n        <p>The abstract operation AtomicReadModifyWrite takes arguments <var>typedArray</var>, <var>index</var>, <var>value</var>, and <var>op</var> (a <emu-xref href=\"#sec-arraybuffer-notation\"><a href=\"#sec-arraybuffer-notation\">read-modify-write modification function</a></emu-xref>). <var>op</var> takes two <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values arguments and returns a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values. This operation atomically loads a value, combines it with another value, and stores the result of the combination. It returns the loaded value. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>typedArray</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref> or <emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref> on the preceding lines can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <var>op</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atomics.load": {"num": "24.4.7", "title": "#sec-atomics.load Atomics.load ( typedArray, index )", "html": "<emu-clause id=\"sec-atomics.load\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.load\">#sec-atomics.load</span> Atomics.load ( <var>typedArray</var>, <var>index</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"AtomicLoad\"><a href=\"#sec-atomicload\">AtomicLoad</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-atomics.wait": {"num": "24.4.11", "title": "#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )", "html": "<emu-clause id=\"sec-atomics.wait\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.wait\">#sec-atomics.wait</span> Atomics.wait ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>timeout</var> )</h1>\n      <p><code>Atomics.wait</code> puts the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in a wait queue and puts it to sleep until it is notified or the sleep times out. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>arrayTypeName</var> is <emu-val>\"BigInt64Array\"</emu-val>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-tobigint64\">ToBigInt64</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>value</var>).</li><li>Let <var>q</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>timeout</var>).</li><li>If <var>q</var> is <emu-val>NaN</emu-val>, let <var>t</var> be <emu-val>+&#8734;</emu-val>; else let <var>t</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>q</var>, 0).</li><li>Let <var>B</var> be <emu-xref aoid=\"AgentCanSuspend\"><a href=\"#sec-agentcansuspend\">AgentCanSuspend</a></emu-xref>().</li><li>If <var>B</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>w</var> be !&#160;<emu-xref aoid=\"AtomicLoad\"><a href=\"#sec-atomicload\">AtomicLoad</a></emu-xref>(<var>typedArray</var>, <var>i</var>).</li><li>If <var>v</var> is not equal to <var>w</var>, then<ol><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return the String <emu-val>\"not-equal\"</emu-val>.</li></ol></li><li>Let <var>W</var> be <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Perform <emu-xref aoid=\"AddWaiter\"><a href=\"#sec-addwaiter\">AddWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Let <var>notified</var> be <emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref>(<var>WL</var>, <var>W</var>, <var>t</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is not on the list of waiters in <var>WL</var>.</li></ol></li><li>Else,<ol><li>Perform <emu-xref aoid=\"RemoveWaiter\"><a href=\"#sec-removewaiter\">RemoveWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, return the String <emu-val>\"ok\"</emu-val>.</li><li>Return the String <emu-val>\"timed-out\"</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-atomics.compareexchange": {"num": "24.4.4", "title": "#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )", "html": "<emu-clause id=\"sec-atomics.compareexchange\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.compareexchange\">#sec-atomics.compareexchange</span> Atomics.compareExchange ( <var>typedArray</var>, <var>index</var>, <var>expectedValue</var>, <var>replacementValue</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>typedArray</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, then<ol><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>replacementValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>replacementValue</var>).</li></ol></li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref> or <emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref> on the preceding lines can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>isLittleEndian</var> be the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>expectedBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>elementType</var>, <var>expected</var>, <var>isLittleEndian</var>).</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>compareExchange</var> be a new <emu-xref href=\"#sec-arraybuffer-notation\"><a href=\"#sec-arraybuffer-notation\">read-modify-write modification function</a></emu-xref> with parameters (<var>oldBytes</var>, <var>newBytes</var>) that captures <var>expectedBytes</var> and performs the following steps atomically when called:<ol><li>If <emu-xref aoid=\"ByteListEqual\"><a href=\"#sec-bytelistequal\">ByteListEqual</a></emu-xref>(<var>oldBytes</var>, <var>expectedBytes</var>) is <emu-val>true</emu-val>, return <var>newBytes</var>.</li><li>Return <var>oldBytes</var>.</li></ol></li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>replacement</var>, <var>compareExchange</var>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}, "to": {"secList": ["sec-atomics.notify", "sec-atomics.store", "sec-abstract-operations-for-atomics", "sec-validateatomicaccess", "sec-atomicreadmodifywrite", "sec-atomics.load", "sec-atomics.wait", "sec-atomics.compareexchange"], "secData": {"sec-atomics.notify": {"num": "24.4.12", "title": "#sec-atomics.notify Atomics.notify ( typedArray, index, count )", "html": "<emu-clause id=\"sec-atomics.notify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.notify\">#sec-atomics.notify</span> Atomics.notify ( <var>typedArray</var>, <var>index</var>, <var>count</var> )</h1>\n      <p><code>Atomics.notify</code> notifies some agents that are sleeping in the wait queue. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>Let <var>indexedPosition</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <var>count</var> is <emu-val>undefined</emu-val>, let <var>c</var> be <emu-val>+&#8734;</emu-val>.</li><li>Else,<ol><li>Let <var>intCount</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>count</var>).</li><li>Let <var>c</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>intCount</var>, 0).</li></ol></li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>false</emu-val>, return 0.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Let <var>n</var> be 0.</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>S</var> be <emu-xref aoid=\"RemoveWaiters\"><a href=\"#sec-removewaiters\">RemoveWaiters</a></emu-xref>(<var>WL</var>, <var>c</var>).</li><li>Repeat, while <var>S</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>,<ol><li>Let <var>W</var> be the first <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in <var>S</var>.</li><li>Remove <var>W</var> from the front of <var>S</var>.</li><li>Perform <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return <var>n</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-atomics.store": {"num": "24.4.9", "title": "#sec-atomics.store Atomics.store ( typedArray, index, value )", "html": "<emu-clause id=\"sec-atomics.store\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.store\">#sec-atomics.store</span> Atomics.store ( <var>typedArray</var>, <var>index</var>, <var>value</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>indexedPosition</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>arrayTypeName</var> is <emu-val>\"BigUint64Array\"</emu-val> or <emu-val>\"BigInt64Array\"</emu-val>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref> or <emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref> on the preceding lines can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <emu-val>true</emu-val>, <emu-const>SeqCst</emu-const>).</li><li>Return <var>v</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-abstract-operations-for-atomics": {"num": "24.4.1", "title": "#sec-abstract-operations-for-atomics Abstract Operations for Atomics", "html": "<emu-clause id=\"sec-abstract-operations-for-atomics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-atomics\">#sec-abstract-operations-for-atomics</span> Abstract Operations for Atomics</h1>\n\n      <div id=\"excluded-sec-validateintegertypedarray\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-validateintegertypedarray ValidateIntegerTypedArray ( typedArray [ , waitable ] )</h1>...</div><div id=\"excluded-sec-validateatomicaccess\"><h1><span class=\"secnum\">24.4.1.2</span>#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )</h1>...</div><div id=\"excluded-sec-getwaiterlist\"><h1><span class=\"secnum\">24.4.1.3</span>#sec-getwaiterlist GetWaiterList ( block, i )</h1>...</div><div id=\"excluded-sec-entercriticalsection\"><h1><span class=\"secnum\">24.4.1.4</span>#sec-entercriticalsection EnterCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-leavecriticalsection\"><h1><span class=\"secnum\">24.4.1.5</span>#sec-leavecriticalsection LeaveCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-addwaiter\"><h1><span class=\"secnum\">24.4.1.6</span>#sec-addwaiter AddWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiter\"><h1><span class=\"secnum\">24.4.1.7</span>#sec-removewaiter RemoveWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiters\"><h1><span class=\"secnum\">24.4.1.8</span>#sec-removewaiters RemoveWaiters ( WL, c )</h1>...</div><div id=\"excluded-sec-suspend\"><h1><span class=\"secnum\">24.4.1.9</span>#sec-suspend Suspend ( WL, W, timeout )</h1>...</div><div id=\"excluded-sec-notifywaiter\"><h1><span class=\"secnum\">24.4.1.10</span>#sec-notifywaiter NotifyWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-atomicreadmodifywrite\"><h1><span class=\"secnum\">24.4.1.11</span>#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )</h1>...</div><div id=\"excluded-sec-bytelistbitwiseop\"><h1><span class=\"secnum\">24.4.1.12</span>#sec-bytelistbitwiseop ByteListBitwiseOp ( op, xBytes, yBytes )</h1>...</div><div id=\"excluded-sec-bytelistequal\"><h1><span class=\"secnum\">24.4.1.13</span>#sec-bytelistequal ByteListEqual ( xBytes, yBytes )</h1>...</div></emu-clause>\n\n    "}, "sec-validateatomicaccess": {"num": "24.4.1.2", "title": "#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )", "html": "<emu-clause id=\"sec-validateatomicaccess\" aoid=\"ValidateAtomicAccess\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validateatomicaccess\">#sec-validateatomicaccess</span> ValidateAtomicAccess ( <var>typedArray</var>, <var>requestIndex</var> )</h1>\n        <p>The abstract operation ValidateAtomicAccess takes arguments <var>typedArray</var> and <var>requestIndex</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> is an Object that has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>length</var> be <var>typedArray</var>.[[ArrayLength]].</li><li>Let <var>accessIndex</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>requestIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>accessIndex</var> &#8805; 0.</li><li>If <var>accessIndex</var> &#8805; <var>length</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Return (<var>accessIndex</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atomicreadmodifywrite": {"num": "24.4.1.11", "title": "#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )", "html": "<emu-clause id=\"sec-atomicreadmodifywrite\" aoid=\"AtomicReadModifyWrite\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomicreadmodifywrite\">#sec-atomicreadmodifywrite</span> AtomicReadModifyWrite ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>op</var> )</h1>\n        <p>The abstract operation AtomicReadModifyWrite takes arguments <var>typedArray</var>, <var>index</var>, <var>value</var>, and <var>op</var> (a <emu-xref href=\"#sec-arraybuffer-notation\"><a href=\"#sec-arraybuffer-notation\">read-modify-write modification function</a></emu-xref>). <var>op</var> takes two <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values arguments and returns a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values. This operation atomically loads a value, combines it with another value, and stores the result of the combination. It returns the loaded value. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>indexedPosition</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>typedArray</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref> or <emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref> on the preceding lines can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <var>op</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atomics.load": {"num": "24.4.7", "title": "#sec-atomics.load Atomics.load ( typedArray, index )", "html": "<emu-clause id=\"sec-atomics.load\" oldids=\"sec-atomicload\"><span id=\"sec-atomicload\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.load\">#sec-atomics.load</span> Atomics.load ( <var>typedArray</var>, <var>index</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>indexedPosition</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref> on the preceding line can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>SeqCst</emu-const>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-atomics.wait": {"num": "24.4.11", "title": "#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )", "html": "<emu-clause id=\"sec-atomics.wait\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.wait\">#sec-atomics.wait</span> Atomics.wait ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>timeout</var> )</h1>\n      <p><code>Atomics.wait</code> puts the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in a wait queue and puts it to sleep until it is notified or the sleep times out. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>indexedPosition</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>arrayTypeName</var> is <emu-val>\"BigInt64Array\"</emu-val>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-tobigint64\">ToBigInt64</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>value</var>).</li><li>Let <var>q</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>timeout</var>).</li><li>If <var>q</var> is <emu-val>NaN</emu-val>, let <var>t</var> be <emu-val>+&#8734;</emu-val>; else let <var>t</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>q</var>, 0).</li><li>Let <var>B</var> be <emu-xref aoid=\"AgentCanSuspend\"><a href=\"#sec-agentcansuspend\">AgentCanSuspend</a></emu-xref>().</li><li>If <var>B</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>w</var> be !&#160;<emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <emu-const>SeqCst</emu-const>).</li><li>If <var>v</var> is not equal to <var>w</var>, then<ol><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return the String <emu-val>\"not-equal\"</emu-val>.</li></ol></li><li>Let <var>W</var> be <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Perform <emu-xref aoid=\"AddWaiter\"><a href=\"#sec-addwaiter\">AddWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Let <var>notified</var> be <emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref>(<var>WL</var>, <var>W</var>, <var>t</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is not on the list of waiters in <var>WL</var>.</li></ol></li><li>Else,<ol><li>Perform <emu-xref aoid=\"RemoveWaiter\"><a href=\"#sec-removewaiter\">RemoveWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, return the String <emu-val>\"ok\"</emu-val>.</li><li>Return the String <emu-val>\"timed-out\"</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-atomics.compareexchange": {"num": "24.4.4", "title": "#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )", "html": "<emu-clause id=\"sec-atomics.compareexchange\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.compareexchange\">#sec-atomics.compareexchange</span> Atomics.compareExchange ( <var>typedArray</var>, <var>index</var>, <var>expectedValue</var>, <var>replacementValue</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>indexedPosition</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>typedArray</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, then<ol><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>replacementValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>replacementValue</var>).</li></ol></li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: The above check is not redundant with the check in <emu-xref aoid=\"ValidateIntegerTypedArray\"><a href=\"#sec-validateintegertypedarray\">ValidateIntegerTypedArray</a></emu-xref> because the call to <emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref> or <emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref> on the preceding lines can have arbitrary side effects, which could cause the buffer to become detached.</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>isLittleEndian</var> be the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>expectedBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>elementType</var>, <var>expected</var>, <var>isLittleEndian</var>).</li><li>Let <var>compareExchange</var> be a new <emu-xref href=\"#sec-arraybuffer-notation\"><a href=\"#sec-arraybuffer-notation\">read-modify-write modification function</a></emu-xref> with parameters (<var>oldBytes</var>, <var>newBytes</var>) that captures <var>expectedBytes</var> and performs the following steps atomically when called:<ol><li>If <emu-xref aoid=\"ByteListEqual\"><a href=\"#sec-bytelistequal\">ByteListEqual</a></emu-xref>(<var>oldBytes</var>, <var>expectedBytes</var>) is <emu-val>true</emu-val>, return <var>newBytes</var>.</li><li>Return <var>oldBytes</var>.</li></ol></li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>replacement</var>, <var>compareExchange</var>).</li></ol></emu-alg>\n    </emu-clause>\n\n    "}}, "figData": {"table-the-typedarray-constructors": "Table 62"}}}