{"from": {"secList": ["sec-properties-of-the-regexp-prototype-object", "sec-isvalidregularexpressionliteral", "sec-get-regexp.prototype.flags", "sec-regexpinitialize", "sec-get-regexp.prototype.unicode", "sec-pattern-semantics", "sec-runtime-semantics-unicodematchproperty-p"], "secData": {"sec-properties-of-the-regexp-prototype-object": {"num": "22.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The <dfn>RegExp prototype object</dfn>:</p>\n      <ul>\n        <li>is <dfn>%RegExp.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <emu-val>\"valueOf\"</emu-val> property of its own; however, it inherits the <emu-val>\"valueOf\"</emu-val> property from the <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">Object prototype object</a></emu-xref>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">22.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">22.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">22.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">22.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">22.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">22.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">22.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">22.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">22.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">22.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">22.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">22.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">22.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">22.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">22.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">22.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">22.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}, "sec-isvalidregularexpressionliteral": {"num": "13.2.7.2", "title": "#sec-isvalidregularexpressionliteral Static Semantics: IsValidRegularExpressionLiteral ( literal )", "html": "<emu-clause id=\"sec-isvalidregularexpressionliteral\" type=\"abstract operation\" aoid=\"IsValidRegularExpressionLiteral\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isvalidregularexpressionliteral\">#sec-isvalidregularexpressionliteral</span> Static Semantics: IsValidRegularExpressionLiteral ( <var>literal</var> )</h1>\n        <p>The abstract operation IsValidRegularExpressionLiteral takes argument <var>literal</var> (a <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>). It determines if its argument is a valid regular expression literal. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"FlagText\"><a href=\"#sec-static-semantics-flagtext\">FlagText</a></emu-xref> of <var>literal</var> contains any code points other than <code>g</code>, <code>i</code>, <code>m</code>, <code>s</code>, <code>u</code>, or <code>y</code>, or if it contains the same code point more than once, return <emu-val>false</emu-val>.</li><li>Let <var>patternText</var> be <emu-xref aoid=\"BodyText\"><a href=\"#sec-static-semantics-bodytext\">BodyText</a></emu-xref> of <var>literal</var>.</li><li>If <emu-xref aoid=\"FlagText\"><a href=\"#sec-static-semantics-flagtext\">FlagText</a></emu-xref> of <var>literal</var> contains <code>u</code>, let <var>u</var> be <emu-val>true</emu-val>; else let <var>u</var> be <emu-val>false</emu-val>.</li><li>If <var>u</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>stringValue</var> be <emu-xref aoid=\"CodePointsToString\"><a href=\"#sec-codepointstostring\">CodePointsToString</a></emu-xref>(<var>patternText</var>).</li><li>Set <var>patternText</var> to the sequence of code points resulting from interpreting each of the 16-bit elements of <var>stringValue</var> as a Unicode BMP code point. UTF-16 decoding is not applied to the elements.</li></ol></li><li>Let <var>parseResult</var> be <emu-xref aoid=\"ParsePattern\"><a href=\"#sec-parsepattern\">ParsePattern</a></emu-xref>(<var>patternText</var>, <var>u</var>).</li><li>If <var>parseResult</var> is a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, return <emu-val>true</emu-val>; else return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-get-regexp.prototype.flags": {"num": "22.2.5.4", "title": "#sec-get-regexp.prototype.flags get RegExp.prototype.flags", "html": "<emu-clause id=\"sec-get-regexp.prototype.flags\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.flags\">#sec-get-regexp.prototype.flags</span> get RegExp.prototype.flags</h1>\n        <p><code>RegExp.prototype.flags</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>result</var> be the empty String.</li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, append the code unit 0x0067 (LATIN SMALL LETTER G) as the last code unit of <var>result</var>.</li><li>Let <var>ignoreCase</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"ignoreCase\"</emu-val>)).</li><li>If <var>ignoreCase</var> is <emu-val>true</emu-val>, append the code unit 0x0069 (LATIN SMALL LETTER I) as the last code unit of <var>result</var>.</li><li>Let <var>multiline</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"multiline\"</emu-val>)).</li><li>If <var>multiline</var> is <emu-val>true</emu-val>, append the code unit 0x006D (LATIN SMALL LETTER M) as the last code unit of <var>result</var>.</li><li>Let <var>dotAll</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"dotAll\"</emu-val>)).</li><li>If <var>dotAll</var> is <emu-val>true</emu-val>, append the code unit 0x0073 (LATIN SMALL LETTER S) as the last code unit of <var>result</var>.</li><li>Let <var>unicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>If <var>unicode</var> is <emu-val>true</emu-val>, append the code unit 0x0075 (LATIN SMALL LETTER U) as the last code unit of <var>result</var>.</li><li>Let <var>sticky</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"sticky\"</emu-val>)).</li><li>If <var>sticky</var> is <emu-val>true</emu-val>, append the code unit 0x0079 (LATIN SMALL LETTER Y) as the last code unit of <var>result</var>.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-regexpinitialize": {"num": "22.2.3.2.2", "title": "#sec-regexpinitialize RegExpInitialize ( obj, pattern, flags )", "html": "<emu-clause id=\"sec-regexpinitialize\" type=\"abstract operation\" aoid=\"RegExpInitialize\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexpinitialize\">#sec-regexpinitialize</span> RegExpInitialize ( <var>obj</var>, <var>pattern</var>, <var>flags</var> )</h1>\n          <p>The abstract operation RegExpInitialize takes arguments <var>obj</var> (an Object), <var>pattern</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>flags</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>pattern</var> is <emu-val>undefined</emu-val>, let <var>P</var> be the empty String.</li><li>Else, let <var>P</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>pattern</var>).</li><li>If <var>flags</var> is <emu-val>undefined</emu-val>, let <var>F</var> be the empty String.</li><li>Else, let <var>F</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>).</li><li>If <var>F</var> contains any code unit other than <emu-val>\"g\"</emu-val>, <emu-val>\"i\"</emu-val>, <emu-val>\"m\"</emu-val>, <emu-val>\"s\"</emu-val>, <emu-val>\"u\"</emu-val>, or <emu-val>\"y\"</emu-val> or if it contains the same code unit more than once, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>F</var> contains <emu-val>\"u\"</emu-val>, let <var>u</var> be <emu-val>true</emu-val>; else let <var>u</var> be <emu-val>false</emu-val>.</li><li>If <var>u</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>patternText</var> be !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>P</var>).</li><li>Let <var>patternCharacters</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the code points of <var>patternText</var>.</li></ol></li><li>Else,<ol><li>Let <var>patternText</var> be the result of interpreting each of <var>P</var>'s 16-bit elements as a Unicode BMP code point. UTF-16 decoding is not applied to the elements.</li><li>Let <var>patternCharacters</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the code unit elements of <var>P</var>.</li></ol></li><li>Let <var>parseResult</var> be <emu-xref aoid=\"ParsePattern\"><a href=\"#sec-parsepattern\">ParsePattern</a></emu-xref>(<var>patternText</var>, <var>u</var>).</li><li>If <var>parseResult</var> is a non-empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-val>SyntaxError</emu-val> objects, throw a <emu-val>SyntaxError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>parseResult</var> is a <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>.</li><li>Set <var>obj</var>.[[OriginalSource]] to <var>P</var>.</li><li>Set <var>obj</var>.[[OriginalFlags]] to <var>F</var>.</li><li>Set <var>obj</var>.[[RegExpMatcher]] to the <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> that evaluates <var>parseResult</var> by applying the semantics provided in <emu-xref href=\"#sec-pattern-semantics\"><a href=\"#sec-pattern-semantics\" class=\"excluded-xref\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</a></emu-xref> using <var>patternCharacters</var> as the pattern's <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values and <var>F</var> as the flag parameters.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>obj</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-get-regexp.prototype.unicode": {"num": "22.2.5.17", "title": "#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode", "html": "<emu-clause id=\"sec-get-regexp.prototype.unicode\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.unicode\">#sec-get-regexp.prototype.unicode</span> get RegExp.prototype.unicode</h1>\n        <p><code>RegExp.prototype.unicode</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>cu</var> be the code unit 0x0075 (LATIN SMALL LETTER U).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpHasFlag\"><a href=\"#sec-regexphasflag\">RegExpHasFlag</a></emu-xref>(<var>R</var>, <var>cu</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-pattern-semantics": {"num": "22.2.2", "title": "#sec-pattern-semantics Pattern Semantics", "html": "<emu-clause id=\"sec-pattern-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</span> Pattern Semantics</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>This section is amended in <emu-xref href=\"#sec-regular-expression-patterns-semantics\"><a href=\"#sec-regular-expression-patterns-semantics\" class=\"excluded-xref\" excluded-id=\"sec-regular-expression-patterns-semantics\">#sec-regular-expression-patterns-semantics</a></emu-xref>.</p>\n      </div></emu-note>\n      <p>A regular expression pattern is converted into an <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> using the process described below. An implementation is encouraged to use more efficient algorithms than the ones listed below, as long as the results are the same. The <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> is used as the value of a RegExp object's [[RegExpMatcher]] internal slot.</p>\n      <p>A <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is either a BMP pattern or a Unicode pattern depending upon whether or not its associated flags contain a <code>u</code>. A BMP pattern matches against a String interpreted as consisting of a sequence of 16-bit values that are Unicode code points in the range of the Basic Multilingual Plane. A Unicode pattern matches against a String interpreted as consisting of Unicode code points encoded using UTF-16. In the context of describing the behaviour of a BMP pattern &#8220;character&#8221; means a single 16-bit Unicode BMP code point. In the context of describing the behaviour of a Unicode pattern &#8220;character&#8221; means a UTF-16 encoded code point (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). In either context, &#8220;character value&#8221; means the numeric value of the corresponding non-encoded code point.</p>\n      <p>The syntax and semantics of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is defined as if the source code for the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> was a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values where each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> corresponds to a Unicode code point. If a BMP pattern contains a non-BMP <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> the entire pattern is encoded using UTF-16 and the individual code units of that encoding are used as the elements of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>For example, consider a pattern expressed in source text as the single non-BMP character U+1D11E (MUSICAL SYMBOL G CLEF). Interpreted as a Unicode pattern, it would be a single element (character) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the single code point 0x1D11E. However, interpreted as a BMP pattern, it is first UTF-16 encoded to produce a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the code units 0xD834 and 0xDD1E.</p>\n        <p>Patterns are passed to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as ECMAScript String values in which non-BMP characters are UTF-16 encoded. For example, the single character MUSICAL SYMBOL G CLEF pattern, expressed as a String value, is a String of length 2 whose elements were the code units 0xD834 and 0xDD1E. So no further translation of the string would be necessary to process it as a BMP pattern consisting of two pattern characters. However, to process it as a Unicode pattern <emu-xref aoid=\"UTF16SurrogatePairToCodePoint\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16SurrogatePairToCodePoint</a></emu-xref> must be used in producing a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is a single pattern character, the code point U+1D11E.</p>\n        <p>An implementation may not actually perform such translations to or from UTF-16, but the semantics of this specification requires that the result of pattern matching be as if such translations were performed.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-notation\"><h1><span class=\"secnum\">22.2.2.1</span>#sec-notation Notation</h1>...</div><div id=\"excluded-sec-pattern\"><h1><span class=\"secnum\">22.2.2.2</span>#sec-pattern Pattern</h1>...</div><div id=\"excluded-sec-disjunction\"><h1><span class=\"secnum\">22.2.2.3</span>#sec-disjunction Disjunction</h1>...</div><div id=\"excluded-sec-alternative\"><h1><span class=\"secnum\">22.2.2.4</span>#sec-alternative Alternative</h1>...</div><div id=\"excluded-sec-term\"><h1><span class=\"secnum\">22.2.2.5</span>#sec-term Term</h1>...</div><div id=\"excluded-sec-assertion\"><h1><span class=\"secnum\">22.2.2.6</span>#sec-assertion Assertion</h1>...</div><div id=\"excluded-sec-quantifier\"><h1><span class=\"secnum\">22.2.2.7</span>#sec-quantifier Quantifier</h1>...</div><div id=\"excluded-sec-atom\"><h1><span class=\"secnum\">22.2.2.8</span>#sec-atom Atom</h1>...</div><div id=\"excluded-sec-atomescape\"><h1><span class=\"secnum\">22.2.2.9</span>#sec-atomescape AtomEscape</h1>...</div><div id=\"excluded-sec-characterescape\"><h1><span class=\"secnum\">22.2.2.10</span>#sec-characterescape CharacterEscape</h1>...</div><div id=\"excluded-sec-decimalescape\"><h1><span class=\"secnum\">22.2.2.11</span>#sec-decimalescape DecimalEscape</h1>...</div><div id=\"excluded-sec-characterclassescape\"><h1><span class=\"secnum\">22.2.2.12</span>#sec-characterclassescape CharacterClassEscape</h1>...</div><div id=\"excluded-sec-characterclass\"><h1><span class=\"secnum\">22.2.2.13</span>#sec-characterclass CharacterClass</h1>...</div><div id=\"excluded-sec-classranges\"><h1><span class=\"secnum\">22.2.2.14</span>#sec-classranges ClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassranges\"><h1><span class=\"secnum\">22.2.2.15</span>#sec-nonemptyclassranges NonemptyClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassrangesnodash\"><h1><span class=\"secnum\">22.2.2.16</span>#sec-nonemptyclassrangesnodash NonemptyClassRangesNoDash</h1>...</div><div id=\"excluded-sec-classatom\"><h1><span class=\"secnum\">22.2.2.17</span>#sec-classatom ClassAtom</h1>...</div><div id=\"excluded-sec-classatomnodash\"><h1><span class=\"secnum\">22.2.2.18</span>#sec-classatomnodash ClassAtomNoDash</h1>...</div><div id=\"excluded-sec-classescape\"><h1><span class=\"secnum\">22.2.2.19</span>#sec-classescape ClassEscape</h1>...</div></emu-clause>\n\n    "}, "sec-runtime-semantics-unicodematchproperty-p": {"num": "22.2.2.8.3", "title": "#sec-runtime-semantics-unicodematchproperty-p UnicodeMatchProperty ( p )", "html": "<emu-clause id=\"sec-runtime-semantics-unicodematchproperty-p\" type=\"abstract operation\" aoid=\"UnicodeMatchProperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-unicodematchproperty-p\">#sec-runtime-semantics-unicodematchproperty-p</span> UnicodeMatchProperty ( <var>p</var> )</h1>\n          <p>The abstract operation UnicodeMatchProperty takes argument <var>p</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a Unicode <emu-not-ref>property name</emu-not-ref> or property alias listed in the &#8220;<emu-not-ref>Property name</emu-not-ref> and aliases&#8221; column of <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> or <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>.</li><li>Let <var>c</var> be the canonical <emu-not-ref>property name</emu-not-ref> of <var>p</var> as given in the &#8220;Canonical <emu-not-ref>property name</emu-not-ref>&#8221; column of the corresponding row.</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points <var>c</var>.</li></ol></emu-alg>\n          <p>Implementations must support the Unicode property names and aliases listed in <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> and <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>. To ensure interoperability, implementations must not support any other property names or aliases.</p>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>For example, <code>Script_Extensions</code> (<emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>) and <code>scx</code> (property alias) are valid, but <code>script_extensions</code> or <code>Scx</code> aren't.</p>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>The listed properties form a superset of what <a href=\"https://unicode.org/reports/tr18/#RL1.2\">UTS18 RL1.2</a> requires.</p>\n          </div></emu-note>\n          <emu-import href=\"table-nonbinary-unicode-properties.html\"><emu-table id=\"table-nonbinary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</span>: Non-binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>General_Category</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>General_Category</code></a></td>\n    </tr>\n    <tr>\n      <td><code>gc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script\"><code>Script</code></a></td>\n    </tr>\n    <tr>\n      <td><code>sc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script_Extensions</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script_Extensions\"><code>Script_Extensions</code></a></td>\n    </tr>\n    <tr>\n      <td><code>scx</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n          <emu-import href=\"table-binary-unicode-properties.html\"><emu-table id=\"table-binary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</span>: Binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>ASCII</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>ASCII</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ASCII_Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ASCII_Hex_Digit\"><code>ASCII_Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>AHex</code></td>\n    </tr>\n    <tr>\n      <td><code>Alphabetic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Alphabetic\"><code>Alphabetic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Alpha</code></td>\n    </tr>\n    <tr>\n      <td><code>Any</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Any</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Assigned</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Assigned</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Control\"><code>Bidi_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Mirrored</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Mirrored\"><code>Bidi_Mirrored</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_M</code></td>\n    </tr>\n    <tr>\n      <td><code>Case_Ignorable</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Case_Ignorable\"><code>Case_Ignorable</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CI</code></td>\n    </tr>\n    <tr>\n      <td><code>Cased</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Cased\"><code>Cased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCF\"><code>Changes_When_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casemapped</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCM\"><code>Changes_When_Casemapped</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCM</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Lowercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWL\"><code>Changes_When_Lowercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWL</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_NFKC_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWKCF\"><code>Changes_When_NFKC_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWKCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Titlecased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWT\"><code>Changes_When_Titlecased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWT</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Uppercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWU\"><code>Changes_When_Uppercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWU</code></td>\n    </tr>\n    <tr>\n      <td><code>Dash</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Dash\"><code>Dash</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Default_Ignorable_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Default_Ignorable_Code_Point\"><code>Default_Ignorable_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>DI</code></td>\n    </tr>\n    <tr>\n      <td><code>Deprecated</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Deprecated\"><code>Deprecated</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dep</code></td>\n    </tr>\n    <tr>\n      <td><code>Diacritic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Diacritic\"><code>Diacritic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dia</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji</code></td>\n      <td><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Component</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Component</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EComp</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EMod</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EBase</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Presentation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Presentation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EPres</code></td>\n    </tr>\n    <tr>\n      <td><code>Extended_Pictographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Extended_Pictographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ExtPict</code></td>\n    </tr>\n    <tr>\n      <td><code>Extender</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Extender\"><code>Extender</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Base\"><code>Grapheme_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Base</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Extend</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Extend\"><code>Grapheme_Extend</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Hex_Digit\"><code>Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Hex</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Binary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Binary_Operator\"><code>IDS_Binary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDSB</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Trinary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Trinary_Operator\"><code>IDS_Trinary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDST</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Continue\"><code>ID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDC</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Start\"><code>ID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDS</code></td>\n    </tr>\n    <tr>\n      <td><code>Ideographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Ideographic\"><code>Ideographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ideo</code></td>\n    </tr>\n    <tr>\n      <td><code>Join_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Join_Control\"><code>Join_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Join_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Logical_Order_Exception</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Logical_Order_Exception\"><code>Logical_Order_Exception</code></a></td>\n    </tr>\n    <tr>\n      <td><code>LOE</code></td>\n    </tr>\n    <tr>\n      <td><code>Lowercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Lowercase\"><code>Lowercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Lower</code></td>\n    </tr>\n    <tr>\n      <td><code>Math</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Math\"><code>Math</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Noncharacter_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Noncharacter_Code_Point\"><code>Noncharacter_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>NChar</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_Syntax</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_Syntax\"><code>Pattern_Syntax</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_Syn</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_White_Space\"><code>Pattern_White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_WS</code></td>\n    </tr>\n    <tr>\n      <td><code>Quotation_Mark</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Quotation_Mark\"><code>Quotation_Mark</code></a></td>\n    </tr>\n    <tr>\n      <td><code>QMark</code></td>\n    </tr>\n    <tr>\n      <td><code>Radical</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Radical\"><code>Radical</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Regional_Indicator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Regional_Indicator\"><code>Regional_Indicator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>RI</code></td>\n    </tr>\n    <tr>\n      <td><code>Sentence_Terminal</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#STerm\"><code>Sentence_Terminal</code></a></td>\n    </tr>\n    <tr>\n      <td><code>STerm</code></td>\n    </tr>\n    <tr>\n      <td><code>Soft_Dotted</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Soft_Dotted\"><code>Soft_Dotted</code></a></td>\n    </tr>\n    <tr>\n      <td><code>SD</code></td>\n    </tr>\n    <tr>\n      <td><code>Terminal_Punctuation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Terminal_Punctuation\"><code>Terminal_Punctuation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Term</code></td>\n    </tr>\n    <tr>\n      <td><code>Unified_Ideograph</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Unified_Ideograph\"><code>Unified_Ideograph</code></a></td>\n    </tr>\n    <tr>\n      <td><code>UIdeo</code></td>\n    </tr>\n    <tr>\n      <td><code>Uppercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Uppercase\"><code>Uppercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Upper</code></td>\n    </tr>\n    <tr>\n      <td><code>Variation_Selector</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Variation_Selector\"><code>Variation_Selector</code></a></td>\n    </tr>\n    <tr>\n      <td><code>VS</code></td>\n    </tr>\n    <tr>\n      <td><code>White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#White_Space\"><code>White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>space</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Continue\"><code>XID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDC</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Start\"><code>XID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDS</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n        </emu-clause>\n        "}}, "figData": {"table-nonbinary-unicode-properties": "Table 68", "table-binary-unicode-properties": "Table 69"}}, "to": {"secList": ["sec-properties-of-the-regexp-prototype-object", "sec-isvalidregularexpressionliteral", "sec-get-regexp.prototype.flags", "sec-regexpinitialize", "sec-get-regexp.prototype.unicode", "sec-get-regexp.prototype.unicodesets", "sec-pattern-semantics", "sec-runtime-semantics-unicodematchproperty-p"], "secData": {"sec-properties-of-the-regexp-prototype-object": {"num": "22.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The <dfn>RegExp prototype object</dfn>:</p>\n      <ul>\n        <li>is <dfn>%RegExp.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <emu-val>\"valueOf\"</emu-val> property of its own; however, it inherits the <emu-val>\"valueOf\"</emu-val> property from the <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">Object prototype object</a></emu-xref>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">22.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">22.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">22.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">22.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">22.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">22.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">22.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">22.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">22.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">22.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">22.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">22.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">22.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">22.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">22.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">22.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">22.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicodesets\"><h1><span class=\"secnum\">22.2.5.18</span>#sec-get-regexp.prototype.unicodesets get RegExp.prototype.unicodeSets</h1>...</div></emu-clause>\n    "}, "sec-isvalidregularexpressionliteral": {"num": "13.2.7.2", "title": "#sec-isvalidregularexpressionliteral Static Semantics: IsValidRegularExpressionLiteral ( literal )", "html": "<emu-clause id=\"sec-isvalidregularexpressionliteral\" type=\"abstract operation\" aoid=\"IsValidRegularExpressionLiteral\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-isvalidregularexpressionliteral\">#sec-isvalidregularexpressionliteral</span> Static Semantics: IsValidRegularExpressionLiteral ( <var>literal</var> )</h1>\n        <p>The abstract operation IsValidRegularExpressionLiteral takes argument <var>literal</var> (a <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>). It determines if its argument is a valid regular expression literal. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"FlagText\"><a href=\"#sec-static-semantics-flagtext\">FlagText</a></emu-xref> of <var>literal</var> contains any code points other than <code>g</code>, <code>i</code>, <code>m</code>, <code>s</code>, <code>u</code>, <code>v</code>, or <code>y</code>, or if it contains the same code point more than once, return <emu-val>false</emu-val>.</li><li>Let <var>patternText</var> be <emu-xref aoid=\"BodyText\"><a href=\"#sec-static-semantics-bodytext\">BodyText</a></emu-xref> of <var>literal</var>.</li><li>If <emu-xref aoid=\"FlagText\"><a href=\"#sec-static-semantics-flagtext\">FlagText</a></emu-xref> of <var>literal</var> contains <code>u</code>, let <var>u</var> be <emu-val>true</emu-val>; else let <var>u</var> be <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"FlagText\"><a href=\"#sec-static-semantics-flagtext\">FlagText</a></emu-xref> of <var>literal</var> contains <code>v</code>, let <var>v</var> be <emu-val>true</emu-val>; else let <var>v</var> be <emu-val>false</emu-val>.</li><li>If <var>u</var> is <emu-val>false</emu-val> and <var>v</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>stringValue</var> be <emu-xref aoid=\"CodePointsToString\"><a href=\"#sec-codepointstostring\">CodePointsToString</a></emu-xref>(<var>patternText</var>).</li><li>Set <var>patternText</var> to the sequence of code points resulting from interpreting each of the 16-bit elements of <var>stringValue</var> as a Unicode BMP code point. UTF-16 decoding is not applied to the elements.</li></ol></li><li>Let <var>parseResult</var> be <emu-xref aoid=\"ParsePattern\"><a href=\"#sec-parsepattern\">ParsePattern</a></emu-xref>(<var>patternText</var>, <var>u</var>, <var>v</var>).</li><li>If <var>parseResult</var> is a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>, return <emu-val>true</emu-val>; else return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-get-regexp.prototype.flags": {"num": "22.2.5.4", "title": "#sec-get-regexp.prototype.flags get RegExp.prototype.flags", "html": "<emu-clause id=\"sec-get-regexp.prototype.flags\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.flags\">#sec-get-regexp.prototype.flags</span> get RegExp.prototype.flags</h1>\n        <p><code>RegExp.prototype.flags</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>result</var> be the empty String.</li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, append the code unit 0x0067 (LATIN SMALL LETTER G) as the last code unit of <var>result</var>.</li><li>Let <var>ignoreCase</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"ignoreCase\"</emu-val>)).</li><li>If <var>ignoreCase</var> is <emu-val>true</emu-val>, append the code unit 0x0069 (LATIN SMALL LETTER I) as the last code unit of <var>result</var>.</li><li>Let <var>multiline</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"multiline\"</emu-val>)).</li><li>If <var>multiline</var> is <emu-val>true</emu-val>, append the code unit 0x006D (LATIN SMALL LETTER M) as the last code unit of <var>result</var>.</li><li>Let <var>dotAll</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"dotAll\"</emu-val>)).</li><li>If <var>dotAll</var> is <emu-val>true</emu-val>, append the code unit 0x0073 (LATIN SMALL LETTER S) as the last code unit of <var>result</var>.</li><li>Let <var>unicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>If <var>unicode</var> is <emu-val>true</emu-val>, append the code unit 0x0075 (LATIN SMALL LETTER U) as the last code unit of <var>result</var>.</li><li>Let <var>unicodeSet</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"unicodeSet\"</emu-val>)).</li><li>If <var>unicodeSet</var> is <emu-val>true</emu-val>, append the code unit 0x0076 (LATIN SMALL LETTER V) as the last code unit of <var>result</var>.</li><li>Let <var>sticky</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <emu-val>\"sticky\"</emu-val>)).</li><li>If <var>sticky</var> is <emu-val>true</emu-val>, append the code unit 0x0079 (LATIN SMALL LETTER Y) as the last code unit of <var>result</var>.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-regexpinitialize": {"num": "22.2.3.2.2", "title": "#sec-regexpinitialize RegExpInitialize ( obj, pattern, flags )", "html": "<emu-clause id=\"sec-regexpinitialize\" type=\"abstract operation\" aoid=\"RegExpInitialize\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexpinitialize\">#sec-regexpinitialize</span> RegExpInitialize ( <var>obj</var>, <var>pattern</var>, <var>flags</var> )</h1>\n          <p>The abstract operation RegExpInitialize takes arguments <var>obj</var> (an Object), <var>pattern</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>flags</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>pattern</var> is <emu-val>undefined</emu-val>, let <var>P</var> be the empty String.</li><li>Else, let <var>P</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>pattern</var>).</li><li>If <var>flags</var> is <emu-val>undefined</emu-val>, let <var>F</var> be the empty String.</li><li>Else, let <var>F</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>).</li><li>If <var>F</var> contains any code unit other than <emu-val>\"g\"</emu-val>, <emu-val>\"i\"</emu-val>, <emu-val>\"m\"</emu-val>, <emu-val>\"s\"</emu-val>, <emu-val>\"u\"</emu-val>, <emu-val>\"v\"</emu-val>, or <emu-val>\"y\"</emu-val> or if it contains the same code unit more than once, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>F</var> contains <emu-val>\"u\"</emu-val>, let <var>u</var> be <emu-val>true</emu-val>; else let <var>u</var> be <emu-val>false</emu-val>.</li><li>If <var>F</var> contains <emu-val>\"v\"</emu-val>, let <var>v</var> be <emu-val>true</emu-val>; else let <var>v</var> be <emu-val>false</emu-val>.</li><li>If <var>u</var> is <emu-val>true</emu-val> or <var>v</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>patternText</var> be !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>P</var>).</li><li>Let <var>patternCharacters</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the code points of <var>patternText</var>.</li></ol></li><li>Else,<ol><li>Let <var>patternText</var> be the result of interpreting each of <var>P</var>'s 16-bit elements as a Unicode BMP code point. UTF-16 decoding is not applied to the elements.</li><li>Let <var>patternCharacters</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the code unit elements of <var>P</var>.</li></ol></li><li>Let <var>parseResult</var> be <emu-xref aoid=\"ParsePattern\"><a href=\"#sec-parsepattern\">ParsePattern</a></emu-xref>(<var>patternText</var>, <var>u</var>, <var>v</var>).</li><li>If <var>parseResult</var> is a non-empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-val>SyntaxError</emu-val> objects, throw a <emu-val>SyntaxError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>parseResult</var> is a <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>.</li><li>Set <var>obj</var>.[[OriginalSource]] to <var>P</var>.</li><li>Set <var>obj</var>.[[OriginalFlags]] to <var>F</var>.</li><li>Set <var>obj</var>.[[RegExpMatcher]] to the <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> that evaluates <var>parseResult</var> by applying the semantics provided in <emu-xref href=\"#sec-pattern-semantics\"><a href=\"#sec-pattern-semantics\" class=\"excluded-xref\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</a></emu-xref> using <var>patternCharacters</var> as the pattern's <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values and <var>F</var> as the flag parameters.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>obj</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-get-regexp.prototype.unicode": {"num": "22.2.5.17", "title": "#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode", "html": "<emu-clause id=\"sec-get-regexp.prototype.unicode\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.unicode\">#sec-get-regexp.prototype.unicode</span> get RegExp.prototype.unicode</h1>\n        <p><code>RegExp.prototype.unicode</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>cu</var> be the code unit 0x0075 (LATIN SMALL LETTER U).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpHasFlag\"><a href=\"#sec-regexphasflag\">RegExpHasFlag</a></emu-xref>(<var>R</var>, <var>cu</var>).</li></ol></emu-alg>\n      </emu-clause>\n      "}, "sec-get-regexp.prototype.unicodesets": {"num": "22.2.5.18", "title": "#sec-get-regexp.prototype.unicodesets get RegExp.prototype.unicodeSets", "html": "<emu-clause id=\"sec-get-regexp.prototype.unicodesets\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp.prototype.unicodesets\">#sec-get-regexp.prototype.unicodesets</span> get RegExp.prototype.unicodeSets</h1>\n        <p><code>RegExp.prototype.unicodeSets</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>cu</var> be the code unit 0x0076 (LATIN SMALL LETTER V).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpHasFlag\"><a href=\"#sec-regexphasflag\">RegExpHasFlag</a></emu-xref>(<var>R</var>, <var>cu</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-pattern-semantics": {"num": "22.2.2", "title": "#sec-pattern-semantics Pattern Semantics", "html": "<emu-clause id=\"sec-pattern-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</span> Pattern Semantics</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>This section is amended in <emu-xref href=\"#sec-regular-expression-patterns-semantics\"><a href=\"#sec-regular-expression-patterns-semantics\" class=\"excluded-xref\" excluded-id=\"sec-regular-expression-patterns-semantics\">#sec-regular-expression-patterns-semantics</a></emu-xref>.</p>\n      </div></emu-note>\n      <p>A regular expression pattern is converted into an <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> using the process described below. An implementation is encouraged to use more efficient algorithms than the ones listed below, as long as the results are the same. The <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> is used as the value of a RegExp object's [[RegExpMatcher]] internal slot.</p>\n      <p>A <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is either a BMP pattern or a Unicode pattern depending upon whether or not its associated flags contain a <code>u</code> or a <code>v</code>. A BMP pattern matches against a String interpreted as consisting of a sequence of 16-bit values that are Unicode code points in the range of the Basic Multilingual Plane. A Unicode pattern matches against a String interpreted as consisting of Unicode code points encoded using UTF-16. In the context of describing the behaviour of a BMP pattern &#8220;character&#8221; means a single 16-bit Unicode BMP code point. In the context of describing the behaviour of a Unicode pattern &#8220;character&#8221; means a UTF-16 encoded code point (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). In either context, &#8220;character value&#8221; means the numeric value of the corresponding non-encoded code point.</p>\n      <p>The syntax and semantics of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is defined as if the source code for the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> was a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values where each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> corresponds to a Unicode code point. If a BMP pattern contains a non-BMP <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> the entire pattern is encoded using UTF-16 and the individual code units of that encoding are used as the elements of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>For example, consider a pattern expressed in source text as the single non-BMP character U+1D11E (MUSICAL SYMBOL G CLEF). Interpreted as a Unicode pattern, it would be a single element (character) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the single code point 0x1D11E. However, interpreted as a BMP pattern, it is first UTF-16 encoded to produce a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the code units 0xD834 and 0xDD1E.</p>\n        <p>Patterns are passed to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as ECMAScript String values in which non-BMP characters are UTF-16 encoded. For example, the single character MUSICAL SYMBOL G CLEF pattern, expressed as a String value, is a String of length 2 whose elements were the code units 0xD834 and 0xDD1E. So no further translation of the string would be necessary to process it as a BMP pattern consisting of two pattern characters. However, to process it as a Unicode pattern <emu-xref aoid=\"UTF16SurrogatePairToCodePoint\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16SurrogatePairToCodePoint</a></emu-xref> must be used in producing a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is a single pattern character, the code point U+1D11E.</p>\n        <p>An implementation may not actually perform such translations to or from UTF-16, but the semantics of this specification requires that the result of pattern matching be as if such translations were performed.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-notation\"><h1><span class=\"secnum\">22.2.2.1</span>#sec-notation Notation</h1>...</div><div id=\"excluded-sec-pattern\"><h1><span class=\"secnum\">22.2.2.2</span>#sec-pattern Pattern</h1>...</div><div id=\"excluded-sec-disjunction\"><h1><span class=\"secnum\">22.2.2.3</span>#sec-disjunction Disjunction</h1>...</div><div id=\"excluded-sec-alternative\"><h1><span class=\"secnum\">22.2.2.4</span>#sec-alternative Alternative</h1>...</div><div id=\"excluded-sec-term\"><h1><span class=\"secnum\">22.2.2.5</span>#sec-term Term</h1>...</div><div id=\"excluded-sec-assertion\"><h1><span class=\"secnum\">22.2.2.6</span>#sec-assertion Assertion</h1>...</div><div id=\"excluded-sec-quantifier\"><h1><span class=\"secnum\">22.2.2.7</span>#sec-quantifier Quantifier</h1>...</div><div id=\"excluded-sec-atom\"><h1><span class=\"secnum\">22.2.2.8</span>#sec-atom Atom</h1>...</div><div id=\"excluded-sec-atomescape\"><h1><span class=\"secnum\">22.2.2.9</span>#sec-atomescape AtomEscape</h1>...</div><div id=\"excluded-sec-characterescape\"><h1><span class=\"secnum\">22.2.2.10</span>#sec-characterescape CharacterEscape</h1>...</div><div id=\"excluded-sec-decimalescape\"><h1><span class=\"secnum\">22.2.2.11</span>#sec-decimalescape DecimalEscape</h1>...</div><div id=\"excluded-sec-characterclassescape\"><h1><span class=\"secnum\">22.2.2.12</span>#sec-characterclassescape CharacterClassEscape</h1>...</div><div id=\"excluded-sec-characterclass\"><h1><span class=\"secnum\">22.2.2.13</span>#sec-characterclass CharacterClass</h1>...</div><div id=\"excluded-sec-classranges\"><h1><span class=\"secnum\">22.2.2.14</span>#sec-classranges ClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassranges\"><h1><span class=\"secnum\">22.2.2.15</span>#sec-nonemptyclassranges NonemptyClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassrangesnodash\"><h1><span class=\"secnum\">22.2.2.16</span>#sec-nonemptyclassrangesnodash NonemptyClassRangesNoDash</h1>...</div><div id=\"excluded-sec-classatom\"><h1><span class=\"secnum\">22.2.2.17</span>#sec-classatom ClassAtom</h1>...</div><div id=\"excluded-sec-classatomnodash\"><h1><span class=\"secnum\">22.2.2.18</span>#sec-classatomnodash ClassAtomNoDash</h1>...</div><div id=\"excluded-sec-classescape\"><h1><span class=\"secnum\">22.2.2.19</span>#sec-classescape ClassEscape</h1>...</div></emu-clause>\n\n    "}, "sec-runtime-semantics-unicodematchproperty-p": {"num": "22.2.2.8.3", "title": "#sec-runtime-semantics-unicodematchproperty-p UnicodeMatchProperty ( p )", "html": "<emu-clause id=\"sec-runtime-semantics-unicodematchproperty-p\" type=\"abstract operation\" aoid=\"UnicodeMatchProperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-unicodematchproperty-p\">#sec-runtime-semantics-unicodematchproperty-p</span> UnicodeMatchProperty ( <var>p</var> )</h1>\n          <p>The abstract operation UnicodeMatchProperty takes argument <var>p</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>p</var> is a Unicode <emu-not-ref>property name</emu-not-ref> or property alias listed in the &#8220;<emu-not-ref>Property name</emu-not-ref> and aliases&#8221; or &#8220;<emu-not-ref>Property name</emu-not-ref>&#8221; column of <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref> or <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>; or, if <var>UnicodeSets</var> is <emu-val>true</emu-val>, of <emu-xref href=\"#table-binary-unicode-properties-of-strings\"><a href=\"#table-binary-unicode-properties-of-strings\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties-of-strings\">#table-binary-unicode-properties-of-strings</a></emu-xref>.</li><li>Let <var>c</var> be the canonical <emu-not-ref>property name</emu-not-ref> of <var>p</var> as given in the &#8220;Canonical <emu-not-ref>property name</emu-not-ref>&#8221; or &#8220;<emu-not-ref>Property name</emu-not-ref>&#8221; column of the corresponding row; or the same as <var>p</var> if <var>p</var> is listed in <emu-xref href=\"#table-binary-unicode-properties-of-strings\"><a href=\"#table-binary-unicode-properties-of-strings\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties-of-strings\">#table-binary-unicode-properties-of-strings</a></emu-xref>.</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Unicode code points and strings of <var>c</var>.</li></ol></emu-alg>\n          <p>Implementations must support the Unicode property names and aliases listed in <emu-xref href=\"#table-nonbinary-unicode-properties\"><a href=\"#table-nonbinary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</a></emu-xref>, <emu-xref href=\"#table-binary-unicode-properties\"><a href=\"#table-binary-unicode-properties\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</a></emu-xref>, and <emu-xref href=\"#table-binary-unicode-properties-of-strings\"><a href=\"#table-binary-unicode-properties-of-strings\" class=\"excluded-xref\" excluded-id=\"table-binary-unicode-properties-of-strings\">#table-binary-unicode-properties-of-strings</a></emu-xref>. To ensure interoperability, implementations must not support any other property names or aliases.</p>\n          <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n            <p>For example, <code>Script_Extensions</code> (<emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>) and <code>scx</code> (property alias) are valid, but <code>script_extensions</code> or <code>Scx</code> aren't.</p>\n          </div></emu-note>\n          <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n            <p>The listed properties form a superset of what <a href=\"https://unicode.org/reports/tr18/#RL1.2\">UTS18 RL1.2</a> requires.</p>\n          </div></emu-note>\n          <emu-import href=\"table-nonbinary-unicode-properties.html\"><emu-table id=\"table-nonbinary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-nonbinary-unicode-properties\">#table-nonbinary-unicode-properties</span>: Non-binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>General_Category</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>General_Category</code></a></td>\n    </tr>\n    <tr>\n      <td><code>gc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script\"><code>Script</code></a></td>\n    </tr>\n    <tr>\n      <td><code>sc</code></td>\n    </tr>\n    <tr>\n      <td><code>Script_Extensions</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr24/#Script_Extensions\"><code>Script_Extensions</code></a></td>\n    </tr>\n    <tr>\n      <td><code>scx</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n          <emu-import href=\"table-binary-unicode-properties.html\"><emu-table id=\"table-binary-unicode-properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-binary-unicode-properties\">#table-binary-unicode-properties</span>: Binary Unicode property aliases and their canonical property names</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref> and aliases</th>\n        <th>Canonical <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>ASCII</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>ASCII</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ASCII_Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ASCII_Hex_Digit\"><code>ASCII_Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>AHex</code></td>\n    </tr>\n    <tr>\n      <td><code>Alphabetic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Alphabetic\"><code>Alphabetic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Alpha</code></td>\n    </tr>\n    <tr>\n      <td><code>Any</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Any</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Assigned</code></td>\n      <td><a href=\"https://unicode.org/reports/tr18/#General_Category_Property\"><code>Assigned</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Control\"><code>Bidi_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_Mirrored</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Bidi_Mirrored\"><code>Bidi_Mirrored</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Bidi_M</code></td>\n    </tr>\n    <tr>\n      <td><code>Case_Ignorable</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Case_Ignorable\"><code>Case_Ignorable</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CI</code></td>\n    </tr>\n    <tr>\n      <td><code>Cased</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Cased\"><code>Cased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCF\"><code>Changes_When_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Casemapped</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWCM\"><code>Changes_When_Casemapped</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWCM</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Lowercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWL\"><code>Changes_When_Lowercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWL</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_NFKC_Casefolded</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWKCF\"><code>Changes_When_NFKC_Casefolded</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWKCF</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Titlecased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWT\"><code>Changes_When_Titlecased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWT</code></td>\n    </tr>\n    <tr>\n      <td><code>Changes_When_Uppercased</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#CWU\"><code>Changes_When_Uppercased</code></a></td>\n    </tr>\n    <tr>\n      <td><code>CWU</code></td>\n    </tr>\n    <tr>\n      <td><code>Dash</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Dash\"><code>Dash</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Default_Ignorable_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Default_Ignorable_Code_Point\"><code>Default_Ignorable_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>DI</code></td>\n    </tr>\n    <tr>\n      <td><code>Deprecated</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Deprecated\"><code>Deprecated</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dep</code></td>\n    </tr>\n    <tr>\n      <td><code>Diacritic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Diacritic\"><code>Diacritic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Dia</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji</code></td>\n      <td><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Component</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Component</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EComp</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EMod</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Modifier_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Modifier_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EBase</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Presentation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Emoji_Presentation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>EPres</code></td>\n    </tr>\n    <tr>\n      <td><code>Extended_Pictographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr51/#Emoji_Properties\"><code>Extended_Pictographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>ExtPict</code></td>\n    </tr>\n    <tr>\n      <td><code>Extender</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Extender\"><code>Extender</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Base</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Base\"><code>Grapheme_Base</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Base</code></td>\n    </tr>\n    <tr>\n      <td><code>Grapheme_Extend</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Grapheme_Extend\"><code>Grapheme_Extend</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Gr_Ext</code></td>\n    </tr>\n    <tr>\n      <td><code>Hex_Digit</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Hex_Digit\"><code>Hex_Digit</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Hex</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Binary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Binary_Operator\"><code>IDS_Binary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDSB</code></td>\n    </tr>\n    <tr>\n      <td><code>IDS_Trinary_Operator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#IDS_Trinary_Operator\"><code>IDS_Trinary_Operator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDST</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Continue\"><code>ID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDC</code></td>\n    </tr>\n    <tr>\n      <td><code>ID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#ID_Start\"><code>ID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>IDS</code></td>\n    </tr>\n    <tr>\n      <td><code>Ideographic</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Ideographic\"><code>Ideographic</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Ideo</code></td>\n    </tr>\n    <tr>\n      <td><code>Join_Control</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Join_Control\"><code>Join_Control</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Join_C</code></td>\n    </tr>\n    <tr>\n      <td><code>Logical_Order_Exception</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Logical_Order_Exception\"><code>Logical_Order_Exception</code></a></td>\n    </tr>\n    <tr>\n      <td><code>LOE</code></td>\n    </tr>\n    <tr>\n      <td><code>Lowercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Lowercase\"><code>Lowercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Lower</code></td>\n    </tr>\n    <tr>\n      <td><code>Math</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Math\"><code>Math</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Noncharacter_Code_Point</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Noncharacter_Code_Point\"><code>Noncharacter_Code_Point</code></a></td>\n    </tr>\n    <tr>\n      <td><code>NChar</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_Syntax</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_Syntax\"><code>Pattern_Syntax</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_Syn</code></td>\n    </tr>\n    <tr>\n      <td><code>Pattern_White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Pattern_White_Space\"><code>Pattern_White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Pat_WS</code></td>\n    </tr>\n    <tr>\n      <td><code>Quotation_Mark</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Quotation_Mark\"><code>Quotation_Mark</code></a></td>\n    </tr>\n    <tr>\n      <td><code>QMark</code></td>\n    </tr>\n    <tr>\n      <td><code>Radical</code></td>\n      <td><a href=\"https://unicode.org/reports/tr44/#Radical\"><code>Radical</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Regional_Indicator</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Regional_Indicator\"><code>Regional_Indicator</code></a></td>\n    </tr>\n    <tr>\n      <td><code>RI</code></td>\n    </tr>\n    <tr>\n      <td><code>Sentence_Terminal</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#STerm\"><code>Sentence_Terminal</code></a></td>\n    </tr>\n    <tr>\n      <td><code>STerm</code></td>\n    </tr>\n    <tr>\n      <td><code>Soft_Dotted</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Soft_Dotted\"><code>Soft_Dotted</code></a></td>\n    </tr>\n    <tr>\n      <td><code>SD</code></td>\n    </tr>\n    <tr>\n      <td><code>Terminal_Punctuation</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Terminal_Punctuation\"><code>Terminal_Punctuation</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Term</code></td>\n    </tr>\n    <tr>\n      <td><code>Unified_Ideograph</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Unified_Ideograph\"><code>Unified_Ideograph</code></a></td>\n    </tr>\n    <tr>\n      <td><code>UIdeo</code></td>\n    </tr>\n    <tr>\n      <td><code>Uppercase</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Uppercase\"><code>Uppercase</code></a></td>\n    </tr>\n    <tr>\n      <td><code>Upper</code></td>\n    </tr>\n    <tr>\n      <td><code>Variation_Selector</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#Variation_Selector\"><code>Variation_Selector</code></a></td>\n    </tr>\n    <tr>\n      <td><code>VS</code></td>\n    </tr>\n    <tr>\n      <td><code>White_Space</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#White_Space\"><code>White_Space</code></a></td>\n    </tr>\n    <tr>\n      <td><code>space</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Continue</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Continue\"><code>XID_Continue</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDC</code></td>\n    </tr>\n    <tr>\n      <td><code>XID_Start</code></td>\n      <td rowspan=\"2\"><a href=\"https://unicode.org/reports/tr44/#XID_Start\"><code>XID_Start</code></a></td>\n    </tr>\n    <tr>\n      <td><code>XIDS</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n          <emu-import href=\"table-binary-unicode-properties-of-strings.html\"><emu-table id=\"table-binary-unicode-properties-of-strings\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-binary-unicode-properties-of-strings\">#table-binary-unicode-properties-of-strings</span>: Binary Unicode properties of strings</figcaption>\n  \n  <table class=\"real-table unicode-property-table\">\n    <thead>\n      <tr>\n        <th><emu-xref href=\"#property-name\"><a href=\"#property-name\">Property name</a></emu-xref></th>\n      </tr>\n    </thead>\n    <tbody><tr>\n      <td><code>Basic_Emoji</code></td>\n    </tr>\n    <tr>\n      <td><code>Emoji_Keycap_Sequence</code></td>\n    </tr>\n    <tr>\n      <td><code>RGI_Emoji_Modifier_Sequence</code></td>\n    </tr>\n    <tr>\n      <td><code>RGI_Emoji_Flag_Sequence</code></td>\n    </tr>\n    <tr>\n      <td><code>RGI_Emoji_Tag_Sequence</code></td>\n    </tr>\n    <tr>\n      <td><code>RGI_Emoji_ZWJ_Sequence</code></td>\n    </tr>\n    \n      <tr><td><code>RGI_Emoji</code></td>\n    </tr>\n  </tbody></table>\n</figure></emu-table></emu-import>\n        </emu-clause>\n        "}}, "figData": {"table-nonbinary-unicode-properties": "Table 68", "table-binary-unicode-properties": "Table 69", "table-binary-unicode-properties-of-strings": "Table 70"}}}