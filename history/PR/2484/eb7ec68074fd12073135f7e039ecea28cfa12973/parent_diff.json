{"from": {"secList": ["sec-regexp.prototype-@@replace", "sec-string.prototype.replace", "sec-getsubstitution"], "secData": {"sec-regexp.prototype-@@replace": {"num": "22.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>))).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>nextIndex</var>), <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each element <var>result</var> of <var>results</var>, do<ol><li>Let <var>resultLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Let <var>nCaptures</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>resultLength</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"index\"</emu-val>)).</li><li>Set <var>position</var> to the result of <emu-xref href=\"#clamping\"><a href=\"#clamping\">clamping</a></emu-xref> <var>position</var> between 0 and <var>lengthS</var>.</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var>,<ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>))).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"groups\"</emu-val>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>position</var>) and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>namedCaptures</var> to ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>namedCaptures</var>).</li></ol></li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var>, the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var> to <var>position</var>, and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var>.</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.replace]\"</emu-val>.</p>\n      </emu-clause>\n\n      "}, "sec-string.prototype.replace": {"num": "22.1.3.18", "title": "#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replace\">#sec-string.prototype.replace</span> String.prototype.replace ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replace</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@replace</a></emu-xref>).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>searchLength</var> be the length of <var>searchString</var>.</li><li>Let <var>position</var> be !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, 0).</li><li>If <var>position</var> is -1, return <var>string</var>.</li><li>Let <var>preserved</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from 0 to <var>position</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>searchString</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>position</var>), <var>string</var> &#187;)).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replaceValue</var>) is String.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replacement</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>searchString</var>, <var>string</var>, <var>position</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>preserved</var>, <var>replacement</var>, and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>position</var> + <var>searchLength</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>replace</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getsubstitution\"><h1><span class=\"secnum\">22.1.3.18.1</span>#sec-getsubstitution GetSubstitution ( matched, str, position, captures, namedCaptures, replacement )</h1>...</div></emu-clause>\n\n      "}, "sec-getsubstitution": {"num": "22.1.3.18.1", "title": "#sec-getsubstitution GetSubstitution ( matched, str, position, captures, namedCaptures, replacement )", "html": "<emu-clause id=\"sec-getsubstitution\" type=\"abstract operation\" aoid=\"GetSubstitution\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getsubstitution\">#sec-getsubstitution</span> GetSubstitution ( <var>matched</var>, <var>str</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replacement</var> )</h1>\n          <p>The abstract operation GetSubstitution takes arguments <var>matched</var> (a String), <var>str</var> (a String), <var>position</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), <var>captures</var> (a possibly empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of Strings), <var>namedCaptures</var> (an Object or <emu-val>undefined</emu-val>), and <var>replacement</var> (a String). It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>stringLength</var> be the number of code units in <var>str</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>position</var> &#8804; <var>stringLength</var>.</li><li>Let <var>tailPos</var> be <var>position</var> + <var>matchLength</var>.</li><li>Let <var>m</var> be the number of elements in <var>captures</var>.</li><li>Let <var>result</var> be the String value derived from <var>replacement</var> by copying code unit elements from <var>replacement</var> to <var>result</var> while performing replacements as specified in <emu-xref href=\"#table-replacement-text-symbol-substitutions\"><a href=\"#table-replacement-text-symbol-substitutions\" class=\"excluded-xref\" excluded-id=\"table-replacement-text-symbol-substitutions\">#table-replacement-text-symbol-substitutions</a></emu-xref>. These <code>$</code> replacements are done left-to-right, and, once such a replacement is performed, the new replacement text is not subject to further replacements.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n          <emu-table id=\"table-replacement-text-symbol-substitutions\" caption=\"Replacement Text Symbol Substitutions\" oldids=\"table-45\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-replacement-text-symbol-substitutions\">#table-replacement-text-symbol-substitutions</span>: Replacement Text Symbol Substitutions</figcaption><span id=\"table-45\"></span>\n            <table>\n              <tbody><tr>\n                <th>\n                  Code units\n                </th>\n                <th>\n                  Unicode Characters\n                </th>\n                <th>\n                  Replacement text\n                </th>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, 0x0024\n                </td>\n                <td>\n                  <code>$$</code>\n                </td>\n                <td>\n                  <code>$</code>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, 0x0026\n                </td>\n                <td>\n                  <code>$&amp;</code>\n                </td>\n                <td>\n                  <var>matched</var>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, 0x0060\n                </td>\n                <td>\n                  <code>$`</code>\n                </td>\n                <td>\n                  The replacement is the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>str</var> from 0 to <var>position</var>.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, 0x0027\n                </td>\n                <td>\n                  <code>$'</code>\n                </td>\n                <td>\n                  If <var>tailPos</var> &#8805; <var>stringLength</var>, the replacement is the empty String. Otherwise the replacement is the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>str</var> from <var>tailPos</var>.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, N<br>\n                  Where<br>\n                  0x0031 &#8804; N &#8804; 0x0039\n                </td>\n                <td>\n                  <code>$n</code> where<br>\n                  <code>n</code> is one of <code>1 2 3 4 5 6 7 8 9</code> and <code>$n</code> is not followed by a decimal digit\n                </td>\n                <td>\n                  The <var>n</var><sup>th</sup> element of <var>captures</var>, where <var>n</var> is a single digit in the range 1 to 9. If <var>n</var> &#8804; <var>m</var> and the <var>n</var><sup>th</sup> element of <var>captures</var> is <emu-val>undefined</emu-val>, use the empty String instead. If <var>n</var> &gt; <var>m</var>, no replacement is done.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, N, N<br>\n                  Where<br>\n                  0x0030 &#8804; N &#8804; 0x0039\n                </td>\n                <td>\n                  <code>$nn</code> where<br>\n                  <code>n</code> is one of <code>0 1 2 3 4 5 6 7 8 9</code>\n                </td>\n                <td>\n                  The <var>nn</var><sup>th</sup> element of <var>captures</var>, where <var>nn</var> is a two-digit decimal number in the range 01 to 99. If <var>nn</var> &#8804; <var>m</var> and the <var>nn</var><sup>th</sup> element of <var>captures</var> is <emu-val>undefined</emu-val>, use the empty String instead. If <var>nn</var> is 00 or <var>nn</var> &gt; <var>m</var>, no replacement is done.\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024, 0x003C\n                </td>\n                <td>\n                  <code>$&lt;</code>\n                </td>\n                <td>\n                  <emu-alg><ol><li>If <var>namedCaptures</var> is <emu-val>undefined</emu-val>, the replacement text is the String <emu-val>\"$&lt;\"</emu-val>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>namedCaptures</var>) is Object.</li><li>Scan until the next <code>&gt;</code> U+003E (GREATER-THAN SIGN).</li><li>If none is found, the replacement text is the String <emu-val>\"$&lt;\"</emu-val>.</li><li>Else,<ol><li>Let <var>groupName</var> be the enclosed <emu-not-ref>substring</emu-not-ref>.</li><li>Let <var>capture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>namedCaptures</var>, <var>groupName</var>).</li><li>If <var>capture</var> is <emu-val>undefined</emu-val>, replace the text through <code>&gt;</code> with the empty String.</li><li>Otherwise, replace the text through <code>&gt;</code> with ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capture</var>).</li></ol></li></ol></li></ol></emu-alg>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  0x0024\n                </td>\n                <td>\n                  <code>$</code> in any context that does not match any of the above.\n                </td>\n                <td>\n                  <code>$</code>\n                </td>\n              </tr>\n            </tbody></table>\n          </figure></emu-table>\n        </emu-clause>\n      "}}, "figData": {"table-replacement-text-symbol-substitutions": "Table 66"}}, "to": {"secList": ["sec-regexp.prototype-@@replace", "sec-string.prototype.replace", "sec-getsubstitution"], "secData": {"sec-regexp.prototype-@@replace": {"num": "22.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"global\"</emu-val>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"unicode\"</emu-val>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>))).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>nextIndex</var>), <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each element <var>result</var> of <var>results</var>, do<ol><li>Let <var>resultLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Let <var>nCaptures</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>resultLength</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"0\"</emu-val>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"index\"</emu-val>)).</li><li>Set <var>position</var> to the result of <emu-xref href=\"#clamping\"><a href=\"#clamping\">clamping</a></emu-xref> <var>position</var> between 0 and <var>lengthS</var>.</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var>,<ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>))).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>NOTE: When <var>n</var> = 1, the preceding step puts the first element into <var>captures</var> (at index 0). More generally, the <var>n</var><sup>th</sup> capture (the characters captured by the <var>n</var><sup>th</sup> set of capturing parentheses) is at <var>captures</var>[<var>n</var> - 1].</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <emu-val>\"groups\"</emu-val>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>position</var>) and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>namedCaptures</var> to ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>namedCaptures</var>).</li></ol></li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var>, the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var> to <var>position</var>, and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>nextSourcePosition</var>.</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.replace]\"</emu-val>.</p>\n      </emu-clause>\n\n      "}, "sec-string.prototype.replace": {"num": "22.1.3.18", "title": "#sec-string.prototype.replace String.prototype.replace ( searchValue, replaceValue )", "html": "<emu-clause id=\"sec-string.prototype.replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.replace\">#sec-string.prototype.replace</span> String.prototype.replace ( <var>searchValue</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>replace</code> method is called with arguments <var>searchValue</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>searchValue</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>replacer</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>searchValue</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@replace</a></emu-xref>).</li><li>If <var>replacer</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replacer</var>, <var>searchValue</var>, &#171; <var>O</var>, <var>replaceValue</var> &#187;).</li></ol></li></ol></li><li>Let <var>string</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>searchString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>searchValue</var>).</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>searchLength</var> be the length of <var>searchString</var>.</li><li>Let <var>position</var> be !&#160;<emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>string</var>, <var>searchString</var>, 0).</li><li>If <var>position</var> is -1, return <var>string</var>.</li><li>Let <var>preceding</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from 0 to <var>position</var>.</li><li>Let <var>following</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>position</var> + <var>searchLength</var>.</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, &#171; <var>searchString</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>position</var>), <var>string</var> &#187;)).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replaceValue</var>) is String.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>replacement</var> be !&#160;<emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>searchString</var>, <var>string</var>, <var>position</var>, <var>captures</var>, <emu-val>undefined</emu-val>, <var>replaceValue</var>).</li></ol></li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>preceding</var>, <var>replacement</var>, and <var>following</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>replace</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getsubstitution\"><h1><span class=\"secnum\">22.1.3.18.1</span>#sec-getsubstitution GetSubstitution ( matched, str, position, captures, namedCaptures, replacementTemplate )</h1>...</div></emu-clause>\n\n      "}, "sec-getsubstitution": {"num": "22.1.3.18.1", "title": "#sec-getsubstitution GetSubstitution ( matched, str, position, captures, namedCaptures, replacementTemplate )", "html": "<emu-clause id=\"sec-getsubstitution\" type=\"abstract operation\" oldids=\"table-replacement-text-symbol-substitutions,table-45\" aoid=\"GetSubstitution\"><span id=\"table-45\"></span><span id=\"table-replacement-text-symbol-substitutions\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getsubstitution\">#sec-getsubstitution</span> GetSubstitution ( <var>matched</var>, <var>str</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replacementTemplate</var> )</h1>\n          <p>The abstract operation GetSubstitution takes arguments <var>matched</var> (a String), <var>str</var> (a String), <var>position</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), <var>captures</var> (a possibly empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>, each of whose elements is a String or <emu-val>undefined</emu-val>), <var>namedCaptures</var> (an Object or <emu-val>undefined</emu-val>), and <var>replacementTemplate</var> (a String). For the purposes of this abstract operation, a <em>decimal digit</em> is a code unit in the range 0x0030 (DIGIT ZERO) to 0x0039 (DIGIT NINE) inclusive. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>stringLength</var> be the number of code units in <var>str</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>position</var> &#8804; <var>stringLength</var>.</li><li>Let <var>templateRemainder</var> be <var>replacementTemplate</var>.</li><li>Let <var>result</var> be the empty String.</li><li>Repeat, while <var>templateRemainder</var> is not the empty String,<ol><li>NOTE: The following steps isolate <var>ref</var> (a prefix of <var>templateRemainder</var>), determine <var>refReplacement</var> (its replacement), and then append that replacement to <var>result</var>.</li><li>If <var>templateRemainder</var> starts with <emu-val>\"$$\"</emu-val>, then<ol><li>Let <var>ref</var> be <emu-val>\"$$\"</emu-val>.</li><li>Let <var>refReplacement</var> be <emu-val>\"$\"</emu-val>.</li></ol></li><li>Else if <var>templateRemainder</var> starts with <emu-val>\"$`\"</emu-val>, then<ol><li>Let <var>ref</var> be <emu-val>\"$`\"</emu-val>.</li><li>Let <var>refReplacement</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>str</var> from 0 to <var>position</var>.</li></ol></li><li>Else if <var>templateRemainder</var> starts with <emu-val>\"$&amp;\"</emu-val>, then<ol><li>Let <var>ref</var> be <emu-val>\"$&amp;\"</emu-val>.</li><li>Let <var>refReplacement</var> be <var>matched</var>.</li></ol></li><li>Else if <var>templateRemainder</var> starts with <emu-val>\"$'\"</emu-val> (0x0024 (DOLLAR SIGN) followed by 0x0027 (APOSTROPHE)), then<ol><li>Let <var>ref</var> be <emu-val>\"$'\"</emu-val>.</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>tailPos</var> be <var>position</var> + <var>matchLength</var>.</li><li>Let <var>refReplacement</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>str</var> from <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>tailPos</var>, <var>stringLength</var>).</li></ol></li><li>Else if <var>templateRemainder</var> starts with <emu-val>\"$\"</emu-val> followed by 1 or more decimal digits, then<ol><li>Let <var>found</var> be <emu-val>false</emu-val>.</li><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>d</var> of &#171; 2, 1 &#187;, do<ol><li>If <var>found</var> is <emu-val>false</emu-val> and <var>templateRemainder</var> starts with <emu-val>\"$\"</emu-val> followed by <var>d</var> or more decimal digits, then<ol><li>Set <var>found</var> to <emu-val>true</emu-val>.</li><li>Let <var>ref</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>templateRemainder</var> from 0 to 1 + <var>d</var>.</li><li>Let <var>digits</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>templateRemainder</var> from 1 to 1 + <var>d</var>.</li><li>Let <var>index</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<emu-xref aoid=\"StringToNumber\"><a href=\"#sec-stringtonumber\">StringToNumber</a></emu-xref>(<var>digits</var>)).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: 0 &#8804; <var>index</var> &#8804; 99.</li><li>If <var>index</var> = 0, then<ol><li>Let <var>refReplacement</var> be <var>ref</var>.</li></ol></li><li>Else if <var>index</var> &#8804; the number of elements in <var>captures</var>, then<ol><li>Let <var>capture</var> be <var>captures</var>[<var>index</var> - 1].</li><li>If <var>capture</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>refReplacement</var> be the empty String.</li></ol></li><li>Else,<ol><li>Let <var>refReplacement</var> be <var>capture</var>.</li></ol></li></ol></li><li>Else,<ol><li>Let <var>refReplacement</var> be <var>ref</var>.</li></ol></li></ol></li></ol></li></ol></li><li>Else if <var>templateRemainder</var> starts with <emu-val>\"$&lt;\"</emu-val>, then<ol><li>Let <var>gtPos</var> be <emu-xref aoid=\"StringIndexOf\"><a href=\"#sec-stringindexof\">StringIndexOf</a></emu-xref>(<var>templateRemainder</var>, <emu-val>\"&gt;\"</emu-val>, 0).</li><li>If <var>gtPos</var> = -1 or <var>namedCaptures</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>ref</var> be <emu-val>\"$&lt;\"</emu-val>.</li><li>Let <var>refReplacement</var> be <var>ref</var>.</li></ol></li><li>Else,<ol><li>Let <var>ref</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>templateRemainder</var> from 0 to <var>gtPos</var> + 1.</li><li>Let <var>groupName</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>templateRemainder</var> from 2 to <var>gtPos</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>namedCaptures</var>) is Object.</li><li>Let <var>capture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>namedCaptures</var>, <var>groupName</var>).</li><li>If <var>capture</var> is <emu-val>undefined</emu-val>, then<ol><li>Let <var>refReplacement</var> be the empty String.</li></ol></li><li>Else,<ol><li>Let <var>refReplacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capture</var>).</li></ol></li></ol></li></ol></li><li>Else,<ol><li>Let <var>ref</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>templateRemainder</var> from 0 to 1.</li><li>Let <var>refReplacement</var> be <var>ref</var>.</li></ol></li><li>Let <var>refLength</var> be the number of code units in <var>ref</var>.</li><li>Set <var>templateRemainder</var> to the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>templateRemainder</var> from <var>refLength</var>.</li><li>Set <var>result</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>result</var> and <var>refReplacement</var>.</li></ol></li><li>Return <var>result</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}}, "figData": {}}}