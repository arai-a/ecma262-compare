{"from": {"secList": ["sec-module-semantics-static-semantics-early-errors", "sec-strict-mode-code", "sec-directive-prologues-and-the-use-strict-directive", "sec-scripts-static-semantics-early-errors", "sec-types-of-source-code", "sec-strict-variant-of-ecmascript", "sec-function-definitions", "sec-function-definitions-static-semantics-early-errors"], "secData": {"sec-module-semantics-static-semantics-early-errors": {"num": "15.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the ExportedNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the ExportedBindings of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate ExportedNames rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-strict-mode-code": {"num": "10.2.1", "title": "#sec-strict-mode-code Strict Mode Code", "html": "<emu-clause id=\"sec-strict-mode-code\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</span> Strict Mode Code</h1>\n      <p>An ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntactic unit may be processed using either unrestricted or strict mode syntax and semantics. Code is interpreted as <dfn>strict mode code</dfn> in the following situations:</p>\n      <ul>\n        <li>\n          Global code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Module code is always strict mode code.\n        </li>\n        <li>\n          All parts of a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> are strict mode code.\n        </li>\n        <li>\n          Eval code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> or if the call to <code>eval</code> is a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> that is contained in strict mode code.\n        </li>\n        <li>\n          Function code is strict mode code if the associated <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> is contained in strict mode code or if the code that produces the value of the function's [[ECMAScriptCode]] internal slot begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Function code that is supplied as the arguments to the built-in Function, Generator, AsyncFunction, and AsyncGenerator constructors is strict mode code if the last argument is a String that when processed is a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> that begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n      </ul>\n      <p>ECMAScript code that is not strict mode code is called <dfn id=\"non-strict-code\">non-strict code</dfn>.</p>\n    </emu-clause>\n\n    "}, "sec-directive-prologues-and-the-use-strict-directive": {"num": "14.1.1", "title": "#sec-directive-prologues-and-the-use-strict-directive Directive Prologues and the Use Strict Directive", "html": "<emu-clause id=\"sec-directive-prologues-and-the-use-strict-directive\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-directive-prologues-and-the-use-strict-directive\">#sec-directive-prologues-and-the-use-strict-directive</span> Directive Prologues and the Use Strict Directive</h1>\n      <p>A <dfn id=\"directive-prologue\">Directive Prologue</dfn> is the longest sequence of <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s occurring as the initial <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>s or <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>s of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, a <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt>, or a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> and where each <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in the sequence consists entirely of a <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> token followed by a semicolon. The semicolon may appear explicitly or may be inserted by automatic semicolon insertion. A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may be an empty sequence.</p>\n      <p>A <dfn id=\"use-strict-directive\">Use Strict Directive</dfn> is an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> is either of the exact code point sequences <code>\"use strict\"</code> or <code>'use strict'</code>. A <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> may not contain an <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> or <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt>.</p>\n      <p>A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may contain more than one <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>. However, an implementation may issue a warning if this occurs.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s of a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> are evaluated normally during evaluation of the containing production. Implementations may define implementation specific meanings for <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s which are not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which occur in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref>. If an appropriate notification mechanism exists, an implementation should issue a warning if it encounters in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> that is not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which does not have a meaning defined by the implementation.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-scripts-static-semantics-early-errors": {"num": "15.1.1", "title": "#sec-scripts-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-scripts-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-static-semantics-early-errors\">#sec-scripts-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"Script\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b78f99cc\"><emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> contains any duplicate entries.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"ScriptBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cf403a0c\"><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> Contains <code>super</code> unless the source code containing <code>super</code> is eval code that is being processed by a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref>. Additional <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <code>super</code> within <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> are defined in <emu-xref href=\"#sec-performeval\"><a href=\"#sec-performeval\" class=\"excluded-xref\" excluded-id=\"sec-performeval\">#sec-performeval</a></emu-xref>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt> unless the source code containing <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt> is eval code that is being processed by a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref>. Additional <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt> in <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> are defined in <emu-xref href=\"#sec-performeval\"><a href=\"#sec-performeval\" class=\"excluded-xref\" excluded-id=\"sec-performeval\">#sec-performeval</a></emu-xref>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-types-of-source-code": {"num": "10.2", "title": "#sec-types-of-source-code Types of Source Code", "html": "<emu-clause id=\"sec-types-of-source-code\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-types-of-source-code\">#sec-types-of-source-code</span> Types of Source Code</h1>\n    <p>There are four types of ECMAScript code:</p>\n    <ul>\n      <li>\n        <em>Global code</em> is source text that is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The global code of a particular <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> does not include any source text that is parsed as part of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      </li>\n      <li>\n        <em>Eval code</em> is the source text supplied to the built-in <code>eval</code> function. More precisely, if the parameter to the built-in <code>eval</code> function is a String, it is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The eval code for a particular invocation of <code>eval</code> is the global code portion of that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>.\n      </li>\n      <li>\n        <p><em>Function code</em> is source text that is parsed to supply the value of the [[ECMAScriptCode]] and [[FormalParameters]] internal slots (see <emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. The function code of a particular ECMAScript function does not include any source text that is parsed as the function code of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</p>\n        <p>In addition, if the source text referred to above is parsed as:</p>\n        <ul>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> of a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, or</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>,</li>\n        </ul>\n        <p>then the source text matching the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> (if any) of that declaration or expression is also included in the function code of the corresponding function.</p>\n      </li>\n      <li>\n        <em>Module code</em> is source text that is code that is provided as a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt>. It is the code that is directly evaluated when a module is initialized. The module code of a particular module does not include any source text that is parsed as part of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      </li>\n    </ul>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Function code is generally provided as the bodies of Function Definitions (<emu-xref href=\"#sec-function-definitions\"><a href=\"#sec-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</a></emu-xref>), Arrow Function Definitions (<emu-xref href=\"#sec-arrow-function-definitions\"><a href=\"#sec-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-arrow-function-definitions\">#sec-arrow-function-definitions</a></emu-xref>), Method Definitions (<emu-xref href=\"#sec-method-definitions\"><a href=\"#sec-method-definitions\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions\">#sec-method-definitions</a></emu-xref>), Generator Function Definitions (<emu-xref href=\"#sec-generator-function-definitions\"><a href=\"#sec-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-generator-function-definitions\">#sec-generator-function-definitions</a></emu-xref>), Async Function Definitions (<emu-xref href=\"#sec-async-function-definitions\"><a href=\"#sec-async-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</a></emu-xref>), Async Generator Function Definitions (<emu-xref href=\"#sec-async-generator-function-definitions\"><a href=\"#sec-async-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-generator-function-definitions\">#sec-async-generator-function-definitions</a></emu-xref>), and Async Arrow Functions (<emu-xref href=\"#sec-async-arrow-function-definitions\"><a href=\"#sec-async-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</a></emu-xref>). Function code is also derived from the arguments to the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-p1-p2-pn-body\"><a href=\"#sec-function-p1-p2-pn-body\" class=\"excluded-xref\" excluded-id=\"sec-function-p1-p2-pn-body\">#sec-function-p1-p2-pn-body</a></emu-xref>), the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-generatorfunction\"><a href=\"#sec-generatorfunction\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction\">#sec-generatorfunction</a></emu-xref>), and the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-async-function-constructor-arguments\"><a href=\"#sec-async-function-constructor-arguments\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor-arguments\">#sec-async-function-constructor-arguments</a></emu-xref>).</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The practical effect of including the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in function code is that the Early Errors for <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> are applied to a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> that is the name of a function whose body contains a \"use strict\" directive, even if the surrounding code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-strict-mode-code\"><h1><span class=\"secnum\">10.2.1</span>#sec-strict-mode-code Strict Mode Code</h1>...</div><div id=\"excluded-sec-non-ecmascript-functions\"><h1><span class=\"secnum\">10.2.2</span>#sec-non-ecmascript-functions Non-ECMAScript Functions</h1>...</div></emu-clause>\n"}, "sec-strict-variant-of-ecmascript": {"num": "4.3.2", "title": "#sec-strict-variant-of-ecmascript The Strict Variant of ECMAScript", "html": "<emu-clause id=\"sec-strict-variant-of-ecmascript\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-variant-of-ecmascript\">#sec-strict-variant-of-ecmascript</span> The Strict Variant of ECMAScript</h1>\n      <p>The ECMAScript Language recognizes the possibility that some users of the language may wish to restrict their usage of some features available in the language. They might do so in the interests of security, to avoid what they consider to be error-prone features, to get enhanced error checking, or for other reasons of their choosing. In support of this possibility, ECMAScript defines a strict variant of the language. The strict variant of the language excludes some specific syntactic and semantic features of the regular ECMAScript language and modifies the detailed semantics of some features. The strict variant also specifies additional error conditions that must be reported by throwing error exceptions in situations that are not specified as errors by the non-strict form of the language.</p>\n      <p>The strict variant of ECMAScript is commonly referred to as the <em>strict mode</em> of the language. Strict mode selection and use of the strict mode syntax and semantics of ECMAScript is explicitly made at the level of individual ECMAScript source text units. Because strict mode is selected at the level of a syntactic source text unit, strict mode only imposes restrictions that have local effect within such a source text unit. Strict mode does not restrict or modify any aspect of the ECMAScript semantics that must operate consistently across multiple source text units. A complete ECMAScript program may be composed of both strict mode and non-strict mode ECMAScript source text units. In this case, strict mode only applies when actually executing code that is defined within a strict mode source text unit.</p>\n      <p>In order to conform to this specification, an ECMAScript implementation must implement both the full unrestricted ECMAScript language and the strict variant of the ECMAScript language as defined by this specification. In addition, an implementation must support the combination of unrestricted and strict mode source text units into a single composite program.</p>\n    </emu-clause>\n  "}, "sec-function-definitions": {"num": "14.1", "title": "#sec-function-definitions Function Definitions", "html": "<emu-clause id=\"sec-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</span> Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-FunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7c02f6b3\"><emu-t>function</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"ff05b860\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" id=\"prod-FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1faafdcc\"><emu-t>function</emu-t><emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"UniqueFormalParameters\" params=\"Yield, Await\" id=\"prod-UniqueFormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"900b794a\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameters\" params=\"Yield, Await\" id=\"prod-FormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"c52f7805\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e5fdd15f\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"58349494\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t></emu-rhs>\n    <emu-rhs a=\"607f4086\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameterList\" params=\"Yield, Await\" id=\"prod-FormalParameterList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dd0854fb\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"30b35c7e\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionRestParameter\" params=\"Yield, Await\" id=\"prod-FunctionRestParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"216da14c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameter\" params=\"Yield, Await\" id=\"prod-FormalParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c6930e11\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionBody\" params=\"Yield, Await\" id=\"prod-FunctionBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82527203\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionStatementList\" params=\"Yield, Await\" id=\"prod-FunctionStatementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2267baf8\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-directive-prologues-and-the-use-strict-directive\"><h1><span class=\"secnum\">14.1.1</span>#sec-directive-prologues-and-the-use-strict-directive Directive Prologues and the Use Strict Directive</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.1.2</span>#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-boundnames\"><h1><span class=\"secnum\">14.1.3</span>#sec-function-definitions-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-contains\"><h1><span class=\"secnum\">14.1.4</span>#sec-function-definitions-static-semantics-contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsduplicatelabels\"><h1><span class=\"secnum\">14.1.5</span>#sec-function-definitions-static-semantics-containsduplicatelabels Static Semantics: ContainsDuplicateLabels</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsexpression\"><h1><span class=\"secnum\">14.1.6</span>#sec-function-definitions-static-semantics-containsexpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedbreaktarget\"><h1><span class=\"secnum\">14.1.7</span>#sec-function-definitions-static-semantics-containsundefinedbreaktarget Static Semantics: ContainsUndefinedBreakTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedcontinuetarget\"><h1><span class=\"secnum\">14.1.8</span>#sec-function-definitions-static-semantics-containsundefinedcontinuetarget Static Semantics: ContainsUndefinedContinueTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.1.9</span>#sec-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-expectedargumentcount\"><h1><span class=\"secnum\">14.1.10</span>#sec-function-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasinitializer\"><h1><span class=\"secnum\">14.1.11</span>#sec-function-definitions-static-semantics-hasinitializer Static Semantics: HasInitializer</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasname\"><h1><span class=\"secnum\">14.1.12</span>#sec-function-definitions-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-isanonymousfunctiondefinition\"><h1><span class=\"secnum\">14.1.13</span>#sec-isanonymousfunctiondefinition Static Semantics: IsAnonymousFunctionDefinition ( expr )</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isconstantdeclaration\"><h1><span class=\"secnum\">14.1.14</span>#sec-function-definitions-static-semantics-isconstantdeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">14.1.15</span>#sec-function-definitions-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-issimpleparameterlist\"><h1><span class=\"secnum\">14.1.16</span>#sec-function-definitions-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">14.1.17</span>#sec-function-definitions-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">14.1.18</span>#sec-function-definitions-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">14.1.19</span>#sec-function-definitions-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">14.1.20</span>#sec-function-definitions-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">14.1.21</span>#sec-function-definitions-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">14.1.22</span>#sec-function-definitions-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-instantiatefunctionobject\"><h1><span class=\"secnum\">14.1.23</span>#sec-function-definitions-runtime-semantics-instantiatefunctionobject Runtime Semantics: InstantiateFunctionObject</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.1.24</span>#sec-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.1.25</span>#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-function-definitions-static-semantics-early-errors": {"num": "14.1.2", "title": "#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8379937e\"><emu-t>function</emu-t><emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> are applied.\n        </li>\n        <li>\n          If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>The LexicallyDeclaredNames of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> does not include identifiers bound using var or function declarations.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"32e3c3aa\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>false</emu-val> and BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Multiple occurrences of the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is only allowed for functions which have simple parameter lists and which are not defined in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5cdf1a9f\"><emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> contains any duplicate entries.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-module-semantics-static-semantics-early-errors", "sec-strict-mode-code", "sec-directive-prologues-and-the-use-strict-directive", "sec-scripts-static-semantics-early-errors", "sec-types-of-source-code", "sec-strict-variant-of-ecmascript", "sec-function-definitions", "sec-function-definitions-static-semantics-early-errors"], "secData": {"sec-module-semantics-static-semantics-early-errors": {"num": "15.2.1.1", "title": "#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-module-semantics-static-semantics-early-errors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics-static-semantics-early-errors\">#sec-module-semantics-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n        <emu-grammar><emu-production name=\"ModuleBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <ul>\n          <li>\n            It is a Syntax Error if the <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> of <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> contains both a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> contains a <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n          </li>\n          <li>\n            It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if the ExportedNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> contains any duplicate entries.\n          </li>\n          <li>\n            It is a Syntax Error if any element of the ExportedBindings of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> does not also occur in either the VarDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>, or the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <code>super</code>.\n          </li>\n          <li>\n            It is a Syntax Error if <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n          <li>\n            It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The duplicate ExportedNames rule implies that multiple <code>export default</code> <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> items within a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> is a Syntax Error. Additional error conditions relating to conflicting or duplicate declarations are checked during module linking prior to evaluation of a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. If any such errors are detected the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is not evaluated.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-strict-mode-code": {"num": "10.2.2", "title": "#sec-strict-mode-code Strict Mode Code", "html": "<emu-clause id=\"sec-strict-mode-code\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</span> Strict Mode Code</h1>\n      <p>An ECMAScript syntactic unit may be processed using either unrestricted or strict mode syntax and semantics (<emu-xref href=\"#sec-strict-variant-of-ecmascript\"><a href=\"#sec-strict-variant-of-ecmascript\" class=\"excluded-xref\" excluded-id=\"sec-strict-variant-of-ecmascript\">#sec-strict-variant-of-ecmascript</a></emu-xref>). Code is interpreted as <dfn>strict mode code</dfn> in the following situations:</p>\n      <ul>\n        <li>\n          Global code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Module code is always strict mode code.\n        </li>\n        <li>\n          All parts of a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> are strict mode code.\n        </li>\n        <li>\n          Eval code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> or if the call to <code>eval</code> is a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> that is contained in strict mode code.\n        </li>\n        <li>\n          Function code is strict mode code if the associated <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> is contained in strict mode code or if the code that produces the value of the function's [[ECMAScriptCode]] internal slot begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n        <li>\n          Function code that is supplied as the arguments to the built-in Function, Generator, AsyncFunction, and AsyncGenerator constructors is strict mode code if the last argument is a String that when processed is a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> that begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        </li>\n      </ul>\n      <p>ECMAScript code that is not strict mode code is called <dfn id=\"non-strict-code\">non-strict code</dfn>.</p>\n    </emu-clause>\n\n    "}, "sec-directive-prologues-and-the-use-strict-directive": {"num": "10.2.1", "title": "#sec-directive-prologues-and-the-use-strict-directive Directive Prologues and the Use Strict Directive", "html": "<emu-clause id=\"sec-directive-prologues-and-the-use-strict-directive\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-directive-prologues-and-the-use-strict-directive\">#sec-directive-prologues-and-the-use-strict-directive</span> Directive Prologues and the Use Strict Directive</h1>\n      <p>A <dfn id=\"directive-prologue\">Directive Prologue</dfn> is the longest sequence of <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s occurring as the initial <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>s or <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt>s of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, a <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt>, or a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt> and where each <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in the sequence consists entirely of a <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> token followed by a semicolon. The semicolon may appear explicitly or may be inserted by automatic semicolon insertion (<emu-xref href=\"#sec-automatic-semicolon-insertion\"><a href=\"#sec-automatic-semicolon-insertion\" class=\"excluded-xref\" excluded-id=\"sec-automatic-semicolon-insertion\">#sec-automatic-semicolon-insertion</a></emu-xref>). A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may be an empty sequence.</p>\n      <p>A <dfn id=\"use-strict-directive\">Use Strict Directive</dfn> is an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> is either of the exact code point sequences <code>\"use strict\"</code> or <code>'use strict'</code>. A <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> may not contain an <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> or <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt>.</p>\n      <p>A <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> may contain more than one <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>. However, an implementation may issue a warning if this occurs.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s of a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> are evaluated normally during evaluation of the containing production. Implementations may define implementation specific meanings for <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>s which are not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which occur in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref>. If an appropriate notification mechanism exists, an implementation should issue a warning if it encounters in a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> that is not a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and which does not have a meaning defined by the implementation.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-scripts-static-semantics-early-errors": {"num": "15.1.1", "title": "#sec-scripts-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-scripts-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-static-semantics-early-errors\">#sec-scripts-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"Script\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b78f99cc\"><emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> contains any duplicate entries.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"ScriptBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cf403a0c\"><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> of <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt> contains both a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> contains a <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> Contains <code>super</code> unless the source code containing <code>super</code> is eval code that is being processed by a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref>. Additional <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <code>super</code> within <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> are defined in <emu-xref href=\"#sec-performeval\"><a href=\"#sec-performeval\" class=\"excluded-xref\" excluded-id=\"sec-performeval\">#sec-performeval</a></emu-xref>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> Contains <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt> unless the source code containing <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt> is eval code that is being processed by a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref>. Additional <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <emu-nt><a href=\"#prod-NewTarget\">NewTarget</a></emu-nt> in <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> are defined in <emu-xref href=\"#sec-performeval\"><a href=\"#sec-performeval\" class=\"excluded-xref\" excluded-id=\"sec-performeval\">#sec-performeval</a></emu-xref>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-types-of-source-code": {"num": "10.2", "title": "#sec-types-of-source-code Types of Source Code", "html": "<emu-clause id=\"sec-types-of-source-code\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-types-of-source-code\">#sec-types-of-source-code</span> Types of Source Code</h1>\n    <p>There are four types of ECMAScript code:</p>\n    <ul>\n      <li>\n        <em>Global code</em> is source text that is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The global code of a particular <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> does not include any source text that is parsed as part of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      </li>\n      <li>\n        <em>Eval code</em> is the source text supplied to the built-in <code>eval</code> function. More precisely, if the parameter to the built-in <code>eval</code> function is a String, it is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The eval code for a particular invocation of <code>eval</code> is the global code portion of that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>.\n      </li>\n      <li>\n        <p><em>Function code</em> is source text that is parsed to supply the value of the [[ECMAScriptCode]] and [[FormalParameters]] internal slots (see <emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. The function code of a particular ECMAScript function does not include any source text that is parsed as the function code of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</p>\n        <p>In addition, if the source text referred to above is parsed as:</p>\n        <ul>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> of a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, or</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>,</li>\n        </ul>\n        <p>then the source text matching the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> (if any) of that declaration or expression is also included in the function code of the corresponding function.</p>\n      </li>\n      <li>\n        <em>Module code</em> is source text that is code that is provided as a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt>. It is the code that is directly evaluated when a module is initialized. The module code of a particular module does not include any source text that is parsed as part of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      </li>\n    </ul>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Function code is generally provided as the bodies of Function Definitions (<emu-xref href=\"#sec-function-definitions\"><a href=\"#sec-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</a></emu-xref>), Arrow Function Definitions (<emu-xref href=\"#sec-arrow-function-definitions\"><a href=\"#sec-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-arrow-function-definitions\">#sec-arrow-function-definitions</a></emu-xref>), Method Definitions (<emu-xref href=\"#sec-method-definitions\"><a href=\"#sec-method-definitions\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions\">#sec-method-definitions</a></emu-xref>), Generator Function Definitions (<emu-xref href=\"#sec-generator-function-definitions\"><a href=\"#sec-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-generator-function-definitions\">#sec-generator-function-definitions</a></emu-xref>), Async Function Definitions (<emu-xref href=\"#sec-async-function-definitions\"><a href=\"#sec-async-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</a></emu-xref>), Async Generator Function Definitions (<emu-xref href=\"#sec-async-generator-function-definitions\"><a href=\"#sec-async-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-generator-function-definitions\">#sec-async-generator-function-definitions</a></emu-xref>), and Async Arrow Functions (<emu-xref href=\"#sec-async-arrow-function-definitions\"><a href=\"#sec-async-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</a></emu-xref>). Function code is also derived from the arguments to the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-p1-p2-pn-body\"><a href=\"#sec-function-p1-p2-pn-body\" class=\"excluded-xref\" excluded-id=\"sec-function-p1-p2-pn-body\">#sec-function-p1-p2-pn-body</a></emu-xref>), the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-generatorfunction\"><a href=\"#sec-generatorfunction\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction\">#sec-generatorfunction</a></emu-xref>), and the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-async-function-constructor-arguments\"><a href=\"#sec-async-function-constructor-arguments\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor-arguments\">#sec-async-function-constructor-arguments</a></emu-xref>).</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The practical effect of including the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in function code is that the Early Errors for <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> are applied to a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> that is the name of a function whose body contains a \"use strict\" directive, even if the surrounding code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-directive-prologues-and-the-use-strict-directive\"><h1><span class=\"secnum\">10.2.1</span>#sec-directive-prologues-and-the-use-strict-directive Directive Prologues and the Use Strict Directive</h1>...</div><div id=\"excluded-sec-strict-mode-code\"><h1><span class=\"secnum\">10.2.2</span>#sec-strict-mode-code Strict Mode Code</h1>...</div><div id=\"excluded-sec-non-ecmascript-functions\"><h1><span class=\"secnum\">10.2.3</span>#sec-non-ecmascript-functions Non-ECMAScript Functions</h1>...</div></emu-clause>\n"}, "sec-strict-variant-of-ecmascript": {"num": "4.3.2", "title": "#sec-strict-variant-of-ecmascript The Strict Variant of ECMAScript", "html": "<emu-clause id=\"sec-strict-variant-of-ecmascript\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-variant-of-ecmascript\">#sec-strict-variant-of-ecmascript</span> The Strict Variant of ECMAScript</h1>\n      <p>The ECMAScript Language recognizes the possibility that some users of the language may wish to restrict their usage of some features available in the language. They might do so in the interests of security, to avoid what they consider to be error-prone features, to get enhanced error checking, or for other reasons of their choosing. In support of this possibility, ECMAScript defines a strict variant of the language. The strict variant of the language excludes some specific syntactic and semantic features of the regular ECMAScript language and modifies the detailed semantics of some features. The strict variant also specifies additional error conditions that must be reported by throwing error exceptions in situations that are not specified as errors by the non-strict form of the language.</p>\n      <p>The strict variant of ECMAScript is commonly referred to as the <em>strict mode</em> of the language. Strict mode selection and use of the strict mode syntax and semantics of ECMAScript is explicitly made at the level of individual ECMAScript source text units as described in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\" class=\"excluded-xref\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</a></emu-xref>. Because strict mode is selected at the level of a syntactic source text unit, strict mode only imposes restrictions that have local effect within such a source text unit. Strict mode does not restrict or modify any aspect of the ECMAScript semantics that must operate consistently across multiple source text units. A complete ECMAScript program may be composed of both strict mode and non-strict mode ECMAScript source text units. In this case, strict mode only applies when actually executing code that is defined within a strict mode source text unit.</p>\n      <p>In order to conform to this specification, an ECMAScript implementation must implement both the full unrestricted ECMAScript language and the strict variant of the ECMAScript language as defined by this specification. In addition, an implementation must support the combination of unrestricted and strict mode source text units into a single composite program.</p>\n    </emu-clause>\n  "}, "sec-function-definitions": {"num": "14.1", "title": "#sec-function-definitions Function Definitions", "html": "<emu-clause id=\"sec-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</span> Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-FunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7c02f6b3\"><emu-t>function</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"ff05b860\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" id=\"prod-FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1faafdcc\"><emu-t>function</emu-t><emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"UniqueFormalParameters\" params=\"Yield, Await\" id=\"prod-UniqueFormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"900b794a\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameters\" params=\"Yield, Await\" id=\"prod-FormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"c52f7805\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e5fdd15f\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"58349494\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t></emu-rhs>\n    <emu-rhs a=\"607f4086\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameterList\" params=\"Yield, Await\" id=\"prod-FormalParameterList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dd0854fb\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"30b35c7e\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionRestParameter\" params=\"Yield, Await\" id=\"prod-FunctionRestParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"216da14c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameter\" params=\"Yield, Await\" id=\"prod-FormalParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c6930e11\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionBody\" params=\"Yield, Await\" id=\"prod-FunctionBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82527203\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionStatementList\" params=\"Yield, Await\" id=\"prod-FunctionStatementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2267baf8\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.1.1</span>#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-boundnames\"><h1><span class=\"secnum\">14.1.2</span>#sec-function-definitions-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-contains\"><h1><span class=\"secnum\">14.1.3</span>#sec-function-definitions-static-semantics-contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsduplicatelabels\"><h1><span class=\"secnum\">14.1.4</span>#sec-function-definitions-static-semantics-containsduplicatelabels Static Semantics: ContainsDuplicateLabels</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsexpression\"><h1><span class=\"secnum\">14.1.5</span>#sec-function-definitions-static-semantics-containsexpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedbreaktarget\"><h1><span class=\"secnum\">14.1.6</span>#sec-function-definitions-static-semantics-containsundefinedbreaktarget Static Semantics: ContainsUndefinedBreakTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedcontinuetarget\"><h1><span class=\"secnum\">14.1.7</span>#sec-function-definitions-static-semantics-containsundefinedcontinuetarget Static Semantics: ContainsUndefinedContinueTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.1.8</span>#sec-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-expectedargumentcount\"><h1><span class=\"secnum\">14.1.9</span>#sec-function-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasinitializer\"><h1><span class=\"secnum\">14.1.10</span>#sec-function-definitions-static-semantics-hasinitializer Static Semantics: HasInitializer</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasname\"><h1><span class=\"secnum\">14.1.11</span>#sec-function-definitions-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-isanonymousfunctiondefinition\"><h1><span class=\"secnum\">14.1.12</span>#sec-isanonymousfunctiondefinition Static Semantics: IsAnonymousFunctionDefinition ( expr )</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isconstantdeclaration\"><h1><span class=\"secnum\">14.1.13</span>#sec-function-definitions-static-semantics-isconstantdeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">14.1.14</span>#sec-function-definitions-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-issimpleparameterlist\"><h1><span class=\"secnum\">14.1.15</span>#sec-function-definitions-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">14.1.16</span>#sec-function-definitions-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">14.1.17</span>#sec-function-definitions-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">14.1.18</span>#sec-function-definitions-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">14.1.19</span>#sec-function-definitions-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">14.1.20</span>#sec-function-definitions-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">14.1.21</span>#sec-function-definitions-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-instantiatefunctionobject\"><h1><span class=\"secnum\">14.1.22</span>#sec-function-definitions-runtime-semantics-instantiatefunctionobject Runtime Semantics: InstantiateFunctionObject</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.1.23</span>#sec-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.1.24</span>#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-function-definitions-static-semantics-early-errors": {"num": "14.1.1", "title": "#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8379937e\"><emu-t>function</emu-t><emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> are applied.\n        </li>\n        <li>\n          If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>The LexicallyDeclaredNames of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> does not include identifiers bound using var or function declarations.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"32e3c3aa\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>false</emu-val> and BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Multiple occurrences of the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is only allowed for functions which have simple parameter lists and which are not defined in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5cdf1a9f\"><emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> contains both a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> and an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt> whose <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> contains a <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> or <emu-xref href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><a href=\"#prod-annexB-NonOctalDecimalEscapeSequence\"><emu-nt>NonOctalDecimalEscapeSequence</emu-nt></a></emu-xref> as described in <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n        </li>\n        <li>\n          It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> contains any duplicate entries.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}}, "figData": {}}}