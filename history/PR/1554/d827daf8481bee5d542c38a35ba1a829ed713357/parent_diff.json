{"from": {"secList": ["sec-tonumber-applied-to-the-string-type", "sec-numericvalue", "sec-runtime-semantics-mv-s", "sec-tonumber", "sec-static-semantics-mv"], "secData": {"sec-tonumber-applied-to-the-string-type": {"num": "7.1.4.1", "title": "#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type", "html": "<emu-clause id=\"sec-tonumber-applied-to-the-string-type\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</span> ToNumber Applied to the String Type</h1>\n        <p><emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to Strings applies the following grammar to the input String interpreted as a sequence of UTF-16 encoded code points (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). If the grammar cannot interpret the String as an expansion of <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt>, then the result of <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is <emu-val>NaN</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The terminal symbols of this grammar are all composed of characters in the Unicode Basic Multilingual Plane (BMP). Therefore, the result of <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> will be <emu-val>NaN</emu-val> if the string contains any <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> code units, whether paired or unpaired.</p>\n        </div></emu-note>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"StringNumericLiteral\" type=\"regexp\" id=\"prod-StringNumericLiteral\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"_ljdljxm\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpace\" type=\"regexp\" id=\"prod-StrWhiteSpace\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"kw6izkq9\">\n        <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\" id=\"prod-StrWhiteSpaceChar\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"fctcswat\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ozmczrck\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrNumericLiteral\" type=\"regexp\" id=\"prod-StrNumericLiteral\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"2zae4kd4\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"kidoa90l\"><emu-nt params=\"~Sep\"><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrDecimalLiteral\" type=\"regexp\" id=\"prod-StrDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"r3_niz0j\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"o_y5qzvk\">\n        <emu-t>+</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"1g8bpsll\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" id=\"prod-StrUnsignedDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"sv6n-gkb\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"bw_ix5cg\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"m3hgvw0t\">\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"eg9cc2yh\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <p>All grammar symbols not explicitly defined above have the definitions used in the Lexical Grammar for numeric literals (<emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>)</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Some differences should be noted between the syntax of a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> and a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>:</p>\n          <ul>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> may include leading and/or trailing white space and/or line terminators.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may have any number of leading <code>0</code> digits.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may include a <code>+</code> or <code>-</code> to indicate its sign.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is empty or contains only white space is converted to <emu-val>+0</emu-val><sub>&#120125;</sub>.\n            </li>\n            <li>\n              <code>Infinity</code> and <code>-Infinity</code> are recognized as a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> but not as a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> cannot include a <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>.\n            </li>\n          </ul>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-runtime-semantics-mv-s\"><h1><span class=\"secnum\">7.1.4.1.1</span>#sec-runtime-semantics-mv-s Runtime Semantics: MV</h1>...</div></emu-clause>\n    "}, "sec-numericvalue": {"num": "12.8.3.2", "title": "#sec-numericvalue Static Semantics: NumericValue", "html": "<emu-clause id=\"sec-numericvalue\" type=\"sdo\" aoid=\"NumericValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numericvalue\">#sec-numericvalue</span> Static Semantics: NumericValue</h1>\n        <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gma1bw5s\" id=\"prod-6EKD79IF\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that results from rounding the MV of <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> as described below.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6ge3c7dq\" id=\"prod-VwBAoy40\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that results from rounding the MV of <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> as described below.</li></ol></emu-alg>\n        <p>Once the exact MV for a numeric literal has been determined, it is then rounded to a value of the Number type. If the MV is 0, then the rounded value is <emu-val>+0</emu-val><sub>&#120125;</sub>; otherwise, the rounded value must be the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV (as specified in <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>), unless the literal is a <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> and the literal has more than 20 significant digits, in which case the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> may be either the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a <code>0</code> digit or the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a <code>0</code> digit and then incrementing the literal at the 20th significant digit position. A digit is <em>significant</em> if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n        <ul>\n          <li>\n            it is not <code>0</code>; or\n          </li>\n          <li>\n            there is a non-zero digit to its left and there is a non-zero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"an71bvql\" id=\"prod-MgVpq-Ot\">\n        <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the BigInt value that represents the MV of <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"3e5icnkp\" id=\"prod-_KqL62EN\">\n        <emu-t>0</emu-t>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>0</emu-val><sub>&#8484;</sub>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dkfbjt3h\" id=\"prod-k8d8Sn1k\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the BigInt value that represents the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"kwaczm1q\" id=\"prod-6lkR-0p2\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"9dtmhu9b\" id=\"prod-Rb94_ol-\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>n</var> be the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.</li><li>Let <var>mv</var> be (the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> &#215; 10) plus the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.</li><li>Return <emu-xref href=\"#%E2%84%A4\"><a href=\"#%E2%84%A4\">&#8484;</a></emu-xref>(<var>mv</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-runtime-semantics-mv-s": {"num": "7.1.4.1.1", "title": "#sec-runtime-semantics-mv-s Runtime Semantics: MV", "html": "<emu-clause id=\"sec-runtime-semantics-mv-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-mv-s\">#sec-runtime-semantics-mv-s</span> Runtime Semantics: MV</h1>\n          <p>The conversion of a String to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> is similar overall to the determination of the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for a numeric literal (see <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>), but some of the details are different, so the process for converting a String numeric literal to a value of Number type is given here. This value is determined in two steps: first, a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV) is derived from the String numeric literal; second, this <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> is rounded as described below. The MV on any grammar symbol, not provided below, is the MV for that symbol defined in <emu-xref href=\"#sec-static-semantics-mv\"><a href=\"#sec-static-semantics-mv\" class=\"excluded-xref\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</a></emu-xref>.</p>\n          <ul>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"n7nathbb\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"y8khf4dr\"><emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"_ljdljxm\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>, no matter whether white space is present or not.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"1g8bpsll\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>. (Note that if the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> is 0, the negative of this MV is also 0. The rounding rule described below handles the conversion of this signless mathematical zero to a floating-point <emu-val>+0</emu-val><sub>&#120125;</sub> or <emu-val>-0</emu-val><sub>&#120125;</sub> as appropriate.)\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"sv6n-gkb\"><emu-t>Infinity</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 10<sup>10000</sup> (a value so large that it will round to <emu-val>+&#8734;</emu-val><sub>&#120125;</sub>).\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"rwxbltpt\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup>-<var>n</var></sup>), where <var>n</var> is the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"b1_an5wr\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"rptx0hyp\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup>-<var>n</var></sup>)) times 10<sup><var>e</var></sup>, where <var>n</var> is the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"wfmzcqw1\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup>-<var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"dnxzw8a4\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup><var>e</var> - <var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"lpk0z2-g\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n          </ul>\n          <p>Once the exact MV for a String numeric literal has been determined, it is then rounded to a value of the Number type. If the MV is 0, then the rounded value is <emu-val>+0</emu-val><sub>&#120125;</sub> unless the first non white space code point in the String numeric literal is <code>-</code>, in which case the rounded value is <emu-val>-0</emu-val><sub>&#120125;</sub>. Otherwise, the rounded value must be the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV (in the sense defined in <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>), unless the literal includes a <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> and the literal has more than 20 significant digits, in which case the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> may be either the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a 0 digit or the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a 0 digit and then incrementing the literal at the 20th digit position. A digit is significant if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n          <ul>\n            <li>\n              it is not <code>0</code>; or\n            </li>\n            <li>\n              there is a non-zero digit to its left and there is a non-zero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n            </li>\n          </ul>\n        </emu-clause>\n      "}, "sec-tonumber": {"num": "7.1.4", "title": "#sec-tonumber ToNumber ( argument )", "html": "<emu-clause id=\"sec-tonumber\" aoid=\"ToNumber\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber\">#sec-tonumber</span> ToNumber ( <var>argument</var> )</h1>\n      <p>The abstract operation ToNumber takes argument <var>argument</var>. It converts <var>argument</var> to a value of type Number according to <emu-xref href=\"#table-tonumber-conversions\"><a href=\"#table-tonumber-conversions\" class=\"excluded-xref\" excluded-id=\"table-tonumber-conversions\">#table-tonumber-conversions</a></emu-xref>:</p>\n      <emu-table id=\"table-tonumber-conversions\" caption=\"ToNumber Conversions\" oldids=\"table-11\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-tonumber-conversions\">#table-tonumber-conversions</span>: <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> Conversions</figcaption><span id=\"table-11\"></span>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            </th>\n            <th>\n              Result\n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            </td>\n            <td>\n              Return <emu-val>NaN</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            </td>\n            <td>\n              Return <emu-val>+0</emu-val><sub>&#120125;</sub>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>true</emu-val>, return <emu-val>1</emu-val><sub>&#120125;</sub>. If <var>argument</var> is <emu-val>false</emu-val>, return <emu-val>+0</emu-val><sub>&#120125;</sub>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            </td>\n            <td>\n              Return <var>argument</var> (no conversion).\n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            </td>\n            <td>\n              See grammar and conversion algorithm below.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            </td>\n            <td>\n              <p>Apply the following steps:</p>\n              <emu-alg><ol><li>Let <var>primValue</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>argument</var>, <emu-const>number</emu-const>).</li><li>Return ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>primValue</var>).</li></ol></emu-alg>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <div id=\"excluded-sec-tonumber-applied-to-the-string-type\"><h1><span class=\"secnum\">7.1.4.1</span>#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-mv": {"num": "12.8.3.1", "title": "#sec-static-semantics-mv Static Semantics: MV", "html": "<emu-clause id=\"sec-static-semantics-mv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</span> Static Semantics: MV</h1>\n        <p>A numeric literal stands for a value of the Number type or the BigInt type.</p>\n        <ul>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gma1bw5s\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"09cd3aiw\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gy9x7snd\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"hqxkzjla\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"vwco8x9w\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ivsyqs2o\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup>-<var>n</var></sup>), where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lxttymd7\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7xfditit\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup>-<var>n</var></sup>)) &#215; 10<sup><var>e</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"wfmzcqw1\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup>-<var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dnxzw8a4\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup><var>e</var> - <var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>, and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"tas82k13\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"br-hwd5f\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1mot5ut_\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1lnbu1ra\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> &#215; 10<sup><var>n</var></sup>) plus the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"s4me4hlz\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nyugv7lw\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10) plus the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"oilcxnyi\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10) plus the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ExponentPart\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"f4n1gm76\">\n        <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt>\n        <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"bxtox5eb\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"o9f-v3mh\">\n        <emu-t>+</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waadsnwo\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 1.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 2.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 3.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 4.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 5.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 6.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 7.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"elvyw2lo\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"elvyw2lo\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"elvyw2lo\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 8.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fj9dcfsf\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fj9dcfsf\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fj9dcfsf\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 9.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ph_p3jt-\"><emu-t>a</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nx0p29ri\"><emu-t>A</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 10.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ayxoiyyq\"><emu-t>b</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"cibwka8w\"><emu-t>B</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 11.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1ztbra35\"><emu-t>c</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"x4fmw88j\"><emu-t>C</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 12.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8pmnkw2i\"><emu-t>d</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"kzsugx0d\"><emu-t>D</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 13.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dxyfuoqh\"><emu-t>e</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"sv9nkvwp\"><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 14.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"qgjk5yjy\"><emu-t>f</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dvrpcls0\"><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 15.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ya14f57w\">\n        <emu-t>0b</emu-t>\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fb8x2bgl\">\n        <emu-t>0B</emu-t>\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"5fhui2lc\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gqp0qw4u\">\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> &#215; 2) plus the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gtcavmjz\">\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> &#215; 2) plus the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"qavsshas\">\n        <emu-t>0o</emu-t>\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ojzs-r9-\">\n        <emu-t>0O</emu-t>\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"mbwdu1ji\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"n6kv_lqw\">\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> &#215; 8) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"twqvafmk\">\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> &#215; 8) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"zxvbgn4l\">\n        <emu-t>0x</emu-t>\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nvdw81s7\">\n        <emu-t>0X</emu-t>\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"omskcs0d\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"yciymy2l\">\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#215; 16) plus the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gza2ktug\">\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#215; 16) plus the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}}, "figData": {"table-tonumber-conversions": "Table 14"}}, "to": {"secList": ["sec-tonumber-applied-to-the-string-type", "sec-stringtonumber", "sec-numericvalue", "sec-runtime-semantics-mv-s", "sec-tonumber", "sec-static-semantics-mv"], "secData": {"sec-tonumber-applied-to-the-string-type": {"num": "7.1.4.1", "title": "#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type", "html": "<emu-clause id=\"sec-tonumber-applied-to-the-string-type\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</span> ToNumber Applied to the String Type</h1>\n        <p>The abstract operation <emu-xref aoid=\"StringToNumber\"><a href=\"#sec-stringtonumber\">StringToNumber</a></emu-xref> specifies how to convert a String value to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. Overall, the process is similar to the determination of the <emu-xref aoid=\"NumericValue\"><a href=\"#sec-numericvalue\">NumericValue</a></emu-xref> of a numeric literal (see <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>), but some of the details are different.</p>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"StringNumericLiteral\" type=\"regexp\" id=\"prod-StringNumericLiteral\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"mkvpahdu\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"_ljdljxm\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpace\" type=\"regexp\" id=\"prod-StrWhiteSpace\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"kw6izkq9\">\n        <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\" id=\"prod-StrWhiteSpaceChar\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"fctcswat\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ozmczrck\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrNumericLiteral\" type=\"regexp\" id=\"prod-StrNumericLiteral\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"2zae4kd4\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"kidoa90l\"><emu-nt params=\"~Sep\"><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrDecimalLiteral\" type=\"regexp\" id=\"prod-StrDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"r3_niz0j\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"o_y5qzvk\">\n        <emu-t>+</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"1g8bpsll\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" id=\"prod-StrUnsignedDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"sv6n-gkb\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"bw_ix5cg\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"m3hgvw0t\">\n        <emu-t>.</emu-t>\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"eg9cc2yh\">\n        <emu-nt params=\"~Sep\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-params>[~Sep]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"~Sep\" optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-params>[~Sep]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <p>All grammar symbols not explicitly defined above have the definitions used in the Lexical Grammar for numeric literals (<emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>)</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Some differences should be noted between the syntax of a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> and a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>:</p>\n          <ul>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> may include leading and/or trailing white space and/or line terminators.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may have any number of leading <code>0</code> digits.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may include a <code>+</code> or <code>-</code> to indicate its sign.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is empty or contains only white space is converted to <emu-val>+0</emu-val><sub>&#120125;</sub>.\n            </li>\n            <li>\n              <code>Infinity</code> and <code>-Infinity</code> are recognized as a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> but not as a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.\n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> cannot include a <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>.\n            </li>\n          </ul>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-runtime-semantics-mv-s\"><h1><span class=\"secnum\">7.1.4.1.1</span>#sec-runtime-semantics-mv-s Runtime Semantics: MV</h1>...</div><div id=\"excluded-sec-stringtonumber\"><h1><span class=\"secnum\">7.1.4.1.2</span>#sec-stringtonumber StringToNumber ( str )</h1>...</div></emu-clause>\n    "}, "sec-stringtonumber": {"num": "7.1.4.1.2", "title": "#sec-stringtonumber StringToNumber ( str )", "html": "<emu-clause id=\"sec-stringtonumber\" aoid=\"StringToNumber\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-stringtonumber\">#sec-stringtonumber</span> StringToNumber ( <var>str</var> )</h1>\n          <p>The abstract operation StringToNumber takes argument <var>str</var> (a String) and returns a Number. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>text</var> be !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>str</var>).</li><li>Let <var>literal</var> be <emu-xref aoid=\"ParseText\"><a href=\"#sec-parsetext\">ParseText</a></emu-xref>(<var>text</var>, <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt>).</li><li>If <var>literal</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, return <emu-val>NaN</emu-val>.</li><li>If <var>literal</var> contains a <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> and <var>literal</var> has more than 20 significant digits, then<ol><li>Let <var>lit</var> be an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> choice of:<ul><li>a literal produced from <var>literal</var> by replacing each significant digit after the 20th with a <code>0</code> digit</li><li>a literal produced from <var>literal</var> by replacing each significant digit after the 20th with a <code>0</code> digit and then incrementing the literal at the 20th significant digit position</li></ul></li><li>NOTE: Because of the limited precision of the Number type, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <var>literal</var> will always be equal to the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of at least one of the above two literals.</li></ol></li><li>Else,<ol><li>Let <var>lit</var> be <var>literal</var>.</li></ol></li><li>Let <var>mv</var> be the MV of <var>lit</var>.</li><li>If <var>mv</var> is 0 and the first (if any) non-<emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt> code point in <var>text</var> is <code>-</code>, return <emu-val>-0</emu-val><sub>&#120125;</sub>.</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>mv</var>).</li></ol></emu-alg>\n\n          <p>A digit is <em>significant</em> if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n          <ul>\n            <li>\n              it is not <code>0</code>; or\n            </li>\n            <li>\n              there is a non-zero digit to its left and there is a non-zero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n            </li>\n          </ul>\n        </emu-clause>\n      "}, "sec-numericvalue": {"num": "12.8.3.2", "title": "#sec-numericvalue Static Semantics: NumericValue", "html": "<emu-clause id=\"sec-numericvalue\" type=\"sdo\" aoid=\"NumericValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numericvalue\">#sec-numericvalue</span> Static Semantics: NumericValue</h1>\n        <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6ge3c7dq\" id=\"prod-VwBAoy40\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>mv</var> be the MV of <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt>.</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>mv</var>).</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gma1bw5s\" id=\"prod-6EKD79IF\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> has more than 20 significant digits, then<ol><li>Let <var>lit</var> be an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> choice of:<ul><li>a literal produced from <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> by replacing each significant digit after the 20th with a <code>0</code> digit</li><li>a literal produced from <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> by replacing each significant digit after the 20th with a <code>0</code> digit and then incrementing the literal at the 20th significant digit position</li></ul></li><li>NOTE: Because of the limited precision of the Number type, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> will always be equal to the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of at least one of the above two literals.</li></ol></li><li>Else,<ol><li>Let <var>lit</var> be <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt>.</li></ol></li><li>Let <var>mv</var> be the MV of <var>lit</var>.</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>mv</var>).</li></ol></emu-alg>\n\n        <p>A digit is <em>significant</em> if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n        <ul>\n          <li>\n            it is not <code>0</code>; or\n          </li>\n          <li>\n            there is a non-zero digit to its left and there is a non-zero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n          </li>\n        </ul>\n\n        <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"an71bvql\" id=\"prod-MgVpq-Ot\">\n        <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the BigInt value that represents the MV of <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"3e5icnkp\" id=\"prod-_KqL62EN\">\n        <emu-t>0</emu-t>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>0</emu-val><sub>&#8484;</sub>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dkfbjt3h\" id=\"prod-k8d8Sn1k\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return the BigInt value that represents the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"kwaczm1q\" id=\"prod-6lkR-0p2\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"9dtmhu9b\" id=\"prod-Rb94_ol-\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>n</var> be the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.</li><li>Let <var>mv</var> be (the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> &#215; 10) plus the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.</li><li>Return <emu-xref href=\"#%E2%84%A4\"><a href=\"#%E2%84%A4\">&#8484;</a></emu-xref>(<var>mv</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-runtime-semantics-mv-s": {"num": "7.1.4.1.1", "title": "#sec-runtime-semantics-mv-s Runtime Semantics: MV", "html": "<emu-clause id=\"sec-runtime-semantics-mv-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-mv-s\">#sec-runtime-semantics-mv-s</span> Runtime Semantics: MV</h1>\n          <ul>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"n7nathbb\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"y8khf4dr\"><emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"_ljdljxm\">\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>, no matter whether white space is present or not.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"1g8bpsll\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>. (Note that if the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> is 0, the negative of this MV is also 0. The rounding rule described below handles the conversion of this signless mathematical zero to a floating-point <emu-val>+0</emu-val><sub>&#120125;</sub> or <emu-val>-0</emu-val><sub>&#120125;</sub> as appropriate.)\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"sv6n-gkb\"><emu-t>Infinity</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 10<sup>10000</sup> (a value so large that it will round to <emu-val>+&#8734;</emu-val><sub>&#120125;</sub>).\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"rwxbltpt\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup>-<var>n</var></sup>), where <var>n</var> is the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"b1_an5wr\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"rptx0hyp\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup>-<var>n</var></sup>)) times 10<sup><var>e</var></sup>, where <var>n</var> is the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"wfmzcqw1\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup>-<var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"dnxzw8a4\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup><var>e</var> - <var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n            <li>\n              The MV of <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> <emu-geq>:::</emu-geq> <emu-rhs a=\"lpk0z2-g\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            </li>\n          </ul>\n          <p>For the MV of any production not shown above, see <emu-xref href=\"#sec-static-semantics-mv\"><a href=\"#sec-static-semantics-mv\" class=\"excluded-xref\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</a></emu-xref>.</p>\n        </emu-clause>\n\n        "}, "sec-tonumber": {"num": "7.1.4", "title": "#sec-tonumber ToNumber ( argument )", "html": "<emu-clause id=\"sec-tonumber\" aoid=\"ToNumber\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber\">#sec-tonumber</span> ToNumber ( <var>argument</var> )</h1>\n      <p>The abstract operation ToNumber takes argument <var>argument</var>. It converts <var>argument</var> to a value of type Number according to <emu-xref href=\"#table-tonumber-conversions\"><a href=\"#table-tonumber-conversions\" class=\"excluded-xref\" excluded-id=\"table-tonumber-conversions\">#table-tonumber-conversions</a></emu-xref>:</p>\n      <emu-table id=\"table-tonumber-conversions\" caption=\"ToNumber Conversions\" oldids=\"table-11\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-tonumber-conversions\">#table-tonumber-conversions</span>: <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> Conversions</figcaption><span id=\"table-11\"></span>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            </th>\n            <th>\n              Result\n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            </td>\n            <td>\n              Return <emu-val>NaN</emu-val>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            </td>\n            <td>\n              Return <emu-val>+0</emu-val><sub>&#120125;</sub>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>true</emu-val>, return <emu-val>1</emu-val><sub>&#120125;</sub>. If <var>argument</var> is <emu-val>false</emu-val>, return <emu-val>+0</emu-val><sub>&#120125;</sub>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            </td>\n            <td>\n              Return <var>argument</var> (no conversion).\n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            </td>\n            <td>\n              Return ! <emu-xref aoid=\"StringToNumber\"><a href=\"#sec-stringtonumber\">StringToNumber</a></emu-xref>(<var>argument</var>).\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            </td>\n            <td>\n              <p>Apply the following steps:</p>\n              <emu-alg><ol><li>Let <var>primValue</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>argument</var>, <emu-const>number</emu-const>).</li><li>Return ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>primValue</var>).</li></ol></emu-alg>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <div id=\"excluded-sec-tonumber-applied-to-the-string-type\"><h1><span class=\"secnum\">7.1.4.1</span>#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-mv": {"num": "12.8.3.1", "title": "#sec-static-semantics-mv Static Semantics: MV", "html": "<emu-clause id=\"sec-static-semantics-mv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</span> Static Semantics: MV</h1>\n        <p>A numeric literal stands for a value of the Number type or the BigInt type, as specified by the syntax-directed operation <emu-xref aoid=\"NumericValue\"><a href=\"#sec-numericvalue\">NumericValue</a></emu-xref>. Determining this value involves deriving a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV) from the literal, according to the following rules.</p>\n        <ul>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gma1bw5s\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"09cd3aiw\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gy9x7snd\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"hqxkzjla\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"vwco8x9w\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ivsyqs2o\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup>-<var>n</var></sup>), where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"lxttymd7\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7xfditit\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup>-<var>n</var></sup>)) &#215; 10<sup><var>e</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"wfmzcqw1\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup>-<var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dnxzw8a4\">\n        <emu-t>.</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sup><var>e</var> - <var>n</var></sup>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>, and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"tas82k13\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"br-hwd5f\">\n        <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>\n        <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1mot5ut_\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1lnbu1ra\">\n        <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>\n        <emu-nt optional=\"\"><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> &#215; 10<sup><var>n</var></sup>) plus the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, where <var>n</var> is the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, excluding all occurrences of <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"s4me4hlz\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nyugv7lw\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10) plus the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"oilcxnyi\">\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10) plus the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"ExponentPart\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"f4n1gm76\">\n        <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt>\n        <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"bxtox5eb\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"o9f-v3mh\">\n        <emu-t>+</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"waadsnwo\">\n        <emu-t>-</emu-t>\n        <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ulmkmvlx\"><emu-t>0</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 0.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ksql3txo\"><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 1.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"xkcxbwmk\"><emu-t>2</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 2.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"7gu2shc1\"><emu-t>3</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 3.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"woxkczx2\"><emu-t>4</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 4.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"j83vdwqk\"><emu-t>5</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 5.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"c2shfb68\"><emu-t>6</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 6.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"6l4hpim_\"><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 7.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"elvyw2lo\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"elvyw2lo\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"elvyw2lo\"><emu-t>8</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 8.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fj9dcfsf\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fj9dcfsf\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fj9dcfsf\"><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 9.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ph_p3jt-\"><emu-t>a</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nx0p29ri\"><emu-t>A</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 10.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ayxoiyyq\"><emu-t>b</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"cibwka8w\"><emu-t>B</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 11.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"1ztbra35\"><emu-t>c</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"x4fmw88j\"><emu-t>C</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 12.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"8pmnkw2i\"><emu-t>d</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"kzsugx0d\"><emu-t>D</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 13.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dxyfuoqh\"><emu-t>e</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"sv9nkvwp\"><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 14.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"qgjk5yjy\"><emu-t>f</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> or of <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"dvrpcls0\"><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n</emu-grammar> is 15.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ya14f57w\">\n        <emu-t>0b</emu-t>\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"fb8x2bgl\">\n        <emu-t>0B</emu-t>\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"5fhui2lc\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gqp0qw4u\">\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> &#215; 2) plus the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gtcavmjz\">\n        <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> &#215; 2) plus the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"qavsshas\">\n        <emu-t>0o</emu-t>\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"ojzs-r9-\">\n        <emu-t>0O</emu-t>\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"mbwdu1ji\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"n6kv_lqw\">\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> &#215; 8) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"twqvafmk\">\n        <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> &#215; 8) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"zxvbgn4l\">\n        <emu-t>0x</emu-t>\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"nvdw81s7\">\n        <emu-t>0X</emu-t>\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"omskcs0d\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"yciymy2l\">\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#215; 16) plus the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n          <li>\n            The MV of <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> <emu-geq>::</emu-geq> <emu-rhs a=\"gza2ktug\">\n        <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>\n        <emu-nt><a href=\"#prod-NumericLiteralSeparator\">NumericLiteralSeparator</a></emu-nt>\n        <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar> is (the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#215; 16) plus the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          </li>\n        </ul>\n      </emu-clause>\n\n      "}}, "figData": {"table-tonumber-conversions": "Table 14"}}}