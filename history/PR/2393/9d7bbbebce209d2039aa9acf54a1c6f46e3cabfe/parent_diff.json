{"from": {"secList": ["sec-sharedarraybuffer-constructor", "sec-sharedarraybuffer-length"], "secData": {"sec-sharedarraybuffer-constructor": {"num": "25.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, if that property is present (see below).</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <p>Whenever a <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> does not provide concurrent access to SharedArrayBuffer objects it may omit the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-sharedarraybuffer-length": {"num": "25.2.2.1", "title": "#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )", "html": "<emu-clause id=\"sec-sharedarraybuffer-length\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-length\">#sec-sharedarraybuffer-length</span> SharedArrayBuffer ( [ <var>length</var> ] )</h1>\n        <p>When the <code>SharedArrayBuffer</code> function is called with optional argument <var>length</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>byteLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>length</var>).</li><li>Return ?&#160;<emu-xref aoid=\"AllocateSharedArrayBuffer\"><a href=\"#sec-allocatesharedarraybuffer\">AllocateSharedArrayBuffer</a></emu-xref>(NewTarget, <var>byteLength</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}}, "figData": {}}, "to": {"secList": ["sec-sharedarraybuffer-constructor", "sec-sharedarraybuffer-length"], "secData": {"sec-sharedarraybuffer-constructor": {"num": "25.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, if that property is present (see below).</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <p>Whenever a <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> does not provide concurrent access to SharedArrayBuffer objects it may omit the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-sharedarraybuffer-length": {"num": "25.2.2.1", "title": "#sec-sharedarraybuffer-length SharedArrayBuffer ( length )", "html": "<emu-clause id=\"sec-sharedarraybuffer-length\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-length\">#sec-sharedarraybuffer-length</span> SharedArrayBuffer ( <var>length</var> )</h1>\n        <p>When the <code>SharedArrayBuffer</code> function is called with optional argument <var>length</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>byteLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>length</var>).</li><li>Return ?&#160;<emu-xref aoid=\"AllocateSharedArrayBuffer\"><a href=\"#sec-allocatesharedarraybuffer\">AllocateSharedArrayBuffer</a></emu-xref>(NewTarget, <var>byteLength</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}}, "figData": {}}}