{"from": {"secList": ["sec-number.max_safe_integer", "sec-number.issafeinteger", "sec-number.min_safe_integer"], "secData": {"sec-number.max_safe_integer": {"num": "20.1.2.6", "title": "#sec-number.max_safe_integer Number.MAX_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.max_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.max_safe_integer\">#sec-number.max_safe_integer</span> Number.MAX_SAFE_INTEGER</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Number.MAX_SAFE_INTEGER</code> is the largest <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> n such that n and n + 1 are both exactly representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>The value of <code>Number.MAX_SAFE_INTEGER</code> is 9007199254740991 (2<sup>53</sup> - 1).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-number.issafeinteger": {"num": "20.1.2.5", "title": "#sec-number.issafeinteger Number.isSafeInteger ( number )", "html": "<emu-clause id=\"sec-number.issafeinteger\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.issafeinteger\">#sec-number.issafeinteger</span> Number.isSafeInteger ( <var>number</var> )</h1>\n        <p>When <code>Number.isSafeInteger</code> is called with one argument <var>number</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If !&#160;<emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>number</var>) is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>number</var>) &#8804; 2<sup>53</sup> - 1, return <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>false</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-number.min_safe_integer": {"num": "20.1.2.8", "title": "#sec-number.min_safe_integer Number.MIN_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.min_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.min_safe_integer\">#sec-number.min_safe_integer</span> Number.MIN_SAFE_INTEGER</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Number.MIN_SAFE_INTEGER</code> is the smallest <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> n such that n and n - 1 are both exactly representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>The value of <code>Number.MIN_SAFE_INTEGER</code> is -9007199254740991 (-(2<sup>53</sup> - 1)).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-number.max_safe_integer", "sec-number.issafeinteger", "sec-number.min_safe_integer"], "secData": {"sec-number.max_safe_integer": {"num": "20.1.2.6", "title": "#sec-number.max_safe_integer Number.MAX_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.max_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.max_safe_integer\">#sec-number.max_safe_integer</span> Number.MAX_SAFE_INTEGER</h1>\n        <p>The value of Number.MAX_SAFE_INTEGER is 9007199254740991 (2<sup>53</sup> - 1).</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Due to rounding behavior necessitated by precision limitations of IEEE 754-2008, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for every <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> greater than <code>Number.MAX_SAFE_INTEGER</code> is shared with at least one other <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. Such large-magnitude integers are therefore not  <emu-xref href=\"#safe-integer\"><a href=\"#safe-integer\">safe</a></emu-xref>, and are not guaranteed to be exactly representable as Number values or even to be distinguishable from each other. For example, both <code>9007199254740992</code> and <code>9007199254740993</code> evaluate to the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> 9007199254740992.</p>\n        </div></emu-note>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-number.issafeinteger": {"num": "20.1.2.5", "title": "#sec-number.issafeinteger Number.isSafeInteger ( number )", "html": "<emu-clause id=\"sec-number.issafeinteger\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.issafeinteger\">#sec-number.issafeinteger</span> Number.isSafeInteger ( <var>number</var> )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>An <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>n</var> is considered \"<dfn id=\"safe-integer\">safe</dfn>\" if and only if the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>n</var> is not the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for any other <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>When <code>Number.isSafeInteger</code> is called with one argument <var>number</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If !&#160;<emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>number</var>) is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>number</var>) &#8804; 2<sup>53</sup> - 1, return <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>false</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-number.min_safe_integer": {"num": "20.1.2.8", "title": "#sec-number.min_safe_integer Number.MIN_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.min_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.min_safe_integer\">#sec-number.min_safe_integer</span> Number.MIN_SAFE_INTEGER</h1>\n        <p>The value of Number.MIN_SAFE_INTEGER is -9007199254740991 (-(2<sup>53</sup> - 1)).</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Due to rounding behavior necessitated by precision limitations of IEEE 754-2008, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for every <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> less than <code>Number.MIN_SAFE_INTEGER</code> is shared with at least one other <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. Such large-magnitude integers are therefore not  <emu-xref href=\"#safe-integer\"><a href=\"#safe-integer\">safe</a></emu-xref>, and are not guaranteed to be exactly representable as Number values or even to be distinguishable from each other. For example, both <code>-9007199254740992</code> and <code>-9007199254740993</code> evaluate to the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> -9007199254740992.</p>\n        </div></emu-note>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}}