{"from": {"secList": ["sec-promise.prototype.finally"], "secData": {"sec-promise.prototype.finally": {"num": "26.6.5.3", "title": "#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )", "html": "<emu-clause id=\"sec-promise.prototype.finally\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.finally\">#sec-promise.prototype.finally</span> Promise.prototype.finally ( <var>onFinally</var> )</h1>\n        <p>When the <code>finally</code> method is called with argument <var>onFinally</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>promise</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>onFinally</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>thenFinally</var> be <var>onFinally</var>.</li><li>Let <var>catchFinally</var> be <var>onFinally</var>.</li></ol></li><li>Else,<ol><li>Let <var>stepsThenFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-thenfinallyfunctions\" title=\"\"><a href=\"#sec-thenfinallyfunctions\">Then Finally Functions</a></emu-xref>.</li><li>Let <var>thenFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsThenFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>thenFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>thenFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li><li>Let <var>stepsCatchFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-catchfinallyfunctions\" title=\"\"><a href=\"#sec-catchfinallyfunctions\">Catch Finally Functions</a></emu-xref>.</li><li>Let <var>catchFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsCatchFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;).</li><li>Set <var>catchFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>catchFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>promise</var>, <emu-val>\"then\"</emu-val>, &#171; <var>thenFinally</var>, <var>catchFinally</var> &#187;).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-thenfinallyfunctions\"><h1><span class=\"secnum\">26.6.5.3.1</span>#sec-thenfinallyfunctions Then Finally Functions</h1>...</div><div id=\"excluded-sec-catchfinallyfunctions\"><h1><span class=\"secnum\">26.6.5.3.2</span>#sec-catchfinallyfunctions Catch Finally Functions</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-promise.prototype.finally"], "secData": {"sec-promise.prototype.finally": {"num": "26.6.5.3", "title": "#sec-promise.prototype.finally Promise.prototype.finally ( onFinally )", "html": "<emu-clause id=\"sec-promise.prototype.finally\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype.finally\">#sec-promise.prototype.finally</span> Promise.prototype.finally ( <var>onFinally</var> )</h1>\n        <p>When the <code>finally</code> method is called with argument <var>onFinally</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>promise</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>promise</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>promise</var>, <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>onFinally</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>thenFinally</var> be <var>onFinally</var>.</li><li>Let <var>catchFinally</var> be <var>onFinally</var>.</li></ol></li><li>Else,<ol><li>Let <var>realm</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>onFinally</var>).</li><li>Let <var>stepsThenFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-thenfinallyfunctions\" title=\"\"><a href=\"#sec-thenfinallyfunctions\">Then Finally Functions</a></emu-xref>.</li><li>Let <var>thenFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsThenFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;, <var>realm</var>).</li><li>Set <var>thenFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>thenFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li><li>Let <var>stepsCatchFinally</var> be the algorithm steps defined in <emu-xref href=\"#sec-catchfinallyfunctions\" title=\"\"><a href=\"#sec-catchfinallyfunctions\">Catch Finally Functions</a></emu-xref>.</li><li>Let <var>catchFinally</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>stepsCatchFinally</var>, &#171; [[Constructor]], [[OnFinally]] &#187;, <var>realm</var>).</li><li>Set <var>catchFinally</var>.[[Constructor]] to <var>C</var>.</li><li>Set <var>catchFinally</var>.[[OnFinally]] to <var>onFinally</var>.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>promise</var>, <emu-val>\"then\"</emu-val>, &#171; <var>thenFinally</var>, <var>catchFinally</var> &#187;).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-thenfinallyfunctions\"><h1><span class=\"secnum\">26.6.5.3.1</span>#sec-thenfinallyfunctions Then Finally Functions</h1>...</div><div id=\"excluded-sec-catchfinallyfunctions\"><h1><span class=\"secnum\">26.6.5.3.2</span>#sec-catchfinallyfunctions Catch Finally Functions</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}}