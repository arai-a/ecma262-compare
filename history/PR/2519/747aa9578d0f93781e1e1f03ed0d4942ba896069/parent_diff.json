{"from": {"secList": ["sec-decode"], "secData": {"sec-decode": {"num": "19.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> = <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the code point obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}}, "figData": {"table-utf-8-encodings": "Table 63"}}, "to": {"secList": ["sec-decode"], "secData": {"sec-decode": {"num": "19.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> = <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) &#8805; <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the code point obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be <emu-xref aoid=\"UTF16EncodeCodePoint\"><a href=\"#sec-utf16encodecodepoint\">UTF16EncodeCodePoint</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}}, "figData": {}}}