{"from": {"secList": ["sec-regexp-constructor", "sec-string.raw", "sec-generatorfunction-constructor", "sec-strict-mode-of-ecmascript", "sec-asyncgeneratorfunction-constructor", "sec-strict-mode-code", "sec-sharedarraybuffer-constructor", "sec-dataview-constructor", "sec-string-object", "sec-bigint-constructor", "sec-promise.resolve", "sec-arraybuffer-constructor", "sec-string-constructor", "sec-properties-of-the-generatorfunction-constructor", "sec-promise-constructor", "sec-boolean-object", "sec-async-function-constructor", "sec-forbidden-extensions", "sec-function-constructor", "sec-types-of-source-code", "sec-symbol-object", "sec-number-object", "sec-error-handling-and-language-extensions", "sec-properties-of-dataview-instances", "sec-async-function-constructor-properties", "sec-literals-regular-expression-literals", "sec-weakmap-constructor", "sec-properties-of-asyncgeneratorfunction", "sec-set-constructor", "sec-date.utc", "sec-asynciterator-interface", "sec-date-constructor", "sec-promise.reject", "sec-properties-of-regexp-instances", "sec-iterator-interface", "sec-newpromisecapability", "sec-patterns", "sec-promise.all", "sec-well-known-intrinsic-objects", "sec-object-value", "sec-number-constructor", "sec-error-constructor", "sec-promise-executor", "sec-map-constructor", "sec-array-constructor", "sec-promise.race", "sec-promise.allsettled", "sec-bigint-object", "sec-boolean-constructor", "sec-weakset-constructor"], "secData": {"sec-regexp-constructor": {"num": "21.2.3", "title": "#sec-regexp-constructor The RegExp Constructor", "html": "<emu-clause id=\"sec-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</span> The RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExp%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"RegExp\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new RegExp object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>RegExp(&#8230;)</code> is equivalent to the object creation expression <code>new RegExp(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>RegExp</code> behaviour must include a <code>super</code> call to the <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the necessary internal slots.</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp-pattern-flags\"><h1><span class=\"secnum\">21.2.3.1</span>#sec-regexp-pattern-flags RegExp ( pattern, flags )</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-regexp-constructor\"><h1><span class=\"secnum\">21.2.3.2</span>#sec-abstract-operations-for-the-regexp-constructor Abstract Operations for the RegExp Constructor</h1>...</div></emu-clause>\n\n    "}, "sec-string.raw": {"num": "21.1.2.4", "title": "#sec-string.raw String.raw ( template, ...substitutions )", "html": "<emu-clause id=\"sec-string.raw\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.raw\">#sec-string.raw</span> String.raw ( <var>template</var>, ...<var>substitutions</var> )</h1>\n        <p>The <code>String.raw</code> function may be called with a variable number of arguments. The first argument is <var>template</var> and the remainder of the arguments form the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>substitutions</var>. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>substitutions</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of all of the arguments passed to this function, starting with the second argument. If fewer than two arguments were passed, the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is empty.</li><li>Let <var>numberOfSubstitutions</var> be the number of elements in <var>substitutions</var>.</li><li>Let <var>cooked</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>template</var>).</li><li>Let <var>raw</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>cooked</var>, <emu-val>\"raw\"</emu-val>)).</li><li>Let <var>literalSegments</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>raw</var>).</li><li>If <var>literalSegments</var> &#8804; 0, return the empty String.</li><li>Let <var>stringElements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>nextIndex</var> be 0.</li><li>Repeat,<ol><li>Let <var>nextKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>).</li><li>Let <var>nextSeg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>raw</var>, <var>nextKey</var>)).</li><li>Append in order the code unit elements of <var>nextSeg</var> to the end of <var>stringElements</var>.</li><li>If <var>nextIndex</var> + 1 = <var>literalSegments</var>, then<ol><li>Return the String value whose code units are, in order, the elements in the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>stringElements</var>. If <var>stringElements</var> has no elements, the empty String is returned.</li></ol></li><li>If <var>nextIndex</var> &lt; <var>numberOfSubstitutions</var>, let <var>next</var> be <var>substitutions</var>[<var>nextIndex</var>].</li><li>Else, let <var>next</var> be the empty String.</li><li>Let <var>nextSub</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>next</var>).</li><li>Append in order the code unit elements of <var>nextSub</var> to the end of <var>stringElements</var>.</li><li>Set <var>nextIndex</var> to <var>nextIndex</var> + 1.\n        </li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>String.raw is intended for use as a tag function of a Tagged Template (<emu-xref href=\"#sec-tagged-templates\"><a href=\"#sec-tagged-templates\" class=\"excluded-xref\" excluded-id=\"sec-tagged-templates\">#sec-tagged-templates</a></emu-xref>). When called as such, the first argument will be a well formed template object and the rest parameter will contain the substitution values.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-generatorfunction-constructor": {"num": "25.2.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>GeneratorFunction</code> behaviour must include a <code>super</code> call to the <code>GeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of <code>GeneratorFunction</code>. There is no syntactic means to create instances of <code>GeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-strict-mode-of-ecmascript": {"num": "C", "title": "#sec-strict-mode-of-ecmascript The Strict Mode of EMAScript", "html": "<emu-annex id=\"sec-strict-mode-of-ecmascript\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-of-ecmascript\">#sec-strict-mode-of-ecmascript</span> The Strict Mode of ECMAScript</h1>\n  <p><b>The strict mode restriction and exceptions</b></p>\n  <ul>\n    <li>\n      <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code> are reserved words within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. (<emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-keywords-and-reserved-words\">#sec-keywords-and-reserved-words</a></emu-xref>).\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include <emu-nt><a href=\"https://tc39.es/ecma262/#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include <emu-nt><a href=\"https://tc39.es/ecma262/#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt>.\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, may not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-nt><a href=\"https://tc39.es/ecma262/#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt> as described in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n    \n    </li>\n    <li>\n      Assignment to an undeclared identifier or otherwise unresolvable reference does not create a property in the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. When a simple assignment occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, its <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> must not evaluate to an unresolvable <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>. If it does a <emu-val>ReferenceError</emu-val> exception is thrown (<emu-xref href=\"#sec-putvalue\"><a href=\"#sec-putvalue\" class=\"excluded-xref\" excluded-id=\"sec-putvalue\">#sec-putvalue</a></emu-xref>). The <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> also may not be a reference to a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> with the attribute value { [[Writable]]: <emu-val>false</emu-val> }, to an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with the attribute value { [[Set]]: <emu-val>undefined</emu-val> }, nor to a non-existent property of an object whose [[Extensible]] internal slot has the value <emu-val>false</emu-val>. In these cases a <code>TypeError</code> exception is thrown (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>).\n    \n    </li>\n    <li>\n      An <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> with the StringValue <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val> may not appear as the <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> of an Assignment operator (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>) or of an <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt> (<emu-xref href=\"#sec-update-expressions\"><a href=\"#sec-update-expressions\" class=\"excluded-xref\" excluded-id=\"sec-update-expressions\">#sec-update-expressions</a></emu-xref>) or as the <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> operated upon by a Prefix Increment (<emu-xref href=\"#sec-prefix-increment-operator\"><a href=\"#sec-prefix-increment-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-increment-operator\">#sec-prefix-increment-operator</a></emu-xref>) or a Prefix Decrement (<emu-xref href=\"#sec-prefix-decrement-operator\"><a href=\"#sec-prefix-decrement-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-decrement-operator\">#sec-prefix-decrement-operator</a></emu-xref>) operator.\n    \n    </li>\n    <li>\n      Arguments objects for strict functions define a non-configurable <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> <emu-val>\"callee\"</emu-val> which throws a <emu-val>TypeError</emu-val> exception on access (<emu-xref href=\"#sec-createunmappedargumentsobject\"><a href=\"#sec-createunmappedargumentsobject\" class=\"excluded-xref\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</a></emu-xref>).\n    \n    </li>\n    <li>\n      Arguments objects for strict functions do not dynamically share their  <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property values with the corresponding formal parameter bindings of their functions. (<emu-xref href=\"#sec-arguments-exotic-objects\"><a href=\"#sec-arguments-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects\">#sec-arguments-exotic-objects</a></emu-xref>).\n    \n    </li>\n    <li>\n      For strict functions, if an arguments object is created the binding of the local identifier <code>arguments</code> to the arguments object is immutable and hence may not be the target of an assignment expression. (<emu-xref href=\"#sec-functiondeclarationinstantiation\"><a href=\"#sec-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the StringValue of a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val> within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      Strict mode eval code cannot instantiate variables or functions in the variable environment of the caller to eval. Instead, a new variable environment is created and that environment is used for declaration binding instantiation for the eval code (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>).\n    \n    </li>\n    <li>\n      If <emu-val>this</emu-val> is evaluated within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, then the <emu-val>this</emu-val> value is not coerced to an object. A <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is not converted to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> and primitive values are not converted to wrapper objects. The <emu-val>this</emu-val> value passed via a function call (including calls made using <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>) do not coerce the passed <emu-val>this</emu-val> value to an object (<emu-xref href=\"#sec-ordinarycallbindthis\"><a href=\"#sec-ordinarycallbindthis\" class=\"excluded-xref\" excluded-id=\"sec-ordinarycallbindthis\">#sec-ordinarycallbindthis</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.apply\"><a href=\"#sec-function.prototype.apply\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.apply\">#sec-function.prototype.apply</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.call\"><a href=\"#sec-function.prototype.call\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.call\">#sec-function.prototype.call</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name (<emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>TypeError</emu-val> is thrown if the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (<emu-xref href=\"#sec-delete-operator-runtime-semantics-evaluation\"><a href=\"#sec-delete-operator-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</a></emu-xref>).\n    \n    </li>\n    <li>\n      <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">Strict mode code</a></emu-xref> may not include a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt>. The occurrence of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> in such a context is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-with-statement-static-semantics-early-errors\"><a href=\"#sec-with-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-static-semantics-early-errors\">#sec-with-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if a <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and BoundNames of <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> contains either <code>eval</code> or <code>arguments</code> (<emu-xref href=\"#sec-try-statement-static-semantics-early-errors\"><a href=\"#sec-try-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-static-semantics-early-errors\">#sec-try-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> appears more than once in the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>. An attempt to create such a function using a <code>Function</code>, <code>Generator</code>, or <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-function-definitions-static-semantics-early-errors\"><a href=\"#sec-function-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-createdynamicfunction\"><a href=\"#sec-createdynamicfunction\" class=\"excluded-xref\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</a></emu-xref>).\n    \n    </li>\n    <li>\n      An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named <emu-val>\"caller\"</emu-val> or <emu-val>\"arguments\"</emu-val> of function instances.\n    \n    </li>\n  </ul>\n</emu-annex>\n\n"}, "sec-asyncgeneratorfunction-constructor": {"num": "25.3.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>AsyncGeneratorFunction</code> behaviour must include a <code>super</code> call to the <code>AsyncGeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of <code>AsyncGeneratorFunction</code>. There is no syntactic means to create instances of <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.3.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-strict-mode-code": {"num": "10.2.1", "title": "#sec-strict-mode-code Strict Mode Code", "html": "<emu-clause id=\"sec-strict-mode-code\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</span> Strict Mode Code</h1>\n      <p>An ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntactic unit may be processed using either unrestricted or strict mode syntax and semantics. Code is interpreted as  <dfn>strict mode code</dfn> in the following situations:</p>\n      <ul>\n        <li>\n          Global code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        \n        </li>\n        <li>\n          Module code is always strict mode code.\n        \n        </li>\n        <li>\n          All parts of a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> are strict mode code.\n        \n        </li>\n        <li>\n          Eval code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> or if the call to <code>eval</code> is a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> that is contained in strict mode code.\n        \n        </li>\n        <li>\n          Function code is strict mode code if the associated <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> is contained in strict mode code or if the code that produces the value of the function's [[ECMAScriptCode]] internal slot begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        \n        </li>\n        <li>\n          Function code that is supplied as the arguments to the built-in <code>Function</code>, <code>Generator</code>, <code>AsyncFunction</code>, and <code>AsyncGenerator</code> constructors is strict mode code if the last argument is a String that when processed is a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> that begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        \n        </li>\n      </ul>\n      <p>ECMAScript code that is not strict mode code is called  <dfn id=\"non-strict-code\">non-strict code</dfn>.</p>\n    </emu-clause>\n\n    "}, "sec-sharedarraybuffer-constructor": {"num": "24.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>SharedArrayBuffer</code> behaviour must include a <code>super</code> call to the <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">24.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-dataview-constructor": {"num": "24.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"DataView\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>DataView</code> behaviour must include a <code>super</code> call to the <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">24.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-string-object": {"num": "4.3.19", "title": "#sec-string-object String object", "html": "<emu-clause id=\"sec-string-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-object\">#sec-string-object</span> String object</h1>\n      <p>member of the Object type that is an instance of the standard built-in <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A String object is created by using the <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in a <code>new</code> expression, supplying a String value as an argument. The resulting object has an internal slot whose value is the String value. A String object can be coerced to a String value by calling the <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as a function (<emu-xref href=\"#sec-string-constructor-string-value\"><a href=\"#sec-string-constructor-string-value\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor-string-value\">#sec-string-constructor-string-value</a></emu-xref>).</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-bigint-constructor": {"num": "20.2.1", "title": "#sec-bigint-constructor The BigInt Constructor", "html": "<emu-clause id=\"sec-bigint-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</span> The BigInt Constructor</h1>\n      <p>The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%BigInt%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"BigInt\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be used with the <code>new</code> operator or to be subclassed. It may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to the <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> will cause an exception.</li>\n      </ul>\n\n      <div id=\"excluded-sec-bigint-constructor-number-value\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-bigint-constructor-number-value BigInt ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.resolve": {"num": "25.6.4.6", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">25.6.4.6.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}, "sec-arraybuffer-constructor": {"num": "24.1.2", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"ArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>ArrayBuffer</code> behaviour must include a <code>super</code> call to the <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">24.1.2.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-string-constructor": {"num": "21.1.1", "title": "#sec-string-constructor The String Constructor", "html": "<emu-clause id=\"sec-string-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</span> The String Constructor</h1>\n      <p>The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%String%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"String\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new String object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>String</code> behaviour must include a <code>super</code> call to the <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[StringData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-string-constructor-string-value\"><h1><span class=\"secnum\">21.1.1.1</span>#sec-string-constructor-string-value String ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"GeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-promise-constructor": {"num": "25.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Promise</code> behaviour must include a <code>super</code> call to the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-boolean-object": {"num": "4.3.16", "title": "#sec-boolean-object Boolean object", "html": "<emu-clause id=\"sec-boolean-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-object\">#sec-boolean-object</span> Boolean object</h1>\n      <p>member of the Object type that is an instance of the standard built-in <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A Boolean object is created by using the <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in a <code>new</code> expression, supplying a Boolean value as an argument. The resulting object has an internal slot whose value is the Boolean value. A Boolean object can be coerced to a Boolean value.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-async-function-constructor": {"num": "25.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">25.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n    "}, "sec-forbidden-extensions": {"num": "16.1", "title": "#sec-forbidden-extensions Forbidden Extensions", "html": "<emu-clause id=\"sec-forbidden-extensions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</span> Forbidden Extensions</h1>\n    <p>An implementation must not extend this specification in the following ways:</p>\n    <ul>\n      <li>\n        ECMAScript function objects defined using syntactic constructors in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> must not be created with own properties named <emu-val>\"caller\"</emu-val> or <emu-val>\"arguments\"</emu-val>. Such own properties also must not be created for function objects defined using an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> regardless of whether the definition is contained in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. Built-in functions, strict functions created using the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, generator functions created using the <code>Generator</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, async functions created using the <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, and functions created using the <code>bind</code> method also must not be created with such own properties.\n      \n      </li>\n      <li>\n        If an implementation extends any <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> with an own property named <emu-val>\"caller\"</emu-val> the value of that property, as observed using [[Get]] or [[GetOwnProperty]], must not be a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref> object. If it is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref>, the function that is the value of the property's [[Get]] attribute must never return a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref> when called.\n      \n      </li>\n      <li>\n        Neither mapped nor unmapped arguments objects may be created with an own property named <emu-val>\"caller\"</emu-val>.\n      \n      </li>\n      <li>\n        The behaviour of the following methods must not be extended except as specified in ECMA-402: <code>Object.prototype.toLocaleString</code>, <code>Array.prototype.toLocaleString</code>, <code>Number.prototype.toLocaleString</code>, <code>Date.prototype.toLocaleDateString</code>, <code>Date.prototype.toLocaleString</code>, <code>Date.prototype.toLocaleTimeString</code>, <code>String.prototype.localeCompare</code>, <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.toLocaleString</code>.\n      \n      </li>\n      <li>\n        The RegExp pattern grammars in  <emu-xref href=\"#sec-patterns\"><a href=\"#sec-patterns\" class=\"excluded-xref\" excluded-id=\"sec-patterns\">#sec-patterns</a></emu-xref> and  <emu-xref href=\"#sec-regular-expressions-patterns\"><a href=\"#sec-regular-expressions-patterns\" class=\"excluded-xref\" excluded-id=\"sec-regular-expressions-patterns\">#sec-regular-expressions-patterns</a></emu-xref> must not be extended to recognize any of the source characters A-Z or a-z as <emu-nt params=\"+U\"><a href=\"#prod-IdentityEscape\">IdentityEscape</a><emu-mods><emu-params>[+U]</emu-params></emu-mods></emu-nt> when the  <sub>[U]</sub> grammar parameter is present.\n      \n      </li>\n      <li>\n        The Syntactic Grammar must not be extended in any manner that allows the token <code>:</code> to immediately follow source text that matches the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> nonterminal symbol.\n      \n      </li>\n      <li>\n        When processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> must not be extended to include  <emu-xref href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><emu-nt>LegacyOctalIntegerLiteral</emu-nt></a></emu-xref> and the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> must not be extended to include  <emu-xref href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><emu-nt>NonOctalDecimalIntegerLiteral</emu-nt></a></emu-xref> as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>.\n      \n      </li>\n      <li>\n        <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> must not be extended to include  <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> as defined in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n      \n      </li>\n      <li>\n        When processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the extensions defined in  <emu-xref href=\"#sec-labelled-function-declarations\"><a href=\"#sec-labelled-function-declarations\" class=\"excluded-xref\" excluded-id=\"sec-labelled-function-declarations\">#sec-labelled-function-declarations</a></emu-xref>,  <emu-xref href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\"><a href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" class=\"excluded-xref\" excluded-id=\"sec-block-level-function-declarations-web-legacy-compatibility-semantics\">#sec-block-level-function-declarations-web-legacy-compatibility-semantics</a></emu-xref>,  <emu-xref href=\"#sec-functiondeclarations-in-ifstatement-statement-clauses\"><a href=\"#sec-functiondeclarations-in-ifstatement-statement-clauses\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarations-in-ifstatement-statement-clauses\">#sec-functiondeclarations-in-ifstatement-statement-clauses</a></emu-xref>, and  <emu-xref href=\"#sec-initializers-in-forin-statement-heads\"><a href=\"#sec-initializers-in-forin-statement-heads\" class=\"excluded-xref\" excluded-id=\"sec-initializers-in-forin-statement-heads\">#sec-initializers-in-forin-statement-heads</a></emu-xref> must not be supported.\n      \n      </li>\n      <li>\n        When parsing for the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>, the lexical grammar extensions defined in  <emu-xref href=\"#sec-html-like-comments\"><a href=\"#sec-html-like-comments\" class=\"excluded-xref\" excluded-id=\"sec-html-like-comments\">#sec-html-like-comments</a></emu-xref> must not be supported.\n      \n      </li>\n      <!-- The following is so that in the future we can potentially add new arguments or support ArgumentList. -->\n      <li>\n        <emu-nt><a href=\"#prod-ImportCall\">ImportCall</a></emu-nt> must not be extended.\n      \n      </li>\n    </ul>\n  </emu-clause>\n"}, "sec-function-constructor": {"num": "19.2.1", "title": "#sec-function-constructor The Function Constructor", "html": "<emu-clause id=\"sec-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</span> The Function Constructor</h1>\n      <p>The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Function%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Function\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Function(&#8230;)</code> is equivalent to the object creation expression <code>new Function(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Function</code> behaviour must include a <code>super</code> call to the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in function behaviour. All ECMAScript syntactic forms for defining function objects create instances of <code>Function</code>. There is no syntactic means to create instances of <code>Function</code> subclasses except for the built-in <code>GeneratorFunction</code>, <code>AsyncFunction</code>, and <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-function-p1-p2-pn-body\"><h1><span class=\"secnum\">19.2.1.1</span>#sec-function-p1-p2-pn-body Function ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-types-of-source-code": {"num": "10.2", "title": "#sec-types-of-source-code Types of Source Code", "html": "<emu-clause id=\"sec-types-of-source-code\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-types-of-source-code\">#sec-types-of-source-code</span> Types of Source Code</h1>\n    <p>There are four types of ECMAScript code:</p>\n    <ul>\n      <li>\n        <em>Global code</em> is source text that is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The global code of a particular <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> does not include any source text that is parsed as part of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      \n      </li>\n      <li>\n        <em>Eval code</em> is the source text supplied to the built-in <code>eval</code> function. More precisely, if the parameter to the built-in <code>eval</code> function is a String, it is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The eval code for a particular invocation of <code>eval</code> is the global code portion of that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>.\n      \n      </li>\n      <li>\n        <p><em>Function code</em> is source text that is parsed to supply the value of the [[ECMAScriptCode]] and [[FormalParameters]] internal slots (see  <emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. The function code of a particular ECMAScript function does not include any source text that is parsed as the function code of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</p>\n        <p>In addition, if the source text referred to above is parsed as:</p>\n        <ul>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> of a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, or</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>,</li>\n        </ul>\n        <p>then the source text matching the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> (if any) of that declaration or expression is also included in the function code of the corresponding function.</p>\n      </li>\n      <li>\n        <em>Module code</em> is source text that is code that is provided as a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt>. It is the code that is directly evaluated when a module is initialized. The module code of a particular module does not include any source text that is parsed as part of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      \n      </li>\n    </ul>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Function code is generally provided as the bodies of Function Definitions (<emu-xref href=\"#sec-function-definitions\"><a href=\"#sec-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</a></emu-xref>), Arrow Function Definitions (<emu-xref href=\"#sec-arrow-function-definitions\"><a href=\"#sec-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-arrow-function-definitions\">#sec-arrow-function-definitions</a></emu-xref>), Method Definitions (<emu-xref href=\"#sec-method-definitions\"><a href=\"#sec-method-definitions\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions\">#sec-method-definitions</a></emu-xref>), Generator Function Definitions (<emu-xref href=\"#sec-generator-function-definitions\"><a href=\"#sec-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-generator-function-definitions\">#sec-generator-function-definitions</a></emu-xref>), Async Function Definitions (<emu-xref href=\"#sec-async-function-definitions\"><a href=\"#sec-async-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</a></emu-xref>), Async Generator Function Definitions (<emu-xref href=\"#sec-async-generator-function-definitions\"><a href=\"#sec-async-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-generator-function-definitions\">#sec-async-generator-function-definitions</a></emu-xref>), and Async Arrow Functions (<emu-xref href=\"#sec-async-arrow-function-definitions\"><a href=\"#sec-async-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</a></emu-xref>). Function code is also derived from the arguments to the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-p1-p2-pn-body\"><a href=\"#sec-function-p1-p2-pn-body\" class=\"excluded-xref\" excluded-id=\"sec-function-p1-p2-pn-body\">#sec-function-p1-p2-pn-body</a></emu-xref>), the <code>GeneratorFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-generatorfunction\"><a href=\"#sec-generatorfunction\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction\">#sec-generatorfunction</a></emu-xref>), and the <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-async-function-constructor-arguments\"><a href=\"#sec-async-function-constructor-arguments\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor-arguments\">#sec-async-function-constructor-arguments</a></emu-xref>).</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The practical effect of including the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in function code is that the Early Errors for <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> are applied to a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> that is the name of a function whose body contains a \"use strict\" directive, even if the surrounding code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-strict-mode-code\"><h1><span class=\"secnum\">10.2.1</span>#sec-strict-mode-code Strict Mode Code</h1>...</div><div id=\"excluded-sec-non-ecmascript-functions\"><h1><span class=\"secnum\">10.2.2</span>#sec-non-ecmascript-functions Non-ECMAScript Functions</h1>...</div></emu-clause>\n"}, "sec-symbol-object": {"num": "4.3.30", "title": "#sec-symbol-object Symbol object", "html": "<emu-clause id=\"sec-symbol-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol-object\">#sec-symbol-object</span> Symbol object</h1>\n      <p>member of the Object type that is an instance of the standard built-in <code>Symbol</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n    </emu-clause>\n\n    "}, "sec-number-object": {"num": "4.3.22", "title": "#sec-number-object Number object", "html": "<emu-clause id=\"sec-number-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-object\">#sec-number-object</span> Number object</h1>\n      <p>member of the Object type that is an instance of the standard built-in <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A Number object is created by using the <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in a <code>new</code> expression, supplying a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as an argument. The resulting object has an internal slot whose value is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. A Number object can be coerced to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> by calling the <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as a function (<emu-xref href=\"#sec-number-constructor-number-value\"><a href=\"#sec-number-constructor-number-value\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor-number-value\">#sec-number-constructor-number-value</a></emu-xref>).</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-error-handling-and-language-extensions": {"num": "16", "title": "#sec-error-handling-and-language-extensions Error Handling and Language Extensions", "html": "<emu-clause id=\"sec-error-handling-and-language-extensions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-handling-and-language-extensions\">#sec-error-handling-and-language-extensions</span> Error Handling and Language Extensions</h1>\n  <p>An implementation must report most errors at the time the relevant ECMAScript language construct is evaluated. An  <dfn id=\"early-error\">early error</dfn> is an error that can be detected and reported prior to the evaluation of any construct in the <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> containing the error. The presence of an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> prevents the evaluation of the construct. An implementation must report early errors in a <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> as part of parsing that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> in <emu-xref aoid=\"ParseScript\"><a href=\"#sec-parse-script\">ParseScript</a></emu-xref>. Early errors in a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> are reported at the point when the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> would be evaluated and the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is never initialized. Early errors in  <b>eval</b> code are reported at the time <code>eval</code> is called and prevent evaluation of the  <b>eval</b> code. All errors that are not early errors are runtime errors.</p>\n  <p>An implementation must report as an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> any occurrence of a condition that is listed in a &#8220;Static Semantics: Early Errors&#8221; subclause of this specification.</p>\n  <p>An implementation shall not treat other kinds of errors as early errors even if the compiler can prove that a construct cannot execute without error under any circumstances. An implementation may issue an early warning in such a case, but it should not report the error until the relevant construct is actually executed.</p>\n  <p>An implementation shall report all errors as specified, except for the following:</p>\n  <ul>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may extend <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntax, <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> syntax, and regular expression pattern or flag syntax. To permit this, all operations (such as calling <code>eval</code>, using a regular expression literal, or using the <code>Function</code> or <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>) that are allowed to throw <emu-val>SyntaxError</emu-val> are permitted to exhibit implementation-defined behaviour instead of throwing <emu-val>SyntaxError</emu-val> when they encounter an implementation-defined extension to the script syntax or regular expression pattern or flag syntax.\n    \n    </li>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may provide additional types, values, objects, properties, and functions beyond those described in this specification. This may cause constructs (such as looking up a variable in the global scope) to have implementation-defined behaviour instead of throwing an error (such as <emu-val>ReferenceError</emu-val>).\n    \n    </li>\n  </ul>\n\n  <div id=\"excluded-sec-forbidden-extensions\"><h1><span class=\"secnum\">16.1</span>#sec-forbidden-extensions Forbidden Extensions</h1>...</div></emu-clause>\n\n"}, "sec-properties-of-dataview-instances": {"num": "24.3.5", "title": "#sec-properties-of-dataview-instances Properties of DataView Instances", "html": "<emu-clause id=\"sec-properties-of-dataview-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-dataview-instances\">#sec-properties-of-dataview-instances</span> Properties of DataView Instances</h1>\n      <p>DataView instances are ordinary objects that inherit properties from the DataView prototype object. DataView instances each have [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], and [[ByteOffset]] internal slots.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The value of the [[DataView]] internal slot is not used within this specification. The simple presence of that internal slot is used within the specification to identify objects created using the <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-async-function-constructor-properties": {"num": "25.7.2", "title": "#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor-properties\">#sec-async-function-constructor-properties</span> Properties of the AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-length\"><h1><span class=\"secnum\">25.7.2.1</span>#sec-async-function-constructor-length AsyncFunction.length</h1>...</div><div id=\"excluded-sec-async-function-constructor-prototype\"><h1><span class=\"secnum\">25.7.2.2</span>#sec-async-function-constructor-prototype AsyncFunction.prototype</h1>...</div></emu-clause>\n    "}, "sec-literals-regular-expression-literals": {"num": "11.8.5", "title": "#sec-literals-regular-expression-literals Regular Expression Literals", "html": "<emu-clause id=\"sec-literals-regular-expression-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-regular-expression-literals\">#sec-literals-regular-expression-literals</span> Regular Expression Literals</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A regular expression literal is an input element that is converted to a RegExp object (see  <emu-xref href=\"#sec-regexp-regular-expression-objects\"><a href=\"#sec-regexp-regular-expression-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-regular-expression-objects\">#sec-regexp-regular-expression-objects</a></emu-xref>) each time the literal is evaluated. Two regular expression literals in a program evaluate to regular expression objects that never compare as <code>===</code> to each other even if the two literals' contents are identical. A RegExp object may also be created at runtime by <code>new RegExp</code> or calling the <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as a function (see  <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>).</p>\n      </div></emu-note>\n      <p>The productions below describe the syntax for a regular expression literal and are used by the input element scanner to find the end of the regular expression literal. The source text comprising the <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt> and the <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt> are subsequently parsed again using the more stringent ECMAScript Regular Expression grammar (<emu-xref href=\"#sec-patterns\"><a href=\"#sec-patterns\" class=\"excluded-xref\" excluded-id=\"sec-patterns\">#sec-patterns</a></emu-xref>).</p>\n      <p>An implementation may extend the ECMAScript Regular Expression grammar defined in  <emu-xref href=\"#sec-patterns\"><a href=\"#sec-patterns\" class=\"excluded-xref\" excluded-id=\"sec-patterns\">#sec-patterns</a></emu-xref>, but it must not extend the <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt> and <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt> productions defined below or the productions used by these productions.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"RegularExpressionLiteral\" type=\"lexical\" id=\"prod-RegularExpressionLiteral\">\n    <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5778053b\"><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionBody\" type=\"lexical\" id=\"prod-RegularExpressionBody\">\n    <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bba7969e\"><emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionChars\" type=\"lexical\" id=\"prod-RegularExpressionChars\">\n    <emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a9881cec\"><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionFirstChar\" type=\"lexical\" id=\"prod-RegularExpressionFirstChar\">\n    <emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"da1b0c0a\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionChar\" type=\"lexical\" id=\"prod-RegularExpressionChar\">\n    <emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0c3ff14\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionBackslashSequence\" type=\"lexical\" id=\"prod-RegularExpressionBackslashSequence\">\n    <emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d7656bad\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionNonTerminator\" type=\"lexical\" id=\"prod-RegularExpressionNonTerminator\">\n    <emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionClass\" type=\"lexical\" id=\"prod-RegularExpressionClass\">\n    <emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c1bc40a\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionClassChars\" type=\"lexical\" id=\"prod-RegularExpressionClassChars\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"76bdcb05\"><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionClassChar\" type=\"lexical\" id=\"prod-RegularExpressionClassChar\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7fd10851\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\\</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionFlags\" type=\"lexical\" id=\"prod-RegularExpressionFlags\">\n    <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"fceefdcd\"><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Regular expression literals may not be empty; instead of representing an empty regular expression literal, the code unit sequence <code>//</code> starts a single-line comment. To specify an empty regular expression, use: <code>/(?:)/</code>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-literals-regular-expression-literals-static-semantics-early-errors\"><h1><span class=\"secnum\">11.8.5.1</span>#sec-literals-regular-expression-literals-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-bodytext\"><h1><span class=\"secnum\">11.8.5.2</span>#sec-static-semantics-bodytext Static Semantics: BodyText</h1>...</div><div id=\"excluded-sec-static-semantics-flagtext\"><h1><span class=\"secnum\">11.8.5.3</span>#sec-static-semantics-flagtext Static Semantics: FlagText</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "23.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakMap\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakMap</code> behaviour must include a <code>super</code> call to the <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">23.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-set-constructor": {"num": "23.2.1", "title": "#sec-set-constructor The Set Constructor", "html": "<emu-clause id=\"sec-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</span> The Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Set%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Set\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Set object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Set</code> behaviour must include a <code>super</code> call to the <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Set.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set-iterable\"><h1><span class=\"secnum\">23.2.1.1</span>#sec-set-iterable Set ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-date.utc": {"num": "20.4.3.4", "title": "#sec-date.utc Date.UTC ( year [ , month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] ] )", "html": "<emu-clause id=\"sec-date.utc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.utc\">#sec-date.utc</span> Date.UTC ( <var>year</var> [ , <var>month</var> [ , <var>date</var> [ , <var>hours</var> [ , <var>minutes</var> [ , <var>seconds</var> [ , <var>ms</var> ] ] ] ] ] ] )</h1>\n        <p>When the <code>UTC</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>y</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>year</var>).</li><li>If <var>month</var> is present, let <var>m</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>month</var>); else let <var>m</var> be 0.</li><li>If <var>date</var> is present, let <var>dt</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>date</var>); else let <var>dt</var> be 1.</li><li>If <var>hours</var> is present, let <var>h</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>hours</var>); else let <var>h</var> be 0.</li><li>If <var>minutes</var> is present, let <var>min</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>minutes</var>); else let <var>min</var> be 0.</li><li>If <var>seconds</var> is present, let <var>s</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>seconds</var>); else let <var>s</var> be 0.</li><li>If <var>ms</var> is present, let <var>milli</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>ms</var>); else let <var>milli</var> be 0.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, let <var>yr</var> be <emu-val>NaN</emu-val>.</li><li>Else,<ol><li>Let <var>yi</var> be !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>y</var>).</li><li>If 0 &#8804; <var>yi</var> &#8804; 99, let <var>yr</var> be 1900 + <var>yi</var>; otherwise, let <var>yr</var> be <var>y</var>.</li></ol></li><li>Return <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(<var>yr</var>, <var>m</var>, <var>dt</var>), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(<var>h</var>, <var>min</var>, <var>s</var>, <var>milli</var>))).\n        </li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>UTC</code> function is 7.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>UTC</code> function differs from the <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in two ways: it returns a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> as a Number, rather than creating a Date object, and it interprets the arguments in UTC rather than as local time.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-asynciterator-interface": {"num": "25.1.1.4", "title": "#sec-asynciterator-interface The  AsyncIterator Interface", "html": "<emu-clause id=\"sec-asynciterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciterator-interface\">#sec-asynciterator-interface</span> The  <i>AsyncIterator</i> Interface</h1>\n        <p>An object that implements the  <i>AsyncIterator</i> interface must include the properties in  <emu-xref href=\"#table-async-iterator-required\"><a href=\"#table-async-iterator-required\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-async-iterator-optional\"><a href=\"#table-async-iterator-optional\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</a></emu-xref>.</p>\n        <emu-table id=\"table-async-iterator-required\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</span>:  <i>AsyncIterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><emu-val>\"next\"</emu-val></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>AsyncIterator</i> has returned a promise for an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return a promise for an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <emu-val>\"value\"</emu-val> property whose value is not a promise (or \"thenable\"). However, this requirement is also not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the next function but their interpretation and validity is dependent upon the target  <i>AsyncIterator</i>. The <code>for</code>-<code>await</code>-<code>of</code> statement and other common users of  <em>AsyncIterators</em> do not pass any arguments, so  <i>AsyncIterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-async-iterator-optional\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</span>:  <i>AsyncIterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><emu-val>\"return\"</emu-val></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>AsyncIterator</i>. The returned promise will fulfill with an  <i>IteratorResult</i> object which will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>, and a <emu-val>\"value\"</emu-val> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <emu-val>\"value\"</emu-val> property whose value is not a promise (or \"thenable\"). If the argument value is used in the typical manner, then if it is a rejected promise, a promise rejected with the same reason should be returned; if it is a fulfilled promise, then its fulfillment value should be used as the <emu-val>\"value\"</emu-val> property of the returned promise's  <i>IteratorResult</i> object fulfillment value. However, these requirements are also not enforced.</p>\n              </td>\n            </tr>\n            <tr>\n              <td><emu-val>\"throw\"</emu-val></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to return a rejected promise which rejects with the value passed as the argument.</p>\n\n                <p>If the returned promise is fulfilled, the  <i>IteratorResult</i> fulfillment value will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>. Additionally, it should have a <emu-val>\"value\"</emu-val> property whose value is not a promise (or \"thenable\"), but this requirement is not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>await</code>-<code>of</code> and <code>yield*</code> call these methods after performing an existence check.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Date</code> behaviour must include a <code>super</code> call to the <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.4.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.4.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.reject": {"num": "25.6.4.5", "title": "#sec-promise.reject Promise.reject ( r )", "html": "<emu-clause id=\"sec-promise.reject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</span> Promise.reject ( <var>r</var> )</h1>\n        <p>The <code>reject</code> function returns a new promise rejected with the passed argument.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>r</var> &#187;).</li><li>Return <var>promiseCapability</var>.[[Promise]].\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_reject%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>reject</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-regexp-instances": {"num": "21.2.6", "title": "#sec-properties-of-regexp-instances Properties of RegExp Instances", "html": "<emu-clause id=\"sec-properties-of-regexp-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-regexp-instances\">#sec-properties-of-regexp-instances</span> Properties of RegExp Instances</h1>\n      <p>RegExp instances are ordinary objects that inherit properties from the RegExp prototype object. RegExp instances have internal slots [[RegExpMatcher]], [[OriginalSource]], and [[OriginalFlags]]. The value of the [[RegExpMatcher]] internal slot is an <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">abstract closure</a></emu-xref> representation of the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> of the RegExp object.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Prior to ECMAScript 2015, <code>RegExp</code> instances were specified as having the own data properties <emu-val>\"source\"</emu-val>, <emu-val>\"global\"</emu-val>, <emu-val>\"ignoreCase\"</emu-val>, and <emu-val>\"multiline\"</emu-val>. Those properties are now specified as accessor properties of <code>RegExp.prototype</code>.</p>\n      </div></emu-note>\n      <p>RegExp instances also have the following property:</p>\n\n      <div id=\"excluded-sec-lastindex\"><h1><span class=\"secnum\">21.2.6.1</span>#sec-lastindex lastIndex</h1>...</div></emu-clause>\n\n    "}, "sec-iterator-interface": {"num": "25.1.1.2", "title": "#sec-iterator-interface The  Iterator Interface", "html": "<emu-clause id=\"sec-iterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</span> The  <i>Iterator</i> Interface</h1>\n        <p>An object that implements the  <i>Iterator</i> interface must include the property in  <emu-xref href=\"#table-53\"><a href=\"#table-53\" class=\"excluded-xref\" excluded-id=\"table-53\">#table-53</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-54\"><a href=\"#table-54\" class=\"excluded-xref\" excluded-id=\"table-54\">#table-54</a></emu-xref>.</p>\n        <emu-table id=\"table-53\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-53\">#table-53</span>:  <i>Iterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-val>\"next\"</emu-val>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>Iterator</i> has returned an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the next function but their interpretation and validity is dependent upon the target  <i>Iterator</i>. The for-of statement and other common users of  <em>Iterators</em> do not pass any arguments, so  <i>Iterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-54\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-54\">#table-54</span>:  <i>Iterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-val>\"return\"</emu-val>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>Iterator</i>. The returned  <i>IteratorResult</i> object will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>, and a <emu-val>\"value\"</emu-val> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-val>\"throw\"</emu-val>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to <code>throw</code> the value passed as the argument. If the method does not <code>throw</code>, the returned  <i>IteratorResult</i> object will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>of</code>, <code>yield*</code>, and array destructuring call these methods after performing an existence check. Most ECMAScript library functions that accept  <i>Iterable</i> objects as arguments also conditionally call them.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-newpromisecapability": {"num": "25.6.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" aoid=\"NewPromiseCapability\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes argument <var>C</var>. It attempts to use <var>C</var> as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in the fashion of the built-in <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its <code>resolve</code> and <code>reject</code> functions. The Promise object plus the <code>resolve</code> and <code>reject</code> functions are used to initialize a new PromiseCapability <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be the PromiseCapability { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-getcapabilitiesexecutor-functions\" title=\"\"><a href=\"#sec-getcapabilitiesexecutor-functions\">GetCapabilitiesExecutor Functions</a></emu-xref>.</li><li>Let <var>executor</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[Capability]] &#187;).</li><li>Set <var>executor</var>.[[Capability]] to <var>promiseCapability</var>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getcapabilitiesexecutor-functions\"><h1><span class=\"secnum\">25.6.1.5.1</span>#sec-getcapabilitiesexecutor-functions GetCapabilitiesExecutor Functions</h1>...</div></emu-clause>\n\n      "}, "sec-patterns": {"num": "21.2.1", "title": "#sec-patterns Patterns", "html": "<emu-clause id=\"sec-patterns\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-patterns\">#sec-patterns</span> Patterns</h1>\n      <p>The <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> applies the following grammar to the input pattern String. An error occurs if the grammar cannot interpret the String as an expansion of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt>.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"Pattern\" params=\"U, N\" type=\"lexical\" id=\"prod-Pattern\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Pattern\">Pattern</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea2e8548\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Disjunction\" params=\"U, N\" type=\"lexical\" id=\"prod-Disjunction\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be4e1703\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"40349c54\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>|</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Alternative\" params=\"U, N\" type=\"lexical\" id=\"prod-Alternative\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"8e81495c\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U, ?N\"><a href=\"#prod-Term\">Term</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Term\" params=\"U, N\" type=\"lexical\" id=\"prod-Term\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Term\">Term</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e8ded259\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Assertion\">Assertion</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2eb78702\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Atom\">Atom</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"0870df0d\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Atom\">Atom</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-nt><a href=\"#prod-Quantifier\">Quantifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Assertion\" params=\"U, N\" type=\"lexical\" id=\"prod-Assertion\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Assertion\">Assertion</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5878811\"><emu-t>^</emu-t></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"1e228da5\"><emu-t>\\</emu-t><emu-t>b</emu-t></emu-rhs>\n    <emu-rhs a=\"a5dc97fa\"><emu-t>\\</emu-t><emu-t>B</emu-t></emu-rhs>\n    <emu-rhs a=\"c54c9dce\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>=</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"84eb51e5\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>!</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"82aea0e5\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>&lt;=</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"9799bbf1\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>&lt;!</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"Quantifier\" type=\"lexical\" id=\"prod-Quantifier\">\n    <emu-nt><a href=\"#prod-Quantifier\">Quantifier</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0e588d23\"><emu-nt><a href=\"#prod-QuantifierPrefix\">QuantifierPrefix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"0b0b5479\"><emu-nt><a href=\"#prod-QuantifierPrefix\">QuantifierPrefix</a></emu-nt><emu-t>?</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"QuantifierPrefix\" type=\"lexical\" id=\"prod-QuantifierPrefix\">\n    <emu-nt><a href=\"#prod-QuantifierPrefix\">QuantifierPrefix</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"e0370b05\"><emu-t>+</emu-t></emu-rhs>\n    <emu-rhs a=\"232d7160\"><emu-t>?</emu-t></emu-rhs>\n    <emu-rhs a=\"68a2b74e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"82e97391\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"f47829c0\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"Atom\" params=\"U, N\" type=\"lexical\" id=\"prod-Atom\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Atom\">Atom</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"beff52c4\"><emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9658e473\"><emu-t>.</emu-t></emu-rhs>\n    <emu-rhs a=\"60fd7386\"><emu-t>\\</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-AtomEscape\">AtomEscape</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"72a5dc04\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterClass\">CharacterClass</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"9a015fb8\"><emu-t>(</emu-t><emu-nt params=\"?U\"><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"9d0775f7\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>:</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"SyntaxCharacter\" type=\"lexical\" oneof=\"\" id=\"prod-SyntaxCharacter\">\n    <emu-nt><a href=\"#prod-SyntaxCharacter\">SyntaxCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>^</emu-t><emu-t>$</emu-t><emu-t>\\</emu-t><emu-t>.</emu-t><emu-t>*</emu-t><emu-t>+</emu-t><emu-t>?</emu-t><emu-t>(</emu-t><emu-t>)</emu-t><emu-t>[</emu-t><emu-t>]</emu-t><emu-t>{</emu-t><emu-t>}</emu-t><emu-t>|</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"PatternCharacter\" type=\"lexical\" id=\"prod-PatternCharacter\">\n    <emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b94d4da1\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-SyntaxCharacter\">SyntaxCharacter</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"AtomEscape\" params=\"U, N\" type=\"lexical\" id=\"prod-AtomEscape\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-AtomEscape\">AtomEscape</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7ebff96c\"><emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"da3d719e\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"4b80816a\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterEscape\">CharacterEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"f3e6826b\" constraints=\"+N\"><emu-constraints>[+N]</emu-constraints><emu-t>k</emu-t><emu-nt params=\"?U\"><a href=\"#prod-GroupName\">GroupName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"CharacterEscape\" params=\"U\" type=\"lexical\" id=\"prod-CharacterEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-CharacterEscape\">CharacterEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f88e7170\"><emu-nt><a href=\"#prod-ControlEscape\">ControlEscape</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a14dae7e\"><emu-t>c</emu-t><emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2649a73f\"><emu-nt params=\"?U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2037e8bf\"><emu-nt params=\"?U\"><a href=\"#prod-IdentityEscape\">IdentityEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ControlEscape\" type=\"lexical\" oneof=\"\" id=\"prod-ControlEscape\">\n    <emu-nt><a href=\"#prod-ControlEscape\">ControlEscape</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ControlLetter\" type=\"lexical\" oneof=\"\" id=\"prod-ControlLetter\">\n    <emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>g</emu-t><emu-t>h</emu-t><emu-t>i</emu-t><emu-t>j</emu-t><emu-t>k</emu-t><emu-t>l</emu-t><emu-t>m</emu-t><emu-t>n</emu-t><emu-t>o</emu-t><emu-t>p</emu-t><emu-t>q</emu-t><emu-t>r</emu-t><emu-t>s</emu-t><emu-t>t</emu-t><emu-t>u</emu-t><emu-t>v</emu-t><emu-t>w</emu-t><emu-t>x</emu-t><emu-t>y</emu-t><emu-t>z</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t><emu-t>G</emu-t><emu-t>H</emu-t><emu-t>I</emu-t><emu-t>J</emu-t><emu-t>K</emu-t><emu-t>L</emu-t><emu-t>M</emu-t><emu-t>N</emu-t><emu-t>O</emu-t><emu-t>P</emu-t><emu-t>Q</emu-t><emu-t>R</emu-t><emu-t>S</emu-t><emu-t>T</emu-t><emu-t>U</emu-t><emu-t>V</emu-t><emu-t>W</emu-t><emu-t>X</emu-t><emu-t>Y</emu-t><emu-t>Z</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"GroupSpecifier\" params=\"U\" type=\"lexical\" id=\"prod-GroupSpecifier\">\n    <emu-nt params=\"U\"><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"0a6c1542\"><emu-t>?</emu-t><emu-nt params=\"?U\"><a href=\"#prod-GroupName\">GroupName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"GroupName\" params=\"U\" type=\"lexical\" id=\"prod-GroupName\">\n    <emu-nt params=\"U\"><a href=\"#prod-GroupName\">GroupName</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bca72b0c\"><emu-t>&lt;</emu-t><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>&gt;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpIdentifierName\" params=\"U\" type=\"lexical\" id=\"prod-RegExpIdentifierName\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4aeafadc\"><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierStart\">RegExpIdentifierStart</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d8644c18\"><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierPart\">RegExpIdentifierPart</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpIdentifierStart\" params=\"U\" type=\"lexical\" id=\"prod-RegExpIdentifierStart\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpIdentifierStart\">RegExpIdentifierStart</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"ea655d14\"><emu-t>\\</emu-t><emu-nt params=\"+U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[+U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"61161e2e\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-nt><a href=\"#prod-UnicodeLeadSurrogate\">UnicodeLeadSurrogate</a></emu-nt><emu-nt>UnicodeTrailSurrogate</emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpIdentifierPart\" params=\"U\" type=\"lexical\" id=\"prod-RegExpIdentifierPart\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpIdentifierPart\">RegExpIdentifierPart</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"ea655d14\"><emu-t>\\</emu-t><emu-nt params=\"+U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[+U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"61161e2e\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-nt><a href=\"#prod-UnicodeLeadSurrogate\">UnicodeLeadSurrogate</a></emu-nt><emu-nt>UnicodeTrailSurrogate</emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpUnicodeEscapeSequence\" params=\"U\" type=\"lexical\" id=\"prod-RegExpUnicodeEscapeSequence\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"af8038f7\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-t>\\u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"67ed8617\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"0c510966\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cea7c087\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8dee6a61\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7763ef41\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeLeadSurrogate\" type=\"lexical\" id=\"prod-UnicodeLeadSurrogate\">\n    <emu-nt><a href=\"#prod-UnicodeLeadSurrogate\">UnicodeLeadSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"41e9dd14\"><emu-nt>any</emu-nt><emu-nt>Unicode</emu-nt><emu-nt>code</emu-nt><emu-nt>point</emu-nt><emu-nt>in</emu-nt><emu-nt>the</emu-nt><emu-nt>inclusive</emu-nt><emu-nt>range</emu-nt></emu-rhs>\n    <emu-rhs a=\"04863cad\"><emu-nt>UnicodeTrailSurrogate</emu-nt></emu-rhs>\n    <emu-rhs a=\"41e9dd14\"><emu-nt>any</emu-nt><emu-nt>Unicode</emu-nt><emu-nt>code</emu-nt><emu-nt>point</emu-nt><emu-nt>in</emu-nt><emu-nt>the</emu-nt><emu-nt>inclusive</emu-nt><emu-nt>range</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>Each <code>\\u</code> <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt> for which the choice of associated <code>u</code> <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt> is ambiguous shall be associated with the nearest possible <code>u</code> <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt> that would otherwise have no corresponding <code>\\u</code> <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt>.</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"LeadSurrogate\" type=\"lexical\" id=\"prod-LeadSurrogate\">\n    <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b4266993\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-gmod>but only if the SV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> is in the inclusive range 0xD800 to 0xDBFF</emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"TrailSurrogate\" type=\"lexical\" id=\"prod-TrailSurrogate\">\n    <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"134361fc\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-gmod>but only if the SV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> is in the inclusive range 0xDC00 to 0xDFFF</emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"NonSurrogate\" type=\"lexical\" id=\"prod-NonSurrogate\">\n    <emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"de3cc0ae\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-gmod>but only if the SV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> is not in the inclusive range 0xD800 to 0xDFFF</emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"IdentityEscape\" params=\"U\" type=\"lexical\" id=\"prod-IdentityEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-IdentityEscape\">IdentityEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"59e8579a\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-nt><a href=\"#prod-SyntaxCharacter\">SyntaxCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"85b4a3dd\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>/</emu-t></emu-rhs>\n    <emu-rhs a=\"fbcd1409\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalEscape\" type=\"lexical\" id=\"prod-DecimalEscape\">\n    <emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"627951dd\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n<emu-production name=\"CharacterClassEscape\" params=\"U\" type=\"lexical\" id=\"prod-CharacterClassEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0f32729\"><emu-t>d</emu-t></emu-rhs>\n    <emu-rhs a=\"919b1483\"><emu-t>D</emu-t></emu-rhs>\n    <emu-rhs a=\"5b9c6c6e\"><emu-t>s</emu-t></emu-rhs>\n    <emu-rhs a=\"6952cf48\"><emu-t>S</emu-t></emu-rhs>\n    <emu-rhs a=\"2d8b484a\"><emu-t>w</emu-t></emu-rhs>\n    <emu-rhs a=\"ae15e851\"><emu-t>W</emu-t></emu-rhs>\n    <emu-rhs a=\"6f034769\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>p{</emu-t><emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"9b2f96fc\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>P{</emu-t><emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValueExpression\" type=\"lexical\" id=\"prod-UnicodePropertyValueExpression\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b11de407\"><emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt><emu-t>=</emu-t><emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"25d94190\"><emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyName\" type=\"lexical\" id=\"prod-UnicodePropertyName\">\n    <emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c0c2619f\"><emu-nt><a href=\"#prod-UnicodePropertyNameCharacters\">UnicodePropertyNameCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyNameCharacters\" type=\"lexical\" id=\"prod-UnicodePropertyNameCharacters\">\n    <emu-nt><a href=\"#prod-UnicodePropertyNameCharacters\">UnicodePropertyNameCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c1247f44\"><emu-nt><a href=\"#prod-UnicodePropertyNameCharacter\">UnicodePropertyNameCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-UnicodePropertyNameCharacters\">UnicodePropertyNameCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValue\" type=\"lexical\" id=\"prod-UnicodePropertyValue\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"526a9170\"><emu-nt><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LoneUnicodePropertyNameOrValue\" type=\"lexical\" id=\"prod-LoneUnicodePropertyNameOrValue\">\n    <emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"526a9170\"><emu-nt><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValueCharacters\" type=\"lexical\" id=\"prod-UnicodePropertyValueCharacters\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5a208aa0\"><emu-nt><a href=\"#prod-UnicodePropertyValueCharacter\">UnicodePropertyValueCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValueCharacter\" type=\"lexical\" id=\"prod-UnicodePropertyValueCharacter\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueCharacter\">UnicodePropertyValueCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"531254cc\"><emu-nt><a href=\"#prod-UnicodePropertyNameCharacter\">UnicodePropertyNameCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyNameCharacter\" type=\"lexical\" id=\"prod-UnicodePropertyNameCharacter\">\n    <emu-nt><a href=\"#prod-UnicodePropertyNameCharacter\">UnicodePropertyNameCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"69611eb2\"><emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"CharacterClass\" params=\"U\" type=\"lexical\" id=\"prod-CharacterClass\">\n    <emu-nt params=\"U\"><a href=\"#prod-CharacterClass\">CharacterClass</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6c18f3a8\"><emu-t>[</emu-t><emu-gann>[lookahead &#8800; <emu-t>^</emu-t>]</emu-gann><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>]</emu-t></emu-rhs>\n    <emu-rhs a=\"93d354c0\"><emu-t>[</emu-t><emu-t>^</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassRanges\" params=\"U\" type=\"lexical\" id=\"prod-ClassRanges\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"43c27130\"><emu-nt params=\"?U\"><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonemptyClassRanges\" params=\"U\" type=\"lexical\" id=\"prod-NonemptyClassRanges\">\n    <emu-nt params=\"U\"><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cdf200f3\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"4a76f2ec\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"63fd2e03\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>-</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonemptyClassRangesNoDash\" params=\"U\" type=\"lexical\" id=\"prod-NonemptyClassRangesNoDash\">\n    <emu-nt params=\"U\"><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cdf200f3\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2d1a8609\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"b61280d4\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>-</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassAtom\" params=\"U\" type=\"lexical\" id=\"prod-ClassAtom\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6f24a587\"><emu-t>-</emu-t></emu-rhs>\n    <emu-rhs a=\"714140ac\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassAtomNoDash\" params=\"U\" type=\"lexical\" id=\"prod-ClassAtomNoDash\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ecde6e28\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>]</emu-t> or <emu-t>-</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"379e2483\"><emu-t>\\</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassEscape\">ClassEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassEscape\" params=\"U\" type=\"lexical\" id=\"prod-ClassEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassEscape\">ClassEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0185ce89\"><emu-t>b</emu-t></emu-rhs>\n    <emu-rhs a=\"ae60fdeb\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>-</emu-t></emu-rhs>\n    <emu-rhs a=\"da3d719e\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"4b80816a\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterEscape\">CharacterEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-patterns-static-semantics-early-errors\"><h1><span class=\"secnum\">21.2.1.1</span>#sec-patterns-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-patterns-static-semantics-capturing-group-number\"><h1><span class=\"secnum\">21.2.1.2</span>#sec-patterns-static-semantics-capturing-group-number Static Semantics: CapturingGroupNumber</h1>...</div><div id=\"excluded-sec-patterns-static-semantics-is-character-class\"><h1><span class=\"secnum\">21.2.1.3</span>#sec-patterns-static-semantics-is-character-class Static Semantics: IsCharacterClass</h1>...</div><div id=\"excluded-sec-patterns-static-semantics-character-value\"><h1><span class=\"secnum\">21.2.1.4</span>#sec-patterns-static-semantics-character-value Static Semantics: CharacterValue</h1>...</div><div id=\"excluded-sec-static-semantics-sourcetext\"><h1><span class=\"secnum\">21.2.1.5</span>#sec-static-semantics-sourcetext Static Semantics: SourceText</h1>...</div><div id=\"excluded-sec-regexp-identifier-names-static-semantics-stringvalue\"><h1><span class=\"secnum\">21.2.1.6</span>#sec-regexp-identifier-names-static-semantics-stringvalue Static Semantics: StringValue</h1>...</div></emu-clause>\n\n    "}, "sec-promise.all": {"num": "25.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">25.6.4.1.1</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability )</h1>...</div><div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.1.2</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in  <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in  <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              \n              </th>\n              <th>\n                Global Name\n              \n              </th>\n              <th>\n                ECMAScript Language Association\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array</code>\n              \n              </td>\n              <td>\n                The <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"entries\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"forEach\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"keys\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"values\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., %AsyncFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., %AsyncGeneratorFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., %AsyncGenerator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Atomics</code>\n              \n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>BigInt</code>\n              \n              </td>\n              <td>\n                The <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigInt64Array%\n              \n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigInt64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigUint64Array%\n              \n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigUint64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean</code>\n              \n              </td>\n              <td>\n                The <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView</code>\n              \n              </td>\n              <td>\n                The <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date</code>\n              \n              </td>\n              <td>\n                The <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURI</code>\n              \n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURI</code>\n              \n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error</code>\n              \n              </td>\n              <td>\n                The <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>eval</code>\n              \n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalError%\n              \n              </td>\n              <td>\n                <code>EvalError</code>\n              \n              </td>\n              <td>\n                The <code>EvalError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              \n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %EvalError%; i.e., %EvalError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32Array%\n              \n              </td>\n              <td>\n                <code>Float32Array</code>\n              \n              </td>\n              <td>\n                The <code>Float32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float32Array%; i.e., %Float32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64Array%\n              \n              </td>\n              <td>\n                <code>Float64Array</code>\n              \n              </td>\n              <td>\n                The <code>Float64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float64Array%; i.e., %Float64Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Function</code>\n              \n              </td>\n              <td>\n                The <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              \n              </td>\n              <td>\n                <code>Function.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., %Generator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8Array%\n              \n              </td>\n              <td>\n                <code>Int8Array</code>\n              \n              </td>\n              <td>\n                The <code>Int8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int8Array%; i.e., %Int8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16Array%\n              \n              </td>\n              <td>\n                <code>Int16Array</code>\n              \n              </td>\n              <td>\n                The <code>Int16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int16Array%; i.e., %Int16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32Array%\n              \n              </td>\n              <td>\n                <code>Int32Array</code>\n              \n              </td>\n              <td>\n                The <code>Int32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int32Array%; i.e., %Int32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isFinite</code>\n              \n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isNaN</code>\n              \n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON</code>\n              \n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.parse</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"parse\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\">%JSONStringify%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"stringify\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map</code>\n              \n              </td>\n              <td>\n                The <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Math</code>\n              \n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number</code>\n              \n              </td>\n              <td>\n                The <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object</code>\n              \n              </td>\n              <td>\n                The <code>Object</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"toString\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"valueOf\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseFloat</code>\n              \n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseInt</code>\n              \n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise</code>\n              \n              </td>\n              <td>\n                The <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"then\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.all</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"all\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.reject</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"reject\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"resolve\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Proxy</code>\n              \n              </td>\n              <td>\n                The <code>Proxy</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeError%\n              \n              </td>\n              <td>\n                <code>RangeError</code>\n              \n              </td>\n              <td>\n                The <code>RangeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %RangeError%; i.e., %RangeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceError%\n              \n              </td>\n              <td>\n                <code>ReferenceError</code>\n              \n              </td>\n              <td>\n                The <code>ReferenceError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              \n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %ReferenceError%; i.e., %ReferenceError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Reflect</code>\n              \n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp</code>\n              \n              </td>\n              <td>\n                The <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set</code>\n              \n              </td>\n              <td>\n                The <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String</code>\n              \n              </td>\n              <td>\n                The <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol</code>\n              \n              </td>\n              <td>\n                The <code>Symbol</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxError%\n              \n              </td>\n              <td>\n                <code>SyntaxError</code>\n              \n              </td>\n              <td>\n                The <code>SyntaxError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              \n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %SyntaxError%; i.e., %SyntaxError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of %TypeError%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeError%\n              \n              </td>\n              <td>\n                <code>TypeError</code>\n              \n              </td>\n              <td>\n                The <code>TypeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %TypeError%; i.e., %TypeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8Array%\n              \n              </td>\n              <td>\n                <code>Uint8Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8Array%; i.e., %Uint8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArray%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              \n              </td>\n              <td>\n                The <code>Uint8ClampedArray</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8ClampedArray%; i.e., %Uint8ClampedArray.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16Array%\n              \n              </td>\n              <td>\n                <code>Uint16Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint16Array%; i.e., %Uint16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32Array%\n              \n              </td>\n              <td>\n                <code>Uint32Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint32Array%; i.e., %Uint32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIError%\n              \n              </td>\n              <td>\n                <code>URIError</code>\n              \n              </td>\n              <td>\n                The <code>URIError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              \n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %URIError%; i.e., %URIError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap</code>\n              \n              </td>\n              <td>\n                The <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet</code>\n              \n              </td>\n              <td>\n                The <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-object-value": {"num": "19.1.1.1", "title": "#sec-object-value Object ( [ value ] )", "html": "<emu-clause id=\"sec-object-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-value\">#sec-object-value</span> Object ( [ <var>value</var> ] )</h1>\n        <p>When the <code>Object</code> function is called with optional argument <var>value</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is neither <emu-val>undefined</emu-val> nor the active function, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Object.prototype%\"</emu-val>).</li></ol></li><li>If <var>value</var> is <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Return !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>value</var>).\n        </li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>Object</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function is 1.</p>\n      </emu-clause>\n    "}, "sec-number-constructor": {"num": "20.1.1", "title": "#sec-number-constructor The Number Constructor", "html": "<emu-clause id=\"sec-number-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</span> The Number Constructor</h1>\n      <p>The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Number%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Number\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Number object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Number</code> behaviour must include a <code>super</code> call to the <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[NumberData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-number-constructor-number-value\"><h1><span class=\"secnum\">20.1.1.1</span>#sec-number-constructor-number-value Number ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-error-constructor": {"num": "19.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Error\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Error</code> behaviour must include a <code>super</code> call to the <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">19.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-promise-executor": {"num": "25.6.3.1", "title": "#sec-promise-executor Promise ( executor )", "html": "<emu-clause id=\"sec-promise-executor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</span> Promise ( <var>executor</var> )</h1>\n        <p>When the <code>Promise</code> function is called with argument <var>executor</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>executor</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Promise.prototype%\"</emu-val>, &#171; [[PromiseState]], [[PromiseResult]], [[PromiseFulfillReactions]], [[PromiseRejectReactions]], [[PromiseIsHandled]] &#187;).</li><li>Set <var>promise</var>.[[PromiseState]] to <emu-const>pending</emu-const>.</li><li>Set <var>promise</var>.[[PromiseFulfillReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseRejectReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseIsHandled]] to <emu-val>false</emu-val>.</li><li>Let <var>resolvingFunctions</var> be <emu-xref aoid=\"CreateResolvingFunctions\"><a href=\"#sec-createresolvingfunctions\">CreateResolvingFunctions</a></emu-xref>(<var>promise</var>).</li><li>Let <var>completion</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>executor</var>, <emu-val>undefined</emu-val>, &#171; <var>resolvingFunctions</var>.[[Resolve]], <var>resolvingFunctions</var>.[[Reject]] &#187;).</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>resolvingFunctions</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>completion</var>.[[Value]] &#187;).</li></ol></li><li>Return <var>promise</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <var>executor</var> argument must be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It is called for initiating and reporting completion of the possibly deferred action represented by this Promise object. The executor is called with two arguments: <var>resolve</var> and <var>reject</var>. These are functions that may be used by the <var>executor</var> function to report eventual completion or failure of the deferred computation. Returning from the executor function does not mean that the deferred action has been completed but only that the request to eventually perform the deferred action has been accepted.</p>\n          <p>The <var>resolve</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>resolve</var> function to indicate that it wishes to resolve the associated Promise object. The argument passed to the <var>resolve</var> function represents the eventual value of the deferred action and can be either the actual fulfillment value or another Promise object which will provide the value if it is fulfilled.</p>\n          <p>The <var>reject</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>reject</var> function to indicate that the associated Promise is rejected and will never be fulfilled. The argument passed to the <var>reject</var> function is used as the rejection value of the promise. Typically it will be an <code>Error</code> object.</p>\n          <p>The resolve and reject functions passed to an <var>executor</var> function by the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> have the capability to actually resolve and reject the associated promise. Subclasses may have different <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> behaviour that passes in customized values for resolve and reject.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-map-constructor": {"num": "23.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Map\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Map</code> behaviour must include a <code>super</code> call to the <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">23.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "22.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic <code>Array</code> behaviour must include a <code>super</code> call to the <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 1.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array-constructor-array\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-array-constructor-array Array ( )</h1>...</div><div id=\"excluded-sec-array-len\"><h1><span class=\"secnum\">22.1.1.2</span>#sec-array-len Array ( len )</h1>...</div><div id=\"excluded-sec-array-items\"><h1><span class=\"secnum\">22.1.1.3</span>#sec-array-items Array ( ...items )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.race": {"num": "25.6.4.4", "title": "#sec-promise.race Promise.race ( iterable )", "html": "<emu-clause id=\"sec-promise.race\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.race\">#sec-promise.race</span> Promise.race ( <var>iterable</var> )</h1>\n        <p>The <code>race</code> function returns a new promise which is settled in the same way as the first passed promise to settle. It resolves all elements of the passed <var>iterable</var> to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseRace\"><a href=\"#sec-performpromiserace\">PerformPromiseRace</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If the <var>iterable</var> argument is empty or if none of the promises in <var>iterable</var> ever settle then the pending promise returned by this method will never be settled.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>race</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It also expects that its <emu-val>this</emu-val> value provides a <code>resolve</code> method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiserace\"><h1><span class=\"secnum\">25.6.4.4.1</span>#sec-performpromiserace Runtime Semantics: PerformPromiseRace ( iteratorRecord, constructor, resultCapability )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.allsettled": {"num": "25.6.4.2", "title": "#sec-promise.allsettled Promise.allSettled ( iterable )", "html": "<emu-clause id=\"sec-promise.allsettled\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled\">#sec-promise.allsettled</span> Promise.allSettled ( <var>iterable</var> )</h1>\n        <p>The <code>allSettled</code> function returns a promise that is fulfilled with an array of promise state snapshots, but only after all the original promises have settled, i.e. become either fulfilled or rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAllSettled\"><a href=\"#sec-performpromiseallsettled\">PerformPromiseAllSettled</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>allSettled</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseallsettled\"><h1><span class=\"secnum\">25.6.4.2.1</span>#sec-performpromiseallsettled Runtime Semantics: PerformPromiseAllSettled ( iteratorRecord, constructor, resultCapability )</h1>...</div><div id=\"excluded-sec-promise.allsettled-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.2.2</span>#sec-promise.allsettled-resolve-element-functions Promise.allSettled Resolve Element Functions</h1>...</div><div id=\"excluded-sec-promise.allsettled-reject-element-functions\"><h1><span class=\"secnum\">25.6.4.2.3</span>#sec-promise.allsettled-reject-element-functions Promise.allSettled Reject Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-bigint-object": {"num": "4.3.27", "title": "#sec-bigint-object BigInt object", "html": "<emu-clause id=\"sec-bigint-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint-object\">#sec-bigint-object</span> BigInt object</h1>\n      <p>member of the Object type that is an instance of the standard built-in <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n    </emu-clause>\n\n    "}, "sec-boolean-constructor": {"num": "19.3.1", "title": "#sec-boolean-constructor The Boolean Constructor", "html": "<emu-clause id=\"sec-boolean-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</span> The Boolean Constructor</h1>\n      <p>The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Boolean%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Boolean\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Boolean object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Boolean</code> behaviour must include a <code>super</code> call to the <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[BooleanData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-boolean-constructor-boolean-value\"><h1><span class=\"secnum\">19.3.1.1</span>#sec-boolean-constructor-boolean-value Boolean ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-weakset-constructor": {"num": "23.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakSet\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakSet</code> behaviour must include a <code>super</code> call to the <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">23.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-5": "Table 6", "table-7": "Table 8", "table-53": "Table 66", "table-54": "Table 67", "table-async-iterator-required": "Table 69", "table-async-iterator-optional": "Table 70"}}, "to": {"secList": ["sec-regexp-constructor", "sec-string.raw", "sec-generatorfunction-constructor", "sec-strict-mode-of-ecmascript", "sec-asyncgeneratorfunction-constructor", "sec-strict-mode-code", "sec-sharedarraybuffer-constructor", "sec-dataview-constructor", "sec-string-object", "sec-bigint-constructor", "sec-promise.resolve", "sec-arraybuffer-constructor", "sec-string-constructor", "sec-properties-of-the-generatorfunction-constructor", "sec-promise-constructor", "sec-boolean-object", "sec-async-function-constructor", "sec-forbidden-extensions", "sec-function-constructor", "sec-types-of-source-code", "sec-symbol-object", "sec-number-object", "sec-error-handling-and-language-extensions", "sec-properties-of-dataview-instances", "sec-async-function-constructor-properties", "sec-literals-regular-expression-literals", "sec-weakmap-constructor", "sec-properties-of-asyncgeneratorfunction", "sec-set-constructor", "sec-date.utc", "sec-asynciterator-interface", "sec-date-constructor", "sec-promise.reject", "sec-properties-of-regexp-instances", "sec-iterator-interface", "sec-newpromisecapability", "sec-patterns", "sec-promise.all", "sec-well-known-intrinsic-objects", "sec-object-value", "sec-number-constructor", "sec-error-constructor", "sec-promise-executor", "sec-map-constructor", "sec-array-constructor", "sec-promise.race", "sec-promise.allsettled", "sec-bigint-object", "sec-boolean-constructor", "sec-weakset-constructor"], "secData": {"sec-regexp-constructor": {"num": "21.2.3", "title": "#sec-regexp-constructor The RegExp Constructor", "html": "<emu-clause id=\"sec-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</span> The RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExp%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"RegExp\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new RegExp object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>RegExp(&#8230;)</code> is equivalent to the object creation expression <code>new RegExp(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified RegExp behaviour must include a <code>super</code> call to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the necessary internal slots.</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp-pattern-flags\"><h1><span class=\"secnum\">21.2.3.1</span>#sec-regexp-pattern-flags RegExp ( pattern, flags )</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-regexp-constructor\"><h1><span class=\"secnum\">21.2.3.2</span>#sec-abstract-operations-for-the-regexp-constructor Abstract Operations for the RegExp Constructor</h1>...</div></emu-clause>\n\n    "}, "sec-string.raw": {"num": "21.1.2.4", "title": "#sec-string.raw String.raw ( template, ...substitutions )", "html": "<emu-clause id=\"sec-string.raw\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.raw\">#sec-string.raw</span> String.raw ( <var>template</var>, ...<var>substitutions</var> )</h1>\n        <p>The <code>String.raw</code> function may be called with a variable number of arguments. The first argument is <var>template</var> and the remainder of the arguments form the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>substitutions</var>. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>substitutions</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of all of the arguments passed to this function, starting with the second argument. If fewer than two arguments were passed, the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is empty.</li><li>Let <var>numberOfSubstitutions</var> be the number of elements in <var>substitutions</var>.</li><li>Let <var>cooked</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>template</var>).</li><li>Let <var>raw</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>cooked</var>, <emu-val>\"raw\"</emu-val>)).</li><li>Let <var>literalSegments</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>raw</var>).</li><li>If <var>literalSegments</var> &#8804; 0, return the empty String.</li><li>Let <var>stringElements</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>nextIndex</var> be 0.</li><li>Repeat,<ol><li>Let <var>nextKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>).</li><li>Let <var>nextSeg</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>raw</var>, <var>nextKey</var>)).</li><li>Append in order the code unit elements of <var>nextSeg</var> to the end of <var>stringElements</var>.</li><li>If <var>nextIndex</var> + 1 = <var>literalSegments</var>, then<ol><li>Return the String value whose code units are, in order, the elements in the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>stringElements</var>. If <var>stringElements</var> has no elements, the empty String is returned.</li></ol></li><li>If <var>nextIndex</var> &lt; <var>numberOfSubstitutions</var>, let <var>next</var> be <var>substitutions</var>[<var>nextIndex</var>].</li><li>Else, let <var>next</var> be the empty String.</li><li>Let <var>nextSub</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>next</var>).</li><li>Append in order the code unit elements of <var>nextSub</var> to the end of <var>stringElements</var>.</li><li>Set <var>nextIndex</var> to <var>nextIndex</var> + 1.\n        </li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>raw</code> function is intended for use as a tag function of a Tagged Template (<emu-xref href=\"#sec-tagged-templates\"><a href=\"#sec-tagged-templates\" class=\"excluded-xref\" excluded-id=\"sec-tagged-templates\">#sec-tagged-templates</a></emu-xref>). When called as such, the first argument will be a well formed template object and the rest parameter will contain the substitution values.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-generatorfunction-constructor": {"num": "25.2.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator function objects create direct instances of <code>GeneratorFunction</code>. There is no syntactic means to create instances of <code>GeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">25.2.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-strict-mode-of-ecmascript": {"num": "C", "title": "#sec-strict-mode-of-ecmascript The Strict Mode of EMAScript", "html": "<emu-annex id=\"sec-strict-mode-of-ecmascript\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-of-ecmascript\">#sec-strict-mode-of-ecmascript</span> The Strict Mode of ECMAScript</h1>\n  <p><b>The strict mode restriction and exceptions</b></p>\n  <ul>\n    <li>\n      <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code> are reserved words within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. (<emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-keywords-and-reserved-words\">#sec-keywords-and-reserved-words</a></emu-xref>).\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include <emu-nt><a href=\"https://tc39.es/ecma262/#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include <emu-nt><a href=\"https://tc39.es/ecma262/#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt>.\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, may not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-nt><a href=\"https://tc39.es/ecma262/#prod-annexB-LegacyOctalEscapeSequence\">LegacyOctalEscapeSequence</a></emu-nt> as described in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n    \n    </li>\n    <li>\n      Assignment to an undeclared identifier or otherwise unresolvable reference does not create a property in the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. When a simple assignment occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, its <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> must not evaluate to an unresolvable <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>. If it does a <emu-val>ReferenceError</emu-val> exception is thrown (<emu-xref href=\"#sec-putvalue\"><a href=\"#sec-putvalue\" class=\"excluded-xref\" excluded-id=\"sec-putvalue\">#sec-putvalue</a></emu-xref>). The <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> also may not be a reference to a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> with the attribute value { [[Writable]]: <emu-val>false</emu-val> }, to an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with the attribute value { [[Set]]: <emu-val>undefined</emu-val> }, nor to a non-existent property of an object whose [[Extensible]] internal slot has the value <emu-val>false</emu-val>. In these cases a <code>TypeError</code> exception is thrown (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>).\n    \n    </li>\n    <li>\n      An <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> with the StringValue <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val> may not appear as the <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> of an Assignment operator (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>) or of an <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt> (<emu-xref href=\"#sec-update-expressions\"><a href=\"#sec-update-expressions\" class=\"excluded-xref\" excluded-id=\"sec-update-expressions\">#sec-update-expressions</a></emu-xref>) or as the <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> operated upon by a Prefix Increment (<emu-xref href=\"#sec-prefix-increment-operator\"><a href=\"#sec-prefix-increment-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-increment-operator\">#sec-prefix-increment-operator</a></emu-xref>) or a Prefix Decrement (<emu-xref href=\"#sec-prefix-decrement-operator\"><a href=\"#sec-prefix-decrement-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-decrement-operator\">#sec-prefix-decrement-operator</a></emu-xref>) operator.\n    \n    </li>\n    <li>\n      Arguments objects for strict functions define a non-configurable <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> <emu-val>\"callee\"</emu-val> which throws a <emu-val>TypeError</emu-val> exception on access (<emu-xref href=\"#sec-createunmappedargumentsobject\"><a href=\"#sec-createunmappedargumentsobject\" class=\"excluded-xref\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</a></emu-xref>).\n    \n    </li>\n    <li>\n      Arguments objects for strict functions do not dynamically share their  <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property values with the corresponding formal parameter bindings of their functions. (<emu-xref href=\"#sec-arguments-exotic-objects\"><a href=\"#sec-arguments-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects\">#sec-arguments-exotic-objects</a></emu-xref>).\n    \n    </li>\n    <li>\n      For strict functions, if an arguments object is created the binding of the local identifier <code>arguments</code> to the arguments object is immutable and hence may not be the target of an assignment expression. (<emu-xref href=\"#sec-functiondeclarationinstantiation\"><a href=\"#sec-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the StringValue of a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val> within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      Strict mode eval code cannot instantiate variables or functions in the variable environment of the caller to eval. Instead, a new variable environment is created and that environment is used for declaration binding instantiation for the eval code (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>).\n    \n    </li>\n    <li>\n      If <emu-val>this</emu-val> is evaluated within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, then the <emu-val>this</emu-val> value is not coerced to an object. A <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is not converted to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> and primitive values are not converted to wrapper objects. The <emu-val>this</emu-val> value passed via a function call (including calls made using <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>) do not coerce the passed <emu-val>this</emu-val> value to an object (<emu-xref href=\"#sec-ordinarycallbindthis\"><a href=\"#sec-ordinarycallbindthis\" class=\"excluded-xref\" excluded-id=\"sec-ordinarycallbindthis\">#sec-ordinarycallbindthis</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.apply\"><a href=\"#sec-function.prototype.apply\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.apply\">#sec-function.prototype.apply</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.call\"><a href=\"#sec-function.prototype.call\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.call\">#sec-function.prototype.call</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name (<emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>TypeError</emu-val> is thrown if the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (<emu-xref href=\"#sec-delete-operator-runtime-semantics-evaluation\"><a href=\"#sec-delete-operator-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</a></emu-xref>).\n    \n    </li>\n    <li>\n      <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">Strict mode code</a></emu-xref> may not include a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt>. The occurrence of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> in such a context is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-with-statement-static-semantics-early-errors\"><a href=\"#sec-with-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-static-semantics-early-errors\">#sec-with-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if a <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and BoundNames of <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> contains either <code>eval</code> or <code>arguments</code> (<emu-xref href=\"#sec-try-statement-static-semantics-early-errors\"><a href=\"#sec-try-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-static-semantics-early-errors\">#sec-try-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> appears more than once in the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>. An attempt to create such a function using a Function, Generator, or AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-function-definitions-static-semantics-early-errors\"><a href=\"#sec-function-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-createdynamicfunction\"><a href=\"#sec-createdynamicfunction\" class=\"excluded-xref\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</a></emu-xref>).\n    \n    </li>\n    <li>\n      An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named <emu-val>\"caller\"</emu-val> or <emu-val>\"arguments\"</emu-val> of function instances.\n    \n    </li>\n  </ul>\n</emu-annex>\n\n"}, "sec-asyncgeneratorfunction-constructor": {"num": "25.3.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator function objects create direct instances of <code>AsyncGeneratorFunction</code>. There is no syntactic means to create instances of <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">25.3.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-strict-mode-code": {"num": "10.2.1", "title": "#sec-strict-mode-code Strict Mode Code", "html": "<emu-clause id=\"sec-strict-mode-code\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-code\">#sec-strict-mode-code</span> Strict Mode Code</h1>\n      <p>An ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntactic unit may be processed using either unrestricted or strict mode syntax and semantics. Code is interpreted as  <dfn>strict mode code</dfn> in the following situations:</p>\n      <ul>\n        <li>\n          Global code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        \n        </li>\n        <li>\n          Module code is always strict mode code.\n        \n        </li>\n        <li>\n          All parts of a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt> are strict mode code.\n        \n        </li>\n        <li>\n          Eval code is strict mode code if it begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref> or if the call to <code>eval</code> is a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> that is contained in strict mode code.\n        \n        </li>\n        <li>\n          Function code is strict mode code if the associated <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> is contained in strict mode code or if the code that produces the value of the function's [[ECMAScriptCode]] internal slot begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        \n        </li>\n        <li>\n          Function code that is supplied as the arguments to the built-in Function, Generator, AsyncFunction, and AsyncGenerator constructors is strict mode code if the last argument is a String that when processed is a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> that begins with a <emu-xref href=\"#directive-prologue\"><a href=\"#directive-prologue\">Directive Prologue</a></emu-xref> that contains a <emu-xref href=\"#use-strict-directive\"><a href=\"#use-strict-directive\">Use Strict Directive</a></emu-xref>.\n        \n        </li>\n      </ul>\n      <p>ECMAScript code that is not strict mode code is called  <dfn id=\"non-strict-code\">non-strict code</dfn>.</p>\n    </emu-clause>\n\n    "}, "sec-sharedarraybuffer-constructor": {"num": "24.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">24.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-dataview-constructor": {"num": "24.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"DataView\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified DataView behaviour must include a <code>super</code> call to the DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">24.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-string-object": {"num": "4.3.19", "title": "#sec-string-object String object", "html": "<emu-clause id=\"sec-string-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-object\">#sec-string-object</span> String object</h1>\n      <p>member of the Object type that is an instance of the standard built-in String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A String object is created by using the String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in a <code>new</code> expression, supplying a String value as an argument. The resulting object has an internal slot whose value is the String value. A String object can be coerced to a String value by calling the String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as a function (<emu-xref href=\"#sec-string-constructor-string-value\"><a href=\"#sec-string-constructor-string-value\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor-string-value\">#sec-string-constructor-string-value</a></emu-xref>).</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-bigint-constructor": {"num": "20.2.1", "title": "#sec-bigint-constructor The BigInt Constructor", "html": "<emu-clause id=\"sec-bigint-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</span> The BigInt Constructor</h1>\n      <p>The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%BigInt%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"BigInt\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be used with the <code>new</code> operator or to be subclassed. It may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to the BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> will cause an exception.</li>\n      </ul>\n\n      <div id=\"excluded-sec-bigint-constructor-number-value\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-bigint-constructor-number-value BigInt ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.resolve": {"num": "25.6.4.6", "title": "#sec-promise.resolve Promise.resolve ( x )", "html": "<emu-clause id=\"sec-promise.resolve\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</span> Promise.resolve ( <var>x</var> )</h1>\n        <p>The <code>resolve</code> function returns either a new promise resolved with the passed argument, or the argument itself if the argument is a promise produced by this <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"PromiseResolve\"><a href=\"#sec-promise-resolve\">PromiseResolve</a></emu-xref>(<var>C</var>, <var>x</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_resolve%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>resolve</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-promise-resolve\"><h1><span class=\"secnum\">25.6.4.6.1</span>#sec-promise-resolve PromiseResolve ( C, x )</h1>...</div></emu-clause>\n\n      "}, "sec-arraybuffer-constructor": {"num": "24.1.2", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"ArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified ArrayBuffer behaviour must include a <code>super</code> call to the ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">24.1.2.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-string-constructor": {"num": "21.1.1", "title": "#sec-string-constructor The String Constructor", "html": "<emu-clause id=\"sec-string-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</span> The String Constructor</h1>\n      <p>The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%String%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"String\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new String object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified String behaviour must include a <code>super</code> call to the String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[StringData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-string-constructor-string-value\"><h1><span class=\"secnum\">21.1.1.1</span>#sec-string-constructor-string-value String ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"GeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-promise-constructor": {"num": "25.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-boolean-object": {"num": "4.3.16", "title": "#sec-boolean-object Boolean object", "html": "<emu-clause id=\"sec-boolean-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-object\">#sec-boolean-object</span> Boolean object</h1>\n      <p>member of the Object type that is an instance of the standard built-in Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A Boolean object is created by using the Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in a <code>new</code> expression, supplying a Boolean value as an argument. The resulting object has an internal slot whose value is the Boolean value. A Boolean object can be coerced to a Boolean value.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-async-function-constructor": {"num": "25.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">25.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n    "}, "sec-forbidden-extensions": {"num": "16.1", "title": "#sec-forbidden-extensions Forbidden Extensions", "html": "<emu-clause id=\"sec-forbidden-extensions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</span> Forbidden Extensions</h1>\n    <p>An implementation must not extend this specification in the following ways:</p>\n    <ul>\n      <li>\n        ECMAScript function objects defined using syntactic constructors in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> must not be created with own properties named <emu-val>\"caller\"</emu-val> or <emu-val>\"arguments\"</emu-val>. Such own properties also must not be created for function objects defined using an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, or <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> regardless of whether the definition is contained in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. Built-in functions, strict functions created using the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, generator functions created using the Generator <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, async functions created using the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, and functions created using the <code>bind</code> method also must not be created with such own properties.\n      \n      </li>\n      <li>\n        If an implementation extends any <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> with an own property named <emu-val>\"caller\"</emu-val> the value of that property, as observed using [[Get]] or [[GetOwnProperty]], must not be a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref> object. If it is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref>, the function that is the value of the property's [[Get]] attribute must never return a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref> when called.\n      \n      </li>\n      <li>\n        Neither mapped nor unmapped arguments objects may be created with an own property named <emu-val>\"caller\"</emu-val>.\n      \n      </li>\n      <li>\n        The behaviour of the following methods must not be extended except as specified in ECMA-402: <code>Object.prototype.toLocaleString</code>, <code>Array.prototype.toLocaleString</code>, <code>Number.prototype.toLocaleString</code>, <code>Date.prototype.toLocaleDateString</code>, <code>Date.prototype.toLocaleString</code>, <code>Date.prototype.toLocaleTimeString</code>, <code>String.prototype.localeCompare</code>, <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.toLocaleString</code>.\n      \n      </li>\n      <li>\n        The RegExp pattern grammars in  <emu-xref href=\"#sec-patterns\"><a href=\"#sec-patterns\" class=\"excluded-xref\" excluded-id=\"sec-patterns\">#sec-patterns</a></emu-xref> and  <emu-xref href=\"#sec-regular-expressions-patterns\"><a href=\"#sec-regular-expressions-patterns\" class=\"excluded-xref\" excluded-id=\"sec-regular-expressions-patterns\">#sec-regular-expressions-patterns</a></emu-xref> must not be extended to recognize any of the source characters A-Z or a-z as <emu-nt params=\"+U\"><a href=\"#prod-IdentityEscape\">IdentityEscape</a><emu-mods><emu-params>[+U]</emu-params></emu-mods></emu-nt> when the  <sub>[U]</sub> grammar parameter is present.\n      \n      </li>\n      <li>\n        The Syntactic Grammar must not be extended in any manner that allows the token <code>:</code> to immediately follow source text that matches the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> nonterminal symbol.\n      \n      </li>\n      <li>\n        When processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> must not be extended to include  <emu-xref href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><emu-nt>LegacyOctalIntegerLiteral</emu-nt></a></emu-xref> and the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> must not be extended to include  <emu-xref href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><emu-nt>NonOctalDecimalIntegerLiteral</emu-nt></a></emu-xref> as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>.\n      \n      </li>\n      <li>\n        <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt> must not be extended to include  <emu-xref href=\"#prod-annexB-LegacyOctalEscapeSequence\"><a href=\"#prod-annexB-LegacyOctalEscapeSequence\"><emu-nt>LegacyOctalEscapeSequence</emu-nt></a></emu-xref> as defined in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n      \n      </li>\n      <li>\n        When processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the extensions defined in  <emu-xref href=\"#sec-labelled-function-declarations\"><a href=\"#sec-labelled-function-declarations\" class=\"excluded-xref\" excluded-id=\"sec-labelled-function-declarations\">#sec-labelled-function-declarations</a></emu-xref>,  <emu-xref href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\"><a href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" class=\"excluded-xref\" excluded-id=\"sec-block-level-function-declarations-web-legacy-compatibility-semantics\">#sec-block-level-function-declarations-web-legacy-compatibility-semantics</a></emu-xref>,  <emu-xref href=\"#sec-functiondeclarations-in-ifstatement-statement-clauses\"><a href=\"#sec-functiondeclarations-in-ifstatement-statement-clauses\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarations-in-ifstatement-statement-clauses\">#sec-functiondeclarations-in-ifstatement-statement-clauses</a></emu-xref>, and  <emu-xref href=\"#sec-initializers-in-forin-statement-heads\"><a href=\"#sec-initializers-in-forin-statement-heads\" class=\"excluded-xref\" excluded-id=\"sec-initializers-in-forin-statement-heads\">#sec-initializers-in-forin-statement-heads</a></emu-xref> must not be supported.\n      \n      </li>\n      <li>\n        When parsing for the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>, the lexical grammar extensions defined in  <emu-xref href=\"#sec-html-like-comments\"><a href=\"#sec-html-like-comments\" class=\"excluded-xref\" excluded-id=\"sec-html-like-comments\">#sec-html-like-comments</a></emu-xref> must not be supported.\n      \n      </li>\n      <!-- The following is so that in the future we can potentially add new arguments or support ArgumentList. -->\n      <li>\n        <emu-nt><a href=\"#prod-ImportCall\">ImportCall</a></emu-nt> must not be extended.\n      \n      </li>\n    </ul>\n  </emu-clause>\n"}, "sec-function-constructor": {"num": "19.2.1", "title": "#sec-function-constructor The Function Constructor", "html": "<emu-clause id=\"sec-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</span> The Function Constructor</h1>\n      <p>The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Function%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Function\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Function(&#8230;)</code> is equivalent to the object creation expression <code>new Function(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Function behaviour must include a <code>super</code> call to the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in function behaviour. All ECMAScript syntactic forms for defining function objects create instances of <code>Function</code>. There is no syntactic means to create instances of <code>Function</code> subclasses except for the built-in <code>GeneratorFunction</code>, <code>AsyncFunction</code>, and <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-function-p1-p2-pn-body\"><h1><span class=\"secnum\">19.2.1.1</span>#sec-function-p1-p2-pn-body Function ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-types-of-source-code": {"num": "10.2", "title": "#sec-types-of-source-code Types of Source Code", "html": "<emu-clause id=\"sec-types-of-source-code\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-types-of-source-code\">#sec-types-of-source-code</span> Types of Source Code</h1>\n    <p>There are four types of ECMAScript code:</p>\n    <ul>\n      <li>\n        <em>Global code</em> is source text that is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The global code of a particular <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> does not include any source text that is parsed as part of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      \n      </li>\n      <li>\n        <em>Eval code</em> is the source text supplied to the built-in <code>eval</code> function. More precisely, if the parameter to the built-in <code>eval</code> function is a String, it is treated as an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>. The eval code for a particular invocation of <code>eval</code> is the global code portion of that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt>.\n      \n      </li>\n      <li>\n        <p><em>Function code</em> is source text that is parsed to supply the value of the [[ECMAScriptCode]] and [[FormalParameters]] internal slots (see  <emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. The function code of a particular ECMAScript function does not include any source text that is parsed as the function code of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.</p>\n        <p>In addition, if the source text referred to above is parsed as:</p>\n        <ul>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> of a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> of a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>,</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, or</li>\n          <li>the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> and <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> of an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>,</li>\n        </ul>\n        <p>then the source text matching the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> (if any) of that declaration or expression is also included in the function code of the corresponding function.</p>\n      </li>\n      <li>\n        <em>Module code</em> is source text that is code that is provided as a <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt>. It is the code that is directly evaluated when a module is initialized. The module code of a particular module does not include any source text that is parsed as part of a nested <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt>, <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>, <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>, or <emu-nt><a href=\"#prod-ClassExpression\">ClassExpression</a></emu-nt>.\n      \n      </li>\n    </ul>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Function code is generally provided as the bodies of Function Definitions (<emu-xref href=\"#sec-function-definitions\"><a href=\"#sec-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</a></emu-xref>), Arrow Function Definitions (<emu-xref href=\"#sec-arrow-function-definitions\"><a href=\"#sec-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-arrow-function-definitions\">#sec-arrow-function-definitions</a></emu-xref>), Method Definitions (<emu-xref href=\"#sec-method-definitions\"><a href=\"#sec-method-definitions\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions\">#sec-method-definitions</a></emu-xref>), Generator Function Definitions (<emu-xref href=\"#sec-generator-function-definitions\"><a href=\"#sec-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-generator-function-definitions\">#sec-generator-function-definitions</a></emu-xref>), Async Function Definitions (<emu-xref href=\"#sec-async-function-definitions\"><a href=\"#sec-async-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-function-definitions\">#sec-async-function-definitions</a></emu-xref>), Async Generator Function Definitions (<emu-xref href=\"#sec-async-generator-function-definitions\"><a href=\"#sec-async-generator-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-generator-function-definitions\">#sec-async-generator-function-definitions</a></emu-xref>), and Async Arrow Functions (<emu-xref href=\"#sec-async-arrow-function-definitions\"><a href=\"#sec-async-arrow-function-definitions\" class=\"excluded-xref\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</a></emu-xref>). Function code is also derived from the arguments to the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-p1-p2-pn-body\"><a href=\"#sec-function-p1-p2-pn-body\" class=\"excluded-xref\" excluded-id=\"sec-function-p1-p2-pn-body\">#sec-function-p1-p2-pn-body</a></emu-xref>), the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-generatorfunction\"><a href=\"#sec-generatorfunction\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction\">#sec-generatorfunction</a></emu-xref>), and the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-async-function-constructor-arguments\"><a href=\"#sec-async-function-constructor-arguments\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor-arguments\">#sec-async-function-constructor-arguments</a></emu-xref>).</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The practical effect of including the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in function code is that the Early Errors for <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> are applied to a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> that is the name of a function whose body contains a \"use strict\" directive, even if the surrounding code is not <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-strict-mode-code\"><h1><span class=\"secnum\">10.2.1</span>#sec-strict-mode-code Strict Mode Code</h1>...</div><div id=\"excluded-sec-non-ecmascript-functions\"><h1><span class=\"secnum\">10.2.2</span>#sec-non-ecmascript-functions Non-ECMAScript Functions</h1>...</div></emu-clause>\n"}, "sec-symbol-object": {"num": "4.3.30", "title": "#sec-symbol-object Symbol object", "html": "<emu-clause id=\"sec-symbol-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol-object\">#sec-symbol-object</span> Symbol object</h1>\n      <p>member of the Object type that is an instance of the standard built-in Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n    </emu-clause>\n\n    "}, "sec-number-object": {"num": "4.3.22", "title": "#sec-number-object Number object", "html": "<emu-clause id=\"sec-number-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-object\">#sec-number-object</span> Number object</h1>\n      <p>member of the Object type that is an instance of the standard built-in Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A Number object is created by using the Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in a <code>new</code> expression, supplying a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as an argument. The resulting object has an internal slot whose value is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>. A Number object can be coerced to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> by calling the Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as a function (<emu-xref href=\"#sec-number-constructor-number-value\"><a href=\"#sec-number-constructor-number-value\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor-number-value\">#sec-number-constructor-number-value</a></emu-xref>).</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-error-handling-and-language-extensions": {"num": "16", "title": "#sec-error-handling-and-language-extensions Error Handling and Language Extensions", "html": "<emu-clause id=\"sec-error-handling-and-language-extensions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-handling-and-language-extensions\">#sec-error-handling-and-language-extensions</span> Error Handling and Language Extensions</h1>\n  <p>An implementation must report most errors at the time the relevant ECMAScript language construct is evaluated. An  <dfn id=\"early-error\">early error</dfn> is an error that can be detected and reported prior to the evaluation of any construct in the <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> containing the error. The presence of an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> prevents the evaluation of the construct. An implementation must report early errors in a <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> as part of parsing that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> in <emu-xref aoid=\"ParseScript\"><a href=\"#sec-parse-script\">ParseScript</a></emu-xref>. Early errors in a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> are reported at the point when the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> would be evaluated and the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is never initialized. Early errors in  <b>eval</b> code are reported at the time <code>eval</code> is called and prevent evaluation of the  <b>eval</b> code. All errors that are not early errors are runtime errors.</p>\n  <p>An implementation must report as an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> any occurrence of a condition that is listed in a &#8220;Static Semantics: Early Errors&#8221; subclause of this specification.</p>\n  <p>An implementation shall not treat other kinds of errors as early errors even if the compiler can prove that a construct cannot execute without error under any circumstances. An implementation may issue an early warning in such a case, but it should not report the error until the relevant construct is actually executed.</p>\n  <p>An implementation shall report all errors as specified, except for the following:</p>\n  <ul>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may extend <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntax, <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> syntax, and regular expression pattern or flag syntax. To permit this, all operations (such as calling <code>eval</code>, using a regular expression literal, or using the Function or RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>) that are allowed to throw <emu-val>SyntaxError</emu-val> are permitted to exhibit implementation-defined behaviour instead of throwing <emu-val>SyntaxError</emu-val> when they encounter an implementation-defined extension to the script syntax or regular expression pattern or flag syntax.\n    \n    </li>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may provide additional types, values, objects, properties, and functions beyond those described in this specification. This may cause constructs (such as looking up a variable in the global scope) to have implementation-defined behaviour instead of throwing an error (such as <emu-val>ReferenceError</emu-val>).\n    \n    </li>\n  </ul>\n\n  <div id=\"excluded-sec-forbidden-extensions\"><h1><span class=\"secnum\">16.1</span>#sec-forbidden-extensions Forbidden Extensions</h1>...</div></emu-clause>\n\n"}, "sec-properties-of-dataview-instances": {"num": "24.3.5", "title": "#sec-properties-of-dataview-instances Properties of DataView Instances", "html": "<emu-clause id=\"sec-properties-of-dataview-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-dataview-instances\">#sec-properties-of-dataview-instances</span> Properties of DataView Instances</h1>\n      <p>DataView instances are ordinary objects that inherit properties from the DataView prototype object. DataView instances each have [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], and [[ByteOffset]] internal slots.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The value of the [[DataView]] internal slot is not used within this specification. The simple presence of that internal slot is used within the specification to identify objects created using the DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-async-function-constructor-properties": {"num": "25.7.2", "title": "#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor-properties\">#sec-async-function-constructor-properties</span> Properties of the AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-length\"><h1><span class=\"secnum\">25.7.2.1</span>#sec-async-function-constructor-length AsyncFunction.length</h1>...</div><div id=\"excluded-sec-async-function-constructor-prototype\"><h1><span class=\"secnum\">25.7.2.2</span>#sec-async-function-constructor-prototype AsyncFunction.prototype</h1>...</div></emu-clause>\n    "}, "sec-literals-regular-expression-literals": {"num": "11.8.5", "title": "#sec-literals-regular-expression-literals Regular Expression Literals", "html": "<emu-clause id=\"sec-literals-regular-expression-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-regular-expression-literals\">#sec-literals-regular-expression-literals</span> Regular Expression Literals</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A regular expression literal is an input element that is converted to a RegExp object (see  <emu-xref href=\"#sec-regexp-regular-expression-objects\"><a href=\"#sec-regexp-regular-expression-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-regular-expression-objects\">#sec-regexp-regular-expression-objects</a></emu-xref>) each time the literal is evaluated. Two regular expression literals in a program evaluate to regular expression objects that never compare as <code>===</code> to each other even if the two literals' contents are identical. A RegExp object may also be created at runtime by <code>new RegExp</code> or calling the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as a function (see  <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>).</p>\n      </div></emu-note>\n      <p>The productions below describe the syntax for a regular expression literal and are used by the input element scanner to find the end of the regular expression literal. The source text comprising the <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt> and the <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt> are subsequently parsed again using the more stringent ECMAScript Regular Expression grammar (<emu-xref href=\"#sec-patterns\"><a href=\"#sec-patterns\" class=\"excluded-xref\" excluded-id=\"sec-patterns\">#sec-patterns</a></emu-xref>).</p>\n      <p>An implementation may extend the ECMAScript Regular Expression grammar defined in  <emu-xref href=\"#sec-patterns\"><a href=\"#sec-patterns\" class=\"excluded-xref\" excluded-id=\"sec-patterns\">#sec-patterns</a></emu-xref>, but it must not extend the <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt> and <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt> productions defined below or the productions used by these productions.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"RegularExpressionLiteral\" type=\"lexical\" id=\"prod-RegularExpressionLiteral\">\n    <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5778053b\"><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionBody\" type=\"lexical\" id=\"prod-RegularExpressionBody\">\n    <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bba7969e\"><emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionChars\" type=\"lexical\" id=\"prod-RegularExpressionChars\">\n    <emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a9881cec\"><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionFirstChar\" type=\"lexical\" id=\"prod-RegularExpressionFirstChar\">\n    <emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"da1b0c0a\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionChar\" type=\"lexical\" id=\"prod-RegularExpressionChar\">\n    <emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0c3ff14\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionBackslashSequence\" type=\"lexical\" id=\"prod-RegularExpressionBackslashSequence\">\n    <emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d7656bad\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionNonTerminator\" type=\"lexical\" id=\"prod-RegularExpressionNonTerminator\">\n    <emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionClass\" type=\"lexical\" id=\"prod-RegularExpressionClass\">\n    <emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c1bc40a\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionClassChars\" type=\"lexical\" id=\"prod-RegularExpressionClassChars\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"76bdcb05\"><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionClassChar\" type=\"lexical\" id=\"prod-RegularExpressionClassChar\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7fd10851\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\\</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegularExpressionFlags\" type=\"lexical\" id=\"prod-RegularExpressionFlags\">\n    <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"fceefdcd\"><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Regular expression literals may not be empty; instead of representing an empty regular expression literal, the code unit sequence <code>//</code> starts a single-line comment. To specify an empty regular expression, use: <code>/(?:)/</code>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-literals-regular-expression-literals-static-semantics-early-errors\"><h1><span class=\"secnum\">11.8.5.1</span>#sec-literals-regular-expression-literals-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-bodytext\"><h1><span class=\"secnum\">11.8.5.2</span>#sec-static-semantics-bodytext Static Semantics: BodyText</h1>...</div><div id=\"excluded-sec-static-semantics-flagtext\"><h1><span class=\"secnum\">11.8.5.3</span>#sec-static-semantics-flagtext Static Semantics: FlagText</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "23.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakMap\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified WeakMap behaviour must include a <code>super</code> call to the WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">23.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <emu-val>\"name\"</emu-val> property whose value is <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-set-constructor": {"num": "23.2.1", "title": "#sec-set-constructor The Set Constructor", "html": "<emu-clause id=\"sec-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</span> The Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Set%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Set\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Set object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Set behaviour must include a <code>super</code> call to the Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Set.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set-iterable\"><h1><span class=\"secnum\">23.2.1.1</span>#sec-set-iterable Set ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-date.utc": {"num": "20.4.3.4", "title": "#sec-date.utc Date.UTC ( year [ , month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] ] )", "html": "<emu-clause id=\"sec-date.utc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.utc\">#sec-date.utc</span> Date.UTC ( <var>year</var> [ , <var>month</var> [ , <var>date</var> [ , <var>hours</var> [ , <var>minutes</var> [ , <var>seconds</var> [ , <var>ms</var> ] ] ] ] ] ] )</h1>\n        <p>When the <code>UTC</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>y</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>year</var>).</li><li>If <var>month</var> is present, let <var>m</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>month</var>); else let <var>m</var> be 0.</li><li>If <var>date</var> is present, let <var>dt</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>date</var>); else let <var>dt</var> be 1.</li><li>If <var>hours</var> is present, let <var>h</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>hours</var>); else let <var>h</var> be 0.</li><li>If <var>minutes</var> is present, let <var>min</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>minutes</var>); else let <var>min</var> be 0.</li><li>If <var>seconds</var> is present, let <var>s</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>seconds</var>); else let <var>s</var> be 0.</li><li>If <var>ms</var> is present, let <var>milli</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>ms</var>); else let <var>milli</var> be 0.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, let <var>yr</var> be <emu-val>NaN</emu-val>.</li><li>Else,<ol><li>Let <var>yi</var> be !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>y</var>).</li><li>If 0 &#8804; <var>yi</var> &#8804; 99, let <var>yr</var> be 1900 + <var>yi</var>; otherwise, let <var>yr</var> be <var>y</var>.</li></ol></li><li>Return <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(<var>yr</var>, <var>m</var>, <var>dt</var>), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(<var>h</var>, <var>min</var>, <var>s</var>, <var>milli</var>))).\n        </li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>UTC</code> function is 7.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>UTC</code> function differs from the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in two ways: it returns a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> as a Number, rather than creating a Date object, and it interprets the arguments in UTC rather than as local time.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-asynciterator-interface": {"num": "25.1.1.4", "title": "#sec-asynciterator-interface The  AsyncIterator Interface", "html": "<emu-clause id=\"sec-asynciterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciterator-interface\">#sec-asynciterator-interface</span> The  <i>AsyncIterator</i> Interface</h1>\n        <p>An object that implements the  <i>AsyncIterator</i> interface must include the properties in  <emu-xref href=\"#table-async-iterator-required\"><a href=\"#table-async-iterator-required\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-async-iterator-optional\"><a href=\"#table-async-iterator-optional\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</a></emu-xref>.</p>\n        <emu-table id=\"table-async-iterator-required\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</span>:  <i>AsyncIterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><emu-val>\"next\"</emu-val></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>AsyncIterator</i> has returned a promise for an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return a promise for an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <emu-val>\"value\"</emu-val> property whose value is not a promise (or \"thenable\"). However, this requirement is also not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the <code>next</code> function but their interpretation and validity is dependent upon the target  <i>AsyncIterator</i>. The <code>for</code>-<code>await</code>-<code>of</code> statement and other common users of  <em>AsyncIterators</em> do not pass any arguments, so  <i>AsyncIterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-async-iterator-optional\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</span>:  <i>AsyncIterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><emu-val>\"return\"</emu-val></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>AsyncIterator</i>. The returned promise will fulfill with an  <i>IteratorResult</i> object which will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>, and a <emu-val>\"value\"</emu-val> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <emu-val>\"value\"</emu-val> property whose value is not a promise (or \"thenable\"). If the argument value is used in the typical manner, then if it is a rejected promise, a promise rejected with the same reason should be returned; if it is a fulfilled promise, then its fulfillment value should be used as the <emu-val>\"value\"</emu-val> property of the returned promise's  <i>IteratorResult</i> object fulfillment value. However, these requirements are also not enforced.</p>\n              </td>\n            </tr>\n            <tr>\n              <td><emu-val>\"throw\"</emu-val></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to return a rejected promise which rejects with the value passed as the argument.</p>\n\n                <p>If the returned promise is fulfilled, the  <i>IteratorResult</i> fulfillment value will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>. Additionally, it should have a <emu-val>\"value\"</emu-val> property whose value is not a promise (or \"thenable\"), but this requirement is not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>await</code>-<code>of</code> and <code>yield*</code> call these methods after performing an existence check.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.4.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.4.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.reject": {"num": "25.6.4.5", "title": "#sec-promise.reject Promise.reject ( r )", "html": "<emu-clause id=\"sec-promise.reject\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</span> Promise.reject ( <var>r</var> )</h1>\n        <p>The <code>reject</code> function returns a new promise rejected with the passed argument.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>promiseCapability</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>r</var> &#187;).</li><li>Return <var>promiseCapability</var>.[[Promise]].\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_reject%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>reject</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-regexp-instances": {"num": "21.2.6", "title": "#sec-properties-of-regexp-instances Properties of RegExp Instances", "html": "<emu-clause id=\"sec-properties-of-regexp-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-regexp-instances\">#sec-properties-of-regexp-instances</span> Properties of RegExp Instances</h1>\n      <p>RegExp instances are ordinary objects that inherit properties from the RegExp prototype object. RegExp instances have internal slots [[RegExpMatcher]], [[OriginalSource]], and [[OriginalFlags]]. The value of the [[RegExpMatcher]] internal slot is an <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">abstract closure</a></emu-xref> representation of the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> of the RegExp object.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Prior to ECMAScript 2015, RegExp instances were specified as having the own data properties <emu-val>\"source\"</emu-val>, <emu-val>\"global\"</emu-val>, <emu-val>\"ignoreCase\"</emu-val>, and <emu-val>\"multiline\"</emu-val>. Those properties are now specified as accessor properties of <code>RegExp.prototype</code>.</p>\n      </div></emu-note>\n      <p>RegExp instances also have the following property:</p>\n\n      <div id=\"excluded-sec-lastindex\"><h1><span class=\"secnum\">21.2.6.1</span>#sec-lastindex lastIndex</h1>...</div></emu-clause>\n\n    "}, "sec-iterator-interface": {"num": "25.1.1.2", "title": "#sec-iterator-interface The  Iterator Interface", "html": "<emu-clause id=\"sec-iterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</span> The  <i>Iterator</i> Interface</h1>\n        <p>An object that implements the  <i>Iterator</i> interface must include the property in  <emu-xref href=\"#table-53\"><a href=\"#table-53\" class=\"excluded-xref\" excluded-id=\"table-53\">#table-53</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-54\"><a href=\"#table-54\" class=\"excluded-xref\" excluded-id=\"table-54\">#table-54</a></emu-xref>.</p>\n        <emu-table id=\"table-53\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-53\">#table-53</span>:  <i>Iterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-val>\"next\"</emu-val>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>Iterator</i> has returned an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return an  <i>IteratorResult</i> object whose <emu-val>\"done\"</emu-val> property is <emu-val>true</emu-val>. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the <code>next</code> function but their interpretation and validity is dependent upon the target  <i>Iterator</i>. The for-of statement and other common users of  <em>Iterators</em> do not pass any arguments, so  <i>Iterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-54\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-54\">#table-54</span>:  <i>Iterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-val>\"return\"</emu-val>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>Iterator</i>. The returned  <i>IteratorResult</i> object will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>, and a <emu-val>\"value\"</emu-val> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-val>\"throw\"</emu-val>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to <code>throw</code> the value passed as the argument. If the method does not <code>throw</code>, the returned  <i>IteratorResult</i> object will typically have a <emu-val>\"done\"</emu-val> property whose value is <emu-val>true</emu-val>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>of</code>, <code>yield*</code>, and array destructuring call these methods after performing an existence check. Most ECMAScript library functions that accept  <i>Iterable</i> objects as arguments also conditionally call them.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-newpromisecapability": {"num": "25.6.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" aoid=\"NewPromiseCapability\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes argument <var>C</var>. It attempts to use <var>C</var> as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in the fashion of the built-in Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its <code>resolve</code> and <code>reject</code> functions. The Promise object plus the <code>resolve</code> and <code>reject</code> functions are used to initialize a new PromiseCapability <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be the PromiseCapability { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>steps</var> be the algorithm steps defined in <emu-xref href=\"#sec-getcapabilitiesexecutor-functions\" title=\"\"><a href=\"#sec-getcapabilitiesexecutor-functions\">GetCapabilitiesExecutor Functions</a></emu-xref>.</li><li>Let <var>executor</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>steps</var>, &#171; [[Capability]] &#187;).</li><li>Set <var>executor</var>.[[Capability]] to <var>promiseCapability</var>.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-getcapabilitiesexecutor-functions\"><h1><span class=\"secnum\">25.6.1.5.1</span>#sec-getcapabilitiesexecutor-functions GetCapabilitiesExecutor Functions</h1>...</div></emu-clause>\n\n      "}, "sec-patterns": {"num": "21.2.1", "title": "#sec-patterns Patterns", "html": "<emu-clause id=\"sec-patterns\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-patterns\">#sec-patterns</span> Patterns</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> applies the following grammar to the input pattern String. An error occurs if the grammar cannot interpret the String as an expansion of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt>.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"Pattern\" params=\"U, N\" type=\"lexical\" id=\"prod-Pattern\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Pattern\">Pattern</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea2e8548\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Disjunction\" params=\"U, N\" type=\"lexical\" id=\"prod-Disjunction\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"be4e1703\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"40349c54\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>|</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Alternative\" params=\"U, N\" type=\"lexical\" id=\"prod-Alternative\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"8e81495c\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Alternative\">Alternative</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U, ?N\"><a href=\"#prod-Term\">Term</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Term\" params=\"U, N\" type=\"lexical\" id=\"prod-Term\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Term\">Term</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e8ded259\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Assertion\">Assertion</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2eb78702\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Atom\">Atom</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"0870df0d\"><emu-nt params=\"?U, ?N\"><a href=\"#prod-Atom\">Atom</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-nt><a href=\"#prod-Quantifier\">Quantifier</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"Assertion\" params=\"U, N\" type=\"lexical\" id=\"prod-Assertion\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Assertion\">Assertion</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5878811\"><emu-t>^</emu-t></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"1e228da5\"><emu-t>\\</emu-t><emu-t>b</emu-t></emu-rhs>\n    <emu-rhs a=\"a5dc97fa\"><emu-t>\\</emu-t><emu-t>B</emu-t></emu-rhs>\n    <emu-rhs a=\"c54c9dce\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>=</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"84eb51e5\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>!</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"82aea0e5\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>&lt;=</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"9799bbf1\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>&lt;!</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"Quantifier\" type=\"lexical\" id=\"prod-Quantifier\">\n    <emu-nt><a href=\"#prod-Quantifier\">Quantifier</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0e588d23\"><emu-nt><a href=\"#prod-QuantifierPrefix\">QuantifierPrefix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"0b0b5479\"><emu-nt><a href=\"#prod-QuantifierPrefix\">QuantifierPrefix</a></emu-nt><emu-t>?</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"QuantifierPrefix\" type=\"lexical\" id=\"prod-QuantifierPrefix\">\n    <emu-nt><a href=\"#prod-QuantifierPrefix\">QuantifierPrefix</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"e0370b05\"><emu-t>+</emu-t></emu-rhs>\n    <emu-rhs a=\"232d7160\"><emu-t>?</emu-t></emu-rhs>\n    <emu-rhs a=\"68a2b74e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"82e97391\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"f47829c0\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"Atom\" params=\"U, N\" type=\"lexical\" id=\"prod-Atom\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-Atom\">Atom</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"beff52c4\"><emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9658e473\"><emu-t>.</emu-t></emu-rhs>\n    <emu-rhs a=\"60fd7386\"><emu-t>\\</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-AtomEscape\">AtomEscape</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"72a5dc04\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterClass\">CharacterClass</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"9a015fb8\"><emu-t>(</emu-t><emu-nt params=\"?U\"><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n    <emu-rhs a=\"9d0775f7\"><emu-t>(</emu-t><emu-t>?</emu-t><emu-t>:</emu-t><emu-nt params=\"?U, ?N\"><a href=\"#prod-Disjunction\">Disjunction</a><emu-mods><emu-params>[?U, ?N]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"SyntaxCharacter\" type=\"lexical\" oneof=\"\" id=\"prod-SyntaxCharacter\">\n    <emu-nt><a href=\"#prod-SyntaxCharacter\">SyntaxCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>^</emu-t><emu-t>$</emu-t><emu-t>\\</emu-t><emu-t>.</emu-t><emu-t>*</emu-t><emu-t>+</emu-t><emu-t>?</emu-t><emu-t>(</emu-t><emu-t>)</emu-t><emu-t>[</emu-t><emu-t>]</emu-t><emu-t>{</emu-t><emu-t>}</emu-t><emu-t>|</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"PatternCharacter\" type=\"lexical\" id=\"prod-PatternCharacter\">\n    <emu-nt><a href=\"#prod-PatternCharacter\">PatternCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b94d4da1\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-SyntaxCharacter\">SyntaxCharacter</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"AtomEscape\" params=\"U, N\" type=\"lexical\" id=\"prod-AtomEscape\">\n    <emu-nt params=\"U, N\"><a href=\"#prod-AtomEscape\">AtomEscape</a><emu-mods><emu-params>[U, N]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7ebff96c\"><emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"da3d719e\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"4b80816a\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterEscape\">CharacterEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"f3e6826b\" constraints=\"+N\"><emu-constraints>[+N]</emu-constraints><emu-t>k</emu-t><emu-nt params=\"?U\"><a href=\"#prod-GroupName\">GroupName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"CharacterEscape\" params=\"U\" type=\"lexical\" id=\"prod-CharacterEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-CharacterEscape\">CharacterEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f88e7170\"><emu-nt><a href=\"#prod-ControlEscape\">ControlEscape</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a14dae7e\"><emu-t>c</emu-t><emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2649a73f\"><emu-nt params=\"?U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2037e8bf\"><emu-nt params=\"?U\"><a href=\"#prod-IdentityEscape\">IdentityEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ControlEscape\" type=\"lexical\" oneof=\"\" id=\"prod-ControlEscape\">\n    <emu-nt><a href=\"#prod-ControlEscape\">ControlEscape</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ControlLetter\" type=\"lexical\" oneof=\"\" id=\"prod-ControlLetter\">\n    <emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>g</emu-t><emu-t>h</emu-t><emu-t>i</emu-t><emu-t>j</emu-t><emu-t>k</emu-t><emu-t>l</emu-t><emu-t>m</emu-t><emu-t>n</emu-t><emu-t>o</emu-t><emu-t>p</emu-t><emu-t>q</emu-t><emu-t>r</emu-t><emu-t>s</emu-t><emu-t>t</emu-t><emu-t>u</emu-t><emu-t>v</emu-t><emu-t>w</emu-t><emu-t>x</emu-t><emu-t>y</emu-t><emu-t>z</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t><emu-t>G</emu-t><emu-t>H</emu-t><emu-t>I</emu-t><emu-t>J</emu-t><emu-t>K</emu-t><emu-t>L</emu-t><emu-t>M</emu-t><emu-t>N</emu-t><emu-t>O</emu-t><emu-t>P</emu-t><emu-t>Q</emu-t><emu-t>R</emu-t><emu-t>S</emu-t><emu-t>T</emu-t><emu-t>U</emu-t><emu-t>V</emu-t><emu-t>W</emu-t><emu-t>X</emu-t><emu-t>Y</emu-t><emu-t>Z</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"GroupSpecifier\" params=\"U\" type=\"lexical\" id=\"prod-GroupSpecifier\">\n    <emu-nt params=\"U\"><a href=\"#prod-GroupSpecifier\">GroupSpecifier</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"0a6c1542\"><emu-t>?</emu-t><emu-nt params=\"?U\"><a href=\"#prod-GroupName\">GroupName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"GroupName\" params=\"U\" type=\"lexical\" id=\"prod-GroupName\">\n    <emu-nt params=\"U\"><a href=\"#prod-GroupName\">GroupName</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bca72b0c\"><emu-t>&lt;</emu-t><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>&gt;</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpIdentifierName\" params=\"U\" type=\"lexical\" id=\"prod-RegExpIdentifierName\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4aeafadc\"><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierStart\">RegExpIdentifierStart</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d8644c18\"><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierName\">RegExpIdentifierName</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-RegExpIdentifierPart\">RegExpIdentifierPart</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpIdentifierStart\" params=\"U\" type=\"lexical\" id=\"prod-RegExpIdentifierStart\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpIdentifierStart\">RegExpIdentifierStart</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"ea655d14\"><emu-t>\\</emu-t><emu-nt params=\"+U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[+U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"61161e2e\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-nt><a href=\"#prod-UnicodeLeadSurrogate\">UnicodeLeadSurrogate</a></emu-nt><emu-nt>UnicodeTrailSurrogate</emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpIdentifierPart\" params=\"U\" type=\"lexical\" id=\"prod-RegExpIdentifierPart\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpIdentifierPart\">RegExpIdentifierPart</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"ea655d14\"><emu-t>\\</emu-t><emu-nt params=\"+U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[+U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"61161e2e\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-nt><a href=\"#prod-UnicodeLeadSurrogate\">UnicodeLeadSurrogate</a></emu-nt><emu-nt>UnicodeTrailSurrogate</emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n<emu-production name=\"RegExpUnicodeEscapeSequence\" params=\"U\" type=\"lexical\" id=\"prod-RegExpUnicodeEscapeSequence\">\n    <emu-nt params=\"U\"><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"af8038f7\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-t>\\u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"67ed8617\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"0c510966\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cea7c087\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8dee6a61\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7763ef41\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodeLeadSurrogate\" type=\"lexical\" id=\"prod-UnicodeLeadSurrogate\">\n    <emu-nt><a href=\"#prod-UnicodeLeadSurrogate\">UnicodeLeadSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"41e9dd14\"><emu-nt>any</emu-nt><emu-nt>Unicode</emu-nt><emu-nt>code</emu-nt><emu-nt>point</emu-nt><emu-nt>in</emu-nt><emu-nt>the</emu-nt><emu-nt>inclusive</emu-nt><emu-nt>range</emu-nt></emu-rhs>\n    <emu-rhs a=\"04863cad\"><emu-nt>UnicodeTrailSurrogate</emu-nt></emu-rhs>\n    <emu-rhs a=\"41e9dd14\"><emu-nt>any</emu-nt><emu-nt>Unicode</emu-nt><emu-nt>code</emu-nt><emu-nt>point</emu-nt><emu-nt>in</emu-nt><emu-nt>the</emu-nt><emu-nt>inclusive</emu-nt><emu-nt>range</emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>Each <code>\\u</code> <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt> for which the choice of associated <code>u</code> <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt> is ambiguous shall be associated with the nearest possible <code>u</code> <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt> that would otherwise have no corresponding <code>\\u</code> <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt>.</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"LeadSurrogate\" type=\"lexical\" id=\"prod-LeadSurrogate\">\n    <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b4266993\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-gmod>but only if the SV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> is in the inclusive range 0xD800 to 0xDBFF</emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"TrailSurrogate\" type=\"lexical\" id=\"prod-TrailSurrogate\">\n    <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"134361fc\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-gmod>but only if the SV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> is in the inclusive range 0xDC00 to 0xDFFF</emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"NonSurrogate\" type=\"lexical\" id=\"prod-NonSurrogate\">\n    <emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"de3cc0ae\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-gmod>but only if the SV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt> is not in the inclusive range 0xD800 to 0xDFFF</emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"IdentityEscape\" params=\"U\" type=\"lexical\" id=\"prod-IdentityEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-IdentityEscape\">IdentityEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"59e8579a\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-nt><a href=\"#prod-SyntaxCharacter\">SyntaxCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"85b4a3dd\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>/</emu-t></emu-rhs>\n    <emu-rhs a=\"fbcd1409\" constraints=\"~U\"><emu-constraints>[~U]</emu-constraints><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalEscape\" type=\"lexical\" id=\"prod-DecimalEscape\">\n    <emu-nt><a href=\"#prod-DecimalEscape\">DecimalEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"627951dd\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production>\n<emu-production name=\"CharacterClassEscape\" params=\"U\" type=\"lexical\" id=\"prod-CharacterClassEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0f32729\"><emu-t>d</emu-t></emu-rhs>\n    <emu-rhs a=\"919b1483\"><emu-t>D</emu-t></emu-rhs>\n    <emu-rhs a=\"5b9c6c6e\"><emu-t>s</emu-t></emu-rhs>\n    <emu-rhs a=\"6952cf48\"><emu-t>S</emu-t></emu-rhs>\n    <emu-rhs a=\"2d8b484a\"><emu-t>w</emu-t></emu-rhs>\n    <emu-rhs a=\"ae15e851\"><emu-t>W</emu-t></emu-rhs>\n    <emu-rhs a=\"6f034769\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>p{</emu-t><emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"9b2f96fc\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>P{</emu-t><emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValueExpression\" type=\"lexical\" id=\"prod-UnicodePropertyValueExpression\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueExpression\">UnicodePropertyValueExpression</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b11de407\"><emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt><emu-t>=</emu-t><emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"25d94190\"><emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyName\" type=\"lexical\" id=\"prod-UnicodePropertyName\">\n    <emu-nt><a href=\"#prod-UnicodePropertyName\">UnicodePropertyName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c0c2619f\"><emu-nt><a href=\"#prod-UnicodePropertyNameCharacters\">UnicodePropertyNameCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyNameCharacters\" type=\"lexical\" id=\"prod-UnicodePropertyNameCharacters\">\n    <emu-nt><a href=\"#prod-UnicodePropertyNameCharacters\">UnicodePropertyNameCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c1247f44\"><emu-nt><a href=\"#prod-UnicodePropertyNameCharacter\">UnicodePropertyNameCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-UnicodePropertyNameCharacters\">UnicodePropertyNameCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValue\" type=\"lexical\" id=\"prod-UnicodePropertyValue\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValue\">UnicodePropertyValue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"526a9170\"><emu-nt><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LoneUnicodePropertyNameOrValue\" type=\"lexical\" id=\"prod-LoneUnicodePropertyNameOrValue\">\n    <emu-nt><a href=\"#prod-LoneUnicodePropertyNameOrValue\">LoneUnicodePropertyNameOrValue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"526a9170\"><emu-nt><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValueCharacters\" type=\"lexical\" id=\"prod-UnicodePropertyValueCharacters\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5a208aa0\"><emu-nt><a href=\"#prod-UnicodePropertyValueCharacter\">UnicodePropertyValueCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-UnicodePropertyValueCharacters\">UnicodePropertyValueCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyValueCharacter\" type=\"lexical\" id=\"prod-UnicodePropertyValueCharacter\">\n    <emu-nt><a href=\"#prod-UnicodePropertyValueCharacter\">UnicodePropertyValueCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"531254cc\"><emu-nt><a href=\"#prod-UnicodePropertyNameCharacter\">UnicodePropertyNameCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"UnicodePropertyNameCharacter\" type=\"lexical\" id=\"prod-UnicodePropertyNameCharacter\">\n    <emu-nt><a href=\"#prod-UnicodePropertyNameCharacter\">UnicodePropertyNameCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"69611eb2\"><emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"CharacterClass\" params=\"U\" type=\"lexical\" id=\"prod-CharacterClass\">\n    <emu-nt params=\"U\"><a href=\"#prod-CharacterClass\">CharacterClass</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6c18f3a8\"><emu-t>[</emu-t><emu-gann>[lookahead &#8800; <emu-t>^</emu-t>]</emu-gann><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>]</emu-t></emu-rhs>\n    <emu-rhs a=\"93d354c0\"><emu-t>[</emu-t><emu-t>^</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassRanges\" params=\"U\" type=\"lexical\" id=\"prod-ClassRanges\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"43c27130\"><emu-nt params=\"?U\"><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonemptyClassRanges\" params=\"U\" type=\"lexical\" id=\"prod-NonemptyClassRanges\">\n    <emu-nt params=\"U\"><a href=\"#prod-NonemptyClassRanges\">NonemptyClassRanges</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cdf200f3\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"4a76f2ec\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"63fd2e03\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>-</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonemptyClassRangesNoDash\" params=\"U\" type=\"lexical\" id=\"prod-NonemptyClassRangesNoDash\">\n    <emu-nt params=\"U\"><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cdf200f3\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"2d1a8609\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-NonemptyClassRangesNoDash\">NonemptyClassRangesNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"b61280d4\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-t>-</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt><emu-nt params=\"?U\"><a href=\"#prod-ClassRanges\">ClassRanges</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassAtom\" params=\"U\" type=\"lexical\" id=\"prod-ClassAtom\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassAtom\">ClassAtom</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6f24a587\"><emu-t>-</emu-t></emu-rhs>\n    <emu-rhs a=\"714140ac\"><emu-nt params=\"?U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassAtomNoDash\" params=\"U\" type=\"lexical\" id=\"prod-ClassAtomNoDash\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ecde6e28\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>]</emu-t> or <emu-t>-</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"379e2483\"><emu-t>\\</emu-t><emu-nt params=\"?U\"><a href=\"#prod-ClassEscape\">ClassEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ClassEscape\" params=\"U\" type=\"lexical\" id=\"prod-ClassEscape\">\n    <emu-nt params=\"U\"><a href=\"#prod-ClassEscape\">ClassEscape</a><emu-mods><emu-params>[U]</emu-params></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0185ce89\"><emu-t>b</emu-t></emu-rhs>\n    <emu-rhs a=\"ae60fdeb\" constraints=\"+U\"><emu-constraints>[+U]</emu-constraints><emu-t>-</emu-t></emu-rhs>\n    <emu-rhs a=\"da3d719e\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterClassEscape\">CharacterClassEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"4b80816a\"><emu-nt params=\"?U\"><a href=\"#prod-CharacterEscape\">CharacterEscape</a><emu-mods><emu-params>[?U]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-patterns-static-semantics-early-errors\"><h1><span class=\"secnum\">21.2.1.1</span>#sec-patterns-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-patterns-static-semantics-capturing-group-number\"><h1><span class=\"secnum\">21.2.1.2</span>#sec-patterns-static-semantics-capturing-group-number Static Semantics: CapturingGroupNumber</h1>...</div><div id=\"excluded-sec-patterns-static-semantics-is-character-class\"><h1><span class=\"secnum\">21.2.1.3</span>#sec-patterns-static-semantics-is-character-class Static Semantics: IsCharacterClass</h1>...</div><div id=\"excluded-sec-patterns-static-semantics-character-value\"><h1><span class=\"secnum\">21.2.1.4</span>#sec-patterns-static-semantics-character-value Static Semantics: CharacterValue</h1>...</div><div id=\"excluded-sec-static-semantics-sourcetext\"><h1><span class=\"secnum\">21.2.1.5</span>#sec-static-semantics-sourcetext Static Semantics: SourceText</h1>...</div><div id=\"excluded-sec-regexp-identifier-names-static-semantics-stringvalue\"><h1><span class=\"secnum\">21.2.1.6</span>#sec-regexp-identifier-names-static-semantics-stringvalue Static Semantics: StringValue</h1>...</div></emu-clause>\n\n    "}, "sec-promise.all": {"num": "25.6.4.1", "title": "#sec-promise.all Promise.all ( iterable )", "html": "<emu-clause id=\"sec-promise.all\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.all\">#sec-promise.all</span> Promise.all ( <var>iterable</var> )</h1>\n        <p>The <code>all</code> function returns a new promise which is fulfilled with an array of fulfillment values for the passed promises, or rejects with the reason of the first passed promise that rejects. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAll\"><a href=\"#sec-performpromiseall\">PerformPromiseAll</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <p>This function is the  <dfn>%Promise_all%</dfn> intrinsic object.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>all</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseall\"><h1><span class=\"secnum\">25.6.4.1.1</span>#sec-performpromiseall Runtime Semantics: PerformPromiseAll ( iteratorRecord, constructor, resultCapability )</h1>...</div><div id=\"excluded-sec-promise.all-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.1.2</span>#sec-promise.all-resolve-element-functions Promise.all Resolve Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in  <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in  <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              \n              </th>\n              <th>\n                Global Name\n              \n              </th>\n              <th>\n                ECMAScript Language Association\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array</code>\n              \n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              \n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"entries\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"forEach\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"keys\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"values\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., %AsyncFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., %AsyncGeneratorFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., %AsyncGenerator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Atomics</code>\n              \n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>BigInt</code>\n              \n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigInt64Array%\n              \n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              \n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigUint64Array%\n              \n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              \n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean</code>\n              \n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView</code>\n              \n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date</code>\n              \n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURI</code>\n              \n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURI</code>\n              \n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error</code>\n              \n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>eval</code>\n              \n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalError%\n              \n              </td>\n              <td>\n                <code>EvalError</code>\n              \n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              \n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %EvalError%; i.e., %EvalError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32Array%\n              \n              </td>\n              <td>\n                <code>Float32Array</code>\n              \n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float32Array%; i.e., %Float32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64Array%\n              \n              </td>\n              <td>\n                <code>Float64Array</code>\n              \n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float64Array%; i.e., %Float64Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Function</code>\n              \n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              \n              </td>\n              <td>\n                <code>Function.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., %Generator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8Array%\n              \n              </td>\n              <td>\n                <code>Int8Array</code>\n              \n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int8Array%; i.e., %Int8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16Array%\n              \n              </td>\n              <td>\n                <code>Int16Array</code>\n              \n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int16Array%; i.e., %Int16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32Array%\n              \n              </td>\n              <td>\n                <code>Int32Array</code>\n              \n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int32Array%; i.e., %Int32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isFinite</code>\n              \n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isNaN</code>\n              \n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON</code>\n              \n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.parse</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"parse\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\">%JSONStringify%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"stringify\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map</code>\n              \n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Math</code>\n              \n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number</code>\n              \n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object</code>\n              \n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"toString\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"valueOf\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseFloat</code>\n              \n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseInt</code>\n              \n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise</code>\n              \n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"then\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.all</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"all\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.reject</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"reject\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"resolve\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Proxy</code>\n              \n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeError%\n              \n              </td>\n              <td>\n                <code>RangeError</code>\n              \n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %RangeError%; i.e., %RangeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceError%\n              \n              </td>\n              <td>\n                <code>ReferenceError</code>\n              \n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              \n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %ReferenceError%; i.e., %ReferenceError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Reflect</code>\n              \n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp</code>\n              \n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set</code>\n              \n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              \n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String</code>\n              \n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol</code>\n              \n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxError%\n              \n              </td>\n              <td>\n                <code>SyntaxError</code>\n              \n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              \n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %SyntaxError%; i.e., %SyntaxError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of %TypeError%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeError%\n              \n              </td>\n              <td>\n                <code>TypeError</code>\n              \n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %TypeError%; i.e., %TypeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8Array%\n              \n              </td>\n              <td>\n                <code>Uint8Array</code>\n              \n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8Array%; i.e., %Uint8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArray%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              \n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8ClampedArray%; i.e., %Uint8ClampedArray.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16Array%\n              \n              </td>\n              <td>\n                <code>Uint16Array</code>\n              \n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint16Array%; i.e., %Uint16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32Array%\n              \n              </td>\n              <td>\n                <code>Uint32Array</code>\n              \n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint32Array%; i.e., %Uint32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIError%\n              \n              </td>\n              <td>\n                <code>URIError</code>\n              \n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              \n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %URIError%; i.e., %URIError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap</code>\n              \n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet</code>\n              \n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <emu-val>\"prototype\"</emu-val> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-object-value": {"num": "19.1.1.1", "title": "#sec-object-value Object ( [ value ] )", "html": "<emu-clause id=\"sec-object-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-value\">#sec-object-value</span> Object ( [ <var>value</var> ] )</h1>\n        <p>When the <code>Object</code> function is called with optional argument <var>value</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is neither <emu-val>undefined</emu-val> nor the active function, then<ol><li>Return ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Object.prototype%\"</emu-val>).</li></ol></li><li>If <var>value</var> is <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, return <emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Return !&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>value</var>).\n        </li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>Object</code> function is 1.</p>\n      </emu-clause>\n    "}, "sec-number-constructor": {"num": "20.1.1", "title": "#sec-number-constructor The Number Constructor", "html": "<emu-clause id=\"sec-number-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</span> The Number Constructor</h1>\n      <p>The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Number%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Number\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Number object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Number behaviour must include a <code>super</code> call to the Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[NumberData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-number-constructor-number-value\"><h1><span class=\"secnum\">20.1.1.1</span>#sec-number-constructor-number-value Number ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-error-constructor": {"num": "19.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Error\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Error behaviour must include a <code>super</code> call to the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">19.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-promise-executor": {"num": "25.6.3.1", "title": "#sec-promise-executor Promise ( executor )", "html": "<emu-clause id=\"sec-promise-executor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</span> Promise ( <var>executor</var> )</h1>\n        <p>When the <code>Promise</code> function is called with argument <var>executor</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>executor</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Promise.prototype%\"</emu-val>, &#171; [[PromiseState]], [[PromiseResult]], [[PromiseFulfillReactions]], [[PromiseRejectReactions]], [[PromiseIsHandled]] &#187;).</li><li>Set <var>promise</var>.[[PromiseState]] to <emu-const>pending</emu-const>.</li><li>Set <var>promise</var>.[[PromiseFulfillReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseRejectReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseIsHandled]] to <emu-val>false</emu-val>.</li><li>Let <var>resolvingFunctions</var> be <emu-xref aoid=\"CreateResolvingFunctions\"><a href=\"#sec-createresolvingfunctions\">CreateResolvingFunctions</a></emu-xref>(<var>promise</var>).</li><li>Let <var>completion</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>executor</var>, <emu-val>undefined</emu-val>, &#171; <var>resolvingFunctions</var>.[[Resolve]], <var>resolvingFunctions</var>.[[Reject]] &#187;).</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>resolvingFunctions</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>completion</var>.[[Value]] &#187;).</li></ol></li><li>Return <var>promise</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <var>executor</var> argument must be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It is called for initiating and reporting completion of the possibly deferred action represented by this Promise object. The executor is called with two arguments: <var>resolve</var> and <var>reject</var>. These are functions that may be used by the <var>executor</var> function to report eventual completion or failure of the deferred computation. Returning from the executor function does not mean that the deferred action has been completed but only that the request to eventually perform the deferred action has been accepted.</p>\n          <p>The <var>resolve</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>resolve</var> function to indicate that it wishes to resolve the associated Promise object. The argument passed to the <var>resolve</var> function represents the eventual value of the deferred action and can be either the actual fulfillment value or another Promise object which will provide the value if it is fulfilled.</p>\n          <p>The <var>reject</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>reject</var> function to indicate that the associated Promise is rejected and will never be fulfilled. The argument passed to the <var>reject</var> function is used as the rejection value of the promise. Typically it will be an Error object.</p>\n          <p>The resolve and reject functions passed to an <var>executor</var> function by the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> have the capability to actually resolve and reject the associated promise. Subclasses may have different <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> behaviour that passes in customized values for resolve and reject.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-map-constructor": {"num": "23.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Map\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Map behaviour must include a <code>super</code> call to the Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">23.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "22.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is 1.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array-constructor-array\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-array-constructor-array Array ( )</h1>...</div><div id=\"excluded-sec-array-len\"><h1><span class=\"secnum\">22.1.1.2</span>#sec-array-len Array ( len )</h1>...</div><div id=\"excluded-sec-array-items\"><h1><span class=\"secnum\">22.1.1.3</span>#sec-array-items Array ( ...items )</h1>...</div></emu-clause>\n\n    "}, "sec-promise.race": {"num": "25.6.4.4", "title": "#sec-promise.race Promise.race ( iterable )", "html": "<emu-clause id=\"sec-promise.race\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.race\">#sec-promise.race</span> Promise.race ( <var>iterable</var> )</h1>\n        <p>The <code>race</code> function returns a new promise which is settled in the same way as the first passed promise to settle. It resolves all elements of the passed <var>iterable</var> to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseRace\"><a href=\"#sec-performpromiserace\">PerformPromiseRace</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>If the <var>iterable</var> argument is empty or if none of the promises in <var>iterable</var> ever settle then the pending promise returned by this method will never be settled.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>race</code> function expects its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It also expects that its <emu-val>this</emu-val> value provides a <code>resolve</code> method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiserace\"><h1><span class=\"secnum\">25.6.4.4.1</span>#sec-performpromiserace Runtime Semantics: PerformPromiseRace ( iteratorRecord, constructor, resultCapability )</h1>...</div></emu-clause>\n\n      "}, "sec-promise.allsettled": {"num": "25.6.4.2", "title": "#sec-promise.allsettled Promise.allSettled ( iterable )", "html": "<emu-clause id=\"sec-promise.allsettled\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.allsettled\">#sec-promise.allsettled</span> Promise.allSettled ( <var>iterable</var> )</h1>\n        <p>The <code>allSettled</code> function returns a promise that is fulfilled with an array of promise state snapshots, but only after all the original promises have settled, i.e. become either fulfilled or rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.</p>\n        <emu-alg><ol><li>Let <var>C</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>promiseCapability</var> be ?&#160;<emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref>(<var>C</var>).</li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>iterable</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>iteratorRecord</var>, <var>promiseCapability</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"PerformPromiseAllSettled\"><a href=\"#sec-performpromiseallsettled\">PerformPromiseAllSettled</a></emu-xref>(<var>iteratorRecord</var>, <var>C</var>, <var>promiseCapability</var>).</li><li>If <var>result</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>If <var>iteratorRecord</var>.[[Done]] is <emu-val>false</emu-val>, set <var>result</var> to <emu-xref aoid=\"IteratorClose\"><a href=\"#sec-iteratorclose\">IteratorClose</a></emu-xref>(<var>iteratorRecord</var>, <var>result</var>).</li><li><emu-xref aoid=\"IfAbruptRejectPromise\"><a href=\"#sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a></emu-xref>(<var>result</var>, <var>promiseCapability</var>).</li></ol></li><li>Return <emu-xref aoid=\"Completion\"><a href=\"#sec-completion-record-specification-type\">Completion</a></emu-xref>(<var>result</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>allSettled</code> function requires its <emu-val>this</emu-val> value to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-performpromiseallsettled\"><h1><span class=\"secnum\">25.6.4.2.1</span>#sec-performpromiseallsettled Runtime Semantics: PerformPromiseAllSettled ( iteratorRecord, constructor, resultCapability )</h1>...</div><div id=\"excluded-sec-promise.allsettled-resolve-element-functions\"><h1><span class=\"secnum\">25.6.4.2.2</span>#sec-promise.allsettled-resolve-element-functions Promise.allSettled Resolve Element Functions</h1>...</div><div id=\"excluded-sec-promise.allsettled-reject-element-functions\"><h1><span class=\"secnum\">25.6.4.2.3</span>#sec-promise.allsettled-reject-element-functions Promise.allSettled Reject Element Functions</h1>...</div></emu-clause>\n\n      "}, "sec-bigint-object": {"num": "4.3.27", "title": "#sec-bigint-object BigInt object", "html": "<emu-clause id=\"sec-bigint-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint-object\">#sec-bigint-object</span> BigInt object</h1>\n      <p>member of the Object type that is an instance of the standard built-in BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref></p>\n    </emu-clause>\n\n    "}, "sec-boolean-constructor": {"num": "19.3.1", "title": "#sec-boolean-constructor The Boolean Constructor", "html": "<emu-clause id=\"sec-boolean-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</span> The Boolean Constructor</h1>\n      <p>The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Boolean%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Boolean\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Boolean object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified Boolean behaviour must include a <code>super</code> call to the Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[BooleanData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-boolean-constructor-boolean-value\"><h1><span class=\"secnum\">19.3.1.1</span>#sec-boolean-constructor-boolean-value Boolean ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-weakset-constructor": {"num": "23.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakSet\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified WeakSet behaviour must include a <code>super</code> call to the WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">23.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-5": "Table 6", "table-7": "Table 8", "table-53": "Table 66", "table-54": "Table 67", "table-async-iterator-required": "Table 69", "table-async-iterator-optional": "Table 70"}}}