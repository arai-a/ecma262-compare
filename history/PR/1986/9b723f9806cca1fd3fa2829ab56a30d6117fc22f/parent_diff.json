{"from": {"secList": ["sec-ordinarysetprototypeof"], "secData": {"sec-ordinarysetprototypeof": {"num": "9.1.2.1", "title": "#sec-ordinarysetprototypeof OrdinarySetPrototypeOf ( O, V )", "html": "<emu-clause id=\"sec-ordinarysetprototypeof\" aoid=\"OrdinarySetPrototypeOf\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinarysetprototypeof\">#sec-ordinarysetprototypeof</span> OrdinarySetPrototypeOf ( <var>O</var>, <var>V</var> )</h1>\n        <p>The abstract operation OrdinarySetPrototypeOf takes arguments <var>O</var> (an Object) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Either <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Null.</li><li>Let <var>current</var> be <var>O</var>.[[Prototype]].</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>current</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>extensible</var> be <var>O</var>.[[Extensible]].</li><li>If <var>extensible</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>p</var> be <var>V</var>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>If <var>p</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else if <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>p</var>, <var>O</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Else,<ol><li>If <var>p</var>.[[GetPrototypeOf]] is not the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> internal method defined in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\">#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof</a></emu-xref>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else, set <var>p</var> to <var>p</var>.[[Prototype]].</li></ol></li></ol></li><li>Set <var>O</var>.[[Prototype]] to <var>V</var>.</li><li>Return <emu-val>true</emu-val>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The loop in step 8 guarantees that there will be no circularities in any prototype chain that only includes objects that use the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> definitions for [[GetPrototypeOf]] and [[SetPrototypeOf]].</p>\n        </div></emu-note>\n      </emu-clause>\n    "}}, "figData": {}}, "to": {"secList": ["sec-ordinarysetprototypeof"], "secData": {"sec-ordinarysetprototypeof": {"num": "9.1.2.1", "title": "#sec-ordinarysetprototypeof OrdinarySetPrototypeOf ( O, V )", "html": "<emu-clause id=\"sec-ordinarysetprototypeof\" aoid=\"OrdinarySetPrototypeOf\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinarysetprototypeof\">#sec-ordinarysetprototypeof</span> OrdinarySetPrototypeOf ( <var>O</var>, <var>V</var> )</h1>\n        <p>The abstract operation OrdinarySetPrototypeOf takes arguments <var>O</var> (an Object) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Either <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Null.</li><li>Let <var>current</var> be <var>O</var>.[[Prototype]].</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>current</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>extensible</var> be <var>O</var>.[[Extensible]].</li><li>If <var>extensible</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>p</var> be <var>V</var>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val>,<ol><li>If <var>p</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else if <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>p</var>, <var>O</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Else,<ol><li>If <var>p</var>.[[GetPrototypeOf]] is not the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> internal method defined in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof\">#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof</a></emu-xref> and <var>p</var> does not have an <emu-xref href=\"#sec-IsHTMLL-internal-slot\"><a href=\"#sec-IsHTMLL-internal-slot\">[[IsHTMLL]] internal slot</a></emu-xref>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else, set <var>p</var> to <var>p</var>.[[Prototype]].</li></ol></li></ol></li><li>Set <var>O</var>.[[Prototype]] to <var>V</var>.</li><li>Return <emu-val>true</emu-val>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The loop in step 8 guarantees that there will be no circularities in any prototype chain that only includes objects that use the <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> definitions for [[GetPrototypeOf]] and [[SetPrototypeOf]].</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-IsHTMLL-internal-slot\"><h1><span class=\"secnum\">9.1.2.1.1</span>#sec-IsHTMLL-internal-slot The [[IsHTMLL]] Internal Slot</h1>...</div></emu-clause>\n    "}}, "figData": {}}}