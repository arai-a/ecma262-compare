{"from": {"secList": ["sec-object.defineproperty"], "secData": {"sec-object.defineproperty": {"num": "19.1.2.4", "title": "#sec-object.defineproperty Object.defineProperty ( O, P, Attributes )", "html": "<emu-clause id=\"sec-object.defineproperty\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.defineproperty\">#sec-object.defineproperty</span> Object.defineProperty ( <var>O</var>, <var>P</var>, <var>Attributes</var> )</h1>\n        <p>The <code>defineProperty</code> function is used to add an own property and/or update the attributes of an existing own property of an object. When the <code>defineProperty</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>key</var> be ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>P</var>).</li><li>Let <var>desc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>Attributes</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>key</var>, <var>desc</var>).</li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-object.defineproperty"], "secData": {"sec-object.defineproperty": {"num": "19.1.2.4", "title": "#sec-object.defineproperty Object.defineProperty ( O, P, Attributes )", "html": "<emu-clause id=\"sec-object.defineproperty\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.defineproperty\">#sec-object.defineproperty</span> Object.defineProperty ( <var>O</var>, <var>P</var>, <var>Attributes</var> )</h1>\n        <p>The <code>defineProperty</code> function is used to add an own property and/or update the attributes of an existing own property of an object. When the <code>defineProperty</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>key</var> be ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>P</var>).</li><li>Let <var>desc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>Attributes</var>).</li><li>If !&#160;<emu-xref aoid=\"HostObjectDefinePropertyReturnFalse\"><a href=\"#sec-hostobjectdefinepropertyreturnfalse\">HostObjectDefinePropertyReturnFalse</a></emu-xref>(<var>O</var>, <var>key</var>, <var>desc</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>key</var>, <var>desc</var>).</li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n\n        <div id=\"excluded-sec-hostobjectdefinepropertyreturnfalse\"><h1><span class=\"secnum\">19.1.2.4.1</span>#sec-hostobjectdefinepropertyreturnfalse HostObjectDefinePropertyReturnFalse( O, key, desc )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}}