{"from": {"secList": ["sec-with-statement"], "secData": {"sec-with-statement": {"num": "14.11", "title": "#sec-with-statement The with Statement", "html": "<emu-clause id=\"sec-with-statement\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-with-statement\">#sec-with-statement</span> The <code>with</code> Statement</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"WithStatement\" params=\"Yield, Await, Return\" id=\"prod-WithStatement\">\n    <emu-nt params=\"Yield, Await, Return\"><a href=\"#prod-WithStatement\">WithStatement</a><emu-mods><emu-params>[Yield, Await, Return]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"lo7bccts\" id=\"prod-3HlNX-pI\">\n        <emu-t>with</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-nt params=\"?Yield, ?Await, ?Return\"><a href=\"#prod-Statement\">Statement</a><emu-mods><emu-params>[?Yield, ?Await, ?Return]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>The <code>with</code> statement adds an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for a computed object to the lexical environment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. It then executes a statement using this augmented lexical environment. Finally, it restores the original lexical environment.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-with-statement-static-semantics-early-errors\"><h1><span class=\"secnum\">14.11.1</span>#sec-with-statement-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-with-statement-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.11.2</span>#sec-with-statement-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}, "to": {"secList": ["sec-with-statement"], "secData": {"sec-with-statement": {"num": "14.11", "title": "#sec-with-statement The with Statement", "html": "<emu-clause id=\"sec-with-statement\" legacy=\"\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-with-statement\">#sec-with-statement</span> The <code>with</code> Statement</h1>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>It is recommended that the legacy <code>with</code> statement is not used in new ECMAScript code. Consider alternatives, such as <emu-xref href=\"#sec-destructuring-assignment\" title=\"\"><a href=\"#sec-destructuring-assignment\">Destructuring Assignment</a></emu-xref>, which are permitted in both <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"WithStatement\" params=\"Yield, Await, Return\" id=\"prod-WithStatement\">\n    <emu-nt params=\"Yield, Await, Return\"><a href=\"#prod-WithStatement\">WithStatement</a><emu-mods><emu-params>[Yield, Await, Return]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"lo7bccts\" id=\"prod-3HlNX-pI\">\n        <emu-t>with</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-nt params=\"?Yield, ?Await, ?Return\"><a href=\"#prod-Statement\">Statement</a><emu-mods><emu-params>[?Yield, ?Await, ?Return]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The <code>with</code> statement adds an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for a computed object to the lexical environment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. It then executes a statement using this augmented lexical environment. Finally, it restores the original lexical environment.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-with-statement-static-semantics-early-errors\"><h1><span class=\"secnum\">14.11.1</span>#sec-with-statement-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-with-statement-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.11.2</span>#sec-with-statement-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}}