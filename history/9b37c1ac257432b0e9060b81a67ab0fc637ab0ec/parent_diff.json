{"from": {"secList": ["sec-objectdefineproperties", "sec-object.defineproperties"], "secData": {"sec-objectdefineproperties": {"num": "19.1.2.3.1", "title": "#sec-objectdefineproperties Runtime Semantics: ObjectDefineProperties ( O, Properties )", "html": "<emu-clause id=\"sec-objectdefineproperties\" aoid=\"ObjectDefineProperties\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-objectdefineproperties\">#sec-objectdefineproperties</span> Runtime Semantics: ObjectDefineProperties ( <var>O</var>, <var>Properties</var> )</h1>\n          <p>The abstract operation ObjectDefineProperties takes arguments <var>O</var> and <var>Properties</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>props</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>Properties</var>).</li><li>Let <var>keys</var> be ? <var>props</var>.[[OwnPropertyKeys]]().</li><li>Let <var>descriptors</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>nextKey</var> of <var>keys</var>, do<ol><li>Let <var>propDesc</var> be ? <var>props</var>.[[GetOwnProperty]](<var>nextKey</var>).</li><li>If <var>propDesc</var> is not <emu-val>undefined</emu-val> and <var>propDesc</var>.[[Enumerable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>descObj</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>props</var>, <var>nextKey</var>).</li><li>Let <var>desc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>descObj</var>).</li><li>Append the pair (a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>) consisting of <var>nextKey</var> and <var>desc</var> to the end of <var>descriptors</var>.</li></ol></li></ol></li><li>For each element <var>pair</var> of <var>descriptors</var>, do<ol><li>Let <var>P</var> be the first element of <var>pair</var>.</li><li>Let <var>desc</var> be the second element of <var>pair</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>P</var>, <var>desc</var>).</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-object.defineproperties": {"num": "19.1.2.3", "title": "#sec-object.defineproperties Object.defineProperties ( O, Properties )", "html": "<emu-clause id=\"sec-object.defineproperties\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.defineproperties\">#sec-object.defineproperties</span> Object.defineProperties ( <var>O</var>, <var>Properties</var> )</h1>\n        <p>The <code>defineProperties</code> function is used to add own properties and/or update the attributes of existing own properties of an object. When the <code>defineProperties</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref aoid=\"ObjectDefineProperties\"><a href=\"#sec-objectdefineproperties\">ObjectDefineProperties</a></emu-xref>(<var>O</var>, <var>Properties</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-objectdefineproperties\"><h1><span class=\"secnum\">19.1.2.3.1</span>#sec-objectdefineproperties Runtime Semantics: ObjectDefineProperties ( O, Properties )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-objectdefineproperties", "sec-object.defineproperties"], "secData": {"sec-objectdefineproperties": {"num": "19.1.2.3.1", "title": "#sec-objectdefineproperties Runtime Semantics: ObjectDefineProperties ( O, Properties )", "html": "<emu-clause id=\"sec-objectdefineproperties\" aoid=\"ObjectDefineProperties\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-objectdefineproperties\">#sec-objectdefineproperties</span> Runtime Semantics: ObjectDefineProperties ( <var>O</var>, <var>Properties</var> )</h1>\n          <p>The abstract operation ObjectDefineProperties takes arguments <var>O</var> and <var>Properties</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is Object.</li><li>Let <var>props</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>Properties</var>).</li><li>Let <var>keys</var> be ? <var>props</var>.[[OwnPropertyKeys]]().</li><li>Let <var>descriptors</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>nextKey</var> of <var>keys</var>, do<ol><li>Let <var>propDesc</var> be ? <var>props</var>.[[GetOwnProperty]](<var>nextKey</var>).</li><li>If <var>propDesc</var> is not <emu-val>undefined</emu-val> and <var>propDesc</var>.[[Enumerable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>descObj</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>props</var>, <var>nextKey</var>).</li><li>Let <var>desc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>descObj</var>).</li><li>Append the pair (a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>) consisting of <var>nextKey</var> and <var>desc</var> to the end of <var>descriptors</var>.</li></ol></li></ol></li><li>For each element <var>pair</var> of <var>descriptors</var>, do<ol><li>Let <var>P</var> be the first element of <var>pair</var>.</li><li>Let <var>desc</var> be the second element of <var>pair</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>P</var>, <var>desc</var>).</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-object.defineproperties": {"num": "19.1.2.3", "title": "#sec-object.defineproperties Object.defineProperties ( O, Properties )", "html": "<emu-clause id=\"sec-object.defineproperties\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.defineproperties\">#sec-object.defineproperties</span> Object.defineProperties ( <var>O</var>, <var>Properties</var> )</h1>\n        <p>The <code>defineProperties</code> function is used to add own properties and/or update the attributes of existing own properties of an object. When the <code>defineProperties</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"ObjectDefineProperties\"><a href=\"#sec-objectdefineproperties\">ObjectDefineProperties</a></emu-xref>(<var>O</var>, <var>Properties</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-objectdefineproperties\"><h1><span class=\"secnum\">19.1.2.3.1</span>#sec-objectdefineproperties Runtime Semantics: ObjectDefineProperties ( O, Properties )</h1>...</div></emu-clause>\n\n      "}}, "figData": {}}}