{"from": {"secList": ["sec-object-environment-records", "sec-newglobalenvironment"], "secData": {"sec-object-environment-records": {"num": "9.1.1.2", "title": "#sec-object-environment-records Object Environment Records", "html": "<emu-clause id=\"sec-object-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records\">#sec-object-environment-records</span> Object Environment Records</h1>\n        <p>Each <dfn>object Environment Record</dfn> is associated with an object called its <em>binding object</em>. An object Environment Record binds the set of string identifier names that directly correspond to the property names of its binding object. Property keys that are not strings in the form of an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are not included in the set of bound identifiers. Both own and inherited properties are included in the set regardless of the setting of their [[Enumerable]] attribute. Because properties can be dynamically added and deleted from objects, the set of identifiers bound by an object Environment Record may potentially change as a side-effect of any operation that adds or deletes properties. Any bindings that are created as a result of such a side-effect are considered to be a mutable binding even if the Writable attribute of the corresponding property has the value <emu-val>false</emu-val>. Immutable bindings do not exist for object Environment Records.</p>\n        <p>Object Environment Records created for <code>with</code> statements (<emu-xref href=\"#sec-with-statement\"><a href=\"#sec-with-statement\" class=\"excluded-xref\" excluded-id=\"sec-with-statement\">#sec-with-statement</a></emu-xref>) can provide their binding object as an implicit <emu-val>this</emu-val> value for use in function calls. The capability is controlled by a <var>withEnvironment</var> Boolean value that is associated with each object Environment Record. By default, the value of <var>withEnvironment</var> is <emu-val>false</emu-val> for any object Environment Record.</p>\n        <p>The behaviour of the concrete specification methods for object Environment Records is defined by the following algorithms.</p>\n\n        <div id=\"excluded-sec-object-environment-records-hasbinding-n\"><h1><span class=\"secnum\">9.1.1.2.1</span>#sec-object-environment-records-hasbinding-n HasBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-createmutablebinding-n-d\"><h1><span class=\"secnum\">9.1.1.2.2</span>#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )</h1>...</div><div id=\"excluded-sec-object-environment-records-createimmutablebinding-n-s\"><h1><span class=\"secnum\">9.1.1.2.3</span>#sec-object-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-initializebinding-n-v\"><h1><span class=\"secnum\">9.1.1.2.4</span>#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )</h1>...</div><div id=\"excluded-sec-object-environment-records-setmutablebinding-n-v-s\"><h1><span class=\"secnum\">9.1.1.2.5</span>#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.2.6</span>#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.2.7</span>#sec-object-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.2.8</span>#sec-object-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-hassuperbinding\"><h1><span class=\"secnum\">9.1.1.2.9</span>#sec-object-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-withbaseobject\"><h1><span class=\"secnum\">9.1.1.2.10</span>#sec-object-environment-records-withbaseobject WithBaseObject ( )</h1>...</div></emu-clause>\n\n      "}, "sec-newglobalenvironment": {"num": "9.1.2.5", "title": "#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )", "html": "<emu-clause id=\"sec-newglobalenvironment\" aoid=\"NewGlobalEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newglobalenvironment\">#sec-newglobalenvironment</span> NewGlobalEnvironment ( <var>G</var>, <var>thisValue</var> )</h1>\n        <p>The abstract operation NewGlobalEnvironment takes arguments <var>G</var> and <var>thisValue</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>objRec</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>G</var>, <emu-val>null</emu-val>).</li><li>Let <var>dclRec</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> containing no bindings.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[ObjectRecord]] to <var>objRec</var>.</li><li>Set <var>env</var>.[[GlobalThisValue]] to <var>thisValue</var>.</li><li>Set <var>env</var>.[[DeclarativeRecord]] to <var>dclRec</var>.</li><li>Set <var>env</var>.[[VarNames]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>env</var>.[[OuterEnv]] to <emu-val>null</emu-val>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-object-environment-records", "sec-newglobalenvironment"], "secData": {"sec-object-environment-records": {"num": "9.1.1.2", "title": "#sec-object-environment-records Object Environment Records", "html": "<emu-clause id=\"sec-object-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records\">#sec-object-environment-records</span> Object Environment Records</h1>\n        <p>Each <dfn>object Environment Record</dfn> is associated with an object called its <em>binding object</em>. An object Environment Record binds the set of string identifier names that directly correspond to the property names of its binding object. Property keys that are not strings in the form of an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are not included in the set of bound identifiers. Both own and inherited properties are included in the set regardless of the setting of their [[Enumerable]] attribute. Because properties can be dynamically added and deleted from objects, the set of identifiers bound by an object Environment Record may potentially change as a side-effect of any operation that adds or deletes properties. Any bindings that are created as a result of such a side-effect are considered to be a mutable binding even if the Writable attribute of the corresponding property has the value <emu-val>false</emu-val>. Immutable bindings do not exist for object Environment Records.</p>\n        <p>Object Environment Records created for <code>with</code> statements (<emu-xref href=\"#sec-with-statement\"><a href=\"#sec-with-statement\" class=\"excluded-xref\" excluded-id=\"sec-with-statement\">#sec-with-statement</a></emu-xref>) can provide their binding object as an implicit <emu-val>this</emu-val> value for use in function calls. The capability is controlled by a <var>withEnvironment</var> Boolean value that is associated with each object Environment Record.</p>\n        <p>The behaviour of the concrete specification methods for object Environment Records is defined by the following algorithms.</p>\n\n        <div id=\"excluded-sec-object-environment-records-hasbinding-n\"><h1><span class=\"secnum\">9.1.1.2.1</span>#sec-object-environment-records-hasbinding-n HasBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-createmutablebinding-n-d\"><h1><span class=\"secnum\">9.1.1.2.2</span>#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )</h1>...</div><div id=\"excluded-sec-object-environment-records-createimmutablebinding-n-s\"><h1><span class=\"secnum\">9.1.1.2.3</span>#sec-object-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-initializebinding-n-v\"><h1><span class=\"secnum\">9.1.1.2.4</span>#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )</h1>...</div><div id=\"excluded-sec-object-environment-records-setmutablebinding-n-v-s\"><h1><span class=\"secnum\">9.1.1.2.5</span>#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-getbindingvalue-n-s\"><h1><span class=\"secnum\">9.1.1.2.6</span>#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )</h1>...</div><div id=\"excluded-sec-object-environment-records-deletebinding-n\"><h1><span class=\"secnum\">9.1.1.2.7</span>#sec-object-environment-records-deletebinding-n DeleteBinding ( N )</h1>...</div><div id=\"excluded-sec-object-environment-records-hasthisbinding\"><h1><span class=\"secnum\">9.1.1.2.8</span>#sec-object-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-hassuperbinding\"><h1><span class=\"secnum\">9.1.1.2.9</span>#sec-object-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-object-environment-records-withbaseobject\"><h1><span class=\"secnum\">9.1.1.2.10</span>#sec-object-environment-records-withbaseobject WithBaseObject ( )</h1>...</div></emu-clause>\n\n      "}, "sec-newglobalenvironment": {"num": "9.1.2.5", "title": "#sec-newglobalenvironment NewGlobalEnvironment ( G, thisValue )", "html": "<emu-clause id=\"sec-newglobalenvironment\" aoid=\"NewGlobalEnvironment\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newglobalenvironment\">#sec-newglobalenvironment</span> NewGlobalEnvironment ( <var>G</var>, <var>thisValue</var> )</h1>\n        <p>The abstract operation NewGlobalEnvironment takes arguments <var>G</var> and <var>thisValue</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>objRec</var> be <emu-xref aoid=\"NewObjectEnvironment\"><a href=\"#sec-newobjectenvironment\">NewObjectEnvironment</a></emu-xref>(<var>G</var>, <emu-val>null</emu-val>).</li><li>Set the <var>withEnvironment</var> flag of <var>newEnv</var> to <emu-val>false</emu-val>.</li><li>Let <var>dclRec</var> be a new <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> containing no bindings.</li><li>Let <var>env</var> be a new <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref>.</li><li>Set <var>env</var>.[[ObjectRecord]] to <var>objRec</var>.</li><li>Set <var>env</var>.[[GlobalThisValue]] to <var>thisValue</var>.</li><li>Set <var>env</var>.[[DeclarativeRecord]] to <var>dclRec</var>.</li><li>Set <var>env</var>.[[VarNames]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>env</var>.[[OuterEnv]] to <emu-val>null</emu-val>.</li><li>Return <var>env</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}}