{"from": {"secList": ["sec-math.round"], "secData": {"sec-math.round": {"num": "20.3.2.28", "title": "#sec-math.round Math.round ( x )", "html": "<emu-clause id=\"sec-math.round\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.round\">#sec-math.round</span> Math.round ( <var>x</var> )</h1>\n        <p>Returns the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closest to <var>x</var> and is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. If two integers are equally close to <var>x</var>, then the result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closer to <emu-val>+&#8734;</emu-val>. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <p>When the <code>Math.round</code> method is called with argument <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is an integral Number, return <var>n</var>.</li><li>If <var>n</var> &lt; 0.5 and <var>n</var> &gt; 0, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> &lt; 0 and <var>n</var> &#8805; -0.5, return <emu-val>-0</emu-val>.</li><li>Return the integral Number closest to <var>n</var>, preferring the Number closer to <emu-val>+&#8734;</emu-val> in the case of a tie.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>Math.round(3.5)</code> returns 4, but <code>Math.round(-3.5)</code> returns -3.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The value of <code>Math.round(x)</code> is not always the same as the value of <code>Math.floor(x + 0.5)</code>. When <code>x</code> is <emu-val>-0</emu-val> or is less than 0 but greater than or equal to -0.5, <code>Math.round(x)</code> returns <emu-val>-0</emu-val>, but <code>Math.floor(x + 0.5)</code> returns <emu-val>+0</emu-val>. <code>Math.round(x)</code> may also differ from the value of <code>Math.floor(x + 0.5)</code>because of internal rounding when computing <code>x + 0.5</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-math.round"], "secData": {"sec-math.round": {"num": "20.3.2.28", "title": "#sec-math.round Math.round ( x )", "html": "<emu-clause id=\"sec-math.round\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.round\">#sec-math.round</span> Math.round ( <var>x</var> )</h1>\n        <p>Returns the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closest to <var>x</var> and is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. If two integers are equally close to <var>x</var>, then the result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that is closer to <emu-val>+&#8734;</emu-val>. If <var>x</var> is already an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <var>x</var>.</p>\n        <p>When the <code>Math.round</code> method is called with argument <var>x</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, <emu-val>+&#8734;</emu-val>, <emu-val>-&#8734;</emu-val>, or an integral Number, return <var>n</var>.</li><li>If <var>n</var> &lt; 0.5 and <var>n</var> &gt; 0, return <emu-val>+0</emu-val>.</li><li>If <var>n</var> &lt; 0 and <var>n</var> &#8805; -0.5, return <emu-val>-0</emu-val>.</li><li>Return the integral Number closest to <var>n</var>, preferring the Number closer to <emu-val>+&#8734;</emu-val> in the case of a tie.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>Math.round(3.5)</code> returns 4, but <code>Math.round(-3.5)</code> returns -3.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The value of <code>Math.round(x)</code> is not always the same as the value of <code>Math.floor(x + 0.5)</code>. When <code>x</code> is <emu-val>-0</emu-val> or is less than 0 but greater than or equal to -0.5, <code>Math.round(x)</code> returns <emu-val>-0</emu-val>, but <code>Math.floor(x + 0.5)</code> returns <emu-val>+0</emu-val>. <code>Math.round(x)</code> may also differ from the value of <code>Math.floor(x + 0.5)</code>because of internal rounding when computing <code>x + 0.5</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}}, "figData": {}}}