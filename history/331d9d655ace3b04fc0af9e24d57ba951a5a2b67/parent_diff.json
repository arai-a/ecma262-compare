{"from": {"secList": ["sec-pattern-semantics", "sec-static-semantics-nonconstructormethoddefinitions", "sec-static-semantics-prototypepropertynamelist", "sec-block-static-semantics-lexicallyscopeddeclarations", "sec-static-semantics-templatestrings", "sec-runtime-semantics-substitutionevaluation", "sec-exports-static-semantics-exportednames", "sec-exports-static-semantics-exportentries", "sec-imports-static-semantics-modulerequests", "sec-static-semantics-referencedbindings", "sec-template-literals-runtime-semantics-argumentlistevaluation", "sec-static-semantics-exportentriesformodule", "sec-decode", "sec-labelled-statements-static-semantics-lexicallyscopeddeclarations", "sec-block-static-semantics-toplevellexicallyscopeddeclarations", "sec-copydatablockbytes", "sec-static-semantics-importentriesformodule", "sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations", "sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations", "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization", "sec-exports-static-semantics-exportedbindings", "sec-runtime-semantics-propertydestructuringassignmentevaluation", "sec-initializers-in-forin-statement-heads", "sec-static-semantics-propertynamelist", "sec-identifiers-static-semantics-boundnames", "sec-argument-lists-runtime-semantics-argumentlistevaluation", "sec-exports-static-semantics-lexicallyscopeddeclarations", "sec-variable-statement-static-semantics-varscopeddeclarations"], "secData": {"sec-pattern-semantics": {"num": "21.2.2", "title": "#sec-pattern-semantics Pattern Semantics", "html": "<emu-clause id=\"sec-pattern-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</span> Pattern Semantics</h1>\n      <p>A regular expression pattern is converted into an <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> using the process described below. An implementation is encouraged to use more efficient algorithms than the ones listed below, as long as the results are the same. The <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> is used as the value of a RegExp object's [[RegExpMatcher]] internal slot.</p>\n      <p>A <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is either a BMP pattern or a Unicode pattern depending upon whether or not its associated flags contain a <code>u</code>. A BMP pattern matches against a String interpreted as consisting of a sequence of 16-bit values that are Unicode code points in the range of the Basic Multilingual Plane. A Unicode pattern matches against a String interpreted as consisting of Unicode code points encoded using UTF-16. In the context of describing the behaviour of a BMP pattern &#8220;character&#8221; means a single 16-bit Unicode BMP code point. In the context of describing the behaviour of a Unicode pattern &#8220;character&#8221; means a UTF-16 encoded code point (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). In either context, &#8220;character value&#8221; means the numeric value of the corresponding non-encoded code point.</p>\n      <p>The syntax and semantics of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is defined as if the source code for the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> was a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values where each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> corresponds to a Unicode code point. If a BMP pattern contains a non-BMP <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> the entire pattern is encoded using UTF-16 and the individual code units of that encoding are used as the elements of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For example, consider a pattern expressed in source text as the single non-BMP character U+1D11E (MUSICAL SYMBOL G CLEF). Interpreted as a Unicode pattern, it would be a single element (character) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the single code point 0x1D11E. However, interpreted as a BMP pattern, it is first UTF-16 encoded to produce a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the code units 0xD834 and 0xDD1E.</p>\n        <p>Patterns are passed to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as ECMAScript String values in which non-BMP characters are UTF-16 encoded. For example, the single character MUSICAL SYMBOL G CLEF pattern, expressed as a String value, is a String of length 2 whose elements were the code units 0xD834 and 0xDD1E. So no further translation of the string would be necessary to process it as a BMP pattern consisting of two pattern characters. However, to process it as a Unicode pattern <emu-xref aoid=\"UTF16SurrogatePairToCodePoint\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16SurrogatePairToCodePoint</a></emu-xref> must be used in producing a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of a single pattern character, the code point U+1D11E.</p>\n        <p>An implementation may not actually perform such translations to or from UTF-16, but the semantics of this specification requires that the result of pattern matching be as if such translations were performed.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-notation\"><h1><span class=\"secnum\">21.2.2.1</span>#sec-notation Notation</h1>...</div><div id=\"excluded-sec-pattern\"><h1><span class=\"secnum\">21.2.2.2</span>#sec-pattern Pattern</h1>...</div><div id=\"excluded-sec-disjunction\"><h1><span class=\"secnum\">21.2.2.3</span>#sec-disjunction Disjunction</h1>...</div><div id=\"excluded-sec-alternative\"><h1><span class=\"secnum\">21.2.2.4</span>#sec-alternative Alternative</h1>...</div><div id=\"excluded-sec-term\"><h1><span class=\"secnum\">21.2.2.5</span>#sec-term Term</h1>...</div><div id=\"excluded-sec-assertion\"><h1><span class=\"secnum\">21.2.2.6</span>#sec-assertion Assertion</h1>...</div><div id=\"excluded-sec-quantifier\"><h1><span class=\"secnum\">21.2.2.7</span>#sec-quantifier Quantifier</h1>...</div><div id=\"excluded-sec-atom\"><h1><span class=\"secnum\">21.2.2.8</span>#sec-atom Atom</h1>...</div><div id=\"excluded-sec-atomescape\"><h1><span class=\"secnum\">21.2.2.9</span>#sec-atomescape AtomEscape</h1>...</div><div id=\"excluded-sec-characterescape\"><h1><span class=\"secnum\">21.2.2.10</span>#sec-characterescape CharacterEscape</h1>...</div><div id=\"excluded-sec-decimalescape\"><h1><span class=\"secnum\">21.2.2.11</span>#sec-decimalescape DecimalEscape</h1>...</div><div id=\"excluded-sec-characterclassescape\"><h1><span class=\"secnum\">21.2.2.12</span>#sec-characterclassescape CharacterClassEscape</h1>...</div><div id=\"excluded-sec-characterclass\"><h1><span class=\"secnum\">21.2.2.13</span>#sec-characterclass CharacterClass</h1>...</div><div id=\"excluded-sec-classranges\"><h1><span class=\"secnum\">21.2.2.14</span>#sec-classranges ClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassranges\"><h1><span class=\"secnum\">21.2.2.15</span>#sec-nonemptyclassranges NonemptyClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassrangesnodash\"><h1><span class=\"secnum\">21.2.2.16</span>#sec-nonemptyclassrangesnodash NonemptyClassRangesNoDash</h1>...</div><div id=\"excluded-sec-classatom\"><h1><span class=\"secnum\">21.2.2.17</span>#sec-classatom ClassAtom</h1>...</div><div id=\"excluded-sec-classatomnodash\"><h1><span class=\"secnum\">21.2.2.18</span>#sec-classatomnodash ClassAtomNoDash</h1>...</div><div id=\"excluded-sec-classescape\"><h1><span class=\"secnum\">21.2.2.19</span>#sec-classescape ClassEscape</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-nonconstructormethoddefinitions": {"num": "14.6.11", "title": "#sec-static-semantics-nonconstructormethoddefinitions Static Semantics: NonConstructorMethodDefinitions", "html": "<emu-clause id=\"sec-static-semantics-nonconstructormethoddefinitions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-nonconstructormethoddefinitions\">#sec-static-semantics-nonconstructormethoddefinitions</span> Static Semantics: NonConstructorMethodDefinitions</h1>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"711bcbba\"><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If ClassElementKind of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>NonConstructorMethod</emu-const>, then<ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt>.</li></ol></li><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9ac50b6a\"><emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>list</var> be NonConstructorMethodDefinitions of <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt>.</li><li>If ClassElementKind of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>NonConstructorMethod</emu-const>, then<ol><li>Append <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> to the end of <var>list</var>.</li></ol></li><li>Return <var>list</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-static-semantics-prototypepropertynamelist": {"num": "14.6.12", "title": "#sec-static-semantics-prototypepropertynamelist Static Semantics: PrototypePropertyNameList", "html": "<emu-clause id=\"sec-static-semantics-prototypepropertynamelist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-prototypepropertynamelist\">#sec-static-semantics-prototypepropertynamelist</span> Static Semantics: PrototypePropertyNameList</h1>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"711bcbba\"><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>empty</emu-const>, return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If IsStatic of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-val>true</emu-val>, return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9ac50b6a\"><emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>list</var> be PrototypePropertyNameList of <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt>.</li><li>If PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>empty</emu-const>, return <var>list</var>.</li><li>If IsStatic of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-val>true</emu-val>, return <var>list</var>.</li><li>Append PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> to the end of <var>list</var>.</li><li>Return <var>list</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-block-static-semantics-lexicallyscopeddeclarations": {"num": "13.2.6", "title": "#sec-block-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-block-static-semantics-lexicallyscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-block-static-semantics-lexicallyscopeddeclarations\">#sec-block-static-semantics-lexicallyscopeddeclarations</span> Static Semantics: LexicallyScopedDeclarations</h1>\n      <emu-see-also-para op=\"LexicallyScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"StatementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0db4597a\"><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>declarations</var> be LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> is <emu-grammar><emu-production name=\"Statement\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08827f68\"><emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> , return LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt>.</li><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d6f37721\"><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing DeclarationPart of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-static-semantics-templatestrings": {"num": "12.2.9.2", "title": "#sec-static-semantics-templatestrings Static Semantics: TemplateStrings", "html": "<emu-clause id=\"sec-static-semantics-templatestrings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-templatestrings\">#sec-static-semantics-templatestrings</span> Static Semantics: TemplateStrings</h1>\n        <p>With parameter <var>raw</var>.</p>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>string</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>head</var> be the TRV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Let <var>tail</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt> with argument <var>raw</var>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>head</var> followed by the elements of <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>middle</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the elements of <var>middle</var> followed by <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the single element, <var>string</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>front</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>last</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>last</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Append <var>last</var> as the last element of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>front</var>.</li><li>Return <var>front</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-substitutionevaluation": {"num": "12.2.9.5", "title": "#sec-runtime-semantics-substitutionevaluation Runtime Semantics: SubstitutionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-substitutionevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-substitutionevaluation\">#sec-runtime-semantics-substitutionevaluation</span> Runtime Semantics: SubstitutionEvaluation</h1>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of SubstitutionEvaluation of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing only <var>sub</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>preceding</var> be ? SubstitutionEvaluation of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li><li>Let <var>nextRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>nextRef</var>).</li><li>Append <var>next</var> as the last element of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>preceding</var>.</li><li>Return <var>preceding</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportednames": {"num": "15.2.3.4", "title": "#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-exports-static-semantics-exportednames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportednames\">#sec-exports-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-see-also-para op=\"ExportedNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedNames of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedNames of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportentries": {"num": "15.2.3.5", "title": "#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries", "html": "<emu-clause id=\"sec-exports-static-semantics-exportentries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportentries\">#sec-exports-static-semantics-exportentries</span> Static Semantics: ExportEntries</h1>\n        <emu-see-also-para op=\"ExportEntries\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>module</var> be the sole element of ModuleRequests of <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>.</li><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> with argument <var>module</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> with argument <emu-val>null</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li><li>For each element <var>name</var> of <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li><li>For each element <var>name</var> of <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <emu-val>\"*default*\"</emu-val>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for anonymous default export values.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-imports-static-semantics-modulerequests": {"num": "15.2.2.5", "title": "#sec-imports-static-semantics-modulerequests Static Semantics: ModuleRequests", "html": "<emu-clause id=\"sec-imports-static-semantics-modulerequests\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports-static-semantics-modulerequests\">#sec-imports-static-semantics-modulerequests</span> Static Semantics: ModuleRequests</h1>\n        <emu-see-also-para op=\"ModuleRequests\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return ModuleRequests of <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-static-semantics-referencedbindings": {"num": "15.2.3.10", "title": "#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings", "html": "<emu-clause id=\"sec-static-semantics-referencedbindings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-referencedbindings\">#sec-static-semantics-referencedbindings</span> Static Semantics: ReferencedBindings</h1>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ReferencedBindings of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ReferencedBindings of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-template-literals-runtime-semantics-argumentlistevaluation": {"num": "12.2.9.3", "title": "#sec-template-literals-runtime-semantics-argumentlistevaluation Runtime Semantics: ArgumentListEvaluation", "html": "<emu-clause id=\"sec-template-literals-runtime-semantics-argumentlistevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-template-literals-runtime-semantics-argumentlistevaluation\">#sec-template-literals-runtime-semantics-argumentlistevaluation</span> Runtime Semantics: ArgumentListEvaluation</h1>\n        <emu-see-also-para op=\"ArgumentListEvaluation\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>templateLiteral</var> be this <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt>.</li><li>Let <var>siteObj</var> be <emu-xref aoid=\"GetTemplateObject\"><a href=\"#sec-gettemplateobject\">GetTemplateObject</a></emu-xref>(<var>templateLiteral</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the one element which is <var>siteObj</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1dab93f5\"><emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>templateLiteral</var> be this <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt>.</li><li>Let <var>siteObj</var> be <emu-xref aoid=\"GetTemplateObject\"><a href=\"#sec-gettemplateobject\">GetTemplateObject</a></emu-xref>(<var>templateLiteral</var>).</li><li>Let <var>remaining</var> be ? ArgumentListEvaluation of <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose first element is <var>siteObj</var> and whose subsequent elements are the elements of <var>remaining</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>firstSubRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>firstSub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>firstSubRef</var>).</li><li>Let <var>restSub</var> be ? SubstitutionEvaluation of <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>restSub</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose first element is <var>firstSub</var> and whose subsequent elements are the elements of <var>restSub</var>. <var>restSub</var> may contain no elements.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-exportentriesformodule": {"num": "15.2.3.6", "title": "#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-exportentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportentriesformodule\">#sec-static-semantics-exportentriesformodule</span> Static Semantics: ExportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <emu-val>null</emu-val> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>sourceName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>exportName</var> be the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-decode": {"num": "18.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> equals <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 is greater than or equal to <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) is greater than or equal to <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the value obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be the String value whose code units are the elements in <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-labelled-statements-static-semantics-lexicallyscopeddeclarations": {"num": "13.13.7", "title": "#sec-labelled-statements-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-labelled-statements-static-semantics-lexicallyscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-labelled-statements-static-semantics-lexicallyscopeddeclarations\">#sec-labelled-statements-static-semantics-lexicallyscopeddeclarations</span> Static Semantics: LexicallyScopedDeclarations</h1>\n      <emu-see-also-para op=\"LexicallyScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"LabelledStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"51b6efb5\"><emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fa7a943c\"><emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-block-static-semantics-toplevellexicallyscopeddeclarations": {"num": "13.2.8", "title": "#sec-block-static-semantics-toplevellexicallyscopeddeclarations Static Semantics: TopLevelLexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-block-static-semantics-toplevellexicallyscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-block-static-semantics-toplevellexicallyscopeddeclarations\">#sec-block-static-semantics-toplevellexicallyscopeddeclarations</span> Static Semantics: TopLevelLexicallyScopedDeclarations</h1>\n      <emu-see-also-para op=\"TopLevelLexicallyScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"Block\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0db4597a\"><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>declarations</var> be TopLevelLexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the TopLevelLexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d6f37721\"><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt> is <emu-grammar><emu-production name=\"Declaration\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"62452cb6\"><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> , then<ol><li>Return &#171; &#187;.</li></ol></li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-copydatablockbytes": {"num": "6.2.8.3", "title": "#sec-copydatablockbytes CopyDataBlockBytes ( toBlock, toIndex, fromBlock, fromIndex, count )", "html": "<emu-clause id=\"sec-copydatablockbytes\" aoid=\"CopyDataBlockBytes\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-copydatablockbytes\">#sec-copydatablockbytes</span> CopyDataBlockBytes ( <var>toBlock</var>, <var>toIndex</var>, <var>fromBlock</var>, <var>fromIndex</var>, <var>count</var> )</h1>\n        <p>The abstract operation CopyDataBlockBytes takes arguments <var>toBlock</var>, <var>toIndex</var>, <var>fromBlock</var>, <var>fromIndex</var>, and <var>count</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromBlock</var> and <var>toBlock</var> are distinct <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Data Block</a></emu-xref> or <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromIndex</var>, <var>toIndex</var>, and <var>count</var> are <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> values &#8805; 0.</li><li>Let <var>fromSize</var> be the number of bytes in <var>fromBlock</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromIndex</var> + <var>count</var> &#8804; <var>fromSize</var>.</li><li>Let <var>toSize</var> be the number of bytes in <var>toBlock</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>toIndex</var> + <var>count</var> &#8804; <var>toSize</var>.</li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>If <var>fromBlock</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>bytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length 1 that contains a nondeterministically chosen <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">byte value</a></emu-xref>.</li><li>NOTE: In implementations, <var>bytes</var> is the result of a non-atomic read instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>readEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> { [[Order]]: <emu-const>Unordered</emu-const>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>fromBlock</var>, [[ByteIndex]]: <var>fromIndex</var>, [[ElementSize]]: 1 }.</li><li>Append <var>readEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>readEvent</var>, [[ChosenValue]]: <var>bytes</var> } to <var>execution</var>.[[ChosenValues]].</li><li>If <var>toBlock</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>, then<ol><li>Append <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> { [[Order]]: <emu-const>Unordered</emu-const>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>toBlock</var>, [[ByteIndex]]: <var>toIndex</var>, [[ElementSize]]: 1, [[Payload]]: <var>bytes</var> } to <var>eventList</var>.</li></ol></li><li>Else,<ol><li>Set <var>toBlock</var>[<var>toIndex</var>] to <var>bytes</var>[0].</li></ol></li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>toBlock</var> is not a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>.</li><li>Set <var>toBlock</var>[<var>toIndex</var>] to <var>fromBlock</var>[<var>fromIndex</var>].</li></ol></li><li>Set <var>toIndex</var> to <var>toIndex</var> + 1.</li><li>Set <var>fromIndex</var> to <var>fromIndex</var> + 1.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-static-semantics-importentriesformodule": {"num": "15.2.2.4", "title": "#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-importentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-importentriesformodule\">#sec-static-semantics-importentriesformodule</span> Static Semantics: ImportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportedDefaultBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>defaultEntry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"default\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>defaultEntry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NameSpaceImport\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>localName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>entry</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations": {"num": "13.13.11", "title": "#sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations Static Semantics: TopLevelVarScopedDeclarations", "html": "<emu-clause id=\"sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations\">#sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations</span> Static Semantics: TopLevelVarScopedDeclarations</h1>\n      <emu-see-also-para op=\"TopLevelVarScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"LabelledStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"51b6efb5\"><emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the TopLevelVarScopedDeclarations of <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> is <emu-grammar><emu-production name=\"Statement\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08827f68\"><emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> , return TopLevelVarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fa7a943c\"><emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations": {"num": "13.7.5.8", "title": "#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations", "html": "<emu-clause id=\"sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\">#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations</span> Static Semantics: VarScopedDeclarations</h1>\n        <emu-see-also-para op=\"VarScopedDeclarations\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bf521b70\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2590ad81\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8ea6608b\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6f7c3304\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9a146e5f\"><emu-t>for</emu-t><emu-t>await</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b80b6675\"><emu-t>for</emu-t><emu-t>await</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ecf18944\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ee6f9a77\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7324ff96\"><emu-t>for</emu-t><emu-t>await</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarations</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This section is extended by Annex <emu-xref href=\"#sec-initializers-in-forin-statement-heads\"><a href=\"#sec-initializers-in-forin-statement-heads\" class=\"excluded-xref\" excluded-id=\"sec-initializers-in-forin-statement-heads\">#sec-initializers-in-forin-statement-heads</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization": {"num": "13.3.3.6", "title": "#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization Runtime Semantics: PropertyBindingInitialization", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\">#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization</span> Runtime Semantics: PropertyBindingInitialization</h1>\n        <p>With parameters <var>value</var> and <var>environment</var>.</p>\n\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">These collect a list of all bound property names rather than just empty completion.</div></emu-note>\n\n        <emu-grammar><emu-production name=\"BindingPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0730de3b\"><emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>boundNames</var> be ? PropertyBindingInitialization of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt> with arguments <var>value</var> and <var>environment</var>.</li><li>Let <var>nextNames</var> be ? PropertyBindingInitialization of <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt> with arguments <var>value</var> and <var>environment</var>.</li><li>Append each item in <var>nextNames</var> to the end of <var>boundNames</var>.</li><li>Return <var>boundNames</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"94e17c00\"><emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>name</var> be the string that is the only element of BoundNames of <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt>.</li><li>Perform ? KeyedBindingInitialization for <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> using <var>value</var>, <var>environment</var>, and <var>name</var> as the arguments.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>name</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"987bd1c2\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>P</var> be the result of evaluating <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>P</var>).</li><li>Perform ? KeyedBindingInitialization of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> with <var>value</var>, <var>environment</var>, and <var>P</var> as the arguments.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>P</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportedbindings": {"num": "15.2.3.3", "title": "#sec-exports-static-semantics-exportedbindings Static Semantics: ExportedBindings", "html": "<emu-clause id=\"sec-exports-static-semantics-exportedbindings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportedbindings\">#sec-exports-static-semantics-exportedbindings</span> Static Semantics: ExportedBindings</h1>\n        <emu-see-also-para op=\"ExportedBindings\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedBindings of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedBindings of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedBindings of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-propertydestructuringassignmentevaluation": {"num": "12.15.7.3", "title": "#sec-runtime-semantics-propertydestructuringassignmentevaluation Runtime Semantics: PropertyDestructuringAssignmentEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-propertydestructuringassignmentevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-propertydestructuringassignmentevaluation\">#sec-runtime-semantics-propertydestructuringassignmentevaluation</span> Runtime Semantics: PropertyDestructuringAssignmentEvaluation</h1>\n        <p>With parameter <var>value</var>.</p>\n\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">The following operations collect a list of all destructured property names.</div></emu-note>\n\n        <emu-grammar><emu-production name=\"AssignmentPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentPropertyList\">AssignmentPropertyList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3680459\"><emu-nt><a href=\"#prod-AssignmentPropertyList\">AssignmentPropertyList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>propertyNames</var> be ? PropertyDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentPropertyList\">AssignmentPropertyList</a></emu-nt> with argument <var>value</var>.</li><li>Let <var>nextNames</var> be ? PropertyDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt> with argument <var>value</var>.</li><li>Append each item in <var>nextNames</var> to the end of <var>propertyNames</var>.</li><li>Return <var>propertyNames</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"AssignmentProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c55f7708\"><emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>P</var> be StringValue of <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.</li><li>Let <var>lref</var> be ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<var>P</var>).</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"GetV\"><a href=\"#sec-getv\">GetV</a></emu-xref>(<var>value</var>, <var>P</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present and <var>v</var> is <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>) is <emu-val>true</emu-val>, then<ol><li>Set <var>v</var> to the result of performing NamedEvaluation for <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> with argument <var>P</var>.</li></ol></li><li>Else,<ol><li>Let <var>defaultValue</var> be the result of evaluating <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</li><li>Set <var>v</var> to ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>defaultValue</var>).</li></ol></li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>v</var>).</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>P</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"AssignmentProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c9ac8882\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>name</var> be the result of evaluating <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>name</var>).</li><li>Perform ? KeyedDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt> with <var>value</var> and <var>name</var> as the arguments.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>name</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-initializers-in-forin-statement-heads": {"num": "B.3.6", "title": "#sec-initializers-in-forin-statement-heads Initializers in ForIn Statement Heads", "html": "<emu-annex id=\"sec-initializers-in-forin-statement-heads\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializers-in-forin-statement-heads\">#sec-initializers-in-forin-statement-heads</span> Initializers in ForIn Statement Heads</h1>\n      <p>The following augments the <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt> production in <emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>:</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"IterationStatement\" params=\"Yield, Await, Return\" id=\"prod-annexB-IterationStatement\">\n    <emu-nt params=\"Yield, Await, Return\"><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a><emu-mods><emu-params>[Yield, Await, Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a2e02ff2\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-nt params=\"~In, ?Yield, ?Await\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[~In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>in</emu-t><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt params=\"?Yield, ?Await, ?Return\"><a href=\"#prod-Statement\">Statement</a><emu-mods><emu-params>[?Yield, ?Await, ?Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>This production only applies when parsing <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of ContainsDuplicateLabels in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels\">#sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ContainsDuplicateLabels of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> with argument <var>labelSet</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of ContainsUndefinedBreakTarget in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget\">#sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> with argument <var>labelSet</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of ContainsUndefinedContinueTarget in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget\">#sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> with arguments <var>iterationSet</var> and &#171; &#187;.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of IsDestructuring in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-isdestructuring\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-isdestructuring\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-isdestructuring\">#sec-for-in-and-for-of-statements-static-semantics-isdestructuring</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" id=\"prod-annexB-BindingIdentifier\">\n    <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06b6ace8\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d1df3360\"><emu-t>yield</emu-t></emu-rhs>\n    <emu-rhs a=\"857d4354\"><emu-t>await</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of VarDeclaredNames in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-vardeclarednames\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-vardeclarednames\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-vardeclarednames\">#sec-for-in-and-for-of-statements-static-semantics-vardeclarednames</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the VarDeclaredNames of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of VarScopedDeclarations in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\">#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>declarations</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-runtime-semantics\"><a href=\"#sec-runtime-semantics\">runtime semantics</a></emu-xref> of LabelledEvaluation in <emu-xref href=\"#sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation\"><a href=\"#sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation\">#sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>bindingId</var> be StringValue of <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Let <var>lhs</var> be ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<var>bindingId</var>).</li><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>) is <emu-val>true</emu-val>, then<ol><li>Let <var>value</var> be NamedEvaluation of <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> with argument <var>bindingId</var>.</li></ol></li><li>Else,<ol><li>Let <var>rhs</var> be the result of evaluating <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rhs</var>).</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>value</var>).</li><li>Let <var>keyResult</var> be ? <emu-xref aoid=\"ForIn/OfHeadEvaluation\"><a href=\"#sec-runtime-semantics-forinofheadevaluation\">ForIn/OfHeadEvaluation</a></emu-xref>(&#171; &#187;, <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>, <emu-const>enumerate</emu-const>).</li><li>Return ? <emu-xref aoid=\"ForIn/OfBodyEvaluation\"><a href=\"#sec-runtime-semantics-forin-div-ofbodyevaluation-lhs-stmt-iterator-lhskind-labelset\">ForIn/OfBodyEvaluation</a></emu-xref>(<emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>, <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>, <var>keyResult</var>, <emu-const>enumerate</emu-const>, <emu-const>varBinding</emu-const>, <var>labelSet</var>).</li></ol></emu-alg>\n    </emu-annex>\n\n    "}, "sec-static-semantics-propertynamelist": {"num": "12.2.6.6", "title": "#sec-static-semantics-propertynamelist Static Semantics: PropertyNameList", "html": "<emu-clause id=\"sec-static-semantics-propertynamelist\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-propertynamelist\">#sec-static-semantics-propertynamelist</span> Static Semantics: PropertyNameList</h1>\n        <emu-grammar><emu-production name=\"PropertyDefinitionList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"671a051b\"><emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt> is <emu-const>empty</emu-const>, return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinitionList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3152d601\"><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>list</var> be PropertyNameList of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt>.</li><li>If PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt> is <emu-const>empty</emu-const>, return <var>list</var>.</li><li>Append PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt> to the end of <var>list</var>.</li><li>Return <var>list</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-identifiers-static-semantics-boundnames": {"num": "12.1.2", "title": "#sec-identifiers-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-identifiers-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-identifiers-static-semantics-boundnames\">#sec-identifiers-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06b6ace8\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the StringValue of <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d1df3360\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-val>\"yield\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"857d4354\"><emu-t>await</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-val>\"await\"</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-argument-lists-runtime-semantics-argumentlistevaluation": {"num": "12.3.8.1", "title": "#sec-argument-lists-runtime-semantics-argumentlistevaluation Runtime Semantics: ArgumentListEvaluation", "html": "<emu-clause id=\"sec-argument-lists-runtime-semantics-argumentlistevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-argument-lists-runtime-semantics-argumentlistevaluation\">#sec-argument-lists-runtime-semantics-argumentlistevaluation</span> Runtime Semantics: ArgumentListEvaluation</h1>\n        <emu-see-also-para op=\"ArgumentListEvaluation\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"Arguments\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Arguments\">Arguments</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"78e44c33\"><emu-t>(</emu-t><emu-t>)</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d4fc7da4\"><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ref</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>arg</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole item is <var>arg</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>list</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>spreadRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>spreadObj</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>spreadRef</var>).</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>spreadObj</var>).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>list</var>.</li><li>Let <var>nextArg</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>Append <var>nextArg</var> as the last element of <var>list</var>.</li></ol></li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7ff23fee\"><emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>precedingArgs</var> be ? ArgumentListEvaluation of <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt>.</li><li>Let <var>ref</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>arg</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Append <var>arg</var> to the end of <var>precedingArgs</var>.</li><li>Return <var>precedingArgs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"678ad0f9\"><emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-t>,</emu-t><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>precedingArgs</var> be ? ArgumentListEvaluation of <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt>.</li><li>Let <var>spreadRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>spreadRef</var>)).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>precedingArgs</var>.</li><li>Let <var>nextArg</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>Append <var>nextArg</var> as the last element of <var>precedingArgs</var>.</li></ol></li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-exports-static-semantics-lexicallyscopeddeclarations": {"num": "15.2.3.8", "title": "#sec-exports-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-exports-static-semantics-lexicallyscopeddeclarations\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-lexicallyscopeddeclarations\">#sec-exports-static-semantics-lexicallyscopeddeclarations</span> Static Semantics: LexicallyScopedDeclarations</h1>\n        <emu-see-also-para op=\"LexicallyScopedDeclarations\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing DeclarationPart of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing DeclarationPart of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-variable-statement-static-semantics-varscopeddeclarations": {"num": "13.3.2.3", "title": "#sec-variable-statement-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations", "html": "<emu-clause id=\"sec-variable-statement-static-semantics-varscopeddeclarations\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-variable-statement-static-semantics-varscopeddeclarations\">#sec-variable-statement-static-semantics-varscopeddeclarations</span> Static Semantics: VarScopedDeclarations</h1>\n        <emu-see-also-para op=\"VarScopedDeclarations\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"VariableDeclarationList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"377a6210\"><emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"VariableDeclarationList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a0057011\"><emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarations</var> be VarScopedDeclarations of <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt>.</li><li>Append <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> to <var>declarations</var>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-utf-8-encodings": "Table 48"}}, "to": {"secList": ["sec-pattern-semantics", "sec-static-semantics-nonconstructormethoddefinitions", "sec-static-semantics-prototypepropertynamelist", "sec-block-static-semantics-lexicallyscopeddeclarations", "sec-static-semantics-templatestrings", "sec-runtime-semantics-substitutionevaluation", "sec-exports-static-semantics-exportednames", "sec-exports-static-semantics-exportentries", "sec-imports-static-semantics-modulerequests", "sec-static-semantics-referencedbindings", "sec-template-literals-runtime-semantics-argumentlistevaluation", "sec-static-semantics-exportentriesformodule", "sec-decode", "sec-labelled-statements-static-semantics-lexicallyscopeddeclarations", "sec-block-static-semantics-toplevellexicallyscopeddeclarations", "sec-copydatablockbytes", "sec-static-semantics-importentriesformodule", "sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations", "sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations", "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization", "sec-exports-static-semantics-exportedbindings", "sec-runtime-semantics-propertydestructuringassignmentevaluation", "sec-initializers-in-forin-statement-heads", "sec-static-semantics-propertynamelist", "sec-identifiers-static-semantics-boundnames", "sec-argument-lists-runtime-semantics-argumentlistevaluation", "sec-exports-static-semantics-lexicallyscopeddeclarations", "sec-variable-statement-static-semantics-varscopeddeclarations"], "secData": {"sec-pattern-semantics": {"num": "21.2.2", "title": "#sec-pattern-semantics Pattern Semantics", "html": "<emu-clause id=\"sec-pattern-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</span> Pattern Semantics</h1>\n      <p>A regular expression pattern is converted into an <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> using the process described below. An implementation is encouraged to use more efficient algorithms than the ones listed below, as long as the results are the same. The <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> is used as the value of a RegExp object's [[RegExpMatcher]] internal slot.</p>\n      <p>A <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is either a BMP pattern or a Unicode pattern depending upon whether or not its associated flags contain a <code>u</code>. A BMP pattern matches against a String interpreted as consisting of a sequence of 16-bit values that are Unicode code points in the range of the Basic Multilingual Plane. A Unicode pattern matches against a String interpreted as consisting of Unicode code points encoded using UTF-16. In the context of describing the behaviour of a BMP pattern &#8220;character&#8221; means a single 16-bit Unicode BMP code point. In the context of describing the behaviour of a Unicode pattern &#8220;character&#8221; means a UTF-16 encoded code point (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). In either context, &#8220;character value&#8221; means the numeric value of the corresponding non-encoded code point.</p>\n      <p>The syntax and semantics of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is defined as if the source code for the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> was a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values where each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> corresponds to a Unicode code point. If a BMP pattern contains a non-BMP <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> the entire pattern is encoded using UTF-16 and the individual code units of that encoding are used as the elements of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For example, consider a pattern expressed in source text as the single non-BMP character U+1D11E (MUSICAL SYMBOL G CLEF). Interpreted as a Unicode pattern, it would be a single element (character) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the single code point 0x1D11E. However, interpreted as a BMP pattern, it is first UTF-16 encoded to produce a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the code units 0xD834 and 0xDD1E.</p>\n        <p>Patterns are passed to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as ECMAScript String values in which non-BMP characters are UTF-16 encoded. For example, the single character MUSICAL SYMBOL G CLEF pattern, expressed as a String value, is a String of length 2 whose elements were the code units 0xD834 and 0xDD1E. So no further translation of the string would be necessary to process it as a BMP pattern consisting of two pattern characters. However, to process it as a Unicode pattern <emu-xref aoid=\"UTF16SurrogatePairToCodePoint\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16SurrogatePairToCodePoint</a></emu-xref> must be used in producing a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is a single pattern character, the code point U+1D11E.</p>\n        <p>An implementation may not actually perform such translations to or from UTF-16, but the semantics of this specification requires that the result of pattern matching be as if such translations were performed.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-notation\"><h1><span class=\"secnum\">21.2.2.1</span>#sec-notation Notation</h1>...</div><div id=\"excluded-sec-pattern\"><h1><span class=\"secnum\">21.2.2.2</span>#sec-pattern Pattern</h1>...</div><div id=\"excluded-sec-disjunction\"><h1><span class=\"secnum\">21.2.2.3</span>#sec-disjunction Disjunction</h1>...</div><div id=\"excluded-sec-alternative\"><h1><span class=\"secnum\">21.2.2.4</span>#sec-alternative Alternative</h1>...</div><div id=\"excluded-sec-term\"><h1><span class=\"secnum\">21.2.2.5</span>#sec-term Term</h1>...</div><div id=\"excluded-sec-assertion\"><h1><span class=\"secnum\">21.2.2.6</span>#sec-assertion Assertion</h1>...</div><div id=\"excluded-sec-quantifier\"><h1><span class=\"secnum\">21.2.2.7</span>#sec-quantifier Quantifier</h1>...</div><div id=\"excluded-sec-atom\"><h1><span class=\"secnum\">21.2.2.8</span>#sec-atom Atom</h1>...</div><div id=\"excluded-sec-atomescape\"><h1><span class=\"secnum\">21.2.2.9</span>#sec-atomescape AtomEscape</h1>...</div><div id=\"excluded-sec-characterescape\"><h1><span class=\"secnum\">21.2.2.10</span>#sec-characterescape CharacterEscape</h1>...</div><div id=\"excluded-sec-decimalescape\"><h1><span class=\"secnum\">21.2.2.11</span>#sec-decimalescape DecimalEscape</h1>...</div><div id=\"excluded-sec-characterclassescape\"><h1><span class=\"secnum\">21.2.2.12</span>#sec-characterclassescape CharacterClassEscape</h1>...</div><div id=\"excluded-sec-characterclass\"><h1><span class=\"secnum\">21.2.2.13</span>#sec-characterclass CharacterClass</h1>...</div><div id=\"excluded-sec-classranges\"><h1><span class=\"secnum\">21.2.2.14</span>#sec-classranges ClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassranges\"><h1><span class=\"secnum\">21.2.2.15</span>#sec-nonemptyclassranges NonemptyClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassrangesnodash\"><h1><span class=\"secnum\">21.2.2.16</span>#sec-nonemptyclassrangesnodash NonemptyClassRangesNoDash</h1>...</div><div id=\"excluded-sec-classatom\"><h1><span class=\"secnum\">21.2.2.17</span>#sec-classatom ClassAtom</h1>...</div><div id=\"excluded-sec-classatomnodash\"><h1><span class=\"secnum\">21.2.2.18</span>#sec-classatomnodash ClassAtomNoDash</h1>...</div><div id=\"excluded-sec-classescape\"><h1><span class=\"secnum\">21.2.2.19</span>#sec-classescape ClassEscape</h1>...</div></emu-clause>\n\n    "}, "sec-static-semantics-nonconstructormethoddefinitions": {"num": "14.6.11", "title": "#sec-static-semantics-nonconstructormethoddefinitions Static Semantics: NonConstructorMethodDefinitions", "html": "<emu-clause id=\"sec-static-semantics-nonconstructormethoddefinitions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-nonconstructormethoddefinitions\">#sec-static-semantics-nonconstructormethoddefinitions</span> Static Semantics: NonConstructorMethodDefinitions</h1>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"711bcbba\"><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If ClassElementKind of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>NonConstructorMethod</emu-const>, then<ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt>.</li></ol></li><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9ac50b6a\"><emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>list</var> be NonConstructorMethodDefinitions of <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt>.</li><li>If ClassElementKind of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>NonConstructorMethod</emu-const>, then<ol><li>Append <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> to the end of <var>list</var>.</li></ol></li><li>Return <var>list</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-static-semantics-prototypepropertynamelist": {"num": "14.6.12", "title": "#sec-static-semantics-prototypepropertynamelist Static Semantics: PrototypePropertyNameList", "html": "<emu-clause id=\"sec-static-semantics-prototypepropertynamelist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-prototypepropertynamelist\">#sec-static-semantics-prototypepropertynamelist</span> Static Semantics: PrototypePropertyNameList</h1>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"711bcbba\"><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>empty</emu-const>, return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>If IsStatic of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-val>true</emu-val>, return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ClassElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9ac50b6a\"><emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt><emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>list</var> be PrototypePropertyNameList of <emu-nt><a href=\"#prod-ClassElementList\">ClassElementList</a></emu-nt>.</li><li>If PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-const>empty</emu-const>, return <var>list</var>.</li><li>If IsStatic of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> is <emu-val>true</emu-val>, return <var>list</var>.</li><li>Append PropName of <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt> to the end of <var>list</var>.</li><li>Return <var>list</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-block-static-semantics-lexicallyscopeddeclarations": {"num": "13.2.6", "title": "#sec-block-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-block-static-semantics-lexicallyscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-block-static-semantics-lexicallyscopeddeclarations\">#sec-block-static-semantics-lexicallyscopeddeclarations</span> Static Semantics: LexicallyScopedDeclarations</h1>\n      <emu-see-also-para op=\"LexicallyScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"StatementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0db4597a\"><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>declarations</var> be LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> is <emu-grammar><emu-production name=\"Statement\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08827f68\"><emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> , return LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt>.</li><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d6f37721\"><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is DeclarationPart of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-static-semantics-templatestrings": {"num": "12.2.9.2", "title": "#sec-static-semantics-templatestrings Static Semantics: TemplateStrings", "html": "<emu-clause id=\"sec-static-semantics-templatestrings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-templatestrings\">#sec-static-semantics-templatestrings</span> Static Semantics: TemplateStrings</h1>\n        <p>With parameter <var>raw</var>.</p>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>string</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>head</var> be the TV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>head</var> be the TRV of <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt>.</li></ol></li><li>Let <var>tail</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt> with argument <var>raw</var>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing <var>head</var> followed by the elements of <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>middle</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>tail</var> be the TV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>tail</var> be the TRV of <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the elements of <var>middle</var> followed by <var>tail</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>string</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>string</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>string</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>front</var> be TemplateStrings of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt> with argument <var>raw</var>.</li><li>If <var>raw</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>last</var> be the TV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Else,<ol><li>Let <var>last</var> be the TRV of <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt>.</li></ol></li><li>Append <var>last</var> as the last element of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>front</var>.</li><li>Return <var>front</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-substitutionevaluation": {"num": "12.2.9.5", "title": "#sec-runtime-semantics-substitutionevaluation Runtime Semantics: SubstitutionEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-substitutionevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-substitutionevaluation\">#sec-runtime-semantics-substitutionevaluation</span> Runtime Semantics: SubstitutionEvaluation</h1>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateSpans\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b0b4f425\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of SubstitutionEvaluation of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"dc7ec961\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>subRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>sub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>subRef</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>sub</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateMiddleList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"47acf041\"><emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>preceding</var> be ? SubstitutionEvaluation of <emu-nt><a href=\"#prod-TemplateMiddleList\">TemplateMiddleList</a></emu-nt>.</li><li>Let <var>nextRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>nextRef</var>).</li><li>Append <var>next</var> as the last element of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>preceding</var>.</li><li>Return <var>preceding</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportednames": {"num": "15.2.3.4", "title": "#sec-exports-static-semantics-exportednames Static Semantics: ExportedNames", "html": "<emu-clause id=\"sec-exports-static-semantics-exportednames\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportednames\">#sec-exports-static-semantics-exportednames</span> Static Semantics: ExportedNames</h1>\n        <emu-see-also-para op=\"ExportedNames\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedNames of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return &#171; <emu-val>\"default\"</emu-val> &#187;.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedNames of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedNames of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportentries": {"num": "15.2.3.5", "title": "#sec-exports-static-semantics-exportentries Static Semantics: ExportEntries", "html": "<emu-clause id=\"sec-exports-static-semantics-exportentries\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportentries\">#sec-exports-static-semantics-exportentries</span> Static Semantics: ExportEntries</h1>\n        <emu-see-also-para op=\"ExportEntries\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>module</var> be the sole element of ModuleRequests of <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>.</li><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt> with argument <var>module</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return ExportEntriesForModule of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt> with argument <emu-val>null</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li><li>For each element <var>name</var> of <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li><li>For each element <var>name</var> of <var>names</var>, do<ol><li>Append the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>name</var>, [[ExportName]]: <var>name</var> } to <var>entries</var>.</li></ol></li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li><li>Let <var>localName</var> be the sole element of <var>names</var>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <emu-val>null</emu-val>, [[ImportName]]: <emu-val>null</emu-val>, [[LocalName]]: <emu-val>\"*default*\"</emu-val>, [[ExportName]]: <emu-val>\"default\"</emu-val> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-val>\"*default*\"</emu-val> is used within this specification as a synthetic name for anonymous default export values.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-imports-static-semantics-modulerequests": {"num": "15.2.2.5", "title": "#sec-imports-static-semantics-modulerequests Static Semantics: ModuleRequests", "html": "<emu-clause id=\"sec-imports-static-semantics-modulerequests\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-imports-static-semantics-modulerequests\">#sec-imports-static-semantics-modulerequests</span> Static Semantics: ModuleRequests</h1>\n        <emu-see-also-para op=\"ModuleRequests\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ImportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return ModuleRequests of <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ModuleSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-static-semantics-referencedbindings": {"num": "15.2.3.10", "title": "#sec-static-semantics-referencedbindings Static Semantics: ReferencedBindings", "html": "<emu-clause id=\"sec-static-semantics-referencedbindings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-referencedbindings\">#sec-static-semantics-referencedbindings</span> Static Semantics: ReferencedBindings</h1>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ReferencedBindings of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ReferencedBindings of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-template-literals-runtime-semantics-argumentlistevaluation": {"num": "12.2.9.3", "title": "#sec-template-literals-runtime-semantics-argumentlistevaluation Runtime Semantics: ArgumentListEvaluation", "html": "<emu-clause id=\"sec-template-literals-runtime-semantics-argumentlistevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-template-literals-runtime-semantics-argumentlistevaluation\">#sec-template-literals-runtime-semantics-argumentlistevaluation</span> Runtime Semantics: ArgumentListEvaluation</h1>\n        <emu-see-also-para op=\"ArgumentListEvaluation\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>templateLiteral</var> be this <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt>.</li><li>Let <var>siteObj</var> be <emu-xref aoid=\"GetTemplateObject\"><a href=\"#sec-gettemplateobject\">GetTemplateObject</a></emu-xref>(<var>templateLiteral</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>siteObj</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"TemplateLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1dab93f5\"><emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>templateLiteral</var> be this <emu-nt><a href=\"#prod-TemplateLiteral\">TemplateLiteral</a></emu-nt>.</li><li>Let <var>siteObj</var> be <emu-xref aoid=\"GetTemplateObject\"><a href=\"#sec-gettemplateobject\">GetTemplateObject</a></emu-xref>(<var>templateLiteral</var>).</li><li>Let <var>remaining</var> be ? ArgumentListEvaluation of <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose first element is <var>siteObj</var> and whose subsequent elements are the elements of <var>remaining</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SubstitutionTemplate\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SubstitutionTemplate\">SubstitutionTemplate</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"be95cc40\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>firstSubRef</var> be the result of evaluating <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</li><li>Let <var>firstSub</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>firstSubRef</var>).</li><li>Let <var>restSub</var> be ? SubstitutionEvaluation of <emu-nt><a href=\"#prod-TemplateSpans\">TemplateSpans</a></emu-nt>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>restSub</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose first element is <var>firstSub</var> and whose subsequent elements are the elements of <var>restSub</var>. <var>restSub</var> may contain no elements.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-static-semantics-exportentriesformodule": {"num": "15.2.3.6", "title": "#sec-static-semantics-exportentriesformodule Static Semantics: ExportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-exportentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-exportentriesformodule\">#sec-static-semantics-exportentriesformodule</span> Static Semantics: ExportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <emu-val>null</emu-val> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportFromClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exportName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <emu-val>null</emu-val>, [[ExportName]]: <var>exportName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ExportEntriesForModule of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>sourceName</var> }.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>sourceName</var> be the StringValue of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>exportName</var> be the StringValue of the second <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>If <var>module</var> is <emu-val>null</emu-val>, then<ol><li>Let <var>localName</var> be <var>sourceName</var>.</li><li>Let <var>importName</var> be <emu-val>null</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>localName</var> be <emu-val>null</emu-val>.</li><li>Let <var>importName</var> be <var>sourceName</var>.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var>, [[ExportName]]: <var>exportName</var> }.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-decode": {"num": "18.2.6.1.2", "title": "#sec-decode Decode ( string, reservedSet )", "html": "<emu-clause id=\"sec-decode\" aoid=\"Decode\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-decode\">#sec-decode</span> Decode ( <var>string</var>, <var>reservedSet</var> )</h1>\n          <p>The abstract operation Decode takes arguments <var>string</var> (a String) and <var>reservedSet</var> (a String). It performs URI unescaping and decoding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>strLen</var> be the length of <var>string</var>.</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat,<ol><li>If <var>k</var> equals <var>strLen</var>, return <var>R</var>.</li><li>Let <var>C</var> be the code unit at index <var>k</var> within <var>string</var>.</li><li>If <var>C</var> is not the code unit 0x0025 (PERCENT SIGN), then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>start</var> be <var>k</var>.</li><li>If <var>k</var> + 2 is greater than or equal to <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Let <var>n</var> be the number of leading 1 bits in <var>B</var>.</li><li>If <var>n</var> = 0, then<ol><li>Let <var>C</var> be the code unit whose value is <var>B</var>.</li><li>If <var>C</var> is not in <var>reservedSet</var>, then<ol><li>Let <var>S</var> be the String value containing only the code unit <var>C</var>.</li></ol></li><li>Else,<ol><li>Let <var>S</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>string</var> from <var>start</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>If <var>n</var> = 1 or <var>n</var> &gt; 4, throw a <emu-val>URIError</emu-val> exception.</li><li>If <var>k</var> + (3 &#215; (<var>n</var> - 1)) is greater than or equal to <var>strLen</var>, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>Octets</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>B</var>.</li><li>Let <var>j</var> be 1.</li><li>Repeat, while <var>j</var> &lt; <var>n</var>,<ol><li>Set <var>k</var> to <var>k</var> + 1.</li><li>If the code unit at index <var>k</var> within <var>string</var> is not the code unit 0x0025 (PERCENT SIGN), throw a <emu-val>URIError</emu-val> exception.</li><li>If the code units at index (<var>k</var> + 1) and (<var>k</var> + 2) within <var>string</var> do not represent hexadecimal digits, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>B</var> be the 8-bit value represented by the two hexadecimal digits at index (<var>k</var> + 1) and (<var>k</var> + 2).</li><li>Set <var>k</var> to <var>k</var> + 2.</li><li>Append <var>B</var> to <var>Octets</var>.</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The length of <var>Octets</var> is <var>n</var>.</li><li>If <var>Octets</var> does not contain a valid UTF-8 encoding of a Unicode code point, throw a <emu-val>URIError</emu-val> exception.</li><li>Let <var>V</var> be the value obtained by applying the UTF-8 transformation to <var>Octets</var>, that is, from a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of octets into a 21-bit value.</li><li>Let <var>S</var> be the String value whose code units are the elements in <emu-xref aoid=\"CodePointToUTF16CodeUnits\"><a href=\"#sec-codepointtoutf16codeunits\">CodePointToUTF16CodeUnits</a></emu-xref>(<var>V</var>).</li></ol></li></ol></li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>This syntax of Uniform Resource Identifiers is based upon RFC 2396 and does not reflect the more recent RFC 3986 which replaces RFC 2396. A formal description and implementation of UTF-8 is given in RFC 3629.</p>\n            <p>In UTF-8, characters are encoded using sequences of 1 to 6 octets. The only octet of a sequence of one has the higher-order bit set to 0, the remaining 7 bits being used to encode the character value. In a sequence of n octets, n &gt; 1, the initial octet has the n higher-order bits set to 1, followed by a bit set to 0. The remaining bits of that octet contain bits from the value of the character to be encoded. The following octets all have the higher-order bit set to 1 and the following bit set to 0, leaving 6 bits in each to contain bits from the character to be encoded. The possible UTF-8 encodings of ECMAScript characters are specified in <emu-xref href=\"#table-utf-8-encodings\"><a href=\"#table-utf-8-encodings\" class=\"excluded-xref\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</a></emu-xref>.</p>\n            <emu-table id=\"table-utf-8-encodings\" caption=\"UTF-8 Encodings\" informative=\"\" oldids=\"table-43\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-utf-8-encodings\">#table-utf-8-encodings</span> (Informative): UTF-8 Encodings</figcaption><span id=\"table-43\"></span>\n              <table>\n                <tbody>\n                <tr>\n                  <th>\n                    Code Unit Value\n                  </th>\n                  <th>\n                    Representation\n                  </th>\n                  <th>\n                    1<sup>st</sup> Octet\n                  </th>\n                  <th>\n                    2<sup>nd</sup> Octet\n                  </th>\n                  <th>\n                    3<sup>rd</sup> Octet\n                  </th>\n                  <th>\n                    4<sup>th</sup> Octet\n                  </th>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0000 - 0x007F</code>\n                  </td>\n                  <td>\n                    <code>00000000 0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>0<i>zzzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0080 - 0x07FF</code>\n                  </td>\n                  <td>\n                    <code>00000<i>yyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>110<i>yyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0x0800 - 0xD7FF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    <code>110110<i>vv vvwwwwxx</i></code>\n                    <br>\n                    followed by\n                    <br>\n                    <code>110111<i>yy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>11110<i>uuu</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>uuwwww</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>xxyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xD800 - 0xDBFF</code>\n                    <br>\n                    not followed by\n                    <br>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xDC00 - 0xDFFF</code>\n                  </td>\n                  <td>\n                    causes <code>URIError</code>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>0xE000 - 0xFFFF</code>\n                  </td>\n                  <td>\n                    <code><i>xxxxyyyy yyzzzzzz</i></code>\n                  </td>\n                  <td>\n                    <code>1110<i>xxxx</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>yyyyyy</i></code>\n                  </td>\n                  <td>\n                    <code>10<i>zzzzzz</i></code>\n                  </td>\n                  <td>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </figure></emu-table>\n            <p>Where\n              <br>\n                <var>uuuuu</var> = <var>vvvv</var> + 1\n              <br>\n              to account for the addition of 0x10000 as in section 3.8 of the Unicode Standard (Surrogates).</p>\n            <p>The above transformation combines each <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> (for which code unit values in the inclusive range 0xD800 to 0xDFFF are reserved) into a UTF-32 representation and encodes the resulting 21-bit value into UTF-8. Decoding reconstructs the <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>.</p>\n            <p>RFC 3629 prohibits the decoding of invalid UTF-8 octet sequences. For example, the invalid sequence C0 80 must not decode into the code unit 0x0000. Implementations of the Decode algorithm are required to throw a <emu-val>URIError</emu-val> when encountering such invalid sequences.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-labelled-statements-static-semantics-lexicallyscopeddeclarations": {"num": "13.13.7", "title": "#sec-labelled-statements-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-labelled-statements-static-semantics-lexicallyscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-labelled-statements-static-semantics-lexicallyscopeddeclarations\">#sec-labelled-statements-static-semantics-lexicallyscopeddeclarations</span> Static Semantics: LexicallyScopedDeclarations</h1>\n      <emu-see-also-para op=\"LexicallyScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"LabelledStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"51b6efb5\"><emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the LexicallyScopedDeclarations of <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fa7a943c\"><emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-block-static-semantics-toplevellexicallyscopeddeclarations": {"num": "13.2.8", "title": "#sec-block-static-semantics-toplevellexicallyscopeddeclarations Static Semantics: TopLevelLexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-block-static-semantics-toplevellexicallyscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-block-static-semantics-toplevellexicallyscopeddeclarations\">#sec-block-static-semantics-toplevellexicallyscopeddeclarations</span> Static Semantics: TopLevelLexicallyScopedDeclarations</h1>\n      <emu-see-also-para op=\"TopLevelLexicallyScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"Block\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0db4597a\"><emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt><emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>declarations</var> be TopLevelLexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the TopLevelLexicallyScopedDeclarations of <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"StatementListItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d6f37721\"><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt> is <emu-grammar><emu-production name=\"Declaration\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"62452cb6\"><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> , then<ol><li>Return &#171; &#187;.</li></ol></li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-copydatablockbytes": {"num": "6.2.8.3", "title": "#sec-copydatablockbytes CopyDataBlockBytes ( toBlock, toIndex, fromBlock, fromIndex, count )", "html": "<emu-clause id=\"sec-copydatablockbytes\" aoid=\"CopyDataBlockBytes\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-copydatablockbytes\">#sec-copydatablockbytes</span> CopyDataBlockBytes ( <var>toBlock</var>, <var>toIndex</var>, <var>fromBlock</var>, <var>fromIndex</var>, <var>count</var> )</h1>\n        <p>The abstract operation CopyDataBlockBytes takes arguments <var>toBlock</var>, <var>toIndex</var>, <var>fromBlock</var>, <var>fromIndex</var>, and <var>count</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromBlock</var> and <var>toBlock</var> are distinct <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Data Block</a></emu-xref> or <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromIndex</var>, <var>toIndex</var>, and <var>count</var> are <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> values &#8805; 0.</li><li>Let <var>fromSize</var> be the number of bytes in <var>fromBlock</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromIndex</var> + <var>count</var> &#8804; <var>fromSize</var>.</li><li>Let <var>toSize</var> be the number of bytes in <var>toBlock</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>toIndex</var> + <var>count</var> &#8804; <var>toSize</var>.</li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>If <var>fromBlock</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>bytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is a nondeterministically chosen <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">byte value</a></emu-xref>.</li><li>NOTE: In implementations, <var>bytes</var> is the result of a non-atomic read instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>readEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> { [[Order]]: <emu-const>Unordered</emu-const>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>fromBlock</var>, [[ByteIndex]]: <var>fromIndex</var>, [[ElementSize]]: 1 }.</li><li>Append <var>readEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>readEvent</var>, [[ChosenValue]]: <var>bytes</var> } to <var>execution</var>.[[ChosenValues]].</li><li>If <var>toBlock</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>, then<ol><li>Append <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> { [[Order]]: <emu-const>Unordered</emu-const>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>toBlock</var>, [[ByteIndex]]: <var>toIndex</var>, [[ElementSize]]: 1, [[Payload]]: <var>bytes</var> } to <var>eventList</var>.</li></ol></li><li>Else,<ol><li>Set <var>toBlock</var>[<var>toIndex</var>] to <var>bytes</var>[0].</li></ol></li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>toBlock</var> is not a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>.</li><li>Set <var>toBlock</var>[<var>toIndex</var>] to <var>fromBlock</var>[<var>fromIndex</var>].</li></ol></li><li>Set <var>toIndex</var> to <var>toIndex</var> + 1.</li><li>Set <var>fromIndex</var> to <var>fromIndex</var> + 1.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-static-semantics-importentriesformodule": {"num": "15.2.2.4", "title": "#sec-static-semantics-importentriesformodule Static Semantics: ImportEntriesForModule", "html": "<emu-clause id=\"sec-static-semantics-importentriesformodule\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-importentriesformodule\">#sec-static-semantics-importentriesformodule</span> Static Semantics: ImportEntriesForModule</h1>\n        <p>With parameter <var>module</var>.</p>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportClause\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>entries</var> be ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>entries</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>entries</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportedDefaultBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>defaultEntry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"default\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>defaultEntry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NameSpaceImport\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <emu-val>\"*\"</emu-val>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedImports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>specs</var> be the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt> with argument <var>module</var>.</li><li>Append to <var>specs</var> the elements of the ImportEntriesForModule of <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt> with argument <var>module</var>.</li><li>Return <var>specs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>localName</var> be the sole element of BoundNames of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>localName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ImportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>importName</var> be the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li><li>Let <var>localName</var> be the StringValue of <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt>.</li><li>Let <var>entry</var> be the <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> { [[ModuleRequest]]: <var>module</var>, [[ImportName]]: <var>importName</var>, [[LocalName]]: <var>localName</var> }.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>entry</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations": {"num": "13.13.11", "title": "#sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations Static Semantics: TopLevelVarScopedDeclarations", "html": "<emu-clause id=\"sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations\">#sec-labelled-statements-static-semantics-toplevelvarscopeddeclarations</span> Static Semantics: TopLevelVarScopedDeclarations</h1>\n      <emu-see-also-para op=\"TopLevelVarScopedDeclarations\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"LabelledStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"51b6efb5\"><emu-nt><a href=\"#prod-LabelIdentifier\">LabelIdentifier</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return the TopLevelVarScopedDeclarations of <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a72ca256\"><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> is <emu-grammar><emu-production name=\"Statement\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08827f68\"><emu-nt><a href=\"#prod-LabelledStatement\">LabelledStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> , return TopLevelVarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"LabelledItem\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LabelledItem\">LabelledItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fa7a943c\"><emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations": {"num": "13.7.5.8", "title": "#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations", "html": "<emu-clause id=\"sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\">#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations</span> Static Semantics: VarScopedDeclarations</h1>\n        <emu-see-also-para op=\"VarScopedDeclarations\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bf521b70\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2590ad81\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8ea6608b\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6f7c3304\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9a146e5f\"><emu-t>for</emu-t><emu-t>await</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b80b6675\"><emu-t>for</emu-t><emu-t>await</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"IterationStatement\">\n    <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ecf18944\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ee6f9a77\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7324ff96\"><emu-t>for</emu-t><emu-t>await</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt><emu-t>of</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarations</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This section is extended by Annex <emu-xref href=\"#sec-initializers-in-forin-statement-heads\"><a href=\"#sec-initializers-in-forin-statement-heads\" class=\"excluded-xref\" excluded-id=\"sec-initializers-in-forin-statement-heads\">#sec-initializers-in-forin-statement-heads</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization": {"num": "13.3.3.6", "title": "#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization Runtime Semantics: PropertyBindingInitialization", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\">#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization</span> Runtime Semantics: PropertyBindingInitialization</h1>\n        <p>With parameters <var>value</var> and <var>environment</var>.</p>\n\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">These collect a list of all bound property names rather than just empty completion.</div></emu-note>\n\n        <emu-grammar><emu-production name=\"BindingPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0730de3b\"><emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>boundNames</var> be ? PropertyBindingInitialization of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt> with arguments <var>value</var> and <var>environment</var>.</li><li>Let <var>nextNames</var> be ? PropertyBindingInitialization of <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt> with arguments <var>value</var> and <var>environment</var>.</li><li>Append each item in <var>nextNames</var> to the end of <var>boundNames</var>.</li><li>Return <var>boundNames</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"94e17c00\"><emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>name</var> be the string that is the only element of BoundNames of <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt>.</li><li>Perform ? KeyedBindingInitialization for <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> using <var>value</var>, <var>environment</var>, and <var>name</var> as the arguments.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>name</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"987bd1c2\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>P</var> be the result of evaluating <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>P</var>).</li><li>Perform ? KeyedBindingInitialization of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> with <var>value</var>, <var>environment</var>, and <var>P</var> as the arguments.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>P</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exports-static-semantics-exportedbindings": {"num": "15.2.3.3", "title": "#sec-exports-static-semantics-exportedbindings Static Semantics: ExportedBindings", "html": "<emu-clause id=\"sec-exports-static-semantics-exportedbindings\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-exportedbindings\">#sec-exports-static-semantics-exportedbindings</span> Static Semantics: ExportedBindings</h1>\n        <emu-see-also-para op=\"ExportedBindings\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the ExportedBindings of <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the BoundNames of this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"NamedExports\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportsList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>names</var> be the ExportedBindings of <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the ExportedBindings of <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportSpecifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of the first <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-propertydestructuringassignmentevaluation": {"num": "12.15.7.3", "title": "#sec-runtime-semantics-propertydestructuringassignmentevaluation Runtime Semantics: PropertyDestructuringAssignmentEvaluation", "html": "<emu-clause id=\"sec-runtime-semantics-propertydestructuringassignmentevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-propertydestructuringassignmentevaluation\">#sec-runtime-semantics-propertydestructuringassignmentevaluation</span> Runtime Semantics: PropertyDestructuringAssignmentEvaluation</h1>\n        <p>With parameter <var>value</var>.</p>\n\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">The following operations collect a list of all destructured property names.</div></emu-note>\n\n        <emu-grammar><emu-production name=\"AssignmentPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentPropertyList\">AssignmentPropertyList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3680459\"><emu-nt><a href=\"#prod-AssignmentPropertyList\">AssignmentPropertyList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>propertyNames</var> be ? PropertyDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentPropertyList\">AssignmentPropertyList</a></emu-nt> with argument <var>value</var>.</li><li>Let <var>nextNames</var> be ? PropertyDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt> with argument <var>value</var>.</li><li>Append each item in <var>nextNames</var> to the end of <var>propertyNames</var>.</li><li>Return <var>propertyNames</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"AssignmentProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c55f7708\"><emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>P</var> be StringValue of <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.</li><li>Let <var>lref</var> be ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<var>P</var>).</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"GetV\"><a href=\"#sec-getv\">GetV</a></emu-xref>(<var>value</var>, <var>P</var>).</li><li>If <emu-nt optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt> is present and <var>v</var> is <emu-val>undefined</emu-val>, then<ol><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>) is <emu-val>true</emu-val>, then<ol><li>Set <var>v</var> to the result of performing NamedEvaluation for <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> with argument <var>P</var>.</li></ol></li><li>Else,<ol><li>Let <var>defaultValue</var> be the result of evaluating <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</li><li>Set <var>v</var> to ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>defaultValue</var>).</li></ol></li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lref</var>, <var>v</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>P</var>.</li></ol></emu-alg>\n\n        <emu-grammar><emu-production name=\"AssignmentProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AssignmentProperty\">AssignmentProperty</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c9ac8882\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>name</var> be the result of evaluating <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>name</var>).</li><li>Perform ? KeyedDestructuringAssignmentEvaluation of <emu-nt><a href=\"#prod-AssignmentElement\">AssignmentElement</a></emu-nt> with <var>value</var> and <var>name</var> as the arguments.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>name</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-initializers-in-forin-statement-heads": {"num": "B.3.6", "title": "#sec-initializers-in-forin-statement-heads Initializers in ForIn Statement Heads", "html": "<emu-annex id=\"sec-initializers-in-forin-statement-heads\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializers-in-forin-statement-heads\">#sec-initializers-in-forin-statement-heads</span> Initializers in ForIn Statement Heads</h1>\n      <p>The following augments the <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt> production in <emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>:</p>\n      <emu-grammar type=\"definition\"><emu-production name=\"IterationStatement\" params=\"Yield, Await, Return\" id=\"prod-annexB-IterationStatement\">\n    <emu-nt params=\"Yield, Await, Return\"><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a><emu-mods><emu-params>[Yield, Await, Return]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a2e02ff2\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-nt params=\"~In, ?Yield, ?Await\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[~In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>in</emu-t><emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-Expression\">Expression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt params=\"?Yield, ?Await, ?Return\"><a href=\"#prod-Statement\">Statement</a><emu-mods><emu-params>[?Yield, ?Await, ?Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <p>This production only applies when parsing <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of ContainsDuplicateLabels in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels\">#sec-for-in-and-for-of-statements-static-semantics-containsduplicatelabels</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ContainsDuplicateLabels of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> with argument <var>labelSet</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of ContainsUndefinedBreakTarget in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget\">#sec-for-in-and-for-of-statements-static-semantics-containsundefinedbreaktarget</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> with argument <var>labelSet</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of ContainsUndefinedContinueTarget in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget\">#sec-for-in-and-for-of-statements-static-semantics-containsundefinedcontinuetarget</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> with arguments <var>iterationSet</var> and &#171; &#187;.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of IsDestructuring in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-isdestructuring\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-isdestructuring\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-isdestructuring\">#sec-for-in-and-for-of-statements-static-semantics-isdestructuring</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" id=\"prod-annexB-BindingIdentifier\">\n    <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06b6ace8\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d1df3360\"><emu-t>yield</emu-t></emu-rhs>\n    <emu-rhs a=\"857d4354\"><emu-t>await</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of VarDeclaredNames in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-vardeclarednames\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-vardeclarednames\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-vardeclarednames\">#sec-for-in-and-for-of-statements-static-semantics-vardeclarednames</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>names</var> be the BoundNames of <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Append to <var>names</var> the elements of the VarDeclaredNames of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return <var>names</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> of VarScopedDeclarations in <emu-xref href=\"#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\"><a href=\"#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations\">#sec-for-in-and-for-of-statements-static-semantics-varscopeddeclarations</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>declarations</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Append to <var>declarations</var> the elements of the VarScopedDeclarations of <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      <p>The <emu-xref href=\"#sec-runtime-semantics\"><a href=\"#sec-runtime-semantics\">runtime semantics</a></emu-xref> of LabelledEvaluation in <emu-xref href=\"#sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation\"><a href=\"#sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation\" class=\"excluded-xref\" excluded-id=\"sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation\">#sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation</a></emu-xref> are augmented with the following:</p>\n      <emu-grammar><emu-production name=\"IterationStatement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-IterationStatement\">IterationStatement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b97d96ca\"><emu-t>for</emu-t><emu-t>(</emu-t><emu-t>var</emu-t><emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt><emu-t>in</emu-t><emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt><emu-t>)</emu-t><emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>bindingId</var> be StringValue of <emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Let <var>lhs</var> be ?&#160;<emu-xref aoid=\"ResolveBinding\"><a href=\"#sec-resolvebinding\">ResolveBinding</a></emu-xref>(<var>bindingId</var>).</li><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>) is <emu-val>true</emu-val>, then<ol><li>Let <var>value</var> be NamedEvaluation of <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> with argument <var>bindingId</var>.</li></ol></li><li>Else,<ol><li>Let <var>rhs</var> be the result of evaluating <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rhs</var>).</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>value</var>).</li><li>Let <var>keyResult</var> be ? <emu-xref aoid=\"ForIn/OfHeadEvaluation\"><a href=\"#sec-runtime-semantics-forinofheadevaluation\">ForIn/OfHeadEvaluation</a></emu-xref>(&#171; &#187;, <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>, <emu-const>enumerate</emu-const>).</li><li>Return ? <emu-xref aoid=\"ForIn/OfBodyEvaluation\"><a href=\"#sec-runtime-semantics-forin-div-ofbodyevaluation-lhs-stmt-iterator-lhskind-labelset\">ForIn/OfBodyEvaluation</a></emu-xref>(<emu-nt><a href=\"#prod-annexB-BindingIdentifier\">BindingIdentifier</a></emu-nt>, <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt>, <var>keyResult</var>, <emu-const>enumerate</emu-const>, <emu-const>varBinding</emu-const>, <var>labelSet</var>).</li></ol></emu-alg>\n    </emu-annex>\n\n    "}, "sec-static-semantics-propertynamelist": {"num": "12.2.6.6", "title": "#sec-static-semantics-propertynamelist Static Semantics: PropertyNameList", "html": "<emu-clause id=\"sec-static-semantics-propertynamelist\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-propertynamelist\">#sec-static-semantics-propertynamelist</span> Static Semantics: PropertyNameList</h1>\n        <emu-grammar><emu-production name=\"PropertyDefinitionList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"671a051b\"><emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt> is <emu-const>empty</emu-const>, return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinitionList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3152d601\"><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>list</var> be PropertyNameList of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt>.</li><li>If PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt> is <emu-const>empty</emu-const>, return <var>list</var>.</li><li>Append PropName of <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt> to the end of <var>list</var>.</li><li>Return <var>list</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-identifiers-static-semantics-boundnames": {"num": "12.1.2", "title": "#sec-identifiers-static-semantics-boundnames Static Semantics: BoundNames", "html": "<emu-clause id=\"sec-identifiers-static-semantics-boundnames\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-identifiers-static-semantics-boundnames\">#sec-identifiers-static-semantics-boundnames</span> Static Semantics: BoundNames</h1>\n      <emu-see-also-para op=\"BoundNames\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06b6ace8\"><emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is the StringValue of <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d1df3360\"><emu-t>yield</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-val>\"yield\"</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"857d4354\"><emu-t>await</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-val>\"await\"</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-argument-lists-runtime-semantics-argumentlistevaluation": {"num": "12.3.8.1", "title": "#sec-argument-lists-runtime-semantics-argumentlistevaluation Runtime Semantics: ArgumentListEvaluation", "html": "<emu-clause id=\"sec-argument-lists-runtime-semantics-argumentlistevaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-argument-lists-runtime-semantics-argumentlistevaluation\">#sec-argument-lists-runtime-semantics-argumentlistevaluation</span> Runtime Semantics: ArgumentListEvaluation</h1>\n        <emu-see-also-para op=\"ArgumentListEvaluation\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"Arguments\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Arguments\">Arguments</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"78e44c33\"><emu-t>(</emu-t><emu-t>)</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d4fc7da4\"><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ref</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>arg</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <var>arg</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>list</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>spreadRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>spreadObj</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>spreadRef</var>).</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>spreadObj</var>).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>list</var>.</li><li>Let <var>nextArg</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>Append <var>nextArg</var> as the last element of <var>list</var>.</li></ol></li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"7ff23fee\"><emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>precedingArgs</var> be ? ArgumentListEvaluation of <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt>.</li><li>Let <var>ref</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>arg</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>ref</var>).</li><li>Append <var>arg</var> to the end of <var>precedingArgs</var>.</li><li>Return <var>precedingArgs</var>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArgumentList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"678ad0f9\"><emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt><emu-t>,</emu-t><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>precedingArgs</var> be ? ArgumentListEvaluation of <emu-nt><a href=\"#prod-ArgumentList\">ArgumentList</a></emu-nt>.</li><li>Let <var>spreadRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>spreadRef</var>)).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>precedingArgs</var>.</li><li>Let <var>nextArg</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>Append <var>nextArg</var> as the last element of <var>precedingArgs</var>.</li></ol></li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-exports-static-semantics-lexicallyscopeddeclarations": {"num": "15.2.3.8", "title": "#sec-exports-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations", "html": "<emu-clause id=\"sec-exports-static-semantics-lexicallyscopeddeclarations\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exports-static-semantics-lexicallyscopeddeclarations\">#sec-exports-static-semantics-lexicallyscopeddeclarations</span> Static Semantics: LexicallyScopedDeclarations</h1>\n        <emu-see-also-para op=\"LexicallyScopedDeclarations\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"6c6de801\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"828f5ae3\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is DeclarationPart of <emu-nt><a href=\"#prod-Declaration\">Declaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"71d1417e\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is DeclarationPart of <emu-nt><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"c3c3cb8d\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ExportDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e1fe9c4f\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is this <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-variable-statement-static-semantics-varscopeddeclarations": {"num": "13.3.2.3", "title": "#sec-variable-statement-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations", "html": "<emu-clause id=\"sec-variable-statement-static-semantics-varscopeddeclarations\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-variable-statement-static-semantics-varscopeddeclarations\">#sec-variable-statement-static-semantics-varscopeddeclarations</span> Static Semantics: VarScopedDeclarations</h1>\n        <emu-see-also-para op=\"VarScopedDeclarations\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"VariableDeclarationList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"377a6210\"><emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose sole element is <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"VariableDeclarationList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a0057011\"><emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>declarations</var> be VarScopedDeclarations of <emu-nt><a href=\"#prod-VariableDeclarationList\">VariableDeclarationList</a></emu-nt>.</li><li>Append <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> to <var>declarations</var>.</li><li>Return <var>declarations</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-utf-8-encodings": "Table 48"}}}