{"from": {"secList": ["sec-validateintegertypedarray"], "secData": {"sec-validateintegertypedarray": {"num": "24.4.1.1", "title": "#sec-validateintegertypedarray ValidateIntegerTypedArray ( typedArray [ , waitable ] )", "html": "<emu-clause id=\"sec-validateintegertypedarray\" aoid=\"ValidateIntegerTypedArray\" oldid=\"sec-validatesharedintegertypedarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validateintegertypedarray\">#sec-validateintegertypedarray</span> ValidateIntegerTypedArray ( <var>typedArray</var> [ , <var>waitable</var> ] )</h1>\n        <p>The abstract operation ValidateIntegerTypedArray takes argument <var>typedArray</var> and optional argument <var>waitable</var> (a Boolean). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>waitable</var> is not present, set <var>waitable</var> to <emu-val>false</emu-val>.</li><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>typeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>type</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>typeName</var>.</li><li>If <var>waitable</var> is <emu-val>true</emu-val>, then<ol><li>If <var>typeName</var> is not <emu-val>\"Int32Array\"</emu-val> or <emu-val>\"BigInt64Array\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If !&#160;<emu-xref aoid=\"IsUnclampedIntegerElementType\"><a href=\"#sec-isunclampedintegerelementtype\">IsUnclampedIntegerElementType</a></emu-xref>(<var>type</var>) is <emu-val>false</emu-val> and !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>buffer</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 61"}}, "to": {"secList": ["sec-validateintegertypedarray"], "secData": {"sec-validateintegertypedarray": {"num": "24.4.1.1", "title": "#sec-validateintegertypedarray ValidateIntegerTypedArray ( typedArray [ , waitable ] )", "html": "<emu-clause id=\"sec-validateintegertypedarray\" aoid=\"ValidateIntegerTypedArray\" oldids=\"sec-validatesharedintegertypedarray\">\n        <span id=\"sec-validatesharedintegertypedarray\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validateintegertypedarray\">#sec-validateintegertypedarray</span> ValidateIntegerTypedArray ( <var>typedArray</var> [ , <var>waitable</var> ] )</h1>\n        <p>The abstract operation ValidateIntegerTypedArray takes argument <var>typedArray</var> and optional argument <var>waitable</var> (a Boolean). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>waitable</var> is not present, set <var>waitable</var> to <emu-val>false</emu-val>.</li><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>typeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>type</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>typeName</var>.</li><li>If <var>waitable</var> is <emu-val>true</emu-val>, then<ol><li>If <var>typeName</var> is not <emu-val>\"Int32Array\"</emu-val> or <emu-val>\"BigInt64Array\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If !&#160;<emu-xref aoid=\"IsUnclampedIntegerElementType\"><a href=\"#sec-isunclampedintegerelementtype\">IsUnclampedIntegerElementType</a></emu-xref>(<var>type</var>) is <emu-val>false</emu-val> and !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>buffer</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {"table-the-typedarray-constructors": "Table 61"}}}