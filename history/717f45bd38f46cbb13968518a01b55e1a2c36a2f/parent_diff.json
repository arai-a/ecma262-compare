{"from": {"secList": ["sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver", "sec-array.prototype.findindex", "sec-array.prototype.reduce", "sec-promise-objects", "sec-settypedarrayfromtypedarray", "sec-date.parse", "sec-arraysetlength", "sec-ecmascript-function-objects-call-thisargument-argumentslist", "sec-clonearraybuffer", "sec-sharedarraybuffer-constructor", "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p", "sec-set-objects", "sec-promise-executor", "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof", "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p", "sec-async-function-objects", "sec-newpromisecapability", "sec-regexp.prototype-@@split", "sec-weakset-constructor", "sec-array.prototype.reverse", "sec-date.prototype-@@toprimitive", "sec-array-exotic-objects", "sec-initializetypedarrayfromarraybuffer", "sec-proxycreate", "sec-finalization-registry-constructor", "sec-weakmap-objects", "sec-array.prototype.shift", "sec-set-and-relation-specification-type", "sec-asyncgenerator-objects", "sec-abstract-operations-for-typedarray-objects", "sec-properties-of-array-instances-length", "sec-well-known-intrinsic-objects", "sec-array.prototype.every", "sec-array.prototype.tolocalestring", "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-date.utc", "sec-dataview-constructor", "sec-array.prototype.slice", "sec-%typedarray%.prototype.subarray", "sec-string.prototype.matchall", "sec-array.prototype.some", "sec-set.prototype.foreach", "sec-weak-ref-constructor", "sec-promisecapability-records", "sec-array.prototype.sort", "sec-execution-contexts", "sec-proxy-object-internal-methods-and-internal-slots-delete-p", "sec-allocatearraybuffer", "sec-array.prototype.filter", "sec-proxy-object-internal-methods-and-internal-slots-isextensible", "sec-array.prototype.foreach", "sec-settypedarrayfromarraylike", "sec-date.prototype.tostring", "sec-weakset-objects", "sec-lengthofarraylike", "sec-proxy-object-internal-methods-and-internal-slots-preventextensions", "sec-array.prototype.unshift", "sec-built-in-function-objects-call-thisargument-argumentslist", "sec-proxy-object-internal-methods-and-internal-slots", "sec-properties-of-the-proxy-constructor", "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget", "sec-array.prototype.indexof", "sec-array.prototype.join", "sec-initializetypedarrayfromarraylike", "sec-allocatetypedarraybuffer", "sec-array.prototype-@@unscopables", "sec-array.prototype.push", "sec-asyncgeneratorfunction-instance-prototype", "sec-properties-of-date-instances", "sec-map-constructor", "sec-weakmap-constructor", "sec-toprimitive", "sec-array-objects", "sec-generatorfunction-instances-prototype", "sec-async-generator-function-definitions", "sec-arraycreate", "sec-regexp.prototype.exec", "sec-array.prototype.map", "sec-array.prototype.copywithin", "sec-array.prototype.tostring", "sec-promise-constructor", "sec-string.prototype.split", "sec-createarrayfromlist", "sec-initializetypedarrayfromlist", "sec-async-function-constructor", "sec-generatorfunction-constructor", "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver", "sec-initializetypedarrayfromtypedarray", "sec-generator-function-definitions", "sec-array.prototype.fill", "sec-array-constructor", "sec-array.prototype.reduceright", "sec-date.prototype.toutcstring", "sec-array.prototype.concat", "sec-agent-clusters", "sec-array.prototype.pop", "sec-array.prototype.find", "sec-getmodifysetvalueinbuffer", "sec-array.prototype.includes", "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact", "sec-array.prototype.lastindexof", "sec-asyncgeneratorfunction-objects", "sec-proxy-constructor", "sec-arrayspeciescreate", "sec-array.prototype.splice", "sec-array-initializer", "sec-arraybuffer-constructor", "sec-applystringornumericbinaryoperator", "sec-date.prototype.tojson", "sec-weakref-invariants", "sec-map.prototype.foreach", "sec-generator-objects", "sec-allocatesharedarraybuffer", "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys", "sec-generatorfunction-objects", "sec-asyncgeneratorfunction-constructor", "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v", "sec-typedarray-objects", "sec-date-constructor", "sec-map-objects"], "secData": {"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver": {"num": "10.5.8", "title": "#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n      <p>The [[Get]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"get\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Get]](<var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>Receiver</var> &#187;).</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>trapResult</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Get]] is <emu-val>undefined</emu-val>, then<ol><li>If <var>trapResult</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Get]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            The value reported for a property must be <emu-val>undefined</emu-val> if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Get]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.findindex": {"num": "23.1.3.9", "title": "#sec-array.prototype.findindex Array.prototype.findIndex ( predicate [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.findindex\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.findindex\">#sec-array.prototype.findindex</span> Array.prototype.findIndex ( <var>predicate</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>predicate</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>findIndex</code> calls <var>predicate</var> once for each element of the array, in ascending order, until it finds one where <var>predicate</var> returns <emu-val>true</emu-val>. If such an element is found, <code>findIndex</code> immediately returns the index of that element value. Otherwise, <code>findIndex</code> returns -1.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>predicate</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>predicate</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>findIndex</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>predicate</var>.</p>\n          <p>The range of elements processed by <code>findIndex</code> is set before the first call to <var>predicate</var>. Elements that are appended to the array after the call to <code>findIndex</code> begins will not be visited by <var>predicate</var>. If existing elements of the array are changed, their value as passed to <var>predicate</var> will be the value at the time that <code>findIndex</code> visits them; elements that are deleted after the call to <code>findIndex</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>findIndex</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>predicate</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>predicate</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>true</emu-val>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>findIndex</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.reduce": {"num": "23.1.3.21", "title": "#sec-array.prototype.reduce Array.prototype.reduce ( callbackfn [ , initialValue ] )", "html": "<emu-clause id=\"sec-array.prototype.reduce\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reduce\">#sec-array.prototype.reduce</span> Array.prototype.reduce ( <var>callbackfn</var> [ , <var>initialValue</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that takes four arguments. <code>reduce</code> calls the callback, as a function, once for each element after the first element present in the array, in ascending order.</p>\n          <p><var>callbackfn</var> is called with four arguments: the <var>previousValue</var> (value from the previous call to <var>callbackfn</var>), the <var>currentValue</var> (value of the current element), the <var>currentIndex</var>, and the object being traversed. The first time that callback is called, the <var>previousValue</var> and <var>currentValue</var> can be one of two values. If an <var>initialValue</var> was supplied in the call to <code>reduce</code>, then <var>previousValue</var> will be equal to <var>initialValue</var> and <var>currentValue</var> will be equal to the first value in the array. If no <var>initialValue</var> was supplied, then <var>previousValue</var> will be equal to the first value in the array and <var>currentValue</var> will be equal to the second. It is a <emu-val>TypeError</emu-val> if the array contains no elements and <var>initialValue</var> is not provided.</p>\n          <p><code>reduce</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>reduce</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>reduce</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>reduce</code> visits them; elements that are deleted after the call to <code>reduce</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>reduce</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>len</var> = 0 and <var>initialValue</var> is not present, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Let <var>accumulator</var> be <emu-val>undefined</emu-val>.</li><li>If <var>initialValue</var> is present, then<ol><li>Set <var>accumulator</var> to <var>initialValue</var>.</li></ol></li><li>Else,<ol><li>Let <var>kPresent</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>kPresent</var> is <emu-val>false</emu-val> and <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Set <var>kPresent</var> to ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>If <var>kPresent</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <emu-val>undefined</emu-val>, &#171; <var>accumulator</var>, <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>accumulator</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reduce</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise-objects": {"num": "27.2", "title": "#sec-promise-objects Promise Objects", "html": "<emu-clause id=\"sec-promise-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-objects\">#sec-promise-objects</span> Promise Objects</h1>\n    <p>A Promise is an object that is used as a placeholder for the eventual results of a deferred (and possibly asynchronous) computation.</p>\n    <p>Any Promise object is in one of three mutually exclusive states: <em>fulfilled</em>, <em>rejected</em>, and <em>pending</em>:</p>\n    <ul>\n      <li>\n        A promise <code>p</code> is fulfilled if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>f</code>.\n      </li>\n      <li>\n        A promise <code>p</code> is rejected if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>r</code>.\n      </li>\n      <li>\n        A promise is pending if it is neither fulfilled nor rejected.\n      </li>\n    </ul>\n    <p>A promise is said to be <em>settled</em> if it is not pending, i.e. if it is either fulfilled or rejected.</p>\n    <p>A promise is <em>resolved</em> if it is settled or if it has been &#8220;locked in&#8221; to match the state of another promise. Attempting to resolve or reject a resolved promise has no effect. A promise is <em>unresolved</em> if it is not resolved. An unresolved promise is always in the pending state. A resolved promise may be pending, fulfilled or rejected.</p>\n\n    <div id=\"excluded-sec-promise-abstract-operations\"><h1><span class=\"secnum\">27.2.1</span>#sec-promise-abstract-operations Promise Abstract Operations</h1>...</div><div id=\"excluded-sec-promise-jobs\"><h1><span class=\"secnum\">27.2.2</span>#sec-promise-jobs Promise Jobs</h1>...</div><div id=\"excluded-sec-promise-constructor\"><h1><span class=\"secnum\">27.2.3</span>#sec-promise-constructor The Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-constructor\"><h1><span class=\"secnum\">27.2.4</span>#sec-properties-of-the-promise-constructor Properties of the Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-prototype-object\"><h1><span class=\"secnum\">27.2.5</span>#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-promise-instances\"><h1><span class=\"secnum\">27.2.6</span>#sec-properties-of-promise-instances Properties of Promise Instances</h1>...</div></emu-clause>\n\n  "}, "sec-settypedarrayfromtypedarray": {"num": "23.2.3.23.1", "title": "#sec-settypedarrayfromtypedarray SetTypedArrayFromTypedArray ( target, targetOffset, source )", "html": "<emu-clause id=\"sec-settypedarrayfromtypedarray\" oldids=\"sec-%typedarray%.prototype.set-typedarray-offset\" aoid=\"SetTypedArrayFromTypedArray\"><span id=\"sec-%typedarray%.prototype.set-typedarray-offset\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-settypedarrayfromtypedarray\">#sec-settypedarrayfromtypedarray</span> SetTypedArrayFromTypedArray ( <var>target</var>, <var>targetOffset</var>, <var>source</var> )</h1>\n          <p>The abstract operation SetTypedArrayFromTypedArray takes arguments <var>target</var> (a TypedArray object), <var>targetOffset</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> or +&#8734;), and <var>source</var> (a TypedArray object). It sets multiple values in <var>target</var>, starting at index <var>targetOffset</var>, reading the values from <var>source</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>source</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>srcBuffer</var> be <var>source</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>srcName</var> be the String value of <var>source</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcLength</var> be <var>source</var>.[[ArrayLength]].</li><li>Let <var>srcByteOffset</var> be <var>source</var>.[[ByteOffset]].</li><li>If <var>targetOffset</var> is +&#8734;, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>target</var>.[[ContentType]] &#8800; <var>source</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>If both <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcBuffer</var>) and <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>targetBuffer</var>) are <emu-val>true</emu-val>, then<ol><li>If <var>srcBuffer</var>.[[ArrayBufferData]] and <var>targetBuffer</var>.[[ArrayBufferData]] are the same <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values, let <var>same</var> be <emu-val>true</emu-val>; else let <var>same</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else, let <var>same</var> be <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcBuffer</var>, <var>targetBuffer</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>srcByteLength</var> be <var>source</var>.[[ByteLength]].</li><li>Set <var>srcBuffer</var> to ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcByteLength</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li><li>NOTE: <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref> is used to clone <var>srcBuffer</var> because is it known to not have any observable side-effects.</li><li>Let <var>srcByteIndex</var> be 0.</li></ol></li><li>Else, let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>If <var>srcType</var> is the same as <var>targetType</var>, then<ol><li>NOTE: If <var>srcType</var> and <var>targetType</var> are the same, the transfer must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <emu-const>Uint8</emu-const>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <emu-const>Uint8</emu-const>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-date.parse": {"num": "21.4.3.2", "title": "#sec-date.parse Date.parse ( string )", "html": "<emu-clause id=\"sec-date.parse\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.parse\">#sec-date.parse</span> Date.parse ( <var>string</var> )</h1>\n        <p>The <code>parse</code> function applies the <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref> operator to its argument. If <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref> results in an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> is immediately returned. Otherwise, <code>parse</code> interprets the resulting String as a date and time; it returns a Number, the UTC <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> corresponding to the date and time. The String may be interpreted as a local time, a UTC time, or a time in some other time zone, depending on the contents of the String. The function first attempts to parse the String according to the format described in Date Time String Format (<emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>), including expanded years. If the String does not conform to that format the function may fall back to any implementation-specific heuristics or implementation-specific date formats. Strings that are unrecognizable or contain out-of-bounds format element values shall cause <code>Date.parse</code> to return <emu-val>NaN</emu-val>.</p>\n        <p>If the String conforms to the <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\">Date Time String Format</a></emu-xref>, substitute values take the place of absent format elements. When the <code>MM</code> or <code>DD</code> elements are absent, <emu-val>\"01\"</emu-val> is used. When the <code>HH</code>, <code>mm</code>, or <code>ss</code> elements are absent, <emu-val>\"00\"</emu-val> is used. When the <code>sss</code> element is absent, <emu-val>\"000\"</emu-val> is used. When the UTC offset representation is absent, date-only forms are interpreted as a UTC time and date-time forms are interpreted as a local time.</p>\n        <p>If <code>x</code> is any Date object whose milliseconds amount is zero within a particular implementation of ECMAScript, then all of the following expressions should produce the same numeric value in that implementation, if all the properties referenced have their initial values:</p>\n        <pre><code class=\"javascript hljs\">x.<span class=\"hljs-title function_\">valueOf</span>()\n<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toString</span>())\n<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toUTCString</span>())\n<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toISOString</span>())</code></pre>\n        <p>However, the expression</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toLocaleString</span>())</code></pre>\n        <p>is not required to produce the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as the preceding three expressions and, in general, the value produced by <code>Date.parse</code> is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> when given any String value that does not conform to the Date Time String Format (<emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>) and that could not be produced in that implementation by the <code>toString</code> or <code>toUTCString</code> method.</p>\n      </emu-clause>\n\n      "}, "sec-arraysetlength": {"num": "10.4.2.4", "title": "#sec-arraysetlength ArraySetLength ( A, Desc )", "html": "<emu-clause id=\"sec-arraysetlength\" aoid=\"ArraySetLength\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraysetlength\">#sec-arraysetlength</span> ArraySetLength ( <var>A</var>, <var>Desc</var> )</h1>\n        <p>The abstract operation ArraySetLength takes arguments <var>A</var> (an Array object) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>Desc</var>.[[Value]] is absent, then<ol><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>Desc</var>).</li></ol></li><li>Let <var>newLenDesc</var> be a copy of <var>Desc</var>.</li><li id=\"step-arraysetlength-newlen\">Let <var>newLen</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>Desc</var>.[[Value]]).</li><li id=\"step-arraysetlength-numberlen\">Let <var>numberLen</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>Desc</var>.[[Value]]).</li><li>If <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref>(<var>newLen</var>, <var>numberLen</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Set <var>newLenDesc</var>.[[Value]] to <var>newLen</var>.</li><li>Let <var>oldLenDesc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>oldLenDesc</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLenDesc</var>.[[Configurable]] is <emu-val>false</emu-val>.</li><li>Let <var>oldLen</var> be <var>oldLenDesc</var>.[[Value]].</li><li>If <var>newLen</var> &#8805; <var>oldLen</var>, then<ol><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>newLenDesc</var>).</li></ol></li><li>If <var>oldLenDesc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>newLenDesc</var>.[[Writable]] is absent or has the value <emu-val>true</emu-val>, let <var>newWritable</var> be <emu-val>true</emu-val>.</li><li>Else,<ol><li>NOTE: Setting the [[Writable]] attribute to <emu-val>false</emu-val> is deferred in case any elements cannot be deleted.</li><li>Let <var>newWritable</var> be <emu-val>false</emu-val>.</li><li>Set <var>newLenDesc</var>.[[Writable]] to <emu-val>true</emu-val>.</li></ol></li><li>Let <var>succeeded</var> be !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>newLenDesc</var>).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>For each own property key <var>P</var> of <var>A</var> that is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, whose numeric value is greater than or equal to <var>newLen</var>, in descending numeric index order, do<ol><li>Let <var>deleteSucceeded</var> be ! <var>A</var>.[[Delete]](<var>P</var>).</li><li>If <var>deleteSucceeded</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>newLenDesc</var>.[[Value]] to !&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>) + <emu-val>1</emu-val><sub>&#120125;</sub>.</li><li>If <var>newWritable</var> is <emu-val>false</emu-val>, set <var>newLenDesc</var>.[[Writable]] to <emu-val>false</emu-val>.</li><li>Perform !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>newLenDesc</var>).</li><li>Return <emu-val>false</emu-val>.</li></ol></li></ol></li><li>If <var>newWritable</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>succeeded</var> to !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Writable]]: <emu-val>false</emu-val> }).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>succeeded</var> is <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>In steps <emu-xref href=\"#step-arraysetlength-newlen\"><a href=\"#step-arraysetlength-newlen\" class=\"excluded-xref\" excluded-id=\"step-arraysetlength-newlen\">#step-arraysetlength-newlen</a></emu-xref> and <emu-xref href=\"#step-arraysetlength-numberlen\"><a href=\"#step-arraysetlength-numberlen\" class=\"excluded-xref\" excluded-id=\"step-arraysetlength-numberlen\">#step-arraysetlength-numberlen</a></emu-xref>, if <var>Desc</var>.[[Value]] is an object then its <code>valueOf</code> method is called twice. This is legacy behaviour that was specified with this effect starting with the 2<sup>nd</sup> Edition of this specification.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-ecmascript-function-objects-call-thisargument-argumentslist": {"num": "10.2.1", "title": "#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>calleeContext</var> be <emu-xref aoid=\"PrepareForOrdinaryCall\"><a href=\"#sec-prepareforordinarycall\">PrepareForOrdinaryCall</a></emu-xref>(<var>F</var>, <emu-val>undefined</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>F</var>.[[IsClassConstructor]] is <emu-val>true</emu-val>, then<ol><li>Let <var>error</var> be a newly created <emu-val>TypeError</emu-val> object.</li><li>NOTE: <var>error</var> is created in <var>calleeContext</var> with <var>F</var>'s associated <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-xref aoid=\"ThrowCompletion\"><a href=\"#sec-throwcompletion\">ThrowCompletion</a></emu-xref>(<var>error</var>).</li></ol></li><li>Perform <emu-xref aoid=\"OrdinaryCallBindThis\"><a href=\"#sec-ordinarycallbindthis\">OrdinaryCallBindThis</a></emu-xref>(<var>F</var>, <var>calleeContext</var>, <var>thisArgument</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryCallEvaluateBody\"><a href=\"#sec-ordinarycallevaluatebody\">OrdinaryCallEvaluateBody</a></emu-xref>(<var>F</var>, <var>argumentsList</var>).</li><li id=\"step-call-pop-context-stack\">Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>result</var>.[[Type]] is <emu-const>return</emu-const>, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>result</var>.[[Value]]).</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>result</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> in step <emu-xref href=\"#step-call-pop-context-stack\"><a href=\"#step-call-pop-context-stack\" class=\"excluded-xref\" excluded-id=\"step-call-pop-context-stack\">#step-call-pop-context-stack</a></emu-xref> it must not be destroyed if it is suspended and retained for later resumption by an accessible generator object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-prepareforordinarycall\"><h1><span class=\"secnum\">10.2.1.1</span>#sec-prepareforordinarycall PrepareForOrdinaryCall ( F, newTarget )</h1>...</div><div id=\"excluded-sec-ordinarycallbindthis\"><h1><span class=\"secnum\">10.2.1.2</span>#sec-ordinarycallbindthis OrdinaryCallBindThis ( F, calleeContext, thisArgument )</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">10.2.1.3</span>#sec-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-ordinarycallevaluatebody\"><h1><span class=\"secnum\">10.2.1.4</span>#sec-ordinarycallevaluatebody OrdinaryCallEvaluateBody ( F, argumentsList )</h1>...</div></emu-clause>\n\n    "}, "sec-clonearraybuffer": {"num": "25.1.2.4", "title": "#sec-clonearraybuffer CloneArrayBuffer ( srcBuffer, srcByteOffset, srcLength, cloneConstructor )", "html": "<emu-clause id=\"sec-clonearraybuffer\" aoid=\"CloneArrayBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-clonearraybuffer\">#sec-clonearraybuffer</span> CloneArrayBuffer ( <var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcLength</var>, <var>cloneConstructor</var> )</h1>\n        <p>The abstract operation CloneArrayBuffer takes arguments <var>srcBuffer</var> (an ArrayBuffer object), <var>srcByteOffset</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), <var>srcLength</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), and <var>cloneConstructor</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It creates a new ArrayBuffer whose data is a copy of <var>srcBuffer</var>'s data over the range starting at <var>srcByteOffset</var> and continuing for <var>srcLength</var> bytes. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>srcBuffer</var>) is Object and <var>srcBuffer</var> has an [[ArrayBufferData]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>cloneConstructor</var>) is <emu-val>true</emu-val>.</li><li>Let <var>targetBuffer</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>cloneConstructor</var>, <var>srcLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcBlock</var> be <var>srcBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>targetBlock</var> be <var>targetBuffer</var>.[[ArrayBufferData]].</li><li>Perform <emu-xref aoid=\"CopyDataBlockBytes\"><a href=\"#sec-copydatablockbytes\">CopyDataBlockBytes</a></emu-xref>(<var>targetBlock</var>, 0, <var>srcBlock</var>, <var>srcByteOffset</var>, <var>srcLength</var>).</li><li>Return <var>targetBuffer</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-sharedarraybuffer-constructor": {"num": "25.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, if that property is present (see below).</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <p>Whenever a <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> does not provide concurrent access to SharedArrayBuffer objects it may omit the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p": {"num": "10.5.7", "title": "#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n      <p>The [[HasProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"has\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[HasProperty]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[HasProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[HasProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-set-objects": {"num": "24.2", "title": "#sec-set-objects Set Objects", "html": "<emu-clause id=\"sec-set-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-objects\">#sec-set-objects</span> Set Objects</h1>\n    <p>Set objects are collections of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>. A distinct value may only occur once as an element of a Set's collection. Distinct values are discriminated using the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> comparison algorithm.</p>\n    <p>Set objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structures used in this Set objects specification is only intended to describe the required observable semantics of Set objects. It is not intended to be a viable implementation model.</p>\n\n    <div id=\"excluded-sec-set-constructor\"><h1><span class=\"secnum\">24.2.1</span>#sec-set-constructor The Set Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-set-constructor\"><h1><span class=\"secnum\">24.2.2</span>#sec-properties-of-the-set-constructor Properties of the Set Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-set-prototype-object\"><h1><span class=\"secnum\">24.2.3</span>#sec-properties-of-the-set-prototype-object Properties of the Set Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-set-instances\"><h1><span class=\"secnum\">24.2.4</span>#sec-properties-of-set-instances Properties of Set Instances</h1>...</div><div id=\"excluded-sec-set-iterator-objects\"><h1><span class=\"secnum\">24.2.5</span>#sec-set-iterator-objects Set Iterator Objects</h1>...</div></emu-clause>\n\n  "}, "sec-promise-executor": {"num": "27.2.3.1", "title": "#sec-promise-executor Promise ( executor )", "html": "<emu-clause id=\"sec-promise-executor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</span> Promise ( <var>executor</var> )</h1>\n        <p>When the <code>Promise</code> function is called with argument <var>executor</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>executor</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Promise.prototype%\"</emu-val>, &#171; [[PromiseState]], [[PromiseResult]], [[PromiseFulfillReactions]], [[PromiseRejectReactions]], [[PromiseIsHandled]] &#187;).</li><li>Set <var>promise</var>.[[PromiseState]] to <emu-const>pending</emu-const>.</li><li>Set <var>promise</var>.[[PromiseFulfillReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseRejectReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseIsHandled]] to <emu-val>false</emu-val>.</li><li>Let <var>resolvingFunctions</var> be <emu-xref aoid=\"CreateResolvingFunctions\"><a href=\"#sec-createresolvingfunctions\">CreateResolvingFunctions</a></emu-xref>(<var>promise</var>).</li><li>Let <var>completion</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>executor</var>, <emu-val>undefined</emu-val>, &#171; <var>resolvingFunctions</var>.[[Resolve]], <var>resolvingFunctions</var>.[[Reject]] &#187;).</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>resolvingFunctions</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>completion</var>.[[Value]] &#187;).</li></ol></li><li>Return <var>promise</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <var>executor</var> argument must be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It is called for initiating and reporting completion of the possibly deferred action represented by this Promise object. The executor is called with two arguments: <var>resolve</var> and <var>reject</var>. These are functions that may be used by the <var>executor</var> function to report eventual completion or failure of the deferred computation. Returning from the executor function does not mean that the deferred action has been completed but only that the request to eventually perform the deferred action has been accepted.</p>\n          <p>The <var>resolve</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>resolve</var> function to indicate that it wishes to resolve the associated Promise object. The argument passed to the <var>resolve</var> function represents the eventual value of the deferred action and can be either the actual fulfillment value or another Promise object which will provide the value if it is fulfilled.</p>\n          <p>The <var>reject</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>reject</var> function to indicate that the associated Promise is rejected and will never be fulfilled. The argument passed to the <var>reject</var> function is used as the rejection value of the promise. Typically it will be an Error object.</p>\n          <p>The resolve and reject functions passed to an <var>executor</var> function by the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> have the capability to actually resolve and reject the associated promise. Subclasses may have different <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> behaviour that passes in customized values for resolve and reject.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof": {"num": "10.5.1", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof</span> [[GetPrototypeOf]] ( )</h1>\n      <p>The [[GetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetPrototypeOf]]().</li></ol></li><li>Let <var>handlerProto</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handlerProto</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>handlerProto</var>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>handlerProto</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>handlerProto</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetPrototypeOf]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetPrototypeOf]] must be either an Object or <emu-val>null</emu-val>.\n          </li>\n          <li>\n            If the target object is not extensible, [[GetPrototypeOf]] applied to the proxy object must return the same value as [[GetPrototypeOf]] applied to the proxy object's target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "10.5.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>The [[GetOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getOwnPropertyDescriptor\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li></ol></li><li>Let <var>trapResultObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>trapResultObj</var>) is neither Object nor Undefined, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>trapResultObj</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>resultDesc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>trapResultObj</var>).</li><li>Call <emu-xref aoid=\"CompletePropertyDescriptor\"><a href=\"#sec-completepropertydescriptor\">CompletePropertyDescriptor</a></emu-xref>(<var>resultDesc</var>).</li><li>Let <var>valid</var> be <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>resultDesc</var>, <var>targetDesc</var>).</li><li>If <var>valid</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>resultDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val> or <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>resultDesc</var> has a [[Writable]] field and <var>resultDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>resultDesc</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetOwnProperty]] must be either an Object or <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if the target object is not extensible, unless it does not exist as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as existent, if the target object is not extensible, unless it exists as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-configurable, unless it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as both non-configurable and non-writable, unless it exists as a non-configurable, non-writable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-async-function-objects": {"num": "27.7", "title": "#sec-async-function-objects AsyncFunction Objects", "html": "<emu-clause id=\"sec-async-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-objects\">#sec-async-function-objects</span> AsyncFunction Objects</h1>\n    <p>AsyncFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt>s, and <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-async-function-constructor\"><h1><span class=\"secnum\">27.7.1</span>#sec-async-function-constructor The AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-constructor-properties\"><h1><span class=\"secnum\">27.7.2</span>#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties\"><h1><span class=\"secnum\">27.7.3</span>#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object</h1>...</div><div id=\"excluded-sec-async-function-instances\"><h1><span class=\"secnum\">27.7.4</span>#sec-async-function-instances AsyncFunction Instances</h1>...</div><div id=\"excluded-sec-async-functions-abstract-operations\"><h1><span class=\"secnum\">27.7.5</span>#sec-async-functions-abstract-operations Async Functions Abstract Operations</h1>...</div></emu-clause>\n"}, "sec-newpromisecapability": {"num": "27.2.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" oldids=\"sec-getcapabilitiesexecutor-functions\" aoid=\"NewPromiseCapability\"><span id=\"sec-getcapabilitiesexecutor-functions\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes argument <var>C</var>. It attempts to use <var>C</var> as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in the fashion of the built-in Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a Promise object and extract its <code>resolve</code> and <code>reject</code> functions. The Promise object plus the <code>resolve</code> and <code>reject</code> functions are used to initialize a new <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be the <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>executorClosure</var> be a new <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> with parameters (<var>resolve</var>, <var>reject</var>) that captures <var>promiseCapability</var> and performs the following steps when called:<ol><li>If <var>promiseCapability</var>.[[Resolve]] is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>promiseCapability</var>.[[Reject]] is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Resolve]] to <var>resolve</var>.</li><li>Set <var>promiseCapability</var>.[[Reject]] to <var>reject</var>.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>executor</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>executorClosure</var>, 2, <emu-val>\"\"</emu-val>, &#171; &#187;).</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-regexp.prototype-@@split": {"num": "22.2.5.13", "title": "#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )", "html": "<emu-clause id=\"sec-regexp.prototype-@@split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@split\">#sec-regexp.prototype-@@split</span> RegExp.prototype [ @@split ] ( <var>string</var>, <var>limit</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Returns an Array object into which substrings of the result of converting <var>string</var> to a String have been stored. The substrings are determined by searching from left to right for matches of the <emu-val>this</emu-val> value regular expression; these occurrences are not part of any String in the returned array, but serve to divide up the String value.</p>\n          <p>The <emu-val>this</emu-val> value may be an empty regular expression or a regular expression that can match an empty String. In this case, the regular expression does not match the empty <emu-not-ref>substring</emu-not-ref> at the beginning or end of the input String, nor does it match the empty <emu-not-ref>substring</emu-not-ref> at the end of the previous separator match. (For example, if the regular expression matches the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each <emu-not-ref>substring</emu-not-ref> contains one code unit.) Only the first match at a given index of the String is considered, even if backtracking could yield a non-empty <emu-not-ref>substring</emu-not-ref> match at that index. (For example, <code>/a*?/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"a\", \"b\"]</code>, while <code>/a*/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"\",\"b\"]</code>.)</p>\n          <p>If <var>string</var> is (or converts to) the empty String, the result depends on whether the regular expression can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If the regular expression contains capturing parentheses, then each time <var>separator</var> is matched the results (including any <emu-val>undefined</emu-val> results) of the capturing parentheses are spliced into the output array. For example,</p>\n          <pre><code class=\"javascript hljs\">/&lt;(\\/)?([^<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;&gt;</span>]+)&gt;/[Symbol.split](\"A<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">B</span>&gt;</span>bold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">B</span>&gt;</span>and<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CODE</span>&gt;</span>coded<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">CODE</span>&gt;</span>\")</span></code></pre>\n          <p>evaluates to the array</p>\n          <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"bold\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"and\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"coded\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"\"</span>]</code></pre>\n          <p>If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <p>When the <code>@@split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"flags\"</emu-val>)).</li><li>If <var>flags</var> contains <emu-val>\"u\"</emu-val>, let <var>unicodeMatching</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>unicodeMatching</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <emu-val>\"y\"</emu-val>, let <var>newFlags</var> be <var>flags</var>.</li><li>Else, let <var>newFlags</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>flags</var> and <emu-val>\"y\"</emu-val>.</li><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>rx</var>, <var>newFlags</var> &#187;).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>)).</li><li>If <var>lim</var> is 0, return <var>A</var>.</li><li>Let <var>size</var> be the length of <var>S</var>.</li><li>If <var>size</var> is 0, then<ol><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is not <emu-val>null</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &lt; <var>size</var>,<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>splitter</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>q</var>), <emu-val>true</emu-val>).</li><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is <emu-val>null</emu-val>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>e</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>splitter</var>, <emu-val>\"lastIndex\"</emu-val>))).</li><li>Set <var>e</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>size</var>).</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>q</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Let <var>numberOfCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>z</var>).</li><li>Set <var>numberOfCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>numberOfCaptures</var> - 1, 0).</li><li>Let <var>i</var> be 1.</li><li>Repeat, while <var>i</var> &#8804; <var>numberOfCaptures</var>,<ol><li>Let <var>nextCapture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>z</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>))).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>nextCapture</var>).</li><li>Set <var>i</var> to <var>i</var> + 1.</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li></ol></li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>size</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.split]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>@@split</code> method ignores the value of the <emu-val>\"global\"</emu-val> and <emu-val>\"sticky\"</emu-val> properties of this RegExp object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weakset-constructor": {"num": "24.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakSet\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified WeakSet behaviour must include a <code>super</code> call to the WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.reverse": {"num": "23.1.3.23", "title": "#sec-array.prototype.reverse Array.prototype.reverse ( )", "html": "<emu-clause id=\"sec-array.prototype.reverse\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reverse\">#sec-array.prototype.reverse</span> Array.prototype.reverse ( )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The elements of the array are rearranged so as to reverse their order. The object is returned as the result of the call.</p>\n        </div></emu-note>\n        <p>When the <code>reverse</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>middle</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>(<var>len</var> / 2).</li><li>Let <var>lower</var> be 0.</li><li>Repeat, while <var>lower</var> &#8800; <var>middle</var>,<ol><li>Let <var>upper</var> be <var>len</var> - <var>lower</var> - 1.</li><li>Let <var>upperP</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>upper</var>)).</li><li>Let <var>lowerP</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lower</var>)).</li><li>Let <var>lowerExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>lowerP</var>).</li><li>If <var>lowerExists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>lowerValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>lowerP</var>).</li></ol></li><li>Let <var>upperExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>upperP</var>).</li><li>If <var>upperExists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>upperValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>upperP</var>).</li></ol></li><li>If <var>lowerExists</var> is <emu-val>true</emu-val> and <var>upperExists</var> is <emu-val>true</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>lowerP</var>, <var>upperValue</var>, <emu-val>true</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>upperP</var>, <var>lowerValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else if <var>lowerExists</var> is <emu-val>false</emu-val> and <var>upperExists</var> is <emu-val>true</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>lowerP</var>, <var>upperValue</var>, <emu-val>true</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>upperP</var>).</li></ol></li><li>Else if <var>lowerExists</var> is <emu-val>true</emu-val> and <var>upperExists</var> is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>lowerP</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>upperP</var>, <var>lowerValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>lowerExists</var> and <var>upperExists</var> are both <emu-val>false</emu-val>.</li><li>No action is required.</li></ol></li><li>Set <var>lower</var> to <var>lower</var> + 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reverse</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-date.prototype-@@toprimitive": {"num": "21.4.4.45", "title": "#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-date.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</span> Date.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Date object to a primitive value. The allowed values for <var>hint</var> are <emu-val>\"default\"</emu-val>, <emu-val>\"number\"</emu-val>, and <emu-val>\"string\"</emu-val>. Date objects, are unique among built-in ECMAScript object in that they treat <emu-val>\"default\"</emu-val> as being equivalent to <emu-val>\"string\"</emu-val>, All other built-in ECMAScript objects treat <emu-val>\"default\"</emu-val> as being equivalent to <emu-val>\"number\"</emu-val>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>hint</var> is <emu-val>\"string\"</emu-val> or <emu-val>\"default\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-const>string</emu-const>.</li></ol></li><li>Else if <var>hint</var> is <emu-val>\"number\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-const>number</emu-const>.</li></ol></li><li>Else, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>O</var>, <var>tryFirst</var>).</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.toPrimitive]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-array-exotic-objects": {"num": "10.4.2", "title": "#sec-array-exotic-objects Array Exotic Objects", "html": "<emu-clause id=\"sec-array-exotic-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-exotic-objects\">#sec-array-exotic-objects</span> Array Exotic Objects</h1>\n      <p>An Array object is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> that gives special treatment to <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> property keys (see <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\" class=\"excluded-xref\" excluded-id=\"sec-object-type\">#sec-object-type</a></emu-xref>). A property whose <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> is also called an <em>element</em>. Every Array object has a non-configurable <emu-val>\"length\"</emu-val> property whose value is always a non-negative <emu-xref href=\"#integral-number\"><a href=\"#integral-number\">integral Number</a></emu-xref> whose <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> is less than 2<sup>32</sup>. The value of the <emu-val>\"length\"</emu-val> property is numerically greater than the name of every own property whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>; whenever an own property of an Array object is created or changed, other properties are adjusted as necessary to maintain this invariant. Specifically, whenever an own property is added whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, the value of the <emu-val>\"length\"</emu-val> property is changed, if necessary, to be one more than the numeric value of that <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>; and whenever the value of the <emu-val>\"length\"</emu-val> property is changed, every own property whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> whose value is not smaller than the new length is deleted. This constraint applies only to own properties of an Array object and is unaffected by <emu-val>\"length\"</emu-val> or <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> properties that may be inherited from its prototypes.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A String <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> <var>P</var> is an <em><emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref></em> if and only if <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>)) equals <var>P</var> and <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>) is not the same value as <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<emu-eqn class=\"inline\">2<sup>32</sup> - 1</emu-eqn>).</p>\n      </div></emu-note>\n\n      <p>An object is an <dfn id=\"array-exotic-object\" variants=\"Array exotic objects\">Array exotic object</dfn> (or simply, an Array object) if its [[DefineOwnProperty]] internal method uses the following implementation, and its other essential internal methods use the definitions found in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. These methods are installed in <emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-array-exotic-objects-defineownproperty-p-desc\"><h1><span class=\"secnum\">10.4.2.1</span>#sec-array-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )</h1>...</div><div id=\"excluded-sec-arraycreate\"><h1><span class=\"secnum\">10.4.2.2</span>#sec-arraycreate ArrayCreate ( length [ , proto ] )</h1>...</div><div id=\"excluded-sec-arrayspeciescreate\"><h1><span class=\"secnum\">10.4.2.3</span>#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )</h1>...</div><div id=\"excluded-sec-arraysetlength\"><h1><span class=\"secnum\">10.4.2.4</span>#sec-arraysetlength ArraySetLength ( A, Desc )</h1>...</div></emu-clause>\n\n    "}, "sec-initializetypedarrayfromarraybuffer": {"num": "23.2.5.1.3", "title": "#sec-initializetypedarrayfromarraybuffer InitializeTypedArrayFromArrayBuffer ( O, buffer, byteOffset, length )", "html": "<emu-clause id=\"sec-initializetypedarrayfromarraybuffer\" oldids=\"sec-typedarray-buffer-byteoffset-length\" aoid=\"InitializeTypedArrayFromArrayBuffer\"><span id=\"sec-typedarray-buffer-byteoffset-length\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromarraybuffer\">#sec-initializetypedarrayfromarraybuffer</span> InitializeTypedArrayFromArrayBuffer ( <var>O</var>, <var>buffer</var>, <var>byteOffset</var>, <var>length</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromArrayBuffer takes arguments <var>O</var> (a TypedArray object), <var>buffer</var> (an ArrayBuffer object), <var>byteOffset</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>length</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>buffer</var> is an Object that has an [[ArrayBufferData]] internal slot.</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>offset</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>byteOffset</var>).</li><li>If <var>offset</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> <var>elementSize</var> &#8800; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>length</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>newLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>length</var>).</li></ol></li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>bufferByteLength</var> be <var>buffer</var>.[[ArrayBufferByteLength]].</li><li>If <var>length</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>bufferByteLength</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> <var>elementSize</var> &#8800; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>newByteLength</var> be <var>bufferByteLength</var> - <var>offset</var>.</li><li>If <var>newByteLength</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>Let <var>newByteLength</var> be <var>newLength</var> &#215; <var>elementSize</var>.</li><li>If <var>offset</var> + <var>newByteLength</var> &gt; <var>bufferByteLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>buffer</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>newByteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to <var>offset</var>.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>newByteLength</var> / <var>elementSize</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-proxycreate": {"num": "10.5.14", "title": "#sec-proxycreate ProxyCreate ( target, handler )", "html": "<emu-clause id=\"sec-proxycreate\" aoid=\"ProxyCreate\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxycreate\">#sec-proxycreate</span> ProxyCreate ( <var>target</var>, <var>handler</var> )</h1>\n      <p>The abstract operation ProxyCreate takes arguments <var>target</var> and <var>handler</var>. It is used to specify the creation of new <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic objects</a></emu-xref>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>P</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[ProxyHandler]], [[ProxyTarget]] &#187;).</li><li>Set <var>P</var>'s essential internal methods, except for [[Call]] and [[Construct]], to the definitions specified in <emu-xref href=\"#sec-proxy-object-internal-methods-and-internal-slots\"><a href=\"#sec-proxy-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots\">#sec-proxy-object-internal-methods-and-internal-slots</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>P</var>.[[Call]] as specified in <emu-xref href=\"#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\"><a href=\"#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\">#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>P</var>.[[Construct]] as specified in <emu-xref href=\"#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\"><a href=\"#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\" class=\"excluded-xref\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget</a></emu-xref>.</li></ol></li></ol></li><li>Set <var>P</var>.[[ProxyTarget]] to <var>target</var>.</li><li>Set <var>P</var>.[[ProxyHandler]] to <var>handler</var>.</li><li>Return <var>P</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-finalization-registry-constructor": {"num": "26.2.1", "title": "#sec-finalization-registry-constructor The FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</span> The FinalizationRegistry Constructor</h1>\n      <p>The <dfn variants=\"FinalizationRegistrys\">FinalizationRegistry</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%FinalizationRegistry%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"FinalizationRegistry\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new FinalizationRegistry object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified <code>FinalizationRegistry</code> behaviour must include a <code>super</code> call to the <code>FinalizationRegistry</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>FinalizationRegistry.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry-cleanup-callback\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-finalization-registry-cleanup-callback FinalizationRegistry ( cleanupCallback )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-objects": {"num": "24.3", "title": "#sec-weakmap-objects WeakMap Objects", "html": "<emu-clause id=\"sec-weakmap-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</span> WeakMap Objects</h1>\n    <p>WeakMap objects are collections of key/value pairs where the keys are objects and values may be arbitrary <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>. A WeakMap may be queried to see if it contains a key/value pair with a specific key, but no mechanism is provided for enumerating the objects it holds as keys. In certain conditions, objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> are removed as WeakMap keys, as described in <emu-xref href=\"#sec-weakref-execution\"><a href=\"#sec-weakref-execution\" class=\"excluded-xref\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</a></emu-xref>.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time a key/value pair of a WeakMap becomes inaccessible and the time when the key/value pair is removed from the WeakMap. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to observe a key of a WeakMap that does not require the observer to present the observed key.</p>\n    <p>WeakMap objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of key/value pairs in the collection. The data structure used in this WeakMap objects specification are only intended to describe the required observable semantics of WeakMap objects. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>WeakMap and WeakSets are intended to provide mechanisms for dynamically associating state with an object in a manner that does not &#8220;leak&#8221; memory resources if, in the absence of the WeakMap or WeakSet, the object otherwise became inaccessible and subject to resource reclamation by the implementation's garbage collection mechanisms. This characteristic can be achieved by using an inverted per-object mapping of weak map instances to keys. Alternatively each weak map may internally store its key to value mappings but this approach requires coordination between the WeakMap or WeakSet implementation and the garbage collector. The following references describe mechanism that may be useful to implementations of WeakMap and WeakSets:</p>\n      <p>Barry Hayes. 1997. Ephemerons: a new finalization mechanism. In <i>Proceedings of the 12th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA '97)</i>, A. Michael Berman (Ed.). ACM, New York, NY, USA, 176-183, <a href=\"http://doi.acm.org/10.1145/263698.263733\">http://doi.acm.org/10.1145/263698.263733</a>.</p>\n      <p>Alexandra Barros, Roberto Ierusalimschy, Eliminating Cycles in Weak Tables. Journal of Universal Computer Science - J.UCS, vol. 14, no. 21, pp. 3481-3497, 2008, <a href=\"http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak\">http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak</a></p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakmap-constructor\"><h1><span class=\"secnum\">24.3.1</span>#sec-weakmap-constructor The WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-constructor\"><h1><span class=\"secnum\">24.3.2</span>#sec-properties-of-the-weakmap-constructor Properties of the WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-prototype-object\"><h1><span class=\"secnum\">24.3.3</span>#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakmap-instances\"><h1><span class=\"secnum\">24.3.4</span>#sec-properties-of-weakmap-instances Properties of WeakMap Instances</h1>...</div></emu-clause>\n\n  "}, "sec-array.prototype.shift": {"num": "23.1.3.24", "title": "#sec-array.prototype.shift Array.prototype.shift ( )", "html": "<emu-clause id=\"sec-array.prototype.shift\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.shift\">#sec-array.prototype.shift</span> Array.prototype.shift ( )</h1>\n        <p>The first element of the array is removed from the array and returned.</p>\n        <p>When the <code>shift</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> = 0, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>first</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <emu-val>\"0\"</emu-val>).</li><li>Let <var>k</var> be 1.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> - 1)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromVal</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromVal</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - 1))).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - 1), <emu-val>true</emu-val>).</li><li>Return <var>first</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>shift</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-set-and-relation-specification-type": {"num": "6.2.2", "title": "#sec-set-and-relation-specification-type The Set and Relation Specification Types", "html": "<emu-clause id=\"sec-set-and-relation-specification-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-and-relation-specification-type\">#sec-set-and-relation-specification-type</span> The Set and Relation Specification Types</h1>\n      <p>The <em>Set</em> type is used to explain a collection of unordered elements for use in the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>. Values of the Set type are simple collections of elements, where no element appears more than once. Elements may be added to and removed from Sets. Sets may be unioned, intersected, or subtracted from each other.</p>\n      <p>The <dfn>Relation</dfn> type is used to explain constraints on Sets. Values of the Relation type are Sets of ordered pairs of values from its value domain. For example, a Relation on events is a set of ordered pairs of events. For a Relation <var>R</var> and two values <var>a</var> and <var>b</var> in the value domain of <var>R</var>, <var>a</var> <var>R</var> <var>b</var> is shorthand for saying the ordered pair (<var>a</var>, <var>b</var>) is a member of <var>R</var>. A Relation is least with respect to some conditions when it is the smallest Relation that satisfies those conditions.</p>\n      <p>A <dfn variants=\"strict partial orders\">strict partial order</dfn> is a Relation value <var>R</var> that satisfies the following.</p>\n      <ul>\n        <li>\n          <p>For all <var>a</var>, <var>b</var>, and <var>c</var> in <var>R</var>'s domain:</p>\n          <ul>\n            <li>It is not the case that <var>a</var> <var>R</var> <var>a</var>, and</li>\n            <li>If <var>a</var> <var>R</var> <var>b</var> and <var>b</var> <var>R</var> <var>c</var>, then <var>a</var> <var>R</var> <var>c</var>.</li>\n          </ul>\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>The two properties above are called irreflexivity and transitivity, respectively.</p>\n      </div></emu-note>\n      <p>A <dfn variants=\"strict total orders\">strict total order</dfn> is a Relation value <var>R</var> that satisfies the following.</p>\n      <ul>\n        <li>\n          <p>For all <var>a</var>, <var>b</var>, and <var>c</var> in <var>R</var>'s domain:</p>\n          <ul>\n            <li><var>a</var> is identical to <var>b</var> or <var>a</var> <var>R</var> <var>b</var> or <var>b</var> <var>R</var> <var>a</var>, and</li>\n            <li>It is not the case that <var>a</var> <var>R</var> <var>a</var>, and</li>\n            <li>If <var>a</var> <var>R</var> <var>b</var> and <var>b</var> <var>R</var> <var>c</var>, then <var>a</var> <var>R</var> <var>c</var>.</li>\n          </ul>\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>The three properties above are called totality, irreflexivity, and transitivity, respectively.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-asyncgenerator-objects": {"num": "27.6", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the initial value of the <emu-val>\"prototype\"</emu-val> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorFunction.prototype.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">27.6.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">27.6.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">27.6.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-abstract-operations-for-typedarray-objects": {"num": "23.2.4", "title": "#sec-abstract-operations-for-typedarray-objects Abstract Operations for TypedArray Objects", "html": "<emu-clause id=\"sec-abstract-operations-for-typedarray-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-typedarray-objects\">#sec-abstract-operations-for-typedarray-objects</span> Abstract Operations for TypedArray Objects</h1>\n\n      <emu-clause id=\"typedarray-species-create\" aoid=\"TypedArraySpeciesCreate\">\n        <h1><span class=\"secnum\">23.2.4.1</span> TypedArraySpeciesCreate ( <var>exemplar</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArraySpeciesCreate takes arguments <var>exemplar</var> and <var>argumentList</var>. It is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>exemplar</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>exemplar</var> is an Object that has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>Let <var>defaultConstructor</var> be the intrinsic object listed in column one of <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>exemplar</var>.[[TypedArrayName]].</li><li>Let <var>constructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>exemplar</var>, <var>defaultConstructor</var>).</li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>If <var>result</var>.[[ContentType]] &#8800; <var>exemplar</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      <emu-clause id=\"typedarray-create\" aoid=\"TypedArrayCreate\">\n        <h1><span class=\"secnum\">23.2.4.2</span> TypedArrayCreate ( <var>constructor</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArrayCreate takes arguments <var>constructor</var> and <var>argumentList</var>. It is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>newTypedArray</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>newTypedArray</var>).</li><li>If <var>argumentList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of a single Number, then<ol><li>If <var>newTypedArray</var>.[[ArrayLength]] &lt; <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>argumentList</var>[0]), throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>newTypedArray</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      <div id=\"excluded-sec-validatetypedarray\"><h1><span class=\"secnum\">23.2.4.3</span>#sec-validatetypedarray ValidateTypedArray ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-array-instances-length": {"num": "23.1.4.1", "title": "#sec-properties-of-array-instances-length length", "html": "<emu-clause id=\"sec-properties-of-array-instances-length\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-array-instances-length\">#sec-properties-of-array-instances-length</span> length</h1>\n        <p>The <emu-val>\"length\"</emu-val> property of an Array instance is a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> whose value is always numerically greater than the name of every configurable own property whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>.</p>\n        <p>The <emu-val>\"length\"</emu-val> property initially has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Reducing the value of the <emu-val>\"length\"</emu-val> property has the side-effect of deleting own array elements whose <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> is between the old and new length values. However, non-configurable properties can not be deleted. Attempting to set the <emu-val>\"length\"</emu-val> property of an Array object to a value that is numerically less than or equal to the largest numeric own <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> of an existing non-configurable <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property of the array will result in the length being set to a numeric value that is one greater than that non-configurable numeric own <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>. See <emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in <emu-xref href=\"#table-well-known-intrinsic-objects\"><a href=\"#table-well-known-intrinsic-objects\" class=\"excluded-xref\" excluded-id=\"table-well-known-intrinsic-objects\">#table-well-known-intrinsic-objects</a></emu-xref>.</p>\n        <emu-table id=\"table-well-known-intrinsic-objects\" caption=\"Well-Known Intrinsic Objects\" oldids=\"table-7\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-well-known-intrinsic-objects\">#table-well-known-intrinsic-objects</span>: Well-Known Intrinsic Objects</figcaption><span id=\"table-7\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              </th>\n              <th>\n                Global Name\n              </th>\n              <th>\n                ECMAScript Language Association\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>\n              </td>\n              <td>\n                <code>AggregateError</code>\n              </td>\n              <td>\n                The <code>AggregateError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array</code>\n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              </td>\n              <td>\n                <code>Atomics</code>\n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt</code>\n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigInt64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigUint64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean</code>\n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView</code>\n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date</code>\n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURI</code>\n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURI</code>\n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error</code>\n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              </td>\n              <td>\n                <code>eval</code>\n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>\n              </td>\n              <td>\n                <code>EvalError</code>\n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>\n              </td>\n              <td>\n                <code>FinalizationRegistry</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\" class=\"excluded-xref\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float32Array</code>\n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float64Array</code>\n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              </td>\n              <td>\n                <code>Function</code>\n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int8Array</code>\n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int16Array</code>\n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int32Array</code>\n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              </td>\n              <td>\n                <code>isFinite</code>\n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              </td>\n              <td>\n                <code>isNaN</code>\n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON</code>\n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map</code>\n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              </td>\n              <td>\n                <code>Math</code>\n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number</code>\n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object</code>\n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseFloat</code>\n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseInt</code>\n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise</code>\n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              </td>\n              <td>\n                <code>Proxy</code>\n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>RangeError</code>\n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>\n              </td>\n              <td>\n                <code>ReferenceError</code>\n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              </td>\n              <td>\n                <code>Reflect</code>\n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp</code>\n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set</code>\n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              </td>\n              <td>\n                <code>String</code>\n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol</code>\n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>\n              </td>\n              <td>\n                <code>SyntaxError</code>\n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>TypeError</code>\n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8Array</code>\n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint16Array</code>\n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint32Array</code>\n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>\n              </td>\n              <td>\n                <code>URIError</code>\n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap</code>\n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">%WeakRef%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakRef</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet</code>\n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Additional entries in <emu-xref href=\"#table-additional-well-known-intrinsic-objects\"><a href=\"#table-additional-well-known-intrinsic-objects\" class=\"excluded-xref\" excluded-id=\"table-additional-well-known-intrinsic-objects\">#table-additional-well-known-intrinsic-objects</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-array.prototype.every": {"num": "23.1.3.5", "title": "#sec-array.prototype.every Array.prototype.every ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.every\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.every\">#sec-array.prototype.every</span> Array.prototype.every ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>every</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order, until it finds one where <var>callbackfn</var> returns <emu-val>false</emu-val>. If such an element is found, <code>every</code> immediately returns <emu-val>false</emu-val>. Otherwise, if <var>callbackfn</var> returned <emu-val>true</emu-val> for all elements, <code>every</code> will return <emu-val>true</emu-val>. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>every</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>every</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>every</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>every</code> visits them; elements that are deleted after the call to <code>every</code> begins and before being visited are not visited. <code>every</code> acts like the \"for all\" quantifier in mathematics. In particular, for an empty array, it returns <emu-val>true</emu-val>.</p>\n        </div></emu-note>\n        <p>When the <code>every</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>every</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.tolocalestring": {"num": "23.1.3.29", "title": "#sec-array.prototype.tolocalestring Array.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )", "html": "<emu-clause id=\"sec-array.prototype.tolocalestring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.tolocalestring\">#sec-array.prototype.tolocalestring</span> Array.prototype.toLocaleString ( [ <var>reserved1</var> [ , <var>reserved2</var> ] ] )</h1>\n        <p>An ECMAScript implementation that includes the ECMA-402 Internationalization API must implement the <code>Array.prototype.toLocaleString</code> method as specified in the ECMA-402 specification. If an ECMAScript implementation does not include the ECMA-402 API the following specification of the <code>toLocaleString</code> method is used.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The first edition of ECMA-402 did not include a replacement specification for the <code>Array.prototype.toLocaleString</code> method.</p>\n        </div></emu-note>\n        <p>The meanings of the optional parameters to this method are defined in the ECMA-402 specification; implementations that do not include ECMA-402 support must not use those parameter positions for anything else.</p>\n        <p>When the <code>toLocaleString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>array</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>array</var>).</li><li>Let <var>separator</var> be the String value for the list-separator String appropriate for the <emu-xref href=\"#host-environment\"><a href=\"#host-environment\">host environment</a></emu-xref>'s current locale (this is derived in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> way).</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>If <var>k</var> &gt; 0, then<ol><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>separator</var>.</li></ol></li><li>Let <var>nextElement</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>nextElement</var> is not <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, then<ol><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>nextElement</var>, <emu-val>\"toLocaleString\"</emu-val>)).</li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>R</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The elements of the array are converted to Strings using their <code>toLocaleString</code> methods, and these Strings are then concatenated, separated by occurrences of a separator String that has been derived in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> locale-specific way. The result of calling this function is intended to be analogous to the result of <code>toString</code>, except that the result of this function is intended to be locale-specific.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>toLocaleString</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "10.5.6", "title": "#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>The [[DefineOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"defineProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[DefineOwnProperty]](<var>P</var>, <var>Desc</var>).</li></ol></li><li>Let <var>descObj</var> be <emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>Desc</var>).</li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>descObj</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Let <var>settingConfigFalse</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else, let <var>settingConfigFalse</var> be <emu-val>false</emu-val>.</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>Desc</var>, <var>targetDesc</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, and <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var> has a [[Writable]] field and <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[DefineOwnProperty]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[DefineOwnProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be added, if the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be non-configurable, unless there exists a corresponding non-configurable own property of the target object.\n          </li>\n          <li>\n            A non-configurable property cannot be non-writable, unless there exists a corresponding non-configurable, non-writable own property of the target object.\n          </li>\n          <li>\n            If a property has a corresponding target object property then applying the <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> of the property to the target object using [[DefineOwnProperty]] will not throw an exception.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-date.utc": {"num": "21.4.3.4", "title": "#sec-date.utc Date.UTC ( year [ , month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] ] )", "html": "<emu-clause id=\"sec-date.utc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.utc\">#sec-date.utc</span> Date.UTC ( <var>year</var> [ , <var>month</var> [ , <var>date</var> [ , <var>hours</var> [ , <var>minutes</var> [ , <var>seconds</var> [ , <var>ms</var> ] ] ] ] ] ] )</h1>\n        <p>When the <code>UTC</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>y</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>year</var>).</li><li>If <var>month</var> is present, let <var>m</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>month</var>); else let <var>m</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>date</var> is present, let <var>dt</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>date</var>); else let <var>dt</var> be <emu-val>1</emu-val><sub>&#120125;</sub>.</li><li>If <var>hours</var> is present, let <var>h</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>hours</var>); else let <var>h</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>minutes</var> is present, let <var>min</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>minutes</var>); else let <var>min</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>seconds</var> is present, let <var>s</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>seconds</var>); else let <var>s</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>ms</var> is present, let <var>milli</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>ms</var>); else let <var>milli</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, let <var>yr</var> be <emu-val>NaN</emu-val>.</li><li>Else,<ol><li>Let <var>yi</var> be !&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>y</var>).</li><li>If 0 &#8804; <var>yi</var> &#8804; 99, let <var>yr</var> be <emu-val>1900</emu-val><sub>&#120125;</sub> + <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>yi</var>); otherwise, let <var>yr</var> be <var>y</var>.</li></ol></li><li>Return <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(<var>yr</var>, <var>m</var>, <var>dt</var>), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(<var>h</var>, <var>min</var>, <var>s</var>, <var>milli</var>))).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>UTC</code> function is <emu-val>7</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>UTC</code> function differs from the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in two ways: it returns a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> as a Number, rather than creating a Date object, and it interprets the arguments in UTC rather than as local time.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-dataview-constructor": {"num": "25.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"DataView\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified DataView behaviour must include a <code>super</code> call to the DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.slice": {"num": "23.1.3.25", "title": "#sec-array.prototype.slice Array.prototype.slice ( start, end )", "html": "<emu-clause id=\"sec-array.prototype.slice\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.slice\">#sec-array.prototype.slice</span> Array.prototype.slice ( <var>start</var>, <var>end</var> )</h1>\n        <p>The <code>slice</code> method returns an array containing the elements of the array from element <var>start</var> up to, but not including, element <var>end</var> (or through the end of the array if <var>end</var> is <emu-val>undefined</emu-val>). If <var>start</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>start</var></emu-eqn> where <var>length</var> is the length of the array. If <var>end</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>end</var></emu-eqn> where <var>length</var> is the length of the array.</p>\n        <p>When the <code>slice</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>k</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>k</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>final</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Let <var>count</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>final</var> - <var>k</var>, 0).</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>count</var>).</li><li>Let <var>n</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>final</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>kValue</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li id=\"step-array-proto-slice-set-length\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>), <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The explicit setting of the <emu-val>\"length\"</emu-val> property of the result Array in step <emu-xref href=\"#step-array-proto-slice-set-length\"><a href=\"#step-array-proto-slice-set-length\" class=\"excluded-xref\" excluded-id=\"step-array-proto-slice-set-length\">#step-array-proto-slice-set-length</a></emu-xref> was necessary in previous editions of ECMAScript to ensure that its length was correct in situations where the trailing elements of the result Array were not present. Setting <emu-val>\"length\"</emu-val> became unnecessary starting in ES2015 when the result Array was initialized to its proper length rather than an empty Array but is carried forward to preserve backward compatibility.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>slice</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-%typedarray%.prototype.subarray": {"num": "23.2.3.27", "title": "#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.subarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.subarray\">#sec-%typedarray%.prototype.subarray</span> %TypedArray%.prototype.subarray ( <var>begin</var>, <var>end</var> )</h1>\n        <p>Returns a new <var>TypedArray</var> object whose element type is the same as this <var>TypedArray</var> and whose ArrayBuffer is the same as the ArrayBuffer of this <var>TypedArray</var>, referencing the elements at <var>begin</var>, inclusive, up to <var>end</var>, exclusive. If either <var>begin</var> or <var>end</var> is negative, it refers to an index from the end of the array, as opposed to from the beginning.</p>\n        <p>When the <code>subarray</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>Let <var>srcLength</var> be <var>O</var>.[[ArrayLength]].</li><li>Let <var>relativeBegin</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>begin</var>).</li><li>If <var>relativeBegin</var> is -&#8734;, let <var>beginIndex</var> be 0.</li><li>Else if <var>relativeBegin</var> &lt; 0, let <var>beginIndex</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>srcLength</var> + <var>relativeBegin</var>, 0).</li><li>Else, let <var>beginIndex</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeBegin</var>, <var>srcLength</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>srcLength</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>endIndex</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>endIndex</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>srcLength</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>endIndex</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>srcLength</var>).</li><li>Let <var>newLength</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>endIndex</var> - <var>beginIndex</var>, 0).</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>srcByteOffset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>beginByteOffset</var> be <var>srcByteOffset</var> + <var>beginIndex</var> &#215; <var>elementSize</var>.</li><li>Let <var>argumentsList</var> be &#171; <var>buffer</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>beginByteOffset</var>), <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>newLength</var>) &#187;.</li><li>Return ?&#160;<emu-xref aoid=\"TypedArraySpeciesCreate\"><a href=\"#typedarray-species-create\">TypedArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>argumentsList</var>).</li></ol></emu-alg>\n        <p>This function is not generic. The <emu-val>this</emu-val> value must be an object with a [[TypedArrayName]] internal slot.</p>\n      </emu-clause>\n\n      "}, "sec-string.prototype.matchall": {"num": "22.1.3.12", "title": "#sec-string.prototype.matchall String.prototype.matchAll ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.matchall\">#sec-string.prototype.matchall</span> String.prototype.matchAll ( <var>regexp</var> )</h1>\n        <p>Performs a regular expression match of the String representing the <emu-val>this</emu-val> value against <var>regexp</var> and returns an iterator. Each iteration result's value is an Array object containing the results of the match, or <emu-val>null</emu-val> if the String did not match.</p>\n        <p>When the <code>matchAll</code> method is called, the following steps are taken:</p>\n\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>regexp</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>regexp</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@matchAll</a></emu-xref>).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>\"g\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@matchAll</a></emu-xref>, &#171; <var>S</var> &#187;).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">The <code>matchAll</code> function is intentionally generic, it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">Similarly to <code>String.prototype.split</code>, <code>String.prototype.matchAll</code> is designed to typically act without mutating its inputs.</div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.some": {"num": "23.1.3.26", "title": "#sec-array.prototype.some Array.prototype.some ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.some\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.some\">#sec-array.prototype.some</span> Array.prototype.some ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>some</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order, until it finds one where <var>callbackfn</var> returns <emu-val>true</emu-val>. If such an element is found, <code>some</code> immediately returns <emu-val>true</emu-val>. Otherwise, <code>some</code> returns <emu-val>false</emu-val>. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>some</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>some</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>some</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time that <code>some</code> visits them; elements that are deleted after the call to <code>some</code> begins and before being visited are not visited. <code>some</code> acts like the \"exists\" quantifier in mathematics. In particular, for an empty array, it returns <emu-val>false</emu-val>.</p>\n        </div></emu-note>\n        <p>When the <code>some</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>some</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-set.prototype.foreach": {"num": "24.2.3.6", "title": "#sec-set.prototype.foreach Set.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-set.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype.foreach\">#sec-set.prototype.foreach</span> Set.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <p>When the <code>forEach</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>S</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>S</var>, [[SetData]]).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>S</var>.[[SetData]].</li><li>For each element <var>e</var> of <var>entries</var>, do<ol><li>If <var>e</var> is not <emu-const>empty</emu-const>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>e</var>, <var>e</var>, <var>S</var> &#187;).</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each value present in the set object, in value insertion order. <var>callbackfn</var> is called only for values of the Set which actually exist; it is not called for keys that have been deleted from the set.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the first two arguments are a value contained in the Set. The same value is passed for both arguments. The Set object being traversed is passed as the third argument.</p>\n          <p>The <var>callbackfn</var> is called with three arguments to be consistent with the call back functions used by <code>forEach</code> methods for Map and Array. For Sets, each item value is considered to be both the key and the value.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>Each value is normally visited only once. However, a value will be revisited if it is deleted after it has been visited and then re-added before the <code>forEach</code> call completes. Values that are deleted after the call to <code>forEach</code> begins and before being visited are not visited unless the value is added again before the <code>forEach</code> call completes. New values added after the call to <code>forEach</code> begins are visited.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weak-ref-constructor": {"num": "26.1.1", "title": "#sec-weak-ref-constructor The WeakRef Constructor", "html": "<emu-clause id=\"sec-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</span> The WeakRef Constructor</h1>\n      <p>The <dfn variants=\"WeakRefs\">WeakRef</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakRef%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"WeakRef\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new WeakRef object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified <code>WeakRef</code> behaviour must include a <code>super</code> call to the <code>WeakRef</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakRef.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref-target\"><h1><span class=\"secnum\">26.1.1.1</span>#sec-weak-ref-target WeakRef ( target )</h1>...</div></emu-clause>\n\n    "}, "sec-promisecapability-records": {"num": "27.2.1.1", "title": "#sec-promisecapability-records PromiseCapability Records", "html": "<emu-clause id=\"sec-promisecapability-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promisecapability-records\">#sec-promisecapability-records</span> PromiseCapability Records</h1>\n        <p>A <dfn variants=\"PromiseCapability Records\">PromiseCapability Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value used to encapsulate a promise object along with the functions that are capable of resolving or rejecting that promise object. PromiseCapability Records are produced by the <emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref> abstract operation.</p>\n        <p>PromiseCapability Records have the fields listed in <emu-xref href=\"#table-promisecapability-record-fields\"><a href=\"#table-promisecapability-record-fields\" class=\"excluded-xref\" excluded-id=\"table-promisecapability-record-fields\">#table-promisecapability-record-fields</a></emu-xref>.</p>\n        <emu-table id=\"table-promisecapability-record-fields\" caption=\"PromiseCapability Record Fields\" oldids=\"table-57\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-promisecapability-record-fields\">#table-promisecapability-record-fields</span>: <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> Fields</figcaption><span id=\"table-57\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Promise]]\n              </td>\n              <td>\n                An object\n              </td>\n              <td>\n                An object that is usable as a promise.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Resolve]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to resolve the given promise object.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Reject]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to reject the given promise object.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-ifabruptrejectpromise\"><h1><span class=\"secnum\">27.2.1.1.1</span>#sec-ifabruptrejectpromise IfAbruptRejectPromise ( value, capability )</h1>...</div></emu-clause>\n\n      "}, "sec-array.prototype.sort": {"num": "23.1.3.27", "title": "#sec-array.prototype.sort Array.prototype.sort ( comparefn )", "html": "<emu-clause id=\"sec-array.prototype.sort\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</span> Array.prototype.sort ( <var>comparefn</var> )</h1>\n        <p>The elements of this array are sorted. The sort must be stable (that is, elements that compare equal must remain in their original order). If <var>comparefn</var> is not <emu-val>undefined</emu-val>, it should be a function that accepts two arguments <var>x</var> and <var>y</var> and returns a negative Number if <var>x</var> &lt; <var>y</var>, a positive Number if <var>x</var> &gt; <var>y</var>, or a zero otherwise.</p>\n        <p>When the <code>sort</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li id=\"step-array-sort-comparefn\">If <var>comparefn</var> is not <emu-val>undefined</emu-val> and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>comparefn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li id=\"step-array-sort-len\">Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>obj</var>).</li><li>Let <var>items</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>obj</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>obj</var>, <var>Pk</var>).</li><li>Append <var>kValue</var> to <var>items</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Let <var>itemCount</var> be the number of elements in <var>items</var>.</li><li id=\"step-array-sort\">Sort <var>items</var> using an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> sequence of calls to <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref>. If any such call returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, stop before performing any further calls to <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> or steps in this algorithm and return that completion.</li><li>Let <var>j</var> be 0.</li><li>Repeat, while <var>j</var> &lt; <var>itemCount</var>,<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>j</var>)), <var>items</var>[<var>j</var>], <emu-val>true</emu-val>).</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li>Repeat, while <var>j</var> &lt; <var>len</var>,<ol><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>j</var>))).</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        <p>The <em>sort order</em> is the ordering, after completion of this function, of the <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer-indexed</a></emu-xref> property values of <var>obj</var> whose <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer indices</a></emu-xref> are less than <var>len</var>. The result of the <code>sort</code> function is then determined as follows:</p>\n        <p>The sort order is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> if any of the following conditions is true:</p>\n        <ul>\n          <li>\n            If <var>comparefn</var> is not <emu-val>undefined</emu-val> and is not a consistent comparison function for the elements of <var>items</var> (see below).\n          </li>\n          <li>\n            If <var>comparefn</var> is <emu-val>undefined</emu-val> and <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> does not act as a consistent comparison function.\n          </li>\n          <li>\n            If <var>comparefn</var> is <emu-val>undefined</emu-val> and all applications of <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>, to any specific value passed as an argument to <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref>, do not produce the same result.\n          </li>\n        </ul>\n        <p>Unless the sort order is specified above to be <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>, <var>items</var> must satisfy all of the following conditions after executing step <emu-xref href=\"#step-array-sort\"><a href=\"#step-array-sort\" class=\"excluded-xref\" excluded-id=\"step-array-sort\">#step-array-sort</a></emu-xref> of the algorithm above:</p>\n        <ul>\n          <li>\n            There must be some mathematical permutation &#960; of the non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integers</a></emu-xref> less than <var>itemCount</var>, such that for every non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>j</var> less than <var>itemCount</var>, the element <emu-eqn class=\"inline\">old[<var>j</var>]</emu-eqn> is exactly the same as <emu-eqn class=\"inline\">new[&#960;(<var>j</var>)]</emu-eqn>.\n          </li>\n          <li>\n            Then for all non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integers</a></emu-xref> <var>j</var> and <var>k</var>, each less than <var>itemCount</var>, if <emu-eqn class=\"inline\"><emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref>(old[<var>j</var>], old[<var>k</var>]) &lt; 0</emu-eqn> (see <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> below), then <emu-eqn class=\"inline\">&#960;(<var>j</var>) &lt; &#960;(<var>k</var>)</emu-eqn>.\n          </li>\n        </ul>\n        <p>Here the notation <emu-eqn class=\"inline\">old[<var>j</var>]</emu-eqn> is used to refer to <emu-eqn class=\"inline\"><var>items</var>[<var>j</var>]</emu-eqn> before step <emu-xref href=\"#step-array-sort\"><a href=\"#step-array-sort\" class=\"excluded-xref\" excluded-id=\"step-array-sort\">#step-array-sort</a></emu-xref> is executed, and the notation <emu-eqn class=\"inline\">new[<var>j</var>]</emu-eqn> to refer to <emu-eqn class=\"inline\"><var>items</var>[<var>j</var>]</emu-eqn> after step <emu-xref href=\"#step-array-sort\"><a href=\"#step-array-sort\" class=\"excluded-xref\" excluded-id=\"step-array-sort\">#step-array-sort</a></emu-xref> has been executed.</p>\n        <p>A function <var>comparefn</var> is a consistent comparison function for a set of values <var>S</var> if all of the requirements below are met for all values <var>a</var>, <var>b</var>, and <var>c</var> (possibly the same value) in the set <var>S</var>: The notation <emu-eqn class=\"inline\"><var>a</var> &lt;<sub>CF</sub> <var>b</var></emu-eqn> means <emu-eqn class=\"inline\"><var>comparefn</var>(<var>a</var>, <var>b</var>) &lt; 0</emu-eqn>; <emu-eqn class=\"inline\"><var>a</var> =<sub>CF</sub> <var>b</var></emu-eqn> means <emu-eqn class=\"inline\"><var>comparefn</var>(<var>a</var>, <var>b</var>) = 0</emu-eqn> (of either sign); and <emu-eqn class=\"inline\"><var>a</var> &gt;<sub>CF</sub> <var>b</var></emu-eqn> means <emu-eqn class=\"inline\"><var>comparefn</var>(<var>a</var>, <var>b</var>) &gt; 0</emu-eqn>.</p>\n        <ul>\n          <li>\n            Calling <var>comparefn</var>(<var>a</var>, <var>b</var>) always returns the same value <var>v</var> when given a specific pair of values <var>a</var> and <var>b</var> as its two arguments. Furthermore, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Number, and <var>v</var> is not <emu-val>NaN</emu-val>. Note that this implies that exactly one of <var>a</var> &lt;<sub>CF</sub> <var>b</var>, <var>a</var> =<sub>CF</sub> <var>b</var>, and <var>a</var> &gt;<sub>CF</sub> <var>b</var> will be true for a given pair of <var>a</var> and <var>b</var>.\n          </li>\n          <li>\n            Calling <var>comparefn</var>(<var>a</var>, <var>b</var>) does not modify <var>obj</var> or any object on <var>obj</var>'s prototype chain.\n          </li>\n          <li>\n            <var>a</var> =<sub>CF</sub> <var>a</var> (reflexivity)\n          </li>\n          <li>\n            If <var>a</var> =<sub>CF</sub> <var>b</var>, then <var>b</var> =<sub>CF</sub> <var>a</var> (symmetry)\n          </li>\n          <li>\n            If <var>a</var> =<sub>CF</sub> <var>b</var> and <var>b</var> =<sub>CF</sub> <var>c</var>, then <var>a</var> =<sub>CF</sub> <var>c</var> (transitivity of =<sub>CF</sub>)\n          </li>\n          <li>\n            If <var>a</var> &lt;<sub>CF</sub> <var>b</var> and <var>b</var> &lt;<sub>CF</sub> <var>c</var>, then <var>a</var> &lt;<sub>CF</sub> <var>c</var> (transitivity of &lt;<sub>CF</sub>)\n          </li>\n          <li>\n            If <var>a</var> &gt;<sub>CF</sub> <var>b</var> and <var>b</var> &gt;<sub>CF</sub> <var>c</var>, then <var>a</var> &gt;<sub>CF</sub> <var>c</var> (transitivity of &gt;<sub>CF</sub>)\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The above conditions are necessary and sufficient to ensure that <var>comparefn</var> divides the set <var>S</var> into equivalence classes and that these equivalence classes are totally ordered.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>sort</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-sortcompare\"><h1><span class=\"secnum\">23.1.3.27.1</span>#sec-sortcompare SortCompare ( x, y )</h1>...</div></emu-clause>\n\n      "}, "sec-execution-contexts": {"num": "9.4", "title": "#sec-execution-contexts Execution Contexts", "html": "<emu-clause id=\"sec-execution-contexts\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</span> Execution Contexts</h1>\n    <p>An <dfn variants=\"execution contexts\">execution context</dfn> is a specification device that is used to track the runtime evaluation of code by an ECMAScript implementation. At any point in time, there is at most one execution context per <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> that is actually executing code. This is known as the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <dfn id=\"running-execution-context\" variants=\"running execution contexts\">running execution context</dfn>. All references to the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> in this specification denote the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</p>\n    <p>The <dfn id=\"execution-context-stack\" variants=\"execution context stacks\">execution context stack</dfn> is used to track execution contexts. The <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> is always the top element of this stack. A new execution context is created whenever control is transferred from the executable code associated with the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> to executable code that is not associated with that execution context. The newly created execution context is pushed onto the stack and becomes the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n    <p>An execution context contains whatever implementation specific state is necessary to track the execution progress of its associated code. Each execution context has at least the state components listed in <emu-xref href=\"#table-state-components-for-all-execution-contexts\"><a href=\"#table-state-components-for-all-execution-contexts\" class=\"excluded-xref\" excluded-id=\"table-state-components-for-all-execution-contexts\">#table-state-components-for-all-execution-contexts</a></emu-xref>.</p>\n    <emu-table id=\"table-state-components-for-all-execution-contexts\" caption=\"State Components for All Execution Contexts\" oldids=\"table-22\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-state-components-for-all-execution-contexts\">#table-state-components-for-all-execution-contexts</span>: State Components for All Execution Contexts</figcaption><span id=\"table-22\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Component\n          </th>\n          <th>\n            Purpose\n          </th>\n        </tr>\n        <tr>\n          <td>\n            code evaluation state\n          </td>\n          <td>\n            Any state needed to perform, suspend, and resume evaluation of the code associated with this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Function\n          </td>\n          <td>\n            If this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is evaluating the code of a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, then the value of this component is that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. If the context is evaluating the code of a <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> or <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>, the value is <emu-val>null</emu-val>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref>\n          </td>\n          <td>\n            The <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> from which associated code accesses ECMAScript resources.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            ScriptOrModule\n          </td>\n          <td>\n            The <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> or <emu-xref href=\"#script-record\"><a href=\"#script-record\">Script Record</a></emu-xref> from which associated code originates. If there is no originating script or module, as is the case for the original <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> created in <emu-xref aoid=\"InitializeHostDefinedRealm\"><a href=\"#sec-initializehostdefinedrealm\">InitializeHostDefinedRealm</a></emu-xref>, the value is <emu-val>null</emu-val>.\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>Evaluation of code by the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> may be suspended at various points defined within this specification. Once the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> has been suspended a different execution context may become the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> and commence evaluating its code. At some later time a suspended execution context may again become the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> and continue evaluating its code at the point where it had previously been suspended. Transition of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> status among execution contexts usually occurs in stack-like last-in/first-out manner. However, some ECMAScript features require non-LIFO transitions of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n    <p>The value of the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> component of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> is also called <dfn id=\"current-realm\">the current Realm Record</dfn>. The value of the Function component of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> is also called the <dfn id=\"active-function-object\">active function object</dfn>.</p>\n    <p>Execution contexts for ECMAScript code have the additional state components listed in <emu-xref href=\"#table-additional-state-components-for-ecmascript-code-execution-contexts\"><a href=\"#table-additional-state-components-for-ecmascript-code-execution-contexts\" class=\"excluded-xref\" excluded-id=\"table-additional-state-components-for-ecmascript-code-execution-contexts\">#table-additional-state-components-for-ecmascript-code-execution-contexts</a></emu-xref>.</p>\n    <emu-table id=\"table-additional-state-components-for-ecmascript-code-execution-contexts\" caption=\"Additional State Components for ECMAScript Code Execution Contexts\" oldids=\"table-23\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-state-components-for-ecmascript-code-execution-contexts\">#table-additional-state-components-for-ecmascript-code-execution-contexts</span>: Additional State Components for ECMAScript Code Execution Contexts</figcaption><span id=\"table-23\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Component\n          </th>\n          <th>\n            Purpose\n          </th>\n        </tr>\n        <tr>\n          <td>\n            LexicalEnvironment\n          </td>\n          <td>\n            Identifies the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> used to resolve identifier references made by code within this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            VariableEnvironment\n          </td>\n          <td>\n            Identifies the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that holds bindings created by <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>s within this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            PrivateEnvironment\n          </td>\n          <td>\n            Identifies the <emu-xref href=\"#privateenvironment-record\"><a href=\"#privateenvironment-record\">PrivateEnvironment Record</a></emu-xref> that holds <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Names</a></emu-xref> created by <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt>s in the nearest containing class. <emu-val>null</emu-val> if there is no containing class.\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>The LexicalEnvironment and VariableEnvironment components of an execution context are always <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Records</a></emu-xref>.</p>\n    <p>Execution contexts representing the evaluation of generator objects have the additional state components listed in <emu-xref href=\"#table-additional-state-components-for-generator-execution-contexts\"><a href=\"#table-additional-state-components-for-generator-execution-contexts\" class=\"excluded-xref\" excluded-id=\"table-additional-state-components-for-generator-execution-contexts\">#table-additional-state-components-for-generator-execution-contexts</a></emu-xref>.</p>\n    <emu-table id=\"table-additional-state-components-for-generator-execution-contexts\" caption=\"Additional State Components for Generator Execution Contexts\" oldids=\"table-24\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-state-components-for-generator-execution-contexts\">#table-additional-state-components-for-generator-execution-contexts</span>: Additional State Components for Generator Execution Contexts</figcaption><span id=\"table-24\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Component\n          </th>\n          <th>\n            Purpose\n          </th>\n        </tr>\n        <tr>\n          <td>\n            Generator\n          </td>\n          <td>\n            The generator object that this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is evaluating.\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In most situations only the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> (the top of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>) is directly manipulated by algorithms within this specification. Hence when the terms &#8220;LexicalEnvironment&#8221;, and &#8220;VariableEnvironment&#8221; are used without qualification they are in reference to those components of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n    <p>An execution context is purely a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation. It is impossible for ECMAScript code to directly access or observe an execution context.</p>\n\n    <div id=\"excluded-sec-getactivescriptormodule\"><h1><span class=\"secnum\">9.4.1</span>#sec-getactivescriptormodule GetActiveScriptOrModule ( )</h1>...</div><div id=\"excluded-sec-resolvebinding\"><h1><span class=\"secnum\">9.4.2</span>#sec-resolvebinding ResolveBinding ( name [ , env ] )</h1>...</div><div id=\"excluded-sec-getthisenvironment\"><h1><span class=\"secnum\">9.4.3</span>#sec-getthisenvironment GetThisEnvironment ( )</h1>...</div><div id=\"excluded-sec-resolvethisbinding\"><h1><span class=\"secnum\">9.4.4</span>#sec-resolvethisbinding ResolveThisBinding ( )</h1>...</div><div id=\"excluded-sec-getnewtarget\"><h1><span class=\"secnum\">9.4.5</span>#sec-getnewtarget GetNewTarget ( )</h1>...</div><div id=\"excluded-sec-getglobalobject\"><h1><span class=\"secnum\">9.4.6</span>#sec-getglobalobject GetGlobalObject ( )</h1>...</div></emu-clause>\n\n  "}, "sec-proxy-object-internal-methods-and-internal-slots-delete-p": {"num": "10.5.10", "title": "#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">#sec-proxy-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>The [[Delete]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"deleteProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Delete]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Delete]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as an own property of the target object and the target object is non-extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-allocatearraybuffer": {"num": "25.1.2.1", "title": "#sec-allocatearraybuffer AllocateArrayBuffer ( constructor, byteLength )", "html": "<emu-clause id=\"sec-allocatearraybuffer\" aoid=\"AllocateArrayBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatearraybuffer\">#sec-allocatearraybuffer</span> AllocateArrayBuffer ( <var>constructor</var>, <var>byteLength</var> )</h1>\n        <p>The abstract operation AllocateArrayBuffer takes arguments <var>constructor</var> and <var>byteLength</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It is used to create an ArrayBuffer object. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>constructor</var>, <emu-val>\"%ArrayBuffer.prototype%\"</emu-val>, &#171; [[ArrayBufferData]], [[ArrayBufferByteLength]], [[ArrayBufferDetachKey]] &#187;).</li><li>Let <var>block</var> be ?&#160;<emu-xref aoid=\"CreateByteDataBlock\"><a href=\"#sec-createbytedatablock\">CreateByteDataBlock</a></emu-xref>(<var>byteLength</var>).</li><li>Set <var>obj</var>.[[ArrayBufferData]] to <var>block</var>.</li><li>Set <var>obj</var>.[[ArrayBufferByteLength]] to <var>byteLength</var>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-array.prototype.filter": {"num": "23.1.3.7", "title": "#sec-array.prototype.filter Array.prototype.filter ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.filter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.filter\">#sec-array.prototype.filter</span> Array.prototype.filter ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>filter</code> calls <var>callbackfn</var> once for each element in the array, in ascending order, and constructs a new array of all the values for which <var>callbackfn</var> returns <emu-val>true</emu-val>. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>filter</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>filter</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>filter</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed their value as passed to <var>callbackfn</var> will be the value at the time <code>filter</code> visits them; elements that are deleted after the call to <code>filter</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>filter</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, 0).</li><li>Let <var>k</var> be 0.</li><li>Let <var>to</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>selected</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>selected</var> is <emu-val>true</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>to</var>)), <var>kValue</var>).</li><li>Set <var>to</var> to <var>to</var> + 1.</li></ol></li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>filter</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-isextensible": {"num": "10.5.3", "title": "#sec-proxy-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">#sec-proxy-object-internal-methods-and-internal-slots-isextensible</span> [[IsExtensible]] ( )</h1>\n      <p>The [[IsExtensible]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"isExtensible\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>Let <var>targetResult</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>booleanTrapResult</var>, <var>targetResult</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[IsExtensible]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[IsExtensible]] is a Boolean value.\n          </li>\n          <li>\n            [[IsExtensible]] applied to the proxy object must return the same value as [[IsExtensible]] applied to the proxy object's target object with the same argument.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.foreach": {"num": "23.1.3.12", "title": "#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</span> Array.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>forEach</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>forEach</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>forEach</code> visits them; elements that are deleted after the call to <code>forEach</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>forEach</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>forEach</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-settypedarrayfromarraylike": {"num": "23.2.3.23.2", "title": "#sec-settypedarrayfromarraylike SetTypedArrayFromArrayLike ( target, targetOffset, source )", "html": "<emu-clause id=\"sec-settypedarrayfromarraylike\" oldids=\"sec-%typedarray%.prototype.set-array-offset\" aoid=\"SetTypedArrayFromArrayLike\"><span id=\"sec-%typedarray%.prototype.set-array-offset\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-settypedarrayfromarraylike\">#sec-settypedarrayfromarraylike</span> SetTypedArrayFromArrayLike ( <var>target</var>, <var>targetOffset</var>, <var>source</var> )</h1>\n          <p>The abstract operation SetTypedArrayFromArrayLike takes arguments <var>target</var> (a TypedArray object), <var>targetOffset</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> or +&#8734;), and <var>source</var> (an ECMAScript value other than a TypedArray object). It sets multiple values in <var>target</var>, starting at index <var>targetOffset</var>, reading the values from <var>source</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>source</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> other than an Object with a [[TypedArrayName]] internal slot.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>src</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>source</var>).</li><li>Let <var>srcLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>src</var>).</li><li>If <var>targetOffset</var> is +&#8734;, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>k</var> be 0.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>src</var>, <var>Pk</var>).</li><li>If <var>target</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, set <var>value</var> to ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, set <var>value</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-date.prototype.tostring": {"num": "21.4.4.41", "title": "#sec-date.prototype.tostring Date.prototype.toString ( )", "html": "<emu-clause id=\"sec-date.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</span> Date.prototype.toString ( )</h1>\n        <p>The following steps are performed:</p>\n        <emu-alg><ol><li>Let <var>tv</var> be ?&#160;<emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>tv</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>For any Date object <code>d</code> such that <code>d.[[DateValue]]</code> is evenly divisible by 1000, the result of <code>Date.parse(d.toString())</code> = <code>d.valueOf()</code>. See <emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\" class=\"excluded-xref\" excluded-id=\"sec-date.parse\">#sec-date.parse</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>toString</code> function is not generic; it throws a <emu-val>TypeError</emu-val> exception if its <emu-val>this</emu-val> value is not a Date object. Therefore, it cannot be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-timestring\"><h1><span class=\"secnum\">21.4.4.41.1</span>#sec-timestring TimeString ( tv )</h1>...</div><div id=\"excluded-sec-datestring\"><h1><span class=\"secnum\">21.4.4.41.2</span>#sec-datestring DateString ( tv )</h1>...</div><div id=\"excluded-sec-timezoneestring\"><h1><span class=\"secnum\">21.4.4.41.3</span>#sec-timezoneestring TimeZoneString ( tv )</h1>...</div><div id=\"excluded-sec-todatestring\"><h1><span class=\"secnum\">21.4.4.41.4</span>#sec-todatestring ToDateString ( tv )</h1>...</div></emu-clause>\n\n      "}, "sec-weakset-objects": {"num": "24.4", "title": "#sec-weakset-objects WeakSet Objects", "html": "<emu-clause id=\"sec-weakset-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-objects\">#sec-weakset-objects</span> WeakSet Objects</h1>\n    <p>WeakSet objects are collections of objects. A distinct object may only occur once as an element of a WeakSet's collection. A WeakSet may be queried to see if it contains a specific object, but no mechanism is provided for enumerating the objects it holds. In certain conditions, objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> are removed as WeakSet elements, as described in <emu-xref href=\"#sec-weakref-execution\"><a href=\"#sec-weakref-execution\" class=\"excluded-xref\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</a></emu-xref>.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time an object contained in a WeakSet becomes inaccessible and the time when the object is removed from the WeakSet. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to determine if a WeakSet contains a particular object that does not require the observer to present the observed object.</p>\n    <p>WeakSet objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this WeakSet objects specification is only intended to describe the required observable semantics of WeakSet objects. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>See the NOTE in <emu-xref href=\"#sec-weakmap-objects\"><a href=\"#sec-weakmap-objects\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakset-constructor\"><h1><span class=\"secnum\">24.4.1</span>#sec-weakset-constructor The WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-constructor\"><h1><span class=\"secnum\">24.4.2</span>#sec-properties-of-the-weakset-constructor Properties of the WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-prototype-object\"><h1><span class=\"secnum\">24.4.3</span>#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakset-instances\"><h1><span class=\"secnum\">24.4.4</span>#sec-properties-of-weakset-instances Properties of WeakSet Instances</h1>...</div></emu-clause>\n"}, "sec-lengthofarraylike": {"num": "7.3.18", "title": "#sec-lengthofarraylike LengthOfArrayLike ( obj )", "html": "<emu-clause id=\"sec-lengthofarraylike\" aoid=\"LengthOfArrayLike\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lengthofarraylike\">#sec-lengthofarraylike</span> LengthOfArrayLike ( <var>obj</var> )</h1>\n      <p>The abstract operation LengthOfArrayLike takes argument <var>obj</var>. It returns the value of the <emu-val>\"length\"</emu-val> property of an array-like object (as a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>obj</var>) is Object.</li><li>Return <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>))).</li></ol></emu-alg>\n      <p>An <dfn variants=\"array-like objects\">array-like object</dfn> is any object for which this operation returns an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> rather than an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        Typically, an array-like object would also have some properties with <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> names. However, that is not a requirement of this definition.\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        Array objects and String objects are examples of array-like objects.\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-preventextensions": {"num": "10.5.4", "title": "#sec-proxy-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">#sec-proxy-object-internal-methods-and-internal-slots-preventextensions</span> [[PreventExtensions]] ( )</h1>\n      <p>The [[PreventExtensions]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"preventExtensions\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[PreventExtensions]]().</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[PreventExtensions]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[PreventExtensions]] is a Boolean value.\n          </li>\n          <li>\n            [[PreventExtensions]] applied to the proxy object only returns <emu-val>true</emu-val> if [[IsExtensible]] applied to the proxy object's target object is <emu-val>false</emu-val>.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.unshift": {"num": "23.1.3.31", "title": "#sec-array.prototype.unshift Array.prototype.unshift ( ...items )", "html": "<emu-clause id=\"sec-array.prototype.unshift\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.unshift\">#sec-array.prototype.unshift</span> Array.prototype.unshift ( ...<var>items</var> )</h1>\n        <p>The arguments are prepended to the start of the array, such that their order within the array is the same as the order in which they appear in the argument list.</p>\n        <p>When the <code>unshift</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>argCount</var> be the number of elements in <var>items</var>.</li><li>If <var>argCount</var> &gt; 0, then<ol><li>If <var>len</var> + <var>argCount</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be <var>len</var>.</li><li>Repeat, while <var>k</var> &gt; 0,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> - 1)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>argCount</var> - 1)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Let <var>j</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>j</var>), <var>E</var>, <emu-val>true</emu-val>).</li><li>Set <var>j</var> to <var>j</var> + <emu-val>1</emu-val><sub>&#120125;</sub>.</li></ol></li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> + <var>argCount</var>), <emu-val>true</emu-val>).</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> + <var>argCount</var>).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>unshift</code> method is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>unshift</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-built-in-function-objects-call-thisargument-argumentslist": {"num": "10.3.1", "title": "#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">#sec-built-in-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>callerContext</var> is not already suspended, suspend <var>callerContext</var>.</li><li>Let <var>calleeContext</var> be a new <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>calleeContext</var> to <var>F</var>.</li><li>Let <var>calleeRealm</var> be <var>F</var>.[[Realm]].</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>calleeContext</var> to <var>calleeRealm</var>.</li><li>Set the ScriptOrModule of <var>calleeContext</var> to <emu-val>null</emu-val>.</li><li>Perform any necessary <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> initialization of <var>calleeContext</var>.</li><li>Push <var>calleeContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li id=\"step-call-builtin-function-result\">Let <var>result</var> be the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> that is the result of evaluating <var>F</var> in a manner that conforms to the specification of <var>F</var>. <var>thisArgument</var> is the <emu-val>this</emu-val> value, <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>.</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> it must not be destroyed if it has been suspended and retained by an accessible generator object for later resumption.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots": {"num": "10.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots Proxy Object Internal Methods and Internal Slots", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots\">#sec-proxy-object-internal-methods-and-internal-slots</span> Proxy Object Internal Methods and Internal Slots</h1>\n    <p>A proxy object is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> whose essential internal methods are partially implemented using ECMAScript code. Every proxy object has an internal slot called [[ProxyHandler]]. The value of [[ProxyHandler]] is an object, called the proxy's <em>handler object</em>, or <emu-val>null</emu-val>. Methods (see <emu-xref href=\"#table-proxy-handler-methods\"><a href=\"#table-proxy-handler-methods\" class=\"excluded-xref\" excluded-id=\"table-proxy-handler-methods\">#table-proxy-handler-methods</a></emu-xref>) of a handler object may be used to augment the implementation for one or more of the proxy object's internal methods. Every proxy object also has an internal slot called [[ProxyTarget]] whose value is either an object or the <emu-val>null</emu-val> value. This object is called the proxy's <em>target object</em>.</p>\n\n    <p>An object is a <dfn id=\"proxy-exotic-object\" variants=\"Proxy exotic objects\">Proxy exotic object</dfn> if its essential internal methods (including [[Call]] and [[Construct]], if applicable) use the definitions in this section. These internal methods are installed in <emu-xref aoid=\"ProxyCreate\"><a href=\"#sec-proxycreate\">ProxyCreate</a></emu-xref>.</p>\n\n    <emu-table id=\"table-proxy-handler-methods\" caption=\"Proxy Handler Methods\" oldids=\"table-30\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-proxy-handler-methods\">#table-proxy-handler-methods</span>: Proxy Handler Methods</figcaption><span id=\"table-30\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Internal Method\n          </th>\n          <th>\n            Handler Method\n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[GetPrototypeOf]]\n          </td>\n          <td>\n            <code>getPrototypeOf</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[SetPrototypeOf]]\n          </td>\n          <td>\n            <code>setPrototypeOf</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[IsExtensible]]\n          </td>\n          <td>\n            <code>isExtensible</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[PreventExtensions]]\n          </td>\n          <td>\n            <code>preventExtensions</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[GetOwnProperty]]\n          </td>\n          <td>\n            <code>getOwnPropertyDescriptor</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[DefineOwnProperty]]\n          </td>\n          <td>\n            <code>defineProperty</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HasProperty]]\n          </td>\n          <td>\n            <code>has</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Get]]\n          </td>\n          <td>\n            <code>get</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Set]]\n          </td>\n          <td>\n            <code>set</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Delete]]\n          </td>\n          <td>\n            <code>deleteProperty</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[OwnPropertyKeys]]\n          </td>\n          <td>\n            <code>ownKeys</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Call]]\n          </td>\n          <td>\n            <code>apply</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Construct]]\n          </td>\n          <td>\n            <code>construct</code>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>When a handler method is called to provide the implementation of a proxy object internal method, the handler method is passed the proxy's target object as a parameter. A proxy's handler object does not necessarily have a method corresponding to every essential internal method. Invoking an internal method on the proxy results in the invocation of the corresponding internal method on the proxy's target object if the handler object does not have a method corresponding to the internal trap.</p>\n    <p>The [[ProxyHandler]] and [[ProxyTarget]] internal slots of a proxy object are always initialized when the object is created and typically may not be modified. Some proxy objects are created in a manner that permits them to be subsequently <em>revoked</em>. When a proxy is revoked, its [[ProxyHandler]] and [[ProxyTarget]] internal slots are set to <emu-val>null</emu-val> causing subsequent invocations of internal methods on that proxy object to throw a <emu-val>TypeError</emu-val> exception.</p>\n    <p>Because proxy objects permit the implementation of internal methods to be provided by arbitrary ECMAScript code, it is possible to define a proxy object whose handler methods violates the invariants defined in <emu-xref href=\"#sec-invariants-of-the-essential-internal-methods\"><a href=\"#sec-invariants-of-the-essential-internal-methods\" class=\"excluded-xref\" excluded-id=\"sec-invariants-of-the-essential-internal-methods\">#sec-invariants-of-the-essential-internal-methods</a></emu-xref>. Some of the internal method invariants defined in <emu-xref href=\"#sec-invariants-of-the-essential-internal-methods\"><a href=\"#sec-invariants-of-the-essential-internal-methods\" class=\"excluded-xref\" excluded-id=\"sec-invariants-of-the-essential-internal-methods\">#sec-invariants-of-the-essential-internal-methods</a></emu-xref> are essential integrity invariants. These invariants are explicitly enforced by the proxy object internal methods specified in this section. An ECMAScript implementation must be robust in the presence of all possible invariant violations.</p>\n    <p>In the following algorithm descriptions, assume <var>O</var> is an ECMAScript proxy object, <var>P</var> is a property key value, <var>V</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> and <var>Desc</var> is a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> record.</p>\n\n    <div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\"><h1><span class=\"secnum\">10.5.1</span>#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\"><h1><span class=\"secnum\">10.5.2</span>#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-isextensible\"><h1><span class=\"secnum\">10.5.3</span>#sec-proxy-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-preventextensions\"><h1><span class=\"secnum\">10.5.4</span>#sec-proxy-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\"><h1><span class=\"secnum\">10.5.5</span>#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\"><h1><span class=\"secnum\">10.5.6</span>#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\"><h1><span class=\"secnum\">10.5.7</span>#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\"><h1><span class=\"secnum\">10.5.8</span>#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\"><h1><span class=\"secnum\">10.5.9</span>#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-delete-p\"><h1><span class=\"secnum\">10.5.10</span>#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\"><h1><span class=\"secnum\">10.5.11</span>#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\"><h1><span class=\"secnum\">10.5.12</span>#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">10.5.13</span>#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-proxycreate\"><h1><span class=\"secnum\">10.5.14</span>#sec-proxycreate ProxyCreate ( target, handler )</h1>...</div></emu-clause>\n"}, "sec-properties-of-the-proxy-constructor": {"num": "28.2.2", "title": "#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor", "html": "<emu-clause id=\"sec-properties-of-the-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-proxy-constructor\">#sec-properties-of-the-proxy-constructor</span> Properties of the Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property because <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic objects</a></emu-xref> do not have a [[Prototype]] internal slot that requires initialization.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy.revocable\"><h1><span class=\"secnum\">28.2.2.1</span>#sec-proxy.revocable Proxy.revocable ( target, handler )</h1>...</div></emu-clause>\n  "}, "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget": {"num": "10.5.13", "title": "#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>) and <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>.</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"construct\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>target</var>, <var>argumentsList</var>, <var>newTarget</var>).</li></ol></li><li>Let <var>argArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>argumentsList</var>).</li><li>Let <var>newObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>argArray</var>, <var>newTarget</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newObj</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>newObj</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> only has a [[Construct]] internal method if the initial value of its [[ProxyTarget]] internal slot is an object that has a [[Construct]] internal method.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>[[Construct]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Construct]] must be an Object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.indexof": {"num": "23.1.3.14", "title": "#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.indexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.indexof\">#sec-array.prototype.indexof</span> Array.prototype.indexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <p><code>indexOf</code> compares <var>searchElement</var> to the elements of the array, in ascending order, using the <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref> algorithm, and if found at one or more indices, returns the smallest such index; otherwise, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The optional second argument <var>fromIndex</var> defaults to <emu-val>+0</emu-val><sub>&#120125;</sub> (i.e. the whole array is searched). If it is greater than or equal to the length of the array, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned, i.e. the array will not be searched. If it is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, the whole array will be searched.</p>\n        </div></emu-note>\n        <p>When the <code>indexOf</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>fromIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>fromIndex</var> is <emu-val>undefined</emu-val>, then <var>n</var> is 0.</li><li>If <var>n</var> is +&#8734;, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>Else if <var>n</var> is -&#8734;, set <var>n</var> to 0.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <var>n</var>.</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li><li>If <var>k</var> &lt; 0, set <var>k</var> to 0.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>Let <var>same</var> be <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref>(<var>searchElement</var>, <var>elementK</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>indexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.join": {"num": "23.1.3.15", "title": "#sec-array.prototype.join Array.prototype.join ( separator )", "html": "<emu-clause id=\"sec-array.prototype.join\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.join\">#sec-array.prototype.join</span> Array.prototype.join ( <var>separator</var> )</h1>\n        <p>The elements of the array are converted to Strings, and these Strings are then concatenated, separated by occurrences of the <var>separator</var>. If no separator is provided, a single comma is used as the separator.</p>\n        <p>When the <code>join</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>separator</var> is <emu-val>undefined</emu-val>, let <var>sep</var> be the single-element String <emu-val>\",\"</emu-val>.</li><li>Else, let <var>sep</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>separator</var>).</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>If <var>k</var> &gt; 0, set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>sep</var>.</li><li>Let <var>element</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>element</var> is <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, let <var>next</var> be the empty String; otherwise, let <var>next</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>element</var>).</li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>next</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>R</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>join</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-initializetypedarrayfromarraylike": {"num": "23.2.5.1.5", "title": "#sec-initializetypedarrayfromarraylike InitializeTypedArrayFromArrayLike ( O, arrayLike )", "html": "<emu-clause id=\"sec-initializetypedarrayfromarraylike\" aoid=\"InitializeTypedArrayFromArrayLike\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromarraylike\">#sec-initializetypedarrayfromarraylike</span> InitializeTypedArrayFromArrayLike ( <var>O</var>, <var>arrayLike</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromArrayLike takes arguments <var>O</var> (a TypedArray object) and <var>arrayLike</var> (an Object that is neither a TypedArray object nor an ArrayBuffer object). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-allocatetypedarraybuffer": {"num": "23.2.5.1.6", "title": "#sec-allocatetypedarraybuffer AllocateTypedArrayBuffer ( O, length )", "html": "<emu-clause id=\"sec-allocatetypedarraybuffer\" aoid=\"AllocateTypedArrayBuffer\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatetypedarraybuffer\">#sec-allocatetypedarraybuffer</span> AllocateTypedArrayBuffer ( <var>O</var>, <var>length</var> )</h1>\n          <p>The abstract operation AllocateTypedArrayBuffer takes arguments <var>O</var> (a TypedArray object) and <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It allocates and associates an ArrayBuffer with <var>O</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[ViewedArrayBuffer]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var>.[[ViewedArrayBuffer]] is <emu-val>undefined</emu-val>.</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>length</var>.</li><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>, <var>byteLength</var>).</li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>length</var>.</li><li>Return <var>O</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-array.prototype-@@unscopables": {"num": "23.1.3.34", "title": "#sec-array.prototype-@@unscopables Array.prototype [ @@unscopables ]", "html": "<emu-clause id=\"sec-array.prototype-@@unscopables\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype-@@unscopables\">#sec-array.prototype-@@unscopables</span> Array.prototype [ @@unscopables ]</h1>\n        <p>The initial value of the <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is an object created by the following steps:</p>\n        <emu-alg><ol><li>Let <var>unscopableList</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"copyWithin\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"entries\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"fill\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"find\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"findIndex\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"flat\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"flatMap\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"includes\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"keys\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"values\"</emu-val>, <emu-val>true</emu-val>).</li><li>Return <var>unscopableList</var>.</li></ol></emu-alg>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The own property names of this object are property names that were not included as standard properties of <code>Array.prototype</code> prior to the ECMAScript 2015 specification. These names are ignored for <code>with</code> statement binding purposes in order to preserve the behaviour of existing code that might use one of these names as a binding in an outer scope that is shadowed by a <code>with</code> statement whose binding object is an Array object.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-array.prototype.push": {"num": "23.1.3.20", "title": "#sec-array.prototype.push Array.prototype.push ( ...items )", "html": "<emu-clause id=\"sec-array.prototype.push\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.push\">#sec-array.prototype.push</span> Array.prototype.push ( ...<var>items</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The arguments are appended to the end of the array, in the order in which they appear. The new length of the array is returned as the result of the call.</p>\n        </div></emu-note>\n        <p>When the <code>push</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>argCount</var> be the number of elements in <var>items</var>.</li><li>If <var>len</var> + <var>argCount</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var>)), <var>E</var>, <emu-val>true</emu-val>).</li><li>Set <var>len</var> to <var>len</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var>), <emu-val>true</emu-val>).</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var>).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>push</code> method is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>push</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-instance-prototype": {"num": "27.4.4.3", "title": "#sec-asyncgeneratorfunction-instance-prototype prototype", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instance-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instance-prototype\">#sec-asyncgeneratorfunction-instance-prototype</span> prototype</h1>\n        <p>Whenever an AsyncGeneratorFunction instance is created another <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> is also created and is the initial value of the async generator function's <emu-val>\"prototype\"</emu-val> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created AsyncGenerator object when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike function instances, the object that is the value of the an AsyncGeneratorFunction's <emu-val>\"prototype\"</emu-val> property does not have a <emu-val>\"constructor\"</emu-val> property whose value is the AsyncGeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-properties-of-date-instances": {"num": "21.4.5", "title": "#sec-properties-of-date-instances Properties of Date Instances", "html": "<emu-clause id=\"sec-properties-of-date-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-date-instances\">#sec-properties-of-date-instances</span> Properties of Date Instances</h1>\n      <p>Date instances are <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary objects</a></emu-xref> that inherit properties from the <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">Date prototype object</a></emu-xref>. Date instances also have a [[DateValue]] internal slot. The [[DateValue]] internal slot is the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> represented by <emu-xref href=\"#this-Date-object\"><a href=\"#this-Date-object\">this Date object</a></emu-xref>.</p>\n    </emu-clause>\n  "}, "sec-map-constructor": {"num": "24.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Map\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Map behaviour must include a <code>super</code> call to the Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">24.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">24.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "24.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakMap\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified WeakMap behaviour must include a <code>super</code> call to the WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">24.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-toprimitive": {"num": "7.1.1", "title": "#sec-toprimitive ToPrimitive ( input [ , preferredType ] )", "html": "<emu-clause id=\"sec-toprimitive\" oldids=\"table-9\" aoid=\"ToPrimitive\"><span id=\"table-9\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toprimitive\">#sec-toprimitive</span> ToPrimitive ( <var>input</var> [ , <var>preferredType</var> ] )</h1>\n      <p>The abstract operation ToPrimitive takes argument <var>input</var> and optional argument <var>preferredType</var>. It converts its <var>input</var> argument to a non-Object type. If an object is capable of converting to more than one primitive type, it may use the optional hint <var>preferredType</var> to favour that type. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>input</var> is an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>input</var>) is Object, then<ol><li>Let <var>exoticToPrim</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>input</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toPrimitive</a></emu-xref>).</li><li>If <var>exoticToPrim</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <var>preferredType</var> is not present, let <var>hint</var> be <emu-val>\"default\"</emu-val>.</li><li>Else if <var>preferredType</var> is <emu-const>string</emu-const>, let <var>hint</var> be <emu-val>\"string\"</emu-val>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>preferredType</var> is <emu-const>number</emu-const>.</li><li>Let <var>hint</var> be <emu-val>\"number\"</emu-val>.</li></ol></li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>exoticToPrim</var>, <var>input</var>, &#171; <var>hint</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>) is not Object, return <var>result</var>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>preferredType</var> is not present, let <var>preferredType</var> be <emu-const>number</emu-const>.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>input</var>, <var>preferredType</var>).</li></ol></li><li>Return <var>input</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When ToPrimitive is called with no hint, then it generally behaves as if the hint were <emu-const>number</emu-const>. However, objects may over-ride this behaviour by defining a <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toPrimitive</a></emu-xref> method. Of the objects defined in this specification only Date objects (see <emu-xref href=\"#sec-date.prototype-@@toprimitive\"><a href=\"#sec-date.prototype-@@toprimitive\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</a></emu-xref>) and Symbol objects (see <emu-xref href=\"#sec-symbol.prototype-@@toprimitive\"><a href=\"#sec-symbol.prototype-@@toprimitive\" class=\"excluded-xref\" excluded-id=\"sec-symbol.prototype-@@toprimitive\">#sec-symbol.prototype-@@toprimitive</a></emu-xref>) over-ride the default ToPrimitive behaviour. Date objects treat no hint as if the hint were <emu-const>string</emu-const>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-ordinarytoprimitive\"><h1><span class=\"secnum\">7.1.1.1</span>#sec-ordinarytoprimitive OrdinaryToPrimitive ( O, hint )</h1>...</div></emu-clause>\n\n    "}, "sec-array-objects": {"num": "23.1", "title": "#sec-array-objects Array Objects", "html": "<emu-clause id=\"sec-array-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-objects\">#sec-array-objects</span> Array Objects</h1>\n    <p>Array objects are <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic objects</a></emu-xref> that give special treatment to a certain class of property names. See <emu-xref href=\"#sec-array-exotic-objects\"><a href=\"#sec-array-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects\">#sec-array-exotic-objects</a></emu-xref> for a definition of this special treatment.</p>\n\n    <div id=\"excluded-sec-array-constructor\"><h1><span class=\"secnum\">23.1.1</span>#sec-array-constructor The Array Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-array-constructor\"><h1><span class=\"secnum\">23.1.2</span>#sec-properties-of-the-array-constructor Properties of the Array Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-array-prototype-object\"><h1><span class=\"secnum\">23.1.3</span>#sec-properties-of-the-array-prototype-object Properties of the Array Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-array-instances\"><h1><span class=\"secnum\">23.1.4</span>#sec-properties-of-array-instances Properties of Array Instances</h1>...</div><div id=\"excluded-sec-array-iterator-objects\"><h1><span class=\"secnum\">23.1.5</span>#sec-array-iterator-objects Array Iterator Objects</h1>...</div></emu-clause>\n\n  "}, "sec-generatorfunction-instances-prototype": {"num": "27.3.4.3", "title": "#sec-generatorfunction-instances-prototype prototype", "html": "<emu-clause id=\"sec-generatorfunction-instances-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances-prototype\">#sec-generatorfunction-instances-prototype</span> prototype</h1>\n        <p>Whenever a GeneratorFunction instance is created another <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> is also created and is the initial value of the generator function's <emu-val>\"prototype\"</emu-val> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created Generator object when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike Function instances, the object that is the value of the a GeneratorFunction's <emu-val>\"prototype\"</emu-val> property does not have a <emu-val>\"constructor\"</emu-val> property whose value is the GeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-async-generator-function-definitions": {"num": "15.6", "title": "#sec-async-generator-function-definitions Async Generator Function Definitions", "html": "<emu-clause id=\"sec-async-generator-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-generator-function-definitions\">#sec-async-generator-function-definitions</span> Async Generator Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncGeneratorMethod\" params=\"Yield, Await\" id=\"prod-AsyncGeneratorMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bojlwy10\" id=\"prod-ceV74b-L\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorDeclaration\" params=\"Yield, Await, Default\" id=\"prod-AsyncGeneratorDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vxevrvwx\" id=\"prod-cOKIJmRw\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"zdnckwse\" constraints=\"+Default\" id=\"prod-1L17zU6t\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorExpression\" id=\"prod-AsyncGeneratorExpression\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yh0wbqjf\" id=\"prod-s18yr2Ij\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorBody\" id=\"prod-AsyncGeneratorBody\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zqmkrekv\" id=\"prod-47HC640n\"><emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p><emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> and <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> cannot be used within the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an async generator function because any expressions that are part of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> are evaluated before the resulting async generator object is in a resumable state.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p><emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">Abstract operations</a></emu-xref> relating to async generator objects are defined in <emu-xref href=\"#sec-asyncgenerator-abstract-operations\"><a href=\"#sec-asyncgenerator-abstract-operations\" class=\"excluded-xref\" excluded-id=\"sec-asyncgenerator-abstract-operations\">#sec-asyncgenerator-abstract-operations</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-async-generator-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.6.1</span>#sec-async-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluateasyncgeneratorbody\"><h1><span class=\"secnum\">15.6.2</span>#sec-runtime-semantics-evaluateasyncgeneratorbody Runtime Semantics: EvaluateAsyncGeneratorBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncgeneratorfunctionobject\"><h1><span class=\"secnum\">15.6.3</span>#sec-runtime-semantics-instantiateasyncgeneratorfunctionobject Runtime Semantics: InstantiateAsyncGeneratorFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression\"><h1><span class=\"secnum\">15.6.4</span>#sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression Runtime Semantics: InstantiateAsyncGeneratorFunctionExpression</h1>...</div><div id=\"excluded-sec-asyncgenerator-definitions-evaluation\"><h1><span class=\"secnum\">15.6.5</span>#sec-asyncgenerator-definitions-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-arraycreate": {"num": "10.4.2.2", "title": "#sec-arraycreate ArrayCreate ( length [ , proto ] )", "html": "<emu-clause id=\"sec-arraycreate\" aoid=\"ArrayCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraycreate\">#sec-arraycreate</span> ArrayCreate ( <var>length</var> [ , <var>proto</var> ] )</h1>\n        <p>The abstract operation ArrayCreate takes argument <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>) and optional argument <var>proto</var>. It is used to specify the creation of new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic objects</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>length</var> &gt; 2<sup>32</sup> - 1, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>proto</var> is not present, set <var>proto</var> to <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%Array.prototype%</a></emu-xref>.</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]] &#187;).</li><li>Set <var>A</var>.[[Prototype]] to <var>proto</var>.</li><li>Set <var>A</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Perform !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>length</var>), [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-regexp.prototype.exec": {"num": "22.2.5.2", "title": "#sec-regexp.prototype.exec RegExp.prototype.exec ( string )", "html": "<emu-clause id=\"sec-regexp.prototype.exec\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype.exec\">#sec-regexp.prototype.exec</span> RegExp.prototype.exec ( <var>string</var> )</h1>\n        <p>Performs a regular expression match of <var>string</var> against the regular expression and returns an Array object containing the results of the match, or <emu-val>null</emu-val> if <var>string</var> did not match.</p>\n        <p>The String <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>) is searched for an occurrence of the regular expression pattern as follows:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>R</var>, [[RegExpMatcher]]).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpBuiltinExec\"><a href=\"#sec-regexpbuiltinexec\">RegExpBuiltinExec</a></emu-xref>(<var>R</var>, <var>S</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-regexpexec\"><h1><span class=\"secnum\">22.2.5.2.1</span>#sec-regexpexec RegExpExec ( R, S )</h1>...</div><div id=\"excluded-sec-regexpbuiltinexec\"><h1><span class=\"secnum\">22.2.5.2.2</span>#sec-regexpbuiltinexec RegExpBuiltinExec ( R, S )</h1>...</div><div id=\"excluded-sec-advancestringindex\"><h1><span class=\"secnum\">22.2.5.2.3</span>#sec-advancestringindex AdvanceStringIndex ( S, index, unicode )</h1>...</div></emu-clause>\n\n      "}, "sec-array.prototype.map": {"num": "23.1.3.18", "title": "#sec-array.prototype.map Array.prototype.map ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.map\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.map\">#sec-array.prototype.map</span> Array.prototype.map ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>map</code> calls <var>callbackfn</var> once for each element in the array, in ascending order, and constructs a new Array from the results. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>map</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>map</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>map</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>map</code> visits them; elements that are deleted after the call to <code>map</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>map</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <var>Pk</var>, <var>mappedValue</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>map</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.copywithin": {"num": "23.1.3.3", "title": "#sec-array.prototype.copywithin Array.prototype.copyWithin ( target, start [ , end ] )", "html": "<emu-clause id=\"sec-array.prototype.copywithin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.copywithin\">#sec-array.prototype.copywithin</span> Array.prototype.copyWithin ( <var>target</var>, <var>start</var> [ , <var>end</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The <var>end</var> argument is optional. If it is not provided, the length of the <emu-val>this</emu-val> value is used.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>target</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>target</var></emu-eqn> where <var>length</var> is the length of the array. If <var>start</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>start</var></emu-eqn>. If <var>end</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>end</var></emu-eqn>.</p>\n        </div></emu-note>\n        <p>When the <code>copyWithin</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeTarget</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>target</var>).</li><li>If <var>relativeTarget</var> is -&#8734;, let <var>to</var> be 0.</li><li>Else if <var>relativeTarget</var> &lt; 0, let <var>to</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeTarget</var>, 0).</li><li>Else, let <var>to</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeTarget</var>, <var>len</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>from</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>from</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>from</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>final</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Let <var>count</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>final</var> - <var>from</var>, <var>len</var> - <var>to</var>).</li><li>If <var>from</var> &lt; <var>to</var> and <var>to</var> &lt; <var>from</var> + <var>count</var>, then<ol><li>Let <var>direction</var> be -1.</li><li>Set <var>from</var> to <var>from</var> + <var>count</var> - 1.</li><li>Set <var>to</var> to <var>to</var> + <var>count</var> - 1.</li></ol></li><li>Else,<ol><li>Let <var>direction</var> be 1.</li></ol></li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>Let <var>fromKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>from</var>)).</li><li>Let <var>toKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>to</var>)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>fromKey</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromVal</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>fromKey</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>toKey</var>, <var>fromVal</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>toKey</var>).</li></ol></li><li>Set <var>from</var> to <var>from</var> + <var>direction</var>.</li><li>Set <var>to</var> to <var>to</var> + <var>direction</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>copyWithin</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.tostring": {"num": "23.1.3.30", "title": "#sec-array.prototype.tostring Array.prototype.toString ( )", "html": "<emu-clause id=\"sec-array.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.tostring\">#sec-array.prototype.tostring</span> Array.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>array</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>func</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>array</var>, <emu-val>\"join\"</emu-val>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>func</var>) is <emu-val>false</emu-val>, set <var>func</var> to the intrinsic function %Object.prototype.toString%.</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>func</var>, <var>array</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>toString</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise-constructor": {"num": "27.2.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">27.2.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype.split": {"num": "22.1.3.21", "title": "#sec-string.prototype.split String.prototype.split ( separator, limit )", "html": "<emu-clause id=\"sec-string.prototype.split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.split\">#sec-string.prototype.split</span> String.prototype.split ( <var>separator</var>, <var>limit</var> )</h1>\n        <p>Returns an Array object into which substrings of the result of converting this object to a String have been stored. The substrings are determined by searching from left to right for occurrences of <var>separator</var>; these occurrences are not part of any String in the returned array, but serve to divide up the String value. The value of <var>separator</var> may be a String of any length or it may be an object, such as a RegExp, that has a <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@split</a></emu-xref> method.</p>\n        <p>When the <code>split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>separator</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>separator</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@split</a></emu-xref>).</li><li>If <var>splitter</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>splitter</var>, <var>separator</var>, &#171; <var>O</var>, <var>limit</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>)).</li><li>Let <var>R</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>separator</var>).</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>If <var>separator</var> is <emu-val>undefined</emu-val>, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>s</var> be the length of <var>S</var>.</li><li>If <var>s</var> = 0, then<ol><li>If <var>R</var> is not the empty String, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li></ol></li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &#8800; <var>s</var>,<ol><li>Let <var>e</var> be <emu-xref aoid=\"SplitMatch\"><a href=\"#sec-splitmatch\">SplitMatch</a></emu-xref>(<var>S</var>, <var>q</var>, <var>R</var>).</li><li>If <var>e</var> is <emu-const>not-matched</emu-const>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>e</var> is a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> &#8804; <var>s</var>.</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>q</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>s</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The value of <var>separator</var> may be an empty String. In this case, <var>separator</var> does not match the empty <emu-not-ref>substring</emu-not-ref> at the beginning or end of the input String, nor does it match the empty <emu-not-ref>substring</emu-not-ref> at the end of the previous separator match. If <var>separator</var> is the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each <emu-not-ref>substring</emu-not-ref> contains one code unit.</p>\n          <p>If the <emu-val>this</emu-val> value is (or converts to) the empty String, the result depends on whether <var>separator</var> can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If <var>separator</var> is <emu-val>undefined</emu-val>, then the result array contains just one String, which is the <emu-val>this</emu-val> value (converted to a String). If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>split</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-splitmatch\"><h1><span class=\"secnum\">22.1.3.21.1</span>#sec-splitmatch SplitMatch ( S, q, R )</h1>...</div></emu-clause>\n\n      "}, "sec-createarrayfromlist": {"num": "7.3.17", "title": "#sec-createarrayfromlist CreateArrayFromList ( elements )", "html": "<emu-clause id=\"sec-createarrayfromlist\" aoid=\"CreateArrayFromList\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createarrayfromlist\">#sec-createarrayfromlist</span> CreateArrayFromList ( <var>elements</var> )</h1>\n      <p>The abstract operation CreateArrayFromList takes argument <var>elements</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>). It is used to create an Array object whose elements are provided by <var>elements</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>elements</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are all <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>.</li><li>Let <var>array</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>For each element <var>e</var> of <var>elements</var>, do<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>e</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Return <var>array</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-initializetypedarrayfromlist": {"num": "23.2.5.1.4", "title": "#sec-initializetypedarrayfromlist InitializeTypedArrayFromList ( O, values )", "html": "<emu-clause id=\"sec-initializetypedarrayfromlist\" aoid=\"InitializeTypedArrayFromList\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromlist\">#sec-initializetypedarrayfromlist</span> InitializeTypedArrayFromList ( <var>O</var>, <var>values</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromList takes arguments <var>O</var> (a TypedArray object) and <var>values</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-async-function-constructor": {"num": "27.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour. All ECMAScript syntactic forms for defining async <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> create direct instances of AsyncFunction. There is no syntactic means to create instances of AsyncFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">27.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-constructor": {"num": "27.3.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new GeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> create direct instances of GeneratorFunction. There is no syntactic means to create instances of GeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">27.3.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver": {"num": "10.5.9", "title": "#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n      <p>The [[Set]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"set\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Set]](<var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>V</var>, <var>Receiver</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Set]] is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Set]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Set]] is a Boolean value.\n          </li>\n          <li>\n            Cannot change the value of a property to be different from the value of the corresponding target object property if the corresponding target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            Cannot set the value of a property if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Set]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-initializetypedarrayfromtypedarray": {"num": "23.2.5.1.2", "title": "#sec-initializetypedarrayfromtypedarray InitializeTypedArrayFromTypedArray ( O, srcArray )", "html": "<emu-clause id=\"sec-initializetypedarrayfromtypedarray\" oldids=\"sec-typedarray-typedarray\" aoid=\"InitializeTypedArrayFromTypedArray\"><span id=\"sec-typedarray-typedarray\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromtypedarray\">#sec-initializetypedarrayfromtypedarray</span> InitializeTypedArrayFromTypedArray ( <var>O</var>, <var>srcArray</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromTypedArray takes arguments <var>O</var> (a TypedArray object) and <var>srcArray</var> (a TypedArray object). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>srcArray</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>srcData</var> be <var>srcArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>elementLength</var> be <var>srcArray</var>.[[ArrayLength]].</li><li>Let <var>srcName</var> be the String value of <var>srcArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcByteOffset</var> be <var>srcArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>elementLength</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>bufferConstructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>srcData</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li></ol></li><li>Else,<ol><li>Let <var>bufferConstructor</var> be <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>.</li></ol></li><li>If <var>elementType</var> is the same as <var>srcType</var>, then<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteOffset</var>, <var>byteLength</var>, <var>bufferConstructor</var>).</li></ol></li><li>Else,<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>bufferConstructor</var>, <var>byteLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>srcArray</var>.[[ContentType]] &#8800; <var>O</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be 0.</li><li>Let <var>count</var> be <var>elementLength</var>.</li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>data</var>, <var>targetByteIndex</var>, <var>elementType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>elementSize</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>elementLength</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-generator-function-definitions": {"num": "15.5", "title": "#sec-generator-function-definitions Generator Function Definitions", "html": "<emu-clause id=\"sec-generator-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-function-definitions\">#sec-generator-function-definitions</span> Generator Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"GeneratorMethod\" params=\"Yield, Await\" id=\"prod-GeneratorMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s6ntmoac\" id=\"prod-8GV2khgE\">\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorDeclaration\" params=\"Yield, Await, Default\" id=\"prod-GeneratorDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"56abocni\" id=\"prod-oJNsRhfl\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"gcxlonl8\" constraints=\"+Default\" id=\"prod-bWfHg6Xe\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorExpression\" id=\"prod-GeneratorExpression\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zsu4etlj\" id=\"prod-haubt72j\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorBody\" id=\"prod-GeneratorBody\">\n    <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"quvqn30c\" id=\"prod-UaNDUTMe\"><emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"YieldExpression\" params=\"In, Await\" id=\"prod-YieldExpression\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-YieldExpression\">YieldExpression</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\"><emu-t>yield</emu-t></emu-rhs>\n    <emu-rhs a=\"alznzlpx\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"mrbi6v84\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>The syntactic context immediately following <code>yield</code> requires use of the <emu-nt><a href=\"#prod-InputElementRegExpOrTemplateTail\">InputElementRegExpOrTemplateTail</a></emu-nt> lexical goal.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p><emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> cannot be used within the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a generator function because any expressions that are part of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> are evaluated before the resulting generator object is in a resumable state.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p><emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">Abstract operations</a></emu-xref> relating to generator objects are defined in <emu-xref href=\"#sec-generator-abstract-operations\"><a href=\"#sec-generator-abstract-operations\" class=\"excluded-xref\" excluded-id=\"sec-generator-abstract-operations\">#sec-generator-abstract-operations</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-generator-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.5.1</span>#sec-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluategeneratorbody\"><h1><span class=\"secnum\">15.5.2</span>#sec-runtime-semantics-evaluategeneratorbody Runtime Semantics: EvaluateGeneratorBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiategeneratorfunctionobject\"><h1><span class=\"secnum\">15.5.3</span>#sec-runtime-semantics-instantiategeneratorfunctionobject Runtime Semantics: InstantiateGeneratorFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiategeneratorfunctionexpression\"><h1><span class=\"secnum\">15.5.4</span>#sec-runtime-semantics-instantiategeneratorfunctionexpression Runtime Semantics: InstantiateGeneratorFunctionExpression</h1>...</div><div id=\"excluded-sec-generator-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.5.5</span>#sec-generator-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-array.prototype.fill": {"num": "23.1.3.6", "title": "#sec-array.prototype.fill Array.prototype.fill ( value [ , start [ , end ] ] )", "html": "<emu-clause id=\"sec-array.prototype.fill\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.fill\">#sec-array.prototype.fill</span> Array.prototype.fill ( <var>value</var> [ , <var>start</var> [ , <var>end</var> ] ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The <var>start</var> argument is optional. If it is not provided, <emu-val>+0</emu-val><sub>&#120125;</sub> is used.</p>\n          <p>The <var>end</var> argument is optional. If it is not provided, the length of the <emu-val>this</emu-val> value is used.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>start</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>start</var></emu-eqn> where <var>length</var> is the length of the array. If <var>end</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>end</var></emu-eqn>.</p>\n        </div></emu-note>\n        <p>When the <code>fill</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>k</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>k</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>final</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Repeat, while <var>k</var> &lt; <var>final</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>value</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>fill</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array-constructor": {"num": "23.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic objects</a></emu-xref>. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>1</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-array Array ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.reduceright": {"num": "23.1.3.22", "title": "#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )", "html": "<emu-clause id=\"sec-array.prototype.reduceright\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reduceright\">#sec-array.prototype.reduceright</span> Array.prototype.reduceRight ( <var>callbackfn</var> [ , <var>initialValue</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that takes four arguments. <code>reduceRight</code> calls the callback, as a function, once for each element after the first element present in the array, in descending order.</p>\n          <p><var>callbackfn</var> is called with four arguments: the <var>previousValue</var> (value from the previous call to <var>callbackfn</var>), the <var>currentValue</var> (value of the current element), the <var>currentIndex</var>, and the object being traversed. The first time the function is called, the <var>previousValue</var> and <var>currentValue</var> can be one of two values. If an <var>initialValue</var> was supplied in the call to <code>reduceRight</code>, then <var>previousValue</var> will be equal to <var>initialValue</var> and <var>currentValue</var> will be equal to the last value in the array. If no <var>initialValue</var> was supplied, then <var>previousValue</var> will be equal to the last value in the array and <var>currentValue</var> will be equal to the second-to-last value. It is a <emu-val>TypeError</emu-val> if the array contains no elements and <var>initialValue</var> is not provided.</p>\n          <p><code>reduceRight</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>reduceRight</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>reduceRight</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed by <var>callbackfn</var>, their value as passed to <var>callbackfn</var> will be the value at the time <code>reduceRight</code> visits them; elements that are deleted after the call to <code>reduceRight</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>reduceRight</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>len</var> is 0 and <var>initialValue</var> is not present, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be <var>len</var> - 1.</li><li>Let <var>accumulator</var> be <emu-val>undefined</emu-val>.</li><li>If <var>initialValue</var> is present, then<ol><li>Set <var>accumulator</var> to <var>initialValue</var>.</li></ol></li><li>Else,<ol><li>Let <var>kPresent</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>kPresent</var> is <emu-val>false</emu-val> and <var>k</var> &#8805; 0,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Set <var>kPresent</var> to ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>If <var>kPresent</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <emu-val>undefined</emu-val>, &#171; <var>accumulator</var>, <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return <var>accumulator</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reduceRight</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-date.prototype.toutcstring": {"num": "21.4.4.43", "title": "#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )", "html": "<emu-clause id=\"sec-date.prototype.toutcstring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.toutcstring\">#sec-date.prototype.toutcstring</span> Date.prototype.toUTCString ( )</h1>\n        <p>The <code>toUTCString</code> method returns a String value representing the instance in time corresponding to <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref>. The format of the String is based upon \"HTTP-date\" from RFC 7231, generalized to support the full range of times supported by ECMAScript Date objects. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>O</var> be <emu-xref href=\"#this-Date-object\"><a href=\"#this-Date-object\">this Date object</a></emu-xref>.</li><li>Let <var>tv</var> be ?&#160;<emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref>(<var>O</var>).</li><li>If <var>tv</var> is <emu-val>NaN</emu-val>, return <emu-val>\"Invalid Date\"</emu-val>.</li><li>Let <var>weekday</var> be the Name of the entry in <emu-xref href=\"#sec-todatestring-day-names\"><a href=\"#sec-todatestring-day-names\" class=\"excluded-xref\" excluded-id=\"sec-todatestring-day-names\">#sec-todatestring-day-names</a></emu-xref> with the Number <emu-xref aoid=\"WeekDay\"><a href=\"#sec-week-day\">WeekDay</a></emu-xref>(<var>tv</var>).</li><li>Let <var>month</var> be the Name of the entry in <emu-xref href=\"#sec-todatestring-month-names\"><a href=\"#sec-todatestring-month-names\" class=\"excluded-xref\" excluded-id=\"sec-todatestring-month-names\">#sec-todatestring-month-names</a></emu-xref> with the Number <emu-xref aoid=\"MonthFromTime\"><a href=\"#eqn-MonthFromTime\">MonthFromTime</a></emu-xref>(<var>tv</var>).</li><li>Let <var>day</var> be the String representation of <emu-xref aoid=\"DateFromTime\"><a href=\"#sec-date-number\">DateFromTime</a></emu-xref>(<var>tv</var>), formatted as a two-digit decimal number, padded to the left with the code unit 0x0030 (DIGIT ZERO) if necessary.</li><li>Let <var>yv</var> be <emu-xref aoid=\"YearFromTime\"><a href=\"#eqn-YearFromTime\">YearFromTime</a></emu-xref>(<var>tv</var>).</li><li>If <var>yv</var> &#8805; <emu-val>+0</emu-val><sub>&#120125;</sub>, let <var>yearSign</var> be the empty String; otherwise, let <var>yearSign</var> be <emu-val>\"-\"</emu-val>.</li><li>Let <var>year</var> be the String representation of <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>yv</var>)), formatted as a decimal number.</li><li>Let <var>paddedYear</var> be !&#160;<emu-xref aoid=\"StringPad\"><a href=\"#sec-stringpad\">StringPad</a></emu-xref>(<var>year</var>, <emu-val>4</emu-val><sub>&#120125;</sub>, <emu-val>\"0\"</emu-val>, <emu-const>start</emu-const>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>weekday</var>, <emu-val>\",\"</emu-val>, the code unit 0x0020 (SPACE), <var>day</var>, the code unit 0x0020 (SPACE), <var>month</var>, the code unit 0x0020 (SPACE), <var>yearSign</var>, <var>paddedYear</var>, the code unit 0x0020 (SPACE), and <emu-xref aoid=\"TimeString\"><a href=\"#sec-timestring\">TimeString</a></emu-xref>(<var>tv</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-array.prototype.concat": {"num": "23.1.3.1", "title": "#sec-array.prototype.concat Array.prototype.concat ( ...items )", "html": "<emu-clause id=\"sec-array.prototype.concat\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.concat\">#sec-array.prototype.concat</span> Array.prototype.concat ( ...<var>items</var> )</h1>\n        <p>Returns an array containing the array elements of the object followed by the array elements of each argument.</p>\n        <p>When the <code>concat</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, 0).</li><li>Let <var>n</var> be 0.</li><li>Prepend <var>O</var> to <var>items</var>.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Let <var>spreadable</var> be ?&#160;<emu-xref aoid=\"IsConcatSpreadable\"><a href=\"#sec-isconcatspreadable\">IsConcatSpreadable</a></emu-xref>(<var>E</var>).</li><li>If <var>spreadable</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>k</var> be 0.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>E</var>).</li><li>If <var>n</var> + <var>len</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>P</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>exists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>E</var>, <var>P</var>).</li><li>If <var>exists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>subElement</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>E</var>, <var>P</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>subElement</var>).</li></ol></li><li>Set <var>n</var> to <var>n</var> + 1.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>NOTE: <var>E</var> is added as a single item rather than spread.</li><li>If <var>n</var> &#8805; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>E</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li></ol></li><li id=\"step-array-proto-concat-set-length\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>), <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>concat</code> method is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The explicit setting of the <emu-val>\"length\"</emu-val> property in step <emu-xref href=\"#step-array-proto-concat-set-length\"><a href=\"#step-array-proto-concat-set-length\" class=\"excluded-xref\" excluded-id=\"step-array-proto-concat-set-length\">#step-array-proto-concat-set-length</a></emu-xref> is necessary to ensure that its value is correct in situations where the trailing elements of the result Array are not present.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>concat</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-isconcatspreadable\"><h1><span class=\"secnum\">23.1.3.1.1</span>#sec-isconcatspreadable IsConcatSpreadable ( O )</h1>...</div></emu-clause>\n\n      "}, "sec-agent-clusters": {"num": "9.8", "title": "#sec-agent-clusters Agent Clusters", "html": "<emu-clause id=\"sec-agent-clusters\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-agent-clusters\">#sec-agent-clusters</span> Agent Clusters</h1>\n\n    <p>An <dfn variants=\"agent clusters\">agent cluster</dfn> is a maximal set of <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that can communicate by operating on shared memory.</p>\n\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Programs within different <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> may share memory by unspecified means. At a minimum, the backing memory for SharedArrayBuffer objects can be shared among the <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster.</p>\n\n      <p>There may be <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that can communicate by message passing that cannot share memory; they are never in the same agent cluster.</p>\n    </div></emu-note>\n\n    <p>Every <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> belongs to exactly one agent cluster.</p>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in a cluster need not all be alive at some particular point in time. If <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <b>A</b> creates another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <b>B</b>, after which <b>A</b> terminates and <b>B</b> creates <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <b>C</b>, the three <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> are in the same cluster if <b>A</b> could share some memory with <b>B</b> and <b>B</b> could share some memory with <b>C</b>.</p>\n    </div></emu-note>\n\n    <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within a cluster must have the same value for the [[LittleEndian]] property in their respective <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Records</a></emu-xref>.</p>\n\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>If different <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within an agent cluster have different values of [[LittleEndian]] it becomes hard to use shared memory for multi-byte data.</p>\n    </div></emu-note>\n\n    <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within a cluster must have the same values for the [[IsLockFree1]] property in their respective <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Records</a></emu-xref>; similarly for the [[IsLockFree2]] property.</p>\n\n    <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within a cluster must have different values for the [[Signifier]] property in their respective <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Records</a></emu-xref>.</p>\n\n    <p>An embedding may deactivate (stop forward progress) or activate (resume forward progress) an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> without the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s knowledge or cooperation. If the embedding does so, it must not leave some <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster active while other <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster are deactivated indefinitely.</p>\n\n    <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n      <p>The purpose of the preceding restriction is to avoid a situation where an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> deadlocks or starves because another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> has been deactivated. For example, if an HTML shared worker that has a lifetime independent of documents in any windows were allowed to share memory with the dedicated worker of such an independent document, and the document and its dedicated worker were to be deactivated while the dedicated worker holds a lock (say, the document is pushed into its window's history), and the shared worker then tries to acquire the lock, then the shared worker will be blocked until the dedicated worker is activated again, if ever. Meanwhile other workers trying to access the shared worker from other windows will starve.</p>\n\n      <p>The implication of the restriction is that it will not be possible to share memory between <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that don't belong to the same suspend/wake collective within the embedding.</p>\n    </div></emu-note>\n\n    <p>An embedding may terminate an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> without any of the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s cluster's other <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref>' prior knowledge or cooperation. If an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is terminated not by programmatic action of its own or of another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the cluster but by forces external to the cluster, then the embedding must choose one of two strategies: Either terminate all the <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster, or provide reliable APIs that allow the <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster to coordinate so that at least one remaining member of the cluster will be able to detect the termination, with the termination data containing enough information to identify the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> that was terminated.</p>\n\n    <emu-note><span class=\"note\">Note 5</span><div class=\"note-contents\">\n      <p>Examples of that type of termination are: operating systems or users terminating <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that are running in separate processes; the embedding itself terminating an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> that is running in-process with the other <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> when per-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> resource accounting indicates that the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is runaway.</p>\n    </div></emu-note>\n\n    <p>Prior to any evaluation of any ECMAScript code by any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in a cluster, the [[CandidateExecution]] field of the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> for all <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster is set to the initial <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref>. The initial <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> is an <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">empty candidate execution</a></emu-xref> whose [[EventsRecords]] field is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing, for each <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>, an <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> whose [[AgentSignifier]] field is that <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s signifier, and whose [[EventList]] and [[AgentSynchronizesWith]] fields are empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Lists</a></emu-xref>.</p>\n\n    <emu-note><span class=\"note\">Note 6</span><div class=\"note-contents\">\n      <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in an agent cluster share the same <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> in its <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s [[CandidateExecution]] field. The <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> is a specification mechanism used by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 7</span><div class=\"note-contents\">\n      <p>An agent cluster is a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation.</p>\n    </div></emu-note>\n  </emu-clause>\n\n  "}, "sec-array.prototype.pop": {"num": "23.1.3.19", "title": "#sec-array.prototype.pop Array.prototype.pop ( )", "html": "<emu-clause id=\"sec-array.prototype.pop\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.pop\">#sec-array.prototype.pop</span> Array.prototype.pop ( )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The last element of the array is removed from the array and returned.</p>\n        </div></emu-note>\n        <p>When the <code>pop</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> = 0, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>len</var> &gt; 0.</li><li>Let <var>newLen</var> be <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - 1).</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>newLen</var>).</li><li>Let <var>element</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>index</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>index</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <var>newLen</var>, <emu-val>true</emu-val>).</li><li>Return <var>element</var>.</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>pop</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.find": {"num": "23.1.3.8", "title": "#sec-array.prototype.find Array.prototype.find ( predicate [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.find\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.find\">#sec-array.prototype.find</span> Array.prototype.find ( <var>predicate</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>predicate</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>find</code> calls <var>predicate</var> once for each element of the array, in ascending order, until it finds one where <var>predicate</var> returns <emu-val>true</emu-val>. If such an element is found, <code>find</code> immediately returns that element value. Otherwise, <code>find</code> returns <emu-val>undefined</emu-val>.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>predicate</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>predicate</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>find</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>predicate</var>.</p>\n          <p>The range of elements processed by <code>find</code> is set before the first call to <var>predicate</var>. Elements that are appended to the array after the call to <code>find</code> begins will not be visited by <var>predicate</var>. If existing elements of the array are changed, their value as passed to <var>predicate</var> will be the value at the time that <code>find</code> visits them; elements that are deleted after the call to <code>find</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>find</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>predicate</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>predicate</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>true</emu-val>, return <var>kValue</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>find</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-getmodifysetvalueinbuffer": {"num": "25.1.2.13", "title": "#sec-getmodifysetvalueinbuffer GetModifySetValueInBuffer ( arrayBuffer, byteIndex, type, value, op [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-getmodifysetvalueinbuffer\" aoid=\"GetModifySetValueInBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getmodifysetvalueinbuffer\">#sec-getmodifysetvalueinbuffer</span> GetModifySetValueInBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>value</var>, <var>op</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation GetModifySetValueInBuffer takes arguments <var>arrayBuffer</var> (an ArrayBuffer object or a SharedArrayBuffer object), <var>byteIndex</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), <var>type</var> (a <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">TypedArray element type</a></emu-xref>), <var>value</var> (a Number or a BigInt), and <var>op</var> (a <emu-xref href=\"#sec-arraybuffer-notation\"><a href=\"#sec-arraybuffer-notation\">read-modify-write modification function</a></emu-xref>) and optional argument <var>isLittleEndian</var> (a Boolean). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt if !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>true</emu-val>; otherwise, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>rawBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>type</var>, <var>value</var>, <var>isLittleEndian</var>).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>rawBytesRead</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> whose elements are nondeterministically chosen <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">byte values</a></emu-xref>.</li><li>NOTE: In implementations, <var>rawBytesRead</var> is the result of a load-link, of a load-exclusive, or of an operand of a read-modify-write instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>rmwEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadModifyWriteSharedMemory</a></emu-xref> { [[Order]]: <emu-const>SeqCst</emu-const>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var>, [[Payload]]: <var>rawBytes</var>, [[ModifyOp]]: <var>op</var> }.</li><li>Append <var>rmwEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>rmwEvent</var>, [[ChosenValue]]: <var>rawBytesRead</var> } to <var>execution</var>.[[ChosenValues]].</li></ol></li><li>Else,<ol><li>Let <var>rawBytesRead</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> whose elements are the sequence of <var>elementSize</var> bytes starting with <var>block</var>[<var>byteIndex</var>].</li><li>Let <var>rawBytesModified</var> be <var>op</var>(<var>rawBytesRead</var>, <var>rawBytes</var>).</li><li>Store the individual bytes of <var>rawBytesModified</var> into <var>block</var>, starting at <var>block</var>[<var>byteIndex</var>].</li></ol></li><li>Return <emu-xref aoid=\"RawBytesToNumeric\"><a href=\"#sec-rawbytestonumeric\">RawBytesToNumeric</a></emu-xref>(<var>type</var>, <var>rawBytesRead</var>, <var>isLittleEndian</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-array.prototype.includes": {"num": "23.1.3.13", "title": "#sec-array.prototype.includes Array.prototype.includes ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.includes\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.includes\">#sec-array.prototype.includes</span> Array.prototype.includes ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>includes</code> compares <var>searchElement</var> to the elements of the array, in ascending order, using the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> algorithm, and if found at any position, returns <emu-val>true</emu-val>; otherwise, <emu-val>false</emu-val> is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to <emu-val>+0</emu-val><sub>&#120125;</sub> (i.e. the whole array is searched). If it is greater than or equal to the length of the array, <emu-val>false</emu-val> is returned, i.e. the array will not be searched. If it is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, the whole array will be searched.</p>\n        </div></emu-note>\n        <p>When the <code>includes</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return <emu-val>false</emu-val>.</li><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>fromIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>fromIndex</var> is <emu-val>undefined</emu-val>, then <var>n</var> is 0.</li><li>If <var>n</var> is +&#8734;, return <emu-val>false</emu-val>.</li><li>Else if <var>n</var> is -&#8734;, set <var>n</var> to 0.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <var>n</var>.</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li><li>If <var>k</var> &lt; 0, set <var>k</var> to 0.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref>(<var>searchElement</var>, <var>elementK</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>includes</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>includes</code> method intentionally differs from the similar <code>indexOf</code> method in two ways. First, it uses the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> algorithm, instead of <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref>, allowing it to detect <emu-val>NaN</emu-val> array elements. Second, it does not skip missing array elements, instead treating them as <emu-val>undefined</emu-val>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact": {"num": "E", "title": "#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact Corrections and Clarifications in CMAScript 2015 with Possible Compatibility Impact", "html": "<emu-annex id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact</span> Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact</h1>\n  <p><emu-xref href=\"#sec-candeclareglobalvar\"><a href=\"#sec-candeclareglobalvar\" class=\"excluded-xref\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</a></emu-xref>-<emu-xref href=\"#sec-createglobalfunctionbinding\"><a href=\"#sec-createglobalfunctionbinding\" class=\"excluded-xref\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</a></emu-xref> Edition 5 and 5.1 used a property existence test to determine whether a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> property corresponding to a new global declaration already existed. ECMAScript 2015 uses an own property existence test. This corresponds to what has been most commonly implemented by web browsers.</p>\n  <p><emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>: The 5<sup>th</sup> Edition moved the capture of the current array length prior to the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> conversion of the <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> or new length value. However, the captured length value could become invalid if the conversion process has the side-effect of changing the array length. ECMAScript 2015 specifies that the current array length must be captured after the possible occurrence of such side-effects.</p>\n  <p><emu-xref href=\"#sec-timeclip\"><a href=\"#sec-timeclip\" class=\"excluded-xref\" excluded-id=\"sec-timeclip\">#sec-timeclip</a></emu-xref>: Previous editions permitted the <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref> abstract operation to return either <emu-val>+0</emu-val><sub>&#120125;</sub> or <emu-val>-0</emu-val><sub>&#120125;</sub> as the representation of a 0 <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>. ECMAScript 2015 specifies that <emu-val>+0</emu-val><sub>&#120125;</sub> always returned. This means that for ECMAScript 2015 the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> of a Date object is never observably <emu-val>-0</emu-val><sub>&#120125;</sub> and methods that return <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time values</a></emu-xref> never return <emu-val>-0</emu-val><sub>&#120125;</sub>.</p>\n  <p><emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>: If a UTC offset representation is not present, the local time zone is used. Edition 5.1 incorrectly stated that a missing time zone should be interpreted as <emu-val>\"z\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date.prototype.toisostring\"><a href=\"#sec-date.prototype.toisostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.toisostring\">#sec-date.prototype.toisostring</a></emu-xref>: If the year cannot be represented using the Date Time String Format specified in <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref> a RangeError exception is thrown. Previous editions did not specify the behaviour for that case.</p>\n  <p><emu-xref href=\"#sec-date.prototype.tostring\"><a href=\"#sec-date.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</a></emu-xref>: Previous editions did not specify the value returned by <code>Date.prototype.toString</code> when <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref> is <emu-val>NaN</emu-val>. ECMAScript 2015 specifies the result to be the String value <emu-val>\"Invalid Date\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref>, <emu-xref href=\"#sec-escaperegexppattern\"><a href=\"#sec-escaperegexppattern\" class=\"excluded-xref\" excluded-id=\"sec-escaperegexppattern\">#sec-escaperegexppattern</a></emu-xref>: Any LineTerminator code points in the value of the <emu-val>\"source\"</emu-val> property of a RegExp instance must be expressed using an escape sequence. Edition 5.1 only required the escaping of <code>/</code>.</p>\n  <p><emu-xref href=\"#sec-regexp.prototype-@@match\"><a href=\"#sec-regexp.prototype-@@match\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</a></emu-xref>, <emu-xref href=\"#sec-regexp.prototype-@@replace\"><a href=\"#sec-regexp.prototype-@@replace\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</a></emu-xref>: In previous editions, the specifications for <code>String.prototype.match</code> and <code>String.prototype.replace</code> was incorrect for cases where the pattern argument was a RegExp value whose <code>global</code> flag is set. The previous specifications stated that for each attempt to match the pattern, if <code>lastIndex</code> did not change it should be incremented by 1. The correct behaviour is that <code>lastIndex</code> should be incremented by one only if the pattern matched the empty String.</p>\n  <p><emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>, <emu-xref href=\"#sec-sortcompare\"><a href=\"#sec-sortcompare\" class=\"excluded-xref\" excluded-id=\"sec-sortcompare\">#sec-sortcompare</a></emu-xref>: Previous editions did not specify how a <emu-val>NaN</emu-val> value returned by a <var>comparefn</var> was interpreted by <code>Array.prototype.sort</code>. ECMAScript 2015 specifies that such as value is treated as if <emu-val>+0</emu-val><sub>&#120125;</sub> was returned from the <var>comparefn</var>. ECMAScript 2015 also specifies that <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is applied to the result returned by a <var>comparefn</var>. In previous editions, the effect of a <var>comparefn</var> result that is not a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> was <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>. In practice, implementations call <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>.</p>\n</emu-annex>\n\n"}, "sec-array.prototype.lastindexof": {"num": "23.1.3.17", "title": "#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.lastindexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.lastindexof\">#sec-array.prototype.lastindexof</span> Array.prototype.lastIndexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>lastIndexOf</code> compares <var>searchElement</var> to the elements of the array in descending order using the <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref> algorithm, and if found at one or more indices, returns the largest such index; otherwise, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to the array's length minus one (i.e. the whole array is searched). If it is greater than or equal to the length of the array, the whole array will be searched. If it is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned.</p>\n        </div></emu-note>\n        <p>When the <code>lastIndexOf</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>If <var>fromIndex</var> is present, let <var>n</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>fromIndex</var>); else let <var>n</var> be <var>len</var> - 1.</li><li>If <var>n</var> is -&#8734;, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>n</var>, <var>len</var> - 1).</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0,<ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>Let <var>same</var> be <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref>(<var>searchElement</var>, <var>elementK</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>lastIndexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-objects": {"num": "27.4", "title": "#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-objects\">#sec-asyncgeneratorfunction-objects</span> AsyncGeneratorFunction Objects</h1>\n    <p>AsyncGeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, and <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> syntactic productions. They may also be created by calling the <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-asyncgeneratorfunction-constructor\"><h1><span class=\"secnum\">27.4.1</span>#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction\"><h1><span class=\"secnum\">27.4.2</span>#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">27.4.3</span>#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instances\"><h1><span class=\"secnum\">27.4.4</span>#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-proxy-constructor": {"num": "28.2.1", "title": "#sec-proxy-constructor The Proxy Constructor", "html": "<emu-clause id=\"sec-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</span> The Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Proxy%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Proxy\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy-target-handler\"><h1><span class=\"secnum\">28.2.1.1</span>#sec-proxy-target-handler Proxy ( target, handler )</h1>...</div></emu-clause>\n\n    "}, "sec-arrayspeciescreate": {"num": "10.4.2.3", "title": "#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )", "html": "<emu-clause id=\"sec-arrayspeciescreate\" aoid=\"ArraySpeciesCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrayspeciescreate\">#sec-arrayspeciescreate</span> ArraySpeciesCreate ( <var>originalArray</var>, <var>length</var> )</h1>\n        <p>The abstract operation ArraySpeciesCreate takes arguments <var>originalArray</var> and <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It is used to specify the creation of a new Array object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>originalArray</var>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>originalArray</var>).</li><li>If <var>isArray</var> is <emu-val>false</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>originalArray</var>, <emu-val>\"constructor\"</emu-val>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>thisRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>realmC</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>C</var>).</li><li>If <var>thisRealm</var> and <var>realmC</var> are not the same <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>C</var>, <var>realmC</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>]]) is <emu-val>true</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is Object, then<ol><li>Set <var>C</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@species</a></emu-xref>).</li><li>If <var>C</var> is <emu-val>null</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>length</var>) &#187;).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If <var>originalArray</var> was created using the standard built-in Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> that is not the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, then a new Array is created using the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. This maintains compatibility with Web browsers that have historically had that behaviour for the <code>Array.prototype</code> methods that now are defined using ArraySpeciesCreate.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.splice": {"num": "23.1.3.28", "title": "#sec-array.prototype.splice Array.prototype.splice ( start, deleteCount, ...items )", "html": "<emu-clause id=\"sec-array.prototype.splice\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.splice\">#sec-array.prototype.splice</span> Array.prototype.splice ( <var>start</var>, <var>deleteCount</var>, ...<var>items</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The <var>deleteCount</var> elements of the array starting at <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> <var>start</var> are replaced by the elements of <var>items</var>. An Array object containing the deleted elements (if any) is returned.</p>\n        </div></emu-note>\n        <p>When the <code>splice</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>actualStart</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>actualStart</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>actualStart</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>start</var> is not present, then<ol><li>Let <var>insertCount</var> be 0.</li><li>Let <var>actualDeleteCount</var> be 0.</li></ol></li><li>Else if <var>deleteCount</var> is not present, then<ol><li>Let <var>insertCount</var> be 0.</li><li>Let <var>actualDeleteCount</var> be <var>len</var> - <var>actualStart</var>.</li></ol></li><li>Else,<ol><li>Let <var>insertCount</var> be the number of elements in <var>items</var>.</li><li>Let <var>dc</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>deleteCount</var>).</li><li>Let <var>actualDeleteCount</var> be the result of <emu-xref href=\"#clamping\"><a href=\"#clamping\">clamping</a></emu-xref> <var>dc</var> between 0 and <var>len</var> - <var>actualStart</var>.</li></ol></li><li>If <var>len</var> + <var>insertCount</var> - <var>actualDeleteCount</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>actualDeleteCount</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>actualDeleteCount</var>,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>actualStart</var> + <var>k</var>)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)), <var>fromValue</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>actualDeleteCount</var>), <emu-val>true</emu-val>).</li><li>Let <var>itemCount</var> be the number of elements in <var>items</var>.</li><li>If <var>itemCount</var> &lt; <var>actualDeleteCount</var>, then<ol><li>Set <var>k</var> to <var>actualStart</var>.</li><li>Repeat, while <var>k</var> &lt; (<var>len</var> - <var>actualDeleteCount</var>),<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>actualDeleteCount</var>)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>itemCount</var>)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Set <var>k</var> to <var>len</var>.</li><li>Repeat, while <var>k</var> &gt; (<var>len</var> - <var>actualDeleteCount</var> + <var>itemCount</var>),<ol><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> - 1))).</li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li></ol></li><li>Else if <var>itemCount</var> &gt; <var>actualDeleteCount</var>, then<ol><li>Set <var>k</var> to (<var>len</var> - <var>actualDeleteCount</var>).</li><li>Repeat, while <var>k</var> &gt; <var>actualStart</var>,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>actualDeleteCount</var> - 1)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>itemCount</var> - 1)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li></ol></li><li>Set <var>k</var> to <var>actualStart</var>.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)), <var>E</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li id=\"step-array-proto-splice-set-length\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - <var>actualDeleteCount</var> + <var>itemCount</var>), <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The explicit setting of the <emu-val>\"length\"</emu-val> property of the result Array in step <emu-xref href=\"#step-array-proto-splice-set-length\"><a href=\"#step-array-proto-splice-set-length\" class=\"excluded-xref\" excluded-id=\"step-array-proto-splice-set-length\">#step-array-proto-splice-set-length</a></emu-xref> was necessary in previous editions of ECMAScript to ensure that its length was correct in situations where the trailing elements of the result Array were not present. Setting <emu-val>\"length\"</emu-val> became unnecessary starting in ES2015 when the result Array was initialized to its proper length rather than an empty Array but is carried forward to preserve backward compatibility.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>splice</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array-initializer": {"num": "13.2.4", "title": "#sec-array-initializer Array Initializer", "html": "<emu-clause id=\"sec-array-initializer\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-initializer\">#sec-array-initializer</span> Array Initializer</h1>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>An <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt> is an expression describing the initialization of an Array object, using a list, of zero or more expressions each of which represents an array element, enclosed in square brackets. The elements need not be literals; they are evaluated each time the array initializer is evaluated.</p>\n      </div></emu-note>\n      <p>Array elements may be elided at the beginning, middle or end of the element list. Whenever a comma in the element list is not preceded by an <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> (i.e., a comma at the beginning or after another comma), the missing array element contributes to the length of the Array and increases the index of subsequent elements. Elided array elements are not defined. If an element is elided at the end of an array, that element does not contribute to the length of the Array.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ArrayLiteral\" params=\"Yield, Await\" id=\"prod-ArrayLiteral\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"kg5ha7xc\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"xwviorlp\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"flt40tbt\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ElementList\" params=\"Yield, Await\" id=\"prod-ElementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mg86fhyo\" id=\"prod-nakNeXAG\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"bzoasbwv\" id=\"prod-XL4uSEt_\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SpreadElement\">SpreadElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6ukoiilh\" id=\"prod-rNLR62Va\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"nnao2vfk\" id=\"prod-BSaguLF3\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SpreadElement\">SpreadElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"Elision\" id=\"prod-Elision\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"lhh3u7f7\" id=\"prod-J7xTfeyA\"><emu-t>,</emu-t></emu-rhs>\n    <emu-rhs a=\"gg0bjle3\" id=\"prod-lq_Nojbr\">\n        <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt>\n        <emu-t>,</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"SpreadElement\" params=\"Yield, Await\" id=\"prod-SpreadElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-SpreadElement\">SpreadElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tio0yijn\" id=\"prod-H9W06sct\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-runtime-semantics-arrayaccumulation\"><h1><span class=\"secnum\">13.2.4.1</span>#sec-runtime-semantics-arrayaccumulation Runtime Semantics: ArrayAccumulation</h1>...</div><div id=\"excluded-sec-array-initializer-runtime-semantics-evaluation\"><h1><span class=\"secnum\">13.2.4.2</span>#sec-array-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}, "sec-arraybuffer-constructor": {"num": "25.1.3", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"ArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified ArrayBuffer behaviour must include a <code>super</code> call to the ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-applystringornumericbinaryoperator": {"num": "13.15.3", "title": "#sec-applystringornumericbinaryoperator ApplyStringOrNumericBinaryOperator ( lval, opText, rval )", "html": "<emu-clause id=\"sec-applystringornumericbinaryoperator\" aoid=\"ApplyStringOrNumericBinaryOperator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applystringornumericbinaryoperator\">#sec-applystringornumericbinaryoperator</span> ApplyStringOrNumericBinaryOperator ( <var>lval</var>, <var>opText</var>, <var>rval</var> )</h1>\n      <p>The abstract operation ApplyStringOrNumericBinaryOperator takes arguments <var>lval</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), <var>opText</var> (a sequence of Unicode code points), and <var>rval</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>opText</var> is present in the table in step <emu-xref href=\"#step-applystringornumericbinaryoperator-operations-table\"><a href=\"#step-applystringornumericbinaryoperator-operations-table\" class=\"excluded-xref\" excluded-id=\"step-applystringornumericbinaryoperator-operations-table\">#step-applystringornumericbinaryoperator-operations-table</a></emu-xref>.</li><li>If <var>opText</var> is <code>+</code>, then<ol><li id=\"step-binary-op-toprimitive-lval\">Let <var>lprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>lval</var>).</li><li id=\"step-binary-op-toprimitive-rval\">Let <var>rprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>rval</var>).</li><li id=\"step-binary-op-string-check\">If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lprim</var>) is String or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rprim</var>) is String, then<ol><li>Let <var>lstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lprim</var>).</li><li>Let <var>rstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>rprim</var>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>lstr</var> and <var>rstr</var>.</li></ol></li><li>Set <var>lval</var> to <var>lprim</var>.</li><li>Set <var>rval</var> to <var>rprim</var>.</li></ol></li><li>NOTE: At this point, it must be a numeric operation.</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li id=\"step-applystringornumericbinaryoperator-operations-table\">Let <var>operation</var> be the abstract operation associated with <var>opText</var> in the following table:\n          <figure>\n            <table class=\"lightweight-table\">\n              <tbody>\n                <tr><th> <var>opText</var>       </th><th> <var>operation</var>             </th></tr>\n                <tr><td> <code>**</code>           </td><td> <var>T</var>::exponentiate       </td></tr>\n                <tr><td> <code>*</code>            </td><td> <var>T</var>::multiply           </td></tr>\n                <tr><td> <code>/</code>            </td><td> <var>T</var>::divide             </td></tr>\n                <tr><td> <code>%</code>            </td><td> <var>T</var>::remainder          </td></tr>\n                <tr><td> <code>+</code>            </td><td> <var>T</var>::add                </td></tr>\n                <tr><td> <code>-</code>            </td><td> <var>T</var>::subtract           </td></tr>\n                <tr><td> <code>&lt;&lt;</code>     </td><td> <var>T</var>::leftShift          </td></tr>\n                <tr><td> <code>&gt;&gt;</code>     </td><td> <var>T</var>::signedRightShift   </td></tr>\n                <tr><td> <code>&gt;&gt;&gt;</code> </td><td> <var>T</var>::unsignedRightShift </td></tr>\n                <tr><td> <code>&amp;</code>        </td><td> <var>T</var>::bitwiseAND         </td></tr>\n                <tr><td> <code>^</code>            </td><td> <var>T</var>::bitwiseXOR         </td></tr>\n                <tr><td> <code>|</code>            </td><td> <var>T</var>::bitwiseOR          </td></tr>\n              </tbody>\n            </table>\n          </figure></li><li>Return ? <var>operation</var>(<var>lnum</var>, <var>rnum</var>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>No hint is provided in the calls to <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> in steps <emu-xref href=\"#step-binary-op-toprimitive-lval\"><a href=\"#step-binary-op-toprimitive-lval\">2.a</a></emu-xref> and <emu-xref href=\"#step-binary-op-toprimitive-rval\"><a href=\"#step-binary-op-toprimitive-rval\">2.b</a></emu-xref>. All standard objects except Date objects handle the absence of a hint as if <emu-const>number</emu-const> were given; Date objects handle the absence of a hint as if <emu-const>string</emu-const> were given. <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">Exotic objects</a></emu-xref> may handle the absence of a hint in some other manner.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Step <emu-xref href=\"#step-binary-op-string-check\"><a href=\"#step-binary-op-string-check\">2.c</a></emu-xref> differs from step <emu-xref href=\"#step-arc-string-check\"><a href=\"#step-arc-string-check\" class=\"excluded-xref\" excluded-id=\"step-arc-string-check\">#step-arc-string-check</a></emu-xref> of the <emu-xref aoid=\"IsLessThan\"><a href=\"#sec-islessthan\">IsLessThan</a></emu-xref> algorithm, by using the logical-or operation instead of the logical-and operation.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-date.prototype.tojson": {"num": "21.4.4.37", "title": "#sec-date.prototype.tojson Date.prototype.toJSON ( key )", "html": "<emu-clause id=\"sec-date.prototype.tojson\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.tojson\">#sec-date.prototype.tojson</span> Date.prototype.toJSON ( <var>key</var> )</h1>\n        <p>This function provides a String representation of a Date object for use by <code>JSON.stringify</code> (<emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\" class=\"excluded-xref\" excluded-id=\"sec-json.stringify\">#sec-json.stringify</a></emu-xref>).</p>\n        <p>When the <code>toJSON</code> method is called with argument <var>key</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>tv</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>O</var>, <emu-const>number</emu-const>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>tv</var>) is Number and <var>tv</var> is not finite, return <emu-val>null</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>O</var>, <emu-val>\"toISOString\"</emu-val>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The argument is ignored.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>toJSON</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a Date object. Therefore, it can be transferred to other kinds of objects for use as a method. However, it does require that any such object have a <code>toISOString</code> method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weakref-invariants": {"num": "9.10.1", "title": "#sec-weakref-invariants Objectives", "html": "<emu-clause id=\"sec-weakref-invariants\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakref-invariants\">#sec-weakref-invariants</span> Objectives</h1>\n\n      <p>This specification does not make any guarantees that any object will be garbage collected. Objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> may be released after long periods of time, or never at all. For this reason, this specification uses the term \"may\" when describing behaviour triggered by garbage collection.</p>\n\n      <p>The semantics of <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> and <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> objects is based on two operations which happen at particular points in time:</p>\n\n      <ul>\n        <li>\n          When <code>WeakRef.prototype.deref</code> is called, the referent (if <emu-val>undefined</emu-val> is not returned) is kept alive so that subsequent, synchronous accesses also return the object. This list is reset when synchronous work is done using the <emu-xref aoid=\"ClearKeptObjects\"><a href=\"#sec-clear-kept-objects\">ClearKeptObjects</a></emu-xref> abstract operation.\n        </li>\n\n        <li>\n          When an object which is registered with a <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> becomes unreachable, a call of the <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref>'s cleanup callback may eventually be made, after synchronous ECMAScript execution completes. The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> cleanup is performed with the <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref> abstract operation.\n        </li>\n      </ul>\n\n      <p>Neither of these actions (<emu-xref aoid=\"ClearKeptObjects\"><a href=\"#sec-clear-kept-objects\">ClearKeptObjects</a></emu-xref> or <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref>) may interrupt synchronous ECMAScript execution. Because <emu-xref href=\"#host\"><a href=\"#host\">hosts</a></emu-xref> may assemble longer, synchronous ECMAScript execution runs, this specification defers the scheduling of <emu-xref aoid=\"ClearKeptObjects\"><a href=\"#sec-clear-kept-objects\">ClearKeptObjects</a></emu-xref> and <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref> to the <emu-xref href=\"#host-environment\"><a href=\"#host-environment\">host environment</a></emu-xref>.</p>\n\n      <p>Some ECMAScript implementations include garbage collector implementations which run in the background, including when ECMAScript is idle. Letting the <emu-xref href=\"#host-environment\"><a href=\"#host-environment\">host environment</a></emu-xref> schedule <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref> allows it to resume ECMAScript execution in order to run finalizer work, which may free up held values, reducing overall memory usage.</p>\n    </emu-clause>\n\n    "}, "sec-map.prototype.foreach": {"num": "24.1.3.5", "title": "#sec-map.prototype.foreach Map.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-map.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype.foreach\">#sec-map.prototype.foreach</span> Map.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <p>When the <code>forEach</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>M</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>M</var>, [[MapData]]).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>M</var>.[[MapData]].</li><li>For each <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Key]], [[Value]] } <var>e</var> of <var>entries</var>, do<ol><li>If <var>e</var>.[[Key]] is not <emu-const>empty</emu-const>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>e</var>.[[Value]], <var>e</var>.[[Key]], <var>M</var> &#187;).</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each key/value pair present in the map object, in key insertion order. <var>callbackfn</var> is called only for keys of the map which actually exist; it is not called for keys that have been deleted from the map.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the item, the key of the item, and the Map object being traversed.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>. Each entry of a map's [[MapData]] is only visited once. New keys added after the call to <code>forEach</code> begins are visited. A key will be revisited if it is deleted after it has been visited and then re-added before the <code>forEach</code> call completes. Keys that are deleted after the call to <code>forEach</code> begins and before being visited are not visited unless the key is added again before the <code>forEach</code> call completes.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-generator-objects": {"num": "27.5", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the <i>Iterator</i> and <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the initial value of the <emu-val>\"prototype\"</emu-val> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorFunction.prototype.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">27.5.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">27.5.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">27.5.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-allocatesharedarraybuffer": {"num": "25.2.1.1", "title": "#sec-allocatesharedarraybuffer AllocateSharedArrayBuffer ( constructor, byteLength )", "html": "<emu-clause id=\"sec-allocatesharedarraybuffer\" aoid=\"AllocateSharedArrayBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatesharedarraybuffer\">#sec-allocatesharedarraybuffer</span> AllocateSharedArrayBuffer ( <var>constructor</var>, <var>byteLength</var> )</h1>\n        <p>The abstract operation AllocateSharedArrayBuffer takes arguments <var>constructor</var> and <var>byteLength</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It is used to create a SharedArrayBuffer object. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>constructor</var>, <emu-val>\"%SharedArrayBuffer.prototype%\"</emu-val>, &#171; [[ArrayBufferData]], [[ArrayBufferByteLength]] &#187;).</li><li>Let <var>block</var> be ?&#160;<emu-xref aoid=\"CreateSharedByteDataBlock\"><a href=\"#sec-createsharedbytedatablock\">CreateSharedByteDataBlock</a></emu-xref>(<var>byteLength</var>).</li><li>Set <var>obj</var>.[[ArrayBufferData]] to <var>block</var>.</li><li>Set <var>obj</var>.[[ArrayBufferByteLength]] to <var>byteLength</var>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys": {"num": "10.5.11", "title": "#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n      <p>The [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"ownKeys\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[OwnPropertyKeys]]().</li></ol></li><li>Let <var>trapResultArray</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"CreateListFromArrayLike\"><a href=\"#sec-createlistfromarraylike\">CreateListFromArrayLike</a></emu-xref>(<var>trapResultArray</var>, &#171; String, Symbol &#187;).</li><li>If <var>trapResult</var> contains any duplicate entries, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>targetKeys</var> be ? <var>target</var>.[[OwnPropertyKeys]]().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are only String and Symbol values.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> contains no duplicate entries.</li><li>Let <var>targetConfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>targetNonconfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>key</var> of <var>targetKeys</var>, do<ol><li>Let <var>desc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>key</var>).</li><li>If <var>desc</var> is not <emu-val>undefined</emu-val> and <var>desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Append <var>key</var> as an element of <var>targetNonconfigurableKeys</var>.</li></ol></li><li>Else,<ol><li>Append <var>key</var> as an element of <var>targetConfigurableKeys</var>.</li></ol></li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val> and <var>targetNonconfigurableKeys</var> is empty, then<ol><li>Return <var>trapResult</var>.</li></ol></li><li>Let <var>uncheckedResultKeys</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetNonconfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetConfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>uncheckedResultKeys</var> is not empty, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[OwnPropertyKeys]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[OwnPropertyKeys]] is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.\n          </li>\n          <li>\n            The returned <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> contains no duplicate entries.\n          </li>\n          <li>\n            The Type of each result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> element is either String or Symbol.\n          </li>\n          <li>\n            The result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain the keys of all non-configurable own properties of the target object.\n          </li>\n          <li>\n            If the target object is not extensible, then the result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain all the keys of the own properties of the target object and no other values.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-generatorfunction-objects": {"num": "27.3", "title": "#sec-generatorfunction-objects GeneratorFunction Objects", "html": "<emu-clause id=\"sec-generatorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-objects\">#sec-generatorfunction-objects</span> GeneratorFunction Objects</h1>\n    <p>GeneratorFunction objects are functions that are usually created by evaluating <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>s, and <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref> intrinsic.</p>\n    <emu-figure id=\"figure-2\" caption=\"Generator Objects Relationships\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-2\">#figure-2</span> (Informative): Generator Objects Relationships</figcaption>\n      <img alt=\"A staggering variety of boxes and arrows.\" src=\"img/figure-2.png\">\n    </figure></emu-figure>\n\n    <div id=\"excluded-sec-generatorfunction-constructor\"><h1><span class=\"secnum\">27.3.1</span>#sec-generatorfunction-constructor The GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-constructor\"><h1><span class=\"secnum\">27.3.2</span>#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-prototype-object\"><h1><span class=\"secnum\">27.3.3</span>#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-generatorfunction-instances\"><h1><span class=\"secnum\">27.3.4</span>#sec-generatorfunction-instances GeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgeneratorfunction-constructor": {"num": "27.4.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> create direct instances of AsyncGeneratorFunction. There is no syntactic means to create instances of AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">27.4.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v": {"num": "10.5.2", "title": "#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n      <p>The [[SetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>V</var> (an Object or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Either <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Null.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"setPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[SetPrototypeOf]](<var>V</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>V</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[SetPrototypeOf]] for proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[SetPrototypeOf]] is a Boolean value.\n          </li>\n          <li>\n            If the target object is not extensible, the argument value must be the same as the result of [[GetPrototypeOf]] applied to target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-typedarray-objects": {"num": "23.2", "title": "#sec-typedarray-objects TypedArray Objects", "html": "<emu-clause id=\"sec-typedarray-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</span> TypedArray Objects</h1>\n    <p><var>TypedArray</var> objects present an array-like view of an underlying binary data buffer (<emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>). A <dfn variants=\"TypedArray element types\">TypedArray element type</dfn> is the underlying binary scalar data type that all elements of a <var>TypedArray</var> instance have. There is a distinct <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, listed in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>, for each of the supported element types. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> has a corresponding distinct prototype object.</p>\n    <emu-table id=\"table-the-typedarray-constructors\" caption=\"The TypedArray Constructors\" oldids=\"table-49\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</span>: The TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructors</a></emu-xref></figcaption><span id=\"table-49\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name and Intrinsic\n          </th>\n          <th>\n            Element Type\n          </th>\n          <th>\n            Element Size\n          </th>\n          <th>\n            Conversion Operation\n          </th>\n          <th>\n            Description\n          </th>\n        </tr>\n        <tr>\n          <td>\n            Int8Array\n            <br>\n            <dfn>%Int8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt8\"><a href=\"#sec-toint8\">ToInt8</a></emu-xref>\n          </td>\n          <td>\n            8-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8Array\n            <br>\n            <dfn>%Uint8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8\"><a href=\"#sec-touint8\">ToUint8</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8ClampedArray\n            <br>\n            <dfn>%Uint8ClampedArray%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8C</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8Clamp\"><a href=\"#sec-touint8clamp\">ToUint8Clamp</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> (clamped conversion)\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int16Array\n            <br>\n            <dfn>%Int16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt16\"><a href=\"#sec-toint16\">ToInt16</a></emu-xref>\n          </td>\n          <td>\n            16-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint16Array\n            <br>\n            <dfn>%Uint16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint16\"><a href=\"#sec-touint16\">ToUint16</a></emu-xref>\n          </td>\n          <td>\n            16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int32Array\n            <br>\n            <dfn>%Int32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>\n          </td>\n          <td>\n            32-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint32Array\n            <br>\n            <dfn>%Uint32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>\n          </td>\n          <td>\n            32-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigInt64Array\n            <br>\n            <dfn>%BigInt64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigInt64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-tobigint64\">ToBigInt64</a></emu-xref>\n          </td>\n          <td>\n            64-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigUint64Array\n            <br>\n            <dfn>%BigUint64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigUint64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigUint64\"><a href=\"#sec-tobiguint64\">ToBigUint64</a></emu-xref>\n          </td>\n          <td>\n            64-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float32Array\n            <br>\n            <dfn>%Float32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n          </td>\n          <td>\n            32-bit IEEE floating point\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float64Array\n            <br>\n            <dfn>%Float64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n          </td>\n          <td>\n            64-bit IEEE floating point\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In the definitions below, references to <var>TypedArray</var> should be replaced with the appropriate <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name from the above table.</p>\n\n    <div id=\"excluded-sec-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">23.2.1</span>#sec-%typedarray%-intrinsic-object The %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">23.2.2</span>#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarrayprototype%-object\"><h1><span class=\"secnum\">23.2.3</span>#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray% Prototype Object</h1>...</div><div id=\"excluded-sec-abstract-operations-for-typedarray-objects\"><h1><span class=\"secnum\">23.2.4</span>#sec-abstract-operations-for-typedarray-objects Abstract Operations for TypedArray Objects</h1>...</div><div id=\"excluded-sec-typedarray-constructors\"><h1><span class=\"secnum\">23.2.5</span>#sec-typedarray-constructors The TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-typedarray-constructors\"><h1><span class=\"secnum\">23.2.6</span>#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-prototype-objects\"><h1><span class=\"secnum\">23.2.7</span>#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-instances\"><h1><span class=\"secnum\">23.2.8</span>#sec-properties-of-typedarray-instances Properties of TypedArray Instances</h1>...</div></emu-clause>\n"}, "sec-date-constructor": {"num": "21.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>7</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date\"><h1><span class=\"secnum\">21.4.2.1</span>#sec-date Date ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-map-objects": {"num": "24.1", "title": "#sec-map-objects Map Objects", "html": "<emu-clause id=\"sec-map-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-objects\">#sec-map-objects</span> Map Objects</h1>\n    <p>Map objects are collections of key/value pairs where both the keys and values may be arbitrary <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>. A distinct key value may only occur in one key/value pair within the Map's collection. Distinct key values are discriminated using the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> comparison algorithm.</p>\n    <p>Map object must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structures used in this Map objects specification is only intended to describe the required observable semantics of Map objects. It is not intended to be a viable implementation model.</p>\n\n    <div id=\"excluded-sec-map-constructor\"><h1><span class=\"secnum\">24.1.1</span>#sec-map-constructor The Map Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-map-constructor\"><h1><span class=\"secnum\">24.1.2</span>#sec-properties-of-the-map-constructor Properties of the Map Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-map-prototype-object\"><h1><span class=\"secnum\">24.1.3</span>#sec-properties-of-the-map-prototype-object Properties of the Map Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-map-instances\"><h1><span class=\"secnum\">24.1.4</span>#sec-properties-of-map-instances Properties of Map Instances</h1>...</div><div id=\"excluded-sec-map-iterator-objects\"><h1><span class=\"secnum\">24.1.5</span>#sec-map-iterator-objects Map Iterator Objects</h1>...</div></emu-clause>\n\n  "}}, "figData": {"figure-2": "Figure 6", "table-well-known-intrinsic-objects": "Table 8", "table-state-components-for-all-execution-contexts": "Table 28", "table-additional-state-components-for-ecmascript-code-execution-contexts": "Table 29", "table-additional-state-components-for-generator-execution-contexts": "Table 30", "table-proxy-handler-methods": "Table 36", "sec-todatestring-day-names": "Table 64", "sec-todatestring-month-names": "Table 65", "table-the-typedarray-constructors": "Table 72", "table-promisecapability-record-fields": "Table 82", "table-additional-well-known-intrinsic-objects": "Table 94"}}, "to": {"secList": ["sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver", "sec-array.prototype.findindex", "sec-array.prototype.reduce", "sec-promise-objects", "sec-settypedarrayfromtypedarray", "sec-date.parse", "sec-arraysetlength", "sec-ecmascript-function-objects-call-thisargument-argumentslist", "sec-clonearraybuffer", "sec-sharedarraybuffer-constructor", "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p", "sec-set-objects", "sec-promise-executor", "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof", "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p", "sec-async-function-objects", "sec-newpromisecapability", "sec-regexp.prototype-@@split", "sec-weakset-constructor", "sec-array.prototype.reverse", "sec-date.prototype-@@toprimitive", "sec-array-exotic-objects", "sec-initializetypedarrayfromarraybuffer", "sec-proxycreate", "sec-finalization-registry-constructor", "sec-weakmap-objects", "sec-array.prototype.shift", "sec-set-and-relation-specification-type", "sec-asyncgenerator-objects", "sec-abstract-operations-for-typedarray-objects", "sec-properties-of-array-instances-length", "sec-well-known-intrinsic-objects", "sec-array.prototype.every", "sec-array.prototype.tolocalestring", "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc", "sec-date.utc", "sec-dataview-constructor", "sec-array.prototype.slice", "sec-%typedarray%.prototype.subarray", "sec-string.prototype.matchall", "sec-array.prototype.some", "sec-set.prototype.foreach", "sec-weak-ref-constructor", "sec-promisecapability-records", "sec-array.prototype.sort", "sec-execution-contexts", "sec-proxy-object-internal-methods-and-internal-slots-delete-p", "sec-allocatearraybuffer", "sec-array.prototype.filter", "sec-proxy-object-internal-methods-and-internal-slots-isextensible", "sec-array.prototype.foreach", "sec-settypedarrayfromarraylike", "sec-date.prototype.tostring", "sec-weakset-objects", "sec-lengthofarraylike", "sec-proxy-object-internal-methods-and-internal-slots-preventextensions", "sec-array.prototype.unshift", "sec-built-in-function-objects-call-thisargument-argumentslist", "sec-proxy-object-internal-methods-and-internal-slots", "sec-properties-of-the-proxy-constructor", "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget", "sec-array.prototype.indexof", "sec-array.prototype.join", "sec-initializetypedarrayfromarraylike", "sec-allocatetypedarraybuffer", "sec-array.prototype-@@unscopables", "sec-array.prototype.push", "sec-asyncgeneratorfunction-instance-prototype", "sec-properties-of-date-instances", "sec-map-constructor", "sec-weakmap-constructor", "sec-toprimitive", "sec-array-objects", "sec-generatorfunction-instances-prototype", "sec-async-generator-function-definitions", "sec-arraycreate", "sec-regexp.prototype.exec", "sec-array.prototype.map", "sec-array.prototype.copywithin", "sec-array.prototype.tostring", "sec-promise-constructor", "sec-string.prototype.split", "sec-createarrayfromlist", "sec-initializetypedarrayfromlist", "sec-async-function-constructor", "sec-generatorfunction-constructor", "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver", "sec-initializetypedarrayfromtypedarray", "sec-generator-function-definitions", "sec-array.prototype.fill", "sec-array-constructor", "sec-array.prototype.reduceright", "sec-date.prototype.toutcstring", "sec-array.prototype.concat", "sec-agent-clusters", "sec-array.prototype.pop", "sec-array.prototype.find", "sec-getmodifysetvalueinbuffer", "sec-array.prototype.includes", "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact", "sec-array.prototype.lastindexof", "sec-asyncgeneratorfunction-objects", "sec-proxy-constructor", "sec-arrayspeciescreate", "sec-array.prototype.splice", "sec-array-initializer", "sec-arraybuffer-constructor", "sec-applystringornumericbinaryoperator", "sec-date.prototype.tojson", "sec-weakref-invariants", "sec-map.prototype.foreach", "sec-generator-objects", "sec-allocatesharedarraybuffer", "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys", "sec-generatorfunction-objects", "sec-asyncgeneratorfunction-constructor", "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v", "sec-typedarray-objects", "sec-date-constructor", "sec-map-objects"], "secData": {"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver": {"num": "10.5.8", "title": "#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver</span> [[Get]] ( <var>P</var>, <var>Receiver</var> )</h1>\n      <p>The [[Get]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"get\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Get]](<var>P</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>Receiver</var> &#187;).</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>trapResult</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Get]] is <emu-val>undefined</emu-val>, then<ol><li>If <var>trapResult</var> is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Get]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            The value reported for a property must be <emu-val>undefined</emu-val> if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Get]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.findindex": {"num": "23.1.3.9", "title": "#sec-array.prototype.findindex Array.prototype.findIndex ( predicate [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.findindex\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.findindex\">#sec-array.prototype.findindex</span> Array.prototype.findIndex ( <var>predicate</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>predicate</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>findIndex</code> calls <var>predicate</var> once for each element of the array, in ascending order, until it finds one where <var>predicate</var> returns <emu-val>true</emu-val>. If such an element is found, <code>findIndex</code> immediately returns the index of that element value. Otherwise, <code>findIndex</code> returns -1.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>predicate</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>predicate</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>findIndex</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>predicate</var>.</p>\n          <p>The range of elements processed by <code>findIndex</code> is set before the first call to <var>predicate</var>. Elements that are appended to the array after the call to <code>findIndex</code> begins will not be visited by <var>predicate</var>. If existing elements of the array are changed, their value as passed to <var>predicate</var> will be the value at the time that <code>findIndex</code> visits them; elements that are deleted after the call to <code>findIndex</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>findIndex</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>predicate</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>predicate</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>true</emu-val>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>findIndex</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.reduce": {"num": "23.1.3.21", "title": "#sec-array.prototype.reduce Array.prototype.reduce ( callbackfn [ , initialValue ] )", "html": "<emu-clause id=\"sec-array.prototype.reduce\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reduce\">#sec-array.prototype.reduce</span> Array.prototype.reduce ( <var>callbackfn</var> [ , <var>initialValue</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that takes four arguments. <code>reduce</code> calls the callback, as a function, once for each element after the first element present in the array, in ascending order.</p>\n          <p><var>callbackfn</var> is called with four arguments: the <var>previousValue</var> (value from the previous call to <var>callbackfn</var>), the <var>currentValue</var> (value of the current element), the <var>currentIndex</var>, and the object being traversed. The first time that callback is called, the <var>previousValue</var> and <var>currentValue</var> can be one of two values. If an <var>initialValue</var> was supplied in the call to <code>reduce</code>, then <var>previousValue</var> will be equal to <var>initialValue</var> and <var>currentValue</var> will be equal to the first value in the array. If no <var>initialValue</var> was supplied, then <var>previousValue</var> will be equal to the first value in the array and <var>currentValue</var> will be equal to the second. It is a <emu-val>TypeError</emu-val> if the array contains no elements and <var>initialValue</var> is not provided.</p>\n          <p><code>reduce</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>reduce</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>reduce</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>reduce</code> visits them; elements that are deleted after the call to <code>reduce</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>reduce</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>len</var> = 0 and <var>initialValue</var> is not present, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Let <var>accumulator</var> be <emu-val>undefined</emu-val>.</li><li>If <var>initialValue</var> is present, then<ol><li>Set <var>accumulator</var> to <var>initialValue</var>.</li></ol></li><li>Else,<ol><li>Let <var>kPresent</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>kPresent</var> is <emu-val>false</emu-val> and <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Set <var>kPresent</var> to ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>If <var>kPresent</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <emu-val>undefined</emu-val>, &#171; <var>accumulator</var>, <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>accumulator</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reduce</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise-objects": {"num": "27.2", "title": "#sec-promise-objects Promise Objects", "html": "<emu-clause id=\"sec-promise-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-objects\">#sec-promise-objects</span> Promise Objects</h1>\n    <p>A Promise is an object that is used as a placeholder for the eventual results of a deferred (and possibly asynchronous) computation.</p>\n    <p>Any Promise is in one of three mutually exclusive states: <em>fulfilled</em>, <em>rejected</em>, and <em>pending</em>:</p>\n    <ul>\n      <li>\n        A promise <code>p</code> is fulfilled if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>f</code>.\n      </li>\n      <li>\n        A promise <code>p</code> is rejected if <code>p.then(f, r)</code> will immediately enqueue a <emu-xref href=\"#job\"><a href=\"#job\">Job</a></emu-xref> to call the function <code>r</code>.\n      </li>\n      <li>\n        A promise is pending if it is neither fulfilled nor rejected.\n      </li>\n    </ul>\n    <p>A promise is said to be <em>settled</em> if it is not pending, i.e. if it is either fulfilled or rejected.</p>\n    <p>A promise is <em>resolved</em> if it is settled or if it has been &#8220;locked in&#8221; to match the state of another promise. Attempting to resolve or reject a resolved promise has no effect. A promise is <em>unresolved</em> if it is not resolved. An unresolved promise is always in the pending state. A resolved promise may be pending, fulfilled or rejected.</p>\n\n    <div id=\"excluded-sec-promise-abstract-operations\"><h1><span class=\"secnum\">27.2.1</span>#sec-promise-abstract-operations Promise Abstract Operations</h1>...</div><div id=\"excluded-sec-promise-jobs\"><h1><span class=\"secnum\">27.2.2</span>#sec-promise-jobs Promise Jobs</h1>...</div><div id=\"excluded-sec-promise-constructor\"><h1><span class=\"secnum\">27.2.3</span>#sec-promise-constructor The Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-constructor\"><h1><span class=\"secnum\">27.2.4</span>#sec-properties-of-the-promise-constructor Properties of the Promise Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-promise-prototype-object\"><h1><span class=\"secnum\">27.2.5</span>#sec-properties-of-the-promise-prototype-object Properties of the Promise Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-promise-instances\"><h1><span class=\"secnum\">27.2.6</span>#sec-properties-of-promise-instances Properties of Promise Instances</h1>...</div></emu-clause>\n\n  "}, "sec-settypedarrayfromtypedarray": {"num": "23.2.3.23.1", "title": "#sec-settypedarrayfromtypedarray SetTypedArrayFromTypedArray ( target, targetOffset, source )", "html": "<emu-clause id=\"sec-settypedarrayfromtypedarray\" oldids=\"sec-%typedarray%.prototype.set-typedarray-offset\" aoid=\"SetTypedArrayFromTypedArray\"><span id=\"sec-%typedarray%.prototype.set-typedarray-offset\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-settypedarrayfromtypedarray\">#sec-settypedarrayfromtypedarray</span> SetTypedArrayFromTypedArray ( <var>target</var>, <var>targetOffset</var>, <var>source</var> )</h1>\n          <p>The abstract operation SetTypedArrayFromTypedArray takes arguments <var>target</var> (a TypedArray), <var>targetOffset</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> or +&#8734;), and <var>source</var> (a TypedArray). It sets multiple values in <var>target</var>, starting at index <var>targetOffset</var>, reading the values from <var>source</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>source</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>srcBuffer</var> be <var>source</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>srcName</var> be the String value of <var>source</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcLength</var> be <var>source</var>.[[ArrayLength]].</li><li>Let <var>srcByteOffset</var> be <var>source</var>.[[ByteOffset]].</li><li>If <var>targetOffset</var> is +&#8734;, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>target</var>.[[ContentType]] &#8800; <var>source</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>If both <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcBuffer</var>) and <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>targetBuffer</var>) are <emu-val>true</emu-val>, then<ol><li>If <var>srcBuffer</var>.[[ArrayBufferData]] and <var>targetBuffer</var>.[[ArrayBufferData]] are the same <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values, let <var>same</var> be <emu-val>true</emu-val>; else let <var>same</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else, let <var>same</var> be <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcBuffer</var>, <var>targetBuffer</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>srcByteLength</var> be <var>source</var>.[[ByteLength]].</li><li>Set <var>srcBuffer</var> to ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcByteLength</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li><li>NOTE: <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref> is used to clone <var>srcBuffer</var> because is it known to not have any observable side-effects.</li><li>Let <var>srcByteIndex</var> be 0.</li></ol></li><li>Else, let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>If <var>srcType</var> is the same as <var>targetType</var>, then<ol><li>NOTE: If <var>srcType</var> and <var>targetType</var> are the same, the transfer must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <emu-const>Uint8</emu-const>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <emu-const>Uint8</emu-const>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-date.parse": {"num": "21.4.3.2", "title": "#sec-date.parse Date.parse ( string )", "html": "<emu-clause id=\"sec-date.parse\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.parse\">#sec-date.parse</span> Date.parse ( <var>string</var> )</h1>\n        <p>The <code>parse</code> function applies the <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref> operator to its argument. If <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref> results in an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> is immediately returned. Otherwise, <code>parse</code> interprets the resulting String as a date and time; it returns a Number, the UTC <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> corresponding to the date and time. The String may be interpreted as a local time, a UTC time, or a time in some other time zone, depending on the contents of the String. The function first attempts to parse the String according to the format described in Date Time String Format (<emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>), including expanded years. If the String does not conform to that format the function may fall back to any implementation-specific heuristics or implementation-specific date formats. Strings that are unrecognizable or contain out-of-bounds format element values shall cause <code>Date.parse</code> to return <emu-val>NaN</emu-val>.</p>\n        <p>If the String conforms to the <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\">Date Time String Format</a></emu-xref>, substitute values take the place of absent format elements. When the <code>MM</code> or <code>DD</code> elements are absent, <emu-val>\"01\"</emu-val> is used. When the <code>HH</code>, <code>mm</code>, or <code>ss</code> elements are absent, <emu-val>\"00\"</emu-val> is used. When the <code>sss</code> element is absent, <emu-val>\"000\"</emu-val> is used. When the UTC offset representation is absent, date-only forms are interpreted as a UTC time and date-time forms are interpreted as a local time.</p>\n        <p>If <code>x</code> is any Date whose milliseconds amount is zero within a particular implementation of ECMAScript, then all of the following expressions should produce the same numeric value in that implementation, if all the properties referenced have their initial values:</p>\n        <pre><code class=\"javascript hljs\">x.<span class=\"hljs-title function_\">valueOf</span>()\n<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toString</span>())\n<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toUTCString</span>())\n<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toISOString</span>())</code></pre>\n        <p>However, the expression</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">parse</span>(x.<span class=\"hljs-title function_\">toLocaleString</span>())</code></pre>\n        <p>is not required to produce the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as the preceding three expressions and, in general, the value produced by <code>Date.parse</code> is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> when given any String value that does not conform to the Date Time String Format (<emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>) and that could not be produced in that implementation by the <code>toString</code> or <code>toUTCString</code> method.</p>\n      </emu-clause>\n\n      "}, "sec-arraysetlength": {"num": "10.4.2.4", "title": "#sec-arraysetlength ArraySetLength ( A, Desc )", "html": "<emu-clause id=\"sec-arraysetlength\" aoid=\"ArraySetLength\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraysetlength\">#sec-arraysetlength</span> ArraySetLength ( <var>A</var>, <var>Desc</var> )</h1>\n        <p>The abstract operation ArraySetLength takes arguments <var>A</var> (an Array) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>Desc</var>.[[Value]] is absent, then<ol><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>Desc</var>).</li></ol></li><li>Let <var>newLenDesc</var> be a copy of <var>Desc</var>.</li><li id=\"step-arraysetlength-newlen\">Let <var>newLen</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>Desc</var>.[[Value]]).</li><li id=\"step-arraysetlength-numberlen\">Let <var>numberLen</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>Desc</var>.[[Value]]).</li><li>If <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref>(<var>newLen</var>, <var>numberLen</var>) is <emu-val>false</emu-val>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Set <var>newLenDesc</var>.[[Value]] to <var>newLen</var>.</li><li>Let <var>oldLenDesc</var> be <emu-xref aoid=\"OrdinaryGetOwnProperty\"><a href=\"#sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: !&#160;<emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>oldLenDesc</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>oldLenDesc</var>.[[Configurable]] is <emu-val>false</emu-val>.</li><li>Let <var>oldLen</var> be <var>oldLenDesc</var>.[[Value]].</li><li>If <var>newLen</var> &#8805; <var>oldLen</var>, then<ol><li>Return <emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>newLenDesc</var>).</li></ol></li><li>If <var>oldLenDesc</var>.[[Writable]] is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>newLenDesc</var>.[[Writable]] is absent or has the value <emu-val>true</emu-val>, let <var>newWritable</var> be <emu-val>true</emu-val>.</li><li>Else,<ol><li>NOTE: Setting the [[Writable]] attribute to <emu-val>false</emu-val> is deferred in case any elements cannot be deleted.</li><li>Let <var>newWritable</var> be <emu-val>false</emu-val>.</li><li>Set <var>newLenDesc</var>.[[Writable]] to <emu-val>true</emu-val>.</li></ol></li><li>Let <var>succeeded</var> be !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>newLenDesc</var>).</li><li>If <var>succeeded</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>For each own property key <var>P</var> of <var>A</var> that is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, whose numeric value is greater than or equal to <var>newLen</var>, in descending numeric index order, do<ol><li>Let <var>deleteSucceeded</var> be ! <var>A</var>.[[Delete]](<var>P</var>).</li><li>If <var>deleteSucceeded</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>newLenDesc</var>.[[Value]] to !&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>) + <emu-val>1</emu-val><sub>&#120125;</sub>.</li><li>If <var>newWritable</var> is <emu-val>false</emu-val>, set <var>newLenDesc</var>.[[Writable]] to <emu-val>false</emu-val>.</li><li>Perform !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <var>newLenDesc</var>).</li><li>Return <emu-val>false</emu-val>.</li></ol></li></ol></li><li>If <var>newWritable</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>succeeded</var> to !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Writable]]: <emu-val>false</emu-val> }).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>succeeded</var> is <emu-val>true</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>In steps <emu-xref href=\"#step-arraysetlength-newlen\"><a href=\"#step-arraysetlength-newlen\" class=\"excluded-xref\" excluded-id=\"step-arraysetlength-newlen\">#step-arraysetlength-newlen</a></emu-xref> and <emu-xref href=\"#step-arraysetlength-numberlen\"><a href=\"#step-arraysetlength-numberlen\" class=\"excluded-xref\" excluded-id=\"step-arraysetlength-numberlen\">#step-arraysetlength-numberlen</a></emu-xref>, if <var>Desc</var>.[[Value]] is an object then its <code>valueOf</code> method is called twice. This is legacy behaviour that was specified with this effect starting with the 2<sup>nd</sup> Edition of this specification.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-ecmascript-function-objects-call-thisargument-argumentslist": {"num": "10.2.1", "title": "#sec-ecmascript-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>calleeContext</var> be <emu-xref aoid=\"PrepareForOrdinaryCall\"><a href=\"#sec-prepareforordinarycall\">PrepareForOrdinaryCall</a></emu-xref>(<var>F</var>, <emu-val>undefined</emu-val>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>F</var>.[[IsClassConstructor]] is <emu-val>true</emu-val>, then<ol><li>Let <var>error</var> be a newly created <emu-val>TypeError</emu-val> object.</li><li>NOTE: <var>error</var> is created in <var>calleeContext</var> with <var>F</var>'s associated <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>.</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <emu-xref aoid=\"ThrowCompletion\"><a href=\"#sec-throwcompletion\">ThrowCompletion</a></emu-xref>(<var>error</var>).</li></ol></li><li>Perform <emu-xref aoid=\"OrdinaryCallBindThis\"><a href=\"#sec-ordinarycallbindthis\">OrdinaryCallBindThis</a></emu-xref>(<var>F</var>, <var>calleeContext</var>, <var>thisArgument</var>).</li><li>Let <var>result</var> be <emu-xref aoid=\"OrdinaryCallEvaluateBody\"><a href=\"#sec-ordinarycallevaluatebody\">OrdinaryCallEvaluateBody</a></emu-xref>(<var>F</var>, <var>argumentsList</var>).</li><li id=\"step-call-pop-context-stack\">Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>result</var>.[[Type]] is <emu-const>return</emu-const>, return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<var>result</var>.[[Value]]).</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>result</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> in step <emu-xref href=\"#step-call-pop-context-stack\"><a href=\"#step-call-pop-context-stack\" class=\"excluded-xref\" excluded-id=\"step-call-pop-context-stack\">#step-call-pop-context-stack</a></emu-xref> it must not be destroyed if it is suspended and retained for later resumption by an accessible Generator.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-prepareforordinarycall\"><h1><span class=\"secnum\">10.2.1.1</span>#sec-prepareforordinarycall PrepareForOrdinaryCall ( F, newTarget )</h1>...</div><div id=\"excluded-sec-ordinarycallbindthis\"><h1><span class=\"secnum\">10.2.1.2</span>#sec-ordinarycallbindthis OrdinaryCallBindThis ( F, calleeContext, thisArgument )</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">10.2.1.3</span>#sec-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-ordinarycallevaluatebody\"><h1><span class=\"secnum\">10.2.1.4</span>#sec-ordinarycallevaluatebody OrdinaryCallEvaluateBody ( F, argumentsList )</h1>...</div></emu-clause>\n\n    "}, "sec-clonearraybuffer": {"num": "25.1.2.4", "title": "#sec-clonearraybuffer CloneArrayBuffer ( srcBuffer, srcByteOffset, srcLength, cloneConstructor )", "html": "<emu-clause id=\"sec-clonearraybuffer\" aoid=\"CloneArrayBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-clonearraybuffer\">#sec-clonearraybuffer</span> CloneArrayBuffer ( <var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcLength</var>, <var>cloneConstructor</var> )</h1>\n        <p>The abstract operation CloneArrayBuffer takes arguments <var>srcBuffer</var> (an ArrayBuffer), <var>srcByteOffset</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), <var>srcLength</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), and <var>cloneConstructor</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It creates a new ArrayBuffer whose data is a copy of <var>srcBuffer</var>'s data over the range starting at <var>srcByteOffset</var> and continuing for <var>srcLength</var> bytes. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>srcBuffer</var>) is Object and <var>srcBuffer</var> has an [[ArrayBufferData]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>cloneConstructor</var>) is <emu-val>true</emu-val>.</li><li>Let <var>targetBuffer</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>cloneConstructor</var>, <var>srcLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcBlock</var> be <var>srcBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>targetBlock</var> be <var>targetBuffer</var>.[[ArrayBufferData]].</li><li>Perform <emu-xref aoid=\"CopyDataBlockBytes\"><a href=\"#sec-copydatablockbytes\">CopyDataBlockBytes</a></emu-xref>(<var>targetBlock</var>, 0, <var>srcBlock</var>, <var>srcByteOffset</var>, <var>srcLength</var>).</li><li>Return <var>targetBuffer</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-sharedarraybuffer-constructor": {"num": "25.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, if that property is present (see below).</li>\n        <li>creates and initializes a new SharedArrayBuffer when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified SharedArrayBuffer behaviour must include a <code>super</code> call to the SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <p>Whenever a <emu-xref href=\"#host\"><a href=\"#host\">host</a></emu-xref> does not provide concurrent access to SharedArrayBuffers it may omit the <emu-val>\"SharedArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</p>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p": {"num": "10.5.7", "title": "#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p</span> [[HasProperty]] ( <var>P</var> )</h1>\n      <p>The [[HasProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"has\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[HasProperty]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[HasProperty]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[HasProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as an own property of the target object and the target object is not extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-set-objects": {"num": "24.2", "title": "#sec-set-objects Set Objects", "html": "<emu-clause id=\"sec-set-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-objects\">#sec-set-objects</span> Set Objects</h1>\n    <p>Set objects are collections of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>. A distinct value may only occur once as an element of a Set's collection. Distinct values are discriminated using the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> comparison algorithm.</p>\n    <p>Set objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this specification is only intended to describe the required observable semantics of Set objects. It is not intended to be a viable implementation model.</p>\n\n    <div id=\"excluded-sec-set-constructor\"><h1><span class=\"secnum\">24.2.1</span>#sec-set-constructor The Set Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-set-constructor\"><h1><span class=\"secnum\">24.2.2</span>#sec-properties-of-the-set-constructor Properties of the Set Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-set-prototype-object\"><h1><span class=\"secnum\">24.2.3</span>#sec-properties-of-the-set-prototype-object Properties of the Set Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-set-instances\"><h1><span class=\"secnum\">24.2.4</span>#sec-properties-of-set-instances Properties of Set Instances</h1>...</div><div id=\"excluded-sec-set-iterator-objects\"><h1><span class=\"secnum\">24.2.5</span>#sec-set-iterator-objects Set Iterator Objects</h1>...</div></emu-clause>\n\n  "}, "sec-promise-executor": {"num": "27.2.3.1", "title": "#sec-promise-executor Promise ( executor )", "html": "<emu-clause id=\"sec-promise-executor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</span> Promise ( <var>executor</var> )</h1>\n        <p>When the <code>Promise</code> function is called with argument <var>executor</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>executor</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(NewTarget, <emu-val>\"%Promise.prototype%\"</emu-val>, &#171; [[PromiseState]], [[PromiseResult]], [[PromiseFulfillReactions]], [[PromiseRejectReactions]], [[PromiseIsHandled]] &#187;).</li><li>Set <var>promise</var>.[[PromiseState]] to <emu-const>pending</emu-const>.</li><li>Set <var>promise</var>.[[PromiseFulfillReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseRejectReactions]] to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Set <var>promise</var>.[[PromiseIsHandled]] to <emu-val>false</emu-val>.</li><li>Let <var>resolvingFunctions</var> be <emu-xref aoid=\"CreateResolvingFunctions\"><a href=\"#sec-createresolvingfunctions\">CreateResolvingFunctions</a></emu-xref>(<var>promise</var>).</li><li>Let <var>completion</var> be <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>executor</var>, <emu-val>undefined</emu-val>, &#171; <var>resolvingFunctions</var>.[[Resolve]], <var>resolvingFunctions</var>.[[Reject]] &#187;).</li><li>If <var>completion</var> is an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>resolvingFunctions</var>.[[Reject]], <emu-val>undefined</emu-val>, &#171; <var>completion</var>.[[Value]] &#187;).</li></ol></li><li>Return <var>promise</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <var>executor</var> argument must be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. It is called for initiating and reporting completion of the possibly deferred action represented by this Promise. The executor is called with two arguments: <var>resolve</var> and <var>reject</var>. These are functions that may be used by the <var>executor</var> function to report eventual completion or failure of the deferred computation. Returning from the executor function does not mean that the deferred action has been completed but only that the request to eventually perform the deferred action has been accepted.</p>\n          <p>The <var>resolve</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>resolve</var> function to indicate that it wishes to resolve the associated Promise. The argument passed to the <var>resolve</var> function represents the eventual value of the deferred action and can be either the actual fulfillment value or another promise which will provide the value if it is fulfilled.</p>\n          <p>The <var>reject</var> function that is passed to an <var>executor</var> function accepts a single argument. The <var>executor</var> code may eventually call the <var>reject</var> function to indicate that the associated Promise is rejected and will never be fulfilled. The argument passed to the <var>reject</var> function is used as the rejection value of the promise. Typically it will be an Error object.</p>\n          <p>The resolve and reject functions passed to an <var>executor</var> function by the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> have the capability to actually resolve and reject the associated promise. Subclasses may have different <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> behaviour that passes in customized values for resolve and reject.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof": {"num": "10.5.1", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\">#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof</span> [[GetPrototypeOf]] ( )</h1>\n      <p>The [[GetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetPrototypeOf]]().</li></ol></li><li>Let <var>handlerProto</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handlerProto</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>handlerProto</var>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>handlerProto</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>handlerProto</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetPrototypeOf]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetPrototypeOf]] must be either an Object or <emu-val>null</emu-val>.\n          </li>\n          <li>\n            If the target object is not extensible, [[GetPrototypeOf]] applied to the Proxy object must return the same value as [[GetPrototypeOf]] applied to the Proxy object's target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": {"num": "10.5.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\">#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</span> [[GetOwnProperty]] ( <var>P</var> )</h1>\n      <p>The [[GetOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"getOwnPropertyDescriptor\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li></ol></li><li>Let <var>trapResultObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>trapResultObj</var>) is neither Object nor Undefined, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>trapResultObj</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>resultDesc</var> be ?&#160;<emu-xref aoid=\"ToPropertyDescriptor\"><a href=\"#sec-topropertydescriptor\">ToPropertyDescriptor</a></emu-xref>(<var>trapResultObj</var>).</li><li>Call <emu-xref aoid=\"CompletePropertyDescriptor\"><a href=\"#sec-completepropertydescriptor\">CompletePropertyDescriptor</a></emu-xref>(<var>resultDesc</var>).</li><li>Let <var>valid</var> be <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>resultDesc</var>, <var>targetDesc</var>).</li><li>If <var>valid</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>resultDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val> or <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>resultDesc</var> has a [[Writable]] field and <var>resultDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <var>resultDesc</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[GetOwnProperty]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[GetOwnProperty]] must be either an Object or <emu-val>undefined</emu-val>.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-existent, if the target object is not extensible, unless it does not exist as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as existent, if the target object is not extensible, unless it exists as an own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as non-configurable, unless it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as both non-configurable and non-writable, unless it exists as a non-configurable, non-writable own property of the target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-async-function-objects": {"num": "27.7", "title": "#sec-async-function-objects AsyncFunction Objects", "html": "<emu-clause id=\"sec-async-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-objects\">#sec-async-function-objects</span> AsyncFunction Objects</h1>\n    <p>AsyncFunctions are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt>s, <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt>s, and <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-async-function-constructor\"><h1><span class=\"secnum\">27.7.1</span>#sec-async-function-constructor The AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-constructor-properties\"><h1><span class=\"secnum\">27.7.2</span>#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties\"><h1><span class=\"secnum\">27.7.3</span>#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object</h1>...</div><div id=\"excluded-sec-async-function-instances\"><h1><span class=\"secnum\">27.7.4</span>#sec-async-function-instances AsyncFunction Instances</h1>...</div><div id=\"excluded-sec-async-functions-abstract-operations\"><h1><span class=\"secnum\">27.7.5</span>#sec-async-functions-abstract-operations Async Functions Abstract Operations</h1>...</div></emu-clause>\n"}, "sec-newpromisecapability": {"num": "27.2.1.5", "title": "#sec-newpromisecapability NewPromiseCapability ( C )", "html": "<emu-clause id=\"sec-newpromisecapability\" oldids=\"sec-getcapabilitiesexecutor-functions\" aoid=\"NewPromiseCapability\"><span id=\"sec-getcapabilitiesexecutor-functions\"></span>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-newpromisecapability\">#sec-newpromisecapability</span> NewPromiseCapability ( <var>C</var> )</h1>\n        <p>The abstract operation NewPromiseCapability takes argument <var>C</var>. It attempts to use <var>C</var> as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in the fashion of the built-in Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a promise and extract its <code>resolve</code> and <code>reject</code> functions. The promise plus the <code>resolve</code> and <code>reject</code> functions are used to initialize a new <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref>. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>NOTE: <var>C</var> is assumed to be a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that supports the parameter conventions of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (see <emu-xref href=\"#sec-promise-executor\"><a href=\"#sec-promise-executor\" class=\"excluded-xref\" excluded-id=\"sec-promise-executor\">#sec-promise-executor</a></emu-xref>).</li><li>Let <var>promiseCapability</var> be the <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> { [[Promise]]: <emu-val>undefined</emu-val>, [[Resolve]]: <emu-val>undefined</emu-val>, [[Reject]]: <emu-val>undefined</emu-val> }.</li><li>Let <var>executorClosure</var> be a new <emu-xref href=\"#sec-abstract-closure\"><a href=\"#sec-abstract-closure\">Abstract Closure</a></emu-xref> with parameters (<var>resolve</var>, <var>reject</var>) that captures <var>promiseCapability</var> and performs the following steps when called:<ol><li>If <var>promiseCapability</var>.[[Resolve]] is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>promiseCapability</var>.[[Reject]] is not <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Resolve]] to <var>resolve</var>.</li><li>Set <var>promiseCapability</var>.[[Reject]] to <var>reject</var>.</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>executor</var> be !&#160;<emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref>(<var>executorClosure</var>, 2, <emu-val>\"\"</emu-val>, &#171; &#187;).</li><li>Let <var>promise</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>executor</var> &#187;).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Resolve]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>promiseCapability</var>.[[Reject]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Set <var>promiseCapability</var>.[[Promise]] to <var>promise</var>.</li><li>Return <var>promiseCapability</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This abstract operation supports Promise subclassing, as it is generic on any <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that calls a passed executor function argument in the same way as the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. It is used to generalize static methods of the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to any subclass.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-regexp.prototype-@@split": {"num": "22.2.5.13", "title": "#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )", "html": "<emu-clause id=\"sec-regexp.prototype-@@split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@split\">#sec-regexp.prototype-@@split</span> RegExp.prototype [ @@split ] ( <var>string</var>, <var>limit</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Returns an Array into which substrings of the result of converting <var>string</var> to a String have been stored. The substrings are determined by searching from left to right for matches of the <emu-val>this</emu-val> value regular expression; these occurrences are not part of any String in the returned array, but serve to divide up the String value.</p>\n          <p>The <emu-val>this</emu-val> value may be an empty regular expression or a regular expression that can match an empty String. In this case, the regular expression does not match the empty <emu-not-ref>substring</emu-not-ref> at the beginning or end of the input String, nor does it match the empty <emu-not-ref>substring</emu-not-ref> at the end of the previous separator match. (For example, if the regular expression matches the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each <emu-not-ref>substring</emu-not-ref> contains one code unit.) Only the first match at a given index of the String is considered, even if backtracking could yield a non-empty <emu-not-ref>substring</emu-not-ref> match at that index. (For example, <code>/a*?/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"a\", \"b\"]</code>, while <code>/a*/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"\",\"b\"]</code>.)</p>\n          <p>If <var>string</var> is (or converts to) the empty String, the result depends on whether the regular expression can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If the regular expression contains capturing parentheses, then each time <var>separator</var> is matched the results (including any <emu-val>undefined</emu-val> results) of the capturing parentheses are spliced into the output array. For example,</p>\n          <pre><code class=\"javascript hljs\">/&lt;(\\/)?([^<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;&gt;</span>]+)&gt;/[Symbol.split](\"A<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">B</span>&gt;</span>bold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">B</span>&gt;</span>and<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CODE</span>&gt;</span>coded<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">CODE</span>&gt;</span>\")</span></code></pre>\n          <p>evaluates to the array</p>\n          <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"bold\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"and\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"coded\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"\"</span>]</code></pre>\n          <p>If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <p>When the <code>@@split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <emu-val>\"flags\"</emu-val>)).</li><li>If <var>flags</var> contains <emu-val>\"u\"</emu-val>, let <var>unicodeMatching</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>unicodeMatching</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <emu-val>\"y\"</emu-val>, let <var>newFlags</var> be <var>flags</var>.</li><li>Else, let <var>newFlags</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>flags</var> and <emu-val>\"y\"</emu-val>.</li><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>rx</var>, <var>newFlags</var> &#187;).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>)).</li><li>If <var>lim</var> is 0, return <var>A</var>.</li><li>Let <var>size</var> be the length of <var>S</var>.</li><li>If <var>size</var> is 0, then<ol><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is not <emu-val>null</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &lt; <var>size</var>,<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>splitter</var>, <emu-val>\"lastIndex\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>q</var>), <emu-val>true</emu-val>).</li><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is <emu-val>null</emu-val>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>e</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>splitter</var>, <emu-val>\"lastIndex\"</emu-val>))).</li><li>Set <var>e</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>size</var>).</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>q</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Let <var>numberOfCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>z</var>).</li><li>Set <var>numberOfCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>numberOfCaptures</var> - 1, 0).</li><li>Let <var>i</var> be 1.</li><li>Repeat, while <var>i</var> &#8804; <var>numberOfCaptures</var>,<ol><li>Let <var>nextCapture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>z</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>i</var>))).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>nextCapture</var>).</li><li>Set <var>i</var> to <var>i</var> + 1.</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li></ol></li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>size</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.split]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>@@split</code> method ignores the value of the <emu-val>\"global\"</emu-val> and <emu-val>\"sticky\"</emu-val> properties of this RegExp object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weakset-constructor": {"num": "24.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakSet\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified WeakSet behaviour must include a <code>super</code> call to the WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.reverse": {"num": "23.1.3.23", "title": "#sec-array.prototype.reverse Array.prototype.reverse ( )", "html": "<emu-clause id=\"sec-array.prototype.reverse\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reverse\">#sec-array.prototype.reverse</span> Array.prototype.reverse ( )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The elements of the array are rearranged so as to reverse their order. The object is returned as the result of the call.</p>\n        </div></emu-note>\n        <p>When the <code>reverse</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>middle</var> be <emu-xref aoid=\"floor\"><a href=\"#eqn-floor\">floor</a></emu-xref>(<var>len</var> / 2).</li><li>Let <var>lower</var> be 0.</li><li>Repeat, while <var>lower</var> &#8800; <var>middle</var>,<ol><li>Let <var>upper</var> be <var>len</var> - <var>lower</var> - 1.</li><li>Let <var>upperP</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>upper</var>)).</li><li>Let <var>lowerP</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lower</var>)).</li><li>Let <var>lowerExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>lowerP</var>).</li><li>If <var>lowerExists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>lowerValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>lowerP</var>).</li></ol></li><li>Let <var>upperExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>upperP</var>).</li><li>If <var>upperExists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>upperValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>upperP</var>).</li></ol></li><li>If <var>lowerExists</var> is <emu-val>true</emu-val> and <var>upperExists</var> is <emu-val>true</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>lowerP</var>, <var>upperValue</var>, <emu-val>true</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>upperP</var>, <var>lowerValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else if <var>lowerExists</var> is <emu-val>false</emu-val> and <var>upperExists</var> is <emu-val>true</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>lowerP</var>, <var>upperValue</var>, <emu-val>true</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>upperP</var>).</li></ol></li><li>Else if <var>lowerExists</var> is <emu-val>true</emu-val> and <var>upperExists</var> is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>lowerP</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>upperP</var>, <var>lowerValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>lowerExists</var> and <var>upperExists</var> are both <emu-val>false</emu-val>.</li><li>No action is required.</li></ol></li><li>Set <var>lower</var> to <var>lower</var> + 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reverse</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-date.prototype-@@toprimitive": {"num": "21.4.4.45", "title": "#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-date.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</span> Date.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Date to a primitive value. The allowed values for <var>hint</var> are <emu-val>\"default\"</emu-val>, <emu-val>\"number\"</emu-val>, and <emu-val>\"string\"</emu-val>. Dates are unique among built-in ECMAScript object in that they treat <emu-val>\"default\"</emu-val> as being equivalent to <emu-val>\"string\"</emu-val>, All other built-in ECMAScript objects treat <emu-val>\"default\"</emu-val> as being equivalent to <emu-val>\"number\"</emu-val>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>hint</var> is <emu-val>\"string\"</emu-val> or <emu-val>\"default\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-const>string</emu-const>.</li></ol></li><li>Else if <var>hint</var> is <emu-val>\"number\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-const>number</emu-const>.</li></ol></li><li>Else, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>O</var>, <var>tryFirst</var>).</li></ol></emu-alg>\n        <p>The value of the <emu-val>\"name\"</emu-val> property of this function is <emu-val>\"[Symbol.toPrimitive]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-array-exotic-objects": {"num": "10.4.2", "title": "#sec-array-exotic-objects Array Exotic Objects", "html": "<emu-clause id=\"sec-array-exotic-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-exotic-objects\">#sec-array-exotic-objects</span> Array Exotic Objects</h1>\n      <p>An Array is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> that gives special treatment to <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> property keys (see <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\" class=\"excluded-xref\" excluded-id=\"sec-object-type\">#sec-object-type</a></emu-xref>). A property whose <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> is also called an <em>element</em>. Every Array has a non-configurable <emu-val>\"length\"</emu-val> property whose value is always a non-negative <emu-xref href=\"#integral-number\"><a href=\"#integral-number\">integral Number</a></emu-xref> whose <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> is less than 2<sup>32</sup>. The value of the <emu-val>\"length\"</emu-val> property is numerically greater than the name of every own property whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>; whenever an own property of an Array is created or changed, other properties are adjusted as necessary to maintain this invariant. Specifically, whenever an own property is added whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>, the value of the <emu-val>\"length\"</emu-val> property is changed, if necessary, to be one more than the numeric value of that <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>; and whenever the value of the <emu-val>\"length\"</emu-val> property is changed, every own property whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> whose value is not smaller than the new length is deleted. This constraint applies only to own properties of an Array and is unaffected by <emu-val>\"length\"</emu-val> or <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> properties that may be inherited from its prototypes.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>A String <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> <var>P</var> is an <em><emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref></em> if and only if <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>)) equals <var>P</var> and <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>P</var>) is not the same value as <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<emu-eqn class=\"inline\">2<sup>32</sup> - 1</emu-eqn>).</p>\n      </div></emu-note>\n\n      <p>An object is an <dfn id=\"array-exotic-object\" variants=\"Array exotic objects\">Array exotic object</dfn> (or simply, an Array) if its [[DefineOwnProperty]] internal method uses the following implementation, and its other essential internal methods use the definitions found in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. These methods are installed in <emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-array-exotic-objects-defineownproperty-p-desc\"><h1><span class=\"secnum\">10.4.2.1</span>#sec-array-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )</h1>...</div><div id=\"excluded-sec-arraycreate\"><h1><span class=\"secnum\">10.4.2.2</span>#sec-arraycreate ArrayCreate ( length [ , proto ] )</h1>...</div><div id=\"excluded-sec-arrayspeciescreate\"><h1><span class=\"secnum\">10.4.2.3</span>#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )</h1>...</div><div id=\"excluded-sec-arraysetlength\"><h1><span class=\"secnum\">10.4.2.4</span>#sec-arraysetlength ArraySetLength ( A, Desc )</h1>...</div></emu-clause>\n\n    "}, "sec-initializetypedarrayfromarraybuffer": {"num": "23.2.5.1.3", "title": "#sec-initializetypedarrayfromarraybuffer InitializeTypedArrayFromArrayBuffer ( O, buffer, byteOffset, length )", "html": "<emu-clause id=\"sec-initializetypedarrayfromarraybuffer\" oldids=\"sec-typedarray-buffer-byteoffset-length\" aoid=\"InitializeTypedArrayFromArrayBuffer\"><span id=\"sec-typedarray-buffer-byteoffset-length\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromarraybuffer\">#sec-initializetypedarrayfromarraybuffer</span> InitializeTypedArrayFromArrayBuffer ( <var>O</var>, <var>buffer</var>, <var>byteOffset</var>, <var>length</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromArrayBuffer takes arguments <var>O</var> (a TypedArray), <var>buffer</var> (an ArrayBuffer), <var>byteOffset</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>length</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>buffer</var> is an Object that has an [[ArrayBufferData]] internal slot.</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>offset</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>byteOffset</var>).</li><li>If <var>offset</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> <var>elementSize</var> &#8800; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>length</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>newLength</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>length</var>).</li></ol></li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>bufferByteLength</var> be <var>buffer</var>.[[ArrayBufferByteLength]].</li><li>If <var>length</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>bufferByteLength</var> <emu-xref aoid=\"modulo\"><a href=\"#eqn-modulo\">modulo</a></emu-xref> <var>elementSize</var> &#8800; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>newByteLength</var> be <var>bufferByteLength</var> - <var>offset</var>.</li><li>If <var>newByteLength</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>Let <var>newByteLength</var> be <var>newLength</var> &#215; <var>elementSize</var>.</li><li>If <var>offset</var> + <var>newByteLength</var> &gt; <var>bufferByteLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>buffer</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>newByteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to <var>offset</var>.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>newByteLength</var> / <var>elementSize</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-proxycreate": {"num": "10.5.14", "title": "#sec-proxycreate ProxyCreate ( target, handler )", "html": "<emu-clause id=\"sec-proxycreate\" aoid=\"ProxyCreate\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxycreate\">#sec-proxycreate</span> ProxyCreate ( <var>target</var>, <var>handler</var> )</h1>\n      <p>The abstract operation ProxyCreate takes arguments <var>target</var> and <var>handler</var>. It is used to specify the creation of new Proxy objects. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>P</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[ProxyHandler]], [[ProxyTarget]] &#187;).</li><li>Set <var>P</var>'s essential internal methods, except for [[Call]] and [[Construct]], to the definitions specified in <emu-xref href=\"#sec-proxy-object-internal-methods-and-internal-slots\"><a href=\"#sec-proxy-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots\">#sec-proxy-object-internal-methods-and-internal-slots</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>P</var>.[[Call]] as specified in <emu-xref href=\"#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\"><a href=\"#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\">#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist</a></emu-xref>.</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>P</var>.[[Construct]] as specified in <emu-xref href=\"#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\"><a href=\"#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\" class=\"excluded-xref\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget</a></emu-xref>.</li></ol></li></ol></li><li>Set <var>P</var>.[[ProxyTarget]] to <var>target</var>.</li><li>Set <var>P</var>.[[ProxyHandler]] to <var>handler</var>.</li><li>Return <var>P</var>.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-finalization-registry-constructor": {"num": "26.2.1", "title": "#sec-finalization-registry-constructor The FinalizationRegistry Constructor", "html": "<emu-clause id=\"sec-finalization-registry-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</span> The FinalizationRegistry Constructor</h1>\n      <p>The <dfn variants=\"FinalizationRegistrys\">FinalizationRegistry</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%FinalizationRegistry%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"FinalizationRegistry\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new FinalizationRegistry when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified <code>FinalizationRegistry</code> behaviour must include a <code>super</code> call to the <code>FinalizationRegistry</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>FinalizationRegistry.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-finalization-registry-cleanup-callback\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-finalization-registry-cleanup-callback FinalizationRegistry ( cleanupCallback )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-objects": {"num": "24.3", "title": "#sec-weakmap-objects WeakMap Objects", "html": "<emu-clause id=\"sec-weakmap-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</span> WeakMap Objects</h1>\n    <p>WeakMaps are collections of key/value pairs where the keys are objects and values may be arbitrary <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>. A WeakMap may be queried to see if it contains a key/value pair with a specific key, but no mechanism is provided for enumerating the objects it holds as keys. In certain conditions, objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> are removed as WeakMap keys, as described in <emu-xref href=\"#sec-weakref-execution\"><a href=\"#sec-weakref-execution\" class=\"excluded-xref\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</a></emu-xref>.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time a key/value pair of a WeakMap becomes inaccessible and the time when the key/value pair is removed from the WeakMap. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to observe a key of a WeakMap that does not require the observer to present the observed key.</p>\n    <p>WeakMaps must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of key/value pairs in the collection. The data structure used in this specification is only intended to describe the required observable semantics of WeakMaps. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>WeakMap and WeakSets are intended to provide mechanisms for dynamically associating state with an object in a manner that does not &#8220;leak&#8221; memory resources if, in the absence of the WeakMap or WeakSet, the object otherwise became inaccessible and subject to resource reclamation by the implementation's garbage collection mechanisms. This characteristic can be achieved by using an inverted per-object mapping of weak map instances to keys. Alternatively each weak map may internally store its key to value mappings but this approach requires coordination between the WeakMap or WeakSet implementation and the garbage collector. The following references describe mechanism that may be useful to implementations of WeakMap and WeakSets:</p>\n      <p>Barry Hayes. 1997. Ephemerons: a new finalization mechanism. In <i>Proceedings of the 12th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (OOPSLA '97)</i>, A. Michael Berman (Ed.). ACM, New York, NY, USA, 176-183, <a href=\"http://doi.acm.org/10.1145/263698.263733\">http://doi.acm.org/10.1145/263698.263733</a>.</p>\n      <p>Alexandra Barros, Roberto Ierusalimschy, Eliminating Cycles in Weak Tables. Journal of Universal Computer Science - J.UCS, vol. 14, no. 21, pp. 3481-3497, 2008, <a href=\"http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak\">http://www.jucs.org/jucs_14_21/eliminating_cycles_in_weak</a></p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakmap-constructor\"><h1><span class=\"secnum\">24.3.1</span>#sec-weakmap-constructor The WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-constructor\"><h1><span class=\"secnum\">24.3.2</span>#sec-properties-of-the-weakmap-constructor Properties of the WeakMap Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakmap-prototype-object\"><h1><span class=\"secnum\">24.3.3</span>#sec-properties-of-the-weakmap-prototype-object Properties of the WeakMap Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakmap-instances\"><h1><span class=\"secnum\">24.3.4</span>#sec-properties-of-weakmap-instances Properties of WeakMap Instances</h1>...</div></emu-clause>\n\n  "}, "sec-array.prototype.shift": {"num": "23.1.3.24", "title": "#sec-array.prototype.shift Array.prototype.shift ( )", "html": "<emu-clause id=\"sec-array.prototype.shift\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.shift\">#sec-array.prototype.shift</span> Array.prototype.shift ( )</h1>\n        <p>The first element of the array is removed from the array and returned.</p>\n        <p>When the <code>shift</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> = 0, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Let <var>first</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <emu-val>\"0\"</emu-val>).</li><li>Let <var>k</var> be 1.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> - 1)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromVal</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromVal</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - 1))).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - 1), <emu-val>true</emu-val>).</li><li>Return <var>first</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>shift</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-set-and-relation-specification-type": {"num": "6.2.2", "title": "#sec-set-and-relation-specification-type The Set and Relation Specification Types", "html": "<emu-clause id=\"sec-set-and-relation-specification-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-and-relation-specification-type\">#sec-set-and-relation-specification-type</span> The Set and Relation Specification Types</h1>\n      <p>The <em>Set</em> type is used to explain a collection of unordered elements for use in the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>. It is distinct from the ECMAScript collection type of the same name. To disambiguate, instances of the ECMAScript collection are consistently referred to as \"Set objects\" within this specification. Values of the Set type are simple collections of elements, where no element appears more than once. Elements may be added to and removed from Sets. Sets may be unioned, intersected, or subtracted from each other.</p>\n      <p>The <dfn>Relation</dfn> type is used to explain constraints on Sets. Values of the Relation type are Sets of ordered pairs of values from its value domain. For example, a Relation on events is a set of ordered pairs of events. For a Relation <var>R</var> and two values <var>a</var> and <var>b</var> in the value domain of <var>R</var>, <var>a</var> <var>R</var> <var>b</var> is shorthand for saying the ordered pair (<var>a</var>, <var>b</var>) is a member of <var>R</var>. A Relation is least with respect to some conditions when it is the smallest Relation that satisfies those conditions.</p>\n      <p>A <dfn variants=\"strict partial orders\">strict partial order</dfn> is a Relation value <var>R</var> that satisfies the following.</p>\n      <ul>\n        <li>\n          <p>For all <var>a</var>, <var>b</var>, and <var>c</var> in <var>R</var>'s domain:</p>\n          <ul>\n            <li>It is not the case that <var>a</var> <var>R</var> <var>a</var>, and</li>\n            <li>If <var>a</var> <var>R</var> <var>b</var> and <var>b</var> <var>R</var> <var>c</var>, then <var>a</var> <var>R</var> <var>c</var>.</li>\n          </ul>\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>The two properties above are called irreflexivity and transitivity, respectively.</p>\n      </div></emu-note>\n      <p>A <dfn variants=\"strict total orders\">strict total order</dfn> is a Relation value <var>R</var> that satisfies the following.</p>\n      <ul>\n        <li>\n          <p>For all <var>a</var>, <var>b</var>, and <var>c</var> in <var>R</var>'s domain:</p>\n          <ul>\n            <li><var>a</var> is identical to <var>b</var> or <var>a</var> <var>R</var> <var>b</var> or <var>b</var> <var>R</var> <var>a</var>, and</li>\n            <li>It is not the case that <var>a</var> <var>R</var> <var>a</var>, and</li>\n            <li>If <var>a</var> <var>R</var> <var>b</var> and <var>b</var> <var>R</var> <var>c</var>, then <var>a</var> <var>R</var> <var>c</var>.</li>\n          </ul>\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>The three properties above are called totality, irreflexivity, and transitivity, respectively.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-asyncgenerator-objects": {"num": "27.6", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the initial value of the <emu-val>\"prototype\"</emu-val> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorFunction.prototype.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">27.6.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">27.6.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">27.6.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-abstract-operations-for-typedarray-objects": {"num": "23.2.4", "title": "#sec-abstract-operations-for-typedarray-objects Abstract Operations for TypedArray Objects", "html": "<emu-clause id=\"sec-abstract-operations-for-typedarray-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-typedarray-objects\">#sec-abstract-operations-for-typedarray-objects</span> Abstract Operations for TypedArray Objects</h1>\n\n      <emu-clause id=\"typedarray-species-create\" aoid=\"TypedArraySpeciesCreate\">\n        <h1><span class=\"secnum\">23.2.4.1</span> TypedArraySpeciesCreate ( <var>exemplar</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArraySpeciesCreate takes arguments <var>exemplar</var> and <var>argumentList</var>. It is used to specify the creation of a new TypedArray using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>exemplar</var>. Unlike <emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>, which can create non-Array objects through the use of <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@species</a></emu-xref>, this operation enforces that the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function creates an actual TypedArray. It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>exemplar</var> is an Object that has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>Let <var>defaultConstructor</var> be the intrinsic object listed in column one of <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>exemplar</var>.[[TypedArrayName]].</li><li>Let <var>constructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>exemplar</var>, <var>defaultConstructor</var>).</li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>If <var>result</var>.[[ContentType]] &#8800; <var>exemplar</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      <emu-clause id=\"typedarray-create\" aoid=\"TypedArrayCreate\">\n        <h1><span class=\"secnum\">23.2.4.2</span> TypedArrayCreate ( <var>constructor</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArrayCreate takes arguments <var>constructor</var> and <var>argumentList</var>. It is used to specify the creation of a new TypedArray using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>newTypedArray</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>newTypedArray</var>).</li><li>If <var>argumentList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of a single Number, then<ol><li>If <var>newTypedArray</var>.[[ArrayLength]] &lt; <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>argumentList</var>[0]), throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>newTypedArray</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      <div id=\"excluded-sec-validatetypedarray\"><h1><span class=\"secnum\">23.2.4.3</span>#sec-validatetypedarray ValidateTypedArray ( O )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-array-instances-length": {"num": "23.1.4.1", "title": "#sec-properties-of-array-instances-length length", "html": "<emu-clause id=\"sec-properties-of-array-instances-length\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-array-instances-length\">#sec-properties-of-array-instances-length</span> length</h1>\n        <p>The <emu-val>\"length\"</emu-val> property of an Array instance is a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> whose value is always numerically greater than the name of every configurable own property whose name is an <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref>.</p>\n        <p>The <emu-val>\"length\"</emu-val> property initially has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Reducing the value of the <emu-val>\"length\"</emu-val> property has the side-effect of deleting own array elements whose <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> is between the old and new length values. However, non-configurable properties can not be deleted. Attempting to set the <emu-val>\"length\"</emu-val> property of an Array to a value that is numerically less than or equal to the largest numeric own <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> of an existing non-configurable <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property of the array will result in the length being set to a numeric value that is one greater than that non-configurable numeric own <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>. See <emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in <emu-xref href=\"#table-well-known-intrinsic-objects\"><a href=\"#table-well-known-intrinsic-objects\" class=\"excluded-xref\" excluded-id=\"table-well-known-intrinsic-objects\">#table-well-known-intrinsic-objects</a></emu-xref>.</p>\n        <emu-table id=\"table-well-known-intrinsic-objects\" caption=\"Well-Known Intrinsic Objects\" oldids=\"table-7\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-well-known-intrinsic-objects\">#table-well-known-intrinsic-objects</span>: Well-Known Intrinsic Objects</figcaption><span id=\"table-7\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              </th>\n              <th>\n                Global Name\n              </th>\n              <th>\n                ECMAScript Language Association\n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\">%AggregateError%</a></emu-xref>\n              </td>\n              <td>\n                <code>AggregateError</code>\n              </td>\n              <td>\n                The <code>AggregateError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-aggregate-error-constructor\"><a href=\"#sec-aggregate-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-aggregate-error-constructor\">#sec-aggregate-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Array</code>\n              </td>\n              <td>\n                The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              </td>\n              <td>\n                The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              </td>\n              <td>\n                <code>Atomics</code>\n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt</code>\n              </td>\n              <td>\n                The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigInt64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              </td>\n              <td>\n                The BigInt64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%BigUint64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              </td>\n              <td>\n                The BigUint64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              </td>\n              <td>\n                <code>Boolean</code>\n              </td>\n              <td>\n                The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              </td>\n              <td>\n                <code>DataView</code>\n              </td>\n              <td>\n                The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              </td>\n              <td>\n                <code>Date</code>\n              </td>\n              <td>\n                The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURI</code>\n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURI</code>\n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              </td>\n              <td>\n                <code>Error</code>\n              </td>\n              <td>\n                The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              </td>\n              <td>\n                <code>eval</code>\n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\">%EvalError%</a></emu-xref>\n              </td>\n              <td>\n                <code>EvalError</code>\n              </td>\n              <td>\n                The EvalError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">%FinalizationRegistry%</a></emu-xref>\n              </td>\n              <td>\n                <code>FinalizationRegistry</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\" class=\"excluded-xref\" excluded-id=\"sec-finalization-registry-constructor\">#sec-finalization-registry-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float32Array</code>\n              </td>\n              <td>\n                The Float32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Float64Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Float64Array</code>\n              </td>\n              <td>\n                The Float64Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%foriniteratorprototype%-object\"><a href=\"#sec-%foriniteratorprototype%-object\">%ForInIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of For-In iterator objects (<emu-xref href=\"#sec-for-in-iterator-objects\"><a href=\"#sec-for-in-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-for-in-iterator-objects\">#sec-for-in-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              </td>\n              <td>\n                <code>Function</code>\n              </td>\n              <td>\n                The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of Generators (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int8Array</code>\n              </td>\n              <td>\n                The Int8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int16Array</code>\n              </td>\n              <td>\n                The Int16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Int32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Int32Array</code>\n              </td>\n              <td>\n                The Int32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              </td>\n              <td>\n                <code>isFinite</code>\n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              </td>\n              <td>\n                <code>isNaN</code>\n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              </td>\n              <td>\n                <code>JSON</code>\n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              </td>\n              <td>\n                <code>Map</code>\n              </td>\n              <td>\n                The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              </td>\n              <td>\n                <code>Math</code>\n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              </td>\n              <td>\n                <code>Number</code>\n              </td>\n              <td>\n                The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              </td>\n              <td>\n                <code>Object</code>\n              </td>\n              <td>\n                The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseFloat</code>\n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              </td>\n              <td>\n                <code>parseInt</code>\n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              </td>\n              <td>\n                <code>Promise</code>\n              </td>\n              <td>\n                The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              </td>\n              <td>\n                <code>Proxy</code>\n              </td>\n              <td>\n                The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\">%RangeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>RangeError</code>\n              </td>\n              <td>\n                The RangeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\">%ReferenceError%</a></emu-xref>\n              </td>\n              <td>\n                <code>ReferenceError</code>\n              </td>\n              <td>\n                The ReferenceError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              </td>\n              <td>\n                <code>Reflect</code>\n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              </td>\n              <td>\n                <code>RegExp</code>\n              </td>\n              <td>\n                The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              </td>\n              <td>\n                <code>Set</code>\n              </td>\n              <td>\n                The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              </td>\n              <td>\n                The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              </td>\n              <td>\n                <code>String</code>\n              </td>\n              <td>\n                The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              </td>\n              <td>\n                <code>Symbol</code>\n              </td>\n              <td>\n                The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\">%SyntaxError%</a></emu-xref>\n              </td>\n              <td>\n                <code>SyntaxError</code>\n              </td>\n              <td>\n                The SyntaxError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\">%TypeError%</a></emu-xref>\n              </td>\n              <td>\n                <code>TypeError</code>\n              </td>\n              <td>\n                The TypeError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8Array</code>\n              </td>\n              <td>\n                The Uint8Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint8ClampedArray%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              </td>\n              <td>\n                The Uint8ClampedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint16Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint16Array</code>\n              </td>\n              <td>\n                The Uint16Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">%Uint32Array%</a></emu-xref>\n              </td>\n              <td>\n                <code>Uint32Array</code>\n              </td>\n              <td>\n                The Uint32Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\">%URIError%</a></emu-xref>\n              </td>\n              <td>\n                <code>URIError</code>\n              </td>\n              <td>\n                The URIError <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakMap</code>\n              </td>\n              <td>\n                The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">%WeakRef%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakRef</code>\n              </td>\n              <td>\n                The <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              </td>\n              <td>\n                <code>WeakSet</code>\n              </td>\n              <td>\n                The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Additional entries in <emu-xref href=\"#table-additional-well-known-intrinsic-objects\"><a href=\"#table-additional-well-known-intrinsic-objects\" class=\"excluded-xref\" excluded-id=\"table-additional-well-known-intrinsic-objects\">#table-additional-well-known-intrinsic-objects</a></emu-xref>.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-array.prototype.every": {"num": "23.1.3.5", "title": "#sec-array.prototype.every Array.prototype.every ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.every\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.every\">#sec-array.prototype.every</span> Array.prototype.every ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>every</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order, until it finds one where <var>callbackfn</var> returns <emu-val>false</emu-val>. If such an element is found, <code>every</code> immediately returns <emu-val>false</emu-val>. Otherwise, if <var>callbackfn</var> returned <emu-val>true</emu-val> for all elements, <code>every</code> will return <emu-val>true</emu-val>. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>every</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>every</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>every</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>every</code> visits them; elements that are deleted after the call to <code>every</code> begins and before being visited are not visited. <code>every</code> acts like the \"for all\" quantifier in mathematics. In particular, for an empty array, it returns <emu-val>true</emu-val>.</p>\n        </div></emu-note>\n        <p>When the <code>every</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>every</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.tolocalestring": {"num": "23.1.3.29", "title": "#sec-array.prototype.tolocalestring Array.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )", "html": "<emu-clause id=\"sec-array.prototype.tolocalestring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.tolocalestring\">#sec-array.prototype.tolocalestring</span> Array.prototype.toLocaleString ( [ <var>reserved1</var> [ , <var>reserved2</var> ] ] )</h1>\n        <p>An ECMAScript implementation that includes the ECMA-402 Internationalization API must implement the <code>Array.prototype.toLocaleString</code> method as specified in the ECMA-402 specification. If an ECMAScript implementation does not include the ECMA-402 API the following specification of the <code>toLocaleString</code> method is used.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The first edition of ECMA-402 did not include a replacement specification for the <code>Array.prototype.toLocaleString</code> method.</p>\n        </div></emu-note>\n        <p>The meanings of the optional parameters to this method are defined in the ECMA-402 specification; implementations that do not include ECMA-402 support must not use those parameter positions for anything else.</p>\n        <p>When the <code>toLocaleString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>array</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>array</var>).</li><li>Let <var>separator</var> be the String value for the list-separator String appropriate for the <emu-xref href=\"#host-environment\"><a href=\"#host-environment\">host environment</a></emu-xref>'s current locale (this is derived in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> way).</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>If <var>k</var> &gt; 0, then<ol><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>separator</var>.</li></ol></li><li>Let <var>nextElement</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>nextElement</var> is not <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, then<ol><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>nextElement</var>, <emu-val>\"toLocaleString\"</emu-val>)).</li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>S</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>R</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The elements of the array are converted to Strings using their <code>toLocaleString</code> methods, and these Strings are then concatenated, separated by occurrences of a separator String that has been derived in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> locale-specific way. The result of calling this function is intended to be analogous to the result of <code>toString</code>, except that the result of this function is intended to be locale-specific.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>toLocaleString</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": {"num": "10.5.6", "title": "#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\">#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</span> [[DefineOwnProperty]] ( <var>P</var>, <var>Desc</var> )</h1>\n      <p>The [[DefineOwnProperty]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key) and <var>Desc</var> (a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"defineProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[DefineOwnProperty]](<var>P</var>, <var>Desc</var>).</li></ol></li><li>Let <var>descObj</var> be <emu-xref aoid=\"FromPropertyDescriptor\"><a href=\"#sec-frompropertydescriptor\">FromPropertyDescriptor</a></emu-xref>(<var>Desc</var>).</li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>descObj</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>Desc</var> has a [[Configurable]] field and if <var>Desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Let <var>settingConfigFalse</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else, let <var>settingConfigFalse</var> be <emu-val>false</emu-val>.</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, then<ol><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"IsCompatiblePropertyDescriptor\"><a href=\"#sec-iscompatiblepropertydescriptor\">IsCompatiblePropertyDescriptor</a></emu-xref>(<var>extensibleTarget</var>, <var>Desc</var>, <var>targetDesc</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>settingConfigFalse</var> is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, and <var>targetDesc</var>.[[Writable]] is <emu-val>true</emu-val>, then<ol><li>If <var>Desc</var> has a [[Writable]] field and <var>Desc</var>.[[Writable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[DefineOwnProperty]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[DefineOwnProperty]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be added, if the target object is not extensible.\n          </li>\n          <li>\n            A property cannot be non-configurable, unless there exists a corresponding non-configurable own property of the target object.\n          </li>\n          <li>\n            A non-configurable property cannot be non-writable, unless there exists a corresponding non-configurable, non-writable own property of the target object.\n          </li>\n          <li>\n            If a property has a corresponding target object property then applying the <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> of the property to the target object using [[DefineOwnProperty]] will not throw an exception.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-date.utc": {"num": "21.4.3.4", "title": "#sec-date.utc Date.UTC ( year [ , month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] ] )", "html": "<emu-clause id=\"sec-date.utc\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.utc\">#sec-date.utc</span> Date.UTC ( <var>year</var> [ , <var>month</var> [ , <var>date</var> [ , <var>hours</var> [ , <var>minutes</var> [ , <var>seconds</var> [ , <var>ms</var> ] ] ] ] ] ] )</h1>\n        <p>When the <code>UTC</code> function is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>y</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>year</var>).</li><li>If <var>month</var> is present, let <var>m</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>month</var>); else let <var>m</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>date</var> is present, let <var>dt</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>date</var>); else let <var>dt</var> be <emu-val>1</emu-val><sub>&#120125;</sub>.</li><li>If <var>hours</var> is present, let <var>h</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>hours</var>); else let <var>h</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>minutes</var> is present, let <var>min</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>minutes</var>); else let <var>min</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>seconds</var> is present, let <var>s</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>seconds</var>); else let <var>s</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>ms</var> is present, let <var>milli</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>ms</var>); else let <var>milli</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, let <var>yr</var> be <emu-val>NaN</emu-val>.</li><li>Else,<ol><li>Let <var>yi</var> be !&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>y</var>).</li><li>If 0 &#8804; <var>yi</var> &#8804; 99, let <var>yr</var> be <emu-val>1900</emu-val><sub>&#120125;</sub> + <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>yi</var>); otherwise, let <var>yr</var> be <var>y</var>.</li></ol></li><li>Return <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref>(<emu-xref aoid=\"MakeDate\"><a href=\"#sec-makedate\">MakeDate</a></emu-xref>(<emu-xref aoid=\"MakeDay\"><a href=\"#sec-makeday\">MakeDay</a></emu-xref>(<var>yr</var>, <var>m</var>, <var>dt</var>), <emu-xref aoid=\"MakeTime\"><a href=\"#sec-maketime\">MakeTime</a></emu-xref>(<var>h</var>, <var>min</var>, <var>s</var>, <var>milli</var>))).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>UTC</code> function is <emu-val>7</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>UTC</code> function differs from the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in two ways: it returns a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> as a Number, rather than creating a Date, and it interprets the arguments in UTC rather than as local time.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-dataview-constructor": {"num": "25.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"DataView\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified DataView behaviour must include a <code>super</code> call to the DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.slice": {"num": "23.1.3.25", "title": "#sec-array.prototype.slice Array.prototype.slice ( start, end )", "html": "<emu-clause id=\"sec-array.prototype.slice\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.slice\">#sec-array.prototype.slice</span> Array.prototype.slice ( <var>start</var>, <var>end</var> )</h1>\n        <p>The <code>slice</code> method returns an array containing the elements of the array from element <var>start</var> up to, but not including, element <var>end</var> (or through the end of the array if <var>end</var> is <emu-val>undefined</emu-val>). If <var>start</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>start</var></emu-eqn> where <var>length</var> is the length of the array. If <var>end</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>end</var></emu-eqn> where <var>length</var> is the length of the array.</p>\n        <p>When the <code>slice</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>k</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>k</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>final</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Let <var>count</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>final</var> - <var>k</var>, 0).</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>count</var>).</li><li>Let <var>n</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>final</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>kValue</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li id=\"step-array-proto-slice-set-length\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>), <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The explicit setting of the <emu-val>\"length\"</emu-val> property of the result Array in step <emu-xref href=\"#step-array-proto-slice-set-length\"><a href=\"#step-array-proto-slice-set-length\" class=\"excluded-xref\" excluded-id=\"step-array-proto-slice-set-length\">#step-array-proto-slice-set-length</a></emu-xref> was necessary in previous editions of ECMAScript to ensure that its length was correct in situations where the trailing elements of the result Array were not present. Setting <emu-val>\"length\"</emu-val> became unnecessary starting in ES2015 when the result Array was initialized to its proper length rather than an empty Array but is carried forward to preserve backward compatibility.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>slice</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-%typedarray%.prototype.subarray": {"num": "23.2.3.27", "title": "#sec-%typedarray%.prototype.subarray %TypedArray%.prototype.subarray ( begin, end )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.subarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.subarray\">#sec-%typedarray%.prototype.subarray</span> %TypedArray%.prototype.subarray ( <var>begin</var>, <var>end</var> )</h1>\n        <p>Returns a new <var>TypedArray</var> whose element type is the same as this <var>TypedArray</var> and whose ArrayBuffer is the same as the ArrayBuffer of this <var>TypedArray</var>, referencing the elements at <var>begin</var>, inclusive, up to <var>end</var>, exclusive. If either <var>begin</var> or <var>end</var> is negative, it refers to an index from the end of the array, as opposed to from the beginning.</p>\n        <p>When the <code>subarray</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>O</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>Let <var>srcLength</var> be <var>O</var>.[[ArrayLength]].</li><li>Let <var>relativeBegin</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>begin</var>).</li><li>If <var>relativeBegin</var> is -&#8734;, let <var>beginIndex</var> be 0.</li><li>Else if <var>relativeBegin</var> &lt; 0, let <var>beginIndex</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>srcLength</var> + <var>relativeBegin</var>, 0).</li><li>Else, let <var>beginIndex</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeBegin</var>, <var>srcLength</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>srcLength</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>endIndex</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>endIndex</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>srcLength</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>endIndex</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>srcLength</var>).</li><li>Let <var>newLength</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>endIndex</var> - <var>beginIndex</var>, 0).</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>srcByteOffset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>beginByteOffset</var> be <var>srcByteOffset</var> + <var>beginIndex</var> &#215; <var>elementSize</var>.</li><li>Let <var>argumentsList</var> be &#171; <var>buffer</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>beginByteOffset</var>), <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>newLength</var>) &#187;.</li><li>Return ?&#160;<emu-xref aoid=\"TypedArraySpeciesCreate\"><a href=\"#typedarray-species-create\">TypedArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>argumentsList</var>).</li></ol></emu-alg>\n        <p>This function is not generic. The <emu-val>this</emu-val> value must be an object with a [[TypedArrayName]] internal slot.</p>\n      </emu-clause>\n\n      "}, "sec-string.prototype.matchall": {"num": "22.1.3.12", "title": "#sec-string.prototype.matchall String.prototype.matchAll ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.matchall\">#sec-string.prototype.matchall</span> String.prototype.matchAll ( <var>regexp</var> )</h1>\n        <p>Performs a regular expression match of the String representing the <emu-val>this</emu-val> value against <var>regexp</var> and returns an iterator. Each iteration result's value is an Array containing the results of the match, or <emu-val>null</emu-val> if the String did not match.</p>\n        <p>When the <code>matchAll</code> method is called, the following steps are taken:</p>\n\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>regexp</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>regexp</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@matchAll</a></emu-xref>).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <emu-val>\"g\"</emu-val>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@matchAll</a></emu-xref>, &#171; <var>S</var> &#187;).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">The <code>matchAll</code> function is intentionally generic, it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">Similarly to <code>String.prototype.split</code>, <code>String.prototype.matchAll</code> is designed to typically act without mutating its inputs.</div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.some": {"num": "23.1.3.26", "title": "#sec-array.prototype.some Array.prototype.some ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.some\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.some\">#sec-array.prototype.some</span> Array.prototype.some ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>some</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order, until it finds one where <var>callbackfn</var> returns <emu-val>true</emu-val>. If such an element is found, <code>some</code> immediately returns <emu-val>true</emu-val>. Otherwise, <code>some</code> returns <emu-val>false</emu-val>. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>some</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>some</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>some</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time that <code>some</code> visits them; elements that are deleted after the call to <code>some</code> begins and before being visited are not visited. <code>some</code> acts like the \"exists\" quantifier in mathematics. In particular, for an empty array, it returns <emu-val>false</emu-val>.</p>\n        </div></emu-note>\n        <p>When the <code>some</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>some</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-set.prototype.foreach": {"num": "24.2.3.6", "title": "#sec-set.prototype.foreach Set.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-set.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype.foreach\">#sec-set.prototype.foreach</span> Set.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <p>When the <code>forEach</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>S</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>S</var>, [[SetData]]).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>S</var>.[[SetData]].</li><li>For each element <var>e</var> of <var>entries</var>, do<ol><li>If <var>e</var> is not <emu-const>empty</emu-const>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>e</var>, <var>e</var>, <var>S</var> &#187;).</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each value present in the Set object, in value insertion order. <var>callbackfn</var> is called only for values of the Set which actually exist; it is not called for keys that have been deleted from the set.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the first two arguments are a value contained in the Set. The same value is passed for both arguments. The Set object being traversed is passed as the third argument.</p>\n          <p>The <var>callbackfn</var> is called with three arguments to be consistent with the call back functions used by <code>forEach</code> methods for Map and Array. For Sets, each item value is considered to be both the key and the value.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>Each value is normally visited only once. However, a value will be revisited if it is deleted after it has been visited and then re-added before the <code>forEach</code> call completes. Values that are deleted after the call to <code>forEach</code> begins and before being visited are not visited unless the value is added again before the <code>forEach</code> call completes. New values added after the call to <code>forEach</code> begins are visited.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weak-ref-constructor": {"num": "26.1.1", "title": "#sec-weak-ref-constructor The WeakRef Constructor", "html": "<emu-clause id=\"sec-weak-ref-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref-constructor\">#sec-weak-ref-constructor</span> The WeakRef Constructor</h1>\n      <p>The <dfn variants=\"WeakRefs\">WeakRef</dfn> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakRef%</dfn>.</li>\n        <li>\n          is the initial value of the <emu-val>\"WeakRef\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.\n        </li>\n        <li>\n          creates and initializes a new WeakRef when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.\n        </li>\n        <li>\n          is not intended to be called as a function and will throw an exception when called in that manner.\n        </li>\n        <li>\n          may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified <code>WeakRef</code> behaviour must include a <code>super</code> call to the <code>WeakRef</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakRef.prototype</code> built-in methods.\n        </li>\n      </ul>\n\n      <div id=\"excluded-sec-weak-ref-target\"><h1><span class=\"secnum\">26.1.1.1</span>#sec-weak-ref-target WeakRef ( target )</h1>...</div></emu-clause>\n\n    "}, "sec-promisecapability-records": {"num": "27.2.1.1", "title": "#sec-promisecapability-records PromiseCapability Records", "html": "<emu-clause id=\"sec-promisecapability-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promisecapability-records\">#sec-promisecapability-records</span> PromiseCapability Records</h1>\n        <p>A <dfn variants=\"PromiseCapability Records\">PromiseCapability Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> value used to encapsulate a Promise or promise-like object along with the functions that are capable of resolving or rejecting that promise. PromiseCapability Records are produced by the <emu-xref aoid=\"NewPromiseCapability\"><a href=\"#sec-newpromisecapability\">NewPromiseCapability</a></emu-xref> abstract operation.</p>\n        <p>PromiseCapability Records have the fields listed in <emu-xref href=\"#table-promisecapability-record-fields\"><a href=\"#table-promisecapability-record-fields\" class=\"excluded-xref\" excluded-id=\"table-promisecapability-record-fields\">#table-promisecapability-record-fields</a></emu-xref>.</p>\n        <emu-table id=\"table-promisecapability-record-fields\" caption=\"PromiseCapability Record Fields\" oldids=\"table-57\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-promisecapability-record-fields\">#table-promisecapability-record-fields</span>: <emu-xref href=\"#sec-promisecapability-records\"><a href=\"#sec-promisecapability-records\">PromiseCapability Record</a></emu-xref> Fields</figcaption><span id=\"table-57\"></span>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              </th>\n              <th>\n                Value\n              </th>\n              <th>\n                Meaning\n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[Promise]]\n              </td>\n              <td>\n                An object\n              </td>\n              <td>\n                An object that is usable as a promise.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Resolve]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to resolve the given promise.\n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Reject]]\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>\n              </td>\n              <td>\n                The function that is used to reject the given promise.\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n\n        <div id=\"excluded-sec-ifabruptrejectpromise\"><h1><span class=\"secnum\">27.2.1.1.1</span>#sec-ifabruptrejectpromise IfAbruptRejectPromise ( value, capability )</h1>...</div></emu-clause>\n\n      "}, "sec-array.prototype.sort": {"num": "23.1.3.27", "title": "#sec-array.prototype.sort Array.prototype.sort ( comparefn )", "html": "<emu-clause id=\"sec-array.prototype.sort\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</span> Array.prototype.sort ( <var>comparefn</var> )</h1>\n        <p>The elements of this array are sorted. The sort must be stable (that is, elements that compare equal must remain in their original order). If <var>comparefn</var> is not <emu-val>undefined</emu-val>, it should be a function that accepts two arguments <var>x</var> and <var>y</var> and returns a negative Number if <var>x</var> &lt; <var>y</var>, a positive Number if <var>x</var> &gt; <var>y</var>, or a zero otherwise.</p>\n        <p>When the <code>sort</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li id=\"step-array-sort-comparefn\">If <var>comparefn</var> is not <emu-val>undefined</emu-val> and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>comparefn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li id=\"step-array-sort-len\">Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>obj</var>).</li><li>Let <var>items</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>obj</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>obj</var>, <var>Pk</var>).</li><li>Append <var>kValue</var> to <var>items</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Let <var>itemCount</var> be the number of elements in <var>items</var>.</li><li id=\"step-array-sort\">Sort <var>items</var> using an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> sequence of calls to <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref>. If any such call returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, stop before performing any further calls to <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> or steps in this algorithm and return that completion.</li><li>Let <var>j</var> be 0.</li><li>Repeat, while <var>j</var> &lt; <var>itemCount</var>,<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>j</var>)), <var>items</var>[<var>j</var>], <emu-val>true</emu-val>).</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li>Repeat, while <var>j</var> &lt; <var>len</var>,<ol><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>obj</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>j</var>))).</li><li>Set <var>j</var> to <var>j</var> + 1.</li></ol></li><li>Return <var>obj</var>.</li></ol></emu-alg>\n        <p>The <em>sort order</em> is the ordering, after completion of this function, of the <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer-indexed</a></emu-xref> property values of <var>obj</var> whose <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer indices</a></emu-xref> are less than <var>len</var>. The result of the <code>sort</code> function is then determined as follows:</p>\n        <p>The sort order is <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> if any of the following conditions is true:</p>\n        <ul>\n          <li>\n            If <var>comparefn</var> is not <emu-val>undefined</emu-val> and is not a consistent comparison function for the elements of <var>items</var> (see below).\n          </li>\n          <li>\n            If <var>comparefn</var> is <emu-val>undefined</emu-val> and <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> does not act as a consistent comparison function.\n          </li>\n          <li>\n            If <var>comparefn</var> is <emu-val>undefined</emu-val> and all applications of <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>, to any specific value passed as an argument to <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref>, do not produce the same result.\n          </li>\n        </ul>\n        <p>Unless the sort order is specified above to be <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>, <var>items</var> must satisfy all of the following conditions after executing step <emu-xref href=\"#step-array-sort\"><a href=\"#step-array-sort\" class=\"excluded-xref\" excluded-id=\"step-array-sort\">#step-array-sort</a></emu-xref> of the algorithm above:</p>\n        <ul>\n          <li>\n            There must be some mathematical permutation &#960; of the non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integers</a></emu-xref> less than <var>itemCount</var>, such that for every non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>j</var> less than <var>itemCount</var>, the element <emu-eqn class=\"inline\">old[<var>j</var>]</emu-eqn> is exactly the same as <emu-eqn class=\"inline\">new[&#960;(<var>j</var>)]</emu-eqn>.\n          </li>\n          <li>\n            Then for all non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integers</a></emu-xref> <var>j</var> and <var>k</var>, each less than <var>itemCount</var>, if <emu-eqn class=\"inline\"><emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref>(old[<var>j</var>], old[<var>k</var>]) &lt; 0</emu-eqn> (see <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> below), then <emu-eqn class=\"inline\">&#960;(<var>j</var>) &lt; &#960;(<var>k</var>)</emu-eqn>.\n          </li>\n        </ul>\n        <p>Here the notation <emu-eqn class=\"inline\">old[<var>j</var>]</emu-eqn> is used to refer to <emu-eqn class=\"inline\"><var>items</var>[<var>j</var>]</emu-eqn> before step <emu-xref href=\"#step-array-sort\"><a href=\"#step-array-sort\" class=\"excluded-xref\" excluded-id=\"step-array-sort\">#step-array-sort</a></emu-xref> is executed, and the notation <emu-eqn class=\"inline\">new[<var>j</var>]</emu-eqn> to refer to <emu-eqn class=\"inline\"><var>items</var>[<var>j</var>]</emu-eqn> after step <emu-xref href=\"#step-array-sort\"><a href=\"#step-array-sort\" class=\"excluded-xref\" excluded-id=\"step-array-sort\">#step-array-sort</a></emu-xref> has been executed.</p>\n        <p>A function <var>comparefn</var> is a consistent comparison function for a set of values <var>S</var> if all of the requirements below are met for all values <var>a</var>, <var>b</var>, and <var>c</var> (possibly the same value) in the set <var>S</var>: The notation <emu-eqn class=\"inline\"><var>a</var> &lt;<sub>CF</sub> <var>b</var></emu-eqn> means <emu-eqn class=\"inline\"><var>comparefn</var>(<var>a</var>, <var>b</var>) &lt; 0</emu-eqn>; <emu-eqn class=\"inline\"><var>a</var> =<sub>CF</sub> <var>b</var></emu-eqn> means <emu-eqn class=\"inline\"><var>comparefn</var>(<var>a</var>, <var>b</var>) = 0</emu-eqn> (of either sign); and <emu-eqn class=\"inline\"><var>a</var> &gt;<sub>CF</sub> <var>b</var></emu-eqn> means <emu-eqn class=\"inline\"><var>comparefn</var>(<var>a</var>, <var>b</var>) &gt; 0</emu-eqn>.</p>\n        <ul>\n          <li>\n            Calling <var>comparefn</var>(<var>a</var>, <var>b</var>) always returns the same value <var>v</var> when given a specific pair of values <var>a</var> and <var>b</var> as its two arguments. Furthermore, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Number, and <var>v</var> is not <emu-val>NaN</emu-val>. Note that this implies that exactly one of <var>a</var> &lt;<sub>CF</sub> <var>b</var>, <var>a</var> =<sub>CF</sub> <var>b</var>, and <var>a</var> &gt;<sub>CF</sub> <var>b</var> will be true for a given pair of <var>a</var> and <var>b</var>.\n          </li>\n          <li>\n            Calling <var>comparefn</var>(<var>a</var>, <var>b</var>) does not modify <var>obj</var> or any object on <var>obj</var>'s prototype chain.\n          </li>\n          <li>\n            <var>a</var> =<sub>CF</sub> <var>a</var> (reflexivity)\n          </li>\n          <li>\n            If <var>a</var> =<sub>CF</sub> <var>b</var>, then <var>b</var> =<sub>CF</sub> <var>a</var> (symmetry)\n          </li>\n          <li>\n            If <var>a</var> =<sub>CF</sub> <var>b</var> and <var>b</var> =<sub>CF</sub> <var>c</var>, then <var>a</var> =<sub>CF</sub> <var>c</var> (transitivity of =<sub>CF</sub>)\n          </li>\n          <li>\n            If <var>a</var> &lt;<sub>CF</sub> <var>b</var> and <var>b</var> &lt;<sub>CF</sub> <var>c</var>, then <var>a</var> &lt;<sub>CF</sub> <var>c</var> (transitivity of &lt;<sub>CF</sub>)\n          </li>\n          <li>\n            If <var>a</var> &gt;<sub>CF</sub> <var>b</var> and <var>b</var> &gt;<sub>CF</sub> <var>c</var>, then <var>a</var> &gt;<sub>CF</sub> <var>c</var> (transitivity of &gt;<sub>CF</sub>)\n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The above conditions are necessary and sufficient to ensure that <var>comparefn</var> divides the set <var>S</var> into equivalence classes and that these equivalence classes are totally ordered.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>sort</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-sortcompare\"><h1><span class=\"secnum\">23.1.3.27.1</span>#sec-sortcompare SortCompare ( x, y )</h1>...</div></emu-clause>\n\n      "}, "sec-execution-contexts": {"num": "9.4", "title": "#sec-execution-contexts Execution Contexts", "html": "<emu-clause id=\"sec-execution-contexts\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</span> Execution Contexts</h1>\n    <p>An <dfn variants=\"execution contexts\">execution context</dfn> is a specification device that is used to track the runtime evaluation of code by an ECMAScript implementation. At any point in time, there is at most one execution context per <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> that is actually executing code. This is known as the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <dfn id=\"running-execution-context\" variants=\"running execution contexts\">running execution context</dfn>. All references to the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> in this specification denote the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</p>\n    <p>The <dfn id=\"execution-context-stack\" variants=\"execution context stacks\">execution context stack</dfn> is used to track execution contexts. The <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> is always the top element of this stack. A new execution context is created whenever control is transferred from the executable code associated with the currently <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> to executable code that is not associated with that execution context. The newly created execution context is pushed onto the stack and becomes the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n    <p>An execution context contains whatever implementation specific state is necessary to track the execution progress of its associated code. Each execution context has at least the state components listed in <emu-xref href=\"#table-state-components-for-all-execution-contexts\"><a href=\"#table-state-components-for-all-execution-contexts\" class=\"excluded-xref\" excluded-id=\"table-state-components-for-all-execution-contexts\">#table-state-components-for-all-execution-contexts</a></emu-xref>.</p>\n    <emu-table id=\"table-state-components-for-all-execution-contexts\" caption=\"State Components for All Execution Contexts\" oldids=\"table-22\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-state-components-for-all-execution-contexts\">#table-state-components-for-all-execution-contexts</span>: State Components for All Execution Contexts</figcaption><span id=\"table-22\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Component\n          </th>\n          <th>\n            Purpose\n          </th>\n        </tr>\n        <tr>\n          <td>\n            code evaluation state\n          </td>\n          <td>\n            Any state needed to perform, suspend, and resume evaluation of the code associated with this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Function\n          </td>\n          <td>\n            If this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is evaluating the code of a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, then the value of this component is that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. If the context is evaluating the code of a <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> or <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>, the value is <emu-val>null</emu-val>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref>\n          </td>\n          <td>\n            The <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> from which associated code accesses ECMAScript resources.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            ScriptOrModule\n          </td>\n          <td>\n            The <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> or <emu-xref href=\"#script-record\"><a href=\"#script-record\">Script Record</a></emu-xref> from which associated code originates. If there is no originating script or module, as is the case for the original <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> created in <emu-xref aoid=\"InitializeHostDefinedRealm\"><a href=\"#sec-initializehostdefinedrealm\">InitializeHostDefinedRealm</a></emu-xref>, the value is <emu-val>null</emu-val>.\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>Evaluation of code by the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> may be suspended at various points defined within this specification. Once the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> has been suspended a different execution context may become the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> and commence evaluating its code. At some later time a suspended execution context may again become the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> and continue evaluating its code at the point where it had previously been suspended. Transition of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> status among execution contexts usually occurs in stack-like last-in/first-out manner. However, some ECMAScript features require non-LIFO transitions of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n    <p>The value of the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> component of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> is also called <dfn id=\"current-realm\">the current Realm Record</dfn>. The value of the Function component of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> is also called the <dfn id=\"active-function-object\">active function object</dfn>.</p>\n    <p>Execution contexts for ECMAScript code have the additional state components listed in <emu-xref href=\"#table-additional-state-components-for-ecmascript-code-execution-contexts\"><a href=\"#table-additional-state-components-for-ecmascript-code-execution-contexts\" class=\"excluded-xref\" excluded-id=\"table-additional-state-components-for-ecmascript-code-execution-contexts\">#table-additional-state-components-for-ecmascript-code-execution-contexts</a></emu-xref>.</p>\n    <emu-table id=\"table-additional-state-components-for-ecmascript-code-execution-contexts\" caption=\"Additional State Components for ECMAScript Code Execution Contexts\" oldids=\"table-23\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-state-components-for-ecmascript-code-execution-contexts\">#table-additional-state-components-for-ecmascript-code-execution-contexts</span>: Additional State Components for ECMAScript Code Execution Contexts</figcaption><span id=\"table-23\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Component\n          </th>\n          <th>\n            Purpose\n          </th>\n        </tr>\n        <tr>\n          <td>\n            LexicalEnvironment\n          </td>\n          <td>\n            Identifies the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> used to resolve identifier references made by code within this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            VariableEnvironment\n          </td>\n          <td>\n            Identifies the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that holds bindings created by <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt>s within this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n          </td>\n        </tr>\n        <tr>\n          <td>\n            PrivateEnvironment\n          </td>\n          <td>\n            Identifies the <emu-xref href=\"#privateenvironment-record\"><a href=\"#privateenvironment-record\">PrivateEnvironment Record</a></emu-xref> that holds <emu-xref href=\"#sec-private-names\"><a href=\"#sec-private-names\">Private Names</a></emu-xref> created by <emu-nt><a href=\"#prod-ClassElement\">ClassElement</a></emu-nt>s in the nearest containing class. <emu-val>null</emu-val> if there is no containing class.\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>The LexicalEnvironment and VariableEnvironment components of an execution context are always <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Records</a></emu-xref>.</p>\n    <p>Execution contexts representing the evaluation of Generators have the additional state components listed in <emu-xref href=\"#table-additional-state-components-for-generator-execution-contexts\"><a href=\"#table-additional-state-components-for-generator-execution-contexts\" class=\"excluded-xref\" excluded-id=\"table-additional-state-components-for-generator-execution-contexts\">#table-additional-state-components-for-generator-execution-contexts</a></emu-xref>.</p>\n    <emu-table id=\"table-additional-state-components-for-generator-execution-contexts\" caption=\"Additional State Components for Generator Execution Contexts\" oldids=\"table-24\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-additional-state-components-for-generator-execution-contexts\">#table-additional-state-components-for-generator-execution-contexts</span>: Additional State Components for Generator Execution Contexts</figcaption><span id=\"table-24\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Component\n          </th>\n          <th>\n            Purpose\n          </th>\n        </tr>\n        <tr>\n          <td>\n            Generator\n          </td>\n          <td>\n            The Generator that this <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is evaluating.\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In most situations only the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref> (the top of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>) is directly manipulated by algorithms within this specification. Hence when the terms &#8220;LexicalEnvironment&#8221;, and &#8220;VariableEnvironment&#8221; are used without qualification they are in reference to those components of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n    <p>An execution context is purely a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation. It is impossible for ECMAScript code to directly access or observe an execution context.</p>\n\n    <div id=\"excluded-sec-getactivescriptormodule\"><h1><span class=\"secnum\">9.4.1</span>#sec-getactivescriptormodule GetActiveScriptOrModule ( )</h1>...</div><div id=\"excluded-sec-resolvebinding\"><h1><span class=\"secnum\">9.4.2</span>#sec-resolvebinding ResolveBinding ( name [ , env ] )</h1>...</div><div id=\"excluded-sec-getthisenvironment\"><h1><span class=\"secnum\">9.4.3</span>#sec-getthisenvironment GetThisEnvironment ( )</h1>...</div><div id=\"excluded-sec-resolvethisbinding\"><h1><span class=\"secnum\">9.4.4</span>#sec-resolvethisbinding ResolveThisBinding ( )</h1>...</div><div id=\"excluded-sec-getnewtarget\"><h1><span class=\"secnum\">9.4.5</span>#sec-getnewtarget GetNewTarget ( )</h1>...</div><div id=\"excluded-sec-getglobalobject\"><h1><span class=\"secnum\">9.4.6</span>#sec-getglobalobject GetGlobalObject ( )</h1>...</div></emu-clause>\n\n  "}, "sec-proxy-object-internal-methods-and-internal-slots-delete-p": {"num": "10.5.10", "title": "#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-delete-p\">#sec-proxy-object-internal-methods-and-internal-slots-delete-p</span> [[Delete]] ( <var>P</var> )</h1>\n      <p>The [[Delete]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>P</var> (a property key). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"deleteProperty\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Delete]](<var>P</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Delete]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Delete]] is a Boolean value.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as a non-configurable own property of the target object.\n          </li>\n          <li>\n            A property cannot be reported as deleted, if it exists as an own property of the target object and the target object is non-extensible.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-allocatearraybuffer": {"num": "25.1.2.1", "title": "#sec-allocatearraybuffer AllocateArrayBuffer ( constructor, byteLength )", "html": "<emu-clause id=\"sec-allocatearraybuffer\" aoid=\"AllocateArrayBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatearraybuffer\">#sec-allocatearraybuffer</span> AllocateArrayBuffer ( <var>constructor</var>, <var>byteLength</var> )</h1>\n        <p>The abstract operation AllocateArrayBuffer takes arguments <var>constructor</var> and <var>byteLength</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It is used to create an ArrayBuffer. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>constructor</var>, <emu-val>\"%ArrayBuffer.prototype%\"</emu-val>, &#171; [[ArrayBufferData]], [[ArrayBufferByteLength]], [[ArrayBufferDetachKey]] &#187;).</li><li>Let <var>block</var> be ?&#160;<emu-xref aoid=\"CreateByteDataBlock\"><a href=\"#sec-createbytedatablock\">CreateByteDataBlock</a></emu-xref>(<var>byteLength</var>).</li><li>Set <var>obj</var>.[[ArrayBufferData]] to <var>block</var>.</li><li>Set <var>obj</var>.[[ArrayBufferByteLength]] to <var>byteLength</var>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-array.prototype.filter": {"num": "23.1.3.7", "title": "#sec-array.prototype.filter Array.prototype.filter ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.filter\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.filter\">#sec-array.prototype.filter</span> Array.prototype.filter ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>filter</code> calls <var>callbackfn</var> once for each element in the array, in ascending order, and constructs a new array of all the values for which <var>callbackfn</var> returns <emu-val>true</emu-val>. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>filter</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>filter</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>filter</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed their value as passed to <var>callbackfn</var> will be the value at the time <code>filter</code> visits them; elements that are deleted after the call to <code>filter</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>filter</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, 0).</li><li>Let <var>k</var> be 0.</li><li>Let <var>to</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>selected</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>selected</var> is <emu-val>true</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>to</var>)), <var>kValue</var>).</li><li>Set <var>to</var> to <var>to</var> + 1.</li></ol></li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>filter</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-isextensible": {"num": "10.5.3", "title": "#sec-proxy-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-isextensible\">#sec-proxy-object-internal-methods-and-internal-slots-isextensible</span> [[IsExtensible]] ( )</h1>\n      <p>The [[IsExtensible]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"isExtensible\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>Let <var>targetResult</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>booleanTrapResult</var>, <var>targetResult</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[IsExtensible]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[IsExtensible]] is a Boolean value.\n          </li>\n          <li>\n            [[IsExtensible]] applied to the Proxy object must return the same value as [[IsExtensible]] applied to the Proxy object's target object with the same argument.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.foreach": {"num": "23.1.3.12", "title": "#sec-array.prototype.foreach Array.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</span> Array.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each element present in the array, in ascending order. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>forEach</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>forEach</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>forEach</code> visits them; elements that are deleted after the call to <code>forEach</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>forEach</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>forEach</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-settypedarrayfromarraylike": {"num": "23.2.3.23.2", "title": "#sec-settypedarrayfromarraylike SetTypedArrayFromArrayLike ( target, targetOffset, source )", "html": "<emu-clause id=\"sec-settypedarrayfromarraylike\" oldids=\"sec-%typedarray%.prototype.set-array-offset\" aoid=\"SetTypedArrayFromArrayLike\"><span id=\"sec-%typedarray%.prototype.set-array-offset\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-settypedarrayfromarraylike\">#sec-settypedarrayfromarraylike</span> SetTypedArrayFromArrayLike ( <var>target</var>, <var>targetOffset</var>, <var>source</var> )</h1>\n          <p>The abstract operation SetTypedArrayFromArrayLike takes arguments <var>target</var> (a TypedArray), <var>targetOffset</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> or +&#8734;), and <var>source</var> (an ECMAScript value other than a TypedArray). It sets multiple values in <var>target</var>, starting at index <var>targetOffset</var>, reading the values from <var>source</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>source</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> other than an Object with a [[TypedArrayName]] internal slot.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>src</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>source</var>).</li><li>Let <var>srcLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>src</var>).</li><li>If <var>targetOffset</var> is +&#8734;, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>k</var> be 0.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>src</var>, <var>Pk</var>).</li><li>If <var>target</var>.[[ContentType]] is <emu-const>BigInt</emu-const>, set <var>value</var> to ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-tobigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, set <var>value</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-date.prototype.tostring": {"num": "21.4.4.41", "title": "#sec-date.prototype.tostring Date.prototype.toString ( )", "html": "<emu-clause id=\"sec-date.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</span> Date.prototype.toString ( )</h1>\n        <p>The following steps are performed:</p>\n        <emu-alg><ol><li>Let <var>tv</var> be ?&#160;<emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>tv</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>For any Date <code>d</code> such that <code>d.[[DateValue]]</code> is evenly divisible by 1000, the result of <code>Date.parse(d.toString())</code> = <code>d.valueOf()</code>. See <emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\" class=\"excluded-xref\" excluded-id=\"sec-date.parse\">#sec-date.parse</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>toString</code> function is not generic; it throws a <emu-val>TypeError</emu-val> exception if its <emu-val>this</emu-val> value is not a Date. Therefore, it cannot be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-timestring\"><h1><span class=\"secnum\">21.4.4.41.1</span>#sec-timestring TimeString ( tv )</h1>...</div><div id=\"excluded-sec-datestring\"><h1><span class=\"secnum\">21.4.4.41.2</span>#sec-datestring DateString ( tv )</h1>...</div><div id=\"excluded-sec-timezoneestring\"><h1><span class=\"secnum\">21.4.4.41.3</span>#sec-timezoneestring TimeZoneString ( tv )</h1>...</div><div id=\"excluded-sec-todatestring\"><h1><span class=\"secnum\">21.4.4.41.4</span>#sec-todatestring ToDateString ( tv )</h1>...</div></emu-clause>\n\n      "}, "sec-weakset-objects": {"num": "24.4", "title": "#sec-weakset-objects WeakSet Objects", "html": "<emu-clause id=\"sec-weakset-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-objects\">#sec-weakset-objects</span> WeakSet Objects</h1>\n    <p>WeakSets are collections of objects. A distinct object may only occur once as an element of a WeakSet's collection. A WeakSet may be queried to see if it contains a specific object, but no mechanism is provided for enumerating the objects it holds. In certain conditions, objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> are removed as WeakSet elements, as described in <emu-xref href=\"#sec-weakref-execution\"><a href=\"#sec-weakref-execution\" class=\"excluded-xref\" excluded-id=\"sec-weakref-execution\">#sec-weakref-execution</a></emu-xref>.</p>\n    <p>An implementation may impose an arbitrarily determined latency between the time an object contained in a WeakSet becomes inaccessible and the time when the object is removed from the WeakSet. If this latency was observable to ECMAScript program, it would be a source of indeterminacy that could impact program execution. For that reason, an ECMAScript implementation must not provide any means to determine if a WeakSet contains a particular object that does not require the observer to present the observed object.</p>\n    <p>WeakSets must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this specification is only intended to describe the required observable semantics of WeakSets. It is not intended to be a viable implementation model.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>See the NOTE in <emu-xref href=\"#sec-weakmap-objects\"><a href=\"#sec-weakmap-objects\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-objects\">#sec-weakmap-objects</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-weakset-constructor\"><h1><span class=\"secnum\">24.4.1</span>#sec-weakset-constructor The WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-constructor\"><h1><span class=\"secnum\">24.4.2</span>#sec-properties-of-the-weakset-constructor Properties of the WeakSet Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-weakset-prototype-object\"><h1><span class=\"secnum\">24.4.3</span>#sec-properties-of-the-weakset-prototype-object Properties of the WeakSet Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-weakset-instances\"><h1><span class=\"secnum\">24.4.4</span>#sec-properties-of-weakset-instances Properties of WeakSet Instances</h1>...</div></emu-clause>\n"}, "sec-lengthofarraylike": {"num": "7.3.18", "title": "#sec-lengthofarraylike LengthOfArrayLike ( obj )", "html": "<emu-clause id=\"sec-lengthofarraylike\" aoid=\"LengthOfArrayLike\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lengthofarraylike\">#sec-lengthofarraylike</span> LengthOfArrayLike ( <var>obj</var> )</h1>\n      <p>The abstract operation LengthOfArrayLike takes argument <var>obj</var>. It returns the value of the <emu-val>\"length\"</emu-val> property of an array-like object (as a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>obj</var>) is Object.</li><li>Return <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>obj</var>, <emu-val>\"length\"</emu-val>))).</li></ol></emu-alg>\n      <p>An <dfn variants=\"array-like objects\">array-like object</dfn> is any object for which this operation returns an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> rather than an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        Typically, an array-like object would also have some properties with <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> names. However, that is not a requirement of this definition.\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        Arrays and String objects are examples of array-like objects.\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-preventextensions": {"num": "10.5.4", "title": "#sec-proxy-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-preventextensions\">#sec-proxy-object-internal-methods-and-internal-slots-preventextensions</span> [[PreventExtensions]] ( )</h1>\n      <p>The [[PreventExtensions]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"preventExtensions\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[PreventExtensions]]().</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>booleanTrapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[PreventExtensions]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[PreventExtensions]] is a Boolean value.\n          </li>\n          <li>\n            [[PreventExtensions]] applied to the Proxy object only returns <emu-val>true</emu-val> if [[IsExtensible]] applied to the Proxy object's target object is <emu-val>false</emu-val>.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.unshift": {"num": "23.1.3.31", "title": "#sec-array.prototype.unshift Array.prototype.unshift ( ...items )", "html": "<emu-clause id=\"sec-array.prototype.unshift\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.unshift\">#sec-array.prototype.unshift</span> Array.prototype.unshift ( ...<var>items</var> )</h1>\n        <p>The arguments are prepended to the start of the array, such that their order within the array is the same as the order in which they appear in the argument list.</p>\n        <p>When the <code>unshift</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>argCount</var> be the number of elements in <var>items</var>.</li><li>If <var>argCount</var> &gt; 0, then<ol><li>If <var>len</var> + <var>argCount</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be <var>len</var>.</li><li>Repeat, while <var>k</var> &gt; 0,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> - 1)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>argCount</var> - 1)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Let <var>j</var> be <emu-val>+0</emu-val><sub>&#120125;</sub>.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>j</var>), <var>E</var>, <emu-val>true</emu-val>).</li><li>Set <var>j</var> to <var>j</var> + <emu-val>1</emu-val><sub>&#120125;</sub>.</li></ol></li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> + <var>argCount</var>), <emu-val>true</emu-val>).</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> + <var>argCount</var>).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>unshift</code> method is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>unshift</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-built-in-function-objects-call-thisargument-argumentslist": {"num": "10.3.1", "title": "#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )", "html": "<emu-clause id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects-call-thisargument-argumentslist\">#sec-built-in-function-objects-call-thisargument-argumentslist</span> [[Call]] ( <var>thisArgument</var>, <var>argumentsList</var> )</h1>\n      <p>The [[Call]] internal method of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> <var>F</var> takes arguments <var>thisArgument</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>) and <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>callerContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>If <var>callerContext</var> is not already suspended, suspend <var>callerContext</var>.</li><li>Let <var>calleeContext</var> be a new <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.</li><li>Set the Function of <var>calleeContext</var> to <var>F</var>.</li><li>Let <var>calleeRealm</var> be <var>F</var>.[[Realm]].</li><li>Set the <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref> of <var>calleeContext</var> to <var>calleeRealm</var>.</li><li>Set the ScriptOrModule of <var>calleeContext</var> to <emu-val>null</emu-val>.</li><li>Perform any necessary <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> initialization of <var>calleeContext</var>.</li><li>Push <var>calleeContext</var> onto the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>; <var>calleeContext</var> is now the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li id=\"step-call-builtin-function-result\">Let <var>result</var> be the <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> that is the result of evaluating <var>F</var> in a manner that conforms to the specification of <var>F</var>. <var>thisArgument</var> is the <emu-val>this</emu-val> value, <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>.</li><li>Remove <var>calleeContext</var> from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> and restore <var>callerContext</var> as the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Return <var>result</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When <var>calleeContext</var> is removed from the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> it must not be destroyed if it has been suspended and retained by an accessible Generator for later resumption.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots": {"num": "10.5", "title": "#sec-proxy-object-internal-methods-and-internal-slots Proxy Object Internal Methods and Internal Slots", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots\">#sec-proxy-object-internal-methods-and-internal-slots</span> Proxy Object Internal Methods and Internal Slots</h1>\n    <p>A Proxy object is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> whose essential internal methods are partially implemented using ECMAScript code. Every Proxy object has an internal slot called [[ProxyHandler]]. The value of [[ProxyHandler]] is an object, called the proxy's <em>handler object</em>, or <emu-val>null</emu-val>. Methods (see <emu-xref href=\"#table-proxy-handler-methods\"><a href=\"#table-proxy-handler-methods\" class=\"excluded-xref\" excluded-id=\"table-proxy-handler-methods\">#table-proxy-handler-methods</a></emu-xref>) of a handler object may be used to augment the implementation for one or more of the Proxy object's internal methods. Every Proxy object also has an internal slot called [[ProxyTarget]] whose value is either an object or the <emu-val>null</emu-val> value. This object is called the proxy's <em>target object</em>.</p>\n\n    <p>An object is a <dfn id=\"proxy-exotic-object\" variants=\"Proxy exotic objects\">Proxy exotic object</dfn> if its essential internal methods (including [[Call]] and [[Construct]], if applicable) use the definitions in this section. These internal methods are installed in <emu-xref aoid=\"ProxyCreate\"><a href=\"#sec-proxycreate\">ProxyCreate</a></emu-xref>.</p>\n\n    <emu-table id=\"table-proxy-handler-methods\" caption=\"Proxy Handler Methods\" oldids=\"table-30\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-proxy-handler-methods\">#table-proxy-handler-methods</span>: Proxy Handler Methods</figcaption><span id=\"table-30\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            Internal Method\n          </th>\n          <th>\n            Handler Method\n          </th>\n        </tr>\n        <tr>\n          <td>\n            [[GetPrototypeOf]]\n          </td>\n          <td>\n            <code>getPrototypeOf</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[SetPrototypeOf]]\n          </td>\n          <td>\n            <code>setPrototypeOf</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[IsExtensible]]\n          </td>\n          <td>\n            <code>isExtensible</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[PreventExtensions]]\n          </td>\n          <td>\n            <code>preventExtensions</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[GetOwnProperty]]\n          </td>\n          <td>\n            <code>getOwnPropertyDescriptor</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[DefineOwnProperty]]\n          </td>\n          <td>\n            <code>defineProperty</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[HasProperty]]\n          </td>\n          <td>\n            <code>has</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Get]]\n          </td>\n          <td>\n            <code>get</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Set]]\n          </td>\n          <td>\n            <code>set</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Delete]]\n          </td>\n          <td>\n            <code>deleteProperty</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[OwnPropertyKeys]]\n          </td>\n          <td>\n            <code>ownKeys</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Call]]\n          </td>\n          <td>\n            <code>apply</code>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            [[Construct]]\n          </td>\n          <td>\n            <code>construct</code>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>When a handler method is called to provide the implementation of a Proxy object internal method, the handler method is passed the proxy's target object as a parameter. A proxy's handler object does not necessarily have a method corresponding to every essential internal method. Invoking an internal method on the proxy results in the invocation of the corresponding internal method on the proxy's target object if the handler object does not have a method corresponding to the internal trap.</p>\n    <p>The [[ProxyHandler]] and [[ProxyTarget]] internal slots of a Proxy object are always initialized when the object is created and typically may not be modified. Some Proxy objects are created in a manner that permits them to be subsequently <em>revoked</em>. When a proxy is revoked, its [[ProxyHandler]] and [[ProxyTarget]] internal slots are set to <emu-val>null</emu-val> causing subsequent invocations of internal methods on that Proxy object to throw a <emu-val>TypeError</emu-val> exception.</p>\n    <p>Because Proxy objects permit the implementation of internal methods to be provided by arbitrary ECMAScript code, it is possible to define a Proxy object whose handler methods violates the invariants defined in <emu-xref href=\"#sec-invariants-of-the-essential-internal-methods\"><a href=\"#sec-invariants-of-the-essential-internal-methods\" class=\"excluded-xref\" excluded-id=\"sec-invariants-of-the-essential-internal-methods\">#sec-invariants-of-the-essential-internal-methods</a></emu-xref>. Some of the internal method invariants defined in <emu-xref href=\"#sec-invariants-of-the-essential-internal-methods\"><a href=\"#sec-invariants-of-the-essential-internal-methods\" class=\"excluded-xref\" excluded-id=\"sec-invariants-of-the-essential-internal-methods\">#sec-invariants-of-the-essential-internal-methods</a></emu-xref> are essential integrity invariants. These invariants are explicitly enforced by the Proxy object internal methods specified in this section. An ECMAScript implementation must be robust in the presence of all possible invariant violations.</p>\n    <p>In the following algorithm descriptions, assume <var>O</var> is an ECMAScript Proxy object, <var>P</var> is a property key value, <var>V</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> and <var>Desc</var> is a <emu-xref href=\"#sec-property-descriptor-specification-type\"><a href=\"#sec-property-descriptor-specification-type\">Property Descriptor</a></emu-xref> record.</p>\n\n    <div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-getprototypeof\"><h1><span class=\"secnum\">10.5.1</span>#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof [[GetPrototypeOf]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\"><h1><span class=\"secnum\">10.5.2</span>#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-isextensible\"><h1><span class=\"secnum\">10.5.3</span>#sec-proxy-object-internal-methods-and-internal-slots-isextensible [[IsExtensible]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-preventextensions\"><h1><span class=\"secnum\">10.5.4</span>#sec-proxy-object-internal-methods-and-internal-slots-preventextensions [[PreventExtensions]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p\"><h1><span class=\"secnum\">10.5.5</span>#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p [[GetOwnProperty]] ( P )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc\"><h1><span class=\"secnum\">10.5.6</span>#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p\"><h1><span class=\"secnum\">10.5.7</span>#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p [[HasProperty]] ( P )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\"><h1><span class=\"secnum\">10.5.8</span>#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver [[Get]] ( P, Receiver )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\"><h1><span class=\"secnum\">10.5.9</span>#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-delete-p\"><h1><span class=\"secnum\">10.5.10</span>#sec-proxy-object-internal-methods-and-internal-slots-delete-p [[Delete]] ( P )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\"><h1><span class=\"secnum\">10.5.11</span>#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist\"><h1><span class=\"secnum\">10.5.12</span>#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">10.5.13</span>#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-proxycreate\"><h1><span class=\"secnum\">10.5.14</span>#sec-proxycreate ProxyCreate ( target, handler )</h1>...</div></emu-clause>\n"}, "sec-properties-of-the-proxy-constructor": {"num": "28.2.2", "title": "#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor", "html": "<emu-clause id=\"sec-properties-of-the-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-proxy-constructor\">#sec-properties-of-the-proxy-constructor</span> Properties of the Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>does not have a <emu-val>\"prototype\"</emu-val> property because Proxy objects do not have a [[Prototype]] internal slot that requires initialization.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy.revocable\"><h1><span class=\"secnum\">28.2.2.1</span>#sec-proxy.revocable Proxy.revocable ( target, handler )</h1>...</div></emu-clause>\n  "}, "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget": {"num": "10.5.13", "title": "#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget\">#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget</span> [[Construct]] ( <var>argumentsList</var>, <var>newTarget</var> )</h1>\n      <p>The [[Construct]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>argumentsList</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>) and <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>target</var>) is <emu-val>true</emu-val>.</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"construct\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>target</var>, <var>argumentsList</var>, <var>newTarget</var>).</li></ol></li><li>Let <var>argArray</var> be !&#160;<emu-xref aoid=\"CreateArrayFromList\"><a href=\"#sec-createarrayfromlist\">CreateArrayFromList</a></emu-xref>(<var>argumentsList</var>).</li><li>Let <var>newObj</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>argArray</var>, <var>newTarget</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>newObj</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>newObj</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>A <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> only has a [[Construct]] internal method if the initial value of its [[ProxyTarget]] internal slot is an object that has a [[Construct]] internal method.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>[[Construct]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Construct]] must be an Object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-array.prototype.indexof": {"num": "23.1.3.14", "title": "#sec-array.prototype.indexof Array.prototype.indexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.indexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.indexof\">#sec-array.prototype.indexof</span> Array.prototype.indexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <p><code>indexOf</code> compares <var>searchElement</var> to the elements of the array, in ascending order, using the <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref> algorithm, and if found at one or more indices, returns the smallest such index; otherwise, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The optional second argument <var>fromIndex</var> defaults to <emu-val>+0</emu-val><sub>&#120125;</sub> (i.e. the whole array is searched). If it is greater than or equal to the length of the array, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned, i.e. the array will not be searched. If it is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, the whole array will be searched.</p>\n        </div></emu-note>\n        <p>When the <code>indexOf</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>fromIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>fromIndex</var> is <emu-val>undefined</emu-val>, then <var>n</var> is 0.</li><li>If <var>n</var> is +&#8734;, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>Else if <var>n</var> is -&#8734;, set <var>n</var> to 0.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <var>n</var>.</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li><li>If <var>k</var> &lt; 0, set <var>k</var> to 0.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>Let <var>same</var> be <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref>(<var>searchElement</var>, <var>elementK</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>indexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.join": {"num": "23.1.3.15", "title": "#sec-array.prototype.join Array.prototype.join ( separator )", "html": "<emu-clause id=\"sec-array.prototype.join\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.join\">#sec-array.prototype.join</span> Array.prototype.join ( <var>separator</var> )</h1>\n        <p>The elements of the array are converted to Strings, and these Strings are then concatenated, separated by occurrences of the <var>separator</var>. If no separator is provided, a single comma is used as the separator.</p>\n        <p>When the <code>join</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>separator</var> is <emu-val>undefined</emu-val>, let <var>sep</var> be the single-element String <emu-val>\",\"</emu-val>.</li><li>Else, let <var>sep</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>separator</var>).</li><li>Let <var>R</var> be the empty String.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>If <var>k</var> &gt; 0, set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>sep</var>.</li><li>Let <var>element</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>element</var> is <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, let <var>next</var> be the empty String; otherwise, let <var>next</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>element</var>).</li><li>Set <var>R</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>R</var> and <var>next</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>R</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>join</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-initializetypedarrayfromarraylike": {"num": "23.2.5.1.5", "title": "#sec-initializetypedarrayfromarraylike InitializeTypedArrayFromArrayLike ( O, arrayLike )", "html": "<emu-clause id=\"sec-initializetypedarrayfromarraylike\" aoid=\"InitializeTypedArrayFromArrayLike\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromarraylike\">#sec-initializetypedarrayfromarraylike</span> InitializeTypedArrayFromArrayLike ( <var>O</var>, <var>arrayLike</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromArrayLike takes arguments <var>O</var> (a TypedArray) and <var>arrayLike</var> (an Object that is neither a TypedArray nor an ArrayBuffer). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>arrayLike</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>arrayLike</var>, <var>Pk</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-allocatetypedarraybuffer": {"num": "23.2.5.1.6", "title": "#sec-allocatetypedarraybuffer AllocateTypedArrayBuffer ( O, length )", "html": "<emu-clause id=\"sec-allocatetypedarraybuffer\" aoid=\"AllocateTypedArrayBuffer\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatetypedarraybuffer\">#sec-allocatetypedarraybuffer</span> AllocateTypedArrayBuffer ( <var>O</var>, <var>length</var> )</h1>\n          <p>The abstract operation AllocateTypedArrayBuffer takes arguments <var>O</var> (a TypedArray) and <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It allocates and associates an ArrayBuffer with <var>O</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[ViewedArrayBuffer]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var>.[[ViewedArrayBuffer]] is <emu-val>undefined</emu-val>.</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>length</var>.</li><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>, <var>byteLength</var>).</li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>length</var>.</li><li>Return <var>O</var>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-array.prototype-@@unscopables": {"num": "23.1.3.34", "title": "#sec-array.prototype-@@unscopables Array.prototype [ @@unscopables ]", "html": "<emu-clause id=\"sec-array.prototype-@@unscopables\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype-@@unscopables\">#sec-array.prototype-@@unscopables</span> Array.prototype [ @@unscopables ]</h1>\n        <p>The initial value of the <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is an object created by the following steps:</p>\n        <emu-alg><ol><li>Let <var>unscopableList</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-val>null</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"copyWithin\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"entries\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"fill\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"find\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"findIndex\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"flat\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"flatMap\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"includes\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"keys\"</emu-val>, <emu-val>true</emu-val>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>unscopableList</var>, <emu-val>\"values\"</emu-val>, <emu-val>true</emu-val>).</li><li>Return <var>unscopableList</var>.</li></ol></emu-alg>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The own property names of this object are property names that were not included as standard properties of <code>Array.prototype</code> prior to the ECMAScript 2015 specification. These names are ignored for <code>with</code> statement binding purposes in order to preserve the behaviour of existing code that might use one of these names as a binding in an outer scope that is shadowed by a <code>with</code> statement whose binding object is an Array.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-array.prototype.push": {"num": "23.1.3.20", "title": "#sec-array.prototype.push Array.prototype.push ( ...items )", "html": "<emu-clause id=\"sec-array.prototype.push\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.push\">#sec-array.prototype.push</span> Array.prototype.push ( ...<var>items</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The arguments are appended to the end of the array, in the order in which they appear. The new length of the array is returned as the result of the call.</p>\n        </div></emu-note>\n        <p>When the <code>push</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>argCount</var> be the number of elements in <var>items</var>.</li><li>If <var>len</var> + <var>argCount</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var>)), <var>E</var>, <emu-val>true</emu-val>).</li><li>Set <var>len</var> to <var>len</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var>), <emu-val>true</emu-val>).</li><li>Return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var>).</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>push</code> method is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>push</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-instance-prototype": {"num": "27.4.4.3", "title": "#sec-asyncgeneratorfunction-instance-prototype prototype", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instance-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instance-prototype\">#sec-asyncgeneratorfunction-instance-prototype</span> prototype</h1>\n        <p>Whenever an AsyncGeneratorFunction instance is created another <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> is also created and is the initial value of the async generator function's <emu-val>\"prototype\"</emu-val> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created AsyncGenerator when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike function instances, the object that is the value of the an AsyncGeneratorFunction's <emu-val>\"prototype\"</emu-val> property does not have a <emu-val>\"constructor\"</emu-val> property whose value is the AsyncGeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-properties-of-date-instances": {"num": "21.4.5", "title": "#sec-properties-of-date-instances Properties of Date Instances", "html": "<emu-clause id=\"sec-properties-of-date-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-date-instances\">#sec-properties-of-date-instances</span> Properties of Date Instances</h1>\n      <p>Date instances are <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary objects</a></emu-xref> that inherit properties from the <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">Date prototype object</a></emu-xref>. Date instances also have a [[DateValue]] internal slot. The [[DateValue]] internal slot is the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> represented by this Date.</p>\n    </emu-clause>\n  "}, "sec-map-constructor": {"num": "24.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Map\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Map behaviour must include a <code>super</code> call to the Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">24.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">24.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "24.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"WeakMap\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified WeakMap behaviour must include a <code>super</code> call to the WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">24.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-toprimitive": {"num": "7.1.1", "title": "#sec-toprimitive ToPrimitive ( input [ , preferredType ] )", "html": "<emu-clause id=\"sec-toprimitive\" oldids=\"table-9\" aoid=\"ToPrimitive\"><span id=\"table-9\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toprimitive\">#sec-toprimitive</span> ToPrimitive ( <var>input</var> [ , <var>preferredType</var> ] )</h1>\n      <p>The abstract operation ToPrimitive takes argument <var>input</var> and optional argument <var>preferredType</var>. It converts its <var>input</var> argument to a non-Object type. If an object is capable of converting to more than one primitive type, it may use the optional hint <var>preferredType</var> to favour that type. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>input</var> is an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>input</var>) is Object, then<ol><li>Let <var>exoticToPrim</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>input</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toPrimitive</a></emu-xref>).</li><li>If <var>exoticToPrim</var> is not <emu-val>undefined</emu-val>, then<ol><li>If <var>preferredType</var> is not present, let <var>hint</var> be <emu-val>\"default\"</emu-val>.</li><li>Else if <var>preferredType</var> is <emu-const>string</emu-const>, let <var>hint</var> be <emu-val>\"string\"</emu-val>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>preferredType</var> is <emu-const>number</emu-const>.</li><li>Let <var>hint</var> be <emu-val>\"number\"</emu-val>.</li></ol></li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>exoticToPrim</var>, <var>input</var>, &#171; <var>hint</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>) is not Object, return <var>result</var>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <var>preferredType</var> is not present, let <var>preferredType</var> be <emu-const>number</emu-const>.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>input</var>, <var>preferredType</var>).</li></ol></li><li>Return <var>input</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When ToPrimitive is called with no hint, then it generally behaves as if the hint were <emu-const>number</emu-const>. However, objects may over-ride this behaviour by defining a <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@toPrimitive</a></emu-xref> method. Of the objects defined in this specification only Dates (see <emu-xref href=\"#sec-date.prototype-@@toprimitive\"><a href=\"#sec-date.prototype-@@toprimitive\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</a></emu-xref>) and Symbol objects (see <emu-xref href=\"#sec-symbol.prototype-@@toprimitive\"><a href=\"#sec-symbol.prototype-@@toprimitive\" class=\"excluded-xref\" excluded-id=\"sec-symbol.prototype-@@toprimitive\">#sec-symbol.prototype-@@toprimitive</a></emu-xref>) over-ride the default ToPrimitive behaviour. Dates treat no hint as if the hint were <emu-const>string</emu-const>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-ordinarytoprimitive\"><h1><span class=\"secnum\">7.1.1.1</span>#sec-ordinarytoprimitive OrdinaryToPrimitive ( O, hint )</h1>...</div></emu-clause>\n\n    "}, "sec-array-objects": {"num": "23.1", "title": "#sec-array-objects Array Objects", "html": "<emu-clause id=\"sec-array-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-objects\">#sec-array-objects</span> Array Objects</h1>\n    <p>Arrays are <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic objects</a></emu-xref> that give special treatment to a certain class of property names. See <emu-xref href=\"#sec-array-exotic-objects\"><a href=\"#sec-array-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects\">#sec-array-exotic-objects</a></emu-xref> for a definition of this special treatment.</p>\n\n    <div id=\"excluded-sec-array-constructor\"><h1><span class=\"secnum\">23.1.1</span>#sec-array-constructor The Array Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-array-constructor\"><h1><span class=\"secnum\">23.1.2</span>#sec-properties-of-the-array-constructor Properties of the Array Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-array-prototype-object\"><h1><span class=\"secnum\">23.1.3</span>#sec-properties-of-the-array-prototype-object Properties of the Array Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-array-instances\"><h1><span class=\"secnum\">23.1.4</span>#sec-properties-of-array-instances Properties of Array Instances</h1>...</div><div id=\"excluded-sec-array-iterator-objects\"><h1><span class=\"secnum\">23.1.5</span>#sec-array-iterator-objects Array Iterator Objects</h1>...</div></emu-clause>\n\n  "}, "sec-generatorfunction-instances-prototype": {"num": "27.3.4.3", "title": "#sec-generatorfunction-instances-prototype prototype", "html": "<emu-clause id=\"sec-generatorfunction-instances-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances-prototype\">#sec-generatorfunction-instances-prototype</span> prototype</h1>\n        <p>Whenever a GeneratorFunction instance is created another <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref> is also created and is the initial value of the generator function's <emu-val>\"prototype\"</emu-val> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created Generator when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike Function instances, the object that is the value of the a GeneratorFunction's <emu-val>\"prototype\"</emu-val> property does not have a <emu-val>\"constructor\"</emu-val> property whose value is the GeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-async-generator-function-definitions": {"num": "15.6", "title": "#sec-async-generator-function-definitions Async Generator Function Definitions", "html": "<emu-clause id=\"sec-async-generator-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-generator-function-definitions\">#sec-async-generator-function-definitions</span> Async Generator Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncGeneratorMethod\" params=\"Yield, Await\" id=\"prod-AsyncGeneratorMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bojlwy10\" id=\"prod-ceV74b-L\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorDeclaration\" params=\"Yield, Await, Default\" id=\"prod-AsyncGeneratorDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"vxevrvwx\" id=\"prod-cOKIJmRw\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"zdnckwse\" constraints=\"+Default\" id=\"prod-1L17zU6t\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorExpression\" id=\"prod-AsyncGeneratorExpression\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"yh0wbqjf\" id=\"prod-s18yr2Ij\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, +Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, +Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorBody\" id=\"prod-AsyncGeneratorBody\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zqmkrekv\" id=\"prod-47HC640n\"><emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p><emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> and <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> cannot be used within the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of an async generator function because any expressions that are part of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> are evaluated before the resulting AsyncGenerator is in a resumable state.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p><emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">Abstract operations</a></emu-xref> relating to AsyncGenerators are defined in <emu-xref href=\"#sec-asyncgenerator-abstract-operations\"><a href=\"#sec-asyncgenerator-abstract-operations\" class=\"excluded-xref\" excluded-id=\"sec-asyncgenerator-abstract-operations\">#sec-asyncgenerator-abstract-operations</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-async-generator-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.6.1</span>#sec-async-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluateasyncgeneratorbody\"><h1><span class=\"secnum\">15.6.2</span>#sec-runtime-semantics-evaluateasyncgeneratorbody Runtime Semantics: EvaluateAsyncGeneratorBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncgeneratorfunctionobject\"><h1><span class=\"secnum\">15.6.3</span>#sec-runtime-semantics-instantiateasyncgeneratorfunctionobject Runtime Semantics: InstantiateAsyncGeneratorFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression\"><h1><span class=\"secnum\">15.6.4</span>#sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression Runtime Semantics: InstantiateAsyncGeneratorFunctionExpression</h1>...</div><div id=\"excluded-sec-asyncgenerator-definitions-evaluation\"><h1><span class=\"secnum\">15.6.5</span>#sec-asyncgenerator-definitions-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-arraycreate": {"num": "10.4.2.2", "title": "#sec-arraycreate ArrayCreate ( length [ , proto ] )", "html": "<emu-clause id=\"sec-arraycreate\" aoid=\"ArrayCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraycreate\">#sec-arraycreate</span> ArrayCreate ( <var>length</var> [ , <var>proto</var> ] )</h1>\n        <p>The abstract operation ArrayCreate takes argument <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>) and optional argument <var>proto</var>. It is used to specify the creation of new Arrays. It performs the following steps when called:</p>\n        <emu-alg><ol><li>If <var>length</var> &gt; 2<sup>32</sup> - 1, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>proto</var> is not present, set <var>proto</var> to <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%Array.prototype%</a></emu-xref>.</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"MakeBasicObject\"><a href=\"#sec-makebasicobject\">MakeBasicObject</a></emu-xref>(&#171; [[Prototype]], [[Extensible]] &#187;).</li><li>Set <var>A</var>.[[Prototype]] to <var>proto</var>.</li><li>Set <var>A</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Perform !&#160;<emu-xref aoid=\"OrdinaryDefineOwnProperty\"><a href=\"#sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, PropertyDescriptor { [[Value]]: <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>length</var>), [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-regexp.prototype.exec": {"num": "22.2.5.2", "title": "#sec-regexp.prototype.exec RegExp.prototype.exec ( string )", "html": "<emu-clause id=\"sec-regexp.prototype.exec\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype.exec\">#sec-regexp.prototype.exec</span> RegExp.prototype.exec ( <var>string</var> )</h1>\n        <p>Performs a regular expression match of <var>string</var> against the regular expression and returns an Array containing the results of the match, or <emu-val>null</emu-val> if <var>string</var> did not match.</p>\n        <p>The String <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>) is searched for an occurrence of the regular expression pattern as follows:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>R</var>, [[RegExpMatcher]]).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpBuiltinExec\"><a href=\"#sec-regexpbuiltinexec\">RegExpBuiltinExec</a></emu-xref>(<var>R</var>, <var>S</var>).</li></ol></emu-alg>\n\n        <div id=\"excluded-sec-regexpexec\"><h1><span class=\"secnum\">22.2.5.2.1</span>#sec-regexpexec RegExpExec ( R, S )</h1>...</div><div id=\"excluded-sec-regexpbuiltinexec\"><h1><span class=\"secnum\">22.2.5.2.2</span>#sec-regexpbuiltinexec RegExpBuiltinExec ( R, S )</h1>...</div><div id=\"excluded-sec-advancestringindex\"><h1><span class=\"secnum\">22.2.5.2.3</span>#sec-advancestringindex AdvanceStringIndex ( S, index, unicode )</h1>...</div></emu-clause>\n\n      "}, "sec-array.prototype.map": {"num": "23.1.3.18", "title": "#sec-array.prototype.map Array.prototype.map ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.map\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.map\">#sec-array.prototype.map</span> Array.prototype.map ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>map</code> calls <var>callbackfn</var> once for each element in the array, in ascending order, and constructs a new Array from the results. <var>callbackfn</var> is called only for elements of the array which actually exist; it is not called for missing elements of the array.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>map</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>map</code> is set before the first call to <var>callbackfn</var>. Elements which are appended to the array after the call to <code>map</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed, their value as passed to <var>callbackfn</var> will be the value at the time <code>map</code> visits them; elements that are deleted after the call to <code>map</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>map</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>mappedValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <var>Pk</var>, <var>mappedValue</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>map</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.copywithin": {"num": "23.1.3.3", "title": "#sec-array.prototype.copywithin Array.prototype.copyWithin ( target, start [ , end ] )", "html": "<emu-clause id=\"sec-array.prototype.copywithin\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.copywithin\">#sec-array.prototype.copywithin</span> Array.prototype.copyWithin ( <var>target</var>, <var>start</var> [ , <var>end</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The <var>end</var> argument is optional. If it is not provided, the length of the <emu-val>this</emu-val> value is used.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>target</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>target</var></emu-eqn> where <var>length</var> is the length of the array. If <var>start</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>start</var></emu-eqn>. If <var>end</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>end</var></emu-eqn>.</p>\n        </div></emu-note>\n        <p>When the <code>copyWithin</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeTarget</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>target</var>).</li><li>If <var>relativeTarget</var> is -&#8734;, let <var>to</var> be 0.</li><li>Else if <var>relativeTarget</var> &lt; 0, let <var>to</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeTarget</var>, 0).</li><li>Else, let <var>to</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeTarget</var>, <var>len</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>from</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>from</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>from</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>final</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Let <var>count</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>final</var> - <var>from</var>, <var>len</var> - <var>to</var>).</li><li>If <var>from</var> &lt; <var>to</var> and <var>to</var> &lt; <var>from</var> + <var>count</var>, then<ol><li>Let <var>direction</var> be -1.</li><li>Set <var>from</var> to <var>from</var> + <var>count</var> - 1.</li><li>Set <var>to</var> to <var>to</var> + <var>count</var> - 1.</li></ol></li><li>Else,<ol><li>Let <var>direction</var> be 1.</li></ol></li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>Let <var>fromKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>from</var>)).</li><li>Let <var>toKey</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>to</var>)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>fromKey</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromVal</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>fromKey</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>toKey</var>, <var>fromVal</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>toKey</var>).</li></ol></li><li>Set <var>from</var> to <var>from</var> + <var>direction</var>.</li><li>Set <var>to</var> to <var>to</var> + <var>direction</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>copyWithin</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.tostring": {"num": "23.1.3.30", "title": "#sec-array.prototype.tostring Array.prototype.toString ( )", "html": "<emu-clause id=\"sec-array.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.tostring\">#sec-array.prototype.tostring</span> Array.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>array</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>func</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>array</var>, <emu-val>\"join\"</emu-val>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>func</var>) is <emu-val>false</emu-val>, set <var>func</var> to the intrinsic function %Object.prototype.toString%.</li><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>func</var>, <var>array</var>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>toString</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise-constructor": {"num": "27.2.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Promise\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value in an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Promise behaviour must include a <code>super</code> call to the Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">27.2.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-string.prototype.split": {"num": "22.1.3.21", "title": "#sec-string.prototype.split String.prototype.split ( separator, limit )", "html": "<emu-clause id=\"sec-string.prototype.split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.split\">#sec-string.prototype.split</span> String.prototype.split ( <var>separator</var>, <var>limit</var> )</h1>\n        <p>Returns an Array into which substrings of the result of converting this object to a String have been stored. The substrings are determined by searching from left to right for occurrences of <var>separator</var>; these occurrences are not part of any String in the returned array, but serve to divide up the String value. The value of <var>separator</var> may be a String of any length or it may be an object, such as a RegExp, that has a <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@split</a></emu-xref> method.</p>\n        <p>When the <code>split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>separator</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>separator</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@split</a></emu-xref>).</li><li>If <var>splitter</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>splitter</var>, <var>separator</var>, &#171; <var>O</var>, <var>limit</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(? <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>)).</li><li>Let <var>R</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>separator</var>).</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>If <var>separator</var> is <emu-val>undefined</emu-val>, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>s</var> be the length of <var>S</var>.</li><li>If <var>s</var> = 0, then<ol><li>If <var>R</var> is not the empty String, then<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <emu-val>\"0\"</emu-val>, <var>S</var>).</li></ol></li><li>Return <var>A</var>.</li></ol></li><li>Let <var>p</var> be 0.</li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &#8800; <var>s</var>,<ol><li>Let <var>e</var> be <emu-xref aoid=\"SplitMatch\"><a href=\"#sec-splitmatch\">SplitMatch</a></emu-xref>(<var>S</var>, <var>q</var>, <var>R</var>).</li><li>If <var>e</var> is <emu-const>not-matched</emu-const>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>e</var> is a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> &#8804; <var>s</var>.</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <var>q</var> + 1.</li><li>Else,<ol><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>q</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the <emu-xref href=\"#substring\"><a href=\"#substring\">substring</a></emu-xref> of <var>S</var> from <var>p</var> to <var>s</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>lengthA</var>)), <var>T</var>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The value of <var>separator</var> may be an empty String. In this case, <var>separator</var> does not match the empty <emu-not-ref>substring</emu-not-ref> at the beginning or end of the input String, nor does it match the empty <emu-not-ref>substring</emu-not-ref> at the end of the previous separator match. If <var>separator</var> is the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each <emu-not-ref>substring</emu-not-ref> contains one code unit.</p>\n          <p>If the <emu-val>this</emu-val> value is (or converts to) the empty String, the result depends on whether <var>separator</var> can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If <var>separator</var> is <emu-val>undefined</emu-val>, then the result array contains just one String, which is the <emu-val>this</emu-val> value (converted to a String). If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>split</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-splitmatch\"><h1><span class=\"secnum\">22.1.3.21.1</span>#sec-splitmatch SplitMatch ( S, q, R )</h1>...</div></emu-clause>\n\n      "}, "sec-createarrayfromlist": {"num": "7.3.17", "title": "#sec-createarrayfromlist CreateArrayFromList ( elements )", "html": "<emu-clause id=\"sec-createarrayfromlist\" aoid=\"CreateArrayFromList\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createarrayfromlist\">#sec-createarrayfromlist</span> CreateArrayFromList ( <var>elements</var> )</h1>\n      <p>The abstract operation CreateArrayFromList takes argument <var>elements</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>). It is used to create an Array whose elements are provided by <var>elements</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>elements</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are all <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>.</li><li>Let <var>array</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>For each element <var>e</var> of <var>elements</var>, do<ol><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>e</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Return <var>array</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-initializetypedarrayfromlist": {"num": "23.2.5.1.4", "title": "#sec-initializetypedarrayfromlist InitializeTypedArrayFromList ( O, values )", "html": "<emu-clause id=\"sec-initializetypedarrayfromlist\" aoid=\"InitializeTypedArrayFromList\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromlist\">#sec-initializetypedarrayfromlist</span> InitializeTypedArrayFromList ( <var>O</var>, <var>values</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromList takes arguments <var>O</var> (a TypedArray) and <var>values</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>len</var> be the number of elements in <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>O</var>, <var>len</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be the first element of <var>values</var> and remove that element from <var>values</var>.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>kValue</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>values</var> is now an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-async-function-constructor": {"num": "27.7.1", "title": "#sec-async-function-constructor The AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</span> The AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncFunction when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncFunction(&#8230;)</code> is equivalent to the object creation expression <code>new AsyncFunction(&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified AsyncFunction behaviour must include a <code>super</code> call to the AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in async function behaviour. All ECMAScript syntactic forms for defining async <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> create direct instances of AsyncFunction. There is no syntactic means to create instances of AsyncFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-arguments\"><h1><span class=\"secnum\">27.7.1.1</span>#sec-async-function-constructor-arguments AsyncFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-generatorfunction-constructor": {"num": "27.3.1", "title": "#sec-generatorfunction-constructor The GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</span> The GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%GeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new GeneratorFunction when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>GeneratorFunction (&#8230;)</code> is equivalent to the object creation expression <code>new GeneratorFunction (&#8230;)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified GeneratorFunction behaviour must include a <code>super</code> call to the GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in GeneratorFunction behaviour. All ECMAScript syntactic forms for defining generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> create direct instances of GeneratorFunction. There is no syntactic means to create instances of GeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction\"><h1><span class=\"secnum\">27.3.1.1</span>#sec-generatorfunction GeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver": {"num": "10.5.9", "title": "#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver [[Set]] ( P, V, Receiver )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver\">#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver</span> [[Set]] ( <var>P</var>, <var>V</var>, <var>Receiver</var> )</h1>\n      <p>The [[Set]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes arguments <var>P</var> (a property key), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>Receiver</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsPropertyKey\"><a href=\"#sec-ispropertykey\">IsPropertyKey</a></emu-xref>(<var>P</var>) is <emu-val>true</emu-val>.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"set\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[Set]](<var>P</var>, <var>V</var>, <var>Receiver</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>P</var>, <var>V</var>, <var>Receiver</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>targetDesc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>P</var>).</li><li>If <var>targetDesc</var> is not <emu-val>undefined</emu-val> and <var>targetDesc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val> and <var>targetDesc</var>.[[Writable]] is <emu-val>false</emu-val>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetDesc</var>.[[Value]]) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>If <emu-xref aoid=\"IsAccessorDescriptor\"><a href=\"#sec-isaccessordescriptor\">IsAccessorDescriptor</a></emu-xref>(<var>targetDesc</var>) is <emu-val>true</emu-val>, then<ol><li>If <var>targetDesc</var>.[[Set]] is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[Set]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[Set]] is a Boolean value.\n          </li>\n          <li>\n            Cannot change the value of a property to be different from the value of the corresponding target object property if the corresponding target object property is a non-writable, non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref>.\n          </li>\n          <li>\n            Cannot set the value of a property if the corresponding target object property is a non-configurable own <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> that has <emu-val>undefined</emu-val> as its [[Set]] attribute.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-initializetypedarrayfromtypedarray": {"num": "23.2.5.1.2", "title": "#sec-initializetypedarrayfromtypedarray InitializeTypedArrayFromTypedArray ( O, srcArray )", "html": "<emu-clause id=\"sec-initializetypedarrayfromtypedarray\" oldids=\"sec-typedarray-typedarray\" aoid=\"InitializeTypedArrayFromTypedArray\"><span id=\"sec-typedarray-typedarray\"></span>\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-initializetypedarrayfromtypedarray\">#sec-initializetypedarrayfromtypedarray</span> InitializeTypedArrayFromTypedArray ( <var>O</var>, <var>srcArray</var> )</h1>\n          <p>The abstract operation InitializeTypedArrayFromTypedArray takes arguments <var>O</var> (a TypedArray) and <var>srcArray</var> (a TypedArray). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>srcArray</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>srcData</var> be <var>srcArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>elementLength</var> be <var>srcArray</var>.[[ArrayLength]].</li><li>Let <var>srcName</var> be the String value of <var>srcArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the Element Type value in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcByteOffset</var> be <var>srcArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>elementLength</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>bufferConstructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>srcData</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li></ol></li><li>Else,<ol><li>Let <var>bufferConstructor</var> be <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>.</li></ol></li><li>If <var>elementType</var> is the same as <var>srcType</var>, then<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteOffset</var>, <var>byteLength</var>, <var>bufferConstructor</var>).</li></ol></li><li>Else,<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>bufferConstructor</var>, <var>byteLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>srcArray</var>.[[ContentType]] &#8800; <var>O</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be 0.</li><li>Let <var>count</var> be <var>elementLength</var>.</li><li>Repeat, while <var>count</var> &gt; 0,<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>data</var>, <var>targetByteIndex</var>, <var>elementType</var>, <var>value</var>, <emu-val>true</emu-val>, <emu-const>Unordered</emu-const>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>elementSize</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>elementLength</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-generator-function-definitions": {"num": "15.5", "title": "#sec-generator-function-definitions Generator Function Definitions", "html": "<emu-clause id=\"sec-generator-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-function-definitions\">#sec-generator-function-definitions</span> Generator Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"GeneratorMethod\" params=\"Yield, Await\" id=\"prod-GeneratorMethod\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"s6ntmoac\" id=\"prod-8GV2khgE\">\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ClassElementName\">ClassElementName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorDeclaration\" params=\"Yield, Await, Default\" id=\"prod-GeneratorDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"56abocni\" id=\"prod-oJNsRhfl\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"gcxlonl8\" constraints=\"+Default\" id=\"prod-bWfHg6Xe\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorExpression\" id=\"prod-GeneratorExpression\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"zsu4etlj\" id=\"prod-haubt72j\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"+Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorBody\" id=\"prod-GeneratorBody\">\n    <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"quvqn30c\" id=\"prod-UaNDUTMe\"><emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"YieldExpression\" params=\"In, Await\" id=\"prod-YieldExpression\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-YieldExpression\">YieldExpression</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d8zyjn8\"><emu-t>yield</emu-t></emu-rhs>\n    <emu-rhs a=\"alznzlpx\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"mrbi6v84\">\n        <emu-t>yield</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>*</emu-t>\n        <emu-nt params=\"?In, +Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, +Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>The syntactic context immediately following <code>yield</code> requires use of the <emu-nt><a href=\"#prod-InputElementRegExpOrTemplateTail\">InputElementRegExpOrTemplateTail</a></emu-nt> lexical goal.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p><emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> cannot be used within the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a generator function because any expressions that are part of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> are evaluated before the resulting Generator is in a resumable state.</p>\n    </div></emu-note>\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p><emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">Abstract operations</a></emu-xref> relating to Generators are defined in <emu-xref href=\"#sec-generator-abstract-operations\"><a href=\"#sec-generator-abstract-operations\" class=\"excluded-xref\" excluded-id=\"sec-generator-abstract-operations\">#sec-generator-abstract-operations</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-generator-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">15.5.1</span>#sec-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-runtime-semantics-evaluategeneratorbody\"><h1><span class=\"secnum\">15.5.2</span>#sec-runtime-semantics-evaluategeneratorbody Runtime Semantics: EvaluateGeneratorBody</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiategeneratorfunctionobject\"><h1><span class=\"secnum\">15.5.3</span>#sec-runtime-semantics-instantiategeneratorfunctionobject Runtime Semantics: InstantiateGeneratorFunctionObject</h1>...</div><div id=\"excluded-sec-runtime-semantics-instantiategeneratorfunctionexpression\"><h1><span class=\"secnum\">15.5.4</span>#sec-runtime-semantics-instantiategeneratorfunctionexpression Runtime Semantics: InstantiateGeneratorFunctionExpression</h1>...</div><div id=\"excluded-sec-generator-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.5.5</span>#sec-generator-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-array.prototype.fill": {"num": "23.1.3.6", "title": "#sec-array.prototype.fill Array.prototype.fill ( value [ , start [ , end ] ] )", "html": "<emu-clause id=\"sec-array.prototype.fill\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.fill\">#sec-array.prototype.fill</span> Array.prototype.fill ( <var>value</var> [ , <var>start</var> [ , <var>end</var> ] ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The <var>start</var> argument is optional. If it is not provided, <emu-val>+0</emu-val><sub>&#120125;</sub> is used.</p>\n          <p>The <var>end</var> argument is optional. If it is not provided, the length of the <emu-val>this</emu-val> value is used.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>start</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>start</var></emu-eqn> where <var>length</var> is the length of the array. If <var>end</var> is negative, it is treated as <emu-eqn class=\"inline\"><var>length</var> + <var>end</var></emu-eqn>.</p>\n        </div></emu-note>\n        <p>When the <code>fill</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>k</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>k</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> is -&#8734;, let <var>final</var> be 0.</li><li>Else if <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeEnd</var>, 0).</li><li>Else, let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>Repeat, while <var>k</var> &lt; <var>final</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>value</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>fill</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array-constructor": {"num": "23.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Array\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Array when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the exotic Array behaviour must include a <code>super</code> call to the Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic objects</a></emu-xref>. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an <emu-xref href=\"#array-exotic-object\"><a href=\"#array-exotic-object\">Array exotic object</a></emu-xref>.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>1</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-array Array ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.reduceright": {"num": "23.1.3.22", "title": "#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )", "html": "<emu-clause id=\"sec-array.prototype.reduceright\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reduceright\">#sec-array.prototype.reduceright</span> Array.prototype.reduceRight ( <var>callbackfn</var> [ , <var>initialValue</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that takes four arguments. <code>reduceRight</code> calls the callback, as a function, once for each element after the first element present in the array, in descending order.</p>\n          <p><var>callbackfn</var> is called with four arguments: the <var>previousValue</var> (value from the previous call to <var>callbackfn</var>), the <var>currentValue</var> (value of the current element), the <var>currentIndex</var>, and the object being traversed. The first time the function is called, the <var>previousValue</var> and <var>currentValue</var> can be one of two values. If an <var>initialValue</var> was supplied in the call to <code>reduceRight</code>, then <var>previousValue</var> will be equal to <var>initialValue</var> and <var>currentValue</var> will be equal to the last value in the array. If no <var>initialValue</var> was supplied, then <var>previousValue</var> will be equal to the last value in the array and <var>currentValue</var> will be equal to the second-to-last value. It is a <emu-val>TypeError</emu-val> if the array contains no elements and <var>initialValue</var> is not provided.</p>\n          <p><code>reduceRight</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>reduceRight</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>reduceRight</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed by <var>callbackfn</var>, their value as passed to <var>callbackfn</var> will be the value at the time <code>reduceRight</code> visits them; elements that are deleted after the call to <code>reduceRight</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>reduceRight</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>len</var> is 0 and <var>initialValue</var> is not present, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be <var>len</var> - 1.</li><li>Let <var>accumulator</var> be <emu-val>undefined</emu-val>.</li><li>If <var>initialValue</var> is present, then<ol><li>Set <var>accumulator</var> to <var>initialValue</var>.</li></ol></li><li>Else,<ol><li>Let <var>kPresent</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>kPresent</var> is <emu-val>false</emu-val> and <var>k</var> &#8805; 0,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Set <var>kPresent</var> to ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>If <var>kPresent</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <emu-val>undefined</emu-val>, &#171; <var>accumulator</var>, <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return <var>accumulator</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reduceRight</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-date.prototype.toutcstring": {"num": "21.4.4.43", "title": "#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )", "html": "<emu-clause id=\"sec-date.prototype.toutcstring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.toutcstring\">#sec-date.prototype.toutcstring</span> Date.prototype.toUTCString ( )</h1>\n        <p>The <code>toUTCString</code> method returns a String value representing the instance in time corresponding to <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref>. The format of the String is based upon \"HTTP-date\" from RFC 7231, generalized to support the full range of times supported by ECMAScript Dates. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>O</var> be <emu-xref href=\"#this-Date-object\"><a href=\"#this-Date-object\">this Date object</a></emu-xref>.</li><li>Let <var>tv</var> be ?&#160;<emu-xref href=\"#thistimevalue\"><a href=\"#thistimevalue\">thisTimeValue</a></emu-xref>(<var>O</var>).</li><li>If <var>tv</var> is <emu-val>NaN</emu-val>, return <emu-val>\"Invalid Date\"</emu-val>.</li><li>Let <var>weekday</var> be the Name of the entry in <emu-xref href=\"#sec-todatestring-day-names\"><a href=\"#sec-todatestring-day-names\" class=\"excluded-xref\" excluded-id=\"sec-todatestring-day-names\">#sec-todatestring-day-names</a></emu-xref> with the Number <emu-xref aoid=\"WeekDay\"><a href=\"#sec-week-day\">WeekDay</a></emu-xref>(<var>tv</var>).</li><li>Let <var>month</var> be the Name of the entry in <emu-xref href=\"#sec-todatestring-month-names\"><a href=\"#sec-todatestring-month-names\" class=\"excluded-xref\" excluded-id=\"sec-todatestring-month-names\">#sec-todatestring-month-names</a></emu-xref> with the Number <emu-xref aoid=\"MonthFromTime\"><a href=\"#eqn-MonthFromTime\">MonthFromTime</a></emu-xref>(<var>tv</var>).</li><li>Let <var>day</var> be the String representation of <emu-xref aoid=\"DateFromTime\"><a href=\"#sec-date-number\">DateFromTime</a></emu-xref>(<var>tv</var>), formatted as a two-digit decimal number, padded to the left with the code unit 0x0030 (DIGIT ZERO) if necessary.</li><li>Let <var>yv</var> be <emu-xref aoid=\"YearFromTime\"><a href=\"#eqn-YearFromTime\">YearFromTime</a></emu-xref>(<var>tv</var>).</li><li>If <var>yv</var> &#8805; <emu-val>+0</emu-val><sub>&#120125;</sub>, let <var>yearSign</var> be the empty String; otherwise, let <var>yearSign</var> be <emu-val>\"-\"</emu-val>.</li><li>Let <var>year</var> be the String representation of <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>yv</var>)), formatted as a decimal number.</li><li>Let <var>paddedYear</var> be !&#160;<emu-xref aoid=\"StringPad\"><a href=\"#sec-stringpad\">StringPad</a></emu-xref>(<var>year</var>, <emu-val>4</emu-val><sub>&#120125;</sub>, <emu-val>\"0\"</emu-val>, <emu-const>start</emu-const>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>weekday</var>, <emu-val>\",\"</emu-val>, the code unit 0x0020 (SPACE), <var>day</var>, the code unit 0x0020 (SPACE), <var>month</var>, the code unit 0x0020 (SPACE), <var>yearSign</var>, <var>paddedYear</var>, the code unit 0x0020 (SPACE), and <emu-xref aoid=\"TimeString\"><a href=\"#sec-timestring\">TimeString</a></emu-xref>(<var>tv</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-array.prototype.concat": {"num": "23.1.3.1", "title": "#sec-array.prototype.concat Array.prototype.concat ( ...items )", "html": "<emu-clause id=\"sec-array.prototype.concat\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.concat\">#sec-array.prototype.concat</span> Array.prototype.concat ( ...<var>items</var> )</h1>\n        <p>Returns an array containing the array elements of the object followed by the array elements of each argument.</p>\n        <p>When the <code>concat</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, 0).</li><li>Let <var>n</var> be 0.</li><li>Prepend <var>O</var> to <var>items</var>.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Let <var>spreadable</var> be ?&#160;<emu-xref aoid=\"IsConcatSpreadable\"><a href=\"#sec-isconcatspreadable\">IsConcatSpreadable</a></emu-xref>(<var>E</var>).</li><li>If <var>spreadable</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>k</var> be 0.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>E</var>).</li><li>If <var>n</var> + <var>len</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>P</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>exists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>E</var>, <var>P</var>).</li><li>If <var>exists</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>subElement</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>E</var>, <var>P</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>subElement</var>).</li></ol></li><li>Set <var>n</var> to <var>n</var> + 1.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>NOTE: <var>E</var> is added as a single item rather than spread.</li><li>If <var>n</var> &#8805; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>)), <var>E</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li></ol></li><li id=\"step-array-proto-concat-set-length\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>n</var>), <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <p>The <emu-val>\"length\"</emu-val> property of the <code>concat</code> method is <emu-val>1</emu-val><sub>&#120125;</sub>.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The explicit setting of the <emu-val>\"length\"</emu-val> property in step <emu-xref href=\"#step-array-proto-concat-set-length\"><a href=\"#step-array-proto-concat-set-length\" class=\"excluded-xref\" excluded-id=\"step-array-proto-concat-set-length\">#step-array-proto-concat-set-length</a></emu-xref> is necessary to ensure that its value is correct in situations where the trailing elements of the result Array are not present.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>concat</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-isconcatspreadable\"><h1><span class=\"secnum\">23.1.3.1.1</span>#sec-isconcatspreadable IsConcatSpreadable ( O )</h1>...</div></emu-clause>\n\n      "}, "sec-agent-clusters": {"num": "9.8", "title": "#sec-agent-clusters Agent Clusters", "html": "<emu-clause id=\"sec-agent-clusters\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-agent-clusters\">#sec-agent-clusters</span> Agent Clusters</h1>\n\n    <p>An <dfn variants=\"agent clusters\">agent cluster</dfn> is a maximal set of <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that can communicate by operating on shared memory.</p>\n\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Programs within different <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> may share memory by unspecified means. At a minimum, the backing memory for SharedArrayBuffers can be shared among the <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster.</p>\n\n      <p>There may be <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that can communicate by message passing that cannot share memory; they are never in the same agent cluster.</p>\n    </div></emu-note>\n\n    <p>Every <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> belongs to exactly one agent cluster.</p>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in a cluster need not all be alive at some particular point in time. If <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <b>A</b> creates another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <b>B</b>, after which <b>A</b> terminates and <b>B</b> creates <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> <b>C</b>, the three <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> are in the same cluster if <b>A</b> could share some memory with <b>B</b> and <b>B</b> could share some memory with <b>C</b>.</p>\n    </div></emu-note>\n\n    <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within a cluster must have the same value for the [[LittleEndian]] property in their respective <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Records</a></emu-xref>.</p>\n\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>If different <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within an agent cluster have different values of [[LittleEndian]] it becomes hard to use shared memory for multi-byte data.</p>\n    </div></emu-note>\n\n    <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within a cluster must have the same values for the [[IsLockFree1]] property in their respective <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Records</a></emu-xref>; similarly for the [[IsLockFree2]] property.</p>\n\n    <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> within a cluster must have different values for the [[Signifier]] property in their respective <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Records</a></emu-xref>.</p>\n\n    <p>An embedding may deactivate (stop forward progress) or activate (resume forward progress) an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> without the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s knowledge or cooperation. If the embedding does so, it must not leave some <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster active while other <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster are deactivated indefinitely.</p>\n\n    <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n      <p>The purpose of the preceding restriction is to avoid a situation where an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> deadlocks or starves because another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> has been deactivated. For example, if an HTML shared worker that has a lifetime independent of documents in any windows were allowed to share memory with the dedicated worker of such an independent document, and the document and its dedicated worker were to be deactivated while the dedicated worker holds a lock (say, the document is pushed into its window's history), and the shared worker then tries to acquire the lock, then the shared worker will be blocked until the dedicated worker is activated again, if ever. Meanwhile other workers trying to access the shared worker from other windows will starve.</p>\n\n      <p>The implication of the restriction is that it will not be possible to share memory between <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that don't belong to the same suspend/wake collective within the embedding.</p>\n    </div></emu-note>\n\n    <p>An embedding may terminate an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> without any of the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s cluster's other <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref>' prior knowledge or cooperation. If an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is terminated not by programmatic action of its own or of another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the cluster but by forces external to the cluster, then the embedding must choose one of two strategies: Either terminate all the <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster, or provide reliable APIs that allow the <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster to coordinate so that at least one remaining member of the cluster will be able to detect the termination, with the termination data containing enough information to identify the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> that was terminated.</p>\n\n    <emu-note><span class=\"note\">Note 5</span><div class=\"note-contents\">\n      <p>Examples of that type of termination are: operating systems or users terminating <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> that are running in separate processes; the embedding itself terminating an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> that is running in-process with the other <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> when per-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> resource accounting indicates that the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is runaway.</p>\n    </div></emu-note>\n\n    <p>Prior to any evaluation of any ECMAScript code by any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in a cluster, the [[CandidateExecution]] field of the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> for all <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in the cluster is set to the initial <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref>. The initial <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> is an <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">empty candidate execution</a></emu-xref> whose [[EventsRecords]] field is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing, for each <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>, an <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> whose [[AgentSignifier]] field is that <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s signifier, and whose [[EventList]] and [[AgentSynchronizesWith]] fields are empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Lists</a></emu-xref>.</p>\n\n    <emu-note><span class=\"note\">Note 6</span><div class=\"note-contents\">\n      <p>All <emu-xref href=\"#agent\"><a href=\"#agent\">agents</a></emu-xref> in an agent cluster share the same <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> in its <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s [[CandidateExecution]] field. The <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> is a specification mechanism used by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 7</span><div class=\"note-contents\">\n      <p>An agent cluster is a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation.</p>\n    </div></emu-note>\n  </emu-clause>\n\n  "}, "sec-array.prototype.pop": {"num": "23.1.3.19", "title": "#sec-array.prototype.pop Array.prototype.pop ( )", "html": "<emu-clause id=\"sec-array.prototype.pop\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.pop\">#sec-array.prototype.pop</span> Array.prototype.pop ( )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The last element of the array is removed from the array and returned.</p>\n        </div></emu-note>\n        <p>When the <code>pop</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> = 0, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>true</emu-val>).</li><li>Return <emu-val>undefined</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>len</var> &gt; 0.</li><li>Let <var>newLen</var> be <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - 1).</li><li>Let <var>index</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>newLen</var>).</li><li>Let <var>element</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>index</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>index</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <var>newLen</var>, <emu-val>true</emu-val>).</li><li>Return <var>element</var>.</li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>pop</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.find": {"num": "23.1.3.8", "title": "#sec-array.prototype.find Array.prototype.find ( predicate [ , thisArg ] )", "html": "<emu-clause id=\"sec-array.prototype.find\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.find\">#sec-array.prototype.find</span> Array.prototype.find ( <var>predicate</var> [ , <var>thisArg</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>predicate</var> should be a function that accepts three arguments and returns a value that is coercible to a Boolean value. <code>find</code> calls <var>predicate</var> once for each element of the array, in ascending order, until it finds one where <var>predicate</var> returns <emu-val>true</emu-val>. If such an element is found, <code>find</code> immediately returns that element value. Otherwise, <code>find</code> returns <emu-val>undefined</emu-val>.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>predicate</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>predicate</var> is called with three arguments: the value of the element, the index of the element, and the object being traversed.</p>\n          <p><code>find</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>predicate</var>.</p>\n          <p>The range of elements processed by <code>find</code> is set before the first call to <var>predicate</var>. Elements that are appended to the array after the call to <code>find</code> begins will not be visited by <var>predicate</var>. If existing elements of the array are changed, their value as passed to <var>predicate</var> will be the value at the time that <code>find</code> visits them; elements that are deleted after the call to <code>find</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>find</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>predicate</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)).</li><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Let <var>testResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>predicate</var>, <var>thisArg</var>, &#171; <var>kValue</var>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>), <var>O</var> &#187;)).</li><li>If <var>testResult</var> is <emu-val>true</emu-val>, return <var>kValue</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>find</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-getmodifysetvalueinbuffer": {"num": "25.1.2.13", "title": "#sec-getmodifysetvalueinbuffer GetModifySetValueInBuffer ( arrayBuffer, byteIndex, type, value, op [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-getmodifysetvalueinbuffer\" aoid=\"GetModifySetValueInBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getmodifysetvalueinbuffer\">#sec-getmodifysetvalueinbuffer</span> GetModifySetValueInBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>value</var>, <var>op</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation GetModifySetValueInBuffer takes arguments <var>arrayBuffer</var> (an ArrayBuffer or a SharedArrayBuffer), <var>byteIndex</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>), <var>type</var> (a <emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\">TypedArray element type</a></emu-xref>), <var>value</var> (a Number or a BigInt), and <var>op</var> (a <emu-xref href=\"#sec-arraybuffer-notation\"><a href=\"#sec-arraybuffer-notation\">read-modify-write modification function</a></emu-xref>) and optional argument <var>isLittleEndian</var> (a Boolean). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt if !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>true</emu-val>; otherwise, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>rawBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>type</var>, <var>value</var>, <var>isLittleEndian</var>).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>rawBytesRead</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> whose elements are nondeterministically chosen <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">byte values</a></emu-xref>.</li><li>NOTE: In implementations, <var>rawBytesRead</var> is the result of a load-link, of a load-exclusive, or of an operand of a read-modify-write instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>rmwEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadModifyWriteSharedMemory</a></emu-xref> { [[Order]]: <emu-const>SeqCst</emu-const>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var>, [[Payload]]: <var>rawBytes</var>, [[ModifyOp]]: <var>op</var> }.</li><li>Append <var>rmwEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>rmwEvent</var>, [[ChosenValue]]: <var>rawBytesRead</var> } to <var>execution</var>.[[ChosenValues]].</li></ol></li><li>Else,<ol><li>Let <var>rawBytesRead</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> whose elements are the sequence of <var>elementSize</var> bytes starting with <var>block</var>[<var>byteIndex</var>].</li><li>Let <var>rawBytesModified</var> be <var>op</var>(<var>rawBytesRead</var>, <var>rawBytes</var>).</li><li>Store the individual bytes of <var>rawBytesModified</var> into <var>block</var>, starting at <var>block</var>[<var>byteIndex</var>].</li></ol></li><li>Return <emu-xref aoid=\"RawBytesToNumeric\"><a href=\"#sec-rawbytestonumeric\">RawBytesToNumeric</a></emu-xref>(<var>type</var>, <var>rawBytesRead</var>, <var>isLittleEndian</var>).</li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-array.prototype.includes": {"num": "23.1.3.13", "title": "#sec-array.prototype.includes Array.prototype.includes ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.includes\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.includes\">#sec-array.prototype.includes</span> Array.prototype.includes ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>includes</code> compares <var>searchElement</var> to the elements of the array, in ascending order, using the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> algorithm, and if found at any position, returns <emu-val>true</emu-val>; otherwise, <emu-val>false</emu-val> is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to <emu-val>+0</emu-val><sub>&#120125;</sub> (i.e. the whole array is searched). If it is greater than or equal to the length of the array, <emu-val>false</emu-val> is returned, i.e. the array will not be searched. If it is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, the whole array will be searched.</p>\n        </div></emu-note>\n        <p>When the <code>includes</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return <emu-val>false</emu-val>.</li><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>fromIndex</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>fromIndex</var> is <emu-val>undefined</emu-val>, then <var>n</var> is 0.</li><li>If <var>n</var> is +&#8734;, return <emu-val>false</emu-val>.</li><li>Else if <var>n</var> is -&#8734;, set <var>n</var> to 0.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <var>n</var>.</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li><li>If <var>k</var> &lt; 0, set <var>k</var> to 0.</li></ol></li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref>(<var>searchElement</var>, <var>elementK</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>includes</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>includes</code> method intentionally differs from the similar <code>indexOf</code> method in two ways. First, it uses the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> algorithm, instead of <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref>, allowing it to detect <emu-val>NaN</emu-val> array elements. Second, it does not skip missing array elements, instead treating them as <emu-val>undefined</emu-val>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact": {"num": "E", "title": "#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact Corrections and Clarifications in CMAScript 2015 with Possible Compatibility Impact", "html": "<emu-annex id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact</span> Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact</h1>\n  <p><emu-xref href=\"#sec-candeclareglobalvar\"><a href=\"#sec-candeclareglobalvar\" class=\"excluded-xref\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</a></emu-xref>-<emu-xref href=\"#sec-createglobalfunctionbinding\"><a href=\"#sec-createglobalfunctionbinding\" class=\"excluded-xref\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</a></emu-xref> Edition 5 and 5.1 used a property existence test to determine whether a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> property corresponding to a new global declaration already existed. ECMAScript 2015 uses an own property existence test. This corresponds to what has been most commonly implemented by web browsers.</p>\n  <p><emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>: The 5<sup>th</sup> Edition moved the capture of the current array length prior to the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> conversion of the <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> or new length value. However, the captured length value could become invalid if the conversion process has the side-effect of changing the array length. ECMAScript 2015 specifies that the current array length must be captured after the possible occurrence of such side-effects.</p>\n  <p><emu-xref href=\"#sec-timeclip\"><a href=\"#sec-timeclip\" class=\"excluded-xref\" excluded-id=\"sec-timeclip\">#sec-timeclip</a></emu-xref>: Previous editions permitted the <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref> abstract operation to return either <emu-val>+0</emu-val><sub>&#120125;</sub> or <emu-val>-0</emu-val><sub>&#120125;</sub> as the representation of a 0 <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>. ECMAScript 2015 specifies that <emu-val>+0</emu-val><sub>&#120125;</sub> always returned. This means that for ECMAScript 2015 the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> of a Date is never observably <emu-val>-0</emu-val><sub>&#120125;</sub> and methods that return <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time values</a></emu-xref> never return <emu-val>-0</emu-val><sub>&#120125;</sub>.</p>\n  <p><emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>: If a UTC offset representation is not present, the local time zone is used. Edition 5.1 incorrectly stated that a missing time zone should be interpreted as <emu-val>\"z\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date.prototype.toisostring\"><a href=\"#sec-date.prototype.toisostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.toisostring\">#sec-date.prototype.toisostring</a></emu-xref>: If the year cannot be represented using the Date Time String Format specified in <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref> a RangeError exception is thrown. Previous editions did not specify the behaviour for that case.</p>\n  <p><emu-xref href=\"#sec-date.prototype.tostring\"><a href=\"#sec-date.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</a></emu-xref>: Previous editions did not specify the value returned by <code>Date.prototype.toString</code> when <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref> is <emu-val>NaN</emu-val>. ECMAScript 2015 specifies the result to be the String value <emu-val>\"Invalid Date\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref>, <emu-xref href=\"#sec-escaperegexppattern\"><a href=\"#sec-escaperegexppattern\" class=\"excluded-xref\" excluded-id=\"sec-escaperegexppattern\">#sec-escaperegexppattern</a></emu-xref>: Any LineTerminator code points in the value of the <emu-val>\"source\"</emu-val> property of a RegExp instance must be expressed using an escape sequence. Edition 5.1 only required the escaping of <code>/</code>.</p>\n  <p><emu-xref href=\"#sec-regexp.prototype-@@match\"><a href=\"#sec-regexp.prototype-@@match\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</a></emu-xref>, <emu-xref href=\"#sec-regexp.prototype-@@replace\"><a href=\"#sec-regexp.prototype-@@replace\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</a></emu-xref>: In previous editions, the specifications for <code>String.prototype.match</code> and <code>String.prototype.replace</code> was incorrect for cases where the pattern argument was a RegExp value whose <code>global</code> flag is set. The previous specifications stated that for each attempt to match the pattern, if <code>lastIndex</code> did not change it should be incremented by 1. The correct behaviour is that <code>lastIndex</code> should be incremented by one only if the pattern matched the empty String.</p>\n  <p><emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>, <emu-xref href=\"#sec-sortcompare\"><a href=\"#sec-sortcompare\" class=\"excluded-xref\" excluded-id=\"sec-sortcompare\">#sec-sortcompare</a></emu-xref>: Previous editions did not specify how a <emu-val>NaN</emu-val> value returned by a <var>comparefn</var> was interpreted by <code>Array.prototype.sort</code>. ECMAScript 2015 specifies that such as value is treated as if <emu-val>+0</emu-val><sub>&#120125;</sub> was returned from the <var>comparefn</var>. ECMAScript 2015 also specifies that <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is applied to the result returned by a <var>comparefn</var>. In previous editions, the effect of a <var>comparefn</var> result that is not a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> was <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>. In practice, implementations call <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>.</p>\n</emu-annex>\n\n"}, "sec-array.prototype.lastindexof": {"num": "23.1.3.17", "title": "#sec-array.prototype.lastindexof Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )", "html": "<emu-clause id=\"sec-array.prototype.lastindexof\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.lastindexof\">#sec-array.prototype.lastindexof</span> Array.prototype.lastIndexOf ( <var>searchElement</var> [ , <var>fromIndex</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><code>lastIndexOf</code> compares <var>searchElement</var> to the elements of the array in descending order using the <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref> algorithm, and if found at one or more indices, returns the largest such index; otherwise, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned.</p>\n          <p>The optional second argument <var>fromIndex</var> defaults to the array's length minus one (i.e. the whole array is searched). If it is greater than or equal to the length of the array, the whole array will be searched. If it is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, it is used as the offset from the end of the array to compute <var>fromIndex</var>. If the computed index is less than <emu-val>+0</emu-val><sub>&#120125;</sub>, <emu-val>-1</emu-val><sub>&#120125;</sub> is returned.</p>\n        </div></emu-note>\n        <p>When the <code>lastIndexOf</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <var>len</var> is 0, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>If <var>fromIndex</var> is present, let <var>n</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>fromIndex</var>); else let <var>n</var> be <var>len</var> - 1.</li><li>If <var>n</var> is -&#8734;, return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li><li>If <var>n</var> &#8805; 0, then<ol><li>Let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>n</var>, <var>len</var> - 1).</li></ol></li><li>Else,<ol><li>Let <var>k</var> be <var>len</var> + <var>n</var>.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0,<ol><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>elementK</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>))).</li><li>Let <var>same</var> be <emu-xref aoid=\"IsStrictlyEqual\"><a href=\"#sec-isstrictlyequal\">IsStrictlyEqual</a></emu-xref>(<var>searchElement</var>, <var>elementK</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, return <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return <emu-val>-1</emu-val><sub>&#120125;</sub>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>lastIndexOf</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-objects": {"num": "27.4", "title": "#sec-asyncgeneratorfunction-objects AsyncGeneratorFunction Objects", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-objects\">#sec-asyncgeneratorfunction-objects</span> AsyncGeneratorFunction Objects</h1>\n    <p>AsyncGeneratorFunctions are functions that are usually created by evaluating <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>, <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt>, and <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> syntactic productions. They may also be created by calling the <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref> intrinsic.</p>\n\n    <div id=\"excluded-sec-asyncgeneratorfunction-constructor\"><h1><span class=\"secnum\">27.4.1</span>#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction\"><h1><span class=\"secnum\">27.4.2</span>#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">27.4.3</span>#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-instances\"><h1><span class=\"secnum\">27.4.4</span>#sec-asyncgeneratorfunction-instances AsyncGeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-proxy-constructor": {"num": "28.2.1", "title": "#sec-proxy-constructor The Proxy Constructor", "html": "<emu-clause id=\"sec-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</span> The Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Proxy%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Proxy\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Proxy object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy-target-handler\"><h1><span class=\"secnum\">28.2.1.1</span>#sec-proxy-target-handler Proxy ( target, handler )</h1>...</div></emu-clause>\n\n    "}, "sec-arrayspeciescreate": {"num": "10.4.2.3", "title": "#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )", "html": "<emu-clause id=\"sec-arrayspeciescreate\" aoid=\"ArraySpeciesCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrayspeciescreate\">#sec-arrayspeciescreate</span> ArraySpeciesCreate ( <var>originalArray</var>, <var>length</var> )</h1>\n        <p>The abstract operation ArraySpeciesCreate takes arguments <var>originalArray</var> and <var>length</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It is used to specify the creation of a new Array or similar object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>originalArray</var>. It does not enforce that the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function returns an Array. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>originalArray</var>).</li><li>If <var>isArray</var> is <emu-val>false</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>originalArray</var>, <emu-val>\"constructor\"</emu-val>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>thisRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>realmC</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>C</var>).</li><li>If <var>thisRealm</var> and <var>realmC</var> are not the same <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>C</var>, <var>realmC</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>]]) is <emu-val>true</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is Object, then<ol><li>Set <var>C</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@species</a></emu-xref>).</li><li>If <var>C</var> is <emu-val>null</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>length</var>) &#187;).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If <var>originalArray</var> was created using the standard built-in Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> that is not the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, then a new Array is created using the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. This maintains compatibility with Web browsers that have historically had that behaviour for the <code>Array.prototype</code> methods that now are defined using ArraySpeciesCreate.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array.prototype.splice": {"num": "23.1.3.28", "title": "#sec-array.prototype.splice Array.prototype.splice ( start, deleteCount, ...items )", "html": "<emu-clause id=\"sec-array.prototype.splice\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.splice\">#sec-array.prototype.splice</span> Array.prototype.splice ( <var>start</var>, <var>deleteCount</var>, ...<var>items</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The <var>deleteCount</var> elements of the array starting at <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> <var>start</var> are replaced by the elements of <var>items</var>. An Array containing the deleted elements (if any) is returned.</p>\n        </div></emu-note>\n        <p>When the <code>splice</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> is -&#8734;, let <var>actualStart</var> be 0.</li><li>Else if <var>relativeStart</var> &lt; 0, let <var>actualStart</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>len</var> + <var>relativeStart</var>, 0).</li><li>Else, let <var>actualStart</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>start</var> is not present, then<ol><li>Let <var>insertCount</var> be 0.</li><li>Let <var>actualDeleteCount</var> be 0.</li></ol></li><li>Else if <var>deleteCount</var> is not present, then<ol><li>Let <var>insertCount</var> be 0.</li><li>Let <var>actualDeleteCount</var> be <var>len</var> - <var>actualStart</var>.</li></ol></li><li>Else,<ol><li>Let <var>insertCount</var> be the number of elements in <var>items</var>.</li><li>Let <var>dc</var> be ?&#160;<emu-xref aoid=\"ToIntegerOrInfinity\"><a href=\"#sec-tointegerorinfinity\">ToIntegerOrInfinity</a></emu-xref>(<var>deleteCount</var>).</li><li>Let <var>actualDeleteCount</var> be the result of <emu-xref href=\"#clamping\"><a href=\"#clamping\">clamping</a></emu-xref> <var>dc</var> between 0 and <var>len</var> - <var>actualStart</var>.</li></ol></li><li>If <var>len</var> + <var>insertCount</var> - <var>actualDeleteCount</var> &gt; 2<sup>53</sup> - 1, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>A</var> be ?&#160;<emu-xref aoid=\"ArraySpeciesCreate\"><a href=\"#sec-arrayspeciescreate\">ArraySpeciesCreate</a></emu-xref>(<var>O</var>, <var>actualDeleteCount</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>actualDeleteCount</var>,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>actualStart</var> + <var>k</var>)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)), <var>fromValue</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>A</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>actualDeleteCount</var>), <emu-val>true</emu-val>).</li><li>Let <var>itemCount</var> be the number of elements in <var>items</var>.</li><li>If <var>itemCount</var> &lt; <var>actualDeleteCount</var>, then<ol><li>Set <var>k</var> to <var>actualStart</var>.</li><li>Repeat, while <var>k</var> &lt; (<var>len</var> - <var>actualDeleteCount</var>),<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>actualDeleteCount</var>)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>itemCount</var>)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Set <var>k</var> to <var>len</var>.</li><li>Repeat, while <var>k</var> &gt; (<var>len</var> - <var>actualDeleteCount</var> + <var>itemCount</var>),<ol><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> - 1))).</li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li></ol></li><li>Else if <var>itemCount</var> &gt; <var>actualDeleteCount</var>, then<ol><li>Set <var>k</var> to (<var>len</var> - <var>actualDeleteCount</var>).</li><li>Repeat, while <var>k</var> &gt; <var>actualStart</var>,<ol><li>Let <var>from</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>actualDeleteCount</var> - 1)).</li><li>Let <var>to</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var> + <var>itemCount</var> - 1)).</li><li>Let <var>fromPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>If <var>fromPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fromValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>from</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>to</var>, <var>fromValue</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>fromPresent</var> is <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"DeletePropertyOrThrow\"><a href=\"#sec-deletepropertyorthrow\">DeletePropertyOrThrow</a></emu-xref>(<var>O</var>, <var>to</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li></ol></li><li>Set <var>k</var> to <var>actualStart</var>.</li><li>For each element <var>E</var> of <var>items</var>, do<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>k</var>)), <var>E</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li id=\"step-array-proto-splice-set-length\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <emu-val>\"length\"</emu-val>, <emu-xref href=\"#%F0%9D%94%BD\"><a href=\"#%F0%9D%94%BD\">&#120125;</a></emu-xref>(<var>len</var> - <var>actualDeleteCount</var> + <var>itemCount</var>), <emu-val>true</emu-val>).</li><li>Return <var>A</var>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The explicit setting of the <emu-val>\"length\"</emu-val> property of the result Array in step <emu-xref href=\"#step-array-proto-splice-set-length\"><a href=\"#step-array-proto-splice-set-length\" class=\"excluded-xref\" excluded-id=\"step-array-proto-splice-set-length\">#step-array-proto-splice-set-length</a></emu-xref> was necessary in previous editions of ECMAScript to ensure that its length was correct in situations where the trailing elements of the result Array were not present. Setting <emu-val>\"length\"</emu-val> became unnecessary starting in ES2015 when the result Array was initialized to its proper length rather than an empty Array but is carried forward to preserve backward compatibility.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>The <code>splice</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-array-initializer": {"num": "13.2.4", "title": "#sec-array-initializer Array Initializer", "html": "<emu-clause id=\"sec-array-initializer\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-initializer\">#sec-array-initializer</span> Array Initializer</h1>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>An <emu-nt><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a></emu-nt> is an expression describing the initialization of an Array, using a list, of zero or more expressions each of which represents an array element, enclosed in square brackets. The elements need not be literals; they are evaluated each time the array initializer is evaluated.</p>\n      </div></emu-note>\n      <p>Array elements may be elided at the beginning, middle or end of the element list. Whenever a comma in the element list is not preceded by an <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> (i.e., a comma at the beginning or after another comma), the missing array element contributes to the length of the Array and increases the index of subsequent elements. Elided array elements are not defined. If an element is elided at the end of an array, that element does not contribute to the length of the Array.</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"ArrayLiteral\" params=\"Yield, Await\" id=\"prod-ArrayLiteral\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrayLiteral\">ArrayLiteral</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"kg5ha7xc\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"xwviorlp\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"flt40tbt\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ElementList\" params=\"Yield, Await\" id=\"prod-ElementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"mg86fhyo\" id=\"prod-nakNeXAG\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"bzoasbwv\" id=\"prod-XL4uSEt_\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SpreadElement\">SpreadElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6ukoiilh\" id=\"prod-rNLR62Va\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"nnao2vfk\" id=\"prod-BSaguLF3\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ElementList\">ElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SpreadElement\">SpreadElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"Elision\" id=\"prod-Elision\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"lhh3u7f7\" id=\"prod-J7xTfeyA\"><emu-t>,</emu-t></emu-rhs>\n    <emu-rhs a=\"gg0bjle3\" id=\"prod-lq_Nojbr\">\n        <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt>\n        <emu-t>,</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"SpreadElement\" params=\"Yield, Await\" id=\"prod-SpreadElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-SpreadElement\">SpreadElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"tio0yijn\" id=\"prod-H9W06sct\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"+In, ?Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-runtime-semantics-arrayaccumulation\"><h1><span class=\"secnum\">13.2.4.1</span>#sec-runtime-semantics-arrayaccumulation Runtime Semantics: ArrayAccumulation</h1>...</div><div id=\"excluded-sec-array-initializer-runtime-semantics-evaluation\"><h1><span class=\"secnum\">13.2.4.2</span>#sec-array-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}, "sec-arraybuffer-constructor": {"num": "25.1.3", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"ArrayBuffer\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified ArrayBuffer behaviour must include a <code>super</code> call to the ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-applystringornumericbinaryoperator": {"num": "13.15.3", "title": "#sec-applystringornumericbinaryoperator ApplyStringOrNumericBinaryOperator ( lval, opText, rval )", "html": "<emu-clause id=\"sec-applystringornumericbinaryoperator\" aoid=\"ApplyStringOrNumericBinaryOperator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applystringornumericbinaryoperator\">#sec-applystringornumericbinaryoperator</span> ApplyStringOrNumericBinaryOperator ( <var>lval</var>, <var>opText</var>, <var>rval</var> )</h1>\n      <p>The abstract operation ApplyStringOrNumericBinaryOperator takes arguments <var>lval</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), <var>opText</var> (a sequence of Unicode code points), and <var>rval</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>opText</var> is present in the table in step <emu-xref href=\"#step-applystringornumericbinaryoperator-operations-table\"><a href=\"#step-applystringornumericbinaryoperator-operations-table\" class=\"excluded-xref\" excluded-id=\"step-applystringornumericbinaryoperator-operations-table\">#step-applystringornumericbinaryoperator-operations-table</a></emu-xref>.</li><li>If <var>opText</var> is <code>+</code>, then<ol><li id=\"step-binary-op-toprimitive-lval\">Let <var>lprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>lval</var>).</li><li id=\"step-binary-op-toprimitive-rval\">Let <var>rprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>rval</var>).</li><li id=\"step-binary-op-string-check\">If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lprim</var>) is String or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rprim</var>) is String, then<ol><li>Let <var>lstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lprim</var>).</li><li>Let <var>rstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>rprim</var>).</li><li>Return the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>lstr</var> and <var>rstr</var>.</li></ol></li><li>Set <var>lval</var> to <var>lprim</var>.</li><li>Set <var>rval</var> to <var>rprim</var>.</li></ol></li><li>NOTE: At this point, it must be a numeric operation.</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li id=\"step-applystringornumericbinaryoperator-operations-table\">Let <var>operation</var> be the abstract operation associated with <var>opText</var> in the following table:\n          <figure>\n            <table class=\"lightweight-table\">\n              <tbody>\n                <tr><th> <var>opText</var>       </th><th> <var>operation</var>             </th></tr>\n                <tr><td> <code>**</code>           </td><td> <var>T</var>::exponentiate       </td></tr>\n                <tr><td> <code>*</code>            </td><td> <var>T</var>::multiply           </td></tr>\n                <tr><td> <code>/</code>            </td><td> <var>T</var>::divide             </td></tr>\n                <tr><td> <code>%</code>            </td><td> <var>T</var>::remainder          </td></tr>\n                <tr><td> <code>+</code>            </td><td> <var>T</var>::add                </td></tr>\n                <tr><td> <code>-</code>            </td><td> <var>T</var>::subtract           </td></tr>\n                <tr><td> <code>&lt;&lt;</code>     </td><td> <var>T</var>::leftShift          </td></tr>\n                <tr><td> <code>&gt;&gt;</code>     </td><td> <var>T</var>::signedRightShift   </td></tr>\n                <tr><td> <code>&gt;&gt;&gt;</code> </td><td> <var>T</var>::unsignedRightShift </td></tr>\n                <tr><td> <code>&amp;</code>        </td><td> <var>T</var>::bitwiseAND         </td></tr>\n                <tr><td> <code>^</code>            </td><td> <var>T</var>::bitwiseXOR         </td></tr>\n                <tr><td> <code>|</code>            </td><td> <var>T</var>::bitwiseOR          </td></tr>\n              </tbody>\n            </table>\n          </figure></li><li>Return ? <var>operation</var>(<var>lnum</var>, <var>rnum</var>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>No hint is provided in the calls to <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> in steps <emu-xref href=\"#step-binary-op-toprimitive-lval\"><a href=\"#step-binary-op-toprimitive-lval\">2.a</a></emu-xref> and <emu-xref href=\"#step-binary-op-toprimitive-rval\"><a href=\"#step-binary-op-toprimitive-rval\">2.b</a></emu-xref>. All standard objects except Dates handle the absence of a hint as if <emu-const>number</emu-const> were given; Dates handle the absence of a hint as if <emu-const>string</emu-const> were given. <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">Exotic objects</a></emu-xref> may handle the absence of a hint in some other manner.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Step <emu-xref href=\"#step-binary-op-string-check\"><a href=\"#step-binary-op-string-check\">2.c</a></emu-xref> differs from step <emu-xref href=\"#step-arc-string-check\"><a href=\"#step-arc-string-check\" class=\"excluded-xref\" excluded-id=\"step-arc-string-check\">#step-arc-string-check</a></emu-xref> of the <emu-xref aoid=\"IsLessThan\"><a href=\"#sec-islessthan\">IsLessThan</a></emu-xref> algorithm, by using the logical-or operation instead of the logical-and operation.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-date.prototype.tojson": {"num": "21.4.4.37", "title": "#sec-date.prototype.tojson Date.prototype.toJSON ( key )", "html": "<emu-clause id=\"sec-date.prototype.tojson\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.tojson\">#sec-date.prototype.tojson</span> Date.prototype.toJSON ( <var>key</var> )</h1>\n        <p>This function provides a String representation of a Date for use by <code>JSON.stringify</code> (<emu-xref href=\"#sec-json.stringify\"><a href=\"#sec-json.stringify\" class=\"excluded-xref\" excluded-id=\"sec-json.stringify\">#sec-json.stringify</a></emu-xref>).</p>\n        <p>When the <code>toJSON</code> method is called with argument <var>key</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>tv</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>O</var>, <emu-const>number</emu-const>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>tv</var>) is Number and <var>tv</var> is not finite, return <emu-val>null</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>O</var>, <emu-val>\"toISOString\"</emu-val>).</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The argument is ignored.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>toJSON</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be a Date. Therefore, it can be transferred to other kinds of objects for use as a method. However, it does require that any such object have a <code>toISOString</code> method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-weakref-invariants": {"num": "9.10.1", "title": "#sec-weakref-invariants Objectives", "html": "<emu-clause id=\"sec-weakref-invariants\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakref-invariants\">#sec-weakref-invariants</span> Objectives</h1>\n\n      <p>This specification does not make any guarantees that any object will be garbage collected. Objects which are not <emu-xref href=\"#sec-liveness\"><a href=\"#sec-liveness\">live</a></emu-xref> may be released after long periods of time, or never at all. For this reason, this specification uses the term \"may\" when describing behaviour triggered by garbage collection.</p>\n\n      <p>The semantics of <emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRefs</a></emu-xref> and <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistrys</a></emu-xref> is based on two operations which happen at particular points in time:</p>\n\n      <ul>\n        <li>\n          When <code>WeakRef.prototype.deref</code> is called, the referent (if <emu-val>undefined</emu-val> is not returned) is kept alive so that subsequent, synchronous accesses also return the object. This list is reset when synchronous work is done using the <emu-xref aoid=\"ClearKeptObjects\"><a href=\"#sec-clear-kept-objects\">ClearKeptObjects</a></emu-xref> abstract operation.\n        </li>\n\n        <li>\n          When an object which is registered with a <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> becomes unreachable, a call of the <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref>'s cleanup callback may eventually be made, after synchronous ECMAScript execution completes. The <emu-xref href=\"#sec-finalization-registry-constructor\"><a href=\"#sec-finalization-registry-constructor\">FinalizationRegistry</a></emu-xref> cleanup is performed with the <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref> abstract operation.\n        </li>\n      </ul>\n\n      <p>Neither of these actions (<emu-xref aoid=\"ClearKeptObjects\"><a href=\"#sec-clear-kept-objects\">ClearKeptObjects</a></emu-xref> or <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref>) may interrupt synchronous ECMAScript execution. Because <emu-xref href=\"#host\"><a href=\"#host\">hosts</a></emu-xref> may assemble longer, synchronous ECMAScript execution runs, this specification defers the scheduling of <emu-xref aoid=\"ClearKeptObjects\"><a href=\"#sec-clear-kept-objects\">ClearKeptObjects</a></emu-xref> and <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref> to the <emu-xref href=\"#host-environment\"><a href=\"#host-environment\">host environment</a></emu-xref>.</p>\n\n      <p>Some ECMAScript implementations include garbage collector implementations which run in the background, including when ECMAScript is idle. Letting the <emu-xref href=\"#host-environment\"><a href=\"#host-environment\">host environment</a></emu-xref> schedule <emu-xref aoid=\"CleanupFinalizationRegistry\"><a href=\"#sec-cleanup-finalization-registry\">CleanupFinalizationRegistry</a></emu-xref> allows it to resume ECMAScript execution in order to run finalizer work, which may free up held values, reducing overall memory usage.</p>\n    </emu-clause>\n\n    "}, "sec-map.prototype.foreach": {"num": "24.1.3.5", "title": "#sec-map.prototype.foreach Map.prototype.forEach ( callbackfn [ , thisArg ] )", "html": "<emu-clause id=\"sec-map.prototype.foreach\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype.foreach\">#sec-map.prototype.foreach</span> Map.prototype.forEach ( <var>callbackfn</var> [ , <var>thisArg</var> ] )</h1>\n        <p>When the <code>forEach</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>M</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>M</var>, [[MapData]]).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>entries</var> be the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> that is <var>M</var>.[[MapData]].</li><li>For each <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[Key]], [[Value]] } <var>e</var> of <var>entries</var>, do<ol><li>If <var>e</var>.[[Key]] is not <emu-const>empty</emu-const>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <var>thisArg</var>, &#171; <var>e</var>.[[Value]], <var>e</var>.[[Key]], <var>M</var> &#187;).</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that accepts three arguments. <code>forEach</code> calls <var>callbackfn</var> once for each key/value pair present in the Map, in key insertion order. <var>callbackfn</var> is called only for keys of the Map which actually exist; it is not called for keys that have been deleted from the Map.</p>\n          <p>If a <var>thisArg</var> parameter is provided, it will be used as the <emu-val>this</emu-val> value for each invocation of <var>callbackfn</var>. If it is not provided, <emu-val>undefined</emu-val> is used instead.</p>\n          <p><var>callbackfn</var> is called with three arguments: the value of the item, the key of the item, and the Map being traversed.</p>\n          <p><code>forEach</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>. Each entry of a map's [[MapData]] is only visited once. New keys added after the call to <code>forEach</code> begins are visited. A key will be revisited if it is deleted after it has been visited and then re-added before the <code>forEach</code> call completes. Keys that are deleted after the call to <code>forEach</code> begins and before being visited are not visited unless the key is added again before the <code>forEach</code> call completes.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-generator-objects": {"num": "27.5", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator is an instance of a generator function and conforms to both the <i>Iterator</i> and <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the initial value of the <emu-val>\"prototype\"</emu-val> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorFunction.prototype.prototype%</a></emu-xref>.</p>\n\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">27.5.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">27.5.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">27.5.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-allocatesharedarraybuffer": {"num": "25.2.1.1", "title": "#sec-allocatesharedarraybuffer AllocateSharedArrayBuffer ( constructor, byteLength )", "html": "<emu-clause id=\"sec-allocatesharedarraybuffer\" aoid=\"AllocateSharedArrayBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatesharedarraybuffer\">#sec-allocatesharedarraybuffer</span> AllocateSharedArrayBuffer ( <var>constructor</var>, <var>byteLength</var> )</h1>\n        <p>The abstract operation AllocateSharedArrayBuffer takes arguments <var>constructor</var> and <var>byteLength</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It is used to create a SharedArrayBuffer. It performs the following steps when called:</p>\n        <emu-alg><ol><li>Let <var>obj</var> be ?&#160;<emu-xref aoid=\"OrdinaryCreateFromConstructor\"><a href=\"#sec-ordinarycreatefromconstructor\">OrdinaryCreateFromConstructor</a></emu-xref>(<var>constructor</var>, <emu-val>\"%SharedArrayBuffer.prototype%\"</emu-val>, &#171; [[ArrayBufferData]], [[ArrayBufferByteLength]] &#187;).</li><li>Let <var>block</var> be ?&#160;<emu-xref aoid=\"CreateSharedByteDataBlock\"><a href=\"#sec-createsharedbytedatablock\">CreateSharedByteDataBlock</a></emu-xref>(<var>byteLength</var>).</li><li>Set <var>obj</var>.[[ArrayBufferData]] to <var>block</var>.</li><li>Set <var>obj</var>.[[ArrayBufferByteLength]] to <var>byteLength</var>.</li><li>Return <var>obj</var>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys": {"num": "10.5.11", "title": "#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys\">#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n      <p>The [[OwnPropertyKeys]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes no arguments. It performs the following steps when called:</p>\n      <emu-alg><ol><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"ownKeys\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[OwnPropertyKeys]]().</li></ol></li><li>Let <var>trapResultArray</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var> &#187;).</li><li>Let <var>trapResult</var> be ?&#160;<emu-xref aoid=\"CreateListFromArrayLike\"><a href=\"#sec-createlistfromarraylike\">CreateListFromArrayLike</a></emu-xref>(<var>trapResultArray</var>, &#171; String, Symbol &#187;).</li><li>If <var>trapResult</var> contains any duplicate entries, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>Let <var>targetKeys</var> be ? <var>target</var>.[[OwnPropertyKeys]]().</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are only String and Symbol values.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>targetKeys</var> contains no duplicate entries.</li><li>Let <var>targetConfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>targetNonconfigurableKeys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>key</var> of <var>targetKeys</var>, do<ol><li>Let <var>desc</var> be ? <var>target</var>.[[GetOwnProperty]](<var>key</var>).</li><li>If <var>desc</var> is not <emu-val>undefined</emu-val> and <var>desc</var>.[[Configurable]] is <emu-val>false</emu-val>, then<ol><li>Append <var>key</var> as an element of <var>targetNonconfigurableKeys</var>.</li></ol></li><li>Else,<ol><li>Append <var>key</var> as an element of <var>targetConfigurableKeys</var>.</li></ol></li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val> and <var>targetNonconfigurableKeys</var> is empty, then<ol><li>Return <var>trapResult</var>.</li></ol></li><li>Let <var>uncheckedResultKeys</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetNonconfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <var>trapResult</var>.</li><li>For each element <var>key</var> of <var>targetConfigurableKeys</var>, do<ol><li>If <var>key</var> is not an element of <var>uncheckedResultKeys</var>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Remove <var>key</var> from <var>uncheckedResultKeys</var>.</li></ol></li><li>If <var>uncheckedResultKeys</var> is not empty, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>trapResult</var>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[OwnPropertyKeys]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[OwnPropertyKeys]] is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.\n          </li>\n          <li>\n            The returned <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> contains no duplicate entries.\n          </li>\n          <li>\n            The Type of each result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> element is either String or Symbol.\n          </li>\n          <li>\n            The result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain the keys of all non-configurable own properties of the target object.\n          </li>\n          <li>\n            If the target object is not extensible, then the result <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> must contain all the keys of the own properties of the target object and no other values.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-generatorfunction-objects": {"num": "27.3", "title": "#sec-generatorfunction-objects GeneratorFunction Objects", "html": "<emu-clause id=\"sec-generatorfunction-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-objects\">#sec-generatorfunction-objects</span> GeneratorFunction Objects</h1>\n    <p>GeneratorFunctions are functions that are usually created by evaluating <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>s, <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt>s, and <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt>s. They may also be created by calling the <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref> intrinsic.</p>\n    <emu-figure id=\"figure-2\" caption=\"Generator Objects Relationships\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-2\">#figure-2</span> (Informative): Generator Objects Relationships</figcaption>\n      <img alt=\"A staggering variety of boxes and arrows.\" src=\"img/figure-2.png\">\n    </figure></emu-figure>\n\n    <div id=\"excluded-sec-generatorfunction-constructor\"><h1><span class=\"secnum\">27.3.1</span>#sec-generatorfunction-constructor The GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-constructor\"><h1><span class=\"secnum\">27.3.2</span>#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-generatorfunction-prototype-object\"><h1><span class=\"secnum\">27.3.3</span>#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object</h1>...</div><div id=\"excluded-sec-generatorfunction-instances\"><h1><span class=\"secnum\">27.3.4</span>#sec-generatorfunction-instances GeneratorFunction Instances</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgeneratorfunction-constructor": {"num": "27.4.1", "title": "#sec-asyncgeneratorfunction-constructor The AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</span> The AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%AsyncGeneratorFunction%</dfn>.</li>\n        <li>is a subclass of <code>Function</code>.</li>\n        <li>creates and initializes a new AsyncGeneratorFunction when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>AsyncGeneratorFunction (...)</code> is equivalent to the object creation expression <code>new AsyncGeneratorFunction (...)</code> with the same arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified AsyncGeneratorFunction behaviour must include a <code>super</code> call to the AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal slots necessary for built-in AsyncGeneratorFunction behaviour. All ECMAScript syntactic forms for defining async generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function objects</a></emu-xref> create direct instances of AsyncGeneratorFunction. There is no syntactic means to create instances of AsyncGeneratorFunction subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction\"><h1><span class=\"secnum\">27.4.1.1</span>#sec-asyncgeneratorfunction AsyncGeneratorFunction ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v": {"num": "10.5.2", "title": "#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v [[SetPrototypeOf]] ( V )", "html": "<emu-clause id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\">#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v</span> [[SetPrototypeOf]] ( <var>V</var> )</h1>\n      <p>The [[SetPrototypeOf]] internal method of a <emu-xref href=\"#proxy-exotic-object\"><a href=\"#proxy-exotic-object\">Proxy exotic object</a></emu-xref> <var>O</var> takes argument <var>V</var> (an Object or <emu-val>null</emu-val>). It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Either <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Object or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is Null.</li><li>Let <var>handler</var> be <var>O</var>.[[ProxyHandler]].</li><li>If <var>handler</var> is <emu-val>null</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>handler</var>) is Object.</li><li>Let <var>target</var> be <var>O</var>.[[ProxyTarget]].</li><li>Let <var>trap</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>handler</var>, <emu-val>\"setPrototypeOf\"</emu-val>).</li><li>If <var>trap</var> is <emu-val>undefined</emu-val>, then<ol><li>Return ? <var>target</var>.[[SetPrototypeOf]](<var>V</var>).</li></ol></li><li>Let <var>booleanTrapResult</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>trap</var>, <var>handler</var>, &#171; <var>target</var>, <var>V</var> &#187;)).</li><li>If <var>booleanTrapResult</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>extensibleTarget</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>target</var>).</li><li>If <var>extensibleTarget</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>targetProto</var> be ? <var>target</var>.[[GetPrototypeOf]]().</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>V</var>, <var>targetProto</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>[[SetPrototypeOf]] for Proxy objects enforces the following invariants:</p>\n        <ul>\n          <li>\n            The result of [[SetPrototypeOf]] is a Boolean value.\n          </li>\n          <li>\n            If the target object is not extensible, the argument value must be the same as the result of [[GetPrototypeOf]] applied to target object.\n          </li>\n        </ul>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-typedarray-objects": {"num": "23.2", "title": "#sec-typedarray-objects TypedArray Objects", "html": "<emu-clause id=\"sec-typedarray-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</span> TypedArray Objects</h1>\n    <p>A <var>TypedArray</var> presents an array-like view of an underlying binary data buffer (<emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>). A <dfn variants=\"TypedArray element types\">TypedArray element type</dfn> is the underlying binary scalar data type that all elements of a <var>TypedArray</var> instance have. There is a distinct <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, listed in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref>, for each of the supported element types. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in <emu-xref href=\"#table-the-typedarray-constructors\"><a href=\"#table-the-typedarray-constructors\" class=\"excluded-xref\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</a></emu-xref> has a corresponding distinct prototype object.</p>\n    <emu-table id=\"table-the-typedarray-constructors\" caption=\"The TypedArray Constructors\" oldids=\"table-49\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-the-typedarray-constructors\">#table-the-typedarray-constructors</span>: The TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructors</a></emu-xref></figcaption><span id=\"table-49\"></span>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name and Intrinsic\n          </th>\n          <th>\n            Element Type\n          </th>\n          <th>\n            Element Size\n          </th>\n          <th>\n            Conversion Operation\n          </th>\n          <th>\n            Description\n          </th>\n        </tr>\n        <tr>\n          <td>\n            Int8Array\n            <br>\n            <dfn>%Int8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt8\"><a href=\"#sec-toint8\">ToInt8</a></emu-xref>\n          </td>\n          <td>\n            8-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8Array\n            <br>\n            <dfn>%Uint8Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8\"><a href=\"#sec-touint8\">ToUint8</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8ClampedArray\n            <br>\n            <dfn>%Uint8ClampedArray%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint8C</emu-const>\n          </td>\n          <td>\n            1\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8Clamp\"><a href=\"#sec-touint8clamp\">ToUint8Clamp</a></emu-xref>\n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> (clamped conversion)\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int16Array\n            <br>\n            <dfn>%Int16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt16\"><a href=\"#sec-toint16\">ToInt16</a></emu-xref>\n          </td>\n          <td>\n            16-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint16Array\n            <br>\n            <dfn>%Uint16Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint16</emu-const>\n          </td>\n          <td>\n            2\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint16\"><a href=\"#sec-touint16\">ToUint16</a></emu-xref>\n          </td>\n          <td>\n            16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int32Array\n            <br>\n            <dfn>%Int32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Int32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>\n          </td>\n          <td>\n            32-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint32Array\n            <br>\n            <dfn>%Uint32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Uint32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>\n          </td>\n          <td>\n            32-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigInt64Array\n            <br>\n            <dfn>%BigInt64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigInt64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-tobigint64\">ToBigInt64</a></emu-xref>\n          </td>\n          <td>\n            64-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigUint64Array\n            <br>\n            <dfn>%BigUint64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>BigUint64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigUint64\"><a href=\"#sec-tobiguint64\">ToBigUint64</a></emu-xref>\n          </td>\n          <td>\n            64-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float32Array\n            <br>\n            <dfn>%Float32Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float32</emu-const>\n          </td>\n          <td>\n            4\n          </td>\n          <td>\n          </td>\n          <td>\n            32-bit IEEE floating point\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float64Array\n            <br>\n            <dfn>%Float64Array%</dfn>\n          </td>\n          <td>\n            <emu-const>Float64</emu-const>\n          </td>\n          <td>\n            8\n          </td>\n          <td>\n          </td>\n          <td>\n            64-bit IEEE floating point\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In the definitions below, references to <var>TypedArray</var> should be replaced with the appropriate <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name from the above table.</p>\n\n    <div id=\"excluded-sec-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">23.2.1</span>#sec-%typedarray%-intrinsic-object The %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">23.2.2</span>#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarrayprototype%-object\"><h1><span class=\"secnum\">23.2.3</span>#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray% Prototype Object</h1>...</div><div id=\"excluded-sec-abstract-operations-for-typedarray-objects\"><h1><span class=\"secnum\">23.2.4</span>#sec-abstract-operations-for-typedarray-objects Abstract Operations for TypedArray Objects</h1>...</div><div id=\"excluded-sec-typedarray-constructors\"><h1><span class=\"secnum\">23.2.5</span>#sec-typedarray-constructors The TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-typedarray-constructors\"><h1><span class=\"secnum\">23.2.6</span>#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-prototype-objects\"><h1><span class=\"secnum\">23.2.7</span>#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-instances\"><h1><span class=\"secnum\">23.2.8</span>#sec-properties-of-typedarray-instances Properties of TypedArray Instances</h1>...</div></emu-clause>\n"}, "sec-date-constructor": {"num": "21.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <emu-val>\"Date\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a function whose behaviour differs based upon the number and types of its arguments.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructors</a></emu-xref> that intend to inherit the specified Date behaviour must include a <code>super</code> call to the Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <emu-val>\"length\"</emu-val> property whose value is <emu-val>7</emu-val><sub>&#120125;</sub>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date\"><h1><span class=\"secnum\">21.4.2.1</span>#sec-date Date ( ...values )</h1>...</div></emu-clause>\n\n    "}, "sec-map-objects": {"num": "24.1", "title": "#sec-map-objects Map Objects", "html": "<emu-clause id=\"sec-map-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-objects\">#sec-map-objects</span> Map Objects</h1>\n    <p>Maps are collections of key/value pairs where both the keys and values may be arbitrary <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language values</a></emu-xref>. A distinct key value may only occur in one key/value pair within the Map's collection. Distinct key values are discriminated using the <emu-xref aoid=\"SameValueZero\"><a href=\"#sec-samevaluezero\">SameValueZero</a></emu-xref> comparison algorithm.</p>\n    <p>Maps must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this specification is only intended to describe the required observable semantics of Maps. It is not intended to be a viable implementation model.</p>\n\n    <div id=\"excluded-sec-map-constructor\"><h1><span class=\"secnum\">24.1.1</span>#sec-map-constructor The Map Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-map-constructor\"><h1><span class=\"secnum\">24.1.2</span>#sec-properties-of-the-map-constructor Properties of the Map Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-map-prototype-object\"><h1><span class=\"secnum\">24.1.3</span>#sec-properties-of-the-map-prototype-object Properties of the Map Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-map-instances\"><h1><span class=\"secnum\">24.1.4</span>#sec-properties-of-map-instances Properties of Map Instances</h1>...</div><div id=\"excluded-sec-map-iterator-objects\"><h1><span class=\"secnum\">24.1.5</span>#sec-map-iterator-objects Map Iterator Objects</h1>...</div></emu-clause>\n\n  "}}, "figData": {"figure-2": "Figure 6", "table-well-known-intrinsic-objects": "Table 8", "table-state-components-for-all-execution-contexts": "Table 28", "table-additional-state-components-for-ecmascript-code-execution-contexts": "Table 29", "table-additional-state-components-for-generator-execution-contexts": "Table 30", "table-proxy-handler-methods": "Table 36", "sec-todatestring-day-names": "Table 64", "sec-todatestring-month-names": "Table 65", "table-the-typedarray-constructors": "Table 72", "table-promisecapability-record-fields": "Table 82", "table-additional-well-known-intrinsic-objects": "Table 94"}}}