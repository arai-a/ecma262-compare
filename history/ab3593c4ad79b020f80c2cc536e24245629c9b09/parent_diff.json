{"from": {"secList": ["sec-error-handling-and-language-extensions", "sec-module-semantics"], "secData": {"sec-error-handling-and-language-extensions": {"num": "16", "title": "#sec-error-handling-and-language-extensions Error Handling and Language Extensions", "html": "<emu-clause id=\"sec-error-handling-and-language-extensions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-handling-and-language-extensions\">#sec-error-handling-and-language-extensions</span> Error Handling and Language Extensions</h1>\n  <p>An implementation must report most errors at the time the relevant ECMAScript language construct is evaluated. An  <dfn id=\"early-error\">early error</dfn> is an error that can be detected and reported prior to the evaluation of any construct in the <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> containing the error. The presence of an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> prevents the evaluation of the construct. An implementation must report early errors in a <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> as part of parsing that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> in <emu-xref aoid=\"ParseScript\"><a href=\"#sec-parse-script\">ParseScript</a></emu-xref>. Early errors in a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> are reported at the point when the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> would be evaluated and the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is never initialized. Early errors in  <b>eval</b> code are reported at the time <code>eval</code> is called and prevent evaluation of the  <b>eval</b> code. All errors that are not early errors are runtime errors.</p>\n  <p>An implementation must report as an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> any occurrence of a condition that is listed in a &#8220;Static Semantics: Early Errors&#8221; subclause of this specification.</p>\n  <p>An implementation shall not treat other kinds of errors as early errors even if the compiler can prove that a construct cannot execute without error under any circumstances. An implementation may issue an early warning in such a case, but it should not report the error until the relevant construct is actually executed.</p>\n  <p>An implementation shall report all errors as specified, except for the following:</p>\n  <ul>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may extend <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntax, <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> syntax, and regular expression pattern or flag syntax. To permit this, all operations (such as calling <code>eval</code>, using a regular expression literal, or using the <code>Function</code> or <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>) that are allowed to throw <emu-val>SyntaxError</emu-val> are permitted to exhibit implementation-defined behaviour instead of throwing <emu-val>SyntaxError</emu-val> when they encounter an implementation-defined extension to the script syntax or regular expression pattern or flag syntax.\n    \n    </li>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may provide additional types, values, objects, properties, and functions beyond those described in this specification. This may cause constructs (such as looking up a variable in the global scope) to have implementation-defined behaviour instead of throwing an error (such as <emu-val>ReferenceError</emu-val>).\n    \n    </li>\n  </ul>\n\n  <!-- es6num=\"16.1\" -->\n  <div id=\"excluded-sec-forbidden-extensions\"><h1><span class=\"secnum\">16.1</span>#sec-forbidden-extensions Forbidden Extensions</h1>...</div></emu-clause>\n\n"}, "sec-module-semantics": {"num": "15.2.1", "title": "#sec-module-semantics Module Semantics", "html": "<emu-clause id=\"sec-module-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics\">#sec-module-semantics</span> Module Semantics</h1>\n\n      <div id=\"excluded-sec-module-semantics-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.1.1</span>#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-containsduplicatelabels\"><h1><span class=\"secnum\">15.2.1.2</span>#sec-module-semantics-static-semantics-containsduplicatelabels Static Semantics: ContainsDuplicateLabels</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-containsundefinedbreaktarget\"><h1><span class=\"secnum\">15.2.1.3</span>#sec-module-semantics-static-semantics-containsundefinedbreaktarget Static Semantics: ContainsUndefinedBreakTarget</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-containsundefinedcontinuetarget\"><h1><span class=\"secnum\">15.2.1.4</span>#sec-module-semantics-static-semantics-containsundefinedcontinuetarget Static Semantics: ContainsUndefinedContinueTarget</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportedbindings\"><h1><span class=\"secnum\">15.2.1.5</span>#sec-module-semantics-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportednames\"><h1><span class=\"secnum\">15.2.1.6</span>#sec-module-semantics-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportentries\"><h1><span class=\"secnum\">15.2.1.7</span>#sec-module-semantics-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-importentries\"><h1><span class=\"secnum\">15.2.1.8</span>#sec-module-semantics-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-importedlocalnames\"><h1><span class=\"secnum\">15.2.1.9</span>#sec-importedlocalnames Static Semantics: ImportedLocalNames ( importEntries )</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-modulerequests\"><h1><span class=\"secnum\">15.2.1.10</span>#sec-module-semantics-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">15.2.1.11</span>#sec-module-semantics-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">15.2.1.12</span>#sec-module-semantics-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">15.2.1.13</span>#sec-module-semantics-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">15.2.1.14</span>#sec-module-semantics-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-abstract-module-records\"><h1><span class=\"secnum\">15.2.1.15</span>#sec-abstract-module-records Abstract Module Records</h1>...</div><div id=\"excluded-sec-cyclic-module-records\"><h1><span class=\"secnum\">15.2.1.16</span>#sec-cyclic-module-records Cyclic Module Records</h1>...</div><div id=\"excluded-sec-source-text-module-records\"><h1><span class=\"secnum\">15.2.1.17</span>#sec-source-text-module-records Source Text Module Records</h1>...</div><div id=\"excluded-sec-hostresolveimportedmodule\"><h1><span class=\"secnum\">15.2.1.18</span>#sec-hostresolveimportedmodule Runtime Semantics: HostResolveImportedModule ( referencingScriptOrModule, specifier )</h1>...</div><div id=\"excluded-sec-hostimportmoduledynamically\"><h1><span class=\"secnum\">15.2.1.19</span>#sec-hostimportmoduledynamically Runtime Semantics: HostImportModuleDynamically ( referencingScriptOrModule, specifier, promiseCapability )</h1>...</div><div id=\"excluded-sec-finishdynamicimport\"><h1><span class=\"secnum\">15.2.1.20</span>#sec-finishdynamicimport Runtime Semantics: FinishDynamicImport ( referencingScriptOrModule, specifier, promiseCapability, completion )</h1>...</div><div id=\"excluded-sec-getmodulenamespace\"><h1><span class=\"secnum\">15.2.1.21</span>#sec-getmodulenamespace Runtime Semantics: GetModuleNamespace ( module )</h1>...</div><!-- es6num=\"15.2.1.20\" -->\n      <div id=\"excluded-sec-module-semantics-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.2.1.22</span>#sec-module-semantics-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}}, "figData": {}}, "to": {"secList": ["sec-error-handling-and-language-extensions", "sec-module-semantics"], "secData": {"sec-error-handling-and-language-extensions": {"num": "16", "title": "#sec-error-handling-and-language-extensions Error Handling and Language Extensions", "html": "<emu-clause id=\"sec-error-handling-and-language-extensions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-handling-and-language-extensions\">#sec-error-handling-and-language-extensions</span> Error Handling and Language Extensions</h1>\n  <p>An implementation must report most errors at the time the relevant ECMAScript language construct is evaluated. An  <dfn id=\"early-error\">early error</dfn> is an error that can be detected and reported prior to the evaluation of any construct in the <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> containing the error. The presence of an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> prevents the evaluation of the construct. An implementation must report early errors in a <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> as part of parsing that <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> in <emu-xref aoid=\"ParseScript\"><a href=\"#sec-parse-script\">ParseScript</a></emu-xref>. Early errors in a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> are reported at the point when the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> would be evaluated and the <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is never initialized. Early errors in  <b>eval</b> code are reported at the time <code>eval</code> is called and prevent evaluation of the  <b>eval</b> code. All errors that are not early errors are runtime errors.</p>\n  <p>An implementation must report as an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> any occurrence of a condition that is listed in a &#8220;Static Semantics: Early Errors&#8221; subclause of this specification.</p>\n  <p>An implementation shall not treat other kinds of errors as early errors even if the compiler can prove that a construct cannot execute without error under any circumstances. An implementation may issue an early warning in such a case, but it should not report the error until the relevant construct is actually executed.</p>\n  <p>An implementation shall report all errors as specified, except for the following:</p>\n  <ul>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may extend <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> syntax, <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> syntax, and regular expression pattern or flag syntax. To permit this, all operations (such as calling <code>eval</code>, using a regular expression literal, or using the <code>Function</code> or <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>) that are allowed to throw <emu-val>SyntaxError</emu-val> are permitted to exhibit implementation-defined behaviour instead of throwing <emu-val>SyntaxError</emu-val> when they encounter an implementation-defined extension to the script syntax or regular expression pattern or flag syntax.\n    \n    </li>\n    <li>\n      Except as restricted in  <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>, an implementation may provide additional types, values, objects, properties, and functions beyond those described in this specification. This may cause constructs (such as looking up a variable in the global scope) to have implementation-defined behaviour instead of throwing an error (such as <emu-val>ReferenceError</emu-val>).\n    \n    </li>\n  </ul>\n\n  <div id=\"excluded-sec-forbidden-extensions\"><h1><span class=\"secnum\">16.1</span>#sec-forbidden-extensions Forbidden Extensions</h1>...</div></emu-clause>\n\n"}, "sec-module-semantics": {"num": "15.2.1", "title": "#sec-module-semantics Module Semantics", "html": "<emu-clause id=\"sec-module-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-semantics\">#sec-module-semantics</span> Module Semantics</h1>\n\n      <div id=\"excluded-sec-module-semantics-static-semantics-early-errors\"><h1><span class=\"secnum\">15.2.1.1</span>#sec-module-semantics-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-containsduplicatelabels\"><h1><span class=\"secnum\">15.2.1.2</span>#sec-module-semantics-static-semantics-containsduplicatelabels Static Semantics: ContainsDuplicateLabels</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-containsundefinedbreaktarget\"><h1><span class=\"secnum\">15.2.1.3</span>#sec-module-semantics-static-semantics-containsundefinedbreaktarget Static Semantics: ContainsUndefinedBreakTarget</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-containsundefinedcontinuetarget\"><h1><span class=\"secnum\">15.2.1.4</span>#sec-module-semantics-static-semantics-containsundefinedcontinuetarget Static Semantics: ContainsUndefinedContinueTarget</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportedbindings\"><h1><span class=\"secnum\">15.2.1.5</span>#sec-module-semantics-static-semantics-exportedbindings Static Semantics: ExportedBindings</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportednames\"><h1><span class=\"secnum\">15.2.1.6</span>#sec-module-semantics-static-semantics-exportednames Static Semantics: ExportedNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-exportentries\"><h1><span class=\"secnum\">15.2.1.7</span>#sec-module-semantics-static-semantics-exportentries Static Semantics: ExportEntries</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-importentries\"><h1><span class=\"secnum\">15.2.1.8</span>#sec-module-semantics-static-semantics-importentries Static Semantics: ImportEntries</h1>...</div><div id=\"excluded-sec-importedlocalnames\"><h1><span class=\"secnum\">15.2.1.9</span>#sec-importedlocalnames Static Semantics: ImportedLocalNames ( importEntries )</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-modulerequests\"><h1><span class=\"secnum\">15.2.1.10</span>#sec-module-semantics-static-semantics-modulerequests Static Semantics: ModuleRequests</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">15.2.1.11</span>#sec-module-semantics-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">15.2.1.12</span>#sec-module-semantics-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">15.2.1.13</span>#sec-module-semantics-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-module-semantics-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">15.2.1.14</span>#sec-module-semantics-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-abstract-module-records\"><h1><span class=\"secnum\">15.2.1.15</span>#sec-abstract-module-records Abstract Module Records</h1>...</div><div id=\"excluded-sec-cyclic-module-records\"><h1><span class=\"secnum\">15.2.1.16</span>#sec-cyclic-module-records Cyclic Module Records</h1>...</div><div id=\"excluded-sec-source-text-module-records\"><h1><span class=\"secnum\">15.2.1.17</span>#sec-source-text-module-records Source Text Module Records</h1>...</div><div id=\"excluded-sec-hostresolveimportedmodule\"><h1><span class=\"secnum\">15.2.1.18</span>#sec-hostresolveimportedmodule Runtime Semantics: HostResolveImportedModule ( referencingScriptOrModule, specifier )</h1>...</div><div id=\"excluded-sec-hostimportmoduledynamically\"><h1><span class=\"secnum\">15.2.1.19</span>#sec-hostimportmoduledynamically Runtime Semantics: HostImportModuleDynamically ( referencingScriptOrModule, specifier, promiseCapability )</h1>...</div><div id=\"excluded-sec-finishdynamicimport\"><h1><span class=\"secnum\">15.2.1.20</span>#sec-finishdynamicimport Runtime Semantics: FinishDynamicImport ( referencingScriptOrModule, specifier, promiseCapability, completion )</h1>...</div><div id=\"excluded-sec-getmodulenamespace\"><h1><span class=\"secnum\">15.2.1.21</span>#sec-getmodulenamespace Runtime Semantics: GetModuleNamespace ( module )</h1>...</div><div id=\"excluded-sec-module-semantics-runtime-semantics-evaluation\"><h1><span class=\"secnum\">15.2.1.22</span>#sec-module-semantics-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}}, "figData": {}}}