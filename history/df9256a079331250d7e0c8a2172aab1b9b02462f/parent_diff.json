{"from": {"secList": ["sec-weak-ref.prototype.constructor", "sec-conformance.normative-optional", "sec-conformance"], "secData": {"sec-weak-ref.prototype.constructor": {"num": "26.1.3.1", "title": "#sec-weak-ref.prototype.constructor WeakRef.prototype.constructor", "html": "<emu-clause id=\"sec-weak-ref.prototype.constructor\" normative-optional=\"\"><div class=\"normative-optional-tag\">Normative Optional</div>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref.prototype.constructor\">#sec-weak-ref.prototype.constructor</span> WeakRef.prototype.constructor</h1>\n\n        <p>The initial value of <code>WeakRef.prototype.constructor</code> is %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-conformance.normative-optional": {"num": "2.1", "title": "#sec-conformance.normative-optional Example Clause Heading", "html": "<emu-clause id=\"sec-conformance.normative-optional\" example=\"\" normative-optional=\"\"><div class=\"normative-optional-tag\">Normative Optional</div>\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-conformance.normative-optional\">#sec-conformance.normative-optional</span> Example Clause Heading</h1>\n    <p>Example clause contents.</p>\n  </emu-clause>\n"}, "sec-conformance": {"num": "2", "title": "#sec-conformance Conformance", "html": "<emu-clause id=\"sec-conformance\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-conformance\">#sec-conformance</span> Conformance</h1>\n  <p>A conforming implementation of ECMAScript must provide and support all the types, values, objects, properties, functions, and program syntax and semantics described in this specification.</p>\n  <p>A conforming implementation of ECMAScript must interpret source text input in conformance with the latest version of the Unicode Standard and ISO/IEC 10646.</p>\n  <p>A conforming implementation of ECMAScript that provides an application programming interface (API) that supports programs that need to adapt to the linguistic and cultural conventions used by different human languages and countries must implement the interface defined by the most recent edition of ECMA-402 that is compatible with this specification.</p>\n  <p>A conforming implementation of ECMAScript may provide additional types, values, objects, properties, and functions beyond those described in this specification. In particular, a conforming implementation of ECMAScript may provide properties not described in this specification, and values for those properties, for objects that are described in this specification.</p>\n  <p>A conforming implementation of ECMAScript may support program and regular expression syntax not described in this specification. In particular, a conforming implementation of ECMAScript may support program syntax that makes use of any &#8220;future reserved words&#8221; noted in subclause <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-keywords-and-reserved-words\">#sec-keywords-and-reserved-words</a></emu-xref> of this specification.</p>\n  <p>A conforming implementation of ECMAScript must not implement any extension that is listed as a Forbidden Extension in subclause <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>.</p>\n  <p>A conforming implementation of ECMAScript must not redefine any facilities that are not <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>, <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref>, or <emu-xref href=\"#host-defined\"><a href=\"#host-defined\">host-defined</a></emu-xref>.</p>\n  <p>A conforming implementation of ECMAScript may choose to implement or not implement Normative Optional subclauses. If any Normative Optional behaviour is implemented, all of the behaviour in the containing Normative Optional clause must be implemented. A Normative Optional clause is denoted in this specification with the words \"Normative Optional\" in a coloured box, as shown below.</p>\n  <div id=\"excluded-sec-conformance.normative-optional\"><h1><span class=\"secnum\">2.1</span>#sec-conformance.normative-optional Example Clause Heading</h1>...</div></emu-clause>\n\n"}}, "figData": {}}, "to": {"secList": ["sec-weak-ref.prototype.constructor", "sec-conformance.normative-optional", "sec-conformance"], "secData": {"sec-weak-ref.prototype.constructor": {"num": "26.1.3.1", "title": "#sec-weak-ref.prototype.constructor WeakRef.prototype.constructor", "html": "<emu-clause id=\"sec-weak-ref.prototype.constructor\" normative-optional=\"\"><div class=\"normative-optional-tag\"><emu-xref href=\"#sec-conformance\"><a href=\"#sec-conformance\">Normative Optional</a></emu-xref></div>\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weak-ref.prototype.constructor\">#sec-weak-ref.prototype.constructor</span> WeakRef.prototype.constructor</h1>\n\n        <p>The initial value of <code>WeakRef.prototype.constructor</code> is %<emu-xref href=\"#sec-weak-ref-constructor\"><a href=\"#sec-weak-ref-constructor\">WeakRef</a></emu-xref>%.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-conformance.normative-optional": {"num": "2.1", "title": "#sec-conformance.normative-optional Example Clause Heading", "html": "<emu-clause id=\"sec-conformance.normative-optional\" example=\"\" normative-optional=\"\"><div class=\"normative-optional-tag\"><emu-xref href=\"#sec-conformance\"><a href=\"#sec-conformance\">Normative Optional</a></emu-xref></div>\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-conformance.normative-optional\">#sec-conformance.normative-optional</span> Example Clause Heading</h1>\n    <p>Example clause contents.</p>\n  </emu-clause>\n"}, "sec-conformance": {"num": "2", "title": "#sec-conformance Conformance", "html": "<emu-clause id=\"sec-conformance\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-conformance\">#sec-conformance</span> Conformance</h1>\n  <p>A conforming implementation of ECMAScript must provide and support all the types, values, objects, properties, functions, and program syntax and semantics described in this specification.</p>\n  <p>A conforming implementation of ECMAScript must interpret source text input in conformance with the latest version of the Unicode Standard and ISO/IEC 10646.</p>\n  <p>A conforming implementation of ECMAScript that provides an application programming interface (API) that supports programs that need to adapt to the linguistic and cultural conventions used by different human languages and countries must implement the interface defined by the most recent edition of ECMA-402 that is compatible with this specification.</p>\n  <p>A conforming implementation of ECMAScript may provide additional types, values, objects, properties, and functions beyond those described in this specification. In particular, a conforming implementation of ECMAScript may provide properties not described in this specification, and values for those properties, for objects that are described in this specification.</p>\n  <p>A conforming implementation of ECMAScript may support program and regular expression syntax not described in this specification. In particular, a conforming implementation of ECMAScript may support program syntax that makes use of any &#8220;future reserved words&#8221; noted in subclause <emu-xref href=\"#sec-keywords-and-reserved-words\"><a href=\"#sec-keywords-and-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-keywords-and-reserved-words\">#sec-keywords-and-reserved-words</a></emu-xref> of this specification.</p>\n  <p>A conforming implementation of ECMAScript must not implement any extension that is listed as a Forbidden Extension in subclause <emu-xref href=\"#sec-forbidden-extensions\"><a href=\"#sec-forbidden-extensions\" class=\"excluded-xref\" excluded-id=\"sec-forbidden-extensions\">#sec-forbidden-extensions</a></emu-xref>.</p>\n  <p>A conforming implementation of ECMAScript must not redefine any facilities that are not <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref>, <emu-xref href=\"#implementation-approximated\"><a href=\"#implementation-approximated\">implementation-approximated</a></emu-xref>, or <emu-xref href=\"#host-defined\"><a href=\"#host-defined\">host-defined</a></emu-xref>.</p>\n  <p>A conforming implementation of ECMAScript may choose to implement or not implement <dfn>Normative Optional</dfn> subclauses. If any Normative Optional behaviour is implemented, all of the behaviour in the containing Normative Optional clause must be implemented. A Normative Optional clause is denoted in this specification with the words \"Normative Optional\" in a coloured box, as shown below.</p>\n  <div id=\"excluded-sec-conformance.normative-optional\"><h1><span class=\"secnum\">2.1</span>#sec-conformance.normative-optional Example Clause Heading</h1>...</div></emu-clause>\n\n"}}, "figData": {}}}