{"from": {"secList": ["sec-getwaiterlist", "sec-abstract-operations-for-atomics", "sec-atomics-object"], "secData": {"sec-getwaiterlist": {"num": "25.4.1.3", "title": "#sec-getwaiterlist GetWaiterList ( block, i )", "html": "<emu-clause id=\"sec-getwaiterlist\" aoid=\"GetWaiterList\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getwaiterlist\">#sec-getwaiterlist</span> GetWaiterList ( <var>block</var>, <var>i</var> )</h1>\n        <p>A <dfn>WaiterList</dfn> is a semantic object that contains an ordered list of those agents that are waiting on a location (<var>block</var>, <var>i</var>) in shared memory; <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> and <var>i</var> a byte offset into the memory of <var>block</var>. A WaiterList object also optionally contains a <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref> denoting the previous leaving of its critical section.</p>\n        <p>Initially a WaiterList object has an empty list and no <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>.</p>\n        <p>The <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> has a store of WaiterList objects; the store is indexed by (<var>block</var>, <var>i</var>). WaiterLists are <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>-independent: a lookup in the store of WaiterLists by (<var>block</var>, <var>i</var>) will result in the same WaiterList object in any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</p>\n        <p>Each WaiterList has a <dfn>critical section</dfn> that controls exclusive access to that WaiterList during evaluation. Only a single <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> may enter a WaiterList's critical section at one time. Entering and leaving a WaiterList's critical section is controlled by the <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref> and <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>. Operations on a WaiterList&#8212;adding and removing waiting agents, traversing the list of agents, suspending and notifying agents on the list, setting and retrieving the <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>&#8212;may only be performed by agents that have entered the WaiterList's critical section.</p>\n        <p>The abstract operation GetWaiterList takes arguments <var>block</var> (a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>) and <var>i</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> and <var>i</var> + 3 are valid byte offsets within the memory of <var>block</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> is divisible by 4.</li><li>Return the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> that is referenced by the pair (<var>block</var>, <var>i</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-abstract-operations-for-atomics": {"num": "25.4.1", "title": "#sec-abstract-operations-for-atomics Abstract Operations for Atomics", "html": "<emu-clause id=\"sec-abstract-operations-for-atomics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-atomics\">#sec-abstract-operations-for-atomics</span> Abstract Operations for Atomics</h1>\n\n      <div id=\"excluded-sec-validateintegertypedarray\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-validateintegertypedarray ValidateIntegerTypedArray ( typedArray [ , waitable ] )</h1>...</div><div id=\"excluded-sec-validateatomicaccess\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )</h1>...</div><div id=\"excluded-sec-getwaiterlist\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-getwaiterlist GetWaiterList ( block, i )</h1>...</div><div id=\"excluded-sec-entercriticalsection\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-entercriticalsection EnterCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-leavecriticalsection\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-leavecriticalsection LeaveCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-addwaiter\"><h1><span class=\"secnum\">25.4.1.6</span>#sec-addwaiter AddWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiter\"><h1><span class=\"secnum\">25.4.1.7</span>#sec-removewaiter RemoveWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiters\"><h1><span class=\"secnum\">25.4.1.8</span>#sec-removewaiters RemoveWaiters ( WL, c )</h1>...</div><div id=\"excluded-sec-suspendagent\"><h1><span class=\"secnum\">25.4.1.9</span>#sec-suspendagent SuspendAgent ( WL, W, timeout )</h1>...</div><div id=\"excluded-sec-notifywaiter\"><h1><span class=\"secnum\">25.4.1.10</span>#sec-notifywaiter NotifyWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-atomicreadmodifywrite\"><h1><span class=\"secnum\">25.4.1.11</span>#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )</h1>...</div><div id=\"excluded-sec-bytelistbitwiseop\"><h1><span class=\"secnum\">25.4.1.12</span>#sec-bytelistbitwiseop ByteListBitwiseOp ( op, xBytes, yBytes )</h1>...</div><div id=\"excluded-sec-bytelistequal\"><h1><span class=\"secnum\">25.4.1.13</span>#sec-bytelistequal ByteListEqual ( xBytes, yBytes )</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "25.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Atomics\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events. When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">25.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">25.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">25.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">25.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">25.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">25.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">25.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">25.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">25.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">25.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">25.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">25.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">25.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">25.4.14</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}}, "figData": {}}, "to": {"secList": ["sec-getwaiterlist", "sec-abstract-operations-for-atomics", "sec-atomics-object", "sec-waiterlist-objects"], "secData": {"sec-getwaiterlist": {"num": "25.4.2.3", "title": "#sec-getwaiterlist GetWaiterList ( block, i )", "html": "<emu-clause id=\"sec-getwaiterlist\" aoid=\"GetWaiterList\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getwaiterlist\">#sec-getwaiterlist</span> GetWaiterList ( <var>block</var>, <var>i</var> )</h1>\n        <p>The abstract operation GetWaiterList takes arguments <var>block</var> (a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>) and <var>i</var> (a non-negative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>). It performs the following steps when called:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> and <var>i</var> + 3 are valid byte offsets within the memory of <var>block</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>i</var> is divisible by 4.</li><li>Return the <emu-xref href=\"#sec-waiterlist-objects\"><a href=\"#sec-waiterlist-objects\">WaiterList</a></emu-xref> that is referenced by the pair (<var>block</var>, <var>i</var>).</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-abstract-operations-for-atomics": {"num": "25.4.2", "title": "#sec-abstract-operations-for-atomics Abstract Operations for Atomics", "html": "<emu-clause id=\"sec-abstract-operations-for-atomics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-atomics\">#sec-abstract-operations-for-atomics</span> Abstract Operations for Atomics</h1>\n\n      <div id=\"excluded-sec-validateintegertypedarray\"><h1><span class=\"secnum\">25.4.2.1</span>#sec-validateintegertypedarray ValidateIntegerTypedArray ( typedArray [ , waitable ] )</h1>...</div><div id=\"excluded-sec-validateatomicaccess\"><h1><span class=\"secnum\">25.4.2.2</span>#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )</h1>...</div><div id=\"excluded-sec-getwaiterlist\"><h1><span class=\"secnum\">25.4.2.3</span>#sec-getwaiterlist GetWaiterList ( block, i )</h1>...</div><div id=\"excluded-sec-entercriticalsection\"><h1><span class=\"secnum\">25.4.2.4</span>#sec-entercriticalsection EnterCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-leavecriticalsection\"><h1><span class=\"secnum\">25.4.2.5</span>#sec-leavecriticalsection LeaveCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-addwaiter\"><h1><span class=\"secnum\">25.4.2.6</span>#sec-addwaiter AddWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiter\"><h1><span class=\"secnum\">25.4.2.7</span>#sec-removewaiter RemoveWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiters\"><h1><span class=\"secnum\">25.4.2.8</span>#sec-removewaiters RemoveWaiters ( WL, c )</h1>...</div><div id=\"excluded-sec-suspendagent\"><h1><span class=\"secnum\">25.4.2.9</span>#sec-suspendagent SuspendAgent ( WL, W, timeout )</h1>...</div><div id=\"excluded-sec-notifywaiter\"><h1><span class=\"secnum\">25.4.2.10</span>#sec-notifywaiter NotifyWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-atomicreadmodifywrite\"><h1><span class=\"secnum\">25.4.2.11</span>#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )</h1>...</div><div id=\"excluded-sec-bytelistbitwiseop\"><h1><span class=\"secnum\">25.4.2.12</span>#sec-bytelistbitwiseop ByteListBitwiseOp ( op, xBytes, yBytes )</h1>...</div><div id=\"excluded-sec-bytelistequal\"><h1><span class=\"secnum\">25.4.2.13</span>#sec-bytelistequal ByteListEqual ( xBytes, yBytes )</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "25.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <emu-val>\"Atomics\"</emu-val> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n      <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%Object.prototype%</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events. When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-waiterlist-objects\"><h1><span class=\"secnum\">25.4.1</span>#sec-waiterlist-objects WaiterList Objects</h1>...</div><div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">25.4.2</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">25.4.3</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">25.4.4</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">25.4.5</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">25.4.6</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">25.4.7</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">25.4.8</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">25.4.9</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">25.4.10</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">25.4.11</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">25.4.12</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">25.4.13</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">25.4.14</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">25.4.15</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-waiterlist-objects": {"num": "25.4.1", "title": "#sec-waiterlist-objects WaiterList Objects", "html": "<emu-clause id=\"sec-waiterlist-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-waiterlist-objects\">#sec-waiterlist-objects</span> WaiterList Objects</h1>\n      <p>A <dfn>WaiterList</dfn> is a semantic object that contains an ordered list of those agents that are waiting on a location (<var>block</var>, <var>i</var>) in shared memory; <var>block</var> is a <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> and <var>i</var> a byte offset into the memory of <var>block</var>. A WaiterList object also optionally contains a <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref> denoting the previous leaving of its critical section.</p>\n      <p>Initially a WaiterList object has an empty list and no <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>.</p>\n      <p>The <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> has a store of WaiterList objects; the store is indexed by (<var>block</var>, <var>i</var>). WaiterLists are <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>-independent: a lookup in the store of WaiterLists by (<var>block</var>, <var>i</var>) will result in the same WaiterList object in any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</p>\n      <p>Each WaiterList has a <dfn>critical section</dfn> that controls exclusive access to that WaiterList during evaluation. Only a single <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> may enter a WaiterList's critical section at one time. Entering and leaving a WaiterList's critical section is controlled by the <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref> and <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>. Operations on a WaiterList&#8212;adding and removing waiting agents, traversing the list of agents, suspending and notifying agents on the list, setting and retrieving the <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>&#8212;may only be performed by agents that have entered the WaiterList's critical section.</p>\n    </emu-clause>\n\n    "}}, "figData": {}}}