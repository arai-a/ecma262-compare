{"from": {"secList": ["sec-ecmascript-language-types-string-type", "sec-patterns-static-semantics-character-value", "sec-codepointat", "sec-source-text", "sec-utf16decode", "sec-pattern-semantics"], "secData": {"sec-ecmascript-language-types-string-type": {"num": "6.1.4", "title": "#sec-ecmascript-language-types-string-type The String Type", "html": "<emu-clause id=\"sec-ecmascript-language-types-string-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</span> The String Type</h1>\n      <p>The String type is the set of all ordered sequences of zero or more 16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> values (&#8220;elements&#8221;) up to a maximum length of 2<sup>53</sup> - 1 elements. The String type is generally used to represent textual data in a running ECMAScript program, in which case each element in the String is treated as a UTF-16 code unit value. Each element is regarded as occupying a position within the sequence. These positions are indexed with nonnegative integers. The first element (if any) is at index 0, the next element (if any) at index 1, and so on. The length of a String is the number of elements (i.e., 16-bit values) within it. The empty String has length zero and therefore contains no elements.</p>\n      <p>ECMAScript operations that do not interpret String contents apply no further semantics. Operations that do interpret String values treat each element as a single UTF-16 code unit. However, ECMAScript does not restrict the value of or relationships between these code units, so operations that further interpret String contents as sequences of Unicode code points encoded in UTF-16 must account for ill-formed subsequences. Such operations apply special treatment to every code unit with a numeric value in the inclusive range 0xD800 to 0xDBFF (defined by the Unicode Standard as a  <dfn id=\"leading-surrogate\">leading surrogate</dfn>, or more formally as a  <dfn id=\"high-surrogate-code-unit\">high-surrogate code unit</dfn>) and every code unit with a numeric value in the inclusive range 0xDC00 to 0xDFFF (defined as a  <dfn id=\"trailing-surrogate\">trailing surrogate</dfn>, or more formally as a  <dfn id=\"low-surrogate-code-unit\">low-surrogate code unit</dfn>) using the following rules:</p>\n      <ul>\n        <li>\n          A code unit that is not a  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> and not a  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> is interpreted as a code point with the same value.\n        \n        </li>\n        <li>\n          A sequence of two code units, where the first code unit <var>c1</var> is a  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> and the second code unit <var>c2</var> a  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, is a  <dfn id=\"surrogate-pair\">surrogate pair</dfn> and is interpreted as a code point with the value (<var>c1</var> - 0xD800) &#215; 0x400 + (<var>c2</var> - 0xDC00) + 0x10000. (See  <emu-xref href=\"#sec-utf16decode\"><a href=\"#sec-utf16decode\" class=\"excluded-xref\" excluded-id=\"sec-utf16decode\">#sec-utf16decode</a></emu-xref>)\n        \n        </li>\n        <li>\n          A code unit that is a  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, but is not part of a  <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>, is interpreted as a code point with the same value.\n        \n        </li>\n      </ul>\n      <p>The function <code>String.prototype.normalize</code> (see  <emu-xref href=\"#sec-string.prototype.normalize\"><a href=\"#sec-string.prototype.normalize\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.normalize\">#sec-string.prototype.normalize</a></emu-xref>) can be used to explicitly normalize a String value. <code>String.prototype.localeCompare</code> (see  <emu-xref href=\"#sec-string.prototype.localecompare\"><a href=\"#sec-string.prototype.localecompare\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.localecompare\">#sec-string.prototype.localecompare</a></emu-xref>) internally normalizes String values, but no other operations implicitly normalize the strings upon which they operate. Only operations that are explicitly specified to be language or locale sensitive produce language-sensitive results.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The rationale behind this design was to keep the implementation of Strings as simple and high-performing as possible. If ECMAScript source text is in Normalized Form C, string literals are guaranteed to also be normalized, as long as they do not contain any Unicode escape sequences.</p>\n      </div></emu-note>\n      <p>In this specification, the phrase \"the  <dfn>string-concatenation</dfn> of <var>A</var>, <var>B</var>, ...\" (where each argument is a String value, a code unit, or a sequence of code units) denotes the String value whose sequence of code units is the concatenation of the code units (in order) of each of the arguments (in order).</p>\n    </emu-clause>\n\n    "}, "sec-patterns-static-semantics-character-value": {"num": "21.2.1.4", "title": "#sec-patterns-static-semantics-character-value Static Semantics: CharacterValue", "html": "<emu-clause id=\"sec-patterns-static-semantics-character-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-patterns-static-semantics-character-value\">#sec-patterns-static-semantics-character-value</span> Static Semantics: CharacterValue</h1>\n        <emu-grammar><emu-production name=\"ClassAtom\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6f24a587\"><emu-t>-</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+002D (HYPHEN-MINUS).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ClassAtomNoDash\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ecde6e28\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>]</emu-t> or <emu-t>-</emu-t></emu-gmod></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ch</var> be the code point matched by <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.</li><li>Return the code point value of <var>ch</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ClassEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassEscape\">ClassEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0185ce89\"><emu-t>b</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+0008 (BACKSPACE).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ClassEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassEscape\">ClassEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6f24a587\"><emu-t>-</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+002D (HYPHEN-MINUS).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f88e7170\"><emu-nt><a href=\"#prod-ControlEscape\">ControlEscape</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value according to <emu-xref href=\"#table-47\"><a href=\"#table-47\" class=\"excluded-xref\" excluded-id=\"table-47\">#table-47</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-table id=\"table-47\" caption=\"ControlEscape Code Point Values\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-47\">#table-47</span>: ControlEscape Code Point Values</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                ControlEscape\n              \n              </th>\n              <th>\n                Code Point Value\n              \n              </th>\n              <th>\n                Code Point\n              \n              </th>\n              <th>\n                Unicode Name\n              \n              </th>\n              <th>\n                Symbol\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>t</code>\n              \n              </td>\n              <td>\n                9\n              \n              </td>\n              <td>\n                <code>U+0009</code>\n              \n              </td>\n              <td>\n                CHARACTER TABULATION\n              \n              </td>\n              <td>\n                &lt;HT&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>n</code>\n              \n              </td>\n              <td>\n                10\n              \n              </td>\n              <td>\n                <code>U+000A</code>\n              \n              </td>\n              <td>\n                LINE FEED (LF)\n              \n              </td>\n              <td>\n                &lt;LF&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>v</code>\n              \n              </td>\n              <td>\n                11\n              \n              </td>\n              <td>\n                <code>U+000B</code>\n              \n              </td>\n              <td>\n                LINE TABULATION\n              \n              </td>\n              <td>\n                &lt;VT&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>f</code>\n              \n              </td>\n              <td>\n                12\n              \n              </td>\n              <td>\n                <code>U+000C</code>\n              \n              </td>\n              <td>\n                FORM FEED (FF)\n              \n              </td>\n              <td>\n                &lt;FF&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>r</code>\n              \n              </td>\n              <td>\n                13\n              \n              </td>\n              <td>\n                <code>U+000D</code>\n              \n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              \n              </td>\n              <td>\n                &lt;CR&gt;\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a14dae7e\"><emu-t>c</emu-t><emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ch</var> be the code point matched by <emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt>.</li><li>Let <var>i</var> be <var>ch</var>'s code point value.</li><li>Return the remainder of dividing <var>i</var> by 32.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+0000 (NULL).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><code>\\0</code> represents the &lt;NUL&gt; character and cannot be followed by a decimal digit.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the numeric value of the code unit that is the SV of <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8a1bc222\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-t>\\u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lead</var> be the CharacterValue of <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt>.</li><li>Let <var>trail</var> be the CharacterValue of <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt>.</li><li>Let <var>cp</var> be <emu-xref aoid=\"UTF16Decode\"><a href=\"#sec-utf16decode\">UTF16Decode</a></emu-xref>(<var>lead</var>, <var>trail</var>).</li><li>Return the code point value of <var>cp</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"36b8a3a6\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the CharacterValue of <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d13554f7\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the CharacterValue of <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"603c9eb4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the CharacterValue of <emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LeadSurrogate\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a4fb442c\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"TrailSurrogate\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a4fb442c\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonSurrogate\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a4fb442c\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"804f428d\"><emu-nt><a href=\"#prod-IdentityEscape\">IdentityEscape</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ch</var> be the code point matched by <emu-nt><a href=\"#prod-IdentityEscape\">IdentityEscape</a></emu-nt>.</li><li>Return the code point value of <var>ch</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-codepointat": {"num": "10.1.4", "title": "#sec-codepointat Static Semantics: CodePointAt ( string, position )", "html": "<emu-clause id=\"sec-codepointat\" aoid=\"CodePointAt\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointat\">#sec-codepointat</span> Static Semantics: CodePointAt ( <var>string</var>, <var>position</var> )</h1>\n      <p>The abstract operation CodePointAt interprets a String <var>string</var> as a sequence of UTF-16 encoded code points, as described in  <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, and reads from it a single code point starting with the code unit at index <var>position</var>. When called, the following steps are performed:</p>\n      <emu-alg><ol><li>Let <var>size</var> be the length of <var>string</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>position</var> &#8805; 0 and <var>position</var> &lt; <var>size</var>.</li><li>Let <var>first</var> be the code unit at index <var>position</var> within <var>string</var>.</li><li>Let <var>cp</var> be the code point whose numeric value is that of <var>first</var>.</li><li>If <var>first</var> is not a <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, then<ol><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 1, [[IsUnpairedSurrogate]]: <emu-val>false</emu-val> }.</li></ol></li><li>If <var>first</var> is a <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> or <var>position</var> + 1 = <var>size</var>, then<ol><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 1, [[IsUnpairedSurrogate]]: <emu-val>true</emu-val> }.</li></ol></li><li>Let <var>second</var> be the code unit at index <var>position</var> + 1 within <var>string</var>.</li><li>If <var>second</var> is not a <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, then<ol><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 1, [[IsUnpairedSurrogate]]: <emu-val>true</emu-val> }.</li></ol></li><li>Set <var>cp</var> to !&#160;<emu-xref aoid=\"UTF16Decode\"><a href=\"#sec-utf16decode\">UTF16Decode</a></emu-xref>(<var>first</var>, <var>second</var>).</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 2, [[IsUnpairedSurrogate]]: <emu-val>false</emu-val> }.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-source-text": {"num": "10.1", "title": "#sec-source-text Source Text", "html": "<emu-clause id=\"sec-source-text\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text\">#sec-source-text</span> Source Text</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"SourceCharacter\" type=\"lexical\" id=\"prod-SourceCharacter\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production></emu-grammar>\n    <p>ECMAScript code is expressed using Unicode. ECMAScript source text is a sequence of code points. All Unicode code point values from U+0000 to U+10FFFF, including surrogate code points, may occur in source text where permitted by the ECMAScript grammars. The actual encodings used to store and interchange ECMAScript source text is not relevant to this specification. Regardless of the external source text encoding, a conforming ECMAScript implementation processes the source text as if it was an equivalent sequence of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values, each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> being a Unicode code point. Conforming ECMAScript implementations are not required to perform any normalization of source text, or behave as though they were performing normalization of source text.</p>\n    <p>The components of a combining character sequence are treated as individual Unicode code points even though a user might think of the whole sequence as a single character.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In string literals, regular expression literals, template literals and identifiers, any Unicode code point may also be expressed using Unicode escape sequences that explicitly express a code point's numeric value. Within a comment, such an escape sequence is effectively ignored as part of the comment.</p>\n      <p>ECMAScript differs from the Java programming language in the behaviour of Unicode escape sequences. In a Java program, if the Unicode escape sequence <code>\\u000A</code>, for example, occurs within a single-line comment, it is interpreted as a line terminator (Unicode code point U+000A is LINE FEED (LF)) and therefore the next code point is not part of the comment. Similarly, if the Unicode escape sequence <code>\\u000A</code> occurs within a string literal in a Java program, it is likewise interpreted as a line terminator, which is not allowed within a string literal&#8212;one must write <code>\\n</code> instead of <code>\\u000A</code> to cause a LINE FEED (LF) to be part of the String value of a string literal. In an ECMAScript program, a Unicode escape sequence occurring within a comment is never interpreted and therefore cannot contribute to termination of the comment. Similarly, a Unicode escape sequence occurring within a string literal in an ECMAScript program always contributes to the literal and is never interpreted as a line terminator or as a code point that might terminate the string literal.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-utf16encoding\"><h1><span class=\"secnum\">10.1.1</span>#sec-utf16encoding Static Semantics: UTF16Encoding ( cp )</h1>...</div><div id=\"excluded-sec-utf16encode\"><h1><span class=\"secnum\">10.1.2</span>#sec-utf16encode Static Semantics: UTF16Encode ( text )</h1>...</div><div id=\"excluded-sec-utf16decode\"><h1><span class=\"secnum\">10.1.3</span>#sec-utf16decode Static Semantics: UTF16Decode ( lead, trail )</h1>...</div><div id=\"excluded-sec-codepointat\"><h1><span class=\"secnum\">10.1.4</span>#sec-codepointat Static Semantics: CodePointAt ( string, position )</h1>...</div></emu-clause>\n\n  "}, "sec-utf16decode": {"num": "10.1.3", "title": "#sec-utf16decode Static Semantics: UTF16Decode ( lead, trail )", "html": "<emu-clause id=\"sec-utf16decode\" aoid=\"UTF16Decode\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-utf16decode\">#sec-utf16decode</span> Static Semantics: UTF16Decode ( <var>lead</var>, <var>trail</var> )</h1>\n      <p>Two code units, <var>lead</var> and <var>trail</var>, that form a UTF-16  <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref> are converted to a code point by performing the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>lead</var> is a <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> and <var>trail</var> is a <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>.</li><li>Let <var>cp</var> be (<var>lead</var> - 0xD800) &#215; 0x400 + (<var>trail</var> - 0xDC00) + 0x10000.</li><li>Return the code point <var>cp</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-pattern-semantics": {"num": "21.2.2", "title": "#sec-pattern-semantics Pattern Semantics", "html": "<emu-clause id=\"sec-pattern-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</span> Pattern Semantics</h1>\n      <p>A regular expression pattern is converted into an internal procedure using the process described below. An implementation is encouraged to use more efficient algorithms than the ones listed below, as long as the results are the same. The internal procedure is used as the value of a RegExp object's [[RegExpMatcher]] internal slot.</p>\n      <p>A <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is either a BMP pattern or a Unicode pattern depending upon whether or not its associated flags contain a <code>u</code>. A BMP pattern matches against a String interpreted as consisting of a sequence of 16-bit values that are Unicode code points in the range of the Basic Multilingual Plane. A Unicode pattern matches against a String interpreted as consisting of Unicode code points encoded using UTF-16. In the context of describing the behaviour of a BMP pattern &#8220;character&#8221; means a single 16-bit Unicode BMP code point. In the context of describing the behaviour of a Unicode pattern &#8220;character&#8221; means a UTF-16 encoded code point (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). In either context, &#8220;character value&#8221; means the numeric value of the corresponding non-encoded code point.</p>\n      <p>The syntax and semantics of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is defined as if the source code for the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> was a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values where each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> corresponds to a Unicode code point. If a BMP pattern contains a non-BMP <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> the entire pattern is encoded using UTF-16 and the individual code units of that encoding are used as the elements of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For example, consider a pattern expressed in source text as the single non-BMP character U+1D11E (MUSICAL SYMBOL G CLEF). Interpreted as a Unicode pattern, it would be a single element (character) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the single code point 0x1D11E. However, interpreted as a BMP pattern, it is first UTF-16 encoded to produce a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the code units 0xD834 and 0xDD1E.</p>\n        <p>Patterns are passed to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as ECMAScript String values in which non-BMP characters are UTF-16 encoded. For example, the single character MUSICAL SYMBOL G CLEF pattern, expressed as a String value, is a String of length 2 whose elements were the code units 0xD834 and 0xDD1E. So no further translation of the string would be necessary to process it as a BMP pattern consisting of two pattern characters. However, to process it as a Unicode pattern <emu-xref aoid=\"UTF16Decode\"><a href=\"#sec-utf16decode\">UTF16Decode</a></emu-xref> must be used in producing a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of a single pattern character, the code point U+1D11E.</p>\n        <p>An implementation may not actually perform such translations to or from UTF-16, but the semantics of this specification requires that the result of pattern matching be as if such translations were performed.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-notation\"><h1><span class=\"secnum\">21.2.2.1</span>#sec-notation Notation</h1>...</div><div id=\"excluded-sec-pattern\"><h1><span class=\"secnum\">21.2.2.2</span>#sec-pattern Pattern</h1>...</div><div id=\"excluded-sec-disjunction\"><h1><span class=\"secnum\">21.2.2.3</span>#sec-disjunction Disjunction</h1>...</div><div id=\"excluded-sec-alternative\"><h1><span class=\"secnum\">21.2.2.4</span>#sec-alternative Alternative</h1>...</div><div id=\"excluded-sec-term\"><h1><span class=\"secnum\">21.2.2.5</span>#sec-term Term</h1>...</div><div id=\"excluded-sec-assertion\"><h1><span class=\"secnum\">21.2.2.6</span>#sec-assertion Assertion</h1>...</div><div id=\"excluded-sec-quantifier\"><h1><span class=\"secnum\">21.2.2.7</span>#sec-quantifier Quantifier</h1>...</div><div id=\"excluded-sec-atom\"><h1><span class=\"secnum\">21.2.2.8</span>#sec-atom Atom</h1>...</div><div id=\"excluded-sec-atomescape\"><h1><span class=\"secnum\">21.2.2.9</span>#sec-atomescape AtomEscape</h1>...</div><div id=\"excluded-sec-characterescape\"><h1><span class=\"secnum\">21.2.2.10</span>#sec-characterescape CharacterEscape</h1>...</div><div id=\"excluded-sec-decimalescape\"><h1><span class=\"secnum\">21.2.2.11</span>#sec-decimalescape DecimalEscape</h1>...</div><div id=\"excluded-sec-characterclassescape\"><h1><span class=\"secnum\">21.2.2.12</span>#sec-characterclassescape CharacterClassEscape</h1>...</div><div id=\"excluded-sec-characterclass\"><h1><span class=\"secnum\">21.2.2.13</span>#sec-characterclass CharacterClass</h1>...</div><div id=\"excluded-sec-classranges\"><h1><span class=\"secnum\">21.2.2.14</span>#sec-classranges ClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassranges\"><h1><span class=\"secnum\">21.2.2.15</span>#sec-nonemptyclassranges NonemptyClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassrangesnodash\"><h1><span class=\"secnum\">21.2.2.16</span>#sec-nonemptyclassrangesnodash NonemptyClassRangesNoDash</h1>...</div><div id=\"excluded-sec-classatom\"><h1><span class=\"secnum\">21.2.2.17</span>#sec-classatom ClassAtom</h1>...</div><div id=\"excluded-sec-classatomnodash\"><h1><span class=\"secnum\">21.2.2.18</span>#sec-classatomnodash ClassAtomNoDash</h1>...</div><div id=\"excluded-sec-classescape\"><h1><span class=\"secnum\">21.2.2.19</span>#sec-classescape ClassEscape</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-47": "Table 56"}}, "to": {"secList": ["sec-ecmascript-language-types-string-type", "sec-patterns-static-semantics-character-value", "sec-codepointat", "sec-source-text", "sec-pattern-semantics"], "secData": {"sec-ecmascript-language-types-string-type": {"num": "6.1.4", "title": "#sec-ecmascript-language-types-string-type The String Type", "html": "<emu-clause id=\"sec-ecmascript-language-types-string-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</span> The String Type</h1>\n      <p>The String type is the set of all ordered sequences of zero or more 16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> values (&#8220;elements&#8221;) up to a maximum length of 2<sup>53</sup> - 1 elements. The String type is generally used to represent textual data in a running ECMAScript program, in which case each element in the String is treated as a UTF-16 code unit value. Each element is regarded as occupying a position within the sequence. These positions are indexed with nonnegative integers. The first element (if any) is at index 0, the next element (if any) at index 1, and so on. The length of a String is the number of elements (i.e., 16-bit values) within it. The empty String has length zero and therefore contains no elements.</p>\n      <p>ECMAScript operations that do not interpret String contents apply no further semantics. Operations that do interpret String values treat each element as a single UTF-16 code unit. However, ECMAScript does not restrict the value of or relationships between these code units, so operations that further interpret String contents as sequences of Unicode code points encoded in UTF-16 must account for ill-formed subsequences. Such operations apply special treatment to every code unit with a numeric value in the inclusive range 0xD800 to 0xDBFF (defined by the Unicode Standard as a  <dfn id=\"leading-surrogate\">leading surrogate</dfn>, or more formally as a  <dfn id=\"high-surrogate-code-unit\">high-surrogate code unit</dfn>) and every code unit with a numeric value in the inclusive range 0xDC00 to 0xDFFF (defined as a  <dfn id=\"trailing-surrogate\">trailing surrogate</dfn>, or more formally as a  <dfn id=\"low-surrogate-code-unit\">low-surrogate code unit</dfn>) using the following rules:</p>\n      <ul>\n        <li>\n          A code unit that is not a  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> and not a  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> is interpreted as a code point with the same value.\n        \n        </li>\n        <li>\n          A sequence of two code units, where the first code unit <var>c1</var> is a  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> and the second code unit <var>c2</var> a  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, is a  <dfn id=\"surrogate-pair\">surrogate pair</dfn> and is interpreted as a code point with the value (<var>c1</var> - 0xD800) &#215; 0x400 + (<var>c2</var> - 0xDC00) + 0x10000. (See  <emu-xref href=\"#sec-utf16decodesurrogatepair\"><a href=\"#sec-utf16decodesurrogatepair\" class=\"excluded-xref\" excluded-id=\"sec-utf16decodesurrogatepair\">#sec-utf16decodesurrogatepair</a></emu-xref>)\n        \n        </li>\n        <li>\n          A code unit that is a  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, but is not part of a  <emu-xref href=\"#surrogate-pair\"><a href=\"#surrogate-pair\">surrogate pair</a></emu-xref>, is interpreted as a code point with the same value.\n        \n        </li>\n      </ul>\n      <p>The function <code>String.prototype.normalize</code> (see  <emu-xref href=\"#sec-string.prototype.normalize\"><a href=\"#sec-string.prototype.normalize\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.normalize\">#sec-string.prototype.normalize</a></emu-xref>) can be used to explicitly normalize a String value. <code>String.prototype.localeCompare</code> (see  <emu-xref href=\"#sec-string.prototype.localecompare\"><a href=\"#sec-string.prototype.localecompare\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.localecompare\">#sec-string.prototype.localecompare</a></emu-xref>) internally normalizes String values, but no other operations implicitly normalize the strings upon which they operate. Only operations that are explicitly specified to be language or locale sensitive produce language-sensitive results.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The rationale behind this design was to keep the implementation of Strings as simple and high-performing as possible. If ECMAScript source text is in Normalized Form C, string literals are guaranteed to also be normalized, as long as they do not contain any Unicode escape sequences.</p>\n      </div></emu-note>\n      <p>In this specification, the phrase \"the  <dfn>string-concatenation</dfn> of <var>A</var>, <var>B</var>, ...\" (where each argument is a String value, a code unit, or a sequence of code units) denotes the String value whose sequence of code units is the concatenation of the code units (in order) of each of the arguments (in order).</p>\n    </emu-clause>\n\n    "}, "sec-patterns-static-semantics-character-value": {"num": "21.2.1.4", "title": "#sec-patterns-static-semantics-character-value Static Semantics: CharacterValue", "html": "<emu-clause id=\"sec-patterns-static-semantics-character-value\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-patterns-static-semantics-character-value\">#sec-patterns-static-semantics-character-value</span> Static Semantics: CharacterValue</h1>\n        <emu-grammar><emu-production name=\"ClassAtom\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassAtom\">ClassAtom</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6f24a587\"><emu-t>-</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+002D (HYPHEN-MINUS).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ClassAtomNoDash\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassAtomNoDash\">ClassAtomNoDash</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ecde6e28\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>]</emu-t> or <emu-t>-</emu-t></emu-gmod></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ch</var> be the code point matched by <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt>.</li><li>Return the code point value of <var>ch</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ClassEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassEscape\">ClassEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0185ce89\"><emu-t>b</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+0008 (BACKSPACE).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ClassEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ClassEscape\">ClassEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6f24a587\"><emu-t>-</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+002D (HYPHEN-MINUS).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f88e7170\"><emu-nt><a href=\"#prod-ControlEscape\">ControlEscape</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value according to <emu-xref href=\"#table-47\"><a href=\"#table-47\" class=\"excluded-xref\" excluded-id=\"table-47\">#table-47</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-table id=\"table-47\" caption=\"ControlEscape Code Point Values\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-47\">#table-47</span>: ControlEscape Code Point Values</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                ControlEscape\n              \n              </th>\n              <th>\n                Code Point Value\n              \n              </th>\n              <th>\n                Code Point\n              \n              </th>\n              <th>\n                Unicode Name\n              \n              </th>\n              <th>\n                Symbol\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>t</code>\n              \n              </td>\n              <td>\n                9\n              \n              </td>\n              <td>\n                <code>U+0009</code>\n              \n              </td>\n              <td>\n                CHARACTER TABULATION\n              \n              </td>\n              <td>\n                &lt;HT&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>n</code>\n              \n              </td>\n              <td>\n                10\n              \n              </td>\n              <td>\n                <code>U+000A</code>\n              \n              </td>\n              <td>\n                LINE FEED (LF)\n              \n              </td>\n              <td>\n                &lt;LF&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>v</code>\n              \n              </td>\n              <td>\n                11\n              \n              </td>\n              <td>\n                <code>U+000B</code>\n              \n              </td>\n              <td>\n                LINE TABULATION\n              \n              </td>\n              <td>\n                &lt;VT&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>f</code>\n              \n              </td>\n              <td>\n                12\n              \n              </td>\n              <td>\n                <code>U+000C</code>\n              \n              </td>\n              <td>\n                FORM FEED (FF)\n              \n              </td>\n              <td>\n                &lt;FF&gt;\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>r</code>\n              \n              </td>\n              <td>\n                13\n              \n              </td>\n              <td>\n                <code>U+000D</code>\n              \n              </td>\n              <td>\n                CARRIAGE RETURN (CR)\n              \n              </td>\n              <td>\n                &lt;CR&gt;\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a14dae7e\"><emu-t>c</emu-t><emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ch</var> be the code point matched by <emu-nt><a href=\"#prod-ControlLetter\">ControlLetter</a></emu-nt>.</li><li>Let <var>i</var> be <var>ch</var>'s code point value.</li><li>Return the remainder of dividing <var>i</var> by 32.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the code point value of U+0000 (NULL).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><code>\\0</code> represents the &lt;NUL&gt; character and cannot be followed by a decimal digit.</p>\n        </div></emu-note>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the numeric value of the code unit that is the SV of <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8a1bc222\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-t>\\u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lead</var> be the CharacterValue of <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt>.</li><li>Let <var>trail</var> be the CharacterValue of <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt>.</li><li>Let <var>cp</var> be <emu-xref aoid=\"UTF16DecodeSurrogatePair\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16DecodeSurrogatePair</a></emu-xref>(<var>lead</var>, <var>trail</var>).</li><li>Return the code point value of <var>cp</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"36b8a3a6\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the CharacterValue of <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d13554f7\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the CharacterValue of <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"603c9eb4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the CharacterValue of <emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"RegExpUnicodeEscapeSequence\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-RegExpUnicodeEscapeSequence\">RegExpUnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LeadSurrogate\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LeadSurrogate\">LeadSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a4fb442c\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"TrailSurrogate\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-TrailSurrogate\">TrailSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a4fb442c\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonSurrogate\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-NonSurrogate\">NonSurrogate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a4fb442c\"><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"CharacterEscape\" type=\"lexical\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CharacterEscape\">CharacterEscape</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"804f428d\"><emu-nt><a href=\"#prod-IdentityEscape\">IdentityEscape</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>ch</var> be the code point matched by <emu-nt><a href=\"#prod-IdentityEscape\">IdentityEscape</a></emu-nt>.</li><li>Return the code point value of <var>ch</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-codepointat": {"num": "10.1.4", "title": "#sec-codepointat Static Semantics: CodePointAt ( string, position )", "html": "<emu-clause id=\"sec-codepointat\" aoid=\"CodePointAt\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-codepointat\">#sec-codepointat</span> Static Semantics: CodePointAt ( <var>string</var>, <var>position</var> )</h1>\n      <p>The abstract operation CodePointAt interprets a String <var>string</var> as a sequence of UTF-16 encoded code points, as described in  <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, and reads from it a single code point starting with the code unit at index <var>position</var>. When called, the following steps are performed:</p>\n      <emu-alg><ol><li>Let <var>size</var> be the length of <var>string</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>position</var> &#8805; 0 and <var>position</var> &lt; <var>size</var>.</li><li>Let <var>first</var> be the code unit at index <var>position</var> within <var>string</var>.</li><li>Let <var>cp</var> be the code point whose numeric value is that of <var>first</var>.</li><li>If <var>first</var> is not a <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, then<ol><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 1, [[IsUnpairedSurrogate]]: <emu-val>false</emu-val> }.</li></ol></li><li>If <var>first</var> is a <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> or <var>position</var> + 1 = <var>size</var>, then<ol><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 1, [[IsUnpairedSurrogate]]: <emu-val>true</emu-val> }.</li></ol></li><li>Let <var>second</var> be the code unit at index <var>position</var> + 1 within <var>string</var>.</li><li>If <var>second</var> is not a <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref>, then<ol><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 1, [[IsUnpairedSurrogate]]: <emu-val>true</emu-val> }.</li></ol></li><li>Set <var>cp</var> to !&#160;<emu-xref aoid=\"UTF16DecodeSurrogatePair\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16DecodeSurrogatePair</a></emu-xref>(<var>first</var>, <var>second</var>).</li><li>Return the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> { [[CodePoint]]: <var>cp</var>, [[CodeUnitCount]]: 2, [[IsUnpairedSurrogate]]: <emu-val>false</emu-val> }.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-source-text": {"num": "10.1", "title": "#sec-source-text Source Text", "html": "<emu-clause id=\"sec-source-text\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text\">#sec-source-text</span> Source Text</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"SourceCharacter\" type=\"lexical\" id=\"prod-SourceCharacter\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production></emu-grammar>\n    <p>ECMAScript code is expressed using Unicode. ECMAScript source text is a sequence of code points. All Unicode code point values from U+0000 to U+10FFFF, including surrogate code points, may occur in source text where permitted by the ECMAScript grammars. The actual encodings used to store and interchange ECMAScript source text is not relevant to this specification. Regardless of the external source text encoding, a conforming ECMAScript implementation processes the source text as if it was an equivalent sequence of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values, each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> being a Unicode code point. Conforming ECMAScript implementations are not required to perform any normalization of source text, or behave as though they were performing normalization of source text.</p>\n    <p>The components of a combining character sequence are treated as individual Unicode code points even though a user might think of the whole sequence as a single character.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In string literals, regular expression literals, template literals and identifiers, any Unicode code point may also be expressed using Unicode escape sequences that explicitly express a code point's numeric value. Within a comment, such an escape sequence is effectively ignored as part of the comment.</p>\n      <p>ECMAScript differs from the Java programming language in the behaviour of Unicode escape sequences. In a Java program, if the Unicode escape sequence <code>\\u000A</code>, for example, occurs within a single-line comment, it is interpreted as a line terminator (Unicode code point U+000A is LINE FEED (LF)) and therefore the next code point is not part of the comment. Similarly, if the Unicode escape sequence <code>\\u000A</code> occurs within a string literal in a Java program, it is likewise interpreted as a line terminator, which is not allowed within a string literal&#8212;one must write <code>\\n</code> instead of <code>\\u000A</code> to cause a LINE FEED (LF) to be part of the String value of a string literal. In an ECMAScript program, a Unicode escape sequence occurring within a comment is never interpreted and therefore cannot contribute to termination of the comment. Similarly, a Unicode escape sequence occurring within a string literal in an ECMAScript program always contributes to the literal and is never interpreted as a line terminator or as a code point that might terminate the string literal.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-utf16encoding\"><h1><span class=\"secnum\">10.1.1</span>#sec-utf16encoding Static Semantics: UTF16Encoding ( cp )</h1>...</div><div id=\"excluded-sec-utf16encode\"><h1><span class=\"secnum\">10.1.2</span>#sec-utf16encode Static Semantics: UTF16Encode ( text )</h1>...</div><div id=\"excluded-sec-utf16decodesurrogatepair\"><h1><span class=\"secnum\">10.1.3</span>#sec-utf16decodesurrogatepair Static Semantics: UTF16DecodeSurrogatePair ( lead, trail )</h1>...</div><div id=\"excluded-sec-codepointat\"><h1><span class=\"secnum\">10.1.4</span>#sec-codepointat Static Semantics: CodePointAt ( string, position )</h1>...</div></emu-clause>\n\n  "}, "sec-pattern-semantics": {"num": "21.2.2", "title": "#sec-pattern-semantics Pattern Semantics", "html": "<emu-clause id=\"sec-pattern-semantics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-pattern-semantics\">#sec-pattern-semantics</span> Pattern Semantics</h1>\n      <p>A regular expression pattern is converted into an internal procedure using the process described below. An implementation is encouraged to use more efficient algorithms than the ones listed below, as long as the results are the same. The internal procedure is used as the value of a RegExp object's [[RegExpMatcher]] internal slot.</p>\n      <p>A <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is either a BMP pattern or a Unicode pattern depending upon whether or not its associated flags contain a <code>u</code>. A BMP pattern matches against a String interpreted as consisting of a sequence of 16-bit values that are Unicode code points in the range of the Basic Multilingual Plane. A Unicode pattern matches against a String interpreted as consisting of Unicode code points encoded using UTF-16. In the context of describing the behaviour of a BMP pattern &#8220;character&#8221; means a single 16-bit Unicode BMP code point. In the context of describing the behaviour of a Unicode pattern &#8220;character&#8221; means a UTF-16 encoded code point (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). In either context, &#8220;character value&#8221; means the numeric value of the corresponding non-encoded code point.</p>\n      <p>The syntax and semantics of <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> is defined as if the source code for the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> was a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> values where each <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> corresponds to a Unicode code point. If a BMP pattern contains a non-BMP <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> the entire pattern is encoded using UTF-16 and the individual code units of that encoding are used as the elements of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For example, consider a pattern expressed in source text as the single non-BMP character U+1D11E (MUSICAL SYMBOL G CLEF). Interpreted as a Unicode pattern, it would be a single element (character) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the single code point 0x1D11E. However, interpreted as a BMP pattern, it is first UTF-16 encoded to produce a two element <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of the code units 0xD834 and 0xDD1E.</p>\n        <p>Patterns are passed to the RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> as ECMAScript String values in which non-BMP characters are UTF-16 encoded. For example, the single character MUSICAL SYMBOL G CLEF pattern, expressed as a String value, is a String of length 2 whose elements were the code units 0xD834 and 0xDD1E. So no further translation of the string would be necessary to process it as a BMP pattern consisting of two pattern characters. However, to process it as a Unicode pattern <emu-xref aoid=\"UTF16DecodeSurrogatePair\"><a href=\"#sec-utf16decodesurrogatepair\">UTF16DecodeSurrogatePair</a></emu-xref> must be used in producing a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of a single pattern character, the code point U+1D11E.</p>\n        <p>An implementation may not actually perform such translations to or from UTF-16, but the semantics of this specification requires that the result of pattern matching be as if such translations were performed.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-notation\"><h1><span class=\"secnum\">21.2.2.1</span>#sec-notation Notation</h1>...</div><div id=\"excluded-sec-pattern\"><h1><span class=\"secnum\">21.2.2.2</span>#sec-pattern Pattern</h1>...</div><div id=\"excluded-sec-disjunction\"><h1><span class=\"secnum\">21.2.2.3</span>#sec-disjunction Disjunction</h1>...</div><div id=\"excluded-sec-alternative\"><h1><span class=\"secnum\">21.2.2.4</span>#sec-alternative Alternative</h1>...</div><div id=\"excluded-sec-term\"><h1><span class=\"secnum\">21.2.2.5</span>#sec-term Term</h1>...</div><div id=\"excluded-sec-assertion\"><h1><span class=\"secnum\">21.2.2.6</span>#sec-assertion Assertion</h1>...</div><div id=\"excluded-sec-quantifier\"><h1><span class=\"secnum\">21.2.2.7</span>#sec-quantifier Quantifier</h1>...</div><div id=\"excluded-sec-atom\"><h1><span class=\"secnum\">21.2.2.8</span>#sec-atom Atom</h1>...</div><div id=\"excluded-sec-atomescape\"><h1><span class=\"secnum\">21.2.2.9</span>#sec-atomescape AtomEscape</h1>...</div><div id=\"excluded-sec-characterescape\"><h1><span class=\"secnum\">21.2.2.10</span>#sec-characterescape CharacterEscape</h1>...</div><div id=\"excluded-sec-decimalescape\"><h1><span class=\"secnum\">21.2.2.11</span>#sec-decimalescape DecimalEscape</h1>...</div><div id=\"excluded-sec-characterclassescape\"><h1><span class=\"secnum\">21.2.2.12</span>#sec-characterclassescape CharacterClassEscape</h1>...</div><div id=\"excluded-sec-characterclass\"><h1><span class=\"secnum\">21.2.2.13</span>#sec-characterclass CharacterClass</h1>...</div><div id=\"excluded-sec-classranges\"><h1><span class=\"secnum\">21.2.2.14</span>#sec-classranges ClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassranges\"><h1><span class=\"secnum\">21.2.2.15</span>#sec-nonemptyclassranges NonemptyClassRanges</h1>...</div><div id=\"excluded-sec-nonemptyclassrangesnodash\"><h1><span class=\"secnum\">21.2.2.16</span>#sec-nonemptyclassrangesnodash NonemptyClassRangesNoDash</h1>...</div><div id=\"excluded-sec-classatom\"><h1><span class=\"secnum\">21.2.2.17</span>#sec-classatom ClassAtom</h1>...</div><div id=\"excluded-sec-classatomnodash\"><h1><span class=\"secnum\">21.2.2.18</span>#sec-classatomnodash ClassAtomNoDash</h1>...</div><div id=\"excluded-sec-classescape\"><h1><span class=\"secnum\">21.2.2.19</span>#sec-classescape ClassEscape</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-47": "Table 56"}}}