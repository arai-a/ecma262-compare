{"from": {"secList": ["sec-bigint.prototype", "sec-properties-of-the-bigint-prototype-object"], "secData": {"sec-bigint.prototype": {"num": "20.2.2.3", "title": "#sec-bigint.prototype BigInt.prototype", "html": "<emu-clause id=\"sec-bigint.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint.prototype\">#sec-bigint.prototype</span> BigInt.prototype</h1>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-bigint-prototype-object": {"num": "20.2.3", "title": "#sec-properties-of-the-bigint-prototype-object Properties of the BigInt Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-bigint-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-bigint-prototype-object\">#sec-properties-of-the-bigint-prototype-object</span> Properties of the BigInt Prototype Object</h1>\n      <p>The BigInt prototype object:</p>\n      <ul>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a BigInt object; it does not have a [[BigIntData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"sec-thisbigintvalue\" aoid=\"thisBigIntValue\">thisBigIntValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BigIntData]] internal slot, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>.[[BigIntData]]) is BigInt.</li><li>Return <var>value</var>.[[BigIntData]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>The phrase &#8220;this BigInt value&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thisbigintvalue\"><a href=\"#sec-thisbigintvalue\">thisBigIntValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-bigint.prototype.constructor\"><h1><span class=\"secnum\">20.2.3.1</span>#sec-bigint.prototype.constructor BigInt.prototype.constructor</h1>...</div><div id=\"excluded-sec-bigint.prototype.tolocalestring\"><h1><span class=\"secnum\">20.2.3.2</span>#sec-bigint.prototype.tolocalestring BigInt.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.tostring\"><h1><span class=\"secnum\">20.2.3.3</span>#sec-bigint.prototype.tostring BigInt.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.valueof\"><h1><span class=\"secnum\">20.2.3.4</span>#sec-bigint.prototype.valueof BigInt.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-bigint.prototype-@@tostringtag\"><h1><span class=\"secnum\">20.2.3.5</span>#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n  "}}, "figData": {}}, "to": {"secList": ["sec-bigint.prototype", "sec-properties-of-the-bigint-prototype-object"], "secData": {"sec-bigint.prototype": {"num": "20.2.2.3", "title": "#sec-bigint.prototype BigInt.prototype", "html": "<emu-clause id=\"sec-bigint.prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint.prototype\">#sec-bigint.prototype</span> BigInt.prototype</h1>\n        <p>The initial value of <code>BigInt.prototype</code> is <emu-xref href=\"#sec-properties-of-the-bigint-prototype-object\"><a href=\"#sec-properties-of-the-bigint-prototype-object\">%BigInt.prototype%</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-the-bigint-prototype-object": {"num": "20.2.3", "title": "#sec-properties-of-the-bigint-prototype-object Properties of the BigInt Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-bigint-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-bigint-prototype-object\">#sec-properties-of-the-bigint-prototype-object</span> Properties of the BigInt Prototype Object</h1>\n      <p>The BigInt prototype object:</p>\n      <ul>\n        <li>is the intrinsic object <dfn>%BigInt.prototype%</dfn>.</li>\n        <li>is an <emu-xref href=\"#ordinary-object\"><a href=\"#ordinary-object\">ordinary object</a></emu-xref>.</li>\n        <li>is not a BigInt object; it does not have a [[BigIntData]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is the intrinsic object %Object.prototype%.</li>\n      </ul>\n      <p>The abstract operation <dfn id=\"sec-thisbigintvalue\" aoid=\"thisBigIntValue\">thisBigIntValue</dfn> takes argument <var>value</var>. It performs the following steps when called:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, return <var>value</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[BigIntData]] internal slot, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>.[[BigIntData]]) is BigInt.</li><li>Return <var>value</var>.[[BigIntData]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.</li></ol></emu-alg>\n      <p>The phrase &#8220;this BigInt value&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thisbigintvalue\"><a href=\"#sec-thisbigintvalue\">thisBigIntValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-bigint.prototype.constructor\"><h1><span class=\"secnum\">20.2.3.1</span>#sec-bigint.prototype.constructor BigInt.prototype.constructor</h1>...</div><div id=\"excluded-sec-bigint.prototype.tolocalestring\"><h1><span class=\"secnum\">20.2.3.2</span>#sec-bigint.prototype.tolocalestring BigInt.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.tostring\"><h1><span class=\"secnum\">20.2.3.3</span>#sec-bigint.prototype.tostring BigInt.prototype.toString ( [ radix ] )</h1>...</div><div id=\"excluded-sec-bigint.prototype.valueof\"><h1><span class=\"secnum\">20.2.3.4</span>#sec-bigint.prototype.valueof BigInt.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-bigint.prototype-@@tostringtag\"><h1><span class=\"secnum\">20.2.3.5</span>#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n  "}}, "figData": {}}}