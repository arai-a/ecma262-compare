{"from": {"secList": ["sec-left-shift-operator-runtime-semantics-evaluation", "sec-signed-right-shift-operator-runtime-semantics-evaluation", "sec-tonumber-applied-to-the-string-type", "sec-strict-equality-comparison", "sec-samevalue", "sec-getmodifysetvalueinbuffer", "sec-applying-the-div-operator", "sec-additional-syntax-numeric-literals", "sec-integerindexedelementset", "sec-agents", "sec-number-conversions", "sec-number.prototype.tostring", "sec-date-constructor", "sec-literals-numeric-literals", "sec-unary-minus-operator-runtime-semantics-evaluation", "sec-object-initializer-runtime-semantics-evaluation", "sec-rawbytestonumber", "sec-bitwise-not-operator-runtime-semantics-evaluation", "sec-subtraction-operator-minus", "sec-numbers-and-dates", "sec-abstract-operations-for-arraybuffer-objects", "sec-properties-of-the-dataview-prototype-object", "sec-binary-bitwise-operators-runtime-semantics-evaluation", "sec-hasprimitivebase", "sec-integer-indexed-exotic-objects", "sec-integerindexedelementget", "sec-samevaluezero", "sec-integer-indexed-exotic-objects-ownpropertykeys", "sec-serializejsonproperty", "sec-numbertorawbytes", "sec-postfix-increment-operator-runtime-semantics-evaluation", "sec-date-objects", "sec-postfix-decrement-operator-runtime-semantics-evaluation", "sec-allocatetypedarray", "sec-validatesharedintegertypedarray", "sec-atomics.compareexchange", "sec-%typedarray%.prototype.set-typedarray-offset", "sec-type-conversion", "sec-integerindexedobjectcreate", "sec-ecmascript-language-types-number-type", "sec-properties-of-the-date-constructor", "sec-%typedarray%.prototype.fill", "sec-toobject", "sec-setviewvalue", "sec-atomicreadmodifywrite", "sec-tonumber", "sec-abstract-equality-comparison", "sec-applying-the-additive-operators-to-numbers", "sec-prefix-decrement-operator-runtime-semantics-evaluation", "sec-additive-operators", "sec-applying-the-exp-operator", "sec-atomics.store", "sec-object-initializer-static-semantics-propname", "sec-typedarray-typedarray", "sec-typeof-operator-runtime-semantics-evaluation", "sec-atomics.islockfree", "sec-addition-operator-plus-runtime-semantics-evaluation", "sec-well-known-intrinsic-objects", "sec-subtraction-operator-minus-runtime-semantics-evaluation", "sec-literals-runtime-semantics-evaluation", "sec-atomics.wait", "sec-math.pow", "sec-applying-the-mod-operator", "sec-tostring-applied-to-the-number-type", "sec-abstract-operations-for-atomics", "sec-ecmascript-language-types", "sec-exp-operator", "sec-runtime-semantics-mv-s", "sec-lexical-grammar", "sec-samevaluenonnumber", "sec-getvaluefrombuffer", "sec-exp-operator-runtime-semantics-evaluation", "sec-value-properties-of-the-math-object", "sec-atomics.notify", "sec-tostring", "sec-applying-the-mul-operator", "sec-typedarray-objects", "sec-typedarray-constructors", "sec-%typedarray%.prototype.set-array-offset", "sec-unsigned-right-shift-operator-runtime-semantics-evaluation", "sec-multiplicative-operators-runtime-semantics-evaluation", "sec-math-object", "sec-abstract-relational-comparison", "sec-%typedarray%.prototype.sort", "sec-setvalueinbuffer", "sec-testing-and-comparison-operations", "sec-toboolean", "sec-requireobjectcoercible", "sec-static-semantics-mv", "sec-prefix-increment-operator-runtime-semantics-evaluation", "sec-properties-of-the-date-prototype-object", "sec-function-properties-of-the-math-object", "sec-date.prototype.tostring", "sec-date-time-string-format", "sec-overview-of-date-objects-and-definitions-of-abstract-operations"], "secData": {"sec-left-shift-operator-runtime-semantics-evaluation": {"num": "12.9.3.1", "title": "#sec-left-shift-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-left-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-left-shift-operator-runtime-semantics-evaluation\">#sec-left-shift-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ShiftExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b46f532a\"><emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-t>&lt;&lt;</emu-t><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>rval</var>).</li><li>Let <var>shiftCount</var> be the result of masking out all but the least significant 5 bits of <var>rnum</var>, that is, compute <var>rnum</var> &amp; 0x1F.</li><li>Return the result of left shifting <var>lnum</var> by <var>shiftCount</var> bits. The result is a signed 32-bit <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-signed-right-shift-operator-runtime-semantics-evaluation": {"num": "12.9.4.1", "title": "#sec-signed-right-shift-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-signed-right-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-signed-right-shift-operator-runtime-semantics-evaluation\">#sec-signed-right-shift-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ShiftExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"548327f3\"><emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-t>&gt;&gt;</emu-t><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>rval</var>).</li><li>Let <var>shiftCount</var> be the result of masking out all but the least significant 5 bits of <var>rnum</var>, that is, compute <var>rnum</var> &amp; 0x1F.</li><li>Return the result of performing a sign-extending right shift of <var>lnum</var> by <var>shiftCount</var> bits. The most significant bit is propagated. The result is a signed 32-bit <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-tonumber-applied-to-the-string-type": {"num": "7.1.3.1", "title": "#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type", "html": "<emu-clause id=\"sec-tonumber-applied-to-the-string-type\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</span> ToNumber Applied to the String Type</h1>\n        <p><emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to Strings applies the following grammar to the input String interpreted as a sequence of UTF-16 encoded code points (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). If the grammar cannot interpret the String as an expansion of <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt>, then the result of <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is <emu-val>NaN</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The terminal symbols of this grammar are all composed of characters in the Unicode Basic Multilingual Plane (BMP). Therefore, the result of <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> will be <emu-val>NaN</emu-val> if the string contains any  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> code units, whether paired or unpaired.</p>\n        </div></emu-note>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"StringNumericLiteral\" type=\"regexp\" id=\"prod-StringNumericLiteral\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"9a4be900\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"fe58c396\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpace\" type=\"regexp\" id=\"prod-StrWhiteSpace\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"2b0ea266\"><emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\" id=\"prod-StrWhiteSpaceChar\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrNumericLiteral\" type=\"regexp\" id=\"prod-StrNumericLiteral\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"db369ee0\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrDecimalLiteral\" type=\"regexp\" id=\"prod-StrDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"477fcd23\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a3f639a9\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d60f01a5\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" id=\"prod-StrUnsignedDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4afe8df8\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"8a89062c\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"24e27af7\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <p>All grammar symbols not explicitly defined above have the definitions used in the Lexical Grammar for numeric literals (<emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>)</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Some differences should be noted between the syntax of a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> and a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>:</p>\n          <ul>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> may include leading and/or trailing white space and/or line terminators.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may have any number of leading <code>0</code> digits.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may include a <code>+</code> or <code>-</code> to indicate its sign.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is empty or contains only white space is converted to <emu-val>+0</emu-val>.\n            \n            </li>\n            <li>\n              <code>Infinity</code> and <code>-Infinity</code> are recognized as a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> but not as a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.\n            \n            </li>\n          </ul>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-runtime-semantics-mv-s\"><h1><span class=\"secnum\">7.1.3.1.1</span>#sec-runtime-semantics-mv-s Runtime Semantics: MV</h1>...</div></emu-clause>\n    "}, "sec-strict-equality-comparison": {"num": "7.2.15", "title": "#sec-strict-equality-comparison Strict Equality Comparison", "html": "<emu-clause id=\"sec-strict-equality-comparison\" aoid=\"Strict Equality Comparison\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-equality-comparison\">#sec-strict-equality-comparison</span> Strict Equality Comparison</h1>\n      <p>The comparison <var>x</var> === <var>y</var>, where <var>x</var> and <var>y</var> are values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number, then<ol><li>If <var>x</var> is <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>x</var> is the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as <var>y</var>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>+0</emu-val> and <var>y</var> is <emu-val>-0</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>-0</emu-val> and <var>y</var> is <emu-val>+0</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"SameValueNonNumber\"><a href=\"#sec-samevaluenonnumber\">SameValueNonNumber</a></emu-xref>(<var>x</var>, <var>y</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>This algorithm differs from the <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref> Algorithm in its treatment of signed zeroes and NaNs.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-samevalue": {"num": "7.2.10", "title": "#sec-samevalue SameValue ( x, y )", "html": "<emu-clause id=\"sec-samevalue\" aoid=\"SameValue\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-samevalue\">#sec-samevalue</span> SameValue ( <var>x</var>, <var>y</var> )</h1>\n      <p>The internal comparison abstract operation SameValue(<var>x</var>, <var>y</var>), where <var>x</var> and <var>y</var> are ECMAScript language values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number, then<ol><li>If <var>x</var> is <emu-val>NaN</emu-val> and <var>y</var> is <emu-val>NaN</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>+0</emu-val> and <var>y</var> is <emu-val>-0</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>x</var> is <emu-val>-0</emu-val> and <var>y</var> is <emu-val>+0</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>x</var> is the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as <var>y</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"SameValueNonNumber\"><a href=\"#sec-samevaluenonnumber\">SameValueNonNumber</a></emu-xref>(<var>x</var>, <var>y</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>This algorithm differs from the <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> Algorithm in its treatment of signed zeroes and NaNs.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-getmodifysetvalueinbuffer": {"num": "24.1.1.9", "title": "#sec-getmodifysetvalueinbuffer GetModifySetValueInBuffer ( arrayBuffer, byteIndex, type, value, op [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-getmodifysetvalueinbuffer\" aoid=\"GetModifySetValueInBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getmodifysetvalueinbuffer\">#sec-getmodifysetvalueinbuffer</span> GetModifySetValueInBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>value</var>, <var>op</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation GetModifySetValueInBuffer takes six parameters, a SharedArrayBuffer <var>arrayBuffer</var>, a nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>byteIndex</var>, a String <var>type</var>, a Number <var>value</var>, a semantic function <var>op</var>, and optionally a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>byteIndex</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value &#8805; 0.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>rawBytes</var> be <emu-xref aoid=\"NumberToRawBytes\"><a href=\"#sec-numbertorawbytes\">NumberToRawBytes</a></emu-xref>(<var>type</var>, <var>value</var>, <var>isLittleEndian</var>).</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>rawBytesRead</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> of nondeterministically chosen byte values.</li><li>NOTE: In implementations, <var>rawBytesRead</var> is the result of a load-link, of a load-exclusive, or of an operand of a read-modify-write instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>rmwEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadModifyWriteSharedMemory</a></emu-xref> { [[Order]]: <code>\"SeqCst\"</code>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var>, [[Payload]]: <var>rawBytes</var>, [[ModifyOp]]: <var>op</var> }.</li><li>Append <var>rmwEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>rmwEvent</var>, [[ChosenValue]]: <var>rawBytesRead</var> } to <var>execution</var>.[[ChosenValues]].</li><li>Return <emu-xref aoid=\"RawBytesToNumber\"><a href=\"#sec-rawbytestonumber\">RawBytesToNumber</a></emu-xref>(<var>type</var>, <var>rawBytesRead</var>, <var>isLittleEndian</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-applying-the-div-operator": {"num": "12.7.3.2", "title": "#sec-applying-the-div-operator Applying the / Operator", "html": "<emu-clause id=\"sec-applying-the-div-operator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applying-the-div-operator\">#sec-applying-the-div-operator</span> Applying the <code>/</code> Operator</h1>\n        <p>The <code>/</code> <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> performs division, producing the quotient of its operands. The left operand is the dividend and the right operand is the divisor. ECMAScript does not perform <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> division. The operands and result of all division operations are double-precision floating-point numbers. The result of division is determined by the specification of IEEE 754-2008 arithmetic:</p>\n        <ul>\n          <li>\n            If either operand is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            The sign of the result is positive if both operands have the same sign, negative if the operands have different signs.\n          \n          </li>\n          <li>\n            Division of an infinity by an infinity results in <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            Division of an infinity by a zero results in an infinity. The sign is determined by the rule already stated above.\n          \n          </li>\n          <li>\n            Division of an infinity by a nonzero finite value results in a signed infinity. The sign is determined by the rule already stated above.\n          \n          </li>\n          <li>\n            Division of a finite value by an infinity results in zero. The sign is determined by the rule already stated above.\n          \n          </li>\n          <li>\n            Division of a zero by a zero results in <emu-val>NaN</emu-val>; division of zero by any other finite value results in zero, with the sign determined by the rule already stated above.\n          \n          </li>\n          <li>\n            Division of a nonzero finite value by a zero results in a signed infinity. The sign is determined by the rule already stated above.\n          \n          </li>\n          <li>\n            In the remaining cases, where neither an infinity, nor a zero, nor <emu-val>NaN</emu-val> is involved, the quotient of the mathematical values of the operands is computed and rounded to the nearest representable value using IEEE 754-2008 roundTiesToEven. If the magnitude is too large to represent, the operation overflows; the result is then an infinity of appropriate sign. If the magnitude is too small to represent, the operation underflows and the result is a zero of the appropriate sign. The ECMAScript language requires support of gradual underflow as defined by IEEE 754-2008.\n          \n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-additional-syntax-numeric-literals": {"num": "B.1.1", "title": "#sec-additional-syntax-numeric-literals Numeric Literals", "html": "<emu-annex id=\"sec-additional-syntax-numeric-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</span> Numeric Literals</h1>\n      <p>The syntax and semantics of  <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref> is extended as follows except that this extension is not allowed for <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>:</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"NumericLiteral\" type=\"lexical\" id=\"prod-annexB-NumericLiteral\">\n    <emu-nt><a href=\"#prod-annexB-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f0df7a1f\"><emu-nt><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LegacyOctalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-LegacyOctalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"46c53d12\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b57dc7cf\"><emu-nt><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-DecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5d52a5ba\"><emu-nt><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonOctalDecimalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-NonOctalDecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"46667561\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-annexB-NonOctalDigit\">NonOctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c90efc20\"><emu-nt><a href=\"#prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">LegacyOctalLikeDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-annexB-NonOctalDigit\">NonOctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9778131\"><emu-nt><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LegacyOctalLikeDecimalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">LegacyOctalLikeDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"46c53d12\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b24ee1d6\"><emu-nt><a href=\"#prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">LegacyOctalLikeDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonOctalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-annexB-NonOctalDigit\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDigit\">NonOctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-additional-syntax-numeric-literals-status-semantics\"><h1><span class=\"secnum\">B.1.1.1</span>#sec-additional-syntax-numeric-literals-status-semantics Static Semantics</h1>...</div></emu-annex>\n\n    "}, "sec-integerindexedelementset": {"num": "9.4.5.9", "title": "#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )", "html": "<emu-clause id=\"sec-integerindexedelementset\" aoid=\"IntegerIndexedElementSet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementset\">#sec-integerindexedelementset</span> IntegerIndexedElementSet ( <var>O</var>, <var>index</var>, <var>value</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementSet with arguments <var>O</var>, <var>index</var>, and <var>value</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], and [[TypedArrayName]] internal slots.</li><li>Let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> = <emu-val>-0</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>length</var> be <var>O</var>.[[ArrayLength]].</li><li>If <var>index</var> &lt; 0 or <var>index</var> &#8805; <var>length</var>, return <emu-val>false</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>numValue</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Return <emu-val>true</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-agents": {"num": "8.7", "title": "#sec-agents Agents", "html": "<emu-clause id=\"sec-agents\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-agents\">#sec-agents</span> Agents</h1>\n\n    <p>An  <dfn id=\"agent\">agent</dfn> comprises a set of ECMAScript execution contexts, an <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, a <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, a set of named job queues, an  <dfn id=\"agent-record\">Agent Record</dfn>, and an  <dfn id=\"executing-thread\">executing thread</dfn>.  Except for the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref>, the constituents of an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> belong exclusively to that <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>.</p>\n    <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes the jobs in the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s job queues on the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s execution contexts independently of other agents, except that an <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> may be used as the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> by multiple agents, provided none of the agents sharing the thread have an <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> whose [[CanBlock]] property is <emu-val>true</emu-val>.</p>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Some web browsers share a single <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> across multiple unrelated tabs of a browser window, for example.</p>\n    </div></emu-note>\n    <p>While an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes the jobs in the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s job queues, the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is the  <dfn id=\"surrounding-agent\">surrounding agent</dfn> for the code in those jobs.  The code uses the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref> to access the specification level execution objects held within the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>: the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, the named job queues, and the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s fields.</p>\n    <emu-table id=\"table-agent-record\" caption=\"Agent Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-agent-record\">#table-agent-record</span>: <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> Fields</figcaption>\n      <table>\n        <tbody>\n          <tr>\n            <th>Field Name</th>\n            <th>Value</th>\n            <th>Meaning</th>\n          </tr>\n          <tr>\n            <td>[[LittleEndian]]</td>\n            <td>Boolean</td>\n            <td>The default value computed for the  <em>isLittleEndian</em> parameter when it is needed by the algorithms <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref> and <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>. The choice is implementation-dependent and should be the alternative that is most efficient for the implementation.  Once the value has been observed it cannot change.</td>\n          </tr>\n          <tr>\n            <td>[[CanBlock]]</td>\n            <td>Boolean</td>\n            <td>Determines whether the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> can block or not.</td>\n          </tr>\n          <tr>\n            <td>[[Signifier]]</td>\n            <td>Any globally-unique value</td>\n            <td>Uniquely identifies the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> within its <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree1]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on one-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree2]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on two-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[CandidateExecution]]</td>\n            <td>A <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref></td>\n            <td>See the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>.</td>\n          </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n\n    <p>Once the values of [[Signifier]], [[IsLockFree1]], and [[IsLockFree2]] have been observed by any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> they cannot change.</p>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The values of [[IsLockFree1]] and [[IsLockFree2]] are not necessarily determined by the hardware, but may also reflect implementation choices that can vary over time and between ECMAScript implementations.</p>\n\n      <p>There is no [[IsLockFree4]] property: 4-byte atomic operations are always lock-free.</p>\n\n      <p>In practice, if an atomic operation is implemented with any type of lock the operation is not lock-free.  Lock-free does not imply wait-free: there is no upper bound on how many machine steps may be required to complete a lock-free atomic operation.</p>\n\n      <p>That an atomic access of size  <em>n</em> is lock-free does not imply anything about the (perceived) atomicity of non-atomic accesses of size  <em>n</em>, specifically, non-atomic accesses may still be performed as a sequence of several separate memory accesses.  See <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> and <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> for details.</p>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-agentsignifier\"><h1><span class=\"secnum\">8.7.1</span>#sec-agentsignifier AgentSignifier ( )</h1>...</div><div id=\"excluded-sec-agentcansuspend\"><h1><span class=\"secnum\">8.7.2</span>#sec-agentcansuspend AgentCanSuspend ( )</h1>...</div></emu-clause>\n\n  "}, "sec-number-conversions": {"num": "A.6", "title": "#sec-number-conversions Number Conversions", "html": "<emu-annex id=\"sec-number-conversions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-conversions\">#sec-number-conversions</span> Number Conversions</h1>\n    <emu-production name=\"StringNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"9a4be900\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"fe58c396\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpace\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"2b0ea266\"><emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"db369ee0\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"477fcd23\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a3f639a9\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d60f01a5\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4afe8df8\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"8a89062c\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"24e27af7\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"SignedInteger\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n    <p>All grammar symbols not explicitly defined by the <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> grammar have the definitions used in the  <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\">Lexical Grammar for numeric literals</a></emu-xref>.</p>\n  </emu-annex>\n\n  "}, "sec-number.prototype.tostring": {"num": "20.1.3.6", "title": "#sec-number.prototype.tostring Number.prototype.toString ( [ radix ] )", "html": "<emu-clause id=\"sec-number.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.prototype.tostring\">#sec-number.prototype.tostring</span> Number.prototype.toString ( [ <var>radix</var> ] )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The optional <var>radix</var> should be an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value in the inclusive range 2 to 36. If <var>radix</var> is not present or is <emu-val>undefined</emu-val> the Number 10 is used as the value of <var>radix</var>.</p>\n        </div></emu-note>\n        <p>The following steps are performed:</p>\n        <emu-alg><ol><li>Let <var>x</var> be ?&#160;<emu-xref href=\"#sec-thisnumbervalue\"><a href=\"#sec-thisnumbervalue\">thisNumberValue</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>radix</var> is not present, let <var>radixNumber</var> be 10.</li><li>Else if <var>radix</var> is <emu-val>undefined</emu-val>, let <var>radixNumber</var> be 10.</li><li>Else, let <var>radixNumber</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>radix</var>).</li><li>If <var>radixNumber</var> &lt; 2 or <var>radixNumber</var> &gt; 36, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>radixNumber</var> = 10, return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>x</var>).</li><li>Return the String representation of this <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> using the radix specified by <var>radixNumber</var>. Letters <code>a</code>-<code>z</code> are used for digits with values 10 through 35. The precise algorithm is implementation-dependent, however the algorithm should be a generalization of that specified in <emu-xref href=\"#sec-tostring-applied-to-the-number-type\"><a href=\"#sec-tostring-applied-to-the-number-type\" class=\"excluded-xref\" excluded-id=\"sec-tostring-applied-to-the-number-type\">#sec-tostring-applied-to-the-number-type</a></emu-xref>.\n        </li></ol></emu-alg>\n        <p>The <code>toString</code> function is not generic; it throws a <emu-val>TypeError</emu-val> exception if its <emu-val>this</emu-val> value is not a Number or a Number object. Therefore, it cannot be transferred to other kinds of objects for use as a method.</p>\n        <p>The <code>\"length\"</code> property of the <code>toString</code> method is 1.</p>\n      </emu-clause>\n\n      "}, "sec-date-constructor": {"num": "20.3.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <code>Date</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Date</code> behaviour must include a <code>super</code> call to the <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <code>\"length\"</code> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.3.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.3.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.3.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-literals-numeric-literals": {"num": "11.8.3", "title": "#sec-literals-numeric-literals Numeric Literals", "html": "<emu-clause id=\"sec-literals-numeric-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</span> Numeric Literals</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"NumericLiteral\" type=\"lexical\" id=\"prod-NumericLiteral\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalLiteral\" type=\"lexical\" id=\"prod-DecimalLiteral\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fb5198a6\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"13dbaf21\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" id=\"prod-DecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalDigits\" type=\"lexical\" id=\"prod-DecimalDigits\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-DecimalDigit\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\" id=\"prod-NonZeroDigit\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ExponentPart\" type=\"lexical\" id=\"prod-ExponentPart\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\" id=\"prod-ExponentIndicator\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"SignedInteger\" type=\"lexical\" id=\"prod-SignedInteger\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" id=\"prod-BinaryIntegerLiteral\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BinaryDigits\" type=\"lexical\" id=\"prod-BinaryDigits\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BinaryDigit\" type=\"lexical\" oneof=\"\" id=\"prod-BinaryDigit\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" id=\"prod-OctalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"OctalDigits\" type=\"lexical\" id=\"prod-OctalDigits\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"OctalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-OctalDigit\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"HexIntegerLiteral\" type=\"lexical\" id=\"prod-HexIntegerLiteral\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"HexDigits\" type=\"lexical\" id=\"prod-HexDigits\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\" id=\"prod-HexDigit\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>The <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> immediately following a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> must not be an <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt> or <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For example: <code>3in</code> is an error and not the two input elements <code>3</code> and <code>in</code>.</p>\n      </div></emu-note>\n      <p>A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include  <emu-xref href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><emu-nt>LegacyOctalIntegerLiteral</emu-nt></a></emu-xref>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include  <emu-xref href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><emu-nt>NonOctalDecimalIntegerLiteral</emu-nt></a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-static-semantics-mv\"><h1><span class=\"secnum\">11.8.3.1</span>#sec-static-semantics-mv Static Semantics: MV</h1>...</div></emu-clause>\n\n    "}, "sec-unary-minus-operator-runtime-semantics-evaluation": {"num": "12.5.7.1", "title": "#sec-unary-minus-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-unary-minus-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-unary-minus-operator-runtime-semantics-evaluation\">#sec-unary-minus-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a03cca5c\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>If <var>oldValue</var> is <emu-val>NaN</emu-val>, return <emu-val>NaN</emu-val>.</li><li>Return the result of negating <var>oldValue</var>; that is, compute a Number with the same magnitude but opposite sign.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-object-initializer-runtime-semantics-evaluation": {"num": "12.2.6.7", "title": "#sec-object-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-object-initializer-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-runtime-semantics-evaluation\">#sec-object-initializer-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectLiteral\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>obj</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform ? PropertyDefinitionEvaluation of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> with arguments <var>obj</var> and <emu-val>true</emu-val>.</li><li>Return <var>obj</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the result of forming the value of the <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exprValue</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propName</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValue</var>).</li><li>Return ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propName</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-rawbytestonumber": {"num": "24.1.1.5", "title": "#sec-rawbytestonumber RawBytesToNumber ( type, rawBytes, isLittleEndian )", "html": "<emu-clause id=\"sec-rawbytestonumber\" aoid=\"RawBytesToNumber\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-rawbytestonumber\">#sec-rawbytestonumber</span> RawBytesToNumber ( <var>type</var>, <var>rawBytes</var>, <var>isLittleEndian</var> )</h1>\n        <p>The abstract operation RawBytesToNumber takes three parameters, a String <var>type</var>, a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>rawBytes</var>, and a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is <emu-val>false</emu-val>, reverse the order of the elements of <var>rawBytes</var>.</li><li>If <var>type</var> is <code>\"Float32\"</code>, then<ol><li>Let <var>value</var> be the byte elements of <var>rawBytes</var> concatenated and interpreted as a little-endian bit string encoding of an IEEE 754-2008 binary32 value.</li><li>If <var>value</var> is an IEEE 754-2008 binary32 NaN value, return the <emu-val>NaN</emu-val> <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</li><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that corresponds to <var>value</var>.</li></ol></li><li>If <var>type</var> is <code>\"Float64\"</code>, then<ol><li>Let <var>value</var> be the byte elements of <var>rawBytes</var> concatenated and interpreted as a little-endian bit string encoding of an IEEE 754-2008 binary64 value.</li><li>If <var>value</var> is an IEEE 754-2008 binary64 NaN value, return the <emu-val>NaN</emu-val> <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</li><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that corresponds to <var>value</var>.</li></ol></li><li>If the first code unit of <var>type</var> is the code unit 0x0055 (LATIN CAPITAL LETTER U), then<ol><li>Let <var>intValue</var> be the byte elements of <var>rawBytes</var> concatenated and interpreted as a bit string encoding of an unsigned little-endian binary number.</li></ol></li><li>Else,<ol><li>Let <var>intValue</var> be the byte elements of <var>rawBytes</var> concatenated and interpreted as a bit string encoding of a binary little-endian 2's complement number of bit length <var>elementSize</var> &#215; 8.</li></ol></li><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> that corresponds to <var>intValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-bitwise-not-operator-runtime-semantics-evaluation": {"num": "12.5.8.1", "title": "#sec-bitwise-not-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-bitwise-not-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bitwise-not-operator-runtime-semantics-evaluation\">#sec-bitwise-not-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"07d36a79\"><emu-t>~</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Return the result of applying bitwise complement to <var>oldValue</var>. The result is a signed 32-bit <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-subtraction-operator-minus": {"num": "12.8.4", "title": "#sec-subtraction-operator-minus The Subtraction Operator ( - )", "html": "<emu-clause id=\"sec-subtraction-operator-minus\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-subtraction-operator-minus\">#sec-subtraction-operator-minus</span> The Subtraction Operator ( <code>-</code> )</h1>\n\n      <div id=\"excluded-sec-subtraction-operator-minus-runtime-semantics-evaluation\"><h1><span class=\"secnum\">12.8.4.1</span>#sec-subtraction-operator-minus-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n    "}, "sec-numbers-and-dates": {"num": "20", "title": "#sec-numbers-and-dates Numbers and Dates", "html": "<emu-clause id=\"sec-numbers-and-dates\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numbers-and-dates\">#sec-numbers-and-dates</span> Numbers and Dates</h1>\n\n  <div id=\"excluded-sec-number-objects\"><h1><span class=\"secnum\">20.1</span>#sec-number-objects Number Objects</h1>...</div><div id=\"excluded-sec-math-object\"><h1><span class=\"secnum\">20.2</span>#sec-math-object The Math Object</h1>...</div><div id=\"excluded-sec-date-objects\"><h1><span class=\"secnum\">20.3</span>#sec-date-objects Date Objects</h1>...</div></emu-clause>\n\n"}, "sec-abstract-operations-for-arraybuffer-objects": {"num": "24.1.1", "title": "#sec-abstract-operations-for-arraybuffer-objects Abstract Operations For ArrayBuffer Objects", "html": "<emu-clause id=\"sec-abstract-operations-for-arraybuffer-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-arraybuffer-objects\">#sec-abstract-operations-for-arraybuffer-objects</span> Abstract Operations For ArrayBuffer Objects</h1>\n\n      <div id=\"excluded-sec-allocatearraybuffer\"><h1><span class=\"secnum\">24.1.1.1</span>#sec-allocatearraybuffer AllocateArrayBuffer ( constructor, byteLength )</h1>...</div><div id=\"excluded-sec-isdetachedbuffer\"><h1><span class=\"secnum\">24.1.1.2</span>#sec-isdetachedbuffer IsDetachedBuffer ( arrayBuffer )</h1>...</div><div id=\"excluded-sec-detacharraybuffer\"><h1><span class=\"secnum\">24.1.1.3</span>#sec-detacharraybuffer DetachArrayBuffer ( arrayBuffer [ , key ] )</h1>...</div><div id=\"excluded-sec-clonearraybuffer\"><h1><span class=\"secnum\">24.1.1.4</span>#sec-clonearraybuffer CloneArrayBuffer ( srcBuffer, srcByteOffset, srcLength, cloneConstructor )</h1>...</div><div id=\"excluded-sec-rawbytestonumber\"><h1><span class=\"secnum\">24.1.1.5</span>#sec-rawbytestonumber RawBytesToNumber ( type, rawBytes, isLittleEndian )</h1>...</div><div id=\"excluded-sec-getvaluefrombuffer\"><h1><span class=\"secnum\">24.1.1.6</span>#sec-getvaluefrombuffer GetValueFromBuffer ( arrayBuffer, byteIndex, type, isTypedArray, order [ , isLittleEndian ] )</h1>...</div><div id=\"excluded-sec-numbertorawbytes\"><h1><span class=\"secnum\">24.1.1.7</span>#sec-numbertorawbytes NumberToRawBytes ( type, value, isLittleEndian )</h1>...</div><div id=\"excluded-sec-setvalueinbuffer\"><h1><span class=\"secnum\">24.1.1.8</span>#sec-setvalueinbuffer SetValueInBuffer ( arrayBuffer, byteIndex, type, value, isTypedArray, order [ , isLittleEndian ] )</h1>...</div><div id=\"excluded-sec-getmodifysetvalueinbuffer\"><h1><span class=\"secnum\">24.1.1.9</span>#sec-getmodifysetvalueinbuffer GetModifySetValueInBuffer ( arrayBuffer, byteIndex, type, value, op [ , isLittleEndian ] )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-dataview-prototype-object": {"num": "24.3.4", "title": "#sec-properties-of-the-dataview-prototype-object Properties of the DataView Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-dataview-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-dataview-prototype-object\">#sec-properties-of-the-dataview-prototype-object</span> Properties of the DataView Prototype Object</h1>\n      <p>The DataView prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataViewPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an ordinary object.</li>\n        <li>does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-dataview.prototype.buffer\"><h1><span class=\"secnum\">24.3.4.1</span>#sec-get-dataview.prototype.buffer get DataView.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.bytelength\"><h1><span class=\"secnum\">24.3.4.2</span>#sec-get-dataview.prototype.bytelength get DataView.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.byteoffset\"><h1><span class=\"secnum\">24.3.4.3</span>#sec-get-dataview.prototype.byteoffset get DataView.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-dataview.prototype.constructor\"><h1><span class=\"secnum\">24.3.4.4</span>#sec-dataview.prototype.constructor DataView.prototype.constructor</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat32\"><h1><span class=\"secnum\">24.3.4.5</span>#sec-dataview.prototype.getfloat32 DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat64\"><h1><span class=\"secnum\">24.3.4.6</span>#sec-dataview.prototype.getfloat64 DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint8\"><h1><span class=\"secnum\">24.3.4.7</span>#sec-dataview.prototype.getint8 DataView.prototype.getInt8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint16\"><h1><span class=\"secnum\">24.3.4.8</span>#sec-dataview.prototype.getint16 DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint32\"><h1><span class=\"secnum\">24.3.4.9</span>#sec-dataview.prototype.getint32 DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint8\"><h1><span class=\"secnum\">24.3.4.10</span>#sec-dataview.prototype.getuint8 DataView.prototype.getUint8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint16\"><h1><span class=\"secnum\">24.3.4.11</span>#sec-dataview.prototype.getuint16 DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint32\"><h1><span class=\"secnum\">24.3.4.12</span>#sec-dataview.prototype.getuint32 DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat32\"><h1><span class=\"secnum\">24.3.4.13</span>#sec-dataview.prototype.setfloat32 DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat64\"><h1><span class=\"secnum\">24.3.4.14</span>#sec-dataview.prototype.setfloat64 DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint8\"><h1><span class=\"secnum\">24.3.4.15</span>#sec-dataview.prototype.setint8 DataView.prototype.setInt8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint16\"><h1><span class=\"secnum\">24.3.4.16</span>#sec-dataview.prototype.setint16 DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint32\"><h1><span class=\"secnum\">24.3.4.17</span>#sec-dataview.prototype.setint32 DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint8\"><h1><span class=\"secnum\">24.3.4.18</span>#sec-dataview.prototype.setuint8 DataView.prototype.setUint8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint16\"><h1><span class=\"secnum\">24.3.4.19</span>#sec-dataview.prototype.setuint16 DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint32\"><h1><span class=\"secnum\">24.3.4.20</span>#sec-dataview.prototype.setuint32 DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.3.4.21</span>#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-binary-bitwise-operators-runtime-semantics-evaluation": {"num": "12.12.3", "title": "#sec-binary-bitwise-operators-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-binary-bitwise-operators-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-binary-bitwise-operators-runtime-semantics-evaluation\">#sec-binary-bitwise-operators-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <p>The production  <emu-grammar type=\"example\"><emu-production name=\"A\" collapsed=\"\" id=\"prod-A\" class=\" inline\">\n    <emu-nt><a href=\"#prod-A\">A</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"262863af\"><emu-nt><a href=\"#prod-A\">A</a></emu-nt><emu-t placeholder=\"\">@</emu-t><emu-nt>B</emu-nt></emu-rhs>\n</emu-production></emu-grammar>, where @ is one of the bitwise operators in the productions above, is evaluated as follows:</p>\n      <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <var>A</var>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <var>B</var>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>rval</var>).</li><li>Return the result of applying the bitwise operator @ to <var>lnum</var> and <var>rnum</var>. The result is a signed 32-bit <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>.\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-hasprimitivebase": {"num": "6.2.4.4", "title": "#sec-hasprimitivebase HasPrimitiveBase ( V )", "html": "<emu-clause id=\"sec-hasprimitivebase\" aoid=\"HasPrimitiveBase\" oldids=\"ao-hasprimitivebase\">\n        <span id=\"ao-hasprimitivebase\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasprimitivebase\">#sec-hasprimitivebase</span> HasPrimitiveBase ( <var>V</var> )</h1>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>'s base value component) is Boolean, String, Symbol, or Number, return <emu-val>true</emu-val>; otherwise return <emu-val>false</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects": {"num": "9.4.5", "title": "#sec-integer-indexed-exotic-objects Integer-Indexed Exotic Objects", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects\">#sec-integer-indexed-exotic-objects</span> Integer-Indexed Exotic Objects</h1>\n      <p>An  <dfn id=\"integer-indexed-exotic-object\">Integer-Indexed exotic object</dfn> is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> that performs special handling of <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> property keys.</p>\n      <p><emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic objects</a></emu-xref> have the same internal slots as ordinary objects and additionally [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], and [[TypedArrayName]] internal slots.</p>\n      <p><emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic objects</a></emu-xref> provide alternative definitions for the following internal methods. All of the other <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> essential internal methods that are not defined below are as specified in  <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-integer-indexed-exotic-objects-getownproperty-p\"><h1><span class=\"secnum\">9.4.5.1</span>#sec-integer-indexed-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-hasproperty-p\"><h1><span class=\"secnum\">9.4.5.2</span>#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-defineownproperty-p-desc\"><h1><span class=\"secnum\">9.4.5.3</span>#sec-integer-indexed-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-get-p-receiver\"><h1><span class=\"secnum\">9.4.5.4</span>#sec-integer-indexed-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-set-p-v-receiver\"><h1><span class=\"secnum\">9.4.5.5</span>#sec-integer-indexed-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-ownpropertykeys\"><h1><span class=\"secnum\">9.4.5.6</span>#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )</h1>...</div><div id=\"excluded-sec-integerindexedobjectcreate\"><h1><span class=\"secnum\">9.4.5.7</span>#sec-integerindexedobjectcreate IntegerIndexedObjectCreate ( prototype, internalSlotsList )</h1>...</div><div id=\"excluded-sec-integerindexedelementget\"><h1><span class=\"secnum\">9.4.5.8</span>#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )</h1>...</div><div id=\"excluded-sec-integerindexedelementset\"><h1><span class=\"secnum\">9.4.5.9</span>#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )</h1>...</div></emu-clause>\n\n    "}, "sec-integerindexedelementget": {"num": "9.4.5.8", "title": "#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )", "html": "<emu-clause id=\"sec-integerindexedelementget\" aoid=\"IntegerIndexedElementGet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementget\">#sec-integerindexedelementget</span> IntegerIndexedElementGet ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementGet with arguments <var>O</var> and <var>index</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], and [[TypedArrayName]] internal slots.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>index</var> = <emu-val>-0</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>length</var> be <var>O</var>.[[ArrayLength]].</li><li>If <var>index</var> &lt; 0 or <var>index</var> &#8805; <var>length</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-samevaluezero": {"num": "7.2.11", "title": "#sec-samevaluezero SameValueZero ( x, y )", "html": "<emu-clause id=\"sec-samevaluezero\" aoid=\"SameValueZero\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-samevaluezero\">#sec-samevaluezero</span> SameValueZero ( <var>x</var>, <var>y</var> )</h1>\n      <p>The internal comparison abstract operation SameValueZero(<var>x</var>, <var>y</var>), where <var>x</var> and <var>y</var> are ECMAScript language values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number, then<ol><li>If <var>x</var> is <emu-val>NaN</emu-val> and <var>y</var> is <emu-val>NaN</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>+0</emu-val> and <var>y</var> is <emu-val>-0</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>-0</emu-val> and <var>y</var> is <emu-val>+0</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as <var>y</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-xref aoid=\"SameValueNonNumber\"><a href=\"#sec-samevaluenonnumber\">SameValueNonNumber</a></emu-xref>(<var>x</var>, <var>y</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>SameValueZero differs from <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref> only in its treatment of <emu-val>+0</emu-val> and <emu-val>-0</emu-val>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-ownpropertykeys": {"num": "9.4.5.6", "title": "#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], and [[TypedArrayName]] internal slots.</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>len</var>, in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>i</var>) as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-serializejsonproperty": {"num": "24.5.2.1", "title": "#sec-serializejsonproperty Runtime Semantics: SerializeJSONProperty ( key, holder )", "html": "<emu-clause id=\"sec-serializejsonproperty\" aoid=\"SerializeJSONProperty\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-serializejsonproperty\">#sec-serializejsonproperty</span> Runtime Semantics: SerializeJSONProperty ( <var>key</var>, <var>holder</var> )</h1>\n        <p>The abstract operation SerializeJSONProperty with arguments <var>key</var>, and <var>holder</var> has access to <var>ReplacerFunction</var> from the invocation of the <code>stringify</code> method. Its algorithm is as follows:</p>\n        <emu-alg><ol><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>holder</var>, <var>key</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object, then<ol><li>Let <var>toJSON</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>value</var>, <code>\"toJSON\"</code>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>toJSON</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>toJSON</var>, <var>value</var>, &#171; <var>key</var> &#187;).</li></ol></li></ol></li><li>If <var>ReplacerFunction</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>ReplacerFunction</var>, <var>holder</var>, &#171; <var>key</var>, <var>value</var> &#187;).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object, then<ol><li>If <var>value</var> has a [[NumberData]] internal slot, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li></ol></li><li>Else if <var>value</var> has a [[StringData]] internal slot, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>value</var>).</li></ol></li><li>Else if <var>value</var> has a [[BooleanData]] internal slot, then<ol><li>Set <var>value</var> to <var>value</var>.[[BooleanData]].</li></ol></li></ol></li><li>If <var>value</var> is <emu-val>null</emu-val>, return <code>\"null\"</code>.</li><li>If <var>value</var> is <emu-val>true</emu-val>, return <code>\"true\"</code>.</li><li>If <var>value</var> is <emu-val>false</emu-val>, return <code>\"false\"</code>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is String, return <emu-xref aoid=\"QuoteJSONString\"><a href=\"#sec-quotejsonstring\">QuoteJSONString</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number, then<ol><li>If <var>value</var> is finite, return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>value</var>).</li><li>Return <code>\"null\"</code>.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>value</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>value</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, return ?&#160;<emu-xref aoid=\"SerializeJSONArray\"><a href=\"#sec-serializejsonarray\">SerializeJSONArray</a></emu-xref>(<var>value</var>).</li><li>Return ?&#160;<emu-xref aoid=\"SerializeJSONObject\"><a href=\"#sec-serializejsonobject\">SerializeJSONObject</a></emu-xref>(<var>value</var>).</li></ol></li><li>Return <emu-val>undefined</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-numbertorawbytes": {"num": "24.1.1.7", "title": "#sec-numbertorawbytes NumberToRawBytes ( type, value, isLittleEndian )", "html": "<emu-clause id=\"sec-numbertorawbytes\" aoid=\"NumberToRawBytes\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numbertorawbytes\">#sec-numbertorawbytes</span> NumberToRawBytes ( <var>type</var>, <var>value</var>, <var>isLittleEndian</var> )</h1>\n        <p>The abstract operation NumberToRawBytes takes three parameters, a String <var>type</var>, a Number <var>value</var>, and a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li>If <var>type</var> is <code>\"Float32\"</code>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the 4 bytes that are the result of converting <var>value</var> to IEEE 754-2008 binary32 format using roundTiesToEven mode. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are arranged in big endian order. Otherwise, the bytes are arranged in little endian order. If <var>value</var> is <emu-val>NaN</emu-val>, <var>rawBytes</var> may be set to any implementation chosen IEEE 754-2008 binary32 format Not-a-Number encoding. An implementation must always choose the same encoding for each implementation distinguishable <emu-val>NaN</emu-val> value.</li></ol></li><li>Else if <var>type</var> is <code>\"Float64\"</code>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the 8 bytes that are the IEEE 754-2008 binary64 format encoding of <var>value</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are arranged in big endian order. Otherwise, the bytes are arranged in little endian order. If <var>value</var> is <emu-val>NaN</emu-val>, <var>rawBytes</var> may be set to any implementation chosen IEEE 754-2008 binary64 format Not-a-Number encoding. An implementation must always choose the same encoding for each implementation distinguishable <emu-val>NaN</emu-val> value.</li></ol></li><li>Else,<ol><li>Let <var>n</var> be the Element Size specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>Let <var>convOp</var> be the abstract operation named in the Conversion Operation column in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>Let <var>intValue</var> be <var>convOp</var>(<var>value</var>).</li><li>If <var>intValue</var> &#8805; 0, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <var>n</var>-byte binary encoding of <var>intValue</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are ordered in big endian order. Otherwise, the bytes are ordered in little endian order.</li></ol></li><li>Else,<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <var>n</var>-byte binary 2's complement encoding of <var>intValue</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are ordered in big endian order. Otherwise, the bytes are ordered in little endian order.</li></ol></li></ol></li><li>Return <var>rawBytes</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-postfix-increment-operator-runtime-semantics-evaluation": {"num": "12.4.4.1", "title": "#sec-postfix-increment-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-postfix-increment-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-postfix-increment-operator-runtime-semantics-evaluation\">#sec-postfix-increment-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8bf8e31b\"><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>++</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lhs</var> be the result of evaluating <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lhs</var>)).</li><li>Let <var>newValue</var> be the result of adding the value 1 to <var>oldValue</var>, using the same rules as for the <code>+</code> operator (see <emu-xref href=\"#sec-applying-the-additive-operators-to-numbers\"><a href=\"#sec-applying-the-additive-operators-to-numbers\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</a></emu-xref>).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>newValue</var>).</li><li>Return <var>oldValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-date-objects": {"num": "20.3", "title": "#sec-date-objects Date Objects", "html": "<emu-clause id=\"sec-date-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-objects\">#sec-date-objects</span> Date Objects</h1>\n\n    <div id=\"excluded-sec-overview-of-date-objects-and-definitions-of-abstract-operations\"><h1><span class=\"secnum\">20.3.1</span>#sec-overview-of-date-objects-and-definitions-of-abstract-operations Overview of Date Objects and Definitions of Abstract Operations</h1>...</div><div id=\"excluded-sec-date-constructor\"><h1><span class=\"secnum\">20.3.2</span>#sec-date-constructor The Date Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-date-constructor\"><h1><span class=\"secnum\">20.3.3</span>#sec-properties-of-the-date-constructor Properties of the Date Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-date-prototype-object\"><h1><span class=\"secnum\">20.3.4</span>#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-date-instances\"><h1><span class=\"secnum\">20.3.5</span>#sec-properties-of-date-instances Properties of Date Instances</h1>...</div></emu-clause>\n"}, "sec-postfix-decrement-operator-runtime-semantics-evaluation": {"num": "12.4.5.1", "title": "#sec-postfix-decrement-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-postfix-decrement-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-postfix-decrement-operator-runtime-semantics-evaluation\">#sec-postfix-decrement-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8d1d2d72\"><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>--</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lhs</var> be the result of evaluating <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lhs</var>)).</li><li>Let <var>newValue</var> be the result of subtracting the value 1 from <var>oldValue</var>, using the same rules as for the <code>-</code> operator (see <emu-xref href=\"#sec-applying-the-additive-operators-to-numbers\"><a href=\"#sec-applying-the-additive-operators-to-numbers\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</a></emu-xref>).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>newValue</var>).</li><li>Return <var>oldValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-allocatetypedarray": {"num": "22.2.4.2.1", "title": "#sec-allocatetypedarray Runtime Semantics: AllocateTypedArray ( constructorName, newTarget, defaultProto [ , length ] )", "html": "<emu-clause id=\"sec-allocatetypedarray\" aoid=\"AllocateTypedArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatetypedarray\">#sec-allocatetypedarray</span> Runtime Semantics: AllocateTypedArray ( <var>constructorName</var>, <var>newTarget</var>, <var>defaultProto</var> [ , <var>length</var> ] )</h1>\n          <p>The abstract operation AllocateTypedArray with arguments <var>constructorName</var>, <var>newTarget</var>, <var>defaultProto</var> and optional argument <var>length</var> is used to validate and create an instance of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. <var>constructorName</var> is required to be the name of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>. If the <var>length</var> argument is passed, an ArrayBuffer of that length is also allocated and associated with the new TypedArray instance. AllocateTypedArray provides common semantics that is used by all of the <var>TypedArray</var> overloads. AllocateTypedArray performs the following steps:</p>\n          <emu-alg><ol><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>defaultProto</var>).</li><li>Let <var>obj</var> be <emu-xref aoid=\"IntegerIndexedObjectCreate\"><a href=\"#sec-integerindexedobjectcreate\">IntegerIndexedObjectCreate</a></emu-xref>(<var>proto</var>, &#171; [[ViewedArrayBuffer]], [[TypedArrayName]], [[ByteLength]], [[ByteOffset]], [[ArrayLength]] &#187;).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var>.[[ViewedArrayBuffer]] is <emu-val>undefined</emu-val>.</li><li>Set <var>obj</var>.[[TypedArrayName]] to <var>constructorName</var>.</li><li>If <var>length</var> is not present, then<ol><li>Set <var>obj</var>.[[ByteLength]] to 0.</li><li>Set <var>obj</var>.[[ByteOffset]] to 0.</li><li>Set <var>obj</var>.[[ArrayLength]] to 0.</li></ol></li><li>Else,<ol><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>obj</var>, <var>length</var>).</li></ol></li><li>Return <var>obj</var>.\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-validatesharedintegertypedarray": {"num": "24.4.1.1", "title": "#sec-validatesharedintegertypedarray ValidateSharedIntegerTypedArray ( typedArray [ , onlyInt32 ] )", "html": "<emu-clause id=\"sec-validatesharedintegertypedarray\" aoid=\"ValidateSharedIntegerTypedArray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validatesharedintegertypedarray\">#sec-validatesharedintegertypedarray</span> ValidateSharedIntegerTypedArray ( <var>typedArray</var> [ , <var>onlyInt32</var> ] )</h1>\n        <p>The abstract operation ValidateSharedIntegerTypedArray takes one argument <var>typedArray</var> and an optional Boolean <var>onlyInt32</var>. It performs the following steps:</p>\n        <emu-alg><ol><li>If <var>onlyInt32</var> is not present, set <var>onlyInt32</var> to <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>typedArray</var>, [[TypedArrayName]]).</li><li>Let <var>typeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>onlyInt32</var> is <emu-val>true</emu-val>, then<ol><li>If <var>typeName</var> is not <code>\"Int32Array\"</code>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If <var>typeName</var> is not <code>\"Int8Array\"</code>, <code>\"Uint8Array\"</code>, <code>\"Int16Array\"</code>, <code>\"Uint16Array\"</code>, <code>\"Int32Array\"</code>, or <code>\"Uint32Array\"</code>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>buffer</var> be <var>typedArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>buffer</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atomics.compareexchange": {"num": "24.4.4", "title": "#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )", "html": "<emu-clause id=\"sec-atomics.compareexchange\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.compareexchange\">#sec-atomics.compareexchange</span> Atomics.compareExchange ( <var>typedArray</var>, <var>index</var>, <var>expectedValue</var>, <var>replacementValue</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>replacementValue</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>isLittleEndian</var> be the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>expectedBytes</var> be <emu-xref aoid=\"NumberToRawBytes\"><a href=\"#sec-numbertorawbytes\">NumberToRawBytes</a></emu-xref>(<var>elementType</var>, <var>expected</var>, <var>isLittleEndian</var>).</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <code>compareExchange</code> denote a semantic function of two <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values arguments that returns the second argument if the first argument is element-wise equal to <var>expectedBytes</var>.</li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>replacement</var>, <code>compareExchange</code>).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype.set-typedarray-offset": {"num": "22.2.3.23.2", "title": "#sec-%typedarray%.prototype.set-typedarray-offset %TypedArray%.prototype.set ( typedArray [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-typedarray-offset\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-typedarray-offset\">#sec-%typedarray%.prototype.set-typedarray-offset</span> %TypedArray%.prototype.set ( <var>typedArray</var> [ , <var>offset</var> ] )</h1>\n          <p>Sets multiple values in this <var>TypedArray</var>, reading the values from the <var>typedArray</var> argument object. The optional <var>offset</var> value indicates the first element index in this <var>TypedArray</var> where values are written. If omitted, it is assumed to be 0.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> has a [[TypedArrayName]] internal slot. If it does not, the definition in <emu-xref href=\"#sec-%typedarray%.prototype.set-array-offset\"><a href=\"#sec-%typedarray%.prototype.set-array-offset\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%.prototype.set-array-offset\">#sec-%typedarray%.prototype.set-array-offset</a></emu-xref> applies.</li><li>Let <var>target</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>target</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>target</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>targetOffset</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>offset</var>).</li><li>If <var>targetOffset</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>srcBuffer</var> be <var>typedArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>srcName</var> be the String value of <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcLength</var> be <var>typedArray</var>.[[ArrayLength]].</li><li>Let <var>srcByteOffset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If both <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcBuffer</var>) and <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>targetBuffer</var>) are <emu-val>true</emu-val>, then<ol><li>If <var>srcBuffer</var>.[[ArrayBufferData]] and <var>targetBuffer</var>.[[ArrayBufferData]] are the same <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values, let <var>same</var> be <emu-val>true</emu-val>; else let <var>same</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else, let <var>same</var> be <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcBuffer</var>, <var>targetBuffer</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>srcByteLength</var> be <var>typedArray</var>.[[ByteLength]].</li><li>Set <var>srcBuffer</var> to ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcByteLength</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li><li>NOTE: <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref> is used to clone <var>srcBuffer</var> because is it known to not have any observable side-effects.</li><li>Let <var>srcByteIndex</var> be 0.</li></ol></li><li>Else, let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcType</var>, <var>targetType</var>) is <emu-val>true</emu-val>, then<ol><li>NOTE: If <var>srcType</var> and <var>targetType</var> are the same, the transfer must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var><ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <code>\"Uint8\"</code>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <code>\"Uint8\"</code>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var><ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-type-conversion": {"num": "7.1", "title": "#sec-type-conversion Type Conversion", "html": "<emu-clause id=\"sec-type-conversion\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-type-conversion\">#sec-type-conversion</span> Type Conversion</h1>\n    <p>The ECMAScript language implicitly performs automatic type conversion as needed. To clarify the semantics of certain constructs it is useful to define a set of conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref>. The conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are polymorphic; they can accept a value of any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language type</a></emu-xref>. But no other specification types are used with these operations.</p>\n\n    <div id=\"excluded-sec-toprimitive\"><h1><span class=\"secnum\">7.1.1</span>#sec-toprimitive ToPrimitive ( input [ , PreferredType ] )</h1>...</div><div id=\"excluded-sec-toboolean\"><h1><span class=\"secnum\">7.1.2</span>#sec-toboolean ToBoolean ( argument )</h1>...</div><div id=\"excluded-sec-tonumber\"><h1><span class=\"secnum\">7.1.3</span>#sec-tonumber ToNumber ( argument )</h1>...</div><div id=\"excluded-sec-tointeger\"><h1><span class=\"secnum\">7.1.4</span>#sec-tointeger ToInteger ( argument )</h1>...</div><div id=\"excluded-sec-toint32\"><h1><span class=\"secnum\">7.1.5</span>#sec-toint32 ToInt32 ( argument )</h1>...</div><div id=\"excluded-sec-touint32\"><h1><span class=\"secnum\">7.1.6</span>#sec-touint32 ToUint32 ( argument )</h1>...</div><div id=\"excluded-sec-toint16\"><h1><span class=\"secnum\">7.1.7</span>#sec-toint16 ToInt16 ( argument )</h1>...</div><div id=\"excluded-sec-touint16\"><h1><span class=\"secnum\">7.1.8</span>#sec-touint16 ToUint16 ( argument )</h1>...</div><div id=\"excluded-sec-toint8\"><h1><span class=\"secnum\">7.1.9</span>#sec-toint8 ToInt8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8\"><h1><span class=\"secnum\">7.1.10</span>#sec-touint8 ToUint8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8clamp\"><h1><span class=\"secnum\">7.1.11</span>#sec-touint8clamp ToUint8Clamp ( argument )</h1>...</div><div id=\"excluded-sec-tostring\"><h1><span class=\"secnum\">7.1.12</span>#sec-tostring ToString ( argument )</h1>...</div><div id=\"excluded-sec-toobject\"><h1><span class=\"secnum\">7.1.13</span>#sec-toobject ToObject ( argument )</h1>...</div><div id=\"excluded-sec-topropertykey\"><h1><span class=\"secnum\">7.1.14</span>#sec-topropertykey ToPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-tolength\"><h1><span class=\"secnum\">7.1.15</span>#sec-tolength ToLength ( argument )</h1>...</div><div id=\"excluded-sec-canonicalnumericindexstring\"><h1><span class=\"secnum\">7.1.16</span>#sec-canonicalnumericindexstring CanonicalNumericIndexString ( argument )</h1>...</div><div id=\"excluded-sec-toindex\"><h1><span class=\"secnum\">7.1.17</span>#sec-toindex ToIndex ( value )</h1>...</div></emu-clause>\n\n  "}, "sec-integerindexedobjectcreate": {"num": "9.4.5.7", "title": "#sec-integerindexedobjectcreate IntegerIndexedObjectCreate ( prototype, internalSlotsList )", "html": "<emu-clause id=\"sec-integerindexedobjectcreate\" aoid=\"IntegerIndexedObjectCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedobjectcreate\">#sec-integerindexedobjectcreate</span> IntegerIndexedObjectCreate ( <var>prototype</var>, <var>internalSlotsList</var> )</h1>\n        <p>The abstract operation IntegerIndexedObjectCreate with arguments <var>prototype</var> and <var>internalSlotsList</var> is used to specify the creation of new  <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic objects</a></emu-xref>. The argument <var>internalSlotsList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of the names of additional internal slots that must be defined as part of the object. IntegerIndexedObjectCreate performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>internalSlotsList</var> contains the names [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], and [[TypedArrayName]].</li><li>Let <var>A</var> be a newly created <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> with an internal slot for each name in <var>internalSlotsList</var>.</li><li>Set <var>A</var>'s essential internal methods to the default ordinary object definitions specified in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>.</li><li>Set <var>A</var>.[[GetOwnProperty]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-getownproperty-p\"><a href=\"#sec-integer-indexed-exotic-objects-getownproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-getownproperty-p\">#sec-integer-indexed-exotic-objects-getownproperty-p</a></emu-xref>.</li><li>Set <var>A</var>.[[HasProperty]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-hasproperty-p\"><a href=\"#sec-integer-indexed-exotic-objects-hasproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</a></emu-xref>.</li><li>Set <var>A</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-integer-indexed-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-defineownproperty-p-desc\">#sec-integer-indexed-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Set <var>A</var>.[[Get]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-get-p-receiver\"><a href=\"#sec-integer-indexed-exotic-objects-get-p-receiver\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-get-p-receiver\">#sec-integer-indexed-exotic-objects-get-p-receiver</a></emu-xref>.</li><li>Set <var>A</var>.[[Set]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-set-p-v-receiver\"><a href=\"#sec-integer-indexed-exotic-objects-set-p-v-receiver\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-set-p-v-receiver\">#sec-integer-indexed-exotic-objects-set-p-v-receiver</a></emu-xref>.</li><li>Set <var>A</var>.[[OwnPropertyKeys]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-ownpropertykeys\"><a href=\"#sec-integer-indexed-exotic-objects-ownpropertykeys\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</a></emu-xref>.</li><li>Set <var>A</var>.[[Prototype]] to <var>prototype</var>.</li><li>Set <var>A</var>.[[Extensible]] to <emu-val>true</emu-val>.</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ecmascript-language-types-number-type": {"num": "6.1.6", "title": "#sec-ecmascript-language-types-number-type The Number Type", "html": "<emu-clause id=\"sec-ecmascript-language-types-number-type\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</span> The Number Type</h1>\n      <p>The Number type has exactly 18437736874454810627<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> + 3<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) values, representing the double-precision 64-bit format IEEE 754-2008 values as specified in the IEEE Standard for Binary Floating-Point Arithmetic, except that the 9007199254740990<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) distinct &#8220;Not-a-Number&#8221; values of the IEEE Standard are represented in ECMAScript as a single special <emu-val>NaN</emu-val> value. (Note that the <emu-val>NaN</emu-val> value is produced by the program expression <code>NaN</code>.) In some implementations, external code might be able to detect a difference between various Not-a-Number values, but such behaviour is implementation-dependent; to ECMAScript code, all <emu-val>NaN</emu-val> values are indistinguishable from each other.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The bit pattern that might be observed in an ArrayBuffer (see  <emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>) or a SharedArrayBuffer (see  <emu-xref href=\"#sec-sharedarraybuffer-objects\"><a href=\"#sec-sharedarraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-objects\">#sec-sharedarraybuffer-objects</a></emu-xref>) after a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> has been stored into it is not necessarily the same as the internal representation of that <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> used by the ECMAScript implementation.</p>\n      </div></emu-note>\n      <p>There are two other special values, called <emu-val>positive Infinity</emu-val> and <emu-val>negative Infinity</emu-val>. For brevity, these values are also referred to for expository purposes by the symbols <emu-val>+&#8734;</emu-val> and <emu-val>-&#8734;</emu-val>, respectively. (Note that these two infinite Number values are produced by the program expressions <code>+Infinity</code> (or simply <code>Infinity</code>) and <code>-Infinity</code>.)</p>\n      <p>The other 18437736874454810624<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>) values are called the finite numbers. Half of these are positive numbers and half are negative numbers; for every finite positive <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> there is a corresponding negative value having the same magnitude.</p>\n      <p>Note that there is both a <emu-val>positive zero</emu-val> and a <emu-val>negative zero</emu-val>. For brevity, these values are also referred to for expository purposes by the symbols <emu-val>+0</emu-val> and <emu-val>-0</emu-val>, respectively. (Note that these two different zero Number values are produced by the program expressions <code>+0</code> (or simply <code>0</code>) and <code>-0</code>.)</p>\n      <p>The 18437736874454810622<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) finite nonzero values are of two kinds:</p>\n      <p>18428729675200069632<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>54<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>) of them are normalized, having the form</p>\n      <div class=\"math-display\">\n        <var>s</var> &#215; <var>m</var> &#215; 2<sup><var>e</var></sup>\n      </div>\n      <p>where <var>s</var> is +1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> or -1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, <var>m</var> is a positive <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> less than 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> but not less than 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>52<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup>, and <var>e</var> is a <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> ranging from -1074<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> to 971<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, inclusive.</p>\n      <p>The remaining 9007199254740990<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) values are denormalized, having the form</p>\n      <div class=\"math-display\">\n        <var>s</var> &#215; <var>m</var> &#215; 2<sup><var>e</var></sup>\n      </div>\n      <p>where <var>s</var> is +1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> or -1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, <var>m</var> is a positive <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> less than 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>52<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup>, and <var>e</var> is -1074<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.</p>\n      <p>Note that all the positive and negative mathematical integers whose magnitude is no greater than 2<sup>53</sup> are representable in the Number type (indeed, the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> 0 has two representations, <emu-val>+0</emu-val> and <emu-val>-0</emu-val>).</p>\n      <p>A finite number has an  <em>odd significand</em> if it is nonzero and the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> <var>m</var> used to express it (in one of the two forms shown above) is odd. Otherwise, it has an  <em>even significand</em>.</p>\n      <p>In this specification, the phrase &#8220;the  <dfn id=\"number-value\">Number value</dfn> for <var>x</var>&#8221; where <var>x</var> represents an exact real mathematical quantity (which might even be an irrational number such as &#960;) means a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> chosen in the following manner. Consider the set of all finite values of the Number type, with <emu-val>-0</emu-val> removed and with two additional values added to it that are not representable in the Number type, namely 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> (which is  <emu-eqn class=\"inline\">+1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>971<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>) and  <emu-eqn class=\"inline\">-2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn> (which is  <emu-eqn class=\"inline\">-1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>971<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>). Choose the member of this set that is closest in value to <var>x</var>. If two values of the set are equally close, then the one with an even significand is chosen; for this purpose, the two extra values 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> and  <emu-eqn class=\"inline\">-2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn> are considered to have even significands. Finally, if 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> was chosen, replace it with <emu-val>+&#8734;</emu-val>; if  <emu-eqn class=\"inline\">-2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn> was chosen, replace it with <emu-val>-&#8734;</emu-val>; if <emu-val>+0</emu-val> was chosen, replace it with <emu-val>-0</emu-val> if and only if <var>x</var> is less than zero; any other chosen value is used unchanged. The result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>. (This procedure corresponds exactly to the behaviour of the IEEE 754-2008 roundTiesToEven mode.)</p>\n      <p>Some ECMAScript operators deal only with integers in specific ranges such as  <emu-eqn class=\"inline\">-2<sup>31</sup></emu-eqn> through  <emu-eqn class=\"inline\">2<sup>31</sup> - 1</emu-eqn>, inclusive, or in the range 0 through  <emu-eqn class=\"inline\">2<sup>16</sup> - 1</emu-eqn>, inclusive. These operators accept any value of the Number type but first convert each such value to an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value in the expected range. See the descriptions of the numeric conversion operations in  <emu-xref href=\"#sec-type-conversion\"><a href=\"#sec-type-conversion\" class=\"excluded-xref\" excluded-id=\"sec-type-conversion\">#sec-type-conversion</a></emu-xref>.</p>\n    </emu-clause>\n\n    "}, "sec-properties-of-the-date-constructor": {"num": "20.3.3", "title": "#sec-properties-of-the-date-constructor Properties of the Date Constructor", "html": "<emu-clause id=\"sec-properties-of-the-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-constructor\">#sec-properties-of-the-date-constructor</span> Properties of the Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-date.now\"><h1><span class=\"secnum\">20.3.3.1</span>#sec-date.now Date.now ( )</h1>...</div><div id=\"excluded-sec-date.parse\"><h1><span class=\"secnum\">20.3.3.2</span>#sec-date.parse Date.parse ( string )</h1>...</div><div id=\"excluded-sec-date.prototype\"><h1><span class=\"secnum\">20.3.3.3</span>#sec-date.prototype Date.prototype</h1>...</div><div id=\"excluded-sec-date.utc\"><h1><span class=\"secnum\">20.3.3.4</span>#sec-date.utc Date.UTC ( year [ , month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-%typedarray%.prototype.fill": {"num": "22.2.3.8", "title": "#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.fill\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.fill\">#sec-%typedarray%.prototype.fill</span> %TypedArray%.prototype.fill ( <var>value</var> [ , <var>start</var> [ , <var>end</var> ] ] )</h1>\n        <p>The interpretation and use of the arguments of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.fill</code> are the same as for <code>Array.prototype.fill</code> as defined in  <emu-xref href=\"#sec-array.prototype.fill\"><a href=\"#sec-array.prototype.fill\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.fill\">#sec-array.prototype.fill</a></emu-xref>.</p>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>O</var>).</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> &lt; 0, let <var>k</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeStart</var>), 0); else let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeEnd</var>), 0); else let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]]) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Repeat, while <var>k</var> &lt; <var>final</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Perform !&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>value</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-toobject": {"num": "7.1.13", "title": "#sec-toobject ToObject ( argument )", "html": "<emu-clause id=\"sec-toobject\" aoid=\"ToObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toobject\">#sec-toobject</span> ToObject ( <var>argument</var> )</h1>\n      <p>The abstract operation ToObject converts <var>argument</var> to a value of type Object according to  <emu-xref href=\"#table-13\"><a href=\"#table-13\" class=\"excluded-xref\" excluded-id=\"table-13\">#table-13</a></emu-xref>:</p>\n      <emu-table id=\"table-13\" caption=\"ToObject Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-13\">#table-13</span>: <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              Return a new Boolean object whose [[BooleanData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-boolean-objects\"><a href=\"#sec-boolean-objects\" class=\"excluded-xref\" excluded-id=\"sec-boolean-objects\">#sec-boolean-objects</a></emu-xref> for a description of Boolean objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return a new Number object whose [[NumberData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-number-objects\"><a href=\"#sec-number-objects\" class=\"excluded-xref\" excluded-id=\"sec-number-objects\">#sec-number-objects</a></emu-xref> for a description of Number objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              Return a new String object whose [[StringData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-string-objects\"><a href=\"#sec-string-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-objects\">#sec-string-objects</a></emu-xref> for a description of String objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Return a new Symbol object whose [[SymbolData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-symbol-objects\"><a href=\"#sec-symbol-objects\" class=\"excluded-xref\" excluded-id=\"sec-symbol-objects\">#sec-symbol-objects</a></emu-xref> for a description of Symbol objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-setviewvalue": {"num": "24.3.1.2", "title": "#sec-setviewvalue SetViewValue ( view, requestIndex, isLittleEndian, type, value )", "html": "<emu-clause id=\"sec-setviewvalue\" aoid=\"SetViewValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setviewvalue\">#sec-setviewvalue</span> SetViewValue ( <var>view</var>, <var>requestIndex</var>, <var>isLittleEndian</var>, <var>type</var>, <var>value</var> )</h1>\n        <p>The abstract operation SetViewValue with arguments <var>view</var>, <var>requestIndex</var>, <var>isLittleEndian</var>, <var>type</var>, and <var>value</var> is used by functions on DataView instances to store values into the view's buffer. It performs the following steps:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>view</var>, [[DataView]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>view</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>getIndex</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>requestIndex</var>).</li><li>Let <var>numberValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Set <var>isLittleEndian</var> to !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(<var>isLittleEndian</var>).</li><li>Let <var>buffer</var> be <var>view</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>viewOffset</var> be <var>view</var>.[[ByteOffset]].</li><li>Let <var>viewSize</var> be <var>view</var>.[[ByteLength]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>getIndex</var> + <var>elementSize</var> &gt; <var>viewSize</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>bufferIndex</var> be <var>getIndex</var> + <var>viewOffset</var>.</li><li>Return <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>bufferIndex</var>, <var>type</var>, <var>numberValue</var>, <emu-val>false</emu-val>, <code>\"Unordered\"</code>, <var>isLittleEndian</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-atomicreadmodifywrite": {"num": "24.4.1.11", "title": "#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )", "html": "<emu-clause id=\"sec-atomicreadmodifywrite\" aoid=\"AtomicReadModifyWrite\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomicreadmodifywrite\">#sec-atomicreadmodifywrite</span> AtomicReadModifyWrite ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>op</var> )</h1>\n        <p>The abstract operation AtomicReadModifyWrite takes four arguments, <var>typedArray</var>, <var>index</var>, <var>value</var>, and a pure combining operation <var>op</var>. The pure combining operation <var>op</var> takes two <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values arguments and returns a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values. The operation atomically loads a value, combines it with another value, and stores the result of the combination. It returns the loaded value. It performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <var>op</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-tonumber": {"num": "7.1.3", "title": "#sec-tonumber ToNumber ( argument )", "html": "<emu-clause id=\"sec-tonumber\" aoid=\"ToNumber\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber\">#sec-tonumber</span> ToNumber ( <var>argument</var> )</h1>\n      <p>The abstract operation ToNumber converts <var>argument</var> to a value of type Number according to  <emu-xref href=\"#table-11\"><a href=\"#table-11\" class=\"excluded-xref\" excluded-id=\"table-11\">#table-11</a></emu-xref>:</p>\n      <emu-table id=\"table-11\" caption=\"ToNumber Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-11\">#table-11</span>: <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Return <emu-val>NaN</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Return <emu-val>+0</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>true</emu-val>, return 1. If <var>argument</var> is <emu-val>false</emu-val>, return <emu-val>+0</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return <var>argument</var> (no conversion).\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              See grammar and conversion algorithm below.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              <p>Apply the following steps:</p>\n              <emu-alg><ol><li>Let <var>primValue</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>argument</var>, hint Number).</li><li>Return ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>primValue</var>).\n              </li></ol></emu-alg>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <div id=\"excluded-sec-tonumber-applied-to-the-string-type\"><h1><span class=\"secnum\">7.1.3.1</span>#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type</h1>...</div></emu-clause>\n\n    "}, "sec-abstract-equality-comparison": {"num": "7.2.14", "title": "#sec-abstract-equality-comparison Abstract Equality Comparison", "html": "<emu-clause id=\"sec-abstract-equality-comparison\" aoid=\"Abstract Equality Comparison\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-equality-comparison\">#sec-abstract-equality-comparison</span> Abstract Equality Comparison</h1>\n      <p>The comparison <var>x</var> == <var>y</var>, where <var>x</var> and <var>y</var> are values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is the same as <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), then<ol><li>Return the result of performing <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> <var>x</var> === <var>y</var>.</li></ol></li><li>If <var>x</var> is <emu-val>null</emu-val> and <var>y</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>undefined</emu-val> and <var>y</var> is <emu-val>null</emu-val>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is String, return the result of the comparison <var>x</var> == !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is String and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Number, return the result of the comparison !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>) == <var>y</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Boolean, return the result of the comparison !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>) == <var>y</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Boolean, return the result of the comparison <var>x</var> == !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is either String, Number, or Symbol and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Object, return the result of the comparison <var>x</var> == <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Object and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is either String, Number, or Symbol, return the result of the comparison <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>x</var>) == <var>y</var>.</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-applying-the-additive-operators-to-numbers": {"num": "12.8.5", "title": "#sec-applying-the-additive-operators-to-numbers Applying the Additive Operators to Numbers", "html": "<emu-clause id=\"sec-applying-the-additive-operators-to-numbers\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</span> Applying the Additive Operators to Numbers</h1>\n      <p>The <code>+</code> operator performs addition when applied to two operands of numeric type, producing the sum of the operands. The <code>-</code> operator performs subtraction, producing the difference of two numeric operands.</p>\n      <p>Addition is a commutative operation, but not always associative.</p>\n      <p>The result of an addition is determined using the rules of IEEE 754-2008 binary double-precision arithmetic:</p>\n      <ul>\n        <li>\n          If either operand is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n        \n        </li>\n        <li>\n          The sum of two infinities of opposite sign is <emu-val>NaN</emu-val>.\n        \n        </li>\n        <li>\n          The sum of two infinities of the same sign is the infinity of that sign.\n        \n        </li>\n        <li>\n          The sum of an infinity and a finite value is equal to the infinite operand.\n        \n        </li>\n        <li>\n          The sum of two negative zeroes is <emu-val>-0</emu-val>. The sum of two positive zeroes, or of two zeroes of opposite sign, is <emu-val>+0</emu-val>.\n        \n        </li>\n        <li>\n          The sum of a zero and a nonzero finite value is equal to the nonzero operand.\n        \n        </li>\n        <li>\n          The sum of two nonzero finite values of the same magnitude and opposite sign is <emu-val>+0</emu-val>.\n        \n        </li>\n        <li>\n          In the remaining cases, where neither an infinity, nor a zero, nor <emu-val>NaN</emu-val> is involved, and the operands have the same sign or have different magnitudes, the sum of the mathematical values of the operands is computed and rounded to the nearest representable value using IEEE 754-2008 roundTiesToEven mode. If the magnitude is too large to represent, the operation overflows and the result is then an infinity of appropriate sign. The ECMAScript language requires support of gradual underflow as defined by IEEE 754-2008.\n        \n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <code>-</code> operator performs subtraction when applied to two operands of numeric type, producing the difference of its operands; the left operand is the minuend and the right operand is the subtrahend. Given numeric operands <code>a</code> and <code>b</code>, it is always the case that <code>a - b</code> produces the same result as <code>a + (-b)</code>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-prefix-decrement-operator-runtime-semantics-evaluation": {"num": "12.4.7.1", "title": "#sec-prefix-decrement-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-prefix-decrement-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-prefix-decrement-operator-runtime-semantics-evaluation\">#sec-prefix-decrement-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a745559\"><emu-t>--</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Let <var>newValue</var> be the result of subtracting the value 1 from <var>oldValue</var>, using the same rules as for the <code>-</code> operator (see <emu-xref href=\"#sec-applying-the-additive-operators-to-numbers\"><a href=\"#sec-applying-the-additive-operators-to-numbers\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</a></emu-xref>).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>expr</var>, <var>newValue</var>).</li><li>Return <var>newValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-additive-operators": {"num": "12.8", "title": "#sec-additive-operators Additive Operators", "html": "<emu-clause id=\"sec-additive-operators\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additive-operators\">#sec-additive-operators</span> Additive Operators</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AdditiveExpression\" params=\"Yield, Await\" id=\"prod-AdditiveExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f6af3d13\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"79f3759c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>+</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e309a7b9\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>-</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-additive-operators-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">12.8.1</span>#sec-additive-operators-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-additive-operators-static-semantics-assignmenttargettype\"><h1><span class=\"secnum\">12.8.2</span>#sec-additive-operators-static-semantics-assignmenttargettype Static Semantics: AssignmentTargetType</h1>...</div><div id=\"excluded-sec-addition-operator-plus\"><h1><span class=\"secnum\">12.8.3</span>#sec-addition-operator-plus The Addition Operator ( + )</h1>...</div><div id=\"excluded-sec-subtraction-operator-minus\"><h1><span class=\"secnum\">12.8.4</span>#sec-subtraction-operator-minus The Subtraction Operator ( - )</h1>...</div><div id=\"excluded-sec-applying-the-additive-operators-to-numbers\"><h1><span class=\"secnum\">12.8.5</span>#sec-applying-the-additive-operators-to-numbers Applying the Additive Operators to Numbers</h1>...</div></emu-clause>\n\n  "}, "sec-applying-the-exp-operator": {"num": "12.6.4", "title": "#sec-applying-the-exp-operator Applying the ** Operator", "html": "<emu-clause id=\"sec-applying-the-exp-operator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applying-the-exp-operator\">#sec-applying-the-exp-operator</span> Applying the <code>**</code> Operator</h1>\n      <p>\n        Returns an implementation-dependent approximation of the result of raising <var>base</var> to the power <var>exponent</var>.\n      \n      </p>\n      <ul>\n        <li>If <var>exponent</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.</li>\n        <li>If <var>exponent</var> is <emu-val>+0</emu-val>, the result is 1, even if <var>base</var> is <emu-val>NaN</emu-val>.</li>\n        <li>If <var>exponent</var> is <emu-val>-0</emu-val>, the result is 1, even if <var>base</var> is <emu-val>NaN</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>NaN</emu-val> and <var>exponent</var> is nonzero, the result is <emu-val>NaN</emu-val>.</li>\n        <li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>base</var>) &gt; 1 and <var>exponent</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.</li>\n        <li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>base</var>) &gt; 1 and <var>exponent</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>+0</emu-val>.</li>\n        <li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>base</var>) is 1 and <var>exponent</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>NaN</emu-val>.</li>\n        <li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>base</var>) is 1 and <var>exponent</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>NaN</emu-val>.</li>\n        <li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>base</var>) &lt; 1 and <var>exponent</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+0</emu-val>.</li>\n        <li>If <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>base</var>) &lt; 1 and <var>exponent</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>+&#8734;</emu-val> and <var>exponent</var> &gt; 0, the result is <emu-val>+&#8734;</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>+&#8734;</emu-val> and <var>exponent</var> &lt; 0, the result is <emu-val>+0</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-&#8734;</emu-val> and <var>exponent</var> &gt; 0 and <var>exponent</var> is an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>-&#8734;</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-&#8734;</emu-val> and <var>exponent</var> &gt; 0 and <var>exponent</var> is not an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>+&#8734;</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-&#8734;</emu-val> and <var>exponent</var> &lt; 0 and <var>exponent</var> is an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>-0</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-&#8734;</emu-val> and <var>exponent</var> &lt; 0 and <var>exponent</var> is not an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>+0</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>+0</emu-val> and <var>exponent</var> &gt; 0, the result is <emu-val>+0</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>+0</emu-val> and <var>exponent</var> &lt; 0, the result is <emu-val>+&#8734;</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-0</emu-val> and <var>exponent</var> &gt; 0 and <var>exponent</var> is an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>-0</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-0</emu-val> and <var>exponent</var> &gt; 0 and <var>exponent</var> is not an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>+0</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-0</emu-val> and <var>exponent</var> &lt; 0 and <var>exponent</var> is an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>-&#8734;</emu-val>.</li>\n        <li>If <var>base</var> is <emu-val>-0</emu-val> and <var>exponent</var> &lt; 0 and <var>exponent</var> is not an odd <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>+&#8734;</emu-val>.</li>\n        <li>If <var>base</var> &lt; 0 and <var>base</var> is finite and <var>exponent</var> is finite and <var>exponent</var> is not an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>, the result is <emu-val>NaN</emu-val>.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The result of <var>base</var> <code>**</code> <var>exponent</var> when <var>base</var> is <emu-val>1</emu-val> or <emu-val>-1</emu-val> and <var>exponent</var> is <emu-val>+Infinity</emu-val> or <emu-val>-Infinity</emu-val> differs from IEEE 754-2008. The first edition of ECMAScript specified a result of <emu-val>NaN</emu-val> for this operation, whereas later versions of IEEE 754-2008 specified <emu-val>1</emu-val>. The historical ECMAScript behaviour is preserved for compatibility reasons.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-atomics.store": {"num": "24.4.9", "title": "#sec-atomics.store Atomics.store ( typedArray, index, value )", "html": "<emu-clause id=\"sec-atomics.store\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.store\">#sec-atomics.store</span> Atomics.store ( <var>typedArray</var>, <var>index</var>, <var>value</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <emu-val>true</emu-val>, <code>\"SeqCst\"</code>).</li><li>Return <var>v</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-object-initializer-static-semantics-propname": {"num": "12.2.6.5", "title": "#sec-object-initializer-static-semantics-propname Static Semantics: PropName", "html": "<emu-clause id=\"sec-object-initializer-static-semantics-propname\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-static-semantics-propname\">#sec-object-initializer-static-semantics-propname</span> Static Semantics: PropName</h1>\n        <emu-see-also-para op=\"PropName\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2361f19d\"><emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return PropName of <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the result of forming the value of the <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-typedarray-typedarray": {"num": "22.2.4.3", "title": "#sec-typedarray-typedarray TypedArray ( typedArray )", "html": "<emu-clause id=\"sec-typedarray-typedarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-typedarray\">#sec-typedarray-typedarray</span> <var>TypedArray</var> ( <var>typedArray</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object has a [[TypedArrayName]] internal slot.</p>\n        <p><var>TypedArray</var> called with argument <var>typedArray</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>typedArray</var>) is Object and <var>typedArray</var> has a [[TypedArrayName]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>srcArray</var> be <var>typedArray</var>.</li><li>Let <var>srcData</var> be <var>srcArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>elementLength</var> be <var>srcArray</var>.[[ArrayLength]].</li><li>Let <var>srcName</var> be the String value of <var>srcArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcByteOffset</var> be <var>srcArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>elementLength</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>bufferConstructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>srcData</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li></ol></li><li>Else,<ol><li>Let <var>bufferConstructor</var> be <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>.</li></ol></li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>elementType</var>, <var>srcType</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteOffset</var>, <var>byteLength</var>, <var>bufferConstructor</var>).</li></ol></li><li>Else,<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>bufferConstructor</var>, <var>byteLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be 0.</li><li>Let <var>count</var> be <var>elementLength</var>.</li><li>Repeat, while <var>count</var> &gt; 0<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>data</var>, <var>targetByteIndex</var>, <var>elementType</var>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>elementSize</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>elementLength</var>.</li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-typeof-operator-runtime-semantics-evaluation": {"num": "12.5.5.1", "title": "#sec-typeof-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-typeof-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typeof-operator-runtime-semantics-evaluation\">#sec-typeof-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ab1a2cb9\"><emu-t>typeof</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>val</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>val</var>) is <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>val</var>) is <emu-val>true</emu-val>, return <code>\"undefined\"</code>.</li></ol></li><li>Set <var>val</var> to ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>val</var>).</li><li>Return a String according to <emu-xref href=\"#table-35\"><a href=\"#table-35\" class=\"excluded-xref\" excluded-id=\"table-35\">#table-35</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-table id=\"table-35\" caption=\"typeof Operator Results\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-35\">#table-35</span>: typeof Operator Results</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Type of <var>val</var>\n              \n              </th>\n              <th>\n                Result\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                Undefined\n              \n              </td>\n              <td>\n                <code>\"undefined\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Null\n              \n              </td>\n              <td>\n                <code>\"object\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Boolean\n              \n              </td>\n              <td>\n                <code>\"boolean\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Number\n              \n              </td>\n              <td>\n                <code>\"number\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                String\n              \n              </td>\n              <td>\n                <code>\"string\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Symbol\n              \n              </td>\n              <td>\n                <code>\"symbol\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Object (does not implement [[Call]])\n              \n              </td>\n              <td>\n                <code>\"object\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Object (implements [[Call]])\n              \n              </td>\n              <td>\n                <code>\"function\"</code>\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-atomics.islockfree": {"num": "24.4.6", "title": "#sec-atomics.islockfree Atomics.isLockFree ( size )", "html": "<emu-clause id=\"sec-atomics.islockfree\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.islockfree\">#sec-atomics.islockfree</span> Atomics.isLockFree ( <var>size</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>size</var>).</li><li>Let <var>AR</var> be the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</li><li>If <var>n</var> equals 1, return <var>AR</var>.[[IsLockFree1]].</li><li>If <var>n</var> equals 2, return <var>AR</var>.[[IsLockFree2]].</li><li>If <var>n</var> equals 4, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><code>Atomics.isLockFree</code>() is an optimization primitive. The intuition is that if the atomic step of an atomic primitive (<code>compareExchange</code>, <code>load</code>, <code>store</code>, <code>add</code>, <code>sub</code>, <code>and</code>, <code>or</code>, <code>xor</code>, or <code>exchange</code>) on a datum of size <var>n</var> bytes will be performed without the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> acquiring a lock outside the <var>n</var> bytes comprising the datum, then <code>Atomics.isLockFree</code>(<var>n</var>) will return <emu-val>true</emu-val>. High-performance algorithms will use Atomics.isLockFree to determine whether to use locks or atomic operations in critical sections. If an atomic primitive is not lock-free then it is often more efficient for an algorithm to provide its own locking.</p>\n        <p><code>Atomics.isLockFree</code>(4) always returns <emu-val>true</emu-val> as that can be supported on all known relevant hardware. Being able to assume this will generally simplify programs.</p>\n      </div></emu-note>\n    </emu-clause>\n    "}, "sec-addition-operator-plus-runtime-semantics-evaluation": {"num": "12.8.3.1", "title": "#sec-addition-operator-plus-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-addition-operator-plus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-addition-operator-plus-runtime-semantics-evaluation\">#sec-addition-operator-plus-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"AdditiveExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0e497b17\"><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-t>+</emu-t><emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lprim</var>) is String or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rprim</var>) is String, then<ol><li>Let <var>lstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lprim</var>).</li><li>Let <var>rstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>rprim</var>).</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>lstr</var> and <var>rstr</var>.</li></ol></li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>lprim</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>rprim</var>).</li><li>Return the result of applying the addition operation to <var>lnum</var> and <var>rnum</var>. See the Note below <emu-xref href=\"#sec-applying-the-additive-operators-to-numbers\"><a href=\"#sec-applying-the-additive-operators-to-numbers\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>No hint is provided in the calls to <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> in steps 5 and 6. All standard objects except Date objects handle the absence of a hint as if the hint Number were given; Date objects handle the absence of a hint as if the hint String were given. Exotic objects may handle the absence of a hint in some other manner.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Step 7 differs from step 3 of the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm, by using the logical-or operation instead of the logical-and operation.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in  <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in  <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              \n              </th>\n              <th>\n                Global Name\n              \n              </th>\n              <th>\n                ECMAScript Language Association\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array</code>\n              \n              </td>\n              <td>\n                The <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>entries</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>forEach</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>keys</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>values</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., %AsyncFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., %AsyncGeneratorFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., %AsyncGenerator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Atomics</code>\n              \n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean</code>\n              \n              </td>\n              <td>\n                The <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView</code>\n              \n              </td>\n              <td>\n                The <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date</code>\n              \n              </td>\n              <td>\n                The <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURI</code>\n              \n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURI</code>\n              \n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error</code>\n              \n              </td>\n              <td>\n                The <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>eval</code>\n              \n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalError%\n              \n              </td>\n              <td>\n                <code>EvalError</code>\n              \n              </td>\n              <td>\n                The <code>EvalError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              \n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %EvalError%; i.e., %EvalError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32Array%\n              \n              </td>\n              <td>\n                <code>Float32Array</code>\n              \n              </td>\n              <td>\n                The <code>Float32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float32Array%; i.e., %Float32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64Array%\n              \n              </td>\n              <td>\n                <code>Float64Array</code>\n              \n              </td>\n              <td>\n                The <code>Float64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float64Array%; i.e., %Float64Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Function</code>\n              \n              </td>\n              <td>\n                The <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              \n              </td>\n              <td>\n                <code>Function.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., %Generator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8Array%\n              \n              </td>\n              <td>\n                <code>Int8Array</code>\n              \n              </td>\n              <td>\n                The <code>Int8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int8Array%; i.e., %Int8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16Array%\n              \n              </td>\n              <td>\n                <code>Int16Array</code>\n              \n              </td>\n              <td>\n                The <code>Int16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int16Array%; i.e., %Int16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32Array%\n              \n              </td>\n              <td>\n                <code>Int32Array</code>\n              \n              </td>\n              <td>\n                The <code>Int32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int32Array%; i.e., %Int32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isFinite</code>\n              \n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isNaN</code>\n              \n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON</code>\n              \n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.parse</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>parse</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %JSONStringify%\n              \n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>stringify</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map</code>\n              \n              </td>\n              <td>\n                The <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Math</code>\n              \n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number</code>\n              \n              </td>\n              <td>\n                The <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object</code>\n              \n              </td>\n              <td>\n                The <code>Object</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>toString</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>valueOf</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseFloat</code>\n              \n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseInt</code>\n              \n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise</code>\n              \n              </td>\n              <td>\n                The <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>then</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.all</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>all</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.reject</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>reject</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>resolve</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Proxy</code>\n              \n              </td>\n              <td>\n                The <code>Proxy</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeError%\n              \n              </td>\n              <td>\n                <code>RangeError</code>\n              \n              </td>\n              <td>\n                The <code>RangeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %RangeError%; i.e., %RangeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceError%\n              \n              </td>\n              <td>\n                <code>ReferenceError</code>\n              \n              </td>\n              <td>\n                The <code>ReferenceError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              \n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %ReferenceError%; i.e., %ReferenceError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Reflect</code>\n              \n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp</code>\n              \n              </td>\n              <td>\n                The <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set</code>\n              \n              </td>\n              <td>\n                The <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String</code>\n              \n              </td>\n              <td>\n                The <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol</code>\n              \n              </td>\n              <td>\n                The <code>Symbol</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxError%\n              \n              </td>\n              <td>\n                <code>SyntaxError</code>\n              \n              </td>\n              <td>\n                The <code>SyntaxError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              \n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %SyntaxError%; i.e., %SyntaxError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of %TypeError%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeError%\n              \n              </td>\n              <td>\n                <code>TypeError</code>\n              \n              </td>\n              <td>\n                The <code>TypeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %TypeError%; i.e., %TypeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8Array%\n              \n              </td>\n              <td>\n                <code>Uint8Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8Array%; i.e., %Uint8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArray%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              \n              </td>\n              <td>\n                The <code>Uint8ClampedArray</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8ClampedArray%; i.e., %Uint8ClampedArray.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16Array%\n              \n              </td>\n              <td>\n                <code>Uint16Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint16Array%; i.e., %Uint16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32Array%\n              \n              </td>\n              <td>\n                <code>Uint32Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint32Array%; i.e., %Uint32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIError%\n              \n              </td>\n              <td>\n                <code>URIError</code>\n              \n              </td>\n              <td>\n                The <code>URIError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              \n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %URIError%; i.e., %URIError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap</code>\n              \n              </td>\n              <td>\n                The <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet</code>\n              \n              </td>\n              <td>\n                The <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-subtraction-operator-minus-runtime-semantics-evaluation": {"num": "12.8.4.1", "title": "#sec-subtraction-operator-minus-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-subtraction-operator-minus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-subtraction-operator-minus-runtime-semantics-evaluation\">#sec-subtraction-operator-minus-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"AdditiveExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ee054414\"><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-t>-</emu-t><emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>rval</var>).</li><li>Return the result of applying the subtraction operation to <var>lnum</var> and <var>rnum</var>. See the note below <emu-xref href=\"#sec-applying-the-additive-operators-to-numbers\"><a href=\"#sec-applying-the-additive-operators-to-numbers\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-literals-runtime-semantics-evaluation": {"num": "12.2.4.1", "title": "#sec-literals-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-literals-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-runtime-semantics-evaluation\">#sec-literals-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"54f84188\"><emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>null</emu-val>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3508e1fd\"><emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt> is the token <code>false</code>, return <emu-val>false</emu-val>.</li><li>If <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt> is the token <code>true</code>, return <emu-val>true</emu-val>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> represented by <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> as defined in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the StringValue of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> as defined in <emu-xref href=\"#sec-string-literals-static-semantics-stringvalue\"><a href=\"#sec-string-literals-static-semantics-stringvalue\" class=\"excluded-xref\" excluded-id=\"sec-string-literals-static-semantics-stringvalue\">#sec-string-literals-static-semantics-stringvalue</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-atomics.wait": {"num": "24.4.11", "title": "#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )", "html": "<emu-clause id=\"sec-atomics.wait\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.wait\">#sec-atomics.wait</span> Atomics.wait ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>timeout</var> )</h1>\n      <p><code>Atomics.wait</code> puts the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in a wait queue and puts it to sleep until it is notified or the sleep times out. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>value</var>).</li><li>Let <var>q</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>timeout</var>).</li><li>If <var>q</var> is <emu-val>NaN</emu-val>, let <var>t</var> be <emu-val>+&#8734;</emu-val>; else let <var>t</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>q</var>, 0).</li><li>Let <var>B</var> be <emu-xref aoid=\"AgentCanSuspend\"><a href=\"#sec-agentcansuspend\">AgentCanSuspend</a></emu-xref>().</li><li>If <var>B</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; 4) + <var>offset</var>.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>w</var> be !&#160;<emu-xref aoid=\"AtomicLoad\"><a href=\"#sec-atomicload\">AtomicLoad</a></emu-xref>(<var>typedArray</var>, <var>i</var>).</li><li>If <var>v</var> is not equal to <var>w</var>, then<ol><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return the String <code>\"not-equal\"</code>.</li></ol></li><li>Let <var>W</var> be <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Perform <emu-xref aoid=\"AddWaiter\"><a href=\"#sec-addwaiter\">AddWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Let <var>notified</var> be <emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref>(<var>WL</var>, <var>W</var>, <var>t</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is not on the list of waiters in <var>WL</var>.</li></ol></li><li>Else,<ol><li>Perform <emu-xref aoid=\"RemoveWaiter\"><a href=\"#sec-removewaiter\">RemoveWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, return the String <code>\"ok\"</code>.</li><li>Return the String <code>\"timed-out\"</code>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-math.pow": {"num": "20.2.2.26", "title": "#sec-math.pow Math.pow ( base, exponent )", "html": "<emu-clause id=\"sec-math.pow\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.pow\">#sec-math.pow</span> Math.pow ( <var>base</var>, <var>exponent</var> )</h1>\n        <emu-alg><ol><li>Return the result of <emu-xref href=\"#sec-applying-the-exp-operator\" title=\"\"><a href=\"#sec-applying-the-exp-operator\">Applying the ** operator</a></emu-xref> with <var>base</var> and <var>exponent</var> as specified in <emu-xref href=\"#sec-applying-the-exp-operator\"><a href=\"#sec-applying-the-exp-operator\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-exp-operator\">#sec-applying-the-exp-operator</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-applying-the-mod-operator": {"num": "12.7.3.3", "title": "#sec-applying-the-mod-operator Applying the % Operator", "html": "<emu-clause id=\"sec-applying-the-mod-operator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applying-the-mod-operator\">#sec-applying-the-mod-operator</span> Applying the <code>%</code> Operator</h1>\n        <p>The <code>%</code> <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> yields the remainder of its operands from an implied division; the left operand is the dividend and the right operand is the divisor.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>In C and C++, the remainder operator accepts only integral operands; in ECMAScript, it also accepts floating-point operands.</p>\n        </div></emu-note>\n        <p>The result of a floating-point remainder operation as computed by the <code>%</code> operator is not the same as the &#8220;remainder&#8221; operation defined by IEEE 754-2008. The IEEE 754-2008 &#8220;remainder&#8221; operation computes the remainder from a rounding division, not a truncating division, and so its behaviour is not analogous to that of the usual <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> remainder operator. Instead the ECMAScript language defines <code>%</code> on floating-point operations to behave in a manner analogous to that of the Java <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> remainder operator; this may be compared with the C library function fmod.</p>\n        <p>The result of an ECMAScript floating-point remainder operation is determined by the rules of IEEE arithmetic:</p>\n        <ul>\n          <li>\n            If either operand is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            The sign of the result equals the sign of the dividend.\n          \n          </li>\n          <li>\n            If the dividend is an infinity, or the divisor is a zero, or both, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If the dividend is finite and the divisor is an infinity, the result equals the dividend.\n          \n          </li>\n          <li>\n            If the dividend is a zero and the divisor is nonzero and finite, the result is the same as the dividend.\n          \n          </li>\n          <li>\n            In the remaining cases, where neither an infinity, nor a zero, nor <emu-val>NaN</emu-val> is involved, the floating-point remainder <var>r</var> from a dividend <var>n</var> and a divisor <var>d</var> is defined by the mathematical relation <var>r</var> = <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - (<emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>d</var>) &#215; <var>q</var>) where <var>q</var> is a <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> that is negative only if <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) &#247;<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>d</var>) is negative and positive only if <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) &#247;<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>d</var>) is positive, and whose magnitude is as large as possible without exceeding <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) &#247;<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>d</var>). The result of the operation is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>r</var>.\n          \n          </li>\n        </ul>\n      </emu-clause>\n    "}, "sec-tostring-applied-to-the-number-type": {"num": "7.1.12.1", "title": "#sec-tostring-applied-to-the-number-type NumberToString ( m )", "html": "<emu-clause id=\"sec-tostring-applied-to-the-number-type\" aoid=\"NumberToString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tostring-applied-to-the-number-type\">#sec-tostring-applied-to-the-number-type</span> NumberToString ( <var>m</var> )</h1>\n        <p>The abstract operation NumberToString converts a Number <var>m</var> to String format as follows:</p>\n        <emu-alg><ol><li>If <var>m</var> is <emu-val>NaN</emu-val>, return the String <code>\"NaN\"</code>.</li><li>If <var>m</var> is <emu-val>+0</emu-val> or <emu-val>-0</emu-val>, return the String <code>\"0\"</code>.</li><li>If <var>m</var> is less than zero, return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <code>\"-\"</code> and !&#160;<emu-xref aoid=\"NumberToString\"><a href=\"#sec-tostring-applied-to-the-number-type\">NumberToString</a></emu-xref>(-<var>m</var>).</li><li>If <var>m</var> is <emu-val>+&#8734;</emu-val>, return the String <code>\"Infinity\"</code>.</li><li>Otherwise, let <var>n</var>, <var>k</var>, and <var>s</var> be integers such that <var>k</var> &#8805; 1, 10<sup><var>k</var> - 1</sup> &#8804; <var>s</var> &lt; 10<sup><var>k</var></sup>, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is <var>m</var>, and <var>k</var> is as small as possible. Note that <var>k</var> is the number of digits in the decimal representation of <var>s</var>, that <var>s</var> is not divisible by 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, and that the least significant digit of <var>s</var> is not necessarily uniquely determined by these criteria.</li><li>If <var>k</var> &#8804; <var>n</var> &#8804; 21, return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the <var>k</var> digits of the decimal representation of <var>s</var> (in order, with no leading zeroes)</li><li><var>n</var> - <var>k</var> occurrences of the code unit 0x0030 (DIGIT ZERO)</li></ul></li><li>If 0 &lt; <var>n</var> &#8804; 21, return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the most significant <var>n</var> digits of the decimal representation of <var>s</var></li><li>the code unit 0x002E (FULL STOP)</li><li>the code units of the remaining <var>k</var> - <var>n</var> digits of the decimal representation of <var>s</var></li></ul></li><li>If -6 &lt; <var>n</var> &#8804; 0, return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of:<ul><li>the code unit 0x0030 (DIGIT ZERO)</li><li>the code unit 0x002E (FULL STOP)</li><li>-<var>n</var> occurrences of the code unit 0x0030 (DIGIT ZERO)</li><li>the code units of the <var>k</var> digits of the decimal representation of <var>s</var></li></ul></li><li>Otherwise, if <var>k</var> = 1, return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of:<ul><li>the code unit of the single digit of <var>s</var></li><li>the code unit 0x0065 (LATIN SMALL LETTER E)</li><li>the code unit 0x002B (PLUS SIGN) or the code unit 0x002D (HYPHEN-MINUS) according to whether <var>n</var> - 1 is positive or negative</li><li>the code units of the decimal representation of the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>n</var> - 1) (with no leading zeroes)</li></ul></li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of:<ul><li>the code units of the most significant digit of the decimal representation of <var>s</var></li><li>the code unit 0x002E (FULL STOP)</li><li>the code units of the remaining <var>k</var> - 1 digits of the decimal representation of <var>s</var></li><li>the code unit 0x0065 (LATIN SMALL LETTER E)</li><li>the code unit 0x002B (PLUS SIGN) or the code unit 0x002D (HYPHEN-MINUS) according to whether <var>n</var> - 1 is positive or negative</li><li>the code units of the decimal representation of the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <emu-xref aoid=\"abs\"><a href=\"#eqn-abs\">abs</a></emu-xref>(<var>n</var> - 1) (with no leading zeroes)\n        </li></ul></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The following observations may be useful as guidelines for implementations, but are not part of the normative requirements of this Standard:</p>\n          <ul>\n            <li>\n              If x is any <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> other than <emu-val>-0</emu-val>, then <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(x)) is exactly the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> as x.\n            \n            </li>\n            <li>\n              The least significant digit of s is not always uniquely determined by the requirements listed in step 5.\n            \n            </li>\n          </ul>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>For implementations that provide more accurate conversions than required by the rules above, it is recommended that the following alternative version of step 5 be used as a guideline:</p>\n          <emu-alg><ol start=\"5\"><li>Otherwise, let <var>n</var>, <var>k</var>, and <var>s</var> be integers such that <var>k</var> &#8805; 1, 10<sup><var>k</var> - 1</sup> &#8804; <var>s</var> &lt; 10<sup><var>k</var></sup>, the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is <var>m</var>, and <var>k</var> is as small as possible. If there are multiple possibilities for <var>s</var>, choose the value of <var>s</var> for which <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>s</var>) &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>n</var>) - <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>k</var>)</sup> is closest in value to <emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref>(<var>m</var>). If there are two such possible values of <var>s</var>, choose the one that is even. Note that <var>k</var> is the number of digits in the decimal representation of <var>s</var> and that <var>s</var> is not divisible by 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          </li></ol></emu-alg>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n          <p>Implementers of ECMAScript may find useful the paper and code written by David M. Gay for binary-to-decimal conversion of floating-point numbers:</p>\n          <p>Gay, David M. Correctly Rounded Binary-Decimal and Decimal-Binary Conversions. Numerical Analysis, Manuscript 90-10. AT&amp;T Bell Laboratories (Murray Hill, New Jersey). November 30, 1990. Available as\n            \n            <br>\n            <a href=\"http://ampl.com/REFS/abstracts.html#rounding\">http://ampl.com/REFS/abstracts.html#rounding</a>. Associated code available as\n            \n            <br>\n            <a href=\"http://netlib.sandia.gov/fp/dtoa.c\">http://netlib.sandia.gov/fp/dtoa.c</a> and as\n            \n            <br>\n            <a href=\"http://netlib.sandia.gov/fp/g_fmt.c\">http://netlib.sandia.gov/fp/g_fmt.c</a> and may also be found at the various <code>netlib</code> mirror sites.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-abstract-operations-for-atomics": {"num": "24.4.1", "title": "#sec-abstract-operations-for-atomics Abstract Operations for Atomics", "html": "<emu-clause id=\"sec-abstract-operations-for-atomics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-atomics\">#sec-abstract-operations-for-atomics</span> Abstract Operations for Atomics</h1>\n\n      <div id=\"excluded-sec-validatesharedintegertypedarray\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-validatesharedintegertypedarray ValidateSharedIntegerTypedArray ( typedArray [ , onlyInt32 ] )</h1>...</div><div id=\"excluded-sec-validateatomicaccess\"><h1><span class=\"secnum\">24.4.1.2</span>#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )</h1>...</div><div id=\"excluded-sec-getwaiterlist\"><h1><span class=\"secnum\">24.4.1.3</span>#sec-getwaiterlist GetWaiterList ( block, i )</h1>...</div><div id=\"excluded-sec-entercriticalsection\"><h1><span class=\"secnum\">24.4.1.4</span>#sec-entercriticalsection EnterCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-leavecriticalsection\"><h1><span class=\"secnum\">24.4.1.5</span>#sec-leavecriticalsection LeaveCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-addwaiter\"><h1><span class=\"secnum\">24.4.1.6</span>#sec-addwaiter AddWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiter\"><h1><span class=\"secnum\">24.4.1.7</span>#sec-removewaiter RemoveWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiters\"><h1><span class=\"secnum\">24.4.1.8</span>#sec-removewaiters RemoveWaiters ( WL, c )</h1>...</div><div id=\"excluded-sec-suspend\"><h1><span class=\"secnum\">24.4.1.9</span>#sec-suspend Suspend ( WL, W, timeout )</h1>...</div><div id=\"excluded-sec-notifywaiter\"><h1><span class=\"secnum\">24.4.1.10</span>#sec-notifywaiter NotifyWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-atomicreadmodifywrite\"><h1><span class=\"secnum\">24.4.1.11</span>#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )</h1>...</div><div id=\"excluded-sec-atomicload\"><h1><span class=\"secnum\">24.4.1.12</span>#sec-atomicload AtomicLoad ( typedArray, index )</h1>...</div></emu-clause>\n\n    "}, "sec-ecmascript-language-types": {"num": "6.1", "title": "#sec-ecmascript-language-types ECMAScript Language Types", "html": "<emu-clause id=\"sec-ecmascript-language-types\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-types\">#sec-ecmascript-language-types</span> ECMAScript Language Types</h1>\n    <p>An  <dfn>ECMAScript language type</dfn> corresponds to values that are directly manipulated by an ECMAScript programmer using the ECMAScript language. The ECMAScript language types are Undefined, Null, Boolean, String, Symbol, Number, and Object. An  <dfn>ECMAScript language value</dfn> is a value that is characterized by an ECMAScript language type.</p>\n\n    <div id=\"excluded-sec-ecmascript-language-types-undefined-type\"><h1><span class=\"secnum\">6.1.1</span>#sec-ecmascript-language-types-undefined-type The Undefined Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-null-type\"><h1><span class=\"secnum\">6.1.2</span>#sec-ecmascript-language-types-null-type The Null Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-boolean-type\"><h1><span class=\"secnum\">6.1.3</span>#sec-ecmascript-language-types-boolean-type The Boolean Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-string-type\"><h1><span class=\"secnum\">6.1.4</span>#sec-ecmascript-language-types-string-type The String Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-symbol-type\"><h1><span class=\"secnum\">6.1.5</span>#sec-ecmascript-language-types-symbol-type The Symbol Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-number-type\"><h1><span class=\"secnum\">6.1.6</span>#sec-ecmascript-language-types-number-type The Number Type</h1>...</div><div id=\"excluded-sec-object-type\"><h1><span class=\"secnum\">6.1.7</span>#sec-object-type The Object Type</h1>...</div></emu-clause>\n\n  "}, "sec-exp-operator": {"num": "12.6", "title": "#sec-exp-operator Exponentiation Operator", "html": "<emu-clause id=\"sec-exp-operator\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exp-operator\">#sec-exp-operator</span> Exponentiation Operator</h1>\n    <h2>Syntax</h2>\n\n    <emu-grammar type=\"definition\"><emu-production name=\"ExponentiationExpression\" params=\"Yield, Await\" id=\"prod-ExponentiationExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f16b387c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"48e152b6\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UpdateExpression\">UpdateExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>**</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-exp-operator-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">12.6.1</span>#sec-exp-operator-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-exp-operator-static-semantics-assignmenttargettype\"><h1><span class=\"secnum\">12.6.2</span>#sec-exp-operator-static-semantics-assignmenttargettype Static Semantics: AssignmentTargetType</h1>...</div><div id=\"excluded-sec-exp-operator-runtime-semantics-evaluation\"><h1><span class=\"secnum\">12.6.3</span>#sec-exp-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div><div id=\"excluded-sec-applying-the-exp-operator\"><h1><span class=\"secnum\">12.6.4</span>#sec-applying-the-exp-operator Applying the ** Operator</h1>...</div></emu-clause>\n\n  "}, "sec-runtime-semantics-mv-s": {"num": "7.1.3.1.1", "title": "#sec-runtime-semantics-mv-s Runtime Semantics: MV", "html": "<emu-clause id=\"sec-runtime-semantics-mv-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-mv-s\">#sec-runtime-semantics-mv-s</span> Runtime Semantics: MV</h1>\n          <p>The conversion of a String to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> is similar overall to the determination of the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for a numeric literal (see  <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>), but some of the details are different, so the process for converting a String numeric literal to a value of Number type is given here. This value is determined in two steps: first, a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV) is derived from the String numeric literal; second, this <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> is rounded as described below. The MV on any grammar symbol, not provided below, is the MV for that symbol defined in  <emu-xref href=\"#sec-static-semantics-mv\"><a href=\"#sec-static-semantics-mv\" class=\"excluded-xref\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</a></emu-xref>.</p>\n          <ul>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"63c9217f\"><emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"fe58c396\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>, no matter whether white space is present or not.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"db369ee0\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"477fcd23\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"a3f639a9\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"d60f01a5\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>. (Note that if the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> is 0, the negative of this MV is also 0. The rounding rule described below handles the conversion of this signless mathematical zero to a floating-point <emu-val>+0</emu-val> or <emu-val>-0</emu-val> as appropriate.)\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4afe8df8\"><emu-t>Infinity</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>10000<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> (a value so large that it will round to <emu-val>+&#8734;</emu-val>).\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"33bf537e\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4565db95\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>), where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"6f5fda9f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4694f1d2\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>)) times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"c1f33372\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"0cd5f3c3\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var> -<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"2e993467\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n          </ul>\n          <p>Once the exact MV for a String numeric literal has been determined, it is then rounded to a value of the Number type. If the MV is 0, then the rounded value is <emu-val>+0</emu-val> unless the first non white space code point in the String numeric literal is <code>\"-\"</code>, in which case the rounded value is <emu-val>-0</emu-val>. Otherwise, the rounded value must be the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV (in the sense defined in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>), unless the literal includes a <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> and the literal has more than 20 significant digits, in which case the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> may be either the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a 0 digit or the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a 0 digit and then incrementing the literal at the 20th digit position. A digit is significant if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n          <ul>\n            <li>\n              it is not <code>0</code>; or\n            \n            </li>\n            <li>\n              there is a nonzero digit to its left and there is a nonzero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n            \n            </li>\n          </ul>\n        </emu-clause>\n      "}, "sec-lexical-grammar": {"num": "A.1", "title": "#sec-lexical-grammar Lexical Grammar", "html": "<emu-annex id=\"sec-lexical-grammar\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lexical-grammar\">#sec-lexical-grammar</span> Lexical Grammar</h1>\n    <emu-production name=\"SourceCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementDiv\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementDiv\">InputElementDiv</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExp\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExp\">InputElementRegExp</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExpOrTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExpOrTemplateTail\">InputElementRegExpOrTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementTemplateTail\">InputElementTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"WhiteSpace\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"819ea3fd\"><emu-gprose>&lt;TAB&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"156dc7da\"><emu-gprose>&lt;VT&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"77b516c0\"><emu-gprose>&lt;FF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6a85afed\"><emu-gprose>&lt;SP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"63dd44af\"><emu-gprose>&lt;NBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"b09e901a\"><emu-gprose>&lt;ZWNBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"e7de22a4\"><emu-gprose>&lt;USP&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminatorSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"64077750\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gann>[lookahead &#8800; <emu-gprose>&lt;LF&gt;</emu-gprose>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"Comment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b221187a\"><emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"49272b29\"><emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1e164ceb\"><emu-t>/*</emu-t><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>*/</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"24a6effb\"><emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"PostAsteriskCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25615007\"><emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9452de17\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotForwardSlashOrAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1dd7e7ae\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>/</emu-t> or <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"53edd61c\"><emu-t>//</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4521d447\"><emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CommonToken\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ee18f3d6\"><emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3ec1ae06\"><emu-nt><a href=\"#prod-Template\">Template</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierName\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"434685ab\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"700c1cee\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e41f30c8\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Start&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDContinue\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"db14546f\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Continue&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"ReservedWord\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a3926e03\"><emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9d71bdc1\"><emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"54f84188\"><emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3508e1fd\"><emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Keyword\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>await</emu-t><emu-t>break</emu-t><emu-t>case</emu-t><emu-t>catch</emu-t><emu-t>class</emu-t><emu-t>const</emu-t><emu-t>continue</emu-t><emu-t>debugger</emu-t><emu-t>default</emu-t><emu-t>delete</emu-t><emu-t>do</emu-t><emu-t>else</emu-t><emu-t>export</emu-t><emu-t>extends</emu-t><emu-t>finally</emu-t><emu-t>for</emu-t><emu-t>function</emu-t><emu-t>if</emu-t><emu-t>import</emu-t><emu-t>in</emu-t><emu-t>instanceof</emu-t><emu-t>new</emu-t><emu-t>return</emu-t><emu-t>super</emu-t><emu-t>switch</emu-t><emu-t>this</emu-t><emu-t>throw</emu-t><emu-t>try</emu-t><emu-t>typeof</emu-t><emu-t>var</emu-t><emu-t>void</emu-t><emu-t>while</emu-t><emu-t>with</emu-t><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FutureReservedWord\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4fb2fe95\"><emu-t>enum</emu-t></emu-rhs>\n</emu-production>\n    <p>The following tokens are also considered to be <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt>s when parsing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>:</p>\n    <p><emu-t>implements</emu-t> &#160;<emu-t>package</emu-t> &#160;<emu-t>protected</emu-t><br>\n      <emu-t>interface</emu-t> &#160;<emu-t>private</emu-t> &#160;<emu-t>public</emu-t>\n    </p>\n    <p>&#160;</p>\n    <emu-production name=\"Punctuator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>{</emu-t><emu-t>(</emu-t><emu-t>)</emu-t><emu-t>[</emu-t><emu-t>]</emu-t><emu-t>.</emu-t><emu-t>...</emu-t><emu-t>;</emu-t><emu-t>,</emu-t><emu-t>&lt;</emu-t><emu-t>&gt;</emu-t><emu-t>&lt;=</emu-t><emu-t>&gt;=</emu-t><emu-t>==</emu-t><emu-t>!=</emu-t><emu-t>===</emu-t><emu-t>!==</emu-t><emu-t>+</emu-t><emu-t>-</emu-t><emu-t>*</emu-t><emu-t>%</emu-t><emu-t>**</emu-t><emu-t>++</emu-t><emu-t>--</emu-t><emu-t>&lt;&lt;</emu-t><emu-t>&gt;&gt;</emu-t><emu-t>&gt;&gt;&gt;</emu-t><emu-t>&amp;</emu-t><emu-t>|</emu-t><emu-t>^</emu-t><emu-t>!</emu-t><emu-t>~</emu-t><emu-t>&amp;&amp;</emu-t><emu-t>||</emu-t><emu-t>?</emu-t><emu-t>:</emu-t><emu-t>=</emu-t><emu-t>+=</emu-t><emu-t>-=</emu-t><emu-t>*=</emu-t><emu-t>%=</emu-t><emu-t>**=</emu-t><emu-t>&lt;&lt;=</emu-t><emu-t>&gt;&gt;=</emu-t><emu-t>&gt;&gt;&gt;=</emu-t><emu-t>&amp;=</emu-t><emu-t>|=</emu-t><emu-t>^=</emu-t><emu-t>=&gt;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DivPunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3fd5f53\"><emu-t>/</emu-t></emu-rhs>\n    <emu-rhs a=\"2e077fe3\"><emu-t>/=</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RightBracePunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"255cb7fd\"><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NullLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"77b50868\"><emu-t>null</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"BooleanLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fa30b8c6\"><emu-t>true</emu-t></emu-rhs>\n    <emu-rhs a=\"23d2c69d\"><emu-t>false</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NumericLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fb5198a6\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"13dbaf21\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"SignedInteger\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"StringLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8bdabc77\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"17d28457\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineContinuation\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"CharacterEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonEscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"Hex4Digits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5778053b\"><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBody\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bba7969e\"><emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a9881cec\"><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFirstChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"da1b0c0a\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0c3ff14\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBackslashSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d7656bad\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionNonTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClass\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c1bc40a\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"76bdcb05\"><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7fd10851\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\\</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFlags\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"fceefdcd\"><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Template\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Template\">Template</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ab9a4b96\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"056f5c6b\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateHead\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bfb172fc\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateSubstitutionTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ccbc035d\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateMiddle\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37635b4e\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fcef5bc0\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f8c26ac5\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"03c3b542\"><emu-t>$</emu-t><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"372f5e0d\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-gmod>but not <emu-t>0</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotCodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5aeddbfc\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &gt; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"deeeb60d\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#8804; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-samevaluenonnumber": {"num": "7.2.12", "title": "#sec-samevaluenonnumber SameValueNonNumber ( x, y )", "html": "<emu-clause id=\"sec-samevaluenonnumber\" aoid=\"SameValueNonNumber\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-samevaluenonnumber\">#sec-samevaluenonnumber</span> SameValueNonNumber ( <var>x</var>, <var>y</var> )</h1>\n      <p>The internal comparison abstract operation SameValueNonNumber(<var>x</var>, <var>y</var>), where neither <var>x</var> nor <var>y</var> are Number values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is not Number.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is the same as <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Undefined, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Null, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is String, then<ol><li>If <var>x</var> and <var>y</var> are exactly the same sequence of code units (same length and same code units at corresponding indices), return <emu-val>true</emu-val>; otherwise, return <emu-val>false</emu-val>.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Boolean, then<ol><li>If <var>x</var> and <var>y</var> are both <emu-val>true</emu-val> or both <emu-val>false</emu-val>, return <emu-val>true</emu-val>; otherwise, return <emu-val>false</emu-val>.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Symbol, then<ol><li>If <var>x</var> and <var>y</var> are both the same Symbol value, return <emu-val>true</emu-val>; otherwise, return <emu-val>false</emu-val>.</li></ol></li><li>If <var>x</var> and <var>y</var> are the same Object value, return <emu-val>true</emu-val>. Otherwise, return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-getvaluefrombuffer": {"num": "24.1.1.6", "title": "#sec-getvaluefrombuffer GetValueFromBuffer ( arrayBuffer, byteIndex, type, isTypedArray, order [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-getvaluefrombuffer\" aoid=\"GetValueFromBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getvaluefrombuffer\">#sec-getvaluefrombuffer</span> GetValueFromBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>isTypedArray</var>, <var>order</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation GetValueFromBuffer takes six parameters, an ArrayBuffer or SharedArrayBuffer <var>arrayBuffer</var>, an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>byteIndex</var>, a String <var>type</var>, a Boolean <var>isTypedArray</var>, a String <var>order</var>, and optionally a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>byteIndex</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value &#8805; 0.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>If <var>isTypedArray</var> is <emu-val>true</emu-val> and <var>type</var> is <code>\"Int8\"</code>, <code>\"Uint8\"</code>, <code>\"Int16\"</code>, <code>\"Uint16\"</code>, <code>\"Int32\"</code>, or <code>\"Uint32\"</code>, let <var>noTear</var> be <emu-val>true</emu-val>; otherwise let <var>noTear</var> be <emu-val>false</emu-val>.</li><li>Let <var>rawValue</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> of nondeterministically chosen byte values.</li><li>NOTE: In implementations, <var>rawValue</var> is the result of a non-atomic or atomic read instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>readEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> { [[Order]]: <var>order</var>, [[NoTear]]: <var>noTear</var>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var> }.</li><li>Append <var>readEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>readEvent</var>, [[ChosenValue]]: <var>rawValue</var> } to <var>execution</var>.[[ChosenValues]].</li></ol></li><li>Else, let <var>rawValue</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <var>elementSize</var> containing, in order, the <var>elementSize</var> sequence of bytes starting with <var>block</var>[<var>byteIndex</var>].</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Return <emu-xref aoid=\"RawBytesToNumber\"><a href=\"#sec-rawbytestonumber\">RawBytesToNumber</a></emu-xref>(<var>type</var>, <var>rawValue</var>, <var>isLittleEndian</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exp-operator-runtime-semantics-evaluation": {"num": "12.6.3", "title": "#sec-exp-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-exp-operator-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exp-operator-runtime-semantics-evaluation\">#sec-exp-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"ExponentiationExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d1905fcc\"><emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-t>**</emu-t><emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>left</var> be the result of evaluating <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt>.</li><li>Let <var>leftValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>left</var>).</li><li>Let <var>right</var> be the result of evaluating <emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt>.</li><li>Let <var>rightValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>right</var>).</li><li>Let <var>base</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>leftValue</var>).</li><li>Let <var>exponent</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>rightValue</var>).</li><li>Return the result of <emu-xref href=\"#sec-applying-the-exp-operator\" title=\"\"><a href=\"#sec-applying-the-exp-operator\">Applying the ** operator</a></emu-xref> with <var>base</var> and <var>exponent</var> as specified in <emu-xref href=\"#sec-applying-the-exp-operator\"><a href=\"#sec-applying-the-exp-operator\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-exp-operator\">#sec-applying-the-exp-operator</a></emu-xref>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-value-properties-of-the-math-object": {"num": "20.2.1", "title": "#sec-value-properties-of-the-math-object Value Properties of the Math Object", "html": "<emu-clause id=\"sec-value-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-value-properties-of-the-math-object\">#sec-value-properties-of-the-math-object</span> Value Properties of the Math Object</h1>\n\n      <div id=\"excluded-sec-math.e\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-math.e Math.E</h1>...</div><div id=\"excluded-sec-math.ln10\"><h1><span class=\"secnum\">20.2.1.2</span>#sec-math.ln10 Math.LN10</h1>...</div><div id=\"excluded-sec-math.ln2\"><h1><span class=\"secnum\">20.2.1.3</span>#sec-math.ln2 Math.LN2</h1>...</div><div id=\"excluded-sec-math.log10e\"><h1><span class=\"secnum\">20.2.1.4</span>#sec-math.log10e Math.LOG10E</h1>...</div><div id=\"excluded-sec-math.log2e\"><h1><span class=\"secnum\">20.2.1.5</span>#sec-math.log2e Math.LOG2E</h1>...</div><div id=\"excluded-sec-math.pi\"><h1><span class=\"secnum\">20.2.1.6</span>#sec-math.pi Math.PI</h1>...</div><div id=\"excluded-sec-math.sqrt1_2\"><h1><span class=\"secnum\">20.2.1.7</span>#sec-math.sqrt1_2 Math.SQRT1_2</h1>...</div><div id=\"excluded-sec-math.sqrt2\"><h1><span class=\"secnum\">20.2.1.8</span>#sec-math.sqrt2 Math.SQRT2</h1>...</div><div id=\"excluded-sec-math-@@tostringtag\"><h1><span class=\"secnum\">20.2.1.9</span>#sec-math-@@tostringtag Math [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-atomics.notify": {"num": "24.4.12", "title": "#sec-atomics.notify Atomics.notify ( typedArray, index, count )", "html": "<emu-clause id=\"sec-atomics.notify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.notify\">#sec-atomics.notify</span> Atomics.notify ( <var>typedArray</var>, <var>index</var>, <var>count</var> )</h1>\n      <p><code>Atomics.notify</code> notifies some agents that are sleeping in the wait queue.  The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <var>count</var> is <emu-val>undefined</emu-val>, let <var>c</var> be <emu-val>+&#8734;</emu-val>.</li><li>Else,<ol><li>Let <var>intCount</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>count</var>).</li><li>Let <var>c</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>intCount</var>, 0).</li></ol></li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; 4) + <var>offset</var>.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Let <var>n</var> be 0.</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>S</var> be <emu-xref aoid=\"RemoveWaiters\"><a href=\"#sec-removewaiters\">RemoveWaiters</a></emu-xref>(<var>WL</var>, <var>c</var>).</li><li>Repeat, while <var>S</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>,<ol><li>Let <var>W</var> be the first <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in <var>S</var>.</li><li>Remove <var>W</var> from the front of <var>S</var>.</li><li>Perform <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return <var>n</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-tostring": {"num": "7.1.12", "title": "#sec-tostring ToString ( argument )", "html": "<emu-clause id=\"sec-tostring\" aoid=\"ToString\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tostring\">#sec-tostring</span> ToString ( <var>argument</var> )</h1>\n      <p>The abstract operation ToString converts <var>argument</var> to a value of type String according to  <emu-xref href=\"#table-12\"><a href=\"#table-12\" class=\"excluded-xref\" excluded-id=\"table-12\">#table-12</a></emu-xref>:</p>\n      <emu-table id=\"table-12\" caption=\"ToString Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-12\">#table-12</span>: <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Return <code>\"undefined\"</code>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Return <code>\"null\"</code>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              <p>If <var>argument</var> is <emu-val>true</emu-val>, return <code>\"true\"</code>.</p>\n              <p>If <var>argument</var> is <emu-val>false</emu-val>, return <code>\"false\"</code>.</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return <emu-xref aoid=\"NumberToString\"><a href=\"#sec-tostring-applied-to-the-number-type\">NumberToString</a></emu-xref>(<var>argument</var>).\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              <p>Apply the following steps:</p>\n              <emu-alg><ol><li>Let <var>primValue</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>argument</var>, hint String).</li><li>Return ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>primValue</var>).\n              </li></ol></emu-alg>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <div id=\"excluded-sec-tostring-applied-to-the-number-type\"><h1><span class=\"secnum\">7.1.12.1</span>#sec-tostring-applied-to-the-number-type NumberToString ( m )</h1>...</div></emu-clause>\n\n    "}, "sec-applying-the-mul-operator": {"num": "12.7.3.1", "title": "#sec-applying-the-mul-operator Applying the * Operator", "html": "<emu-clause id=\"sec-applying-the-mul-operator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-applying-the-mul-operator\">#sec-applying-the-mul-operator</span> Applying the <code>*</code> Operator</h1>\n        <p>The <code>*</code> <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> performs multiplication, producing the product of its operands. Multiplication is commutative. Multiplication is not always associative in ECMAScript, because of finite precision.</p>\n        <p>The result of a floating-point multiplication is governed by the rules of IEEE 754-2008 binary double-precision arithmetic:</p>\n        <ul>\n          <li>\n            If either operand is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            The sign of the result is positive if both operands have the same sign, negative if the operands have different signs.\n          \n          </li>\n          <li>\n            Multiplication of an infinity by a zero results in <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            Multiplication of an infinity by an infinity results in an infinity. The sign is determined by the rule already stated above.\n          \n          </li>\n          <li>\n            Multiplication of an infinity by a finite nonzero value results in a signed infinity. The sign is determined by the rule already stated above.\n          \n          </li>\n          <li>\n            In the remaining cases, where neither an infinity nor <emu-val>NaN</emu-val> is involved, the product of the mathematical values of the operands is computed and rounded to the nearest representable value using IEEE 754-2008 roundTiesToEven mode. If the magnitude is too large to represent, the result is then an infinity of appropriate sign. If the magnitude is too small to represent, the result is then a zero of appropriate sign. The ECMAScript language requires support of gradual underflow as defined by IEEE 754-2008.\n          \n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-typedarray-objects": {"num": "22.2", "title": "#sec-typedarray-objects TypedArray Objects", "html": "<emu-clause id=\"sec-typedarray-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</span> TypedArray Objects</h1>\n    <p><var>TypedArray</var> objects present an array-like view of an underlying binary data buffer (<emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>). Each element of a <var>TypedArray</var> instance has the same underlying binary scalar data type. There is a distinct <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, listed in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>, for each of the nine supported element types. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> has a corresponding distinct prototype object.</p>\n    <emu-table id=\"table-49\" caption=\"The TypedArray Constructors\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-49\">#table-49</span>: The TypedArray Constructors</figcaption>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name and Intrinsic\n          \n          </th>\n          <th>\n            Element Type\n          \n          </th>\n          <th>\n            Element Size\n          \n          </th>\n          <th>\n            Conversion Operation\n          \n          </th>\n          <th>\n            Description\n          \n          </th>\n        </tr>\n        <tr>\n          <td>\n            Int8Array\n            \n            <br>\n            %Int8Array%\n          \n          </td>\n          <td>\n            Int8\n          \n          </td>\n          <td>\n            1\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt8\"><a href=\"#sec-toint8\">ToInt8</a></emu-xref>\n          \n          </td>\n          <td>\n            8-bit 2's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8Array\n            \n            <br>\n            %Uint8Array%\n          \n          </td>\n          <td>\n            Uint8\n          \n          </td>\n          <td>\n            1\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8\"><a href=\"#sec-touint8\">ToUint8</a></emu-xref>\n          \n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8ClampedArray\n            \n            <br>\n            %Uint8ClampedArray%\n          \n          </td>\n          <td>\n            Uint8C\n          \n          </td>\n          <td>\n            1\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8Clamp\"><a href=\"#sec-touint8clamp\">ToUint8Clamp</a></emu-xref>\n          \n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> (clamped conversion)\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int16Array\n            \n            <br>\n            %Int16Array%\n          \n          </td>\n          <td>\n            Int16\n          \n          </td>\n          <td>\n            2\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt16\"><a href=\"#sec-toint16\">ToInt16</a></emu-xref>\n          \n          </td>\n          <td>\n            16-bit 2's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint16Array\n            \n            <br>\n            %Uint16Array%\n          \n          </td>\n          <td>\n            Uint16\n          \n          </td>\n          <td>\n            2\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint16\"><a href=\"#sec-touint16\">ToUint16</a></emu-xref>\n          \n          </td>\n          <td>\n            16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int32Array\n            \n            <br>\n            %Int32Array%\n          \n          </td>\n          <td>\n            Int32\n          \n          </td>\n          <td>\n            4\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>\n          \n          </td>\n          <td>\n            32-bit 2's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint32Array\n            \n            <br>\n            %Uint32Array%\n          \n          </td>\n          <td>\n            Uint32\n          \n          </td>\n          <td>\n            4\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>\n          \n          </td>\n          <td>\n            32-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float32Array\n            \n            <br>\n            %Float32Array%\n          \n          </td>\n          <td>\n            Float32\n          \n          </td>\n          <td>\n            4\n          \n          </td>\n          <td>\n          </td>\n          <td>\n            32-bit IEEE floating point\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float64Array\n            \n            <br>\n            %Float64Array%\n          \n          </td>\n          <td>\n            Float64\n          \n          </td>\n          <td>\n            8\n          \n          </td>\n          <td>\n          </td>\n          <td>\n            64-bit IEEE floating point\n          \n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In the definitions below, references to <var>TypedArray</var> should be replaced with the appropriate <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name from the above table. The phrase &#8220;the element size in bytes&#8221; refers to the value in the Element Size column of the table in the row corresponding to the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. The phrase &#8220;element Type&#8221; refers to the value in the Element Type column for that row.</p>\n\n    <div id=\"excluded-sec-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.1</span>#sec-%typedarray%-intrinsic-object The %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.2</span>#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarrayprototype%-object\"><h1><span class=\"secnum\">22.2.3</span>#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray.prototype% Object</h1>...</div><div id=\"excluded-sec-typedarray-constructors\"><h1><span class=\"secnum\">22.2.4</span>#sec-typedarray-constructors The TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-typedarray-constructors\"><h1><span class=\"secnum\">22.2.5</span>#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-prototype-objects\"><h1><span class=\"secnum\">22.2.6</span>#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-instances\"><h1><span class=\"secnum\">22.2.7</span>#sec-properties-of-typedarray-instances Properties of TypedArray Instances</h1>...</div></emu-clause>\n"}, "sec-typedarray-constructors": {"num": "22.2.4", "title": "#sec-typedarray-constructors The TypedArray Constructors", "html": "<emu-clause id=\"sec-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-constructors\">#sec-typedarray-constructors</span> The <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is an intrinsic object that has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>TypedArray</var>, in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments. The actual behaviour of a call of <var>TypedArray</var> depends upon the number and kind of arguments that are passed to it.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>TypedArray</var> behaviour must include a <code>super</code> call to the <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype</code> built-in methods.</li>\n        <li>has a <code>\"length\"</code> property whose value is 3.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray\"><h1><span class=\"secnum\">22.2.4.1</span>#sec-typedarray TypedArray ( )</h1>...</div><div id=\"excluded-sec-typedarray-length\"><h1><span class=\"secnum\">22.2.4.2</span>#sec-typedarray-length TypedArray ( length )</h1>...</div><div id=\"excluded-sec-typedarray-typedarray\"><h1><span class=\"secnum\">22.2.4.3</span>#sec-typedarray-typedarray TypedArray ( typedArray )</h1>...</div><div id=\"excluded-sec-typedarray-object\"><h1><span class=\"secnum\">22.2.4.4</span>#sec-typedarray-object TypedArray ( object )</h1>...</div><div id=\"excluded-sec-typedarray-buffer-byteoffset-length\"><h1><span class=\"secnum\">22.2.4.5</span>#sec-typedarray-buffer-byteoffset-length TypedArray ( buffer [ , byteOffset [ , length ] ] )</h1>...</div><emu-clause id=\"typedarray-create\" aoid=\"TypedArrayCreate\">\n        <h1><span class=\"secnum\">22.2.4.6</span> TypedArrayCreate ( <var>constructor</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArrayCreate with arguments <var>constructor</var> and <var>argumentList</var> is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function. It performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>newTypedArray</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>newTypedArray</var>).</li><li>If <var>argumentList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of a single Number, then<ol><li>If <var>newTypedArray</var>.[[ArrayLength]] &lt; <var>argumentList</var>[0], throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>newTypedArray</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      <emu-clause id=\"typedarray-species-create\" aoid=\"TypedArraySpeciesCreate\">\n        <h1><span class=\"secnum\">22.2.4.7</span> TypedArraySpeciesCreate ( <var>exemplar</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArraySpeciesCreate with arguments <var>exemplar</var> and <var>argumentList</var> is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>exemplar</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>exemplar</var> is an Object that has a [[TypedArrayName]] internal slot.</li><li>Let <var>defaultConstructor</var> be the intrinsic object listed in column one of <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>exemplar</var>.[[TypedArrayName]].</li><li>Let <var>constructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>exemplar</var>, <var>defaultConstructor</var>).</li><li>Return ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype.set-array-offset": {"num": "22.2.3.23.1", "title": "#sec-%typedarray%.prototype.set-array-offset %TypedArray%.prototype.set ( array [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-array-offset\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-array-offset\">#sec-%typedarray%.prototype.set-array-offset</span> %TypedArray%.prototype.set ( <var>array</var> [ , <var>offset</var> ] )</h1>\n          <p>Sets multiple values in this <var>TypedArray</var>, reading the values from the object <var>array</var>. The optional <var>offset</var> value indicates the first element index in this <var>TypedArray</var> where values are written. If omitted, it is assumed to be 0.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>array</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> other than an Object with a [[TypedArrayName]] internal slot. If it is such an Object, the definition in <emu-xref href=\"#sec-%typedarray%.prototype.set-typedarray-offset\"><a href=\"#sec-%typedarray%.prototype.set-typedarray-offset\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%.prototype.set-typedarray-offset\">#sec-%typedarray%.prototype.set-typedarray-offset</a></emu-xref> applies.</li><li>Let <var>target</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>target</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>target</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>targetOffset</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>offset</var>).</li><li>If <var>targetOffset</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>src</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>array</var>).</li><li>Let <var>srcLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>src</var>).</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>k</var> be 0.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kNumber</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>src</var>, <var>Pk</var>)).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>kNumber</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li><li>Return <emu-val>undefined</emu-val>.\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-unsigned-right-shift-operator-runtime-semantics-evaluation": {"num": "12.9.5.1", "title": "#sec-unsigned-right-shift-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-unsigned-right-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-unsigned-right-shift-operator-runtime-semantics-evaluation\">#sec-unsigned-right-shift-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ShiftExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37f16eac\"><emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-t>&gt;&gt;&gt;</emu-t><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>rval</var>).</li><li>Let <var>shiftCount</var> be the result of masking out all but the least significant 5 bits of <var>rnum</var>, that is, compute <var>rnum</var> &amp; 0x1F.</li><li>Return the result of performing a zero-filling right shift of <var>lnum</var> by <var>shiftCount</var> bits. Vacated bits are filled with zero. The result is an unsigned 32-bit <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-multiplicative-operators-runtime-semantics-evaluation": {"num": "12.7.3", "title": "#sec-multiplicative-operators-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-multiplicative-operators-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-multiplicative-operators-runtime-semantics-evaluation\">#sec-multiplicative-operators-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"MultiplicativeExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fb9fe2a0\"><emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt><emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt><emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>left</var> be the result of evaluating <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt>.</li><li>Let <var>leftValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>left</var>).</li><li>Let <var>right</var> be the result of evaluating <emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt>.</li><li>Let <var>rightValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>right</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>leftValue</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>rightValue</var>).</li><li>Return the result of applying the <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> (<code>*</code>, <code>/</code>, or <code>%</code>) to <var>lnum</var> and <var>rnum</var> as specified in <emu-xref href=\"#sec-applying-the-mul-operator\"><a href=\"#sec-applying-the-mul-operator\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-mul-operator\">#sec-applying-the-mul-operator</a></emu-xref>, <emu-xref href=\"#sec-applying-the-div-operator\"><a href=\"#sec-applying-the-div-operator\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-div-operator\">#sec-applying-the-div-operator</a></emu-xref>, or <emu-xref href=\"#sec-applying-the-mod-operator\"><a href=\"#sec-applying-the-mod-operator\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-mod-operator\">#sec-applying-the-mod-operator</a></emu-xref>.\n      </li></ol></emu-alg>\n\n      <div id=\"excluded-sec-applying-the-mul-operator\"><h1><span class=\"secnum\">12.7.3.1</span>#sec-applying-the-mul-operator Applying the * Operator</h1>...</div><div id=\"excluded-sec-applying-the-div-operator\"><h1><span class=\"secnum\">12.7.3.2</span>#sec-applying-the-div-operator Applying the / Operator</h1>...</div><div id=\"excluded-sec-applying-the-mod-operator\"><h1><span class=\"secnum\">12.7.3.3</span>#sec-applying-the-mod-operator Applying the % Operator</h1>...</div></emu-clause>\n  "}, "sec-math-object": {"num": "20.2", "title": "#sec-math-object The Math Object", "html": "<emu-clause id=\"sec-math-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-object\">#sec-math-object</span> The Math Object</h1>\n    <p>The Math object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Math%</dfn>.</li>\n      <li>is the initial value of the <code>Math</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In this specification, the phrase &#8220;the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>&#8221; has a technical meaning defined in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-value-properties-of-the-math-object\"><h1><span class=\"secnum\">20.2.1</span>#sec-value-properties-of-the-math-object Value Properties of the Math Object</h1>...</div><div id=\"excluded-sec-function-properties-of-the-math-object\"><h1><span class=\"secnum\">20.2.2</span>#sec-function-properties-of-the-math-object Function Properties of the Math Object</h1>...</div></emu-clause>\n\n  "}, "sec-abstract-relational-comparison": {"num": "7.2.13", "title": "#sec-abstract-relational-comparison Abstract Relational Comparison", "html": "<emu-clause id=\"sec-abstract-relational-comparison\" aoid=\"Abstract Relational Comparison\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-relational-comparison\">#sec-abstract-relational-comparison</span> Abstract Relational Comparison</h1>\n      <p>The comparison <var>x</var> &lt; <var>y</var>, where <var>x</var> and <var>y</var> are values, produces <emu-val>true</emu-val>, <emu-val>false</emu-val>, or <emu-val>undefined</emu-val> (which indicates that at least one operand is <emu-val>NaN</emu-val>). In addition to <var>x</var> and <var>y</var> the algorithm takes a Boolean flag named <var>LeftFirst</var> as a parameter. The flag is used to control the order in which operations with potentially visible side-effects are performed upon <var>x</var> and <var>y</var>. It is necessary because ECMAScript specifies left to right evaluation of expressions. The default value of <var>LeftFirst</var> is <emu-val>true</emu-val> and indicates that the <var>x</var> parameter corresponds to an expression that occurs to the left of the <var>y</var> parameter's corresponding expression. If <var>LeftFirst</var> is <emu-val>false</emu-val>, the reverse is the case and operations must be performed upon <var>y</var> before <var>x</var>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If the <var>LeftFirst</var> flag is <emu-val>true</emu-val>, then<ol><li>Let <var>px</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>x</var>, hint Number).</li><li>Let <var>py</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>y</var>, hint Number).</li></ol></li><li>Else,<ol><li>NOTE: The order of evaluation needs to be reversed to preserve left to right evaluation.</li><li>Let <var>py</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>y</var>, hint Number).</li><li>Let <var>px</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>x</var>, hint Number).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>px</var>) is String and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>py</var>) is String, then<ol><li>If <emu-xref aoid=\"IsStringPrefix\"><a href=\"#sec-isstringprefix\">IsStringPrefix</a></emu-xref>(<var>py</var>, <var>px</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"IsStringPrefix\"><a href=\"#sec-isstringprefix\">IsStringPrefix</a></emu-xref>(<var>px</var>, <var>py</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>k</var> be the smallest nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> such that the code unit at index <var>k</var> within <var>px</var> is different from the code unit at index <var>k</var> within <var>py</var>. (There must be such a <var>k</var>, for neither String is a prefix of the other.)</li><li>Let <var>m</var> be the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> that is the numeric value of the code unit at index <var>k</var> within <var>px</var>.</li><li>Let <var>n</var> be the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> that is the numeric value of the code unit at index <var>k</var> within <var>py</var>.</li><li>If <var>m</var> &lt; <var>n</var>, return <emu-val>true</emu-val>. Otherwise, return <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>NOTE: Because <var>px</var> and <var>py</var> are primitive values evaluation order is not important.</li><li>Let <var>nx</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>px</var>).</li><li>Let <var>ny</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>py</var>).</li><li>If <var>nx</var> is <emu-val>NaN</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>ny</var> is <emu-val>NaN</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>nx</var> and <var>ny</var> are the same <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>, return <emu-val>false</emu-val>.</li><li>If <var>nx</var> is <emu-val>+0</emu-val> and <var>ny</var> is <emu-val>-0</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>nx</var> is <emu-val>-0</emu-val> and <var>ny</var> is <emu-val>+0</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>ny</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>ny</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>true</emu-val>.</li><li>If the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of <var>nx</var> is less than the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of <var>ny</var>&#8212;note that these mathematical values are both finite and not both zero&#8212;return <emu-val>true</emu-val>. Otherwise, return <emu-val>false</emu-val>.\n      </li></ol></li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>Step 3 differs from step 7 in the algorithm for the addition operator <code>+</code> (<emu-xref href=\"#sec-addition-operator-plus\"><a href=\"#sec-addition-operator-plus\" class=\"excluded-xref\" excluded-id=\"sec-addition-operator-plus\">#sec-addition-operator-plus</a></emu-xref>) by using the logical-and operation instead of the logical-or operation.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>The comparison of Strings uses a simple lexicographic ordering on sequences of code unit values. There is no attempt to use the more complex, semantically oriented definitions of character or string equality and collating order defined in the Unicode specification. Therefore String values that are canonically equal according to the Unicode standard could test as unequal. In effect this algorithm assumes that both Strings are already in normalized form. Also, note that for strings containing supplementary characters, lexicographic ordering on sequences of UTF-16 code unit values differs from that on sequences of code point values.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype.sort": {"num": "22.2.3.26", "title": "#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.sort\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.sort\">#sec-%typedarray%.prototype.sort</span> %TypedArray%.prototype.sort ( <var>comparefn</var> )</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code> is a distinct function that, except as described below, implements the same requirements as those of <code>Array.prototype.sort</code> as defined in  <emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>. The implementation of the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code> specification may be optimized with the knowledge that the <emu-val>this</emu-val> value is an object that has a fixed length and whose  <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer-indexed</a></emu-xref> properties are not sparse. The only internal methods of the <emu-val>this</emu-val> object that the algorithm may call are [[Get]] and [[Set]].</p>\n        <p>This function is not generic. The <emu-val>this</emu-val> value must be an object with a [[TypedArrayName]] internal slot.</p>\n        <p>Upon entry, the following steps are performed to initialize evaluation of the <code>sort</code> function. These steps are used instead of the entry steps in  <emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>:</p>\n        <emu-alg><ol><li>If <var>comparefn</var> is not <emu-val>undefined</emu-val> and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>comparefn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>obj</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>obj</var>).</li><li>Let <var>len</var> be <var>obj</var>.[[ArrayLength]].\n        </li></ol></emu-alg>\n        <p>The implementation-defined sort order condition for exotic objects is not applied by <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code>.</p>\n        <p>The following version of <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> is used by <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code>. It performs a numeric comparison rather than the string comparison used in  <emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>. <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> has access to the <var>comparefn</var> and <var>buffer</var> values of the current invocation of the <code>sort</code> method.</p>\n        <p>When the TypedArray <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> abstract operation is called with two arguments <var>x</var> and <var>y</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Both <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Number.</li><li>If <var>comparefn</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>comparefn</var>, <emu-val>undefined</emu-val>, &#171; <var>x</var>, <var>y</var> &#187;)).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>v</var> is <emu-val>NaN</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return <var>v</var>.</li></ol></li><li>If <var>x</var> and <var>y</var> are both <emu-val>NaN</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>x</var> is <emu-val>NaN</emu-val>, return 1.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, return -1.</li><li>If <var>x</var> &lt; <var>y</var>, return -1.</li><li>If <var>x</var> &gt; <var>y</var>, return 1.</li><li>If <var>x</var> is <emu-val>-0</emu-val> and <var>y</var> is <emu-val>+0</emu-val>, return -1.</li><li>If <var>x</var> is <emu-val>+0</emu-val> and <var>y</var> is <emu-val>-0</emu-val>, return 1.</li><li>Return <emu-val>+0</emu-val>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Because <emu-val>NaN</emu-val> always compares greater than any other value, <emu-val>NaN</emu-val> property values always sort to the end of the result when <var>comparefn</var> is not provided.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-setvalueinbuffer": {"num": "24.1.1.8", "title": "#sec-setvalueinbuffer SetValueInBuffer ( arrayBuffer, byteIndex, type, value, isTypedArray, order [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-setvalueinbuffer\" aoid=\"SetValueInBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setvalueinbuffer\">#sec-setvalueinbuffer</span> SetValueInBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>value</var>, <var>isTypedArray</var>, <var>order</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation SetValueInBuffer takes seven parameters, an ArrayBuffer or SharedArrayBuffer <var>arrayBuffer</var>, an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>byteIndex</var>, a String <var>type</var>, a Number <var>value</var>, a Boolean <var>isTypedArray</var>, a String <var>order</var>, and optionally a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>byteIndex</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value &#8805; 0.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>rawBytes</var> be <emu-xref aoid=\"NumberToRawBytes\"><a href=\"#sec-numbertorawbytes\">NumberToRawBytes</a></emu-xref>(<var>type</var>, <var>value</var>, <var>isLittleEndian</var>).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>If <var>isTypedArray</var> is <emu-val>true</emu-val> and <var>type</var> is <code>\"Int8\"</code>, <code>\"Uint8\"</code>, <code>\"Int16\"</code>, <code>\"Uint16\"</code>, <code>\"Int32\"</code>, or <code>\"Uint32\"</code>, let <var>noTear</var> be <emu-val>true</emu-val>; otherwise let <var>noTear</var> be <emu-val>false</emu-val>.</li><li>Append <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> { [[Order]]: <var>order</var>, [[NoTear]]: <var>noTear</var>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var>, [[Payload]]: <var>rawBytes</var> } to <var>eventList</var>.</li></ol></li><li>Else, store the individual bytes of <var>rawBytes</var> into <var>block</var>, in order, starting at <var>block</var>[<var>byteIndex</var>].</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-testing-and-comparison-operations": {"num": "7.2", "title": "#sec-testing-and-comparison-operations Testing and Comparison Operations", "html": "<emu-clause id=\"sec-testing-and-comparison-operations\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-testing-and-comparison-operations\">#sec-testing-and-comparison-operations</span> Testing and Comparison Operations</h1>\n\n    <div id=\"excluded-sec-requireobjectcoercible\"><h1><span class=\"secnum\">7.2.1</span>#sec-requireobjectcoercible RequireObjectCoercible ( argument )</h1>...</div><div id=\"excluded-sec-isarray\"><h1><span class=\"secnum\">7.2.2</span>#sec-isarray IsArray ( argument )</h1>...</div><div id=\"excluded-sec-iscallable\"><h1><span class=\"secnum\">7.2.3</span>#sec-iscallable IsCallable ( argument )</h1>...</div><div id=\"excluded-sec-isconstructor\"><h1><span class=\"secnum\">7.2.4</span>#sec-isconstructor IsConstructor ( argument )</h1>...</div><div id=\"excluded-sec-isextensible-o\"><h1><span class=\"secnum\">7.2.5</span>#sec-isextensible-o IsExtensible ( O )</h1>...</div><div id=\"excluded-sec-isinteger\"><h1><span class=\"secnum\">7.2.6</span>#sec-isinteger IsInteger ( argument )</h1>...</div><div id=\"excluded-sec-ispropertykey\"><h1><span class=\"secnum\">7.2.7</span>#sec-ispropertykey IsPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-isregexp\"><h1><span class=\"secnum\">7.2.8</span>#sec-isregexp IsRegExp ( argument )</h1>...</div><div id=\"excluded-sec-isstringprefix\"><h1><span class=\"secnum\">7.2.9</span>#sec-isstringprefix IsStringPrefix ( p, q )</h1>...</div><div id=\"excluded-sec-samevalue\"><h1><span class=\"secnum\">7.2.10</span>#sec-samevalue SameValue ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluezero\"><h1><span class=\"secnum\">7.2.11</span>#sec-samevaluezero SameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluenonnumber\"><h1><span class=\"secnum\">7.2.12</span>#sec-samevaluenonnumber SameValueNonNumber ( x, y )</h1>...</div><div id=\"excluded-sec-abstract-relational-comparison\"><h1><span class=\"secnum\">7.2.13</span>#sec-abstract-relational-comparison Abstract Relational Comparison</h1>...</div><div id=\"excluded-sec-abstract-equality-comparison\"><h1><span class=\"secnum\">7.2.14</span>#sec-abstract-equality-comparison Abstract Equality Comparison</h1>...</div><div id=\"excluded-sec-strict-equality-comparison\"><h1><span class=\"secnum\">7.2.15</span>#sec-strict-equality-comparison Strict Equality Comparison</h1>...</div></emu-clause>\n\n  "}, "sec-toboolean": {"num": "7.1.2", "title": "#sec-toboolean ToBoolean ( argument )", "html": "<emu-clause id=\"sec-toboolean\" aoid=\"ToBoolean\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toboolean\">#sec-toboolean</span> ToBoolean ( <var>argument</var> )</h1>\n      <p>The abstract operation ToBoolean converts <var>argument</var> to a value of type Boolean according to  <emu-xref href=\"#table-10\"><a href=\"#table-10\" class=\"excluded-xref\" excluded-id=\"table-10\">#table-10</a></emu-xref>:</p>\n      <emu-table id=\"table-10\" caption=\"ToBoolean Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-10\">#table-10</span>: <emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>+0</emu-val>, <emu-val>-0</emu-val>, or <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              If <var>argument</var> is the empty String (its length is zero), return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-requireobjectcoercible": {"num": "7.2.1", "title": "#sec-requireobjectcoercible RequireObjectCoercible ( argument )", "html": "<emu-clause id=\"sec-requireobjectcoercible\" aoid=\"RequireObjectCoercible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-requireobjectcoercible\">#sec-requireobjectcoercible</span> RequireObjectCoercible ( <var>argument</var> )</h1>\n      <p>The abstract operation RequireObjectCoercible throws an error if <var>argument</var> is a value that cannot be converted to an Object using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. It is defined by  <emu-xref href=\"#table-14\"><a href=\"#table-14\" class=\"excluded-xref\" excluded-id=\"table-14\">#table-14</a></emu-xref>:</p>\n      <emu-table id=\"table-14\" caption=\"RequireObjectCoercible Results\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-14\">#table-14</span>: <emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref> Results</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-static-semantics-mv": {"num": "11.8.3.1", "title": "#sec-static-semantics-mv Static Semantics: MV", "html": "<emu-clause id=\"sec-static-semantics-mv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</span> Static Semantics: MV</h1>\n        <p>A numeric literal stands for a value of the Number type. This value is determined in two steps: first, a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV) is derived from the literal; second, this <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> is rounded as described below.</p>\n        <ul>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bf0728f3\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8af49841\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>), where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"971b5362\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ef115d8a\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>)) &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c1f33372\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0cd5f3c3\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var> -<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b404bcda\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d1f87c1\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d4c393e5\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"3f4b150f\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>n</var></sup>) plus the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"ExponentPart\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 3<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 4<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 5<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 6<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 7<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 8<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 9<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a61fcfde\"><emu-t>a</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9d7d0fdb\"><emu-t>A</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0185ce89\"><emu-t>b</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0a26d628\"><emu-t>B</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 11<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d594c144\"><emu-t>c</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f87cc5b\"><emu-t>C</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 12<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0f32729\"><emu-t>d</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"919b1483\"><emu-t>D</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 13<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0d7c9fba\"><emu-t>e</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b15f6792\"><emu-t>E</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 14<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4068cae7\"><emu-t>f</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0d544f70\"><emu-t>F</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 15<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> &#215; 8<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#215; 16<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          \n          </li>\n        </ul>\n        <p>Once the exact MV for a numeric literal has been determined, it is then rounded to a value of the Number type. If the MV is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, then the rounded value is <emu-val>+0</emu-val>; otherwise, the rounded value must be the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV (as specified in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>), unless the literal is a <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt> and the literal has more than 20 significant digits, in which case the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> may be either the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a <code>0</code> digit or the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a <code>0</code> digit and then incrementing the literal at the 20th significant digit position. A digit is  <em>significant</em> if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n        <ul>\n          <li>\n            it is not <code>0</code>; or\n          \n          </li>\n          <li>\n            there is a nonzero digit to its left and there is a nonzero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n          \n          </li>\n        </ul>\n      </emu-clause>\n    "}, "sec-prefix-increment-operator-runtime-semantics-evaluation": {"num": "12.4.6.1", "title": "#sec-prefix-increment-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-prefix-increment-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-prefix-increment-operator-runtime-semantics-evaluation\">#sec-prefix-increment-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5701b162\"><emu-t>++</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Let <var>newValue</var> be the result of adding the value 1 to <var>oldValue</var>, using the same rules as for the <code>+</code> operator (see <emu-xref href=\"#sec-applying-the-additive-operators-to-numbers\"><a href=\"#sec-applying-the-additive-operators-to-numbers\" class=\"excluded-xref\" excluded-id=\"sec-applying-the-additive-operators-to-numbers\">#sec-applying-the-additive-operators-to-numbers</a></emu-xref>).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>expr</var>, <var>newValue</var>).</li><li>Return <var>newValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-properties-of-the-date-prototype-object": {"num": "20.3.4", "title": "#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-date-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</span> Properties of the Date Prototype Object</h1>\n      <p>The Date prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DatePrototype%</dfn>.</li>\n        <li>is itself an ordinary object.</li>\n        <li>is not a Date instance and does not have a [[DateValue]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly defined otherwise, the methods of the Date prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be an object that has a [[DateValue]] internal slot that has been initialized to a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>.</p>\n      <p>The abstract operation  <dfn id=\"sec-thistimevalue\" aoid=\"thisTimeValue\">thisTimeValue</dfn>(<var>value</var>) performs the following steps:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Return <var>value</var>.[[DateValue]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>In following descriptions of functions that are properties of the Date prototype object, the phrase &#8220;<dfn id=\"this-Date-object\">this Date object</dfn>&#8221; refers to the object that is the <emu-val>this</emu-val> value for the invocation of the function. If the Type of the <emu-val>this</emu-val> value is not Object, a <emu-val>TypeError</emu-val> exception is thrown. The phrase &#8220;<dfn id=\"this-time-value\">this time value</dfn>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thistimevalue\"><a href=\"#sec-thistimevalue\">thisTimeValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-date.prototype.constructor\"><h1><span class=\"secnum\">20.3.4.1</span>#sec-date.prototype.constructor Date.prototype.constructor</h1>...</div><div id=\"excluded-sec-date.prototype.getdate\"><h1><span class=\"secnum\">20.3.4.2</span>#sec-date.prototype.getdate Date.prototype.getDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getday\"><h1><span class=\"secnum\">20.3.4.3</span>#sec-date.prototype.getday Date.prototype.getDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getfullyear\"><h1><span class=\"secnum\">20.3.4.4</span>#sec-date.prototype.getfullyear Date.prototype.getFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gethours\"><h1><span class=\"secnum\">20.3.4.5</span>#sec-date.prototype.gethours Date.prototype.getHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmilliseconds\"><h1><span class=\"secnum\">20.3.4.6</span>#sec-date.prototype.getmilliseconds Date.prototype.getMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getminutes\"><h1><span class=\"secnum\">20.3.4.7</span>#sec-date.prototype.getminutes Date.prototype.getMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmonth\"><h1><span class=\"secnum\">20.3.4.8</span>#sec-date.prototype.getmonth Date.prototype.getMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getseconds\"><h1><span class=\"secnum\">20.3.4.9</span>#sec-date.prototype.getseconds Date.prototype.getSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettime\"><h1><span class=\"secnum\">20.3.4.10</span>#sec-date.prototype.gettime Date.prototype.getTime ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettimezoneoffset\"><h1><span class=\"secnum\">20.3.4.11</span>#sec-date.prototype.gettimezoneoffset Date.prototype.getTimezoneOffset ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcdate\"><h1><span class=\"secnum\">20.3.4.12</span>#sec-date.prototype.getutcdate Date.prototype.getUTCDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcday\"><h1><span class=\"secnum\">20.3.4.13</span>#sec-date.prototype.getutcday Date.prototype.getUTCDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcfullyear\"><h1><span class=\"secnum\">20.3.4.14</span>#sec-date.prototype.getutcfullyear Date.prototype.getUTCFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutchours\"><h1><span class=\"secnum\">20.3.4.15</span>#sec-date.prototype.getutchours Date.prototype.getUTCHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmilliseconds\"><h1><span class=\"secnum\">20.3.4.16</span>#sec-date.prototype.getutcmilliseconds Date.prototype.getUTCMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcminutes\"><h1><span class=\"secnum\">20.3.4.17</span>#sec-date.prototype.getutcminutes Date.prototype.getUTCMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmonth\"><h1><span class=\"secnum\">20.3.4.18</span>#sec-date.prototype.getutcmonth Date.prototype.getUTCMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcseconds\"><h1><span class=\"secnum\">20.3.4.19</span>#sec-date.prototype.getutcseconds Date.prototype.getUTCSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.setdate\"><h1><span class=\"secnum\">20.3.4.20</span>#sec-date.prototype.setdate Date.prototype.setDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setfullyear\"><h1><span class=\"secnum\">20.3.4.21</span>#sec-date.prototype.setfullyear Date.prototype.setFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.sethours\"><h1><span class=\"secnum\">20.3.4.22</span>#sec-date.prototype.sethours Date.prototype.setHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmilliseconds\"><h1><span class=\"secnum\">20.3.4.23</span>#sec-date.prototype.setmilliseconds Date.prototype.setMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setminutes\"><h1><span class=\"secnum\">20.3.4.24</span>#sec-date.prototype.setminutes Date.prototype.setMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmonth\"><h1><span class=\"secnum\">20.3.4.25</span>#sec-date.prototype.setmonth Date.prototype.setMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setseconds\"><h1><span class=\"secnum\">20.3.4.26</span>#sec-date.prototype.setseconds Date.prototype.setSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.settime\"><h1><span class=\"secnum\">20.3.4.27</span>#sec-date.prototype.settime Date.prototype.setTime ( time )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcdate\"><h1><span class=\"secnum\">20.3.4.28</span>#sec-date.prototype.setutcdate Date.prototype.setUTCDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcfullyear\"><h1><span class=\"secnum\">20.3.4.29</span>#sec-date.prototype.setutcfullyear Date.prototype.setUTCFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutchours\"><h1><span class=\"secnum\">20.3.4.30</span>#sec-date.prototype.setutchours Date.prototype.setUTCHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmilliseconds\"><h1><span class=\"secnum\">20.3.4.31</span>#sec-date.prototype.setutcmilliseconds Date.prototype.setUTCMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcminutes\"><h1><span class=\"secnum\">20.3.4.32</span>#sec-date.prototype.setutcminutes Date.prototype.setUTCMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmonth\"><h1><span class=\"secnum\">20.3.4.33</span>#sec-date.prototype.setutcmonth Date.prototype.setUTCMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcseconds\"><h1><span class=\"secnum\">20.3.4.34</span>#sec-date.prototype.setutcseconds Date.prototype.setUTCSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.todatestring\"><h1><span class=\"secnum\">20.3.4.35</span>#sec-date.prototype.todatestring Date.prototype.toDateString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toisostring\"><h1><span class=\"secnum\">20.3.4.36</span>#sec-date.prototype.toisostring Date.prototype.toISOString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.tojson\"><h1><span class=\"secnum\">20.3.4.37</span>#sec-date.prototype.tojson Date.prototype.toJSON ( key )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaledatestring\"><h1><span class=\"secnum\">20.3.4.38</span>#sec-date.prototype.tolocaledatestring Date.prototype.toLocaleDateString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocalestring\"><h1><span class=\"secnum\">20.3.4.39</span>#sec-date.prototype.tolocalestring Date.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaletimestring\"><h1><span class=\"secnum\">20.3.4.40</span>#sec-date.prototype.tolocaletimestring Date.prototype.toLocaleTimeString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tostring\"><h1><span class=\"secnum\">20.3.4.41</span>#sec-date.prototype.tostring Date.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.totimestring\"><h1><span class=\"secnum\">20.3.4.42</span>#sec-date.prototype.totimestring Date.prototype.toTimeString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toutcstring\"><h1><span class=\"secnum\">20.3.4.43</span>#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.valueof\"><h1><span class=\"secnum\">20.3.4.44</span>#sec-date.prototype.valueof Date.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-date.prototype-@@toprimitive\"><h1><span class=\"secnum\">20.3.4.45</span>#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )</h1>...</div></emu-clause>\n\n    "}, "sec-function-properties-of-the-math-object": {"num": "20.2.2", "title": "#sec-function-properties-of-the-math-object Function Properties of the Math Object", "html": "<emu-clause id=\"sec-function-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-properties-of-the-math-object\">#sec-function-properties-of-the-math-object</span> Function Properties of the Math Object</h1>\n      <p>Each of the following <code>Math</code> object functions applies the <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> abstract operation to each of its arguments (in left-to-right order if there is more than one). If <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, that <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> is immediately returned. Otherwise, the function performs a computation on the resulting <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>(s). The value returned by each function is a Number.</p>\n      <p>In the function descriptions below, the symbols <emu-val>NaN</emu-val>, <emu-val>-0</emu-val>, <emu-val>+0</emu-val>, <emu-val>-&#8734;</emu-val> and <emu-val>+&#8734;</emu-val> refer to the Number values described in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The behaviour of the functions <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atanh</code>, <code>atan2</code>, <code>cbrt</code>, <code>cos</code>, <code>cosh</code>, <code>exp</code>, <code>expm1</code>, <code>hypot</code>, <code>log</code>,<code>log1p</code>, <code>log2</code>, <code>log10</code>, <code>pow</code>, <code>random</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, and <code>tanh</code> is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest. For other argument values, these functions are intended to compute approximations to the results of familiar mathematical functions, but some latitude is allowed in the choice of approximation algorithms. The general intent is that an implementer should be able to use the same mathematical library for ECMAScript on a given hardware platform that is available to C programmers on that platform.</p>\n        <p>Although the choice of algorithms is left to the implementation, it is recommended (but not specified by this standard) that implementations use the approximation algorithms for IEEE 754-2008 arithmetic contained in <code>fdlibm</code>, the freely distributable mathematical library from Sun Microsystems (<a href=\"http://www.netlib.org/fdlibm\">http://www.netlib.org/fdlibm</a>).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-math.abs\"><h1><span class=\"secnum\">20.2.2.1</span>#sec-math.abs Math.abs ( x )</h1>...</div><div id=\"excluded-sec-math.acos\"><h1><span class=\"secnum\">20.2.2.2</span>#sec-math.acos Math.acos ( x )</h1>...</div><div id=\"excluded-sec-math.acosh\"><h1><span class=\"secnum\">20.2.2.3</span>#sec-math.acosh Math.acosh ( x )</h1>...</div><div id=\"excluded-sec-math.asin\"><h1><span class=\"secnum\">20.2.2.4</span>#sec-math.asin Math.asin ( x )</h1>...</div><div id=\"excluded-sec-math.asinh\"><h1><span class=\"secnum\">20.2.2.5</span>#sec-math.asinh Math.asinh ( x )</h1>...</div><div id=\"excluded-sec-math.atan\"><h1><span class=\"secnum\">20.2.2.6</span>#sec-math.atan Math.atan ( x )</h1>...</div><div id=\"excluded-sec-math.atanh\"><h1><span class=\"secnum\">20.2.2.7</span>#sec-math.atanh Math.atanh ( x )</h1>...</div><div id=\"excluded-sec-math.atan2\"><h1><span class=\"secnum\">20.2.2.8</span>#sec-math.atan2 Math.atan2 ( y, x )</h1>...</div><div id=\"excluded-sec-math.cbrt\"><h1><span class=\"secnum\">20.2.2.9</span>#sec-math.cbrt Math.cbrt ( x )</h1>...</div><div id=\"excluded-sec-math.ceil\"><h1><span class=\"secnum\">20.2.2.10</span>#sec-math.ceil Math.ceil ( x )</h1>...</div><div id=\"excluded-sec-math.clz32\"><h1><span class=\"secnum\">20.2.2.11</span>#sec-math.clz32 Math.clz32 ( x )</h1>...</div><div id=\"excluded-sec-math.cos\"><h1><span class=\"secnum\">20.2.2.12</span>#sec-math.cos Math.cos ( x )</h1>...</div><div id=\"excluded-sec-math.cosh\"><h1><span class=\"secnum\">20.2.2.13</span>#sec-math.cosh Math.cosh ( x )</h1>...</div><div id=\"excluded-sec-math.exp\"><h1><span class=\"secnum\">20.2.2.14</span>#sec-math.exp Math.exp ( x )</h1>...</div><div id=\"excluded-sec-math.expm1\"><h1><span class=\"secnum\">20.2.2.15</span>#sec-math.expm1 Math.expm1 ( x )</h1>...</div><div id=\"excluded-sec-math.floor\"><h1><span class=\"secnum\">20.2.2.16</span>#sec-math.floor Math.floor ( x )</h1>...</div><div id=\"excluded-sec-math.fround\"><h1><span class=\"secnum\">20.2.2.17</span>#sec-math.fround Math.fround ( x )</h1>...</div><div id=\"excluded-sec-math.hypot\"><h1><span class=\"secnum\">20.2.2.18</span>#sec-math.hypot Math.hypot ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.imul\"><h1><span class=\"secnum\">20.2.2.19</span>#sec-math.imul Math.imul ( x, y )</h1>...</div><div id=\"excluded-sec-math.log\"><h1><span class=\"secnum\">20.2.2.20</span>#sec-math.log Math.log ( x )</h1>...</div><div id=\"excluded-sec-math.log1p\"><h1><span class=\"secnum\">20.2.2.21</span>#sec-math.log1p Math.log1p ( x )</h1>...</div><div id=\"excluded-sec-math.log10\"><h1><span class=\"secnum\">20.2.2.22</span>#sec-math.log10 Math.log10 ( x )</h1>...</div><div id=\"excluded-sec-math.log2\"><h1><span class=\"secnum\">20.2.2.23</span>#sec-math.log2 Math.log2 ( x )</h1>...</div><div id=\"excluded-sec-math.max\"><h1><span class=\"secnum\">20.2.2.24</span>#sec-math.max Math.max ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.min\"><h1><span class=\"secnum\">20.2.2.25</span>#sec-math.min Math.min ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.pow\"><h1><span class=\"secnum\">20.2.2.26</span>#sec-math.pow Math.pow ( base, exponent )</h1>...</div><div id=\"excluded-sec-math.random\"><h1><span class=\"secnum\">20.2.2.27</span>#sec-math.random Math.random ( )</h1>...</div><div id=\"excluded-sec-math.round\"><h1><span class=\"secnum\">20.2.2.28</span>#sec-math.round Math.round ( x )</h1>...</div><div id=\"excluded-sec-math.sign\"><h1><span class=\"secnum\">20.2.2.29</span>#sec-math.sign Math.sign ( x )</h1>...</div><div id=\"excluded-sec-math.sin\"><h1><span class=\"secnum\">20.2.2.30</span>#sec-math.sin Math.sin ( x )</h1>...</div><div id=\"excluded-sec-math.sinh\"><h1><span class=\"secnum\">20.2.2.31</span>#sec-math.sinh Math.sinh ( x )</h1>...</div><div id=\"excluded-sec-math.sqrt\"><h1><span class=\"secnum\">20.2.2.32</span>#sec-math.sqrt Math.sqrt ( x )</h1>...</div><div id=\"excluded-sec-math.tan\"><h1><span class=\"secnum\">20.2.2.33</span>#sec-math.tan Math.tan ( x )</h1>...</div><div id=\"excluded-sec-math.tanh\"><h1><span class=\"secnum\">20.2.2.34</span>#sec-math.tanh Math.tanh ( x )</h1>...</div><div id=\"excluded-sec-math.trunc\"><h1><span class=\"secnum\">20.2.2.35</span>#sec-math.trunc Math.trunc ( x )</h1>...</div></emu-clause>\n  "}, "sec-date.prototype.tostring": {"num": "20.3.4.41", "title": "#sec-date.prototype.tostring Date.prototype.toString ( )", "html": "<emu-clause id=\"sec-date.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</span> Date.prototype.toString ( )</h1>\n        <p>The following steps are performed:</p>\n        <emu-alg><ol><li>Let <var>tv</var> be ?&#160;<emu-xref href=\"#sec-thistimevalue\"><a href=\"#sec-thistimevalue\">thisTimeValue</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>tv</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>For any Date object <code>d</code> whose milliseconds amount is zero, the result of <code>Date.parse(d.toString())</code> is equal to <code>d.valueOf()</code>. See  <emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\" class=\"excluded-xref\" excluded-id=\"sec-date.parse\">#sec-date.parse</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>toString</code> function is not generic; it throws a <emu-val>TypeError</emu-val> exception if its <emu-val>this</emu-val> value is not a Date object. Therefore, it cannot be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-timestring\"><h1><span class=\"secnum\">20.3.4.41.1</span>#sec-timestring Runtime Semantics: TimeString ( tv )</h1>...</div><div id=\"excluded-sec-datestring\"><h1><span class=\"secnum\">20.3.4.41.2</span>#sec-datestring Runtime Semantics: DateString ( tv )</h1>...</div><div id=\"excluded-sec-timezoneestring\"><h1><span class=\"secnum\">20.3.4.41.3</span>#sec-timezoneestring Runtime Semantics: TimeZoneString ( tv )</h1>...</div><div id=\"excluded-sec-todatestring\"><h1><span class=\"secnum\">20.3.4.41.4</span>#sec-todatestring Runtime Semantics: ToDateString ( tv )</h1>...</div></emu-clause>\n\n      "}, "sec-date-time-string-format": {"num": "20.3.1.15", "title": "#sec-date-time-string-format Date Time String Format", "html": "<emu-clause id=\"sec-date-time-string-format\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</span> Date Time String Format</h1>\n        <p>ECMAScript defines a string interchange format for date-times based upon a simplification of the ISO 8601 calendar date extended format. The format is as follows: <code>YYYY-MM-DDTHH:mm:ss.sssZ</code></p>\n        <p>Where the elements are as follows:</p>\n        <figure>\n          <table class=\"lightweight-table\">\n            <tbody>\n            <tr>\n              <td>\n                <code>YYYY</code>\n              \n              </td>\n              <td>\n                is the year in the proleptic Gregorian calendar as four decimal digits from 0000 to 9999, or as an  <emu-xref href=\"#sec-expanded-years\"><a href=\"#sec-expanded-years\">expanded year</a></emu-xref> of <code>\"+\"</code> or <code>\"-\"</code> followed by six decimal digits.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>-</code>\n              \n              </td>\n              <td>\n                <code>\"-\"</code> (hyphen) appears literally twice in the string.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>MM</code>\n              \n              </td>\n              <td>\n                is the month of the year as two decimal digits from 01 (January) to 12 (December).\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>DD</code>\n              \n              </td>\n              <td>\n                is the day of the month as two decimal digits from 01 to 31.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>T</code>\n              \n              </td>\n              <td>\n                <code>\"T\"</code> appears literally in the string, to indicate the beginning of the time element.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>HH</code>\n              \n              </td>\n              <td>\n                is the number of complete hours that have passed since midnight as two decimal digits from 00 to 24.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>:</code>\n              \n              </td>\n              <td>\n                <code>\":\"</code> (colon) appears literally twice in the string.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>mm</code>\n              \n              </td>\n              <td>\n                is the number of complete minutes since the start of the hour as two decimal digits from 00 to 59.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>ss</code>\n              \n              </td>\n              <td>\n                is the number of complete seconds since the start of the minute as two decimal digits from 00 to 59.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>.</code>\n              \n              </td>\n              <td>\n                <code>\".\"</code> (dot) appears literally in the string.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>sss</code>\n              \n              </td>\n              <td>\n                is the number of complete milliseconds since the start of the second as three decimal digits.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>Z</code>\n              \n              </td>\n              <td>\n                is the UTC offset representation specified as <code>\"Z\"</code> (for UTC with no offset) or an offset of either <code>\"+\"</code> or <code>\"-\"</code> followed by a time expression <code>HH:mm</code> (indicating local time ahead of or behind UTC, respectively)\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure>\n        <p>This format includes date-only forms:</p>\n        <pre>YYYY\nYYYY-MM\nYYYY-MM-DD\n        </pre>\n        <p>It also includes &#8220;date-time&#8221; forms that consist of one of the above date-only forms immediately followed by one of the following time forms with an optional UTC offset representation appended:</p>\n        <pre>THH:mm\nTHH:mm:ss\nTHH:mm:ss.sss\n        </pre>\n        <p>A string containing out-of-bounds or nonconforming elements is not a valid instance of this format.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>As every day both starts and ends with midnight, the two notations <code>00:00</code> and <code>24:00</code> are available to distinguish the two midnights that can be associated with one date. This means that the following two notations refer to exactly the same point in time: <code>1995-02-04T24:00</code> and <code>1995-02-05T00:00</code>. This interpretation of the latter form as \"end of a calendar day\" is consistent with ISO 8601, even though that specification reserves it for describing time intervals and does not permit it within representations of single points in time.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>There exists no international standard that specifies abbreviations for civil time zones like CET, EST, etc. and sometimes the same abbreviation is even used for two very different time zones. For this reason, both ISO 8601 and this format specify numeric representations of time zone offsets.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-expanded-years\"><h1><span class=\"secnum\">20.3.1.15.1</span>#sec-expanded-years Expanded Years</h1>...</div></emu-clause>\n    "}, "sec-overview-of-date-objects-and-definitions-of-abstract-operations": {"num": "20.3.1", "title": "#sec-overview-of-date-objects-and-definitions-of-abstract-operations Overview of Date Objects and Definitions of Abstract Operations", "html": "<emu-clause id=\"sec-overview-of-date-objects-and-definitions-of-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-overview-of-date-objects-and-definitions-of-abstract-operations\">#sec-overview-of-date-objects-and-definitions-of-abstract-operations</span> Overview of Date Objects and Definitions of Abstract Operations</h1>\n      <p>The following functions are <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> that operate on time values (defined in  <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\" class=\"excluded-xref\" excluded-id=\"sec-time-values-and-time-range\">#sec-time-values-and-time-range</a></emu-xref>). Note that, in every case, if any argument to one of these functions is <emu-val>NaN</emu-val>, the result will be <emu-val>NaN</emu-val>.</p>\n\n      <div id=\"excluded-sec-time-values-and-time-range\"><h1><span class=\"secnum\">20.3.1.1</span>#sec-time-values-and-time-range Time Values and Time Range</h1>...</div><div id=\"excluded-sec-day-number-and-time-within-day\"><h1><span class=\"secnum\">20.3.1.2</span>#sec-day-number-and-time-within-day Day Number and Time within Day</h1>...</div><div id=\"excluded-sec-year-number\"><h1><span class=\"secnum\">20.3.1.3</span>#sec-year-number Year Number</h1>...</div><div id=\"excluded-sec-month-number\"><h1><span class=\"secnum\">20.3.1.4</span>#sec-month-number Month Number</h1>...</div><div id=\"excluded-sec-date-number\"><h1><span class=\"secnum\">20.3.1.5</span>#sec-date-number Date Number</h1>...</div><div id=\"excluded-sec-week-day\"><h1><span class=\"secnum\">20.3.1.6</span>#sec-week-day Week Day</h1>...</div><div id=\"excluded-sec-local-time-zone-adjustment\"><h1><span class=\"secnum\">20.3.1.7</span>#sec-local-time-zone-adjustment LocalTZA ( t, isUTC )</h1>...</div><div id=\"excluded-sec-localtime\"><h1><span class=\"secnum\">20.3.1.8</span>#sec-localtime LocalTime ( t )</h1>...</div><div id=\"excluded-sec-utc-t\"><h1><span class=\"secnum\">20.3.1.9</span>#sec-utc-t UTC ( t )</h1>...</div><div id=\"excluded-sec-hours-minutes-second-and-milliseconds\"><h1><span class=\"secnum\">20.3.1.10</span>#sec-hours-minutes-second-and-milliseconds Hours, Minutes, Second, and Milliseconds</h1>...</div><div id=\"excluded-sec-maketime\"><h1><span class=\"secnum\">20.3.1.11</span>#sec-maketime MakeTime ( hour, min, sec, ms )</h1>...</div><div id=\"excluded-sec-makeday\"><h1><span class=\"secnum\">20.3.1.12</span>#sec-makeday MakeDay ( year, month, date )</h1>...</div><div id=\"excluded-sec-makedate\"><h1><span class=\"secnum\">20.3.1.13</span>#sec-makedate MakeDate ( day, time )</h1>...</div><div id=\"excluded-sec-timeclip\"><h1><span class=\"secnum\">20.3.1.14</span>#sec-timeclip TimeClip ( time )</h1>...</div><div id=\"excluded-sec-date-time-string-format\"><h1><span class=\"secnum\">20.3.1.15</span>#sec-date-time-string-format Date Time String Format</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-1": "Table 1", "table-3": "Table 3", "table-7": "Table 7", "table-10": "Table 9", "table-11": "Table 10", "table-12": "Table 11", "table-13": "Table 12", "table-14": "Table 13", "table-agent-record": "Table 26", "table-35": "Table 35", "table-49": "Table 60"}}, "to": {"secList": ["sec-left-shift-operator-runtime-semantics-evaluation", "sec-signed-right-shift-operator-runtime-semantics-evaluation", "sec-tonumber-applied-to-the-string-type", "sec-strict-equality-comparison", "sec-samevalue", "sec-getmodifysetvalueinbuffer", "sec-additional-syntax-numeric-literals", "sec-integerindexedelementset", "sec-agents", "sec-number-conversions", "sec-number.prototype.tostring", "sec-date-constructor", "sec-literals-numeric-literals", "sec-unary-minus-operator-runtime-semantics-evaluation", "sec-object-initializer-runtime-semantics-evaluation", "sec-bitwise-not-operator-runtime-semantics-evaluation", "sec-subtraction-operator-minus", "sec-numbers-and-dates", "sec-abstract-operations-for-arraybuffer-objects", "sec-properties-of-the-dataview-prototype-object", "sec-binary-bitwise-operators-runtime-semantics-evaluation", "sec-hasprimitivebase", "sec-integer-indexed-exotic-objects", "sec-integerindexedelementget", "sec-samevaluezero", "sec-integer-indexed-exotic-objects-ownpropertykeys", "sec-serializejsonproperty", "sec-postfix-increment-operator-runtime-semantics-evaluation", "sec-date-objects", "sec-postfix-decrement-operator-runtime-semantics-evaluation", "sec-allocatetypedarray", "sec-validatesharedintegertypedarray", "sec-atomics.compareexchange", "sec-%typedarray%.prototype.set-typedarray-offset", "sec-type-conversion", "sec-integerindexedobjectcreate", "sec-ecmascript-language-types-number-type", "sec-properties-of-the-date-constructor", "sec-%typedarray%.prototype.fill", "sec-toobject", "sec-setviewvalue", "sec-atomicreadmodifywrite", "sec-tonumber", "sec-abstract-equality-comparison", "sec-prefix-decrement-operator-runtime-semantics-evaluation", "sec-additive-operators", "sec-atomics.store", "sec-object-initializer-static-semantics-propname", "sec-typedarray-typedarray", "sec-typeof-operator-runtime-semantics-evaluation", "sec-atomics.islockfree", "sec-addition-operator-plus-runtime-semantics-evaluation", "sec-well-known-intrinsic-objects", "sec-subtraction-operator-minus-runtime-semantics-evaluation", "sec-literals-runtime-semantics-evaluation", "sec-atomics.wait", "sec-math.pow", "sec-abstract-operations-for-atomics", "sec-ecmascript-language-types", "sec-exp-operator", "sec-runtime-semantics-mv-s", "sec-lexical-grammar", "sec-getvaluefrombuffer", "sec-exp-operator-runtime-semantics-evaluation", "sec-value-properties-of-the-math-object", "sec-atomics.notify", "sec-tostring", "sec-typedarray-objects", "sec-typedarray-constructors", "sec-%typedarray%.prototype.set-array-offset", "sec-unsigned-right-shift-operator-runtime-semantics-evaluation", "sec-multiplicative-operators-runtime-semantics-evaluation", "sec-math-object", "sec-abstract-relational-comparison", "sec-%typedarray%.prototype.sort", "sec-setvalueinbuffer", "sec-testing-and-comparison-operations", "sec-toboolean", "sec-requireobjectcoercible", "sec-static-semantics-mv", "sec-prefix-increment-operator-runtime-semantics-evaluation", "sec-properties-of-the-date-prototype-object", "sec-function-properties-of-the-math-object", "sec-date.prototype.tostring", "sec-date-time-string-format", "sec-overview-of-date-objects-and-definitions-of-abstract-operations"], "secData": {"sec-left-shift-operator-runtime-semantics-evaluation": {"num": "12.9.3.1", "title": "#sec-left-shift-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-left-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-left-shift-operator-runtime-semantics-evaluation\">#sec-left-shift-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ShiftExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b46f532a\"><emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-t>&lt;&lt;</emu-t><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>Return <var>T</var>::leftShift(<var>lnum</var>, <var>rnum</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-signed-right-shift-operator-runtime-semantics-evaluation": {"num": "12.9.4.1", "title": "#sec-signed-right-shift-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-signed-right-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-signed-right-shift-operator-runtime-semantics-evaluation\">#sec-signed-right-shift-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ShiftExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"548327f3\"><emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-t>&gt;&gt;</emu-t><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>Return <var>T</var>::signedRightShift(<var>lnum</var>, <var>rnum</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-tonumber-applied-to-the-string-type": {"num": "7.1.4.1", "title": "#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type", "html": "<emu-clause id=\"sec-tonumber-applied-to-the-string-type\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</span> ToNumber Applied to the String Type</h1>\n        <p><emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to Strings applies the following grammar to the input String interpreted as a sequence of UTF-16 encoded code points (<emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>). If the grammar cannot interpret the String as an expansion of <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt>, then the result of <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is <emu-val>NaN</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>The terminal symbols of this grammar are all composed of characters in the Unicode Basic Multilingual Plane (BMP). Therefore, the result of <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> will be <emu-val>NaN</emu-val> if the string contains any  <emu-xref href=\"#leading-surrogate\"><a href=\"#leading-surrogate\">leading surrogate</a></emu-xref> or  <emu-xref href=\"#trailing-surrogate\"><a href=\"#trailing-surrogate\">trailing surrogate</a></emu-xref> code units, whether paired or unpaired.</p>\n        </div></emu-note>\n        <h2>Syntax</h2>\n        <emu-grammar type=\"definition\"><emu-production name=\"StringNumericLiteral\" type=\"regexp\" id=\"prod-StringNumericLiteral\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"9a4be900\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"fe58c396\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpace\" type=\"regexp\" id=\"prod-StrWhiteSpace\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"2b0ea266\"><emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\" id=\"prod-StrWhiteSpaceChar\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrNumericLiteral\" type=\"regexp\" id=\"prod-StrNumericLiteral\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"db369ee0\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrDecimalLiteral\" type=\"regexp\" id=\"prod-StrDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"477fcd23\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a3f639a9\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d60f01a5\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" id=\"prod-StrUnsignedDecimalLiteral\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4afe8df8\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"8a89062c\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"24e27af7\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <p>All grammar symbols not explicitly defined above have the definitions used in the Lexical Grammar for numeric literals (<emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>)</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Some differences should be noted between the syntax of a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> and a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>:</p>\n          <ul>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> may include leading and/or trailing white space and/or line terminators.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may have any number of leading <code>0</code> digits.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is decimal may include a <code>+</code> or <code>-</code> to indicate its sign.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> that is empty or contains only white space is converted to <emu-val>+0</emu-val>.\n            \n            </li>\n            <li>\n              <code>Infinity</code> and <code>-Infinity</code> are recognized as a <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> but not as a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              A <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> cannot include a <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt>.\n            \n            </li>\n          </ul>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-runtime-semantics-mv-s\"><h1><span class=\"secnum\">7.1.4.1.1</span>#sec-runtime-semantics-mv-s Runtime Semantics: MV</h1>...</div></emu-clause>\n    "}, "sec-strict-equality-comparison": {"num": "7.2.15", "title": "#sec-strict-equality-comparison Strict Equality Comparison", "html": "<emu-clause id=\"sec-strict-equality-comparison\" aoid=\"Strict Equality Comparison\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-equality-comparison\">#sec-strict-equality-comparison</span> Strict Equality Comparison</h1>\n      <p>The comparison <var>x</var> === <var>y</var>, where <var>x</var> and <var>y</var> are values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number or BigInt, then<ol><li>Return !&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>)::equal(<var>x</var>, <var>y</var>).</li></ol></li><li>Return !&#160;<emu-xref aoid=\"SameValueNonNumeric\"><a href=\"#sec-samevaluenonnumeric\">SameValueNonNumeric</a></emu-xref>(<var>x</var>, <var>y</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>This algorithm differs from the <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref> Algorithm in its treatment of signed zeroes and NaNs.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-samevalue": {"num": "7.2.10", "title": "#sec-samevalue SameValue ( x, y )", "html": "<emu-clause id=\"sec-samevalue\" aoid=\"SameValue\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-samevalue\">#sec-samevalue</span> SameValue ( <var>x</var>, <var>y</var> )</h1>\n      <p>The internal comparison abstract operation SameValue(<var>x</var>, <var>y</var>), where <var>x</var> and <var>y</var> are ECMAScript language values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number or BigInt, then<ol><li>Return !&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>)::sameValue(<var>x</var>, <var>y</var>).</li></ol></li><li>Return !&#160;<emu-xref aoid=\"SameValueNonNumeric\"><a href=\"#sec-samevaluenonnumeric\">SameValueNonNumeric</a></emu-xref>(<var>x</var>, <var>y</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>This algorithm differs from the <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> Algorithm in its treatment of signed zeroes and NaNs.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-getmodifysetvalueinbuffer": {"num": "24.1.1.13", "title": "#sec-getmodifysetvalueinbuffer GetModifySetValueInBuffer ( arrayBuffer, byteIndex, type, value, op [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-getmodifysetvalueinbuffer\" aoid=\"GetModifySetValueInBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getmodifysetvalueinbuffer\">#sec-getmodifysetvalueinbuffer</span> GetModifySetValueInBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>value</var>, <var>op</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation GetModifySetValueInBuffer takes six parameters, a SharedArrayBuffer <var>arrayBuffer</var>, a nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>byteIndex</var>, a String <var>type</var>, a Number <var>value</var>, a semantic function <var>op</var>, and optionally a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>byteIndex</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value &#8805; 0.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt if !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>true</emu-val>; otherwise, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>rawBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>type</var>, <var>value</var>, <var>isLittleEndian</var>).</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>rawBytesRead</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> of nondeterministically chosen byte values.</li><li>NOTE: In implementations, <var>rawBytesRead</var> is the result of a load-link, of a load-exclusive, or of an operand of a read-modify-write instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>rmwEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadModifyWriteSharedMemory</a></emu-xref> { [[Order]]: <code>\"SeqCst\"</code>, [[NoTear]]: <emu-val>true</emu-val>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var>, [[Payload]]: <var>rawBytes</var>, [[ModifyOp]]: <var>op</var> }.</li><li>Append <var>rmwEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>rmwEvent</var>, [[ChosenValue]]: <var>rawBytesRead</var> } to <var>execution</var>.[[ChosenValues]].</li><li>Return <emu-xref aoid=\"RawBytesToNumeric\"><a href=\"#sec-rawbytestonumeric\">RawBytesToNumeric</a></emu-xref>(<var>type</var>, <var>rawBytesRead</var>, <var>isLittleEndian</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-additional-syntax-numeric-literals": {"num": "B.1.1", "title": "#sec-additional-syntax-numeric-literals Numeric Literals", "html": "<emu-annex id=\"sec-additional-syntax-numeric-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</span> Numeric Literals</h1>\n      <p>The syntax and semantics of  <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref> is extended as follows except that this extension is not allowed for <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>:</p>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"NumericLiteral\" type=\"lexical\" id=\"prod-annexB-NumericLiteral\">\n    <emu-nt><a href=\"#prod-annexB-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2727f17d\"><emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68def506\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f0df7a1f\"><emu-nt><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LegacyOctalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-LegacyOctalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"46c53d12\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b57dc7cf\"><emu-nt><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\">LegacyOctalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-DecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5d52a5ba\"><emu-nt><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonOctalDecimalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-NonOctalDecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"46667561\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-annexB-NonOctalDigit\">NonOctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c90efc20\"><emu-nt><a href=\"#prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">LegacyOctalLikeDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-annexB-NonOctalDigit\">NonOctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9778131\"><emu-nt><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\">NonOctalDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"LegacyOctalLikeDecimalIntegerLiteral\" type=\"lexical\" id=\"prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">LegacyOctalLikeDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"46c53d12\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b24ee1d6\"><emu-nt><a href=\"#prod-annexB-LegacyOctalLikeDecimalIntegerLiteral\">LegacyOctalLikeDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonOctalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-annexB-NonOctalDigit\">\n    <emu-nt><a href=\"#prod-annexB-NonOctalDigit\">NonOctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n\n      <div id=\"excluded-sec-additional-syntax-numeric-literals-status-semantics\"><h1><span class=\"secnum\">B.1.1.1</span>#sec-additional-syntax-numeric-literals-status-semantics Static Semantics</h1>...</div></emu-annex>\n\n    "}, "sec-integerindexedelementset": {"num": "9.4.5.9", "title": "#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )", "html": "<emu-clause id=\"sec-integerindexedelementset\" aoid=\"IntegerIndexedElementSet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementset\">#sec-integerindexedelementset</span> IntegerIndexedElementSet ( <var>O</var>, <var>index</var>, <var>value</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementSet with arguments <var>O</var>, <var>index</var>, and <var>value</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], [[ContentType]], and [[TypedArrayName]] internal slots.</li><li>If <var>O</var>.[[ContentType]] is <code>\"BigInt\"</code>, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>numValue</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>index</var> = <emu-val>-0</emu-val>, return <emu-val>false</emu-val>.</li><li>Let <var>length</var> be <var>O</var>.[[ArrayLength]].</li><li>If <var>index</var> &lt; 0 or <var>index</var> &#8805; <var>length</var>, return <emu-val>false</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>numValue</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Return <emu-val>true</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-agents": {"num": "8.7", "title": "#sec-agents Agents", "html": "<emu-clause id=\"sec-agents\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-agents\">#sec-agents</span> Agents</h1>\n\n    <p>An  <dfn id=\"agent\">agent</dfn> comprises a set of ECMAScript execution contexts, an <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, a <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, a set of named job queues, an  <dfn id=\"agent-record\">Agent Record</dfn>, and an  <dfn id=\"executing-thread\">executing thread</dfn>.  Except for the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref>, the constituents of an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> belong exclusively to that <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>.</p>\n    <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes the jobs in the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s job queues on the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s execution contexts independently of other agents, except that an <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> may be used as the <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> by multiple agents, provided none of the agents sharing the thread have an <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> whose [[CanBlock]] property is <emu-val>true</emu-val>.</p>\n    <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n      <p>Some web browsers share a single <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> across multiple unrelated tabs of a browser window, for example.</p>\n    </div></emu-note>\n    <p>While an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s <emu-xref href=\"#executing-thread\"><a href=\"#executing-thread\">executing thread</a></emu-xref> executes the jobs in the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>'s job queues, the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is the  <dfn id=\"surrounding-agent\">surrounding agent</dfn> for the code in those jobs.  The code uses the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref> to access the specification level execution objects held within the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref>: the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>, the named job queues, and the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>'s fields.</p>\n    <emu-table id=\"table-agent-record\" caption=\"Agent Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-agent-record\">#table-agent-record</span>: <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> Fields</figcaption>\n      <table>\n        <tbody>\n          <tr>\n            <th>Field Name</th>\n            <th>Value</th>\n            <th>Meaning</th>\n          </tr>\n          <tr>\n            <td>[[LittleEndian]]</td>\n            <td>Boolean</td>\n            <td>The default value computed for the  <em>isLittleEndian</em> parameter when it is needed by the algorithms <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref> and <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>. The choice is implementation-dependent and should be the alternative that is most efficient for the implementation.  Once the value has been observed it cannot change.</td>\n          </tr>\n          <tr>\n            <td>[[CanBlock]]</td>\n            <td>Boolean</td>\n            <td>Determines whether the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> can block or not.</td>\n          </tr>\n          <tr>\n            <td>[[Signifier]]</td>\n            <td>Any globally-unique value</td>\n            <td>Uniquely identifies the <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> within its <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref>.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree1]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on one-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree2]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on two-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[IsLockFree8]]</td>\n            <td>Boolean</td>\n            <td><emu-val>true</emu-val> if atomic operations on eight-byte values are lock-free, <emu-val>false</emu-val> otherwise.</td>\n          </tr>\n          <tr>\n            <td>[[CandidateExecution]]</td>\n            <td>A <emu-xref href=\"#sec-candidate-executions\"><a href=\"#sec-candidate-executions\">candidate execution</a></emu-xref> <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref></td>\n            <td>See the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>.</td>\n          </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n\n    <p>Once the values of [[Signifier]], [[IsLockFree1]], and [[IsLockFree2]] have been observed by any <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in the <emu-xref href=\"#sec-agent-clusters\"><a href=\"#sec-agent-clusters\">agent cluster</a></emu-xref> they cannot change.</p>\n\n    <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n      <p>The values of [[IsLockFree1]] and [[IsLockFree2]] are not necessarily determined by the hardware, but may also reflect implementation choices that can vary over time and between ECMAScript implementations.</p>\n\n      <p>There is no [[IsLockFree4]] property: 4-byte atomic operations are always lock-free.</p>\n\n      <p>In practice, if an atomic operation is implemented with any type of lock the operation is not lock-free.  Lock-free does not imply wait-free: there is no upper bound on how many machine steps may be required to complete a lock-free atomic operation.</p>\n\n      <p>That an atomic access of size  <em>n</em> is lock-free does not imply anything about the (perceived) atomicity of non-atomic accesses of size  <em>n</em>, specifically, non-atomic accesses may still be performed as a sequence of several separate memory accesses.  See <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> and <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> for details.</p>\n    </div></emu-note>\n\n    <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n      <p>An <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-agentsignifier\"><h1><span class=\"secnum\">8.7.1</span>#sec-agentsignifier AgentSignifier ( )</h1>...</div><div id=\"excluded-sec-agentcansuspend\"><h1><span class=\"secnum\">8.7.2</span>#sec-agentcansuspend AgentCanSuspend ( )</h1>...</div></emu-clause>\n\n  "}, "sec-number-conversions": {"num": "A.6", "title": "#sec-number-conversions Number Conversions", "html": "<emu-annex id=\"sec-number-conversions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-conversions\">#sec-number-conversions</span> Number Conversions</h1>\n    <emu-production name=\"StringNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"9a4be900\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"fe58c396\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpace\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"2b0ea266\"><emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrWhiteSpaceChar\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrWhiteSpaceChar\">StrWhiteSpaceChar</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrNumericLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"db369ee0\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"477fcd23\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a3f639a9\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"d60f01a5\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4afe8df8\"><emu-t>Infinity</emu-t></emu-rhs>\n    <emu-rhs a=\"8a89062c\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"24e27af7\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"SignedInteger\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n    <p>All grammar symbols not explicitly defined by the <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt> grammar have the definitions used in the  <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\">Lexical Grammar for numeric literals</a></emu-xref>.</p>\n  </emu-annex>\n\n  "}, "sec-number.prototype.tostring": {"num": "20.1.3.6", "title": "#sec-number.prototype.tostring Number.prototype.toString ( [ radix ] )", "html": "<emu-clause id=\"sec-number.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.prototype.tostring\">#sec-number.prototype.tostring</span> Number.prototype.toString ( [ <var>radix</var> ] )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The optional <var>radix</var> should be an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value in the inclusive range 2 to 36. If <var>radix</var> is not present or is <emu-val>undefined</emu-val> the Number 10 is used as the value of <var>radix</var>.</p>\n        </div></emu-note>\n        <p>The following steps are performed:</p>\n        <emu-alg><ol><li>Let <var>x</var> be ?&#160;<emu-xref href=\"#sec-thisnumbervalue\"><a href=\"#sec-thisnumbervalue\">thisNumberValue</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>radix</var> is not present, let <var>radixNumber</var> be 10.</li><li>Else if <var>radix</var> is <emu-val>undefined</emu-val>, let <var>radixNumber</var> be 10.</li><li>Else, let <var>radixNumber</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>radix</var>).</li><li>If <var>radixNumber</var> &lt; 2 or <var>radixNumber</var> &gt; 36, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>radixNumber</var> = 10, return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>x</var>).</li><li>Return the String representation of this <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> using the radix specified by <var>radixNumber</var>. Letters <code>a</code>-<code>z</code> are used for digits with values 10 through 35. The precise algorithm is implementation-dependent, however the algorithm should be a generalization of that specified in <emu-xref href=\"#sec-numeric-types-number-tostring\"><a href=\"#sec-numeric-types-number-tostring\" class=\"excluded-xref\" excluded-id=\"sec-numeric-types-number-tostring\">#sec-numeric-types-number-tostring</a></emu-xref>.\n        </li></ol></emu-alg>\n        <p>The <code>toString</code> function is not generic; it throws a <emu-val>TypeError</emu-val> exception if its <emu-val>this</emu-val> value is not a Number or a Number object. Therefore, it cannot be transferred to other kinds of objects for use as a method.</p>\n        <p>The <code>\"length\"</code> property of the <code>toString</code> method is 1.</p>\n      </emu-clause>\n\n      "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <code>Date</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Date</code> behaviour must include a <code>super</code> call to the <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <code>\"length\"</code> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.4.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.4.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-literals-numeric-literals": {"num": "11.8.3", "title": "#sec-literals-numeric-literals Numeric Literals", "html": "<emu-clause id=\"sec-literals-numeric-literals\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</span> Numeric Literals</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"NumericLiteral\" type=\"lexical\" id=\"prod-NumericLiteral\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2727f17d\"><emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68def506\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\" id=\"prod-DecimalBigIntegerLiteral\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ddee4872\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"27fc8843\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" id=\"prod-NonDecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BigIntLiteralSuffix\" type=\"lexical\" id=\"prod-BigIntLiteralSuffix\">\n    <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"14b11fb6\"><emu-t>n</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalLiteral\" type=\"lexical\" id=\"prod-DecimalLiteral\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fb5198a6\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"13dbaf21\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" id=\"prod-DecimalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalDigits\" type=\"lexical\" id=\"prod-DecimalDigits\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-DecimalDigit\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\" id=\"prod-NonZeroDigit\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ExponentPart\" type=\"lexical\" id=\"prod-ExponentPart\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\" id=\"prod-ExponentIndicator\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"SignedInteger\" type=\"lexical\" id=\"prod-SignedInteger\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" id=\"prod-BinaryIntegerLiteral\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BinaryDigits\" type=\"lexical\" id=\"prod-BinaryDigits\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"BinaryDigit\" type=\"lexical\" oneof=\"\" id=\"prod-BinaryDigit\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" id=\"prod-OctalIntegerLiteral\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"OctalDigits\" type=\"lexical\" id=\"prod-OctalDigits\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"OctalDigit\" type=\"lexical\" oneof=\"\" id=\"prod-OctalDigit\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"HexIntegerLiteral\" type=\"lexical\" id=\"prod-HexIntegerLiteral\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"HexDigits\" type=\"lexical\" id=\"prod-HexDigits\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\" id=\"prod-HexDigit\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <p>The <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt> immediately following a <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> must not be an <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt> or <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>For example: <code>3in</code> is an error and not the two input elements <code>3</code> and <code>in</code>.</p>\n      </div></emu-note>\n      <p>A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include  <emu-xref href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><a href=\"#prod-annexB-LegacyOctalIntegerLiteral\"><emu-nt>LegacyOctalIntegerLiteral</emu-nt></a></emu-xref>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include  <emu-xref href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><a href=\"#prod-annexB-NonOctalDecimalIntegerLiteral\"><emu-nt>NonOctalDecimalIntegerLiteral</emu-nt></a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-static-semantics-mv\"><h1><span class=\"secnum\">11.8.3.1</span>#sec-static-semantics-mv Static Semantics: MV</h1>...</div><div id=\"excluded-sec-numericvalue\"><h1><span class=\"secnum\">11.8.3.2</span>#sec-numericvalue Static Semantics: NumericValue</h1>...</div></emu-clause>\n\n    "}, "sec-unary-minus-operator-runtime-semantics-evaluation": {"num": "12.5.7.1", "title": "#sec-unary-minus-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-unary-minus-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-unary-minus-operator-runtime-semantics-evaluation\">#sec-unary-minus-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a03cca5c\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldValue</var>).</li><li>Return ! <var>T</var>::unaryMinus(<var>oldValue</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-object-initializer-runtime-semantics-evaluation": {"num": "12.2.6.7", "title": "#sec-object-initializer-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-object-initializer-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-runtime-semantics-evaluation\">#sec-object-initializer-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectLiteral\">\n    <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>obj</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform ? PropertyDefinitionEvaluation of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> with arguments <var>obj</var> and <emu-val>true</emu-val>.</li><li>Return <var>obj</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>exprValue</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propName</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValue</var>).</li><li>Return ?&#160;<emu-xref aoid=\"ToPropertyKey\"><a href=\"#sec-topropertykey\">ToPropertyKey</a></emu-xref>(<var>propName</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-bitwise-not-operator-runtime-semantics-evaluation": {"num": "12.5.8.1", "title": "#sec-bitwise-not-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-bitwise-not-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bitwise-not-operator-runtime-semantics-evaluation\">#sec-bitwise-not-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"07d36a79\"><emu-t>~</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldValue</var>).</li><li>Return ! <var>T</var>::bitwiseNOT(<var>oldValue</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-subtraction-operator-minus": {"num": "12.8.4", "title": "#sec-subtraction-operator-minus The Subtraction Operator ( - )", "html": "<emu-clause id=\"sec-subtraction-operator-minus\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-subtraction-operator-minus\">#sec-subtraction-operator-minus</span> The Subtraction Operator ( <code>-</code> )</h1>\n\n      <div id=\"excluded-sec-subtraction-operator-minus-runtime-semantics-evaluation\"><h1><span class=\"secnum\">12.8.4.1</span>#sec-subtraction-operator-minus-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n  "}, "sec-numbers-and-dates": {"num": "20", "title": "#sec-numbers-and-dates Numbers and Dates", "html": "<emu-clause id=\"sec-numbers-and-dates\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numbers-and-dates\">#sec-numbers-and-dates</span> Numbers and Dates</h1>\n\n  <div id=\"excluded-sec-number-objects\"><h1><span class=\"secnum\">20.1</span>#sec-number-objects Number Objects</h1>...</div><div id=\"excluded-sec-bigint-objects\"><h1><span class=\"secnum\">20.2</span>#sec-bigint-objects BigInt Objects</h1>...</div><div id=\"excluded-sec-math-object\"><h1><span class=\"secnum\">20.3</span>#sec-math-object The Math Object</h1>...</div><div id=\"excluded-sec-date-objects\"><h1><span class=\"secnum\">20.4</span>#sec-date-objects Date Objects</h1>...</div></emu-clause>\n\n"}, "sec-abstract-operations-for-arraybuffer-objects": {"num": "24.1.1", "title": "#sec-abstract-operations-for-arraybuffer-objects Abstract Operations For ArrayBuffer Objects", "html": "<emu-clause id=\"sec-abstract-operations-for-arraybuffer-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-arraybuffer-objects\">#sec-abstract-operations-for-arraybuffer-objects</span> Abstract Operations For ArrayBuffer Objects</h1>\n\n      <div id=\"excluded-sec-allocatearraybuffer\"><h1><span class=\"secnum\">24.1.1.1</span>#sec-allocatearraybuffer AllocateArrayBuffer ( constructor, byteLength )</h1>...</div><div id=\"excluded-sec-isdetachedbuffer\"><h1><span class=\"secnum\">24.1.1.2</span>#sec-isdetachedbuffer IsDetachedBuffer ( arrayBuffer )</h1>...</div><div id=\"excluded-sec-detacharraybuffer\"><h1><span class=\"secnum\">24.1.1.3</span>#sec-detacharraybuffer DetachArrayBuffer ( arrayBuffer [ , key ] )</h1>...</div><div id=\"excluded-sec-clonearraybuffer\"><h1><span class=\"secnum\">24.1.1.4</span>#sec-clonearraybuffer CloneArrayBuffer ( srcBuffer, srcByteOffset, srcLength, cloneConstructor )</h1>...</div><div id=\"excluded-sec-isunsignedelementtype\"><h1><span class=\"secnum\">24.1.1.5</span>#sec-isunsignedelementtype IsUnsignedElementType ( type )</h1>...</div><div id=\"excluded-sec-isunclampedintegerelementtype\"><h1><span class=\"secnum\">24.1.1.6</span>#sec-isunclampedintegerelementtype IsUnclampedIntegerElementType ( type )</h1>...</div><div id=\"excluded-sec-isbigintelementtype\"><h1><span class=\"secnum\">24.1.1.7</span>#sec-isbigintelementtype IsBigIntElementType ( type )</h1>...</div><div id=\"excluded-sec-isnotearconfiguration\"><h1><span class=\"secnum\">24.1.1.8</span>#sec-isnotearconfiguration IsNoTearConfiguration ( type, order )</h1>...</div><div id=\"excluded-sec-rawbytestonumeric\"><h1><span class=\"secnum\">24.1.1.9</span>#sec-rawbytestonumeric RawBytesToNumeric ( type, rawBytes, isLittleEndian )</h1>...</div><div id=\"excluded-sec-getvaluefrombuffer\"><h1><span class=\"secnum\">24.1.1.10</span>#sec-getvaluefrombuffer GetValueFromBuffer ( arrayBuffer, byteIndex, type, isTypedArray, order [ , isLittleEndian ] )</h1>...</div><div id=\"excluded-sec-numerictorawbytes\"><h1><span class=\"secnum\">24.1.1.11</span>#sec-numerictorawbytes NumericToRawBytes ( type, value, isLittleEndian )</h1>...</div><div id=\"excluded-sec-setvalueinbuffer\"><h1><span class=\"secnum\">24.1.1.12</span>#sec-setvalueinbuffer SetValueInBuffer ( arrayBuffer, byteIndex, type, value, isTypedArray, order [ , isLittleEndian ] )</h1>...</div><div id=\"excluded-sec-getmodifysetvalueinbuffer\"><h1><span class=\"secnum\">24.1.1.13</span>#sec-getmodifysetvalueinbuffer GetModifySetValueInBuffer ( arrayBuffer, byteIndex, type, value, op [ , isLittleEndian ] )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-the-dataview-prototype-object": {"num": "24.3.4", "title": "#sec-properties-of-the-dataview-prototype-object Properties of the DataView Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-dataview-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-dataview-prototype-object\">#sec-properties-of-the-dataview-prototype-object</span> Properties of the DataView Prototype Object</h1>\n      <p>The DataView prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataViewPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an ordinary object.</li>\n        <li>does not have a [[DataView]], [[ViewedArrayBuffer]], [[ByteLength]], or [[ByteOffset]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-get-dataview.prototype.buffer\"><h1><span class=\"secnum\">24.3.4.1</span>#sec-get-dataview.prototype.buffer get DataView.prototype.buffer</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.bytelength\"><h1><span class=\"secnum\">24.3.4.2</span>#sec-get-dataview.prototype.bytelength get DataView.prototype.byteLength</h1>...</div><div id=\"excluded-sec-get-dataview.prototype.byteoffset\"><h1><span class=\"secnum\">24.3.4.3</span>#sec-get-dataview.prototype.byteoffset get DataView.prototype.byteOffset</h1>...</div><div id=\"excluded-sec-dataview.prototype.constructor\"><h1><span class=\"secnum\">24.3.4.4</span>#sec-dataview.prototype.constructor DataView.prototype.constructor</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbigint64\"><h1><span class=\"secnum\">24.3.4.5</span>#sec-dataview.prototype.getbigint64 DataView.prototype.getBigInt64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getbiguint64\"><h1><span class=\"secnum\">24.3.4.6</span>#sec-dataview.prototype.getbiguint64 DataView.prototype.getBigUint64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat32\"><h1><span class=\"secnum\">24.3.4.7</span>#sec-dataview.prototype.getfloat32 DataView.prototype.getFloat32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getfloat64\"><h1><span class=\"secnum\">24.3.4.8</span>#sec-dataview.prototype.getfloat64 DataView.prototype.getFloat64 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint8\"><h1><span class=\"secnum\">24.3.4.9</span>#sec-dataview.prototype.getint8 DataView.prototype.getInt8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint16\"><h1><span class=\"secnum\">24.3.4.10</span>#sec-dataview.prototype.getint16 DataView.prototype.getInt16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getint32\"><h1><span class=\"secnum\">24.3.4.11</span>#sec-dataview.prototype.getint32 DataView.prototype.getInt32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint8\"><h1><span class=\"secnum\">24.3.4.12</span>#sec-dataview.prototype.getuint8 DataView.prototype.getUint8 ( byteOffset )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint16\"><h1><span class=\"secnum\">24.3.4.13</span>#sec-dataview.prototype.getuint16 DataView.prototype.getUint16 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.getuint32\"><h1><span class=\"secnum\">24.3.4.14</span>#sec-dataview.prototype.getuint32 DataView.prototype.getUint32 ( byteOffset [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbigint64\"><h1><span class=\"secnum\">24.3.4.15</span>#sec-dataview.prototype.setbigint64 DataView.prototype.setBigInt64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setbiguint64\"><h1><span class=\"secnum\">24.3.4.16</span>#sec-dataview.prototype.setbiguint64 DataView.prototype.setBigUint64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat32\"><h1><span class=\"secnum\">24.3.4.17</span>#sec-dataview.prototype.setfloat32 DataView.prototype.setFloat32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setfloat64\"><h1><span class=\"secnum\">24.3.4.18</span>#sec-dataview.prototype.setfloat64 DataView.prototype.setFloat64 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint8\"><h1><span class=\"secnum\">24.3.4.19</span>#sec-dataview.prototype.setint8 DataView.prototype.setInt8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint16\"><h1><span class=\"secnum\">24.3.4.20</span>#sec-dataview.prototype.setint16 DataView.prototype.setInt16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setint32\"><h1><span class=\"secnum\">24.3.4.21</span>#sec-dataview.prototype.setint32 DataView.prototype.setInt32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint8\"><h1><span class=\"secnum\">24.3.4.22</span>#sec-dataview.prototype.setuint8 DataView.prototype.setUint8 ( byteOffset, value )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint16\"><h1><span class=\"secnum\">24.3.4.23</span>#sec-dataview.prototype.setuint16 DataView.prototype.setUint16 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype.setuint32\"><h1><span class=\"secnum\">24.3.4.24</span>#sec-dataview.prototype.setuint32 DataView.prototype.setUint32 ( byteOffset, value [ , littleEndian ] )</h1>...</div><div id=\"excluded-sec-dataview.prototype-@@tostringtag\"><h1><span class=\"secnum\">24.3.4.25</span>#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-binary-bitwise-operators-runtime-semantics-evaluation": {"num": "12.12.3", "title": "#sec-binary-bitwise-operators-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-binary-bitwise-operators-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-binary-bitwise-operators-runtime-semantics-evaluation\">#sec-binary-bitwise-operators-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <p>The production  <emu-grammar type=\"example\"><emu-production name=\"A\" collapsed=\"\" id=\"prod-A\" class=\" inline\">\n    <emu-nt><a href=\"#prod-A\">A</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"262863af\"><emu-nt><a href=\"#prod-A\">A</a></emu-nt><emu-t placeholder=\"\">@</emu-t><emu-nt>B</emu-nt></emu-rhs>\n</emu-production></emu-grammar>, where @ is one of the bitwise operators in the productions above, is evaluated as follows:</p>\n      <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <var>A</var>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <var>B</var>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>If @ is <code>&amp;</code>, return <var>T</var>::bitwiseAND(<var>lnum</var>, <var>rnum</var>).</li><li>If @ is <code>|</code>, return <var>T</var>::bitwiseOR(<var>lnum</var>, <var>rnum</var>).</li><li>Otherwise, @ is <code>^</code>; return <var>T</var>::bitwiseXOR(<var>lnum</var>, <var>rnum</var>).\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-hasprimitivebase": {"num": "6.2.4.4", "title": "#sec-hasprimitivebase HasPrimitiveBase ( V )", "html": "<emu-clause id=\"sec-hasprimitivebase\" aoid=\"HasPrimitiveBase\" oldids=\"ao-hasprimitivebase\">\n        <span id=\"ao-hasprimitivebase\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasprimitivebase\">#sec-hasprimitivebase</span> HasPrimitiveBase ( <var>V</var> )</h1>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>) is <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>V</var>'s base value component) is Boolean, String, Symbol, BigInt, or Number, return <emu-val>true</emu-val>; otherwise return <emu-val>false</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-integer-indexed-exotic-objects": {"num": "9.4.5", "title": "#sec-integer-indexed-exotic-objects Integer-Indexed Exotic Objects", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects\">#sec-integer-indexed-exotic-objects</span> Integer-Indexed Exotic Objects</h1>\n      <p>An  <dfn id=\"integer-indexed-exotic-object\">Integer-Indexed exotic object</dfn> is an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> that performs special handling of <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref> property keys.</p>\n      <p><emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic objects</a></emu-xref> have the same internal slots as ordinary objects and additionally [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], [[ContentType]], and [[TypedArrayName]] internal slots.</p>\n      <p><emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic objects</a></emu-xref> provide alternative definitions for the following internal methods. All of the other <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> essential internal methods that are not defined below are as specified in  <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-integer-indexed-exotic-objects-getownproperty-p\"><h1><span class=\"secnum\">9.4.5.1</span>#sec-integer-indexed-exotic-objects-getownproperty-p [[GetOwnProperty]] ( P )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-hasproperty-p\"><h1><span class=\"secnum\">9.4.5.2</span>#sec-integer-indexed-exotic-objects-hasproperty-p [[HasProperty]] ( P )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-defineownproperty-p-desc\"><h1><span class=\"secnum\">9.4.5.3</span>#sec-integer-indexed-exotic-objects-defineownproperty-p-desc [[DefineOwnProperty]] ( P, Desc )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-get-p-receiver\"><h1><span class=\"secnum\">9.4.5.4</span>#sec-integer-indexed-exotic-objects-get-p-receiver [[Get]] ( P, Receiver )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-set-p-v-receiver\"><h1><span class=\"secnum\">9.4.5.5</span>#sec-integer-indexed-exotic-objects-set-p-v-receiver [[Set]] ( P, V, Receiver )</h1>...</div><div id=\"excluded-sec-integer-indexed-exotic-objects-ownpropertykeys\"><h1><span class=\"secnum\">9.4.5.6</span>#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )</h1>...</div><div id=\"excluded-sec-integerindexedobjectcreate\"><h1><span class=\"secnum\">9.4.5.7</span>#sec-integerindexedobjectcreate IntegerIndexedObjectCreate ( prototype, internalSlotsList )</h1>...</div><div id=\"excluded-sec-integerindexedelementget\"><h1><span class=\"secnum\">9.4.5.8</span>#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )</h1>...</div><div id=\"excluded-sec-integerindexedelementset\"><h1><span class=\"secnum\">9.4.5.9</span>#sec-integerindexedelementset IntegerIndexedElementSet ( O, index, value )</h1>...</div></emu-clause>\n\n    "}, "sec-integerindexedelementget": {"num": "9.4.5.8", "title": "#sec-integerindexedelementget IntegerIndexedElementGet ( O, index )", "html": "<emu-clause id=\"sec-integerindexedelementget\" aoid=\"IntegerIndexedElementGet\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedelementget\">#sec-integerindexedelementget</span> IntegerIndexedElementGet ( <var>O</var>, <var>index</var> )</h1>\n        <p>The abstract operation IntegerIndexedElementGet with arguments <var>O</var> and <var>index</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>index</var>) is Number.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], [[ContentType]], and [[TypedArrayName]] internal slots.</li><li>Let <var>buffer</var> be <var>O</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"IsInteger\"><a href=\"#sec-isinteger\">IsInteger</a></emu-xref>(<var>index</var>) is <emu-val>false</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>index</var> = <emu-val>-0</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Let <var>length</var> be <var>O</var>.[[ArrayLength]].</li><li>If <var>index</var> &lt; 0 or <var>index</var> &#8805; <var>length</var>, return <emu-val>undefined</emu-val>.</li><li>Let <var>offset</var> be <var>O</var>.[[ByteOffset]].</li><li>Let <var>arrayTypeName</var> be the String value of <var>O</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>index</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Return <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-samevaluezero": {"num": "7.2.11", "title": "#sec-samevaluezero SameValueZero ( x, y )", "html": "<emu-clause id=\"sec-samevaluezero\" aoid=\"SameValueZero\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-samevaluezero\">#sec-samevaluezero</span> SameValueZero ( <var>x</var>, <var>y</var> )</h1>\n      <p>The internal comparison abstract operation SameValueZero(<var>x</var>, <var>y</var>), where <var>x</var> and <var>y</var> are ECMAScript language values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number or BigInt, then<ol><li>Return !&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>)::sameValueZero(<var>x</var>, <var>y</var>).</li></ol></li><li>Return !&#160;<emu-xref aoid=\"SameValueNonNumeric\"><a href=\"#sec-samevaluenonnumeric\">SameValueNonNumeric</a></emu-xref>(<var>x</var>, <var>y</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>SameValueZero differs from <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref> only in its treatment of <emu-val>+0</emu-val> and <emu-val>-0</emu-val>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-integer-indexed-exotic-objects-ownpropertykeys": {"num": "9.4.5.6", "title": "#sec-integer-indexed-exotic-objects-ownpropertykeys [[OwnPropertyKeys]] ( )", "html": "<emu-clause id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</span> [[OwnPropertyKeys]] ( )</h1>\n        <p>When the [[OwnPropertyKeys]] internal method of an <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> <var>O</var> is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>keys</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>O</var> is an Object that has [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], [[ContentType]], and [[TypedArrayName]] internal slots.</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>For each <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>i</var> starting with 0 such that <var>i</var> &lt; <var>len</var>, in ascending order, do<ol><li>Add !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>i</var>) as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is String and <var>P</var> is not an <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer index</a></emu-xref>, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>For each own property key <var>P</var> of <var>O</var> such that <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>P</var>) is Symbol, in ascending chronological order of property creation, do<ol><li>Add <var>P</var> as the last element of <var>keys</var>.</li></ol></li><li>Return <var>keys</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-serializejsonproperty": {"num": "24.5.2.1", "title": "#sec-serializejsonproperty Runtime Semantics: SerializeJSONProperty ( key, holder )", "html": "<emu-clause id=\"sec-serializejsonproperty\" aoid=\"SerializeJSONProperty\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-serializejsonproperty\">#sec-serializejsonproperty</span> Runtime Semantics: SerializeJSONProperty ( <var>key</var>, <var>holder</var> )</h1>\n        <p>The abstract operation SerializeJSONProperty with arguments <var>key</var>, and <var>holder</var> has access to <var>ReplacerFunction</var> from the invocation of the <code>stringify</code> method. Its algorithm is as follows:</p>\n        <emu-alg><ol><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>holder</var>, <var>key</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object, then<ol><li>Let <var>toJSON</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>value</var>, <code>\"toJSON\"</code>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>toJSON</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>toJSON</var>, <var>value</var>, &#171; <var>key</var> &#187;).</li></ol></li></ol></li><li>If <var>ReplacerFunction</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>ReplacerFunction</var>, <var>holder</var>, &#171; <var>key</var>, <var>value</var> &#187;).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object, then<ol><li>If <var>value</var> has a [[NumberData]] internal slot, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li></ol></li><li>Else if <var>value</var> has a [[StringData]] internal slot, then<ol><li>Set <var>value</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>value</var>).</li></ol></li><li>Else if <var>value</var> has a [[BooleanData]] internal slot, then<ol><li>Set <var>value</var> to <var>value</var>.[[BooleanData]].</li></ol></li><li>Else if <var>value</var> has a [[BigIntData]] internal slot, then<ol><li>Set <var>value</var> to <var>value</var>.[[BigIntData]].</li></ol></li></ol></li><li>If <var>value</var> is <emu-val>null</emu-val>, return <code>\"null\"</code>.</li><li>If <var>value</var> is <emu-val>true</emu-val>, return <code>\"true\"</code>.</li><li>If <var>value</var> is <emu-val>false</emu-val>, return <code>\"false\"</code>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is String, return <emu-xref aoid=\"QuoteJSONString\"><a href=\"#sec-quotejsonstring\">QuoteJSONString</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number, then<ol><li>If <var>value</var> is finite, return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>value</var>).</li><li>Return <code>\"null\"</code>.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>value</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>value</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, return ?&#160;<emu-xref aoid=\"SerializeJSONArray\"><a href=\"#sec-serializejsonarray\">SerializeJSONArray</a></emu-xref>(<var>value</var>).</li><li>Return ?&#160;<emu-xref aoid=\"SerializeJSONObject\"><a href=\"#sec-serializejsonobject\">SerializeJSONObject</a></emu-xref>(<var>value</var>).</li></ol></li><li>Return <emu-val>undefined</emu-val>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-postfix-increment-operator-runtime-semantics-evaluation": {"num": "12.4.4.1", "title": "#sec-postfix-increment-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-postfix-increment-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-postfix-increment-operator-runtime-semantics-evaluation\">#sec-postfix-increment-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8bf8e31b\"><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>++</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lhs</var> be the result of evaluating <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lhs</var>)).</li><li>Let <var>newValue</var> be !&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldvalue</var>)::add(<var>oldValue</var>, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldValue</var>)::unit).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>newValue</var>).</li><li>Return <var>oldValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-date-objects": {"num": "20.4", "title": "#sec-date-objects Date Objects", "html": "<emu-clause id=\"sec-date-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-objects\">#sec-date-objects</span> Date Objects</h1>\n\n    <div id=\"excluded-sec-overview-of-date-objects-and-definitions-of-abstract-operations\"><h1><span class=\"secnum\">20.4.1</span>#sec-overview-of-date-objects-and-definitions-of-abstract-operations Overview of Date Objects and Definitions of Abstract Operations</h1>...</div><div id=\"excluded-sec-date-constructor\"><h1><span class=\"secnum\">20.4.2</span>#sec-date-constructor The Date Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-date-constructor\"><h1><span class=\"secnum\">20.4.3</span>#sec-properties-of-the-date-constructor Properties of the Date Constructor</h1>...</div><div id=\"excluded-sec-properties-of-the-date-prototype-object\"><h1><span class=\"secnum\">20.4.4</span>#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-date-instances\"><h1><span class=\"secnum\">20.4.5</span>#sec-properties-of-date-instances Properties of Date Instances</h1>...</div></emu-clause>\n"}, "sec-postfix-decrement-operator-runtime-semantics-evaluation": {"num": "12.4.5.1", "title": "#sec-postfix-decrement-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-postfix-decrement-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-postfix-decrement-operator-runtime-semantics-evaluation\">#sec-postfix-decrement-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8d1d2d72\"><emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt><emu-t>--</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lhs</var> be the result of evaluating <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lhs</var>)).</li><li>Let <var>newValue</var> be !&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldvalue</var>)::subtract(<var>oldValue</var>, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldValue</var>)::unit).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>lhs</var>, <var>newValue</var>).</li><li>Return <var>oldValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-allocatetypedarray": {"num": "22.2.4.2.1", "title": "#sec-allocatetypedarray Runtime Semantics: AllocateTypedArray ( constructorName, newTarget, defaultProto [ , length ] )", "html": "<emu-clause id=\"sec-allocatetypedarray\" aoid=\"AllocateTypedArray\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-allocatetypedarray\">#sec-allocatetypedarray</span> Runtime Semantics: AllocateTypedArray ( <var>constructorName</var>, <var>newTarget</var>, <var>defaultProto</var> [ , <var>length</var> ] )</h1>\n          <p>The abstract operation AllocateTypedArray with arguments <var>constructorName</var>, <var>newTarget</var>, <var>defaultProto</var> and optional argument <var>length</var> is used to validate and create an instance of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. <var>constructorName</var> is required to be the name of a TypedArray <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>. If the <var>length</var> argument is passed, an ArrayBuffer of that length is also allocated and associated with the new TypedArray instance. AllocateTypedArray provides common semantics that is used by all of the <var>TypedArray</var> overloads. AllocateTypedArray performs the following steps:</p>\n          <emu-alg><ol><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>defaultProto</var>).</li><li>Let <var>obj</var> be <emu-xref aoid=\"IntegerIndexedObjectCreate\"><a href=\"#sec-integerindexedobjectcreate\">IntegerIndexedObjectCreate</a></emu-xref>(<var>proto</var>, &#171; [[ViewedArrayBuffer]], [[TypedArrayName]], [[ContentType]], [[ByteLength]], [[ByteOffset]], [[ArrayLength]] &#187;).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>obj</var>.[[ViewedArrayBuffer]] is <emu-val>undefined</emu-val>.</li><li>Set <var>obj</var>.[[TypedArrayName]] to <var>constructorName</var>.</li><li>If <var>constructorName</var> is <code>\"BigInt64Array\"</code> or <code>\"BigUint64Array\"</code>, set <var>obj</var>.[[ContentType]] to <code>\"BigInt\"</code>.</li><li>Otherwise, set <var>obj</var>.[[ContentType]] to <code>\"Number\"</code>.</li><li>If <var>length</var> is not present, then<ol><li>Set <var>obj</var>.[[ByteLength]] to 0.</li><li>Set <var>obj</var>.[[ByteOffset]] to 0.</li><li>Set <var>obj</var>.[[ArrayLength]] to 0.</li></ol></li><li>Else,<ol><li>Perform ?&#160;<emu-xref aoid=\"AllocateTypedArrayBuffer\"><a href=\"#sec-allocatetypedarraybuffer\">AllocateTypedArrayBuffer</a></emu-xref>(<var>obj</var>, <var>length</var>).</li></ol></li><li>Return <var>obj</var>.\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-validatesharedintegertypedarray": {"num": "24.4.1.1", "title": "#sec-validatesharedintegertypedarray ValidateSharedIntegerTypedArray ( typedArray [ , waitable ] )", "html": "<emu-clause id=\"sec-validatesharedintegertypedarray\" aoid=\"ValidateSharedIntegerTypedArray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-validatesharedintegertypedarray\">#sec-validatesharedintegertypedarray</span> ValidateSharedIntegerTypedArray ( <var>typedArray</var> [ , <var>waitable</var> ] )</h1>\n        <p>The abstract operation ValidateSharedIntegerTypedArray takes one argument <var>typedArray</var> and an optional Boolean <var>waitable</var>. It performs the following steps:</p>\n        <emu-alg><ol><li>If <var>waitable</var> is not present, set <var>waitable</var> to <emu-val>false</emu-val>.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>typedArray</var>, [[TypedArrayName]]).</li><li>Let <var>typeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>type</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>typeName</var>.</li><li>If <var>waitable</var> is <emu-val>true</emu-val>, then<ol><li>If <var>typeName</var> is not <code>\"Int32Array\"</code> or <code>\"BigInt64Array\"</code>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Else,<ol><li>If !&#160;<emu-xref aoid=\"IsUnclampedIntegerElementType\"><a href=\"#sec-isunclampedintegerelementtype\">IsUnclampedIntegerElementType</a></emu-xref>(<var>type</var>) is <emu-val>false</emu-val> and !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>buffer</var> be <var>typedArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>buffer</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-atomics.compareexchange": {"num": "24.4.4", "title": "#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )", "html": "<emu-clause id=\"sec-atomics.compareexchange\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.compareexchange\">#sec-atomics.compareexchange</span> Atomics.compareExchange ( <var>typedArray</var>, <var>index</var>, <var>expectedValue</var>, <var>replacementValue</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>typedArray</var>.[[ContentType]] is <code>\"BigInt\"</code>, then<ol><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>replacementValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>expected</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>expectedValue</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>replacementValue</var>).</li></ol></li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>isLittleEndian</var> be the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>expectedBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>elementType</var>, <var>expected</var>, <var>isLittleEndian</var>).</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <code>compareExchange</code> denote a semantic function of two <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values arguments that returns the second argument if the first argument is element-wise equal to <var>expectedBytes</var>.</li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>replacement</var>, <code>compareExchange</code>).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype.set-typedarray-offset": {"num": "22.2.3.23.2", "title": "#sec-%typedarray%.prototype.set-typedarray-offset %TypedArray%.prototype.set ( typedArray [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-typedarray-offset\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-typedarray-offset\">#sec-%typedarray%.prototype.set-typedarray-offset</span> %TypedArray%.prototype.set ( <var>typedArray</var> [ , <var>offset</var> ] )</h1>\n          <p>Sets multiple values in this <var>TypedArray</var>, reading the values from the <var>typedArray</var> argument object. The optional <var>offset</var> value indicates the first element index in this <var>TypedArray</var> where values are written. If omitted, it is assumed to be 0.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>typedArray</var> has a [[TypedArrayName]] internal slot. If it does not, the definition in <emu-xref href=\"#sec-%typedarray%.prototype.set-array-offset\"><a href=\"#sec-%typedarray%.prototype.set-array-offset\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%.prototype.set-array-offset\">#sec-%typedarray%.prototype.set-array-offset</a></emu-xref> applies.</li><li>Let <var>target</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>target</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>target</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>targetOffset</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>offset</var>).</li><li>If <var>targetOffset</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>srcBuffer</var> be <var>typedArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>srcName</var> be the String value of <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcLength</var> be <var>typedArray</var>.[[ArrayLength]].</li><li>Let <var>srcByteOffset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>If <var>target</var>.[[ContentType]] is not equal to <var>typedArray</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>If both <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcBuffer</var>) and <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>targetBuffer</var>) are <emu-val>true</emu-val>, then<ol><li>If <var>srcBuffer</var>.[[ArrayBufferData]] and <var>targetBuffer</var>.[[ArrayBufferData]] are the same <emu-xref href=\"#sec-data-blocks\"><a href=\"#sec-data-blocks\">Shared Data Block</a></emu-xref> values, let <var>same</var> be <emu-val>true</emu-val>; else let <var>same</var> be <emu-val>false</emu-val>.</li></ol></li><li>Else, let <var>same</var> be <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcBuffer</var>, <var>targetBuffer</var>).</li><li>If <var>same</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>srcByteLength</var> be <var>typedArray</var>.[[ByteLength]].</li><li>Set <var>srcBuffer</var> to ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteOffset</var>, <var>srcByteLength</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li><li>NOTE: <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref> is used to clone <var>srcBuffer</var> because is it known to not have any observable side-effects.</li><li>Let <var>srcByteIndex</var> be 0.</li></ol></li><li>Else, let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>srcType</var>, <var>targetType</var>) is <emu-val>true</emu-val>, then<ol><li>NOTE: If <var>srcType</var> and <var>targetType</var> are the same, the transfer must be performed in a manner that preserves the bit-level encoding of the source data.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var><ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <code>\"Uint8\"</code>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <code>\"Uint8\"</code>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + 1.</li></ol></li></ol></li><li>Else,<ol><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var><ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcBuffer</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li></ol></li><li>Return <emu-val>undefined</emu-val>.\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-type-conversion": {"num": "7.1", "title": "#sec-type-conversion Type Conversion", "html": "<emu-clause id=\"sec-type-conversion\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-type-conversion\">#sec-type-conversion</span> Type Conversion</h1>\n    <p>The ECMAScript language implicitly performs automatic type conversion as needed. To clarify the semantics of certain constructs it is useful to define a set of conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref>. The conversion <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> are polymorphic; they can accept a value of any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language type</a></emu-xref>. But no other specification types are used with these operations.</p>\n    <p>The BigInt type has no implicit conversions in the ECMAScript language; programmers must call BigInt explicitly to convert values from other types.</p>\n\n    <div id=\"excluded-sec-toprimitive\"><h1><span class=\"secnum\">7.1.1</span>#sec-toprimitive ToPrimitive ( input [ , PreferredType ] )</h1>...</div><div id=\"excluded-sec-toboolean\"><h1><span class=\"secnum\">7.1.2</span>#sec-toboolean ToBoolean ( argument )</h1>...</div><div id=\"excluded-sec-tonumeric\"><h1><span class=\"secnum\">7.1.3</span>#sec-tonumeric ToNumeric ( value )</h1>...</div><div id=\"excluded-sec-tonumber\"><h1><span class=\"secnum\">7.1.4</span>#sec-tonumber ToNumber ( argument )</h1>...</div><div id=\"excluded-sec-tointeger\"><h1><span class=\"secnum\">7.1.5</span>#sec-tointeger ToInteger ( argument )</h1>...</div><div id=\"excluded-sec-toint32\"><h1><span class=\"secnum\">7.1.6</span>#sec-toint32 ToInt32 ( argument )</h1>...</div><div id=\"excluded-sec-touint32\"><h1><span class=\"secnum\">7.1.7</span>#sec-touint32 ToUint32 ( argument )</h1>...</div><div id=\"excluded-sec-toint16\"><h1><span class=\"secnum\">7.1.8</span>#sec-toint16 ToInt16 ( argument )</h1>...</div><div id=\"excluded-sec-touint16\"><h1><span class=\"secnum\">7.1.9</span>#sec-touint16 ToUint16 ( argument )</h1>...</div><div id=\"excluded-sec-toint8\"><h1><span class=\"secnum\">7.1.10</span>#sec-toint8 ToInt8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8\"><h1><span class=\"secnum\">7.1.11</span>#sec-touint8 ToUint8 ( argument )</h1>...</div><div id=\"excluded-sec-touint8clamp\"><h1><span class=\"secnum\">7.1.12</span>#sec-touint8clamp ToUint8Clamp ( argument )</h1>...</div><div id=\"excluded-sec-to-bigint\"><h1><span class=\"secnum\">7.1.13</span>#sec-to-bigint ToBigInt ( argument )</h1>...</div><div id=\"excluded-sec-string-to-bigint\"><h1><span class=\"secnum\">7.1.14</span>#sec-string-to-bigint StringToBigInt ( argument )</h1>...</div><div id=\"excluded-sec-to-big-int64\"><h1><span class=\"secnum\">7.1.15</span>#sec-to-big-int64 ToBigInt64 ( argument )</h1>...</div><div id=\"excluded-sec-to-big-uint64\"><h1><span class=\"secnum\">7.1.16</span>#sec-to-big-uint64 ToBigUint64 ( argument )</h1>...</div><div id=\"excluded-sec-tostring\"><h1><span class=\"secnum\">7.1.17</span>#sec-tostring ToString ( argument )</h1>...</div><div id=\"excluded-sec-toobject\"><h1><span class=\"secnum\">7.1.18</span>#sec-toobject ToObject ( argument )</h1>...</div><div id=\"excluded-sec-topropertykey\"><h1><span class=\"secnum\">7.1.19</span>#sec-topropertykey ToPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-tolength\"><h1><span class=\"secnum\">7.1.20</span>#sec-tolength ToLength ( argument )</h1>...</div><div id=\"excluded-sec-canonicalnumericindexstring\"><h1><span class=\"secnum\">7.1.21</span>#sec-canonicalnumericindexstring CanonicalNumericIndexString ( argument )</h1>...</div><div id=\"excluded-sec-toindex\"><h1><span class=\"secnum\">7.1.22</span>#sec-toindex ToIndex ( value )</h1>...</div></emu-clause>\n\n  "}, "sec-integerindexedobjectcreate": {"num": "9.4.5.7", "title": "#sec-integerindexedobjectcreate IntegerIndexedObjectCreate ( prototype, internalSlotsList )", "html": "<emu-clause id=\"sec-integerindexedobjectcreate\" aoid=\"IntegerIndexedObjectCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-integerindexedobjectcreate\">#sec-integerindexedobjectcreate</span> IntegerIndexedObjectCreate ( <var>prototype</var>, <var>internalSlotsList</var> )</h1>\n        <p>The abstract operation IntegerIndexedObjectCreate with arguments <var>prototype</var> and <var>internalSlotsList</var> is used to specify the creation of new  <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic objects</a></emu-xref>. The argument <var>internalSlotsList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of the names of additional internal slots that must be defined as part of the object. IntegerIndexedObjectCreate performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>internalSlotsList</var> contains the names [[ViewedArrayBuffer]], [[ArrayLength]], [[ByteOffset]], [[ContentType]], and [[TypedArrayName]].</li><li>Let <var>A</var> be a newly created <emu-xref href=\"#integer-indexed-exotic-object\"><a href=\"#integer-indexed-exotic-object\">Integer-Indexed exotic object</a></emu-xref> with an internal slot for each name in <var>internalSlotsList</var>.</li><li>Set <var>A</var>'s essential internal methods to the default ordinary object definitions specified in <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>.</li><li>Set <var>A</var>.[[GetOwnProperty]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-getownproperty-p\"><a href=\"#sec-integer-indexed-exotic-objects-getownproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-getownproperty-p\">#sec-integer-indexed-exotic-objects-getownproperty-p</a></emu-xref>.</li><li>Set <var>A</var>.[[HasProperty]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-hasproperty-p\"><a href=\"#sec-integer-indexed-exotic-objects-hasproperty-p\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-hasproperty-p\">#sec-integer-indexed-exotic-objects-hasproperty-p</a></emu-xref>.</li><li>Set <var>A</var>.[[DefineOwnProperty]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-integer-indexed-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-defineownproperty-p-desc\">#sec-integer-indexed-exotic-objects-defineownproperty-p-desc</a></emu-xref>.</li><li>Set <var>A</var>.[[Get]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-get-p-receiver\"><a href=\"#sec-integer-indexed-exotic-objects-get-p-receiver\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-get-p-receiver\">#sec-integer-indexed-exotic-objects-get-p-receiver</a></emu-xref>.</li><li>Set <var>A</var>.[[Set]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-set-p-v-receiver\"><a href=\"#sec-integer-indexed-exotic-objects-set-p-v-receiver\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-set-p-v-receiver\">#sec-integer-indexed-exotic-objects-set-p-v-receiver</a></emu-xref>.</li><li>Set <var>A</var>.[[OwnPropertyKeys]] as specified in <emu-xref href=\"#sec-integer-indexed-exotic-objects-ownpropertykeys\"><a href=\"#sec-integer-indexed-exotic-objects-ownpropertykeys\" class=\"excluded-xref\" excluded-id=\"sec-integer-indexed-exotic-objects-ownpropertykeys\">#sec-integer-indexed-exotic-objects-ownpropertykeys</a></emu-xref>.</li><li>Set <var>A</var>.[[Prototype]] to <var>prototype</var>.</li><li>Set <var>A</var>.[[Extensible]] to <emu-val>true</emu-val>.</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-ecmascript-language-types-number-type": {"num": "6.1.6.1", "title": "#sec-ecmascript-language-types-number-type The Number Type", "html": "<emu-clause id=\"sec-ecmascript-language-types-number-type\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</span> The Number Type</h1>\n        <p>The Number type has exactly 18437736874454810627<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> + 3<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) values, representing the double-precision 64-bit format IEEE 754-2008 values as specified in the IEEE Standard for Binary Floating-Point Arithmetic, except that the 9007199254740990<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) distinct &#8220;Not-a-Number&#8221; values of the IEEE Standard are represented in ECMAScript as a single special <emu-val>NaN</emu-val> value. (Note that the <emu-val>NaN</emu-val> value is produced by the program expression <code>NaN</code>.) In some implementations, external code might be able to detect a difference between various Not-a-Number values, but such behaviour is implementation-dependent; to ECMAScript code, all <emu-val>NaN</emu-val> values are indistinguishable from each other.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The bit pattern that might be observed in an ArrayBuffer (see  <emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>) or a SharedArrayBuffer (see  <emu-xref href=\"#sec-sharedarraybuffer-objects\"><a href=\"#sec-sharedarraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-objects\">#sec-sharedarraybuffer-objects</a></emu-xref>) after a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> has been stored into it is not necessarily the same as the internal representation of that <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> used by the ECMAScript implementation.</p>\n        </div></emu-note>\n        <p>There are two other special values, called <emu-val>positive Infinity</emu-val> and <emu-val>negative Infinity</emu-val>. For brevity, these values are also referred to for expository purposes by the symbols <emu-val>+&#8734;</emu-val> and <emu-val>-&#8734;</emu-val>, respectively. (Note that these two infinite Number values are produced by the program expressions <code>+Infinity</code> (or simply <code>Infinity</code>) and <code>-Infinity</code>.)</p>\n        <p>The other 18437736874454810624<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>) values are called the finite numbers. Half of these are positive numbers and half are negative numbers; for every finite positive <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> there is a corresponding negative value having the same magnitude.</p>\n        <p>Note that there is both a <emu-val>positive zero</emu-val> and a <emu-val>negative zero</emu-val>. For brevity, these values are also referred to for expository purposes by the symbols <emu-val>+0</emu-val> and <emu-val>-0</emu-val>, respectively. (Note that these two different zero Number values are produced by the program expressions <code>+0</code> (or simply <code>0</code>) and <code>-0</code>.)</p>\n        <p>The 18437736874454810622<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) finite nonzero values are of two kinds:</p>\n        <p>18428729675200069632<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>64<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>54<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>) of them are normalized, having the form</p>\n        <div class=\"math-display\">\n          <var>s</var> &#215; <var>m</var> &#215; 2<sup><var>e</var></sup>\n        </div>\n        <p>where <var>s</var> is +1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> or -1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, <var>m</var> is a positive <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> less than 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> but not less than 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>52<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup>, and <var>e</var> is a <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> ranging from -1074<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> to 971<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, inclusive.</p>\n        <p>The remaining 9007199254740990<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> (that is,  <emu-eqn class=\"inline\">2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> - 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></emu-eqn>) values are denormalized, having the form</p>\n        <div class=\"math-display\">\n          <var>s</var> &#215; <var>m</var> &#215; 2<sup><var>e</var></sup>\n        </div>\n        <p>where <var>s</var> is +1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> or -1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, <var>m</var> is a positive <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> less than 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>52<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup>, and <var>e</var> is -1074<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.</p>\n        <p>Note that all the positive and negative mathematical integers whose magnitude is no greater than 2<sup>53</sup> are representable in the Number type (indeed, the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> 0 has two representations, <emu-val>+0</emu-val> and <emu-val>-0</emu-val>).</p>\n        <p>A finite number has an  <em>odd significand</em> if it is nonzero and the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> <var>m</var> used to express it (in one of the two forms shown above) is odd. Otherwise, it has an  <em>even significand</em>.</p>\n        <p>In this specification, the phrase &#8220;the  <dfn id=\"number-value\">Number value</dfn> for <var>x</var>&#8221; where <var>x</var> represents an exact real mathematical quantity (which might even be an irrational number such as &#960;) means a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> chosen in the following manner. Consider the set of all finite values of the Number type, with <emu-val>-0</emu-val> removed and with two additional values added to it that are not representable in the Number type, namely 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> (which is  <emu-eqn class=\"inline\">+1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>971<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>) and  <emu-eqn class=\"inline\">-2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn> (which is  <emu-eqn class=\"inline\">-1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>53<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>971<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn>). Choose the member of this set that is closest in value to <var>x</var>. If two values of the set are equally close, then the one with an even significand is chosen; for this purpose, the two extra values 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> and  <emu-eqn class=\"inline\">-2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn> are considered to have even significands. Finally, if 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> was chosen, replace it with <emu-val>+&#8734;</emu-val>; if  <emu-eqn class=\"inline\">-2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>1024<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup></emu-eqn> was chosen, replace it with <emu-val>-&#8734;</emu-val>; if <emu-val>+0</emu-val> was chosen, replace it with <emu-val>-0</emu-val> if and only if <var>x</var> is less than zero; any other chosen value is used unchanged. The result is the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>. (This procedure corresponds exactly to the behaviour of the IEEE 754-2008 roundTiesToEven mode.)</p>\n        <p>Some ECMAScript operators deal only with integers in specific ranges such as  <emu-eqn class=\"inline\">-2<sup>31</sup></emu-eqn> through  <emu-eqn class=\"inline\">2<sup>31</sup> - 1</emu-eqn>, inclusive, or in the range 0 through  <emu-eqn class=\"inline\">2<sup>16</sup> - 1</emu-eqn>, inclusive. These operators accept any value of the Number type but first convert each such value to an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value in the expected range. See the descriptions of the numeric conversion operations in  <emu-xref href=\"#sec-type-conversion\"><a href=\"#sec-type-conversion\" class=\"excluded-xref\" excluded-id=\"sec-type-conversion\">#sec-type-conversion</a></emu-xref>.</p>\n\n        <p>The Number::unit value is <emu-val>1</emu-val>.</p>\n\n        <div id=\"excluded-sec-numeric-types-number-unaryMinus\"><h1><span class=\"secnum\">6.1.6.1.1</span>#sec-numeric-types-number-unaryMinus Number::unaryMinus ( x )</h1>...</div><div id=\"excluded-sec-numeric-types-number-bitwiseNOT\"><h1><span class=\"secnum\">6.1.6.1.2</span>#sec-numeric-types-number-bitwiseNOT Number::bitwiseNOT ( x )</h1>...</div><div id=\"excluded-sec-numeric-types-number-exponentiate\"><h1><span class=\"secnum\">6.1.6.1.3</span>#sec-numeric-types-number-exponentiate Number::exponentiate ( base, exponent )</h1>...</div><div id=\"excluded-sec-numeric-types-number-multiply\"><h1><span class=\"secnum\">6.1.6.1.4</span>#sec-numeric-types-number-multiply Number::multiply ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-divide\"><h1><span class=\"secnum\">6.1.6.1.5</span>#sec-numeric-types-number-divide Number::divide ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-remainder\"><h1><span class=\"secnum\">6.1.6.1.6</span>#sec-numeric-types-number-remainder Number::remainder ( n, d )</h1>...</div><div id=\"excluded-sec-numeric-types-number-add\"><h1><span class=\"secnum\">6.1.6.1.7</span>#sec-numeric-types-number-add Number::add ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-subtract\"><h1><span class=\"secnum\">6.1.6.1.8</span>#sec-numeric-types-number-subtract Number::subtract ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-leftShift\"><h1><span class=\"secnum\">6.1.6.1.9</span>#sec-numeric-types-number-leftShift Number::leftShift ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-signedRightShift\"><h1><span class=\"secnum\">6.1.6.1.10</span>#sec-numeric-types-number-signedRightShift Number::signedRightShift ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-unsignedRightShift\"><h1><span class=\"secnum\">6.1.6.1.11</span>#sec-numeric-types-number-unsignedRightShift Number::unsignedRightShift ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-lessThan\"><h1><span class=\"secnum\">6.1.6.1.12</span>#sec-numeric-types-number-lessThan Number::lessThan ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-equal\"><h1><span class=\"secnum\">6.1.6.1.13</span>#sec-numeric-types-number-equal Number::equal ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-sameValue\"><h1><span class=\"secnum\">6.1.6.1.14</span>#sec-numeric-types-number-sameValue Number::sameValue ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-sameValueZero\"><h1><span class=\"secnum\">6.1.6.1.15</span>#sec-numeric-types-number-sameValueZero Number::sameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-numberbitwiseop\"><h1><span class=\"secnum\">6.1.6.1.16</span>#sec-numberbitwiseop NumberBitwiseOp ( op, x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-bitwiseAND\"><h1><span class=\"secnum\">6.1.6.1.17</span>#sec-numeric-types-number-bitwiseAND Number::bitwiseAND ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-bitwiseXOR\"><h1><span class=\"secnum\">6.1.6.1.18</span>#sec-numeric-types-number-bitwiseXOR Number::bitwiseXOR ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-bitwiseOR\"><h1><span class=\"secnum\">6.1.6.1.19</span>#sec-numeric-types-number-bitwiseOR Number::bitwiseOR ( x, y )</h1>...</div><div id=\"excluded-sec-numeric-types-number-tostring\"><h1><span class=\"secnum\">6.1.6.1.20</span>#sec-numeric-types-number-tostring Number::toString ( x )</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-date-constructor": {"num": "20.4.3", "title": "#sec-properties-of-the-date-constructor Properties of the Date Constructor", "html": "<emu-clause id=\"sec-properties-of-the-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-constructor\">#sec-properties-of-the-date-constructor</span> Properties of the Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-date.now\"><h1><span class=\"secnum\">20.4.3.1</span>#sec-date.now Date.now ( )</h1>...</div><div id=\"excluded-sec-date.parse\"><h1><span class=\"secnum\">20.4.3.2</span>#sec-date.parse Date.parse ( string )</h1>...</div><div id=\"excluded-sec-date.prototype\"><h1><span class=\"secnum\">20.4.3.3</span>#sec-date.prototype Date.prototype</h1>...</div><div id=\"excluded-sec-date.utc\"><h1><span class=\"secnum\">20.4.3.4</span>#sec-date.utc Date.UTC ( year [ , month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-%typedarray%.prototype.fill": {"num": "22.2.3.8", "title": "#sec-%typedarray%.prototype.fill %TypedArray%.prototype.fill ( value [ , start [ , end ] ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.fill\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.fill\">#sec-%typedarray%.prototype.fill</span> %TypedArray%.prototype.fill ( <var>value</var> [ , <var>start</var> [ , <var>end</var> ] ] )</h1>\n        <p>The interpretation and use of the arguments of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.fill</code> are the same as for <code>Array.prototype.fill</code> as defined in  <emu-xref href=\"#sec-array.prototype.fill\"><a href=\"#sec-array.prototype.fill\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.fill\">#sec-array.prototype.fill</a></emu-xref>.</p>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>O</var>).</li><li>Let <var>len</var> be <var>O</var>.[[ArrayLength]].</li><li>If <var>O</var>.[[ContentType]] is <code>\"BigInt\"</code>, let <var>value</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>value</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>Let <var>relativeStart</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>start</var>).</li><li>If <var>relativeStart</var> &lt; 0, let <var>k</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeStart</var>), 0); else let <var>k</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeStart</var>, <var>len</var>).</li><li>If <var>end</var> is <emu-val>undefined</emu-val>, let <var>relativeEnd</var> be <var>len</var>; else let <var>relativeEnd</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>end</var>).</li><li>If <var>relativeEnd</var> &lt; 0, let <var>final</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>((<var>len</var> + <var>relativeEnd</var>), 0); else let <var>final</var> be <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>relativeEnd</var>, <var>len</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>O</var>.[[ViewedArrayBuffer]]) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Repeat, while <var>k</var> &lt; <var>final</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Perform !&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>O</var>, <var>Pk</var>, <var>value</var>, <emu-val>true</emu-val>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-toobject": {"num": "7.1.18", "title": "#sec-toobject ToObject ( argument )", "html": "<emu-clause id=\"sec-toobject\" aoid=\"ToObject\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toobject\">#sec-toobject</span> ToObject ( <var>argument</var> )</h1>\n      <p>The abstract operation ToObject converts <var>argument</var> to a value of type Object according to  <emu-xref href=\"#table-13\"><a href=\"#table-13\" class=\"excluded-xref\" excluded-id=\"table-13\">#table-13</a></emu-xref>:</p>\n      <emu-table id=\"table-13\" caption=\"ToObject Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-13\">#table-13</span>: <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              Return a new Boolean object whose [[BooleanData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-boolean-objects\"><a href=\"#sec-boolean-objects\" class=\"excluded-xref\" excluded-id=\"sec-boolean-objects\">#sec-boolean-objects</a></emu-xref> for a description of Boolean objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return a new Number object whose [[NumberData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-number-objects\"><a href=\"#sec-number-objects\" class=\"excluded-xref\" excluded-id=\"sec-number-objects\">#sec-number-objects</a></emu-xref> for a description of Number objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              Return a new String object whose [[StringData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-string-objects\"><a href=\"#sec-string-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-objects\">#sec-string-objects</a></emu-xref> for a description of String objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Return a new Symbol object whose [[SymbolData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-symbol-objects\"><a href=\"#sec-symbol-objects\" class=\"excluded-xref\" excluded-id=\"sec-symbol-objects\">#sec-symbol-objects</a></emu-xref> for a description of Symbol objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            \n            </td>\n            <td>\n              Return a new BigInt object whose [[BigIntData]] internal slot is set to <var>argument</var>. See  <emu-xref href=\"#sec-bigint-objects\"><a href=\"#sec-bigint-objects\" class=\"excluded-xref\" excluded-id=\"sec-bigint-objects\">#sec-bigint-objects</a></emu-xref> for a description of BigInt objects.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-setviewvalue": {"num": "24.3.1.2", "title": "#sec-setviewvalue SetViewValue ( view, requestIndex, isLittleEndian, type, value )", "html": "<emu-clause id=\"sec-setviewvalue\" aoid=\"SetViewValue\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setviewvalue\">#sec-setviewvalue</span> SetViewValue ( <var>view</var>, <var>requestIndex</var>, <var>isLittleEndian</var>, <var>type</var>, <var>value</var> )</h1>\n        <p>The abstract operation SetViewValue with arguments <var>view</var>, <var>requestIndex</var>, <var>isLittleEndian</var>, <var>type</var>, and <var>value</var> is used by functions on DataView instances to store values into the view's buffer. It performs the following steps:</p>\n        <emu-alg><ol><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>view</var>, [[DataView]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>view</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>getIndex</var> be ?&#160;<emu-xref aoid=\"ToIndex\"><a href=\"#sec-toindex\">ToIndex</a></emu-xref>(<var>requestIndex</var>).</li><li>If !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>true</emu-val>, let <var>numberValue</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>numberValue</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>Set <var>isLittleEndian</var> to !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(<var>isLittleEndian</var>).</li><li>Let <var>buffer</var> be <var>view</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>viewOffset</var> be <var>view</var>.[[ByteOffset]].</li><li>Let <var>viewSize</var> be <var>view</var>.[[ByteLength]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>getIndex</var> + <var>elementSize</var> &gt; <var>viewSize</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>bufferIndex</var> be <var>getIndex</var> + <var>viewOffset</var>.</li><li>Return <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>bufferIndex</var>, <var>type</var>, <var>numberValue</var>, <emu-val>false</emu-val>, <code>\"Unordered\"</code>, <var>isLittleEndian</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-atomicreadmodifywrite": {"num": "24.4.1.11", "title": "#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )", "html": "<emu-clause id=\"sec-atomicreadmodifywrite\" aoid=\"AtomicReadModifyWrite\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomicreadmodifywrite\">#sec-atomicreadmodifywrite</span> AtomicReadModifyWrite ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>op</var> )</h1>\n        <p>The abstract operation AtomicReadModifyWrite takes four arguments, <var>typedArray</var>, <var>index</var>, <var>value</var>, and a pure combining operation <var>op</var>. The pure combining operation <var>op</var> takes two <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values arguments and returns a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of byte values. The operation atomically loads a value, combines it with another value, and stores the result of the combination. It returns the loaded value. It performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>If <var>typedArray</var>.[[ContentType]] is <code>\"BigInt\"</code>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>v</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Return <emu-xref aoid=\"GetModifySetValueInBuffer\"><a href=\"#sec-getmodifysetvalueinbuffer\">GetModifySetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <var>op</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-tonumber": {"num": "7.1.4", "title": "#sec-tonumber ToNumber ( argument )", "html": "<emu-clause id=\"sec-tonumber\" aoid=\"ToNumber\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tonumber\">#sec-tonumber</span> ToNumber ( <var>argument</var> )</h1>\n      <p>The abstract operation ToNumber converts <var>argument</var> to a value of type Number according to  <emu-xref href=\"#table-11\"><a href=\"#table-11\" class=\"excluded-xref\" excluded-id=\"table-11\">#table-11</a></emu-xref>:</p>\n      <emu-table id=\"table-11\" caption=\"ToNumber Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-11\">#table-11</span>: <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Return <emu-val>NaN</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Return <emu-val>+0</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>true</emu-val>, return 1. If <var>argument</var> is <emu-val>false</emu-val>, return <emu-val>+0</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return <var>argument</var> (no conversion).\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              See grammar and conversion algorithm below.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              <p>Apply the following steps:</p>\n              <emu-alg><ol><li>Let <var>primValue</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>argument</var>, hint Number).</li><li>Return ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>primValue</var>).\n              </li></ol></emu-alg>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n\n      <div id=\"excluded-sec-tonumber-applied-to-the-string-type\"><h1><span class=\"secnum\">7.1.4.1</span>#sec-tonumber-applied-to-the-string-type ToNumber Applied to the String Type</h1>...</div></emu-clause>\n\n    "}, "sec-abstract-equality-comparison": {"num": "7.2.14", "title": "#sec-abstract-equality-comparison Abstract Equality Comparison", "html": "<emu-clause id=\"sec-abstract-equality-comparison\" aoid=\"Abstract Equality Comparison\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-equality-comparison\">#sec-abstract-equality-comparison</span> Abstract Equality Comparison</h1>\n      <p>The comparison <var>x</var> == <var>y</var>, where <var>x</var> and <var>y</var> are values, produces <emu-val>true</emu-val> or <emu-val>false</emu-val>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is the same as <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>), then<ol><li>Return the result of performing <emu-xref aoid=\"Strict Equality Comparison\"><a href=\"#sec-strict-equality-comparison\">Strict Equality Comparison</a></emu-xref> <var>x</var> === <var>y</var>.</li></ol></li><li>If <var>x</var> is <emu-val>null</emu-val> and <var>y</var> is <emu-val>undefined</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>x</var> is <emu-val>undefined</emu-val> and <var>y</var> is <emu-val>null</emu-val>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is String, return the result of the comparison <var>x</var> == !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is String and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Number, return the result of the comparison !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>) == <var>y</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is BigInt and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is String, then<ol><li>Let <var>n</var> be !&#160;<emu-xref aoid=\"StringToBigInt\"><a href=\"#sec-string-to-bigint\">StringToBigInt</a></emu-xref>(<var>y</var>).</li><li>If <var>n</var> is <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>.</li><li>Return the result of the comparison <var>x</var> == <var>n</var>.</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is String and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is BigInt, return the result of the comparison <var>y</var> == <var>x</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Boolean, return the result of the comparison !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>x</var>) == <var>y</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Boolean, return the result of the comparison <var>x</var> == !&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is either String, Number, BigInt, or Symbol and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Object, return the result of the comparison <var>x</var> == <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>y</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Object and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is either String, Number, BigInt, or Symbol, return the result of the comparison <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>x</var>) == <var>y</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is BigInt and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is Number, or if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) is Number and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) is BigInt, then<ol><li>If <var>x</var> or <var>y</var> are any of <emu-val>NaN</emu-val>, <emu-val>+&#8734;</emu-val>, or <emu-val>-&#8734;</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of <var>x</var> is equal to the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of <var>y</var>, return <emu-val>true</emu-val>; otherwise return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-prefix-decrement-operator-runtime-semantics-evaluation": {"num": "12.4.7.1", "title": "#sec-prefix-decrement-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-prefix-decrement-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-prefix-decrement-operator-runtime-semantics-evaluation\">#sec-prefix-decrement-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a745559\"><emu-t>--</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Let <var>newValue</var> be ?&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldvalue</var>)::subtract(<var>oldValue</var>, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldValue</var>)::unit).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>expr</var>, <var>newValue</var>).</li><li>Return <var>newValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-additive-operators": {"num": "12.8", "title": "#sec-additive-operators Additive Operators", "html": "<emu-clause id=\"sec-additive-operators\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additive-operators\">#sec-additive-operators</span> Additive Operators</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AdditiveExpression\" params=\"Yield, Await\" id=\"prod-AdditiveExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f6af3d13\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"79f3759c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>+</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e309a7b9\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>-</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-additive-operators-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">12.8.1</span>#sec-additive-operators-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-additive-operators-static-semantics-assignmenttargettype\"><h1><span class=\"secnum\">12.8.2</span>#sec-additive-operators-static-semantics-assignmenttargettype Static Semantics: AssignmentTargetType</h1>...</div><div id=\"excluded-sec-addition-operator-plus\"><h1><span class=\"secnum\">12.8.3</span>#sec-addition-operator-plus The Addition Operator ( + )</h1>...</div><div id=\"excluded-sec-subtraction-operator-minus\"><h1><span class=\"secnum\">12.8.4</span>#sec-subtraction-operator-minus The Subtraction Operator ( - )</h1>...</div></emu-clause>\n\n  "}, "sec-atomics.store": {"num": "24.4.9", "title": "#sec-atomics.store Atomics.store ( typedArray, index, value )", "html": "<emu-clause id=\"sec-atomics.store\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.store\">#sec-atomics.store</span> Atomics.store ( <var>typedArray</var>, <var>index</var>, <var>value</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <var>arrayTypeName</var> is <code>\"BigUint64Array\"</code> or <code>\"BigInt64Array\"</code>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>value</var>).</li><li>Let <var>arrayTypeName</var> be <var>typedArray</var>.[[TypedArrayName]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>buffer</var>, <var>indexedPosition</var>, <var>elementType</var>, <var>v</var>, <emu-val>true</emu-val>, <code>\"SeqCst\"</code>).</li><li>Return <var>v</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-object-initializer-static-semantics-propname": {"num": "12.2.6.5", "title": "#sec-object-initializer-static-semantics-propname Static Semantics: PropName", "html": "<emu-clause id=\"sec-object-initializer-static-semantics-propname\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-initializer-static-semantics-propname\">#sec-object-initializer-static-semantics-propname</span> Static Semantics: PropName</h1>\n        <emu-see-also-para op=\"PropName\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2361f19d\"><emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return PropName of <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return StringValue of <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the String value whose code units are the SV of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"LiteralPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-LiteralPropertyName\">LiteralPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>nbr</var> be the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt>.</li><li>Return !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nbr</var>).\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ComputedPropertyName\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"2ed5550b\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-const>empty</emu-const>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-typedarray-typedarray": {"num": "22.2.4.3", "title": "#sec-typedarray-typedarray TypedArray ( typedArray )", "html": "<emu-clause id=\"sec-typedarray-typedarray\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-typedarray\">#sec-typedarray-typedarray</span> <var>TypedArray</var> ( <var>typedArray</var> )</h1>\n        <p>This description applies only if the <var>TypedArray</var> function is called with at least one argument and the Type of the first argument is Object and that object has a [[TypedArrayName]] internal slot.</p>\n        <p><var>TypedArray</var> called with argument <var>typedArray</var> performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>typedArray</var>) is Object and <var>typedArray</var> has a [[TypedArrayName]] internal slot.</li><li>If NewTarget is <emu-val>undefined</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>constructorName</var> be the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for this <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"AllocateTypedArray\"><a href=\"#sec-allocatetypedarray\">AllocateTypedArray</a></emu-xref>(<var>constructorName</var>, NewTarget, <code>\"%<var>TypedArray</var>.prototype%\"</code>).</li><li>Let <var>srcArray</var> be <var>typedArray</var>.</li><li>Let <var>srcData</var> be <var>srcArray</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>elementType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>elementLength</var> be <var>srcArray</var>.[[ArrayLength]].</li><li>Let <var>srcName</var> be the String value of <var>srcArray</var>.[[TypedArrayName]].</li><li>Let <var>srcType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcElementSize</var> be the Element Size value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>srcName</var>.</li><li>Let <var>srcByteOffset</var> be <var>srcArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>constructorName</var>.</li><li>Let <var>byteLength</var> be <var>elementSize</var> &#215; <var>elementLength</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>false</emu-val>, then<ol><li>Let <var>bufferConstructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>srcData</var>, <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>).</li></ol></li><li>Else,<ol><li>Let <var>bufferConstructor</var> be <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>.</li></ol></li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>elementType</var>, <var>srcType</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"CloneArrayBuffer\"><a href=\"#sec-clonearraybuffer\">CloneArrayBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteOffset</var>, <var>byteLength</var>, <var>bufferConstructor</var>).</li></ol></li><li>Else,<ol><li>Let <var>data</var> be ?&#160;<emu-xref aoid=\"AllocateArrayBuffer\"><a href=\"#sec-allocatearraybuffer\">AllocateArrayBuffer</a></emu-xref>(<var>bufferConstructor</var>, <var>byteLength</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>srcData</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>srcArray</var>.[[ContentType]] is not equal to <var>O</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>srcByteIndex</var> be <var>srcByteOffset</var>.</li><li>Let <var>targetByteIndex</var> be 0.</li><li>Let <var>count</var> be <var>elementLength</var>.</li><li>Repeat, while <var>count</var> &gt; 0<ol><li>Let <var>value</var> be <emu-xref aoid=\"GetValueFromBuffer\"><a href=\"#sec-getvaluefrombuffer\">GetValueFromBuffer</a></emu-xref>(<var>srcData</var>, <var>srcByteIndex</var>, <var>srcType</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>data</var>, <var>targetByteIndex</var>, <var>elementType</var>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>srcByteIndex</var> to <var>srcByteIndex</var> + <var>srcElementSize</var>.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>elementSize</var>.</li><li>Set <var>count</var> to <var>count</var> - 1.</li></ol></li></ol></li><li>Set <var>O</var>.[[ViewedArrayBuffer]] to <var>data</var>.</li><li>Set <var>O</var>.[[ByteLength]] to <var>byteLength</var>.</li><li>Set <var>O</var>.[[ByteOffset]] to 0.</li><li>Set <var>O</var>.[[ArrayLength]] to <var>elementLength</var>.</li><li>Return <var>O</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-typeof-operator-runtime-semantics-evaluation": {"num": "12.5.5.1", "title": "#sec-typeof-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-typeof-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typeof-operator-runtime-semantics-evaluation\">#sec-typeof-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UnaryExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ab1a2cb9\"><emu-t>typeof</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>val</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>val</var>) is <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"IsUnresolvableReference\"><a href=\"#sec-isunresolvablereference\">IsUnresolvableReference</a></emu-xref>(<var>val</var>) is <emu-val>true</emu-val>, return <code>\"undefined\"</code>.</li></ol></li><li>Set <var>val</var> to ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>val</var>).</li><li>Return a String according to <emu-xref href=\"#table-35\"><a href=\"#table-35\" class=\"excluded-xref\" excluded-id=\"table-35\">#table-35</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-table id=\"table-35\" caption=\"typeof Operator Results\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-35\">#table-35</span>: typeof Operator Results</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Type of <var>val</var>\n              \n              </th>\n              <th>\n                Result\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                Undefined\n              \n              </td>\n              <td>\n                <code>\"undefined\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Null\n              \n              </td>\n              <td>\n                <code>\"object\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Boolean\n              \n              </td>\n              <td>\n                <code>\"boolean\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Number\n              \n              </td>\n              <td>\n                <code>\"number\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                String\n              \n              </td>\n              <td>\n                <code>\"string\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Symbol\n              \n              </td>\n              <td>\n                <code>\"symbol\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                BigInt\n              \n              </td>\n              <td>\n                <code>\"bigint\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Object (does not implement [[Call]])\n              \n              </td>\n              <td>\n                <code>\"object\"</code>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                Object (implements [[Call]])\n              \n              </td>\n              <td>\n                <code>\"function\"</code>\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-atomics.islockfree": {"num": "24.4.6", "title": "#sec-atomics.islockfree Atomics.isLockFree ( size )", "html": "<emu-clause id=\"sec-atomics.islockfree\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.islockfree\">#sec-atomics.islockfree</span> Atomics.isLockFree ( <var>size</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>size</var>).</li><li>Let <var>AR</var> be the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</li><li>If <var>n</var> equals 1, return <var>AR</var>.[[IsLockFree1]].</li><li>If <var>n</var> equals 2, return <var>AR</var>.[[IsLockFree2]].</li><li>If <var>n</var> equals 4, return <emu-val>true</emu-val>.</li><li>If <var>n</var> equals 8, return <var>AR</var>.[[IsLockFree8]].</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><code>Atomics.isLockFree</code>() is an optimization primitive. The intuition is that if the atomic step of an atomic primitive (<code>compareExchange</code>, <code>load</code>, <code>store</code>, <code>add</code>, <code>sub</code>, <code>and</code>, <code>or</code>, <code>xor</code>, or <code>exchange</code>) on a datum of size <var>n</var> bytes will be performed without the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> acquiring a lock outside the <var>n</var> bytes comprising the datum, then <code>Atomics.isLockFree</code>(<var>n</var>) will return <emu-val>true</emu-val>. High-performance algorithms will use Atomics.isLockFree to determine whether to use locks or atomic operations in critical sections. If an atomic primitive is not lock-free then it is often more efficient for an algorithm to provide its own locking.</p>\n        <p><code>Atomics.isLockFree</code>(4) always returns <emu-val>true</emu-val> as that can be supported on all known relevant hardware. Being able to assume this will generally simplify programs.</p>\n        <p>Regardless of the value of <code>Atomics.isLockFree</code>, all atomic operations are guaranteed to be atomic. For example, they will never have a visible operation take place in the middle of the operation (e.g., \"tearing\").</p>\n      </div></emu-note>\n    </emu-clause>\n    "}, "sec-addition-operator-plus-runtime-semantics-evaluation": {"num": "12.8.3.1", "title": "#sec-addition-operator-plus-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-addition-operator-plus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-addition-operator-plus-runtime-semantics-evaluation\">#sec-addition-operator-plus-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"AdditiveExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0e497b17\"><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-t>+</emu-t><emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rprim</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lprim</var>) is String or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rprim</var>) is String, then<ol><li>Let <var>lstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lprim</var>).</li><li>Let <var>rstr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>rprim</var>).</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>lstr</var> and <var>rstr</var>.</li></ol></li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lprim</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rprim</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>Return <var>T</var>::add(<var>lnum</var>, <var>rnum</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>No hint is provided in the calls to <emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref> in steps 5 and 6. All standard objects except Date objects handle the absence of a hint as if the hint Number were given; Date objects handle the absence of a hint as if the hint String were given. Exotic objects may handle the absence of a hint in some other manner.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Step 7 differs from step 3 of the <emu-xref aoid=\"Abstract Relational Comparison\"><a href=\"#sec-abstract-relational-comparison\">Abstract Relational Comparison</a></emu-xref> algorithm, by using the logical-or operation instead of the logical-and operation.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in  <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in  <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              \n              </th>\n              <th>\n                Global Name\n              \n              </th>\n              <th>\n                ECMAScript Language Association\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array</code>\n              \n              </td>\n              <td>\n                The <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>entries</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>forEach</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>keys</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>values</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., %AsyncFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., %AsyncGeneratorFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., %AsyncGenerator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Atomics</code>\n              \n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>BigInt</code>\n              \n              </td>\n              <td>\n                The <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigInt64Array%\n              \n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigInt64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigUint64Array%\n              \n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigUint64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean</code>\n              \n              </td>\n              <td>\n                The <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView</code>\n              \n              </td>\n              <td>\n                The <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date</code>\n              \n              </td>\n              <td>\n                The <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURI</code>\n              \n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURI</code>\n              \n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error</code>\n              \n              </td>\n              <td>\n                The <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>eval</code>\n              \n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalError%\n              \n              </td>\n              <td>\n                <code>EvalError</code>\n              \n              </td>\n              <td>\n                The <code>EvalError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              \n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %EvalError%; i.e., %EvalError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32Array%\n              \n              </td>\n              <td>\n                <code>Float32Array</code>\n              \n              </td>\n              <td>\n                The <code>Float32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float32Array%; i.e., %Float32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64Array%\n              \n              </td>\n              <td>\n                <code>Float64Array</code>\n              \n              </td>\n              <td>\n                The <code>Float64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float64Array%; i.e., %Float64Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Function</code>\n              \n              </td>\n              <td>\n                The <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              \n              </td>\n              <td>\n                <code>Function.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., %Generator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8Array%\n              \n              </td>\n              <td>\n                <code>Int8Array</code>\n              \n              </td>\n              <td>\n                The <code>Int8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int8Array%; i.e., %Int8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16Array%\n              \n              </td>\n              <td>\n                <code>Int16Array</code>\n              \n              </td>\n              <td>\n                The <code>Int16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int16Array%; i.e., %Int16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32Array%\n              \n              </td>\n              <td>\n                <code>Int32Array</code>\n              \n              </td>\n              <td>\n                The <code>Int32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int32Array%; i.e., %Int32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isFinite</code>\n              \n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isNaN</code>\n              \n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON</code>\n              \n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.parse</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>parse</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %JSONStringify%\n              \n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>stringify</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map</code>\n              \n              </td>\n              <td>\n                The <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Math</code>\n              \n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number</code>\n              \n              </td>\n              <td>\n                The <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object</code>\n              \n              </td>\n              <td>\n                The <code>Object</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>toString</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>valueOf</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseFloat</code>\n              \n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseInt</code>\n              \n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise</code>\n              \n              </td>\n              <td>\n                The <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>then</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.all</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>all</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.reject</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>reject</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>resolve</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Proxy</code>\n              \n              </td>\n              <td>\n                The <code>Proxy</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeError%\n              \n              </td>\n              <td>\n                <code>RangeError</code>\n              \n              </td>\n              <td>\n                The <code>RangeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %RangeError%; i.e., %RangeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceError%\n              \n              </td>\n              <td>\n                <code>ReferenceError</code>\n              \n              </td>\n              <td>\n                The <code>ReferenceError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              \n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %ReferenceError%; i.e., %ReferenceError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Reflect</code>\n              \n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp</code>\n              \n              </td>\n              <td>\n                The <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set</code>\n              \n              </td>\n              <td>\n                The <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String</code>\n              \n              </td>\n              <td>\n                The <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol</code>\n              \n              </td>\n              <td>\n                The <code>Symbol</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxError%\n              \n              </td>\n              <td>\n                <code>SyntaxError</code>\n              \n              </td>\n              <td>\n                The <code>SyntaxError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              \n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %SyntaxError%; i.e., %SyntaxError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of %TypeError%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeError%\n              \n              </td>\n              <td>\n                <code>TypeError</code>\n              \n              </td>\n              <td>\n                The <code>TypeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %TypeError%; i.e., %TypeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8Array%\n              \n              </td>\n              <td>\n                <code>Uint8Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8Array%; i.e., %Uint8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArray%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              \n              </td>\n              <td>\n                The <code>Uint8ClampedArray</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8ClampedArray%; i.e., %Uint8ClampedArray.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16Array%\n              \n              </td>\n              <td>\n                <code>Uint16Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint16Array%; i.e., %Uint16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32Array%\n              \n              </td>\n              <td>\n                <code>Uint32Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint32Array%; i.e., %Uint32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIError%\n              \n              </td>\n              <td>\n                <code>URIError</code>\n              \n              </td>\n              <td>\n                The <code>URIError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              \n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %URIError%; i.e., %URIError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap</code>\n              \n              </td>\n              <td>\n                The <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet</code>\n              \n              </td>\n              <td>\n                The <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-subtraction-operator-minus-runtime-semantics-evaluation": {"num": "12.8.4.1", "title": "#sec-subtraction-operator-minus-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-subtraction-operator-minus-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-subtraction-operator-minus-runtime-semantics-evaluation\">#sec-subtraction-operator-minus-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"AdditiveExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ee054414\"><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt><emu-t>-</emu-t><emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>Return <var>T</var>::subtract(<var>lnum</var>, <var>rnum</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-literals-runtime-semantics-evaluation": {"num": "12.2.4.1", "title": "#sec-literals-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-literals-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-literals-runtime-semantics-evaluation\">#sec-literals-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"54f84188\"><emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>null</emu-val>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3508e1fd\"><emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt> is the token <code>false</code>, return <emu-val>false</emu-val>.</li><li>If <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt> is the token <code>true</code>, return <emu-val>true</emu-val>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the NumericValue of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> as defined in <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Literal\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Literal\">Literal</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the StringValue of <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt> as defined in <emu-xref href=\"#sec-string-literals-static-semantics-stringvalue\"><a href=\"#sec-string-literals-static-semantics-stringvalue\" class=\"excluded-xref\" excluded-id=\"sec-string-literals-static-semantics-stringvalue\">#sec-string-literals-static-semantics-stringvalue</a></emu-xref>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-atomics.wait": {"num": "24.4.11", "title": "#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )", "html": "<emu-clause id=\"sec-atomics.wait\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.wait\">#sec-atomics.wait</span> Atomics.wait ( <var>typedArray</var>, <var>index</var>, <var>value</var>, <var>timeout</var> )</h1>\n      <p><code>Atomics.wait</code> puts the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in a wait queue and puts it to sleep until it is notified or the sleep times out. The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <var>typedArray</var>.[[TypedArrayName]] is <code>\"BigInt64Array\"</code>, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-to-big-int64\">ToBigInt64</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>v</var> be ?&#160;<emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>(<var>value</var>).</li><li>Let <var>q</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>timeout</var>).</li><li>If <var>q</var> is <emu-val>NaN</emu-val>, let <var>t</var> be <emu-val>+&#8734;</emu-val>; else let <var>t</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>q</var>, 0).</li><li>Let <var>B</var> be <emu-xref aoid=\"AgentCanSuspend\"><a href=\"#sec-agentcansuspend\">AgentCanSuspend</a></emu-xref>().</li><li>If <var>B</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>w</var> be !&#160;<emu-xref aoid=\"AtomicLoad\"><a href=\"#sec-atomicload\">AtomicLoad</a></emu-xref>(<var>typedArray</var>, <var>i</var>).</li><li>If <var>v</var> is not equal to <var>w</var>, then<ol><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return the String <code>\"not-equal\"</code>.</li></ol></li><li>Let <var>W</var> be <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Perform <emu-xref aoid=\"AddWaiter\"><a href=\"#sec-addwaiter\">AddWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Let <var>notified</var> be <emu-xref aoid=\"Suspend\"><a href=\"#sec-suspend\">Suspend</a></emu-xref>(<var>WL</var>, <var>W</var>, <var>t</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>W</var> is not on the list of waiters in <var>WL</var>.</li></ol></li><li>Else,<ol><li>Perform <emu-xref aoid=\"RemoveWaiter\"><a href=\"#sec-removewaiter\">RemoveWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>If <var>notified</var> is <emu-val>true</emu-val>, return the String <code>\"ok\"</code>.</li><li>Return the String <code>\"timed-out\"</code>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-math.pow": {"num": "20.3.2.26", "title": "#sec-math.pow Math.pow ( base, exponent )", "html": "<emu-clause id=\"sec-math.pow\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.pow\">#sec-math.pow</span> Math.pow ( <var>base</var>, <var>exponent</var> )</h1>\n        <emu-alg><ol><li>Let <var>base</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>base</var>).</li><li>Let <var>exponent</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>exponent</var>).</li><li>Return ! Number::exponentiate(<var>base</var>, <var>exponent</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-abstract-operations-for-atomics": {"num": "24.4.1", "title": "#sec-abstract-operations-for-atomics Abstract Operations for Atomics", "html": "<emu-clause id=\"sec-abstract-operations-for-atomics\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-atomics\">#sec-abstract-operations-for-atomics</span> Abstract Operations for Atomics</h1>\n\n      <div id=\"excluded-sec-validatesharedintegertypedarray\"><h1><span class=\"secnum\">24.4.1.1</span>#sec-validatesharedintegertypedarray ValidateSharedIntegerTypedArray ( typedArray [ , waitable ] )</h1>...</div><div id=\"excluded-sec-validateatomicaccess\"><h1><span class=\"secnum\">24.4.1.2</span>#sec-validateatomicaccess ValidateAtomicAccess ( typedArray, requestIndex )</h1>...</div><div id=\"excluded-sec-getwaiterlist\"><h1><span class=\"secnum\">24.4.1.3</span>#sec-getwaiterlist GetWaiterList ( block, i )</h1>...</div><div id=\"excluded-sec-entercriticalsection\"><h1><span class=\"secnum\">24.4.1.4</span>#sec-entercriticalsection EnterCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-leavecriticalsection\"><h1><span class=\"secnum\">24.4.1.5</span>#sec-leavecriticalsection LeaveCriticalSection ( WL )</h1>...</div><div id=\"excluded-sec-addwaiter\"><h1><span class=\"secnum\">24.4.1.6</span>#sec-addwaiter AddWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiter\"><h1><span class=\"secnum\">24.4.1.7</span>#sec-removewaiter RemoveWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-removewaiters\"><h1><span class=\"secnum\">24.4.1.8</span>#sec-removewaiters RemoveWaiters ( WL, c )</h1>...</div><div id=\"excluded-sec-suspend\"><h1><span class=\"secnum\">24.4.1.9</span>#sec-suspend Suspend ( WL, W, timeout )</h1>...</div><div id=\"excluded-sec-notifywaiter\"><h1><span class=\"secnum\">24.4.1.10</span>#sec-notifywaiter NotifyWaiter ( WL, W )</h1>...</div><div id=\"excluded-sec-atomicreadmodifywrite\"><h1><span class=\"secnum\">24.4.1.11</span>#sec-atomicreadmodifywrite AtomicReadModifyWrite ( typedArray, index, value, op )</h1>...</div><div id=\"excluded-sec-atomicload\"><h1><span class=\"secnum\">24.4.1.12</span>#sec-atomicload AtomicLoad ( typedArray, index )</h1>...</div></emu-clause>\n\n    "}, "sec-ecmascript-language-types": {"num": "6.1", "title": "#sec-ecmascript-language-types ECMAScript Language Types", "html": "<emu-clause id=\"sec-ecmascript-language-types\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-language-types\">#sec-ecmascript-language-types</span> ECMAScript Language Types</h1>\n    <p>An  <dfn>ECMAScript language type</dfn> corresponds to values that are directly manipulated by an ECMAScript programmer using the ECMAScript language. The ECMAScript language types are Undefined, Null, Boolean, String, Symbol, Number, and Object. An  <dfn>ECMAScript language value</dfn> is a value that is characterized by an ECMAScript language type.</p>\n\n    <div id=\"excluded-sec-ecmascript-language-types-undefined-type\"><h1><span class=\"secnum\">6.1.1</span>#sec-ecmascript-language-types-undefined-type The Undefined Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-null-type\"><h1><span class=\"secnum\">6.1.2</span>#sec-ecmascript-language-types-null-type The Null Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-boolean-type\"><h1><span class=\"secnum\">6.1.3</span>#sec-ecmascript-language-types-boolean-type The Boolean Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-string-type\"><h1><span class=\"secnum\">6.1.4</span>#sec-ecmascript-language-types-string-type The String Type</h1>...</div><div id=\"excluded-sec-ecmascript-language-types-symbol-type\"><h1><span class=\"secnum\">6.1.5</span>#sec-ecmascript-language-types-symbol-type The Symbol Type</h1>...</div><div id=\"excluded-sec-numeric-types\"><h1><span class=\"secnum\">6.1.6</span>#sec-numeric-types Numeric Types</h1>...</div><div id=\"excluded-sec-object-type\"><h1><span class=\"secnum\">6.1.7</span>#sec-object-type The Object Type</h1>...</div></emu-clause>\n\n  "}, "sec-exp-operator": {"num": "12.6", "title": "#sec-exp-operator Exponentiation Operator", "html": "<emu-clause id=\"sec-exp-operator\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exp-operator\">#sec-exp-operator</span> Exponentiation Operator</h1>\n    <h2>Syntax</h2>\n\n    <emu-grammar type=\"definition\"><emu-production name=\"ExponentiationExpression\" params=\"Yield, Await\" id=\"prod-ExponentiationExpression\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f16b387c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UnaryExpression\">UnaryExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"48e152b6\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UpdateExpression\">UpdateExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt><emu-t>**</emu-t><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n\n    <div id=\"excluded-sec-exp-operator-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">12.6.1</span>#sec-exp-operator-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-exp-operator-static-semantics-assignmenttargettype\"><h1><span class=\"secnum\">12.6.2</span>#sec-exp-operator-static-semantics-assignmenttargettype Static Semantics: AssignmentTargetType</h1>...</div><div id=\"excluded-sec-exp-operator-runtime-semantics-evaluation\"><h1><span class=\"secnum\">12.6.3</span>#sec-exp-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-runtime-semantics-mv-s": {"num": "7.1.4.1.1", "title": "#sec-runtime-semantics-mv-s Runtime Semantics: MV", "html": "<emu-clause id=\"sec-runtime-semantics-mv-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-mv-s\">#sec-runtime-semantics-mv-s</span> Runtime Semantics: MV</h1>\n          <p>The conversion of a String to a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> is similar overall to the determination of the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for a numeric literal (see  <emu-xref href=\"#sec-literals-numeric-literals\"><a href=\"#sec-literals-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-literals-numeric-literals\">#sec-literals-numeric-literals</a></emu-xref>), but some of the details are different, so the process for converting a String numeric literal to a value of Number type is given here. This value is determined in two steps: first, a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> (MV) is derived from the String numeric literal; second, this <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> is rounded as described below. The MV on any grammar symbol, not provided below, is the MV for that symbol defined in  <emu-xref href=\"#sec-static-semantics-mv\"><a href=\"#sec-static-semantics-mv\" class=\"excluded-xref\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</a></emu-xref>.</p>\n          <ul>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"63c9217f\"><emu-nt><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StringNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StringNumericLiteral\">StringNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"fe58c396\"><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-StrWhiteSpace\">StrWhiteSpace</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt>, no matter whether white space is present or not.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"db369ee0\"><emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrNumericLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrNumericLiteral\">StrNumericLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"477fcd23\"><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"a3f639a9\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrDecimalLiteral\">StrDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"d60f01a5\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt>. (Note that if the MV of <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> is 0, the negative of this MV is also 0. The rounding rule described below handles the conversion of this signless mathematical zero to a floating-point <emu-val>+0</emu-val> or <emu-val>-0</emu-val> as appropriate.)\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4afe8df8\"><emu-t>Infinity</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>10000<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub></sup> (a value so large that it will round to <emu-val>+&#8734;</emu-val>).\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"33bf537e\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4565db95\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>), where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"6f5fda9f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"4694f1d2\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of the first <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> plus (the MV of the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>)) times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in the second <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"c1f33372\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"0cd5f3c3\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var> -<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n            \n            </li>\n            <li>\n              The MV of  <emu-grammar><emu-production name=\"StrUnsignedDecimalLiteral\" type=\"regexp\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt><emu-geq>:::</emu-geq><emu-rhs a=\"2e993467\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> times 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n            \n            </li>\n          </ul>\n          <p>Once the exact MV for a String numeric literal has been determined, it is then rounded to a value of the Number type. If the MV is 0, then the rounded value is <emu-val>+0</emu-val> unless the first non white space code point in the String numeric literal is <code>\"-\"</code>, in which case the rounded value is <emu-val>-0</emu-val>. Otherwise, the rounded value must be the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV (in the sense defined in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>), unless the literal includes a <emu-nt><a href=\"#prod-StrUnsignedDecimalLiteral\">StrUnsignedDecimalLiteral</a></emu-nt> and the literal has more than 20 significant digits, in which case the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> may be either the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a 0 digit or the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for the MV of a literal produced by replacing each significant digit after the 20th with a 0 digit and then incrementing the literal at the 20th digit position. A digit is significant if it is not part of an <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt> and</p>\n          <ul>\n            <li>\n              it is not <code>0</code>; or\n            \n            </li>\n            <li>\n              there is a nonzero digit to its left and there is a nonzero digit, not in the <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>, to its right.\n            \n            </li>\n          </ul>\n        </emu-clause>\n      "}, "sec-lexical-grammar": {"num": "A.1", "title": "#sec-lexical-grammar Lexical Grammar", "html": "<emu-annex id=\"sec-lexical-grammar\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lexical-grammar\">#sec-lexical-grammar</span> Lexical Grammar</h1>\n    <emu-production name=\"SourceCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c64b38bd\"><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementDiv\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementDiv\">InputElementDiv</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExp\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExp\">InputElementRegExp</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"121314a7\"><emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementRegExpOrTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementRegExpOrTemplateTail\">InputElementRegExpOrTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"31b672e8\"><emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"InputElementTemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-InputElementTemplateTail\">InputElementTemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1424dc49\"><emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3b331ccd\"><emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"153d7a58\"><emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"83158895\"><emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"28035084\"><emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"62ae6eb9\"><emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"WhiteSpace\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-WhiteSpace\">WhiteSpace</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"819ea3fd\"><emu-gprose>&lt;TAB&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"156dc7da\"><emu-gprose>&lt;VT&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"77b516c0\"><emu-gprose>&lt;FF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6a85afed\"><emu-gprose>&lt;SP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"63dd44af\"><emu-gprose>&lt;NBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"b09e901a\"><emu-gprose>&lt;ZWNBSP&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"e7de22a4\"><emu-gprose>&lt;USP&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"6bb44f60\"><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineTerminatorSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"df188a5e\"><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"64077750\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gann>[lookahead &#8800; <emu-gprose>&lt;LF&gt;</emu-gprose>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"253de229\"><emu-gprose>&lt;CR&gt;</emu-gprose><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"Comment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Comment\">Comment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b221187a\"><emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"49272b29\"><emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineComment\">MultiLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1e164ceb\"><emu-t>/*</emu-t><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>*/</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"24a6effb\"><emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"PostAsteriskCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"25615007\"><emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-MultiLineCommentChars\">MultiLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6fcb6b58\"><emu-t>*</emu-t><emu-nt optional=\"\"><a href=\"#prod-PostAsteriskCommentChars\">PostAsteriskCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotAsteriskChar\">MultiLineNotAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9452de17\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"MultiLineNotForwardSlashOrAsteriskChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-MultiLineNotForwardSlashOrAsteriskChar\">MultiLineNotForwardSlashOrAsteriskChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1dd7e7ae\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>/</emu-t> or <emu-t>*</emu-t></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineComment\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineComment\">SingleLineComment</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"53edd61c\"><emu-t>//</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4521d447\"><emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleLineCommentChars\">SingleLineCommentChars</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleLineCommentChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleLineCommentChar\">SingleLineCommentChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CommonToken\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CommonToken\">CommonToken</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ee18f3d6\"><emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a548b407\"><emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3ec1ae06\"><emu-nt><a href=\"#prod-Template\">Template</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierName\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"434685ab\"><emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"700c1cee\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierStart\">IdentifierStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0862e30c\"><emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"07564b94\"><emu-t>_</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"IdentifierPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"364ac675\"><emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1262cc92\"><emu-t>$</emu-t></emu-rhs>\n    <emu-rhs a=\"6fbc8b19\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a321d28b\"><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"9543f0aa\"><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDStart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDStart\">UnicodeIDStart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e41f30c8\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Start&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeIDContinue\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeIDContinue\">UnicodeIDContinue</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"db14546f\"><emu-gprose>any Unicode code point with the Unicode property &#8220;ID_Continue&#8221;</emu-gprose></emu-rhs>\n</emu-production>\n    <emu-production name=\"ReservedWord\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ReservedWord\">ReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a3926e03\"><emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9d71bdc1\"><emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"54f84188\"><emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3508e1fd\"><emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Keyword\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Keyword\">Keyword</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>await</emu-t><emu-t>break</emu-t><emu-t>case</emu-t><emu-t>catch</emu-t><emu-t>class</emu-t><emu-t>const</emu-t><emu-t>continue</emu-t><emu-t>debugger</emu-t><emu-t>default</emu-t><emu-t>delete</emu-t><emu-t>do</emu-t><emu-t>else</emu-t><emu-t>export</emu-t><emu-t>extends</emu-t><emu-t>finally</emu-t><emu-t>for</emu-t><emu-t>function</emu-t><emu-t>if</emu-t><emu-t>import</emu-t><emu-t>in</emu-t><emu-t>instanceof</emu-t><emu-t>new</emu-t><emu-t>return</emu-t><emu-t>super</emu-t><emu-t>switch</emu-t><emu-t>this</emu-t><emu-t>throw</emu-t><emu-t>try</emu-t><emu-t>typeof</emu-t><emu-t>var</emu-t><emu-t>void</emu-t><emu-t>while</emu-t><emu-t>with</emu-t><emu-t>yield</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FutureReservedWord\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4fb2fe95\"><emu-t>enum</emu-t></emu-rhs>\n</emu-production>\n    <p>The following tokens are also considered to be <emu-nt><a href=\"#prod-FutureReservedWord\">FutureReservedWord</a></emu-nt>s when parsing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>:</p>\n    <p><emu-t>implements</emu-t> &#160;<emu-t>package</emu-t> &#160;<emu-t>protected</emu-t><br>\n      <emu-t>interface</emu-t> &#160;<emu-t>private</emu-t> &#160;<emu-t>public</emu-t>\n    </p>\n    <p>&#160;</p>\n    <emu-production name=\"Punctuator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-Punctuator\">Punctuator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>{</emu-t><emu-t>(</emu-t><emu-t>)</emu-t><emu-t>[</emu-t><emu-t>]</emu-t><emu-t>.</emu-t><emu-t>...</emu-t><emu-t>;</emu-t><emu-t>,</emu-t><emu-t>&lt;</emu-t><emu-t>&gt;</emu-t><emu-t>&lt;=</emu-t><emu-t>&gt;=</emu-t><emu-t>==</emu-t><emu-t>!=</emu-t><emu-t>===</emu-t><emu-t>!==</emu-t><emu-t>+</emu-t><emu-t>-</emu-t><emu-t>*</emu-t><emu-t>%</emu-t><emu-t>**</emu-t><emu-t>++</emu-t><emu-t>--</emu-t><emu-t>&lt;&lt;</emu-t><emu-t>&gt;&gt;</emu-t><emu-t>&gt;&gt;&gt;</emu-t><emu-t>&amp;</emu-t><emu-t>|</emu-t><emu-t>^</emu-t><emu-t>!</emu-t><emu-t>~</emu-t><emu-t>&amp;&amp;</emu-t><emu-t>||</emu-t><emu-t>?</emu-t><emu-t>:</emu-t><emu-t>=</emu-t><emu-t>+=</emu-t><emu-t>-=</emu-t><emu-t>*=</emu-t><emu-t>%=</emu-t><emu-t>**=</emu-t><emu-t>&lt;&lt;=</emu-t><emu-t>&gt;&gt;=</emu-t><emu-t>&gt;&gt;&gt;=</emu-t><emu-t>&amp;=</emu-t><emu-t>|=</emu-t><emu-t>^=</emu-t><emu-t>=&gt;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DivPunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DivPunctuator\">DivPunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3fd5f53\"><emu-t>/</emu-t></emu-rhs>\n    <emu-rhs a=\"2e077fe3\"><emu-t>/=</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RightBracePunctuator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RightBracePunctuator\">RightBracePunctuator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"255cb7fd\"><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NullLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NullLiteral\">NullLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"77b50868\"><emu-t>null</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"BooleanLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BooleanLiteral\">BooleanLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fa30b8c6\"><emu-t>true</emu-t></emu-rhs>\n    <emu-rhs a=\"23d2c69d\"><emu-t>false</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NumericLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"2727f17d\"><emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"e867b70b\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68def506\"><emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalBigIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalBigIntegerLiteral\">DecimalBigIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ddee4872\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"27fc8843\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BigIntLiteralSuffix\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BigIntLiteralSuffix\">BigIntLiteralSuffix</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"14b11fb6\"><emu-t>n</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fb5198a6\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cf3aa35\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"13dbaf21\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-ExponentPart\">ExponentPart</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n    <emu-rhs a=\"2353f0a3\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DecimalDigits\">DecimalDigits</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DecimalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonZeroDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentPart\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExponentIndicator\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>e</emu-t><emu-t>E</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"SignedInteger\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"BinaryDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"OctalDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexIntegerLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexDigit\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>0</emu-t><emu-t>1</emu-t><emu-t>2</emu-t><emu-t>3</emu-t><emu-t>4</emu-t><emu-t>5</emu-t><emu-t>6</emu-t><emu-t>7</emu-t><emu-t>8</emu-t><emu-t>9</emu-t><emu-t>a</emu-t><emu-t>b</emu-t><emu-t>c</emu-t><emu-t>d</emu-t><emu-t>e</emu-t><emu-t>f</emu-t><emu-t>A</emu-t><emu-t>B</emu-t><emu-t>C</emu-t><emu-t>D</emu-t><emu-t>E</emu-t><emu-t>F</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"StringLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"15d8b1f1\"><emu-t>\"</emu-t><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>\"</emu-t></emu-rhs>\n    <emu-rhs a=\"82ecb3d9\"><emu-t>'</emu-t><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>'</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8bdabc77\"><emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-DoubleStringCharacters\">DoubleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"17d28457\"><emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-SingleStringCharacters\">SingleStringCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"DoubleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-DoubleStringCharacter\">DoubleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a87f95ed\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>\"</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleStringCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-SingleStringCharacter\">SingleStringCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ea9e1d2\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\\</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n    <emu-rhs a=\"85df8467\"><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"be2ab9fa\"><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"LineContinuation\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c4893d63\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e9e86f07\"><emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"6964a19d\"><emu-t>0</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a8071b85\"><emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"44bd6f55\"><emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"CharacterEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CharacterEscapeSequence\">CharacterEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b7980a98\"><emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"SingleEscapeCharacter\" type=\"lexical\" oneof=\"\">\n    <emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-oneof>one of</emu-oneof><emu-rhs><emu-t>'</emu-t><emu-t>\"</emu-t><emu-t>\\</emu-t><emu-t>b</emu-t><emu-t>f</emu-t><emu-t>n</emu-t><emu-t>r</emu-t><emu-t>t</emu-t><emu-t>v</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NonEscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NonEscapeCharacter\">NonEscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1bac6127\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"EscapeCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-EscapeCharacter\">EscapeCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7444838f\"><emu-nt><a href=\"#prod-SingleEscapeCharacter\">SingleEscapeCharacter</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"150383a9\"><emu-t>x</emu-t></emu-rhs>\n    <emu-rhs a=\"8c2e6655\"><emu-t>u</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"HexEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-HexEscapeSequence\">HexEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d8ef973c\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"UnicodeEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-UnicodeEscapeSequence\">UnicodeEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8072ad8d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b98063ef\"><emu-t>u{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"Hex4Digits\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Hex4Digits\">Hex4Digits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0ba8de61\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionLiteral\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionLiteral\">RegularExpressionLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5778053b\"><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-t>/</emu-t><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBody\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBody\">RegularExpressionBody</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bba7969e\"><emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a9881cec\"><emu-nt><a href=\"#prod-RegularExpressionChars\">RegularExpressionChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFirstChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFirstChar\">RegularExpressionFirstChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"da1b0c0a\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionChar\">RegularExpressionChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0c3ff14\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>\\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"5cc6858e\"><emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionBackslashSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d7656bad\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionNonTerminator\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"2d5bdfa7\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClass\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClass\">RegularExpressionClass</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4c1bc40a\"><emu-t>[</emu-t><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-t>]</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChars\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"76bdcb05\"><emu-nt><a href=\"#prod-RegularExpressionClassChars\">RegularExpressionClassChars</a></emu-nt><emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionClassChar\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionClassChar\">RegularExpressionClassChar</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7fd10851\"><emu-nt><a href=\"#prod-RegularExpressionNonTerminator\">RegularExpressionNonTerminator</a></emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\\</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"9c9579a7\"><emu-nt><a href=\"#prod-RegularExpressionBackslashSequence\">RegularExpressionBackslashSequence</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"RegularExpressionFlags\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"fceefdcd\"><emu-nt><a href=\"#prod-RegularExpressionFlags\">RegularExpressionFlags</a></emu-nt><emu-nt><a href=\"#prod-IdentifierPart\">IdentifierPart</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Template\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-Template\">Template</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7bf3ad2b\"><emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"ab9a4b96\"><emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NoSubstitutionTemplate\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NoSubstitutionTemplate\">NoSubstitutionTemplate</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"056f5c6b\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateHead\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateHead\">TemplateHead</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bfb172fc\"><emu-t>`</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateSubstitutionTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateSubstitutionTail\">TemplateSubstitutionTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ccbc035d\"><emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"57fe6188\"><emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateMiddle\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateMiddle\">TemplateMiddle</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37635b4e\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>${</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateTail\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateTail\">TemplateTail</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"fcef5bc0\"><emu-t>}</emu-t><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>`</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacters\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f8c26ac5\"><emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-nt optional=\"\"><a href=\"#prod-TemplateCharacters\">TemplateCharacters</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"TemplateCharacter\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-TemplateCharacter\">TemplateCharacter</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"03c3b542\"><emu-t>$</emu-t><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ea7d8d26\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"68cad9cc\"><emu-t>\\</emu-t><emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"00992933\"><emu-nt><a href=\"#prod-LineContinuation\">LineContinuation</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"544825da\"><emu-nt><a href=\"#prod-LineTerminatorSequence\">LineTerminatorSequence</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"4c80ea41\"><emu-nt><a href=\"#prod-SourceCharacter\">SourceCharacter</a></emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\\</emu-t> or <emu-t>$</emu-t> or <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt></emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotEscapeSequence\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotEscapeSequence\">NotEscapeSequence</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c247e196\"><emu-t>0</emu-t><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"372f5e0d\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-gmod>but not <emu-t>0</emu-t></emu-gmod></emu-rhs>\n    <emu-rhs a=\"e6c4f6ee\"><emu-t>x</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"92cdf202\"><emu-t>x</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"a16001b3\"><emu-t>u</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"f7d3e8d4\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"4ea47d3d\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"45170c27\"><emu-t>u</emu-t><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"5427e268\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"0c957f40\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann></emu-rhs>\n    <emu-rhs a=\"ab5a798c\"><emu-t>u</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-gann>[lookahead &#8713; <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>]</emu-gann><emu-gann>[lookahead &#8800; <emu-t>}</emu-t>]</emu-gann></emu-rhs>\n</emu-production>\n    <emu-production name=\"NotCodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-NotCodePoint\">NotCodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5aeddbfc\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &gt; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n    <emu-production name=\"CodePoint\" type=\"lexical\">\n    <emu-nt><a href=\"#prod-CodePoint\">CodePoint</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"deeeb60d\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-gmod>but only if MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#8804; 0x10FFFF </emu-gmod></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-getvaluefrombuffer": {"num": "24.1.1.10", "title": "#sec-getvaluefrombuffer GetValueFromBuffer ( arrayBuffer, byteIndex, type, isTypedArray, order [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-getvaluefrombuffer\" aoid=\"GetValueFromBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getvaluefrombuffer\">#sec-getvaluefrombuffer</span> GetValueFromBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>isTypedArray</var>, <var>order</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation GetValueFromBuffer takes six parameters, an ArrayBuffer or SharedArrayBuffer <var>arrayBuffer</var>, an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>byteIndex</var>, a String <var>type</var>, a Boolean <var>isTypedArray</var>, a String <var>order</var>, and optionally a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>byteIndex</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value &#8805; 0.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>If <var>isTypedArray</var> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsNoTearConfiguration\"><a href=\"#sec-isnotearconfiguration\">IsNoTearConfiguration</a></emu-xref>(<var>type</var>, <var>order</var>) is <emu-val>true</emu-val>, let <var>noTear</var> be <emu-val>true</emu-val>; otherwise let <var>noTear</var> be <emu-val>false</emu-val>.</li><li>Let <var>rawValue</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of length <var>elementSize</var> of nondeterministically chosen byte values.</li><li>NOTE: In implementations, <var>rawValue</var> is the result of a non-atomic or atomic read instruction on the underlying hardware. The nondeterminism is a semantic prescription of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> to describe observable behaviour of hardware with weak consistency.</li><li>Let <var>readEvent</var> be <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">ReadSharedMemory</a></emu-xref> { [[Order]]: <var>order</var>, [[NoTear]]: <var>noTear</var>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var> }.</li><li>Append <var>readEvent</var> to <var>eventList</var>.</li><li>Append <emu-xref href=\"#sec-chosen-value-records\"><a href=\"#sec-chosen-value-records\">Chosen Value Record</a></emu-xref> { [[Event]]: <var>readEvent</var>, [[ChosenValue]]: <var>rawValue</var> } to <var>execution</var>.[[ChosenValues]].</li></ol></li><li>Else, let <var>rawValue</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of <var>elementSize</var> containing, in order, the <var>elementSize</var> sequence of bytes starting with <var>block</var>[<var>byteIndex</var>].</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Return <emu-xref aoid=\"RawBytesToNumeric\"><a href=\"#sec-rawbytestonumeric\">RawBytesToNumeric</a></emu-xref>(<var>type</var>, <var>rawValue</var>, <var>isLittleEndian</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-exp-operator-runtime-semantics-evaluation": {"num": "12.6.3", "title": "#sec-exp-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-exp-operator-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-exp-operator-runtime-semantics-evaluation\">#sec-exp-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"ExponentiationExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d1905fcc\"><emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-t>**</emu-t><emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>left</var> be the result of evaluating <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt>.</li><li>Let <var>leftValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>left</var>).</li><li>Let <var>right</var> be the result of evaluating <emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt>.</li><li>Let <var>rightValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>right</var>).</li><li>Let <var>base</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>leftValue</var>).</li><li>Let <var>exponent</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rightValue</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>base</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>exponent</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>base</var>)::exponentiate(<var>base</var>, <var>exponent</var>).\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-value-properties-of-the-math-object": {"num": "20.3.1", "title": "#sec-value-properties-of-the-math-object Value Properties of the Math Object", "html": "<emu-clause id=\"sec-value-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-value-properties-of-the-math-object\">#sec-value-properties-of-the-math-object</span> Value Properties of the Math Object</h1>\n\n      <div id=\"excluded-sec-math.e\"><h1><span class=\"secnum\">20.3.1.1</span>#sec-math.e Math.E</h1>...</div><div id=\"excluded-sec-math.ln10\"><h1><span class=\"secnum\">20.3.1.2</span>#sec-math.ln10 Math.LN10</h1>...</div><div id=\"excluded-sec-math.ln2\"><h1><span class=\"secnum\">20.3.1.3</span>#sec-math.ln2 Math.LN2</h1>...</div><div id=\"excluded-sec-math.log10e\"><h1><span class=\"secnum\">20.3.1.4</span>#sec-math.log10e Math.LOG10E</h1>...</div><div id=\"excluded-sec-math.log2e\"><h1><span class=\"secnum\">20.3.1.5</span>#sec-math.log2e Math.LOG2E</h1>...</div><div id=\"excluded-sec-math.pi\"><h1><span class=\"secnum\">20.3.1.6</span>#sec-math.pi Math.PI</h1>...</div><div id=\"excluded-sec-math.sqrt1_2\"><h1><span class=\"secnum\">20.3.1.7</span>#sec-math.sqrt1_2 Math.SQRT1_2</h1>...</div><div id=\"excluded-sec-math.sqrt2\"><h1><span class=\"secnum\">20.3.1.8</span>#sec-math.sqrt2 Math.SQRT2</h1>...</div><div id=\"excluded-sec-math-@@tostringtag\"><h1><span class=\"secnum\">20.3.1.9</span>#sec-math-@@tostringtag Math [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-atomics.notify": {"num": "24.4.12", "title": "#sec-atomics.notify Atomics.notify ( typedArray, index, count )", "html": "<emu-clause id=\"sec-atomics.notify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.notify\">#sec-atomics.notify</span> Atomics.notify ( <var>typedArray</var>, <var>index</var>, <var>count</var> )</h1>\n      <p><code>Atomics.notify</code> notifies some agents that are sleeping in the wait queue.  The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateSharedIntegerTypedArray\"><a href=\"#sec-validatesharedintegertypedarray\">ValidateSharedIntegerTypedArray</a></emu-xref>(<var>typedArray</var>, <emu-val>true</emu-val>).</li><li>Let <var>i</var> be ?&#160;<emu-xref aoid=\"ValidateAtomicAccess\"><a href=\"#sec-validateatomicaccess\">ValidateAtomicAccess</a></emu-xref>(<var>typedArray</var>, <var>index</var>).</li><li>If <var>count</var> is <emu-val>undefined</emu-val>, let <var>c</var> be <emu-val>+&#8734;</emu-val>.</li><li>Else,<ol><li>Let <var>intCount</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>count</var>).</li><li>Let <var>c</var> be <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>intCount</var>, 0).</li></ol></li><li>Let <var>block</var> be <var>buffer</var>.[[ArrayBufferData]].</li><li>Let <var>offset</var> be <var>typedArray</var>.[[ByteOffset]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>arrayTypeName</var>.</li><li>Let <var>indexedPosition</var> be (<var>i</var> &#215; <var>elementSize</var>) + <var>offset</var>.</li><li>Let <var>WL</var> be <emu-xref aoid=\"GetWaiterList\"><a href=\"#sec-getwaiterlist\">GetWaiterList</a></emu-xref>(<var>block</var>, <var>indexedPosition</var>).</li><li>Let <var>n</var> be 0.</li><li>Perform <emu-xref aoid=\"EnterCriticalSection\"><a href=\"#sec-entercriticalsection\">EnterCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Let <var>S</var> be <emu-xref aoid=\"RemoveWaiters\"><a href=\"#sec-removewaiters\">RemoveWaiters</a></emu-xref>(<var>WL</var>, <var>c</var>).</li><li>Repeat, while <var>S</var> is not an empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>,<ol><li>Let <var>W</var> be the first <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> in <var>S</var>.</li><li>Remove <var>W</var> from the front of <var>S</var>.</li><li>Perform <emu-xref aoid=\"NotifyWaiter\"><a href=\"#sec-notifywaiter\">NotifyWaiter</a></emu-xref>(<var>WL</var>, <var>W</var>).</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Perform <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>(<var>WL</var>).</li><li>Return <var>n</var>.\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-tostring": {"num": "7.1.17", "title": "#sec-tostring ToString ( argument )", "html": "<emu-clause id=\"sec-tostring\" aoid=\"ToString\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-tostring\">#sec-tostring</span> ToString ( <var>argument</var> )</h1>\n      <p>The abstract operation ToString converts <var>argument</var> to a value of type String according to  <emu-xref href=\"#table-12\"><a href=\"#table-12\" class=\"excluded-xref\" excluded-id=\"table-12\">#table-12</a></emu-xref>:</p>\n      <emu-table id=\"table-12\" caption=\"ToString Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-12\">#table-12</span>: <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Return <code>\"undefined\"</code>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Return <code>\"null\"</code>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              <p>If <var>argument</var> is <emu-val>true</emu-val>, return <code>\"true\"</code>.</p>\n              <p>If <var>argument</var> is <emu-val>false</emu-val>, return <code>\"false\"</code>.</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return ! <emu-xref aoid=\"Number::toString\"><a href=\"#sec-numeric-types-number-tostring\">Number::toString</a></emu-xref>(<var>argument</var>).\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            \n            </td>\n            <td>\n              Return ! <emu-xref aoid=\"BigInt::toString\"><a href=\"#sec-numeric-types-bigint-tostring\">BigInt::toString</a></emu-xref>(<var>argument</var>).\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              <p>Apply the following steps:</p>\n              <emu-alg><ol><li>Let <var>primValue</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>argument</var>, hint String).</li><li>Return ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>primValue</var>).\n              </li></ol></emu-alg>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-typedarray-objects": {"num": "22.2", "title": "#sec-typedarray-objects TypedArray Objects", "html": "<emu-clause id=\"sec-typedarray-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</span> TypedArray Objects</h1>\n    <p><var>TypedArray</var> objects present an array-like view of an underlying binary data buffer (<emu-xref href=\"#sec-arraybuffer-objects\"><a href=\"#sec-arraybuffer-objects\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-objects\">#sec-arraybuffer-objects</a></emu-xref>). Each element of a <var>TypedArray</var> instance has the same underlying binary scalar data type. There is a distinct <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, listed in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>, for each of the supported element types. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> has a corresponding distinct prototype object.</p>\n    <emu-table id=\"table-49\" caption=\"The TypedArray Constructors\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-49\">#table-49</span>: The TypedArray Constructors</figcaption>\n      <table>\n        <tbody>\n        <tr>\n          <th>\n            <emu-xref href=\"#constructor\"><a href=\"#constructor\">Constructor</a></emu-xref> Name and Intrinsic\n          \n          </th>\n          <th>\n            Element Type\n          \n          </th>\n          <th>\n            Element Size\n          \n          </th>\n          <th>\n            Conversion Operation\n          \n          </th>\n          <th>\n            Description\n          \n          </th>\n        </tr>\n        <tr>\n          <td>\n            Int8Array\n            \n            <br>\n            %Int8Array%\n          \n          </td>\n          <td>\n            Int8\n          \n          </td>\n          <td>\n            1\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt8\"><a href=\"#sec-toint8\">ToInt8</a></emu-xref>\n          \n          </td>\n          <td>\n            8-bit 2's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8Array\n            \n            <br>\n            %Uint8Array%\n          \n          </td>\n          <td>\n            Uint8\n          \n          </td>\n          <td>\n            1\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8\"><a href=\"#sec-touint8\">ToUint8</a></emu-xref>\n          \n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint8ClampedArray\n            \n            <br>\n            %Uint8ClampedArray%\n          \n          </td>\n          <td>\n            Uint8C\n          \n          </td>\n          <td>\n            1\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint8Clamp\"><a href=\"#sec-touint8clamp\">ToUint8Clamp</a></emu-xref>\n          \n          </td>\n          <td>\n            8-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> (clamped conversion)\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int16Array\n            \n            <br>\n            %Int16Array%\n          \n          </td>\n          <td>\n            Int16\n          \n          </td>\n          <td>\n            2\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt16\"><a href=\"#sec-toint16\">ToInt16</a></emu-xref>\n          \n          </td>\n          <td>\n            16-bit 2's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint16Array\n            \n            <br>\n            %Uint16Array%\n          \n          </td>\n          <td>\n            Uint16\n          \n          </td>\n          <td>\n            2\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint16\"><a href=\"#sec-touint16\">ToUint16</a></emu-xref>\n          \n          </td>\n          <td>\n            16-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Int32Array\n            \n            <br>\n            %Int32Array%\n          \n          </td>\n          <td>\n            Int32\n          \n          </td>\n          <td>\n            4\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToInt32\"><a href=\"#sec-toint32\">ToInt32</a></emu-xref>\n          \n          </td>\n          <td>\n            32-bit 2's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Uint32Array\n            \n            <br>\n            %Uint32Array%\n          \n          </td>\n          <td>\n            Uint32\n          \n          </td>\n          <td>\n            4\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>\n          \n          </td>\n          <td>\n            32-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigInt64Array\n            \n            <br>\n            %BigInt64Array%\n          \n          </td>\n          <td>\n            BigInt64\n          \n          </td>\n          <td>\n            8\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigInt64\"><a href=\"#sec-to-big-int64\">ToBigInt64</a></emu-xref>\n          \n          </td>\n          <td>\n            64-bit two's complement signed <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            BigUint64Array\n            \n            <br>\n            %BigUint64Array%\n          \n          </td>\n          <td>\n            BigUint64\n          \n          </td>\n          <td>\n            8\n          \n          </td>\n          <td>\n            <emu-xref aoid=\"ToBigUint64\"><a href=\"#sec-to-big-uint64\">ToBigUint64</a></emu-xref>\n          \n          </td>\n          <td>\n            64-bit unsigned <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float32Array\n            \n            <br>\n            %Float32Array%\n          \n          </td>\n          <td>\n            Float32\n          \n          </td>\n          <td>\n            4\n          \n          </td>\n          <td>\n          </td>\n          <td>\n            32-bit IEEE floating point\n          \n          </td>\n        </tr>\n        <tr>\n          <td>\n            Float64Array\n            \n            <br>\n            %Float64Array%\n          \n          </td>\n          <td>\n            Float64\n          \n          </td>\n          <td>\n            8\n          \n          </td>\n          <td>\n          </td>\n          <td>\n            64-bit IEEE floating point\n          \n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </figure></emu-table>\n    <p>In the definitions below, references to <var>TypedArray</var> should be replaced with the appropriate <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name from the above table. The phrase &#8220;the element size in bytes&#8221; refers to the value in the Element Size column of the table in the row corresponding to the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. The phrase &#8220;element Type&#8221; refers to the value in the Element Type column for that row.</p>\n\n    <div id=\"excluded-sec-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.1</span>#sec-%typedarray%-intrinsic-object The %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarray%-intrinsic-object\"><h1><span class=\"secnum\">22.2.2</span>#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object</h1>...</div><div id=\"excluded-sec-properties-of-the-%typedarrayprototype%-object\"><h1><span class=\"secnum\">22.2.3</span>#sec-properties-of-the-%typedarrayprototype%-object Properties of the %TypedArray.prototype% Object</h1>...</div><div id=\"excluded-sec-typedarray-constructors\"><h1><span class=\"secnum\">22.2.4</span>#sec-typedarray-constructors The TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-typedarray-constructors\"><h1><span class=\"secnum\">22.2.5</span>#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-prototype-objects\"><h1><span class=\"secnum\">22.2.6</span>#sec-properties-of-typedarray-prototype-objects Properties of the TypedArray Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-typedarray-instances\"><h1><span class=\"secnum\">22.2.7</span>#sec-properties-of-typedarray-instances Properties of TypedArray Instances</h1>...</div></emu-clause>\n"}, "sec-typedarray-constructors": {"num": "22.2.4", "title": "#sec-typedarray-constructors The TypedArray Constructors", "html": "<emu-clause id=\"sec-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray-constructors\">#sec-typedarray-constructors</span> The <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is an intrinsic object that has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>TypedArray</var>, in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments. The actual behaviour of a call of <var>TypedArray</var> depends upon the number and kind of arguments that are passed to it.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <var>TypedArray</var> behaviour must include a <code>super</code> call to the <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype</code> built-in methods.</li>\n        <li>has a <code>\"length\"</code> property whose value is 3.</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray\"><h1><span class=\"secnum\">22.2.4.1</span>#sec-typedarray TypedArray ( )</h1>...</div><div id=\"excluded-sec-typedarray-length\"><h1><span class=\"secnum\">22.2.4.2</span>#sec-typedarray-length TypedArray ( length )</h1>...</div><div id=\"excluded-sec-typedarray-typedarray\"><h1><span class=\"secnum\">22.2.4.3</span>#sec-typedarray-typedarray TypedArray ( typedArray )</h1>...</div><div id=\"excluded-sec-typedarray-object\"><h1><span class=\"secnum\">22.2.4.4</span>#sec-typedarray-object TypedArray ( object )</h1>...</div><div id=\"excluded-sec-typedarray-buffer-byteoffset-length\"><h1><span class=\"secnum\">22.2.4.5</span>#sec-typedarray-buffer-byteoffset-length TypedArray ( buffer [ , byteOffset [ , length ] ] )</h1>...</div><emu-clause id=\"typedarray-create\" aoid=\"TypedArrayCreate\">\n        <h1><span class=\"secnum\">22.2.4.6</span> TypedArrayCreate ( <var>constructor</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArrayCreate with arguments <var>constructor</var> and <var>argumentList</var> is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function. It performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>newTypedArray</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>newTypedArray</var>).</li><li>If <var>argumentList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of a single Number, then<ol><li>If <var>newTypedArray</var>.[[ArrayLength]] &lt; <var>argumentList</var>[0], throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <var>newTypedArray</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      <emu-clause id=\"typedarray-species-create\" aoid=\"TypedArraySpeciesCreate\">\n        <h1><span class=\"secnum\">22.2.4.7</span> TypedArraySpeciesCreate ( <var>exemplar</var>, <var>argumentList</var> )</h1>\n        <p>The abstract operation TypedArraySpeciesCreate with arguments <var>exemplar</var> and <var>argumentList</var> is used to specify the creation of a new TypedArray object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>exemplar</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>exemplar</var> is an Object that has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>Let <var>defaultConstructor</var> be the intrinsic object listed in column one of <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>exemplar</var>.[[TypedArrayName]].</li><li>Let <var>constructor</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>exemplar</var>, <var>defaultConstructor</var>).</li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"TypedArrayCreate\"><a href=\"#typedarray-create\">TypedArrayCreate</a></emu-xref>(<var>constructor</var>, <var>argumentList</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>result</var> has [[TypedArrayName]] and [[ContentType]] internal slots.</li><li>If <var>result</var>.[[ContentType]] is not equal to <var>exemplar</var>.[[ContentType]], throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>result</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype.set-array-offset": {"num": "22.2.3.23.1", "title": "#sec-%typedarray%.prototype.set-array-offset %TypedArray%.prototype.set ( array [ , offset ] )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.set-array-offset\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.set-array-offset\">#sec-%typedarray%.prototype.set-array-offset</span> %TypedArray%.prototype.set ( <var>array</var> [ , <var>offset</var> ] )</h1>\n          <p>Sets multiple values in this <var>TypedArray</var>, reading the values from the object <var>array</var>. The optional <var>offset</var> value indicates the first element index in this <var>TypedArray</var> where values are written. If omitted, it is assumed to be 0.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>array</var> is any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref> other than an Object with a [[TypedArrayName]] internal slot. If it is such an Object, the definition in <emu-xref href=\"#sec-%typedarray%.prototype.set-typedarray-offset\"><a href=\"#sec-%typedarray%.prototype.set-typedarray-offset\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%.prototype.set-typedarray-offset\">#sec-%typedarray%.prototype.set-typedarray-offset</a></emu-xref> applies.</li><li>Let <var>target</var> be the <emu-val>this</emu-val> value.</li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>target</var>, [[TypedArrayName]]).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>target</var> has a [[ViewedArrayBuffer]] internal slot.</li><li>Let <var>targetOffset</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>offset</var>).</li><li>If <var>targetOffset</var> &lt; 0, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetBuffer</var> be <var>target</var>.[[ViewedArrayBuffer]].</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>targetLength</var> be <var>target</var>.[[ArrayLength]].</li><li>Let <var>targetName</var> be the String value of <var>target</var>.[[TypedArrayName]].</li><li>Let <var>targetElementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetType</var> be the String value of the Element Type value in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>targetName</var>.</li><li>Let <var>targetByteOffset</var> be <var>target</var>.[[ByteOffset]].</li><li>Let <var>src</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<var>array</var>).</li><li>Let <var>srcLength</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>src</var>).</li><li>If <var>srcLength</var> + <var>targetOffset</var> &gt; <var>targetLength</var>, throw a <emu-val>RangeError</emu-val> exception.</li><li>Let <var>targetByteIndex</var> be <var>targetOffset</var> &#215; <var>targetElementSize</var> + <var>targetByteOffset</var>.</li><li>Let <var>k</var> be 0.</li><li>Let <var>limit</var> be <var>targetByteIndex</var> + <var>targetElementSize</var> &#215; <var>srcLength</var>.</li><li>Repeat, while <var>targetByteIndex</var> &lt; <var>limit</var><ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>src</var>, <var>Pk</var>).</li><li>If <var>target</var>.[[ContentType]] is <code>\"BigInt\"</code>, let <var>value</var> be ?&#160;<emu-xref aoid=\"ToBigInt\"><a href=\"#sec-to-bigint\">ToBigInt</a></emu-xref>(<var>value</var>).</li><li>Otherwise, let <var>value</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>value</var>).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>targetBuffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Perform <emu-xref aoid=\"SetValueInBuffer\"><a href=\"#sec-setvalueinbuffer\">SetValueInBuffer</a></emu-xref>(<var>targetBuffer</var>, <var>targetByteIndex</var>, <var>targetType</var>, <var>value</var>, <emu-val>true</emu-val>, <code>\"Unordered\"</code>).</li><li>Set <var>k</var> to <var>k</var> + 1.</li><li>Set <var>targetByteIndex</var> to <var>targetByteIndex</var> + <var>targetElementSize</var>.</li></ol></li><li>Return <emu-val>undefined</emu-val>.\n          </li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-unsigned-right-shift-operator-runtime-semantics-evaluation": {"num": "12.9.5.1", "title": "#sec-unsigned-right-shift-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-unsigned-right-shift-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-unsigned-right-shift-operator-runtime-semantics-evaluation\">#sec-unsigned-right-shift-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"ShiftExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37f16eac\"><emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt><emu-t>&gt;&gt;&gt;</emu-t><emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>lref</var> be the result of evaluating <emu-nt><a href=\"#prod-ShiftExpression\">ShiftExpression</a></emu-nt>.</li><li>Let <var>lval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>lref</var>).</li><li>Let <var>rref</var> be the result of evaluating <emu-nt><a href=\"#prod-AdditiveExpression\">AdditiveExpression</a></emu-nt>.</li><li>Let <var>rval</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>rref</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>lval</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rval</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>Return <var>T</var>::unsignedRightShift(<var>lnum</var>, <var>rnum</var>).\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-multiplicative-operators-runtime-semantics-evaluation": {"num": "12.7.3", "title": "#sec-multiplicative-operators-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-multiplicative-operators-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-multiplicative-operators-runtime-semantics-evaluation\">#sec-multiplicative-operators-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"MultiplicativeExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fb9fe2a0\"><emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt><emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt><emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>left</var> be the result of evaluating <emu-nt><a href=\"#prod-MultiplicativeExpression\">MultiplicativeExpression</a></emu-nt>.</li><li>Let <var>leftValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>left</var>).</li><li>Let <var>right</var> be the result of evaluating <emu-nt><a href=\"#prod-ExponentiationExpression\">ExponentiationExpression</a></emu-nt>.</li><li>Let <var>rightValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>right</var>).</li><li>Let <var>lnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>leftValue</var>).</li><li>Let <var>rnum</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>rightValue</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>) is different from <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rnum</var>), throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>T</var> be <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>lnum</var>).</li><li>If <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> is <code>*</code>, return <var>T</var>::multiply(<var>lnum</var>, <var>rnum</var>).</li><li>If <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> is <code>/</code>, return <var>T</var>::divide(<var>lnum</var>, <var>rnum</var>).</li><li>Otherwise, <emu-nt><a href=\"#prod-MultiplicativeOperator\">MultiplicativeOperator</a></emu-nt> is <code>%</code>; return <var>T</var>::remainder(<var>lnum</var>, <var>rnum</var>).\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-math-object": {"num": "20.3", "title": "#sec-math-object The Math Object", "html": "<emu-clause id=\"sec-math-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-object\">#sec-math-object</span> The Math Object</h1>\n    <p>The Math object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Math%</dfn>.</li>\n      <li>is the initial value of the <code>Math</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In this specification, the phrase &#8220;the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>&#8221; has a technical meaning defined in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-value-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.1</span>#sec-value-properties-of-the-math-object Value Properties of the Math Object</h1>...</div><div id=\"excluded-sec-function-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.2</span>#sec-function-properties-of-the-math-object Function Properties of the Math Object</h1>...</div></emu-clause>\n\n  "}, "sec-abstract-relational-comparison": {"num": "7.2.13", "title": "#sec-abstract-relational-comparison Abstract Relational Comparison", "html": "<emu-clause id=\"sec-abstract-relational-comparison\" aoid=\"Abstract Relational Comparison\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-relational-comparison\">#sec-abstract-relational-comparison</span> Abstract Relational Comparison</h1>\n      <p>The comparison <var>x</var> &lt; <var>y</var>, where <var>x</var> and <var>y</var> are values, produces <emu-val>true</emu-val>, <emu-val>false</emu-val>, or <emu-val>undefined</emu-val> (which indicates that at least one operand is <emu-val>NaN</emu-val>). In addition to <var>x</var> and <var>y</var> the algorithm takes a Boolean flag named <var>LeftFirst</var> as a parameter. The flag is used to control the order in which operations with potentially visible side-effects are performed upon <var>x</var> and <var>y</var>. It is necessary because ECMAScript specifies left to right evaluation of expressions. The default value of <var>LeftFirst</var> is <emu-val>true</emu-val> and indicates that the <var>x</var> parameter corresponds to an expression that occurs to the left of the <var>y</var> parameter's corresponding expression. If <var>LeftFirst</var> is <emu-val>false</emu-val>, the reverse is the case and operations must be performed upon <var>y</var> before <var>x</var>. Such a comparison is performed as follows:</p>\n      <emu-alg><ol><li>If the <var>LeftFirst</var> flag is <emu-val>true</emu-val>, then<ol><li>Let <var>px</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>x</var>, hint Number).</li><li>Let <var>py</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>y</var>, hint Number).</li></ol></li><li>Else,<ol><li>NOTE: The order of evaluation needs to be reversed to preserve left to right evaluation.</li><li>Let <var>py</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>y</var>, hint Number).</li><li>Let <var>px</var> be ?&#160;<emu-xref aoid=\"ToPrimitive\"><a href=\"#sec-toprimitive\">ToPrimitive</a></emu-xref>(<var>x</var>, hint Number).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>px</var>) is String and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>py</var>) is String, then<ol><li>If <emu-xref aoid=\"IsStringPrefix\"><a href=\"#sec-isstringprefix\">IsStringPrefix</a></emu-xref>(<var>py</var>, <var>px</var>) is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>If <emu-xref aoid=\"IsStringPrefix\"><a href=\"#sec-isstringprefix\">IsStringPrefix</a></emu-xref>(<var>px</var>, <var>py</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>k</var> be the smallest nonnegative <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> such that the code unit at index <var>k</var> within <var>px</var> is different from the code unit at index <var>k</var> within <var>py</var>. (There must be such a <var>k</var>, for neither String is a prefix of the other.)</li><li>Let <var>m</var> be the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> that is the numeric value of the code unit at index <var>k</var> within <var>px</var>.</li><li>Let <var>n</var> be the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> that is the numeric value of the code unit at index <var>k</var> within <var>py</var>.</li><li>If <var>m</var> &lt; <var>n</var>, return <emu-val>true</emu-val>. Otherwise, return <emu-val>false</emu-val>.</li></ol></li><li>Else,<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>px</var>) is BigInt and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>py</var>) is String, then<ol><li>Let <var>ny</var> be !&#160;<emu-xref aoid=\"StringToBigInt\"><a href=\"#sec-string-to-bigint\">StringToBigInt</a></emu-xref>(<var>py</var>).</li><li>If <var>ny</var> is <emu-val>NaN</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Return BigInt::lessThan(<var>px</var>, <var>ny</var>).</li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>px</var>) is String and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>py</var>) is BigInt, then<ol><li>Let <var>nx</var> be !&#160;<emu-xref aoid=\"StringToBigInt\"><a href=\"#sec-string-to-bigint\">StringToBigInt</a></emu-xref>(<var>px</var>).</li><li>If <var>nx</var> is <emu-val>NaN</emu-val>, return <emu-val>undefined</emu-val>.</li><li>Return BigInt::lessThan(<var>nx</var>, <var>py</var>).</li></ol></li><li>Let <var>nx</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>px</var>). NOTE: Because <var>px</var> and <var>py</var> are primitive values evaluation order is not important.</li><li>Let <var>ny</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(<var>py</var>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nx</var>) is the same as <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>ny</var>), return <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nx</var>)::lessThan(<var>nx</var>, <var>ny</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nx</var>) is BigInt and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>ny</var>) is Number, or <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>nx</var>) is Number and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>ny</var>) is BigInt.</li><li>If <var>nx</var> or <var>ny</var> is <emu-val>NaN</emu-val>, return <emu-val>undefined</emu-val>.</li><li>If <var>nx</var> is <emu-val>-&#8734;</emu-val> or <var>ny</var> is <emu-val>+&#8734;</emu-val>, return <emu-val>true</emu-val>.</li><li>If <var>nx</var> is <emu-val>+&#8734;</emu-val> or <var>ny</var> is <emu-val>-&#8734;</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of <var>nx</var> is less than the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of <var>ny</var>, return <emu-val>true</emu-val>; otherwise return <emu-val>false</emu-val>.\n      </li></ol></li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>Step 3 differs from step 7 in the algorithm for the addition operator <code>+</code> (<emu-xref href=\"#sec-addition-operator-plus\"><a href=\"#sec-addition-operator-plus\" class=\"excluded-xref\" excluded-id=\"sec-addition-operator-plus\">#sec-addition-operator-plus</a></emu-xref>) by using the logical-and operation instead of the logical-or operation.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>The comparison of Strings uses a simple lexicographic ordering on sequences of code unit values. There is no attempt to use the more complex, semantically oriented definitions of character or string equality and collating order defined in the Unicode specification. Therefore String values that are canonically equal according to the Unicode standard could test as unequal. In effect this algorithm assumes that both Strings are already in normalized form. Also, note that for strings containing supplementary characters, lexicographic ordering on sequences of UTF-16 code unit values differs from that on sequences of code point values.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-%typedarray%.prototype.sort": {"num": "22.2.3.26", "title": "#sec-%typedarray%.prototype.sort %TypedArray%.prototype.sort ( comparefn )", "html": "<emu-clause id=\"sec-%typedarray%.prototype.sort\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%typedarray%.prototype.sort\">#sec-%typedarray%.prototype.sort</span> %TypedArray%.prototype.sort ( <var>comparefn</var> )</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code> is a distinct function that, except as described below, implements the same requirements as those of <code>Array.prototype.sort</code> as defined in  <emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>. The implementation of the <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code> specification may be optimized with the knowledge that the <emu-val>this</emu-val> value is an object that has a fixed length and whose  <emu-xref href=\"#integer-index\"><a href=\"#integer-index\">integer-indexed</a></emu-xref> properties are not sparse. The only internal methods of the <emu-val>this</emu-val> object that the algorithm may call are [[Get]] and [[Set]].</p>\n        <p>This function is not generic. The <emu-val>this</emu-val> value must be an object with a [[TypedArrayName]] internal slot.</p>\n        <p>Upon entry, the following steps are performed to initialize evaluation of the <code>sort</code> function. These steps are used instead of the entry steps in  <emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>:</p>\n        <emu-alg><ol><li>If <var>comparefn</var> is not <emu-val>undefined</emu-val> and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>comparefn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>obj</var> be the <emu-val>this</emu-val> value.</li><li>Let <var>buffer</var> be ?&#160;<emu-xref aoid=\"ValidateTypedArray\"><a href=\"#sec-validatetypedarray\">ValidateTypedArray</a></emu-xref>(<var>obj</var>).</li><li>Let <var>len</var> be <var>obj</var>.[[ArrayLength]].\n        </li></ol></emu-alg>\n        <p>The implementation-defined sort order condition for exotic objects is not applied by <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code>.</p>\n        <p>The following version of <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> is used by <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype.sort</code>. It performs a numeric comparison rather than the string comparison used in  <emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>. <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> has access to the <var>comparefn</var> and <var>buffer</var> values of the current invocation of the <code>sort</code> method.</p>\n        <p>When the TypedArray <emu-xref aoid=\"SortCompare\"><a href=\"#sec-sortcompare\">SortCompare</a></emu-xref> abstract operation is called with two arguments <var>x</var> and <var>y</var>, the following steps are taken:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: Both <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>x</var>) and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>y</var>) are Number or both are BigInt.</li><li>If <var>comparefn</var> is not <emu-val>undefined</emu-val>, then<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>comparefn</var>, <emu-val>undefined</emu-val>, &#171; <var>x</var>, <var>y</var> &#187;)).</li><li>If <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>buffer</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>v</var> is <emu-val>NaN</emu-val>, return <emu-val>+0</emu-val>.</li><li>Return <var>v</var>.</li></ol></li><li>If <var>x</var> and <var>y</var> are both <emu-val>NaN</emu-val>, return <emu-val>+0</emu-val>.</li><li>If <var>x</var> is <emu-val>NaN</emu-val>, return 1.</li><li>If <var>y</var> is <emu-val>NaN</emu-val>, return -1.</li><li>If <var>x</var> &lt; <var>y</var>, return -1.</li><li>If <var>x</var> &gt; <var>y</var>, return 1.</li><li>If <var>x</var> is <emu-val>-0</emu-val> and <var>y</var> is <emu-val>+0</emu-val>, return -1.</li><li>If <var>x</var> is <emu-val>+0</emu-val> and <var>y</var> is <emu-val>-0</emu-val>, return 1.</li><li>Return <emu-val>+0</emu-val>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Because <emu-val>NaN</emu-val> always compares greater than any other value, <emu-val>NaN</emu-val> property values always sort to the end of the result when <var>comparefn</var> is not provided.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-setvalueinbuffer": {"num": "24.1.1.12", "title": "#sec-setvalueinbuffer SetValueInBuffer ( arrayBuffer, byteIndex, type, value, isTypedArray, order [ , isLittleEndian ] )", "html": "<emu-clause id=\"sec-setvalueinbuffer\" aoid=\"SetValueInBuffer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setvalueinbuffer\">#sec-setvalueinbuffer</span> SetValueInBuffer ( <var>arrayBuffer</var>, <var>byteIndex</var>, <var>type</var>, <var>value</var>, <var>isTypedArray</var>, <var>order</var> [ , <var>isLittleEndian</var> ] )</h1>\n        <p>The abstract operation SetValueInBuffer takes seven parameters, an ArrayBuffer or SharedArrayBuffer <var>arrayBuffer</var>, an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> <var>byteIndex</var>, a String <var>type</var>, a Number <var>value</var>, a Boolean <var>isTypedArray</var>, a String <var>order</var>, and optionally a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsDetachedBuffer\"><a href=\"#sec-isdetachedbuffer\">IsDetachedBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>false</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: There are sufficient bytes in <var>arrayBuffer</var> starting at <var>byteIndex</var> to represent a value of <var>type</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>byteIndex</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> value &#8805; 0.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is BigInt if !&#160;<emu-xref aoid=\"IsBigIntElementType\"><a href=\"#sec-isbigintelementtype\">IsBigIntElementType</a></emu-xref>(<var>type</var>) is <emu-val>true</emu-val>; otherwise, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Number.</li><li>Let <var>block</var> be <var>arrayBuffer</var>.[[ArrayBufferData]].</li><li>Let <var>elementSize</var> be the Element Size value specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>If <var>isLittleEndian</var> is not present, set <var>isLittleEndian</var> to the value of the [[LittleEndian]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>rawBytes</var> be <emu-xref aoid=\"NumericToRawBytes\"><a href=\"#sec-numerictorawbytes\">NumericToRawBytes</a></emu-xref>(<var>type</var>, <var>value</var>, <var>isLittleEndian</var>).</li><li>If <emu-xref aoid=\"IsSharedArrayBuffer\"><a href=\"#sec-issharedarraybuffer\">IsSharedArrayBuffer</a></emu-xref>(<var>arrayBuffer</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventList</var> be the [[EventList]] field of the element in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>If <var>isTypedArray</var> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsNoTearConfiguration\"><a href=\"#sec-isnotearconfiguration\">IsNoTearConfiguration</a></emu-xref>(<var>type</var>, <var>order</var>) is <emu-val>true</emu-val>, let <var>noTear</var> be <emu-val>true</emu-val>; otherwise let <var>noTear</var> be <emu-val>false</emu-val>.</li><li>Append <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">WriteSharedMemory</a></emu-xref> { [[Order]]: <var>order</var>, [[NoTear]]: <var>noTear</var>, [[Block]]: <var>block</var>, [[ByteIndex]]: <var>byteIndex</var>, [[ElementSize]]: <var>elementSize</var>, [[Payload]]: <var>rawBytes</var> } to <var>eventList</var>.</li></ol></li><li>Else, store the individual bytes of <var>rawBytes</var> into <var>block</var>, in order, starting at <var>block</var>[<var>byteIndex</var>].</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-testing-and-comparison-operations": {"num": "7.2", "title": "#sec-testing-and-comparison-operations Testing and Comparison Operations", "html": "<emu-clause id=\"sec-testing-and-comparison-operations\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-testing-and-comparison-operations\">#sec-testing-and-comparison-operations</span> Testing and Comparison Operations</h1>\n\n    <div id=\"excluded-sec-requireobjectcoercible\"><h1><span class=\"secnum\">7.2.1</span>#sec-requireobjectcoercible RequireObjectCoercible ( argument )</h1>...</div><div id=\"excluded-sec-isarray\"><h1><span class=\"secnum\">7.2.2</span>#sec-isarray IsArray ( argument )</h1>...</div><div id=\"excluded-sec-iscallable\"><h1><span class=\"secnum\">7.2.3</span>#sec-iscallable IsCallable ( argument )</h1>...</div><div id=\"excluded-sec-isconstructor\"><h1><span class=\"secnum\">7.2.4</span>#sec-isconstructor IsConstructor ( argument )</h1>...</div><div id=\"excluded-sec-isextensible-o\"><h1><span class=\"secnum\">7.2.5</span>#sec-isextensible-o IsExtensible ( O )</h1>...</div><div id=\"excluded-sec-isinteger\"><h1><span class=\"secnum\">7.2.6</span>#sec-isinteger IsInteger ( argument )</h1>...</div><div id=\"excluded-sec-ispropertykey\"><h1><span class=\"secnum\">7.2.7</span>#sec-ispropertykey IsPropertyKey ( argument )</h1>...</div><div id=\"excluded-sec-isregexp\"><h1><span class=\"secnum\">7.2.8</span>#sec-isregexp IsRegExp ( argument )</h1>...</div><div id=\"excluded-sec-isstringprefix\"><h1><span class=\"secnum\">7.2.9</span>#sec-isstringprefix IsStringPrefix ( p, q )</h1>...</div><div id=\"excluded-sec-samevalue\"><h1><span class=\"secnum\">7.2.10</span>#sec-samevalue SameValue ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluezero\"><h1><span class=\"secnum\">7.2.11</span>#sec-samevaluezero SameValueZero ( x, y )</h1>...</div><div id=\"excluded-sec-samevaluenonnumeric\"><h1><span class=\"secnum\">7.2.12</span>#sec-samevaluenonnumeric SameValueNonNumeric ( x, y )</h1>...</div><div id=\"excluded-sec-abstract-relational-comparison\"><h1><span class=\"secnum\">7.2.13</span>#sec-abstract-relational-comparison Abstract Relational Comparison</h1>...</div><div id=\"excluded-sec-abstract-equality-comparison\"><h1><span class=\"secnum\">7.2.14</span>#sec-abstract-equality-comparison Abstract Equality Comparison</h1>...</div><div id=\"excluded-sec-strict-equality-comparison\"><h1><span class=\"secnum\">7.2.15</span>#sec-strict-equality-comparison Strict Equality Comparison</h1>...</div></emu-clause>\n\n  "}, "sec-toboolean": {"num": "7.1.2", "title": "#sec-toboolean ToBoolean ( argument )", "html": "<emu-clause id=\"sec-toboolean\" aoid=\"ToBoolean\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-toboolean\">#sec-toboolean</span> ToBoolean ( <var>argument</var> )</h1>\n      <p>The abstract operation ToBoolean converts <var>argument</var> to a value of type Boolean according to  <emu-xref href=\"#table-10\"><a href=\"#table-10\" class=\"excluded-xref\" excluded-id=\"table-10\">#table-10</a></emu-xref>:</p>\n      <emu-table id=\"table-10\" caption=\"ToBoolean Conversions\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-10\">#table-10</span>: <emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref> Conversions</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Return <emu-val>false</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>+0</emu-val>, <emu-val>-0</emu-val>, or <emu-val>NaN</emu-val>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              If <var>argument</var> is the empty String (its length is zero), return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            \n            </td>\n            <td>\n              If <var>argument</var> is <emu-val>0n</emu-val>, return <emu-val>false</emu-val>; otherwise return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              Return <emu-val>true</emu-val>.\n            \n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-requireobjectcoercible": {"num": "7.2.1", "title": "#sec-requireobjectcoercible RequireObjectCoercible ( argument )", "html": "<emu-clause id=\"sec-requireobjectcoercible\" aoid=\"RequireObjectCoercible\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-requireobjectcoercible\">#sec-requireobjectcoercible</span> RequireObjectCoercible ( <var>argument</var> )</h1>\n      <p>The abstract operation RequireObjectCoercible throws an error if <var>argument</var> is a value that cannot be converted to an Object using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. It is defined by  <emu-xref href=\"#table-14\"><a href=\"#table-14\" class=\"excluded-xref\" excluded-id=\"table-14\">#table-14</a></emu-xref>:</p>\n      <emu-table id=\"table-14\" caption=\"RequireObjectCoercible Results\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-14\">#table-14</span>: <emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref> Results</figcaption>\n        <table>\n          <tbody>\n          <tr>\n            <th>\n              Argument Type\n            \n            </th>\n            <th>\n              Result\n            \n            </th>\n          </tr>\n          <tr>\n            <td>\n              Undefined\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Null\n            \n            </td>\n            <td>\n              Throw a <emu-val>TypeError</emu-val> exception.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Boolean\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Number\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              String\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Symbol\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              BigInt\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n              Object\n            \n            </td>\n            <td>\n              Return <var>argument</var>.\n            \n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </figure></emu-table>\n    </emu-clause>\n\n    "}, "sec-static-semantics-mv": {"num": "11.8.3.1", "title": "#sec-static-semantics-mv Static Semantics: MV", "html": "<emu-clause id=\"sec-static-semantics-mv\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-mv\">#sec-static-semantics-mv</span> Static Semantics: MV</h1>\n        <p>A numeric literal stands for a value of the Number type or the BigInt type.</p>\n        <ul>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NumericLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"18c0356f\"><emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d3d71ddd\"><emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"832f57ee\"><emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"NonDecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonDecimalIntegerLiteral\">NonDecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"1d0c4a66\"><emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"bf0728f3\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8af49841\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>), where <var>n</var> is the <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref> of the number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"971b5362\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ef115d8a\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> plus (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>)) &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c1f33372\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup>-<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0cd5f3c3\"><emu-t>.</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var> -<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub> <var>n</var></sup>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> and <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b404bcda\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalLiteral\">DecimalLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d1f87c1\"><emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>e</var></sup>, where <var>e</var> is the MV of <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d4c393e5\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"3f4b150f\"><emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub><sup><var>n</var></sup>) plus the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>, where <var>n</var> is the <emu-xref href=\"#mathematical%20integer\"><a href=\"#mathematical%20integer\">mathematical integer</a></emu-xref> number of code points in <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b3831ee0\"><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9f250657\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt><emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt> &#215; 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"ExponentPart\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-ExponentPart\">ExponentPart</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7f837518\"><emu-nt><a href=\"#prod-ExponentIndicator\">ExponentIndicator</a></emu-nt><emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"6d7b4e5f\"><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"3bd7fe57\"><emu-t>+</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"SignedInteger\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-SignedInteger\">SignedInteger</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58000348\"><emu-t>-</emu-t><emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the negative of the MV of <emu-nt><a href=\"#prod-DecimalDigits\">DecimalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5259a431\"><emu-t>0</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"BinaryDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"292aa5dd\"><emu-t>1</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 1<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5ca73105\"><emu-t>2</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ec6bb6b2\"><emu-t>3</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 3<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"58ec4a73\"><emu-t>4</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 4<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"8fcdef77\"><emu-t>5</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 5<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0b64877d\"><emu-t>6</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 6<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"OctalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"ea5e07a4\"><emu-t>7</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 7<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7a5bd8c3\"><emu-t>8</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 8<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"DecimalDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-DecimalDigit\">DecimalDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"NonZeroDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-NonZeroDigit\">NonZeroDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"163f4308\"><emu-t>9</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 9<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a61fcfde\"><emu-t>a</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9d7d0fdb\"><emu-t>A</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 10<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0185ce89\"><emu-t>b</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0a26d628\"><emu-t>B</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 11<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"d594c144\"><emu-t>c</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"5f87cc5b\"><emu-t>C</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 12<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"f0f32729\"><emu-t>d</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"919b1483\"><emu-t>D</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 13<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0d7c9fba\"><emu-t>e</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"b15f6792\"><emu-t>E</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 14<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"4068cae7\"><emu-t>f</emu-t></emu-rhs>\n</emu-production></emu-grammar> or of  <emu-grammar><emu-production name=\"HexDigit\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"0d544f70\"><emu-t>F</emu-t></emu-rhs>\n</emu-production></emu-grammar> is 15<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"600d7817\"><emu-t>0b</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"7c1f17d9\"><emu-t>0B</emu-t><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"e5f1ee23\"><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"BinaryDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"82aa7443\"><emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt><emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-BinaryDigits\">BinaryDigits</a></emu-nt> &#215; 2<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-BinaryDigit\">BinaryDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a8056cb0\"><emu-t>0o</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"3a3652fa\"><emu-t>0O</emu-t><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"99bc1d53\"><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"OctalDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"37a295fe\"><emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt><emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-OctalDigits\">OctalDigits</a></emu-nt> &#215; 8<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-OctalDigit\">OctalDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"cf154180\"><emu-t>0x</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexIntegerLiteral\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexIntegerLiteral\">HexIntegerLiteral</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"9ef756f3\"><emu-t>0X</emu-t><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"a0c48a71\"><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          \n          </li>\n          <li>\n            The MV of  <emu-grammar><emu-production name=\"HexDigits\" type=\"lexical\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-geq>::</emu-geq><emu-rhs a=\"c8221899\"><emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt><emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> is (the MV of <emu-nt><a href=\"#prod-HexDigits\">HexDigits</a></emu-nt> &#215; 16<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>) plus the MV of <emu-nt><a href=\"#prod-HexDigit\">HexDigit</a></emu-nt>.\n          \n          </li>\n        </ul>\n      </emu-clause>\n\n      "}, "sec-prefix-increment-operator-runtime-semantics-evaluation": {"num": "12.4.6.1", "title": "#sec-prefix-increment-operator-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-prefix-increment-operator-runtime-semantics-evaluation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-prefix-increment-operator-runtime-semantics-evaluation\">#sec-prefix-increment-operator-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n        <emu-grammar><emu-production name=\"UpdateExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5701b162\"><emu-t>++</emu-t><emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>expr</var> be the result of evaluating <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt>.</li><li>Let <var>oldValue</var> be ?&#160;<emu-xref aoid=\"ToNumeric\"><a href=\"#sec-tonumeric\">ToNumeric</a></emu-xref>(? <emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>expr</var>)).</li><li>Let <var>newValue</var> be !&#160;<emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldvalue</var>)::add(<var>oldValue</var>, <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>oldValue</var>)::unit).</li><li>Perform ?&#160;<emu-xref aoid=\"PutValue\"><a href=\"#sec-putvalue\">PutValue</a></emu-xref>(<var>expr</var>, <var>newValue</var>).</li><li>Return <var>newValue</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n    "}, "sec-properties-of-the-date-prototype-object": {"num": "20.4.4", "title": "#sec-properties-of-the-date-prototype-object Properties of the Date Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-date-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</span> Properties of the Date Prototype Object</h1>\n      <p>The Date prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DatePrototype%</dfn>.</li>\n        <li>is itself an ordinary object.</li>\n        <li>is not a Date instance and does not have a [[DateValue]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <p>Unless explicitly defined otherwise, the methods of the Date prototype object defined below are not generic and the <emu-val>this</emu-val> value passed to them must be an object that has a [[DateValue]] internal slot that has been initialized to a <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>.</p>\n      <p>The abstract operation  <dfn id=\"sec-thistimevalue\" aoid=\"thisTimeValue\">thisTimeValue</dfn>(<var>value</var>) performs the following steps:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>value</var>) is Object and <var>value</var> has a [[DateValue]] internal slot, then<ol><li>Return <var>value</var>.[[DateValue]].</li></ol></li><li>Throw a <emu-val>TypeError</emu-val> exception.\n      </li></ol></emu-alg>\n      <p>In following descriptions of functions that are properties of the Date prototype object, the phrase &#8220;<dfn id=\"this-Date-object\">this Date object</dfn>&#8221; refers to the object that is the <emu-val>this</emu-val> value for the invocation of the function. If the Type of the <emu-val>this</emu-val> value is not Object, a <emu-val>TypeError</emu-val> exception is thrown. The phrase &#8220;<dfn id=\"this-time-value\">this time value</dfn>&#8221; within the specification of a method refers to the result returned by calling the abstract operation <emu-xref href=\"#sec-thistimevalue\"><a href=\"#sec-thistimevalue\">thisTimeValue</a></emu-xref> with the <emu-val>this</emu-val> value of the method invocation passed as the argument.</p>\n\n      <div id=\"excluded-sec-date.prototype.constructor\"><h1><span class=\"secnum\">20.4.4.1</span>#sec-date.prototype.constructor Date.prototype.constructor</h1>...</div><div id=\"excluded-sec-date.prototype.getdate\"><h1><span class=\"secnum\">20.4.4.2</span>#sec-date.prototype.getdate Date.prototype.getDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getday\"><h1><span class=\"secnum\">20.4.4.3</span>#sec-date.prototype.getday Date.prototype.getDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getfullyear\"><h1><span class=\"secnum\">20.4.4.4</span>#sec-date.prototype.getfullyear Date.prototype.getFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gethours\"><h1><span class=\"secnum\">20.4.4.5</span>#sec-date.prototype.gethours Date.prototype.getHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmilliseconds\"><h1><span class=\"secnum\">20.4.4.6</span>#sec-date.prototype.getmilliseconds Date.prototype.getMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getminutes\"><h1><span class=\"secnum\">20.4.4.7</span>#sec-date.prototype.getminutes Date.prototype.getMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getmonth\"><h1><span class=\"secnum\">20.4.4.8</span>#sec-date.prototype.getmonth Date.prototype.getMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getseconds\"><h1><span class=\"secnum\">20.4.4.9</span>#sec-date.prototype.getseconds Date.prototype.getSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettime\"><h1><span class=\"secnum\">20.4.4.10</span>#sec-date.prototype.gettime Date.prototype.getTime ( )</h1>...</div><div id=\"excluded-sec-date.prototype.gettimezoneoffset\"><h1><span class=\"secnum\">20.4.4.11</span>#sec-date.prototype.gettimezoneoffset Date.prototype.getTimezoneOffset ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcdate\"><h1><span class=\"secnum\">20.4.4.12</span>#sec-date.prototype.getutcdate Date.prototype.getUTCDate ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcday\"><h1><span class=\"secnum\">20.4.4.13</span>#sec-date.prototype.getutcday Date.prototype.getUTCDay ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcfullyear\"><h1><span class=\"secnum\">20.4.4.14</span>#sec-date.prototype.getutcfullyear Date.prototype.getUTCFullYear ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutchours\"><h1><span class=\"secnum\">20.4.4.15</span>#sec-date.prototype.getutchours Date.prototype.getUTCHours ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.16</span>#sec-date.prototype.getutcmilliseconds Date.prototype.getUTCMilliseconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcminutes\"><h1><span class=\"secnum\">20.4.4.17</span>#sec-date.prototype.getutcminutes Date.prototype.getUTCMinutes ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcmonth\"><h1><span class=\"secnum\">20.4.4.18</span>#sec-date.prototype.getutcmonth Date.prototype.getUTCMonth ( )</h1>...</div><div id=\"excluded-sec-date.prototype.getutcseconds\"><h1><span class=\"secnum\">20.4.4.19</span>#sec-date.prototype.getutcseconds Date.prototype.getUTCSeconds ( )</h1>...</div><div id=\"excluded-sec-date.prototype.setdate\"><h1><span class=\"secnum\">20.4.4.20</span>#sec-date.prototype.setdate Date.prototype.setDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setfullyear\"><h1><span class=\"secnum\">20.4.4.21</span>#sec-date.prototype.setfullyear Date.prototype.setFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.sethours\"><h1><span class=\"secnum\">20.4.4.22</span>#sec-date.prototype.sethours Date.prototype.setHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmilliseconds\"><h1><span class=\"secnum\">20.4.4.23</span>#sec-date.prototype.setmilliseconds Date.prototype.setMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setminutes\"><h1><span class=\"secnum\">20.4.4.24</span>#sec-date.prototype.setminutes Date.prototype.setMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setmonth\"><h1><span class=\"secnum\">20.4.4.25</span>#sec-date.prototype.setmonth Date.prototype.setMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setseconds\"><h1><span class=\"secnum\">20.4.4.26</span>#sec-date.prototype.setseconds Date.prototype.setSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.settime\"><h1><span class=\"secnum\">20.4.4.27</span>#sec-date.prototype.settime Date.prototype.setTime ( time )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcdate\"><h1><span class=\"secnum\">20.4.4.28</span>#sec-date.prototype.setutcdate Date.prototype.setUTCDate ( date )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcfullyear\"><h1><span class=\"secnum\">20.4.4.29</span>#sec-date.prototype.setutcfullyear Date.prototype.setUTCFullYear ( year [ , month [ , date ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutchours\"><h1><span class=\"secnum\">20.4.4.30</span>#sec-date.prototype.setutchours Date.prototype.setUTCHours ( hour [ , min [ , sec [ , ms ] ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmilliseconds\"><h1><span class=\"secnum\">20.4.4.31</span>#sec-date.prototype.setutcmilliseconds Date.prototype.setUTCMilliseconds ( ms )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcminutes\"><h1><span class=\"secnum\">20.4.4.32</span>#sec-date.prototype.setutcminutes Date.prototype.setUTCMinutes ( min [ , sec [ , ms ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcmonth\"><h1><span class=\"secnum\">20.4.4.33</span>#sec-date.prototype.setutcmonth Date.prototype.setUTCMonth ( month [ , date ] )</h1>...</div><div id=\"excluded-sec-date.prototype.setutcseconds\"><h1><span class=\"secnum\">20.4.4.34</span>#sec-date.prototype.setutcseconds Date.prototype.setUTCSeconds ( sec [ , ms ] )</h1>...</div><div id=\"excluded-sec-date.prototype.todatestring\"><h1><span class=\"secnum\">20.4.4.35</span>#sec-date.prototype.todatestring Date.prototype.toDateString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toisostring\"><h1><span class=\"secnum\">20.4.4.36</span>#sec-date.prototype.toisostring Date.prototype.toISOString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.tojson\"><h1><span class=\"secnum\">20.4.4.37</span>#sec-date.prototype.tojson Date.prototype.toJSON ( key )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaledatestring\"><h1><span class=\"secnum\">20.4.4.38</span>#sec-date.prototype.tolocaledatestring Date.prototype.toLocaleDateString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocalestring\"><h1><span class=\"secnum\">20.4.4.39</span>#sec-date.prototype.tolocalestring Date.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tolocaletimestring\"><h1><span class=\"secnum\">20.4.4.40</span>#sec-date.prototype.tolocaletimestring Date.prototype.toLocaleTimeString ( [ reserved1 [ , reserved2 ] ] )</h1>...</div><div id=\"excluded-sec-date.prototype.tostring\"><h1><span class=\"secnum\">20.4.4.41</span>#sec-date.prototype.tostring Date.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.totimestring\"><h1><span class=\"secnum\">20.4.4.42</span>#sec-date.prototype.totimestring Date.prototype.toTimeString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.toutcstring\"><h1><span class=\"secnum\">20.4.4.43</span>#sec-date.prototype.toutcstring Date.prototype.toUTCString ( )</h1>...</div><div id=\"excluded-sec-date.prototype.valueof\"><h1><span class=\"secnum\">20.4.4.44</span>#sec-date.prototype.valueof Date.prototype.valueOf ( )</h1>...</div><div id=\"excluded-sec-date.prototype-@@toprimitive\"><h1><span class=\"secnum\">20.4.4.45</span>#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )</h1>...</div></emu-clause>\n\n    "}, "sec-function-properties-of-the-math-object": {"num": "20.3.2", "title": "#sec-function-properties-of-the-math-object Function Properties of the Math Object", "html": "<emu-clause id=\"sec-function-properties-of-the-math-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-properties-of-the-math-object\">#sec-function-properties-of-the-math-object</span> Function Properties of the Math Object</h1>\n      <p>Each of the following <code>Math</code> object functions applies the <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> abstract operation to each of its arguments (in left-to-right order if there is more than one). If <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> returns an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref>, that <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">Completion Record</a></emu-xref> is immediately returned. Otherwise, the function performs a computation on the resulting <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>(s). The value returned by each function is a Number.</p>\n      <p>In the function descriptions below, the symbols <emu-val>NaN</emu-val>, <emu-val>-0</emu-val>, <emu-val>+0</emu-val>, <emu-val>-&#8734;</emu-val> and <emu-val>+&#8734;</emu-val> refer to the Number values described in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The behaviour of the functions <code>acos</code>, <code>acosh</code>, <code>asin</code>, <code>asinh</code>, <code>atan</code>, <code>atanh</code>, <code>atan2</code>, <code>cbrt</code>, <code>cos</code>, <code>cosh</code>, <code>exp</code>, <code>expm1</code>, <code>hypot</code>, <code>log</code>,<code>log1p</code>, <code>log2</code>, <code>log10</code>, <code>pow</code>, <code>random</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan</code>, and <code>tanh</code> is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest. For other argument values, these functions are intended to compute approximations to the results of familiar mathematical functions, but some latitude is allowed in the choice of approximation algorithms. The general intent is that an implementer should be able to use the same mathematical library for ECMAScript on a given hardware platform that is available to C programmers on that platform.</p>\n        <p>Although the choice of algorithms is left to the implementation, it is recommended (but not specified by this standard) that implementations use the approximation algorithms for IEEE 754-2008 arithmetic contained in <code>fdlibm</code>, the freely distributable mathematical library from Sun Microsystems (<a href=\"http://www.netlib.org/fdlibm\">http://www.netlib.org/fdlibm</a>).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-math.abs\"><h1><span class=\"secnum\">20.3.2.1</span>#sec-math.abs Math.abs ( x )</h1>...</div><div id=\"excluded-sec-math.acos\"><h1><span class=\"secnum\">20.3.2.2</span>#sec-math.acos Math.acos ( x )</h1>...</div><div id=\"excluded-sec-math.acosh\"><h1><span class=\"secnum\">20.3.2.3</span>#sec-math.acosh Math.acosh ( x )</h1>...</div><div id=\"excluded-sec-math.asin\"><h1><span class=\"secnum\">20.3.2.4</span>#sec-math.asin Math.asin ( x )</h1>...</div><div id=\"excluded-sec-math.asinh\"><h1><span class=\"secnum\">20.3.2.5</span>#sec-math.asinh Math.asinh ( x )</h1>...</div><div id=\"excluded-sec-math.atan\"><h1><span class=\"secnum\">20.3.2.6</span>#sec-math.atan Math.atan ( x )</h1>...</div><div id=\"excluded-sec-math.atanh\"><h1><span class=\"secnum\">20.3.2.7</span>#sec-math.atanh Math.atanh ( x )</h1>...</div><div id=\"excluded-sec-math.atan2\"><h1><span class=\"secnum\">20.3.2.8</span>#sec-math.atan2 Math.atan2 ( y, x )</h1>...</div><div id=\"excluded-sec-math.cbrt\"><h1><span class=\"secnum\">20.3.2.9</span>#sec-math.cbrt Math.cbrt ( x )</h1>...</div><div id=\"excluded-sec-math.ceil\"><h1><span class=\"secnum\">20.3.2.10</span>#sec-math.ceil Math.ceil ( x )</h1>...</div><div id=\"excluded-sec-math.clz32\"><h1><span class=\"secnum\">20.3.2.11</span>#sec-math.clz32 Math.clz32 ( x )</h1>...</div><div id=\"excluded-sec-math.cos\"><h1><span class=\"secnum\">20.3.2.12</span>#sec-math.cos Math.cos ( x )</h1>...</div><div id=\"excluded-sec-math.cosh\"><h1><span class=\"secnum\">20.3.2.13</span>#sec-math.cosh Math.cosh ( x )</h1>...</div><div id=\"excluded-sec-math.exp\"><h1><span class=\"secnum\">20.3.2.14</span>#sec-math.exp Math.exp ( x )</h1>...</div><div id=\"excluded-sec-math.expm1\"><h1><span class=\"secnum\">20.3.2.15</span>#sec-math.expm1 Math.expm1 ( x )</h1>...</div><div id=\"excluded-sec-math.floor\"><h1><span class=\"secnum\">20.3.2.16</span>#sec-math.floor Math.floor ( x )</h1>...</div><div id=\"excluded-sec-math.fround\"><h1><span class=\"secnum\">20.3.2.17</span>#sec-math.fround Math.fround ( x )</h1>...</div><div id=\"excluded-sec-math.hypot\"><h1><span class=\"secnum\">20.3.2.18</span>#sec-math.hypot Math.hypot ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.imul\"><h1><span class=\"secnum\">20.3.2.19</span>#sec-math.imul Math.imul ( x, y )</h1>...</div><div id=\"excluded-sec-math.log\"><h1><span class=\"secnum\">20.3.2.20</span>#sec-math.log Math.log ( x )</h1>...</div><div id=\"excluded-sec-math.log1p\"><h1><span class=\"secnum\">20.3.2.21</span>#sec-math.log1p Math.log1p ( x )</h1>...</div><div id=\"excluded-sec-math.log10\"><h1><span class=\"secnum\">20.3.2.22</span>#sec-math.log10 Math.log10 ( x )</h1>...</div><div id=\"excluded-sec-math.log2\"><h1><span class=\"secnum\">20.3.2.23</span>#sec-math.log2 Math.log2 ( x )</h1>...</div><div id=\"excluded-sec-math.max\"><h1><span class=\"secnum\">20.3.2.24</span>#sec-math.max Math.max ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.min\"><h1><span class=\"secnum\">20.3.2.25</span>#sec-math.min Math.min ( value1, value2, ...values )</h1>...</div><div id=\"excluded-sec-math.pow\"><h1><span class=\"secnum\">20.3.2.26</span>#sec-math.pow Math.pow ( base, exponent )</h1>...</div><div id=\"excluded-sec-math.random\"><h1><span class=\"secnum\">20.3.2.27</span>#sec-math.random Math.random ( )</h1>...</div><div id=\"excluded-sec-math.round\"><h1><span class=\"secnum\">20.3.2.28</span>#sec-math.round Math.round ( x )</h1>...</div><div id=\"excluded-sec-math.sign\"><h1><span class=\"secnum\">20.3.2.29</span>#sec-math.sign Math.sign ( x )</h1>...</div><div id=\"excluded-sec-math.sin\"><h1><span class=\"secnum\">20.3.2.30</span>#sec-math.sin Math.sin ( x )</h1>...</div><div id=\"excluded-sec-math.sinh\"><h1><span class=\"secnum\">20.3.2.31</span>#sec-math.sinh Math.sinh ( x )</h1>...</div><div id=\"excluded-sec-math.sqrt\"><h1><span class=\"secnum\">20.3.2.32</span>#sec-math.sqrt Math.sqrt ( x )</h1>...</div><div id=\"excluded-sec-math.tan\"><h1><span class=\"secnum\">20.3.2.33</span>#sec-math.tan Math.tan ( x )</h1>...</div><div id=\"excluded-sec-math.tanh\"><h1><span class=\"secnum\">20.3.2.34</span>#sec-math.tanh Math.tanh ( x )</h1>...</div><div id=\"excluded-sec-math.trunc\"><h1><span class=\"secnum\">20.3.2.35</span>#sec-math.trunc Math.trunc ( x )</h1>...</div></emu-clause>\n  "}, "sec-date.prototype.tostring": {"num": "20.4.4.41", "title": "#sec-date.prototype.tostring Date.prototype.toString ( )", "html": "<emu-clause id=\"sec-date.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</span> Date.prototype.toString ( )</h1>\n        <p>The following steps are performed:</p>\n        <emu-alg><ol><li>Let <var>tv</var> be ?&#160;<emu-xref href=\"#sec-thistimevalue\"><a href=\"#sec-thistimevalue\">thisTimeValue</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Return <emu-xref aoid=\"ToDateString\"><a href=\"#sec-todatestring\">ToDateString</a></emu-xref>(<var>tv</var>).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>For any Date object <code>d</code> whose milliseconds amount is zero, the result of <code>Date.parse(d.toString())</code> is equal to <code>d.valueOf()</code>. See  <emu-xref href=\"#sec-date.parse\"><a href=\"#sec-date.parse\" class=\"excluded-xref\" excluded-id=\"sec-date.parse\">#sec-date.parse</a></emu-xref>.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>toString</code> function is not generic; it throws a <emu-val>TypeError</emu-val> exception if its <emu-val>this</emu-val> value is not a Date object. Therefore, it cannot be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-timestring\"><h1><span class=\"secnum\">20.4.4.41.1</span>#sec-timestring Runtime Semantics: TimeString ( tv )</h1>...</div><div id=\"excluded-sec-datestring\"><h1><span class=\"secnum\">20.4.4.41.2</span>#sec-datestring Runtime Semantics: DateString ( tv )</h1>...</div><div id=\"excluded-sec-timezoneestring\"><h1><span class=\"secnum\">20.4.4.41.3</span>#sec-timezoneestring Runtime Semantics: TimeZoneString ( tv )</h1>...</div><div id=\"excluded-sec-todatestring\"><h1><span class=\"secnum\">20.4.4.41.4</span>#sec-todatestring Runtime Semantics: ToDateString ( tv )</h1>...</div></emu-clause>\n\n      "}, "sec-date-time-string-format": {"num": "20.4.1.15", "title": "#sec-date-time-string-format Date Time String Format", "html": "<emu-clause id=\"sec-date-time-string-format\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</span> Date Time String Format</h1>\n        <p>ECMAScript defines a string interchange format for date-times based upon a simplification of the ISO 8601 calendar date extended format. The format is as follows: <code>YYYY-MM-DDTHH:mm:ss.sssZ</code></p>\n        <p>Where the elements are as follows:</p>\n        <figure>\n          <table class=\"lightweight-table\">\n            <tbody>\n            <tr>\n              <td>\n                <code>YYYY</code>\n              \n              </td>\n              <td>\n                is the year in the proleptic Gregorian calendar as four decimal digits from 0000 to 9999, or as an  <emu-xref href=\"#sec-expanded-years\"><a href=\"#sec-expanded-years\">expanded year</a></emu-xref> of <code>\"+\"</code> or <code>\"-\"</code> followed by six decimal digits.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>-</code>\n              \n              </td>\n              <td>\n                <code>\"-\"</code> (hyphen) appears literally twice in the string.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>MM</code>\n              \n              </td>\n              <td>\n                is the month of the year as two decimal digits from 01 (January) to 12 (December).\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>DD</code>\n              \n              </td>\n              <td>\n                is the day of the month as two decimal digits from 01 to 31.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>T</code>\n              \n              </td>\n              <td>\n                <code>\"T\"</code> appears literally in the string, to indicate the beginning of the time element.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>HH</code>\n              \n              </td>\n              <td>\n                is the number of complete hours that have passed since midnight as two decimal digits from 00 to 24.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>:</code>\n              \n              </td>\n              <td>\n                <code>\":\"</code> (colon) appears literally twice in the string.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>mm</code>\n              \n              </td>\n              <td>\n                is the number of complete minutes since the start of the hour as two decimal digits from 00 to 59.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>ss</code>\n              \n              </td>\n              <td>\n                is the number of complete seconds since the start of the minute as two decimal digits from 00 to 59.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>.</code>\n              \n              </td>\n              <td>\n                <code>\".\"</code> (dot) appears literally in the string.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>sss</code>\n              \n              </td>\n              <td>\n                is the number of complete milliseconds since the start of the second as three decimal digits.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>Z</code>\n              \n              </td>\n              <td>\n                is the UTC offset representation specified as <code>\"Z\"</code> (for UTC with no offset) or an offset of either <code>\"+\"</code> or <code>\"-\"</code> followed by a time expression <code>HH:mm</code> (indicating local time ahead of or behind UTC, respectively)\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure>\n        <p>This format includes date-only forms:</p>\n        <pre>YYYY\nYYYY-MM\nYYYY-MM-DD\n        </pre>\n        <p>It also includes &#8220;date-time&#8221; forms that consist of one of the above date-only forms immediately followed by one of the following time forms with an optional UTC offset representation appended:</p>\n        <pre>THH:mm\nTHH:mm:ss\nTHH:mm:ss.sss\n        </pre>\n        <p>A string containing out-of-bounds or nonconforming elements is not a valid instance of this format.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>As every day both starts and ends with midnight, the two notations <code>00:00</code> and <code>24:00</code> are available to distinguish the two midnights that can be associated with one date. This means that the following two notations refer to exactly the same point in time: <code>1995-02-04T24:00</code> and <code>1995-02-05T00:00</code>. This interpretation of the latter form as \"end of a calendar day\" is consistent with ISO 8601, even though that specification reserves it for describing time intervals and does not permit it within representations of single points in time.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>There exists no international standard that specifies abbreviations for civil time zones like CET, EST, etc. and sometimes the same abbreviation is even used for two very different time zones. For this reason, both ISO 8601 and this format specify numeric representations of time zone offsets.</p>\n        </div></emu-note>\n\n        <div id=\"excluded-sec-expanded-years\"><h1><span class=\"secnum\">20.4.1.15.1</span>#sec-expanded-years Expanded Years</h1>...</div></emu-clause>\n    "}, "sec-overview-of-date-objects-and-definitions-of-abstract-operations": {"num": "20.4.1", "title": "#sec-overview-of-date-objects-and-definitions-of-abstract-operations Overview of Date Objects and Definitions of Abstract Operations", "html": "<emu-clause id=\"sec-overview-of-date-objects-and-definitions-of-abstract-operations\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-overview-of-date-objects-and-definitions-of-abstract-operations\">#sec-overview-of-date-objects-and-definitions-of-abstract-operations</span> Overview of Date Objects and Definitions of Abstract Operations</h1>\n      <p>The following functions are <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> that operate on time values (defined in  <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\" class=\"excluded-xref\" excluded-id=\"sec-time-values-and-time-range\">#sec-time-values-and-time-range</a></emu-xref>). Note that, in every case, if any argument to one of these functions is <emu-val>NaN</emu-val>, the result will be <emu-val>NaN</emu-val>.</p>\n\n      <div id=\"excluded-sec-time-values-and-time-range\"><h1><span class=\"secnum\">20.4.1.1</span>#sec-time-values-and-time-range Time Values and Time Range</h1>...</div><div id=\"excluded-sec-day-number-and-time-within-day\"><h1><span class=\"secnum\">20.4.1.2</span>#sec-day-number-and-time-within-day Day Number and Time within Day</h1>...</div><div id=\"excluded-sec-year-number\"><h1><span class=\"secnum\">20.4.1.3</span>#sec-year-number Year Number</h1>...</div><div id=\"excluded-sec-month-number\"><h1><span class=\"secnum\">20.4.1.4</span>#sec-month-number Month Number</h1>...</div><div id=\"excluded-sec-date-number\"><h1><span class=\"secnum\">20.4.1.5</span>#sec-date-number Date Number</h1>...</div><div id=\"excluded-sec-week-day\"><h1><span class=\"secnum\">20.4.1.6</span>#sec-week-day Week Day</h1>...</div><div id=\"excluded-sec-local-time-zone-adjustment\"><h1><span class=\"secnum\">20.4.1.7</span>#sec-local-time-zone-adjustment LocalTZA ( t, isUTC )</h1>...</div><div id=\"excluded-sec-localtime\"><h1><span class=\"secnum\">20.4.1.8</span>#sec-localtime LocalTime ( t )</h1>...</div><div id=\"excluded-sec-utc-t\"><h1><span class=\"secnum\">20.4.1.9</span>#sec-utc-t UTC ( t )</h1>...</div><div id=\"excluded-sec-hours-minutes-second-and-milliseconds\"><h1><span class=\"secnum\">20.4.1.10</span>#sec-hours-minutes-second-and-milliseconds Hours, Minutes, Second, and Milliseconds</h1>...</div><div id=\"excluded-sec-maketime\"><h1><span class=\"secnum\">20.4.1.11</span>#sec-maketime MakeTime ( hour, min, sec, ms )</h1>...</div><div id=\"excluded-sec-makeday\"><h1><span class=\"secnum\">20.4.1.12</span>#sec-makeday MakeDay ( year, month, date )</h1>...</div><div id=\"excluded-sec-makedate\"><h1><span class=\"secnum\">20.4.1.13</span>#sec-makedate MakeDate ( day, time )</h1>...</div><div id=\"excluded-sec-timeclip\"><h1><span class=\"secnum\">20.4.1.14</span>#sec-timeclip TimeClip ( time )</h1>...</div><div id=\"excluded-sec-date-time-string-format\"><h1><span class=\"secnum\">20.4.1.15</span>#sec-date-time-string-format Date Time String Format</h1>...</div></emu-clause>\n\n    "}}, "figData": {"table-1": "Table 1", "table-3": "Table 4", "table-7": "Table 8", "table-10": "Table 10", "table-11": "Table 11", "table-12": "Table 13", "table-13": "Table 14", "table-14": "Table 15", "table-agent-record": "Table 28", "table-35": "Table 37", "table-49": "Table 62"}}}