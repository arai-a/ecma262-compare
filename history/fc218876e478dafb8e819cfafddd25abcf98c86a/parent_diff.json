{"from": {"secList": ["sec-reflect-object", "sec-regexp-prototype-matchall", "sec-ordinarycreatefromconstructor", "sec-set.prototype-@@tostringtag", "sec-json-object", "sec-constructor", "sec-get-%typedarray%.prototype-@@tostringtag", "sec-weakset.prototype-@@tostringtag", "sec-async-function-prototype-properties", "sec-object.prototype.__proto__", "sec-properties-of-the-nativeerror-constructors", "sec-@@tostringtag", "sec-generator.prototype-@@tostringtag", "sec-symbol.prototype-@@toprimitive", "sec-bigint-constructor", "sec-date-constructor", "sec-iterator-interface", "sec-number.min_safe_integer", "sec-properties-of-asyncgeneratorfunction", "sec-regexp.prototype-@@match", "sec-promise-constructor", "sec-get-regexp-@@species", "sec-properties-of-the-typedarray-constructors", "sec-objects", "sec-function-environment-records", "sec-nativeerror-object-structure", "sec-asynciterator-interface", "sec-number-constructor", "sec-globalthis", "sec-hasrestrictedglobalproperty", "sec-getprototypefromconstructor", "sec-sharedarraybuffer-@@species", "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact", "sec-string.prototype-@@iterator", "sec-setfunctionname", "sec-get-map-@@species", "sec-weakmap.prototype-@@tostringtag", "sec-get-set-@@species", "sec-function-definitions-runtime-semantics-evaluation", "sec-boolean-constructor", "sec-__proto__-property-names-in-object-initializers", "sec-async-function-constructor-properties", "sec-built-in-function-objects", "sec-regexp.prototype-@@search", "sec-number.max_safe_integer", "sec-createdynamicfunction", "sec-map-constructor", "sec-additional-properties-of-the-string.prototype-object", "sec-asyncgenerator-prototype-tostringtag", "sec-arraybuffer-constructor", "sec-math.sinh", "sec-function.prototype.tostring", "sec-get-arraybuffer-@@species", "sec-number.epsilon", "sec-makeconstructor", "sec-function-constructor", "sec-nativeerror.prototype.constructor", "sec-%stringiteratorprototype%-@@tostringtag", "sec-properties-of-the-proxy-constructor", "sec-sharedarraybuffer-constructor", "sec-map.prototype-@@iterator", "sec-number.parseint", "sec-dataview.prototype-@@tostringtag", "sec-function.prototype-@@hasinstance", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-get-array-@@species", "sec-error-constructor", "sec-proxy-constructor", "sec-atomics-object", "sec-asyncgenerator-objects", "sec-date.prototype.togmtstring", "sec-regexp.prototype-@@split", "sec-asynciteratorprototype-asynciterator", "sec-math.tanh", "sec-get-%typedarray%-@@species", "sec-typedarray.prototype.constructor", "sec-object-constructor", "sec-json-@@tostringtag", "sec-get-promise-@@species", "sec-%iteratorprototype%-@@iterator", "sec-atomics.islockfree", "sec-sharedarraybuffer.prototype.toString", "sec-map.prototype-@@tostringtag", "sec-json.stringify", "sec-array-constructor", "sec-well-known-intrinsic-objects", "sec-set.prototype-@@iterator", "sec-generatorfunction-instances-name", "sec-asyncgeneratorfunction-prototype-tostringtag", "sec-source-text-module-records", "sec-properties-of-the-function-prototype-object", "sec-number.negative_infinity", "sec-regexpexec", "sec-atomics-@@tostringtag", "sec-number.parsefloat", "sec-%iteratorprototype%-object", "sec-terms-and-definitions-prototype", "sec-iteratorresult-interface", "sec-%arrayiteratorprototype%-@@tostringtag", "sec-nativeerror.prototype.name", "sec-dataview-constructor", "sec-set.prototype.keys", "sec-number.positive_infinity", "sec-properties-of-the-%typedarray%-intrinsic-object", "sec-math.cosh", "sec-%setiteratorprototype%-@@tostringtag", "sec-instanceofoperator", "sec-weakset-constructor", "sec-properties-of-asyncgenerator-prototype", "sec-symbol-constructor", "sec-function-instances-prototype", "sec-%mapiteratorprototype%-@@tostringtag", "sec-arraybuffer.prototype-@@tostringtag", "sec-properties-of-generator-prototype", "sec-string-constructor", "sec-arrayspeciescreate", "sec-function.prototype.bind", "sec-properties-of-the-generatorfunction-constructor", "sec-asyncgeneratorfunction-instance-prototype", "sec-function-instances-name", "sec-nativeerror.prototype.message", "sec-strict-mode-of-ecmascript", "sec-symbol.prototype-@@tostringtag", "sec-asyncgeneratorfunction-instance-name", "sec-properties-of-the-generatorfunction-prototype-object", "sec-async-from-sync-iterator-value-unwrap-functions", "sec-promise.prototype-@@tostringtag", "sec-regexp.prototype-@@replace", "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions", "sec-async-function-prototype-properties-toStringTag", "sec-math-@@tostringtag", "sec-bigint.prototype-@@tostringtag", "sec-properties-of-regexp-instances", "sec-date.prototype-@@toprimitive", "sec-ecmascript-standard-built-in-objects", "sec-object.prototype.tolocalestring", "sec-math-object", "sec-asynciteratorprototype", "sec-weakmap-constructor", "sec-%regexpstringiteratorprototype%-@@tostringtag", "sec-generatorfunction.prototype-@@tostringtag", "sec-generator-objects", "sec-typedarray.bytes_per_element", "sec-generatorfunction-instances-prototype", "sec-symbol.matchall", "sec-lastindex", "sec-async-function-instances-name", "sec-set-constructor", "sec-regexp-constructor", "sec-array.prototype.reduceright", "sec-typedarray.prototype.bytes_per_element", "sec-properties-of-the-regexp-prototype-object"], "secData": {"sec-reflect-object": {"num": "26.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <code>Reflect</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">26.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">26.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">26.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">26.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">26.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">26.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">26.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">26.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">26.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">26.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">26.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">26.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">26.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div></emu-clause>\n\n  "}, "sec-regexp-prototype-matchall": {"num": "21.2.5.8", "title": "#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )", "html": "<emu-clause id=\"sec-regexp-prototype-matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-prototype-matchall\">#sec-regexp-prototype-matchall</span> RegExp.prototype [ @@matchAll ] ( <var>string</var> )</h1>\n\n        <p>When the <code>@@matchAll</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"flags\"</code>)).</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>R</var>, <var>flags</var> &#187;).</li><li>Let <var>lastIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"lastIndex\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>matcher</var>, <code>\"lastIndex\"</code>, <var>lastIndex</var>, <emu-val>true</emu-val>).</li><li>If <var>flags</var> contains <code>\"g\"</code>, let <var>global</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>global</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <code>\"u\"</code>, let <var>fullUnicode</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>fullUnicode</var> be <emu-val>false</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"CreateRegExpStringIterator\"><a href=\"#sec-createregexpstringiterator\">CreateRegExpStringIterator</a></emu-xref>(<var>matcher</var>, <var>S</var>, <var>global</var>, <var>fullUnicode</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <emu-val>name</emu-val> property of this function is <code>\"[Symbol.matchAll]\"</code>.</p>\n\n        <div id=\"excluded-sec-createregexpstringiterator\"><h1><span class=\"secnum\">21.2.5.8.1</span>#sec-createregexpstringiterator CreateRegExpStringIterator ( R, S, global, fullUnicode )</h1>...</div></emu-clause>\n\n      "}, "sec-ordinarycreatefromconstructor": {"num": "9.1.13", "title": "#sec-ordinarycreatefromconstructor OrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )", "html": "<emu-clause id=\"sec-ordinarycreatefromconstructor\" aoid=\"OrdinaryCreateFromConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinarycreatefromconstructor\">#sec-ordinarycreatefromconstructor</span> OrdinaryCreateFromConstructor ( <var>constructor</var>, <var>intrinsicDefaultProto</var> [ , <var>internalSlotsList</var> ] )</h1>\n      <p>The abstract operation OrdinaryCreateFromConstructor creates an ordinary object whose [[Prototype]] value is retrieved from a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>prototype</code> property, if it exists. Otherwise the intrinsic named by <var>intrinsicDefaultProto</var> is used for [[Prototype]]. The optional <var>internalSlotsList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of the names of additional internal slots that must be defined as part of the object. If the list is not provided, a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is used. This abstract operation performs the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>intrinsicDefaultProto</var> is a String value that is this specification's name of an intrinsic object. The corresponding object must be an intrinsic that is intended to be used as the [[Prototype]] value of an object.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>constructor</var>, <var>intrinsicDefaultProto</var>).</li><li>Return <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<var>proto</var>, <var>internalSlotsList</var>).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-set.prototype-@@tostringtag": {"num": "23.2.3.12", "title": "#sec-set.prototype-@@tostringtag Set.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-set.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype-@@tostringtag\">#sec-set.prototype-@@tostringtag</span> Set.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"Set\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-json-object": {"num": "24.5", "title": "#sec-json-object The JSON Object", "html": "<emu-clause id=\"sec-json-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-object\">#sec-json-object</span> The JSON Object</h1>\n    <p>The JSON object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%JSON%</dfn>.</li>\n      <li>is the initial value of the <code>JSON</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>contains two functions, <code>parse</code> and <code>stringify</code>, that are used to parse and construct JSON texts.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The JSON Data Interchange Format is defined in ECMA-404. The JSON interchange format used in this specification is exactly that described by ECMA-404. Conforming implementations of <code>JSON.parse</code> and <code>JSON.stringify</code> must support the exact interchange format described in the ECMA-404 specification without any deletions or extensions to the format.</p>\n\n    <div id=\"excluded-sec-json.parse\"><h1><span class=\"secnum\">24.5.1</span>#sec-json.parse JSON.parse ( text [ , reviver ] )</h1>...</div><div id=\"excluded-sec-json.stringify\"><h1><span class=\"secnum\">24.5.2</span>#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )</h1>...</div><div id=\"excluded-sec-json-@@tostringtag\"><h1><span class=\"secnum\">24.5.3</span>#sec-json-@@tostringtag JSON [ @@toStringTag ]</h1>...</div></emu-clause>\n"}, "sec-constructor": {"num": "4.3.4", "title": "#sec-constructor constructor", "html": "<emu-clause id=\"sec-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-constructor\">#sec-constructor</span> constructor</h1>\n      <p><emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that creates and initializes objects</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The value of a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>prototype</code> property is a prototype object that is used to implement inheritance and shared properties.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-get-%typedarray%.prototype-@@tostringtag": {"num": "22.2.3.32", "title": "#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-get-%typedarray%.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-%typedarray%.prototype-@@tostringtag\">#sec-get-%typedarray%.prototype-@@tostringtag</span> get %TypedArray%.prototype [ @@toStringTag ]</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype[@@toStringTag]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, return <emu-val>undefined</emu-val>.</li><li>If <var>O</var> does not have a [[TypedArrayName]] internal slot, return <emu-val>undefined</emu-val>.</li><li>Let <var>name</var> be <var>O</var>.[[TypedArrayName]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is String.</li><li>Return <var>name</var>.\n        </li></ol></emu-alg>\n        <p>This property has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <p>The initial value of the <code>name</code> property of this function is <code>\"get [Symbol.toStringTag]\"</code>.</p>\n      </emu-clause>\n    "}, "sec-weakset.prototype-@@tostringtag": {"num": "23.4.3.5", "title": "#sec-weakset.prototype-@@tostringtag WeakSet.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-weakset.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset.prototype-@@tostringtag\">#sec-weakset.prototype-@@tostringtag</span> WeakSet.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"WeakSet\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-async-function-prototype-properties": {"num": "25.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">25.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">25.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-object.prototype.__proto__": {"num": "B.2.2.1", "title": "#sec-object.prototype.__proto__ Object.prototype.__proto__", "html": "<emu-annex id=\"sec-object.prototype.__proto__\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.__proto__\">#sec-object.prototype.__proto__</span> Object.prototype.__proto__</h1>\n        <p>Object.prototype.__proto__ is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }. The [[Get]] and [[Set]] attributes are defined as follows:</p>\n\n        <div id=\"excluded-sec-get-object.prototype.__proto__\"><h1><span class=\"secnum\">B.2.2.1.1</span>#sec-get-object.prototype.__proto__ get Object.prototype.__proto__</h1>...</div><div id=\"excluded-sec-set-object.prototype.__proto__\"><h1><span class=\"secnum\">B.2.2.1.2</span>#sec-set-object.prototype.__proto__ set Object.prototype.__proto__</h1>...</div></emu-annex>\n\n      "}, "sec-properties-of-the-nativeerror-constructors": {"num": "19.5.6.2", "title": "#sec-properties-of-the-nativeerror-constructors Properties of the NativeError Constructors", "html": "<emu-clause id=\"sec-properties-of-the-nativeerror-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-nativeerror-constructors\">#sec-properties-of-the-nativeerror-constructors</span> Properties of the <var>NativeError</var> Constructors</h1>\n        <p>Each <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>.</li>\n          <li>has a <code>name</code> property whose value is the String value `\"<var>NativeError</var>\"`.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror.prototype\"><h1><span class=\"secnum\">19.5.6.2.1</span>#sec-nativeerror.prototype NativeError.prototype</h1>...</div></emu-clause>\n\n      "}, "sec-@@tostringtag": {"num": "26.3.1", "title": "#sec-@@tostringtag @@toStringTag", "html": "<emu-clause id=\"sec-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-@@tostringtag\">#sec-@@tostringtag</span> @@toStringTag</h1>\n      <p>The initial value of the @@toStringTag property is the String value <code>\"Module\"</code>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-generator.prototype-@@tostringtag": {"num": "25.4.1.5", "title": "#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-generator.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator.prototype-@@tostringtag\">#sec-generator.prototype-@@tostringtag</span> Generator.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"Generator\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-symbol.prototype-@@toprimitive": {"num": "19.4.3.5", "title": "#sec-symbol.prototype-@@toprimitive Symbol.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-symbol.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype-@@toprimitive\">#sec-symbol.prototype-@@toprimitive</span> Symbol.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Symbol object to a primitive value. The allowed values for <var>hint</var> are <code>\"default\"</code>, <code>\"number\"</code>, and <code>\"string\"</code>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref href=\"#sec-thissymbolvalue\"><a href=\"#sec-thissymbolvalue\">thisSymbolValue</a></emu-xref>(<emu-val>this</emu-val> value).\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.toPrimitive]\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-bigint-constructor": {"num": "20.2.1", "title": "#sec-bigint-constructor The BigInt Constructor", "html": "<emu-clause id=\"sec-bigint-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</span> The BigInt Constructor</h1>\n      <p>The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%BigInt%</dfn>.</li>\n        <li>is the initial value of the <code>BigInt</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be used with the <code>new</code> operator or to be subclassed. It may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to the <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> will cause an exception.</li>\n      </ul>\n\n      <div id=\"excluded-sec-bigint-constructor-number-value\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-bigint-constructor-number-value BigInt ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <code>Date</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Date</code> behaviour must include a <code>super</code> call to the <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <code>\"length\"</code> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.4.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.4.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-iterator-interface": {"num": "25.1.1.2", "title": "#sec-iterator-interface The  Iterator Interface", "html": "<emu-clause id=\"sec-iterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</span> The  <i>Iterator</i> Interface</h1>\n        <p>An object that implements the  <i>Iterator</i> interface must include the property in  <emu-xref href=\"#table-53\"><a href=\"#table-53\" class=\"excluded-xref\" excluded-id=\"table-53\">#table-53</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-54\"><a href=\"#table-54\" class=\"excluded-xref\" excluded-id=\"table-54\">#table-54</a></emu-xref>.</p>\n        <emu-table id=\"table-53\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-53\">#table-53</span>:  <i>Iterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>next</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>Iterator</i> has returned an  <i>IteratorResult</i> object whose <code>done</code> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return an  <i>IteratorResult</i> object whose <code>done</code> property is <emu-val>true</emu-val>. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the next function but their interpretation and validity is dependent upon the target  <i>Iterator</i>. The for-of statement and other common users of  <em>Iterators</em> do not pass any arguments, so  <i>Iterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-54\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-54\">#table-54</span>:  <i>Iterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>return</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>Iterator</i>. The returned  <i>IteratorResult</i> object will typically have a <code>done</code> property whose value is <emu-val>true</emu-val>, and a <code>value</code> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>throw</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to <code>throw</code> the value passed as the argument. If the method does not <code>throw</code>, the returned  <i>IteratorResult</i> object will typically have a <code>done</code> property whose value is <emu-val>true</emu-val>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>of</code>, <code>yield*</code>, and array destructuring call these methods after performing an existence check. Most ECMAScript library functions that accept  <i>Iterable</i> objects as arguments also conditionally call them.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number.min_safe_integer": {"num": "20.1.2.8", "title": "#sec-number.min_safe_integer Number.MIN_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.min_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.min_safe_integer\">#sec-number.min_safe_integer</span> Number.MIN_SAFE_INTEGER</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Number.MIN_SAFE_INTEGER</code> is the smallest <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> n such that n and n - 1 are both exactly representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>The value of Number.MIN_SAFE_INTEGER is -9007199254740991 (-(2<sup>53</sup> - 1)).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"AsyncGeneratorFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-regexp.prototype-@@match": {"num": "21.2.5.7", "title": "#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )", "html": "<emu-clause id=\"sec-regexp.prototype-@@match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</span> RegExp.prototype [ @@match ] ( <var>string</var> )</h1>\n        <p>When the <code>@@match</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"global\"</code>)).</li><li>If <var>global</var> is <emu-val>false</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>global</var> is <emu-val>true</emu-val>.</li><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"unicode\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, 0, <emu-val>true</emu-val>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>Repeat,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, then<ol><li>If <var>n</var> = 0, return <emu-val>null</emu-val>.</li><li>Return <var>A</var>.</li></ol></li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"0\"</code>)).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>), <var>matchStr</var>).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>n</var> to <var>n</var> + 1.\n        </li></ol></li></ol></li></ol></li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.match]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The @@match property is used by the <emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref> abstract operation to identify objects that have the basic behaviour of regular expressions. The absence of a @@match property or the existence of such a property whose value does not Boolean coerce to <emu-val>true</emu-val> indicates that the object is not intended to be used as a regular expression object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise-constructor": {"num": "25.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <code>Promise</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Promise</code> behaviour must include a <code>super</code> call to the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp-@@species": {"num": "21.2.4.2", "title": "#sec-get-regexp-@@species get RegExp [ @@species ]", "html": "<emu-clause id=\"sec-get-regexp-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp-@@species\">#sec-get-regexp-@@species</span> get RegExp [ @@species ]</h1>\n        <p><code>RegExp[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>RegExp prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-properties-of-the-typedarray-constructors": {"num": "22.2.5", "title": "#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors", "html": "<emu-clause id=\"sec-properties-of-the-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-typedarray-constructors\">#sec-properties-of-the-typedarray-constructors</span> Properties of the <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name specified for it in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray.bytes_per_element\"><h1><span class=\"secnum\">22.2.5.1</span>#sec-typedarray.bytes_per_element TypedArray.BYTES_PER_ELEMENT</h1>...</div><div id=\"excluded-sec-typedarray.prototype\"><h1><span class=\"secnum\">22.2.5.2</span>#sec-typedarray.prototype TypedArray.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-objects": {"num": "4.2.1", "title": "#sec-objects Objects", "html": "<emu-clause id=\"sec-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-objects\">#sec-objects</span> Objects</h1>\n      <p>Even though ECMAScript includes syntax for class definitions, ECMAScript objects are not fundamentally class-based such as those in C++, Smalltalk, or Java. Instead objects may be created in various ways including via a literal notation or via  <em>constructors</em> which create objects and then execute code that initializes all or part of them by assigning initial values to their properties. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a function that has a property named <code>\"prototype\"</code> that is used to implement  <em>prototype-based inheritance</em> and  <em>shared properties</em>. Objects are created by using constructors in  <b>new</b> expressions; for example, <code>new Date(2009, 11)</code> creates a new Date object. Invoking a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> without using  <b>new</b> has consequences that depend on the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. For example, <code>Date()</code> produces a string representation of the current date and time rather than an object.</p>\n      <p>Every object created by a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has an implicit reference (called the object's  <em>prototype</em>) to the value of its <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property. Furthermore, a prototype may have a non-null implicit reference to its prototype, and so on; this is called the  <em>prototype chain</em>. When a reference is made to a property in an object, that reference is to the property of that name in the first object in the prototype chain that contains a property of that name. In other words, first the object mentioned directly is examined for such a property; if that object contains the named property, that is the property to which the reference refers; if that object does not contain the named property, the prototype for that object is examined next; and so on.</p>\n      <emu-figure id=\"figure-1\" caption=\"Object/Prototype Relationships\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-1\">#figure-1</span>: Object/Prototype Relationships</figcaption>\n        <object data=\"img/figure-1.svg\" height=\"354\" type=\"image/svg+xml\" width=\"719\"> <img alt=\"An image of lots of boxes and arrows.\" height=\"354\" src=\"img/figure-1.png\" width=\"719\"> </object>\n      </figure></emu-figure>\n      <p>In a class-based object-oriented language, in general, state is carried by instances, methods are carried by classes, and inheritance is only of structure and behaviour. In ECMAScript, the state and methods are carried by objects, while structure, behaviour, and state are all inherited.</p>\n      <p>All objects that do not directly contain a particular property that their prototype contains share that property and its value. Figure 1 illustrates this:</p>\n      <p><b>CF</b> is a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (and also an object). Five objects have been created by using <code>new</code> expressions:  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, and  <b>cf<sub>5</sub></b>. Each of these objects contains properties named <code>q1</code> and <code>q2</code>. The dashed lines represent the implicit prototype relationship; so, for example,  <b>cf<sub>3</sub></b>'s prototype is  <b>CF<sub>p</sub></b>. The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>,  <b>CF</b>, has two properties itself, named <code>P1</code> and <code>P2</code>, which are not visible to  <b>CF<sub>p</sub></b>,  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, or  <b>cf<sub>5</sub></b>. The property named <code>CFP1</code> in  <b>CF<sub>p</sub></b> is shared by  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, and  <b>cf<sub>5</sub></b> (but not by  <b>CF</b>), as are any properties found in  <b>CF<sub>p</sub></b>'s implicit prototype chain that are not named <code>q1</code>, <code>q2</code>, or <code>CFP1</code>. Notice that there is no implicit prototype link between  <b>CF</b> and  <b>CF<sub>p</sub></b>.</p>\n      <p>Unlike most class-based object languages, properties can be added to objects dynamically by assigning values to them. That is, constructors are not required to name or assign values to all or any of the constructed object's properties. In the above diagram, one could add a new shared property for  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, and  <b>cf<sub>5</sub></b> by assigning a new value to the property in  <b>CF<sub>p</sub></b>.</p>\n      <p>Although ECMAScript objects are not inherently class-based, it is often convenient to define class-like abstractions based upon a common pattern of <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> functions, prototype objects, and methods. The ECMAScript built-in objects themselves follow such a class-like pattern. Beginning with ECMAScript 2015, the ECMAScript language includes syntactic class definitions that permit programmers to concisely define objects that conform to the same class-like abstraction pattern used by the built-in objects.</p>\n    </emu-clause>\n\n    "}, "sec-function-environment-records": {"num": "8.1.1.3", "title": "#sec-function-environment-records Function Environment Records", "html": "<emu-clause id=\"sec-function-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records\">#sec-function-environment-records</span> Function Environment Records</h1>\n        <p>A  <dfn>function Environment Record</dfn> is a declarative <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that is used to represent the top-level scope of a function and, if the function is not an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, provides a <code>this</code> binding. If a function is not an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> function and references <code>super</code>, its function Environment Record also contains the state that is used to perform <code>super</code> method invocations from within the function.</p>\n        <p>Function Environment Records have the additional state fields listed in  <emu-xref href=\"#table-16\"><a href=\"#table-16\" class=\"excluded-xref\" excluded-id=\"table-16\">#table-16</a></emu-xref>.</p>\n        <emu-table id=\"table-16\" caption=\"Additional Fields of Function Environment Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-16\">#table-16</span>: Additional Fields of Function Environment Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ThisValue]]\n              \n              </td>\n              <td>\n                Any\n              \n              </td>\n              <td>\n                This is the <emu-val>this</emu-val> value used for this invocation of the function.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ThisBindingStatus]]\n              \n              </td>\n              <td>\n                <code>\"lexical\"</code> | <code>\"initialized\"</code> | <code>\"uninitialized\"</code>\n              \n              </td>\n              <td>\n                If the value is <code>\"lexical\"</code>, this is an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> and does not have a local this value.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[FunctionObject]]\n              \n              </td>\n              <td>\n                Object\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> whose invocation caused this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> to be created.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[HomeObject]]\n              \n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                If the associated function has <code>super</code> property accesses and is not an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, [[HomeObject]] is the object that the function is bound to as a method. The default value for [[HomeObject]] is <emu-val>undefined</emu-val>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[NewTarget]]\n              \n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                If this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> was created by the [[Construct]] internal method, [[NewTarget]] is the value of the [[Construct]] <var>newTarget</var> parameter. Otherwise, its value is <emu-val>undefined</emu-val>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>Function Environment Records support all of the declarative <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> methods listed in  <emu-xref href=\"#table-15\"><a href=\"#table-15\" class=\"excluded-xref\" excluded-id=\"table-15\">#table-15</a></emu-xref> and share the same specifications for all of those methods except for HasThisBinding and HasSuperBinding. In addition, function Environment Records support the methods listed in  <emu-xref href=\"#table-17\"><a href=\"#table-17\" class=\"excluded-xref\" excluded-id=\"table-17\">#table-17</a></emu-xref>:</p>\n        <emu-table id=\"table-17\" caption=\"Additional Methods of Function Environment Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-17\">#table-17</span>: Additional Methods of Function Environment Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              \n              </th>\n              <th>\n                Purpose\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                BindThisValue(V)\n              \n              </td>\n              <td>\n                Set the [[ThisValue]] and record that it has been initialized.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                GetThisBinding()\n              \n              </td>\n              <td>\n                Return the value of this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s <code>this</code> binding. Throws a <emu-val>ReferenceError</emu-val> if the <code>this</code> binding has not been initialized.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                GetSuperBase()\n              \n              </td>\n              <td>\n                Return the object that is the base for <code>super</code> property accesses bound in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. The object is derived from this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s [[HomeObject]] field. The value <emu-val>undefined</emu-val> indicates that <code>super</code> property accesses will produce runtime errors.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>The behaviour of the additional concrete specification methods for function Environment Records is defined by the following algorithms:</p>\n\n        <div id=\"excluded-sec-bindthisvalue\"><h1><span class=\"secnum\">8.1.1.3.1</span>#sec-bindthisvalue BindThisValue ( V )</h1>...</div><div id=\"excluded-sec-function-environment-records-hasthisbinding\"><h1><span class=\"secnum\">8.1.1.3.2</span>#sec-function-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-function-environment-records-hassuperbinding\"><h1><span class=\"secnum\">8.1.1.3.3</span>#sec-function-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-function-environment-records-getthisbinding\"><h1><span class=\"secnum\">8.1.1.3.4</span>#sec-function-environment-records-getthisbinding GetThisBinding ( )</h1>...</div><div id=\"excluded-sec-getsuperbase\"><h1><span class=\"secnum\">8.1.1.3.5</span>#sec-getsuperbase GetSuperBase ( )</h1>...</div></emu-clause>\n\n      "}, "sec-nativeerror-object-structure": {"num": "19.5.6", "title": "#sec-nativeerror-object-structure NativeError Object Structure", "html": "<emu-clause id=\"sec-nativeerror-object-structure\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror-object-structure\">#sec-nativeerror-object-structure</span> <var>NativeError</var> Object Structure</h1>\n      <p>When an ECMAScript implementation detects a runtime error, it throws a new instance of one of the <var>NativeError</var> objects defined in  <emu-xref href=\"#sec-native-error-types-used-in-this-standard\"><a href=\"#sec-native-error-types-used-in-this-standard\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard\">#sec-native-error-types-used-in-this-standard</a></emu-xref>. Each of these objects has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>NativeError</var>, in the <code>name</code> property of the prototype object, and in the implementation-defined <code>message</code> property of the prototype object.</p>\n      <p>For each error object, references to <var>NativeError</var> in the definition should be replaced with the appropriate error object name from  <emu-xref href=\"#sec-native-error-types-used-in-this-standard\"><a href=\"#sec-native-error-types-used-in-this-standard\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard\">#sec-native-error-types-used-in-this-standard</a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-nativeerror-constructors\"><h1><span class=\"secnum\">19.5.6.1</span>#sec-nativeerror-constructors The NativeError Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-nativeerror-constructors\"><h1><span class=\"secnum\">19.5.6.2</span>#sec-properties-of-the-nativeerror-constructors Properties of the NativeError Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-nativeerror-prototype-objects\"><h1><span class=\"secnum\">19.5.6.3</span>#sec-properties-of-the-nativeerror-prototype-objects Properties of the NativeError Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-nativeerror-instances\"><h1><span class=\"secnum\">19.5.6.4</span>#sec-properties-of-nativeerror-instances Properties of NativeError Instances</h1>...</div></emu-clause>\n  "}, "sec-asynciterator-interface": {"num": "25.1.1.4", "title": "#sec-asynciterator-interface The  AsyncIterator Interface", "html": "<emu-clause id=\"sec-asynciterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciterator-interface\">#sec-asynciterator-interface</span> The  <i>AsyncIterator</i> Interface</h1>\n        <p>An object that implements the  <i>AsyncIterator</i> interface must include the properties in  <emu-xref href=\"#table-async-iterator-required\"><a href=\"#table-async-iterator-required\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-async-iterator-optional\"><a href=\"#table-async-iterator-optional\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</a></emu-xref>.</p>\n        <emu-table id=\"table-async-iterator-required\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</span>:  <i>AsyncIterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><code>next</code></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>AsyncIterator</i> has returned a promise for an  <i>IteratorResult</i> object whose <code>done</code> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return a promise for an  <i>IteratorResult</i> object whose <code>done</code> property is <emu-val>true</emu-val>. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <code>value</code> property whose value is not a promise (or \"thenable\"). However, this requirement is also not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the next function but their interpretation and validity is dependent upon the target  <i>AsyncIterator</i>. The <code>for</code>-<code>await</code>-<code>of</code> statement and other common users of  <em>AsyncIterators</em> do not pass any arguments, so  <i>AsyncIterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-async-iterator-optional\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</span>:  <i>AsyncIterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><code>return</code></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>AsyncIterator</i>. The returned promise will fulfill with an  <i>IteratorResult</i> object which will typically have a <code>done</code> property whose value is <emu-val>true</emu-val>, and a <code>value</code> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <code>value</code> property whose value is not a promise (or \"thenable\"). If the argument value is used in the typical manner, then if it is a rejected promise, a promise rejected with the same reason should be returned; if it is a fulfilled promise, then its fulfillment value should be used as the <code>value</code> property of the returned promise's  <i>IteratorResult</i> object fulfillment value. However, these requirements are also not enforced.</p>\n              </td>\n            </tr>\n            <tr>\n              <td><code>throw</code></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to return a rejected promise which rejects with the value passed as the argument.</p>\n\n                <p>If the returned promise is fulfilled, the  <i>IteratorResult</i> fulfillment value will typically have a <code>done</code> property whose value is <emu-val>true</emu-val>. Additionally, it should have a <code>value</code> property whose value is not a promise (or \"thenable\"), but this requirement is not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>await</code>-<code>of</code> and <code>yield*</code> call these methods after performing an existence check.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number-constructor": {"num": "20.1.1", "title": "#sec-number-constructor The Number Constructor", "html": "<emu-clause id=\"sec-number-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</span> The Number Constructor</h1>\n      <p>The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Number%</dfn>.</li>\n        <li>is the initial value of the <code>Number</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Number object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Number</code> behaviour must include a <code>super</code> call to the <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[NumberData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-number-constructor-number-value\"><h1><span class=\"secnum\">20.1.1.1</span>#sec-number-constructor-number-value Number ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-globalthis": {"num": "18.1.1", "title": "#sec-globalthis globalThis", "html": "<emu-clause id=\"sec-globalthis\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-globalthis\">#sec-globalthis</span> globalThis</h1>\n      <p>The initial value of the <code>globalThis</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> in a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> <var>realm</var> is <var>realm</var>.[[GlobalEnv]]'s <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">EnvironmentRecord</a></emu-xref>'s [[GlobalThisValue]].</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n\n    "}, "sec-hasrestrictedglobalproperty": {"num": "8.1.1.4.14", "title": "#sec-hasrestrictedglobalproperty HasRestrictedGlobalProperty ( N )", "html": "<emu-clause id=\"sec-hasrestrictedglobalproperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasrestrictedglobalproperty\">#sec-hasrestrictedglobalproperty</span> HasRestrictedGlobalProperty ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasRestrictedGlobalProperty for global Environment Records determines if the argument identifier is the name of a property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that must not be shadowed by a global lexical binding:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the global <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.\n          </li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Properties may exist upon a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that were directly created rather than being declared using a var or function declaration. A global lexical binding may not be created that has the same name as a non-configurable property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. The global property <code>undefined</code> is an example of such a property.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-getprototypefromconstructor": {"num": "9.1.14", "title": "#sec-getprototypefromconstructor GetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )", "html": "<emu-clause id=\"sec-getprototypefromconstructor\" aoid=\"GetPrototypeFromConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getprototypefromconstructor\">#sec-getprototypefromconstructor</span> GetPrototypeFromConstructor ( <var>constructor</var>, <var>intrinsicDefaultProto</var> )</h1>\n      <p>The abstract operation GetPrototypeFromConstructor determines the [[Prototype]] value that should be used to create an object corresponding to a specific <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. The value is retrieved from the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>prototype</code> property, if it exists. Otherwise the intrinsic named by <var>intrinsicDefaultProto</var> is used for [[Prototype]]. This abstract operation performs the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>intrinsicDefaultProto</var> is a String value that is this specification's name of an intrinsic object. The corresponding object must be an intrinsic that is intended to be used as the [[Prototype]] value of an object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>constructor</var>) is <emu-val>true</emu-val>.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>constructor</var>, <code>\"prototype\"</code>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>proto</var>) is not Object, then<ol><li>Let <var>realm</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>constructor</var>).</li><li>Set <var>proto</var> to <var>realm</var>'s intrinsic object named <var>intrinsicDefaultProto</var>.</li></ol></li><li>Return <var>proto</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>If <var>constructor</var> does not supply a [[Prototype]] value, the default value that is used is obtained from the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <var>constructor</var> function rather than from the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-sharedarraybuffer-@@species": {"num": "24.2.3.2", "title": "#sec-sharedarraybuffer-@@species get SharedArrayBuffer [ @@species ]", "html": "<emu-clause id=\"sec-sharedarraybuffer-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-@@species\">#sec-sharedarraybuffer-@@species</span> get SharedArrayBuffer [ @@species ]</h1>\n        <p><code>SharedArrayBuffer[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n      </emu-clause>\n    "}, "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact": {"num": "D", "title": "#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact", "html": "<emu-annex id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact</span> Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact</h1>\n  <p><emu-xref href=\"#sec-candeclareglobalvar\"><a href=\"#sec-candeclareglobalvar\" class=\"excluded-xref\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</a></emu-xref>-<emu-xref href=\"#sec-createglobalfunctionbinding\"><a href=\"#sec-createglobalfunctionbinding\" class=\"excluded-xref\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</a></emu-xref> Edition 5 and 5.1 used a property existence test to determine whether a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> property corresponding to a new global declaration already existed. ECMAScript 2015 uses an own property existence test. This corresponds to what has been most commonly implemented by web browsers.</p>\n  <p><emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>: The 5<sup>th</sup> Edition moved the capture of the current array length prior to the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> conversion of the <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> or new length value. However, the captured length value could become invalid if the conversion process has the side-effect of changing the array length. ECMAScript 2015 specifies that the current array length must be captured after the possible occurrence of such side-effects.</p>\n  <p><emu-xref href=\"#sec-timeclip\"><a href=\"#sec-timeclip\" class=\"excluded-xref\" excluded-id=\"sec-timeclip\">#sec-timeclip</a></emu-xref>: Previous editions permitted the <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref> abstract operation to return either <emu-val>+0</emu-val> or <emu-val>-0</emu-val> as the representation of a 0 <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>. ECMAScript 2015 specifies that <emu-val>+0</emu-val> always returned. This means that for ECMAScript 2015 the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> of a Date object is never observably <emu-val>-0</emu-val> and methods that return time values never return <emu-val>-0</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>: If a UTC offset representation is not present, the local time zone is used. Edition 5.1 incorrectly stated that a missing time zone should be interpreted as <code>\"z\"</code>.</p>\n  <p><emu-xref href=\"#sec-date.prototype.toisostring\"><a href=\"#sec-date.prototype.toisostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.toisostring\">#sec-date.prototype.toisostring</a></emu-xref>: If the year cannot be represented using the Date Time String Format specified in  <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref> a RangeError exception is thrown. Previous editions did not specify the behaviour for that case.</p>\n  <p><emu-xref href=\"#sec-date.prototype.tostring\"><a href=\"#sec-date.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</a></emu-xref>: Previous editions did not specify the value returned by Date.prototype.toString when <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref> is <emu-val>NaN</emu-val>. ECMAScript 2015 specifies the result to be the String value is <code>\"Invalid Date\"</code>.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref>,  <emu-xref href=\"#sec-escaperegexppattern\"><a href=\"#sec-escaperegexppattern\" class=\"excluded-xref\" excluded-id=\"sec-escaperegexppattern\">#sec-escaperegexppattern</a></emu-xref>: Any LineTerminator code points in the value of the <code>source</code> property of a RegExp instance must be expressed using an escape sequence. Edition 5.1 only required the escaping of <code>\"/\"</code>.</p>\n  <p><emu-xref href=\"#sec-regexp.prototype-@@match\"><a href=\"#sec-regexp.prototype-@@match\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</a></emu-xref>,  <emu-xref href=\"#sec-regexp.prototype-@@replace\"><a href=\"#sec-regexp.prototype-@@replace\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</a></emu-xref>: In previous editions, the specifications for <code>String.prototype.match</code> and <code>String.prototype.replace</code> was incorrect for cases where the pattern argument was a RegExp value whose <code>global</code> is flag set. The previous specifications stated that for each attempt to match the pattern, if <code>lastIndex</code> did not change it should be incremented by 1. The correct behaviour is that <code>lastIndex</code> should be incremented by one only if the pattern matched the empty string.</p>\n  <p><emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>,  <emu-xref href=\"#sec-sortcompare\"><a href=\"#sec-sortcompare\" class=\"excluded-xref\" excluded-id=\"sec-sortcompare\">#sec-sortcompare</a></emu-xref>: Previous editions did not specify how a <emu-val>NaN</emu-val> value returned by a <var>comparefn</var> was interpreted by <code>Array.prototype.sort</code>. ECMAScript 2015 specifies that such as value is treated as if <emu-val>+0</emu-val> was returned from the <var>comparefn</var>. ECMAScript 2015 also specifies that <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is applied to the result returned by a <var>comparefn</var>. In previous editions, the effect of a <var>comparefn</var> result that is not a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> was implementation-dependent. In practice, implementations call <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>.</p>\n</emu-annex>\n\n"}, "sec-string.prototype-@@iterator": {"num": "21.1.3.32", "title": "#sec-string.prototype-@@iterator String.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-string.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype-@@iterator\">#sec-string.prototype-@@iterator</span> String.prototype [ @@iterator ] ( )</h1>\n        <p>When the <code>@@iterator</code> method is called it returns an Iterator object (<emu-xref href=\"#sec-iterator-interface\"><a href=\"#sec-iterator-interface\" class=\"excluded-xref\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</a></emu-xref>) that iterates over the code points of a String value, returning each code point as a String value. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Return <emu-xref aoid=\"CreateStringIterator\"><a href=\"#sec-createstringiterator\">CreateStringIterator</a></emu-xref>(<var>S</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.iterator]\"</code>.</p>\n      </emu-clause>\n    "}, "sec-setfunctionname": {"num": "9.2.13", "title": "#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )", "html": "<emu-clause id=\"sec-setfunctionname\" aoid=\"SetFunctionName\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setfunctionname\">#sec-setfunctionname</span> SetFunctionName ( <var>F</var>, <var>name</var> [ , <var>prefix</var> ] )</h1>\n      <p>The abstract operation SetFunctionName requires a Function argument <var>F</var>, a String or Symbol argument <var>name</var> and optionally a String argument <var>prefix</var>. This operation adds a <code>name</code> property to <var>F</var> by performing the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <code>name</code> own property.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is either Symbol or String.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>prefix</var> is present, then <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>prefix</var>) is String.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is Symbol, then<ol><li>Let <var>description</var> be <var>name</var>'s [[Description]] value.</li><li>If <var>description</var> is <emu-val>undefined</emu-val>, set <var>name</var> to the empty String.</li><li>Else, set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <code>\"[\"</code>, <var>description</var>, and <code>\"]\"</code>.</li></ol></li><li>If <var>prefix</var> is present, then<ol><li>Set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>prefix</var>, the code unit 0x0020 (SPACE), and <var>name</var>.</li></ol></li><li>Return !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"name\"</code>, PropertyDescriptor { [[Value]]: <var>name</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-get-map-@@species": {"num": "23.1.2.2", "title": "#sec-get-map-@@species get Map [ @@species ]", "html": "<emu-clause id=\"sec-get-map-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-map-@@species\">#sec-get-map-@@species</span> get Map [ @@species ]</h1>\n        <p><code>Map[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Methods that create derived collection objects should call @@species to determine the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use to create the derived objects. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride @@species to change the default <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> assignment.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-weakmap.prototype-@@tostringtag": {"num": "23.3.3.6", "title": "#sec-weakmap.prototype-@@tostringtag WeakMap.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-weakmap.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap.prototype-@@tostringtag\">#sec-weakmap.prototype-@@tostringtag</span> WeakMap.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"WeakMap\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-get-set-@@species": {"num": "23.2.2.2", "title": "#sec-get-set-@@species get Set [ @@species ]", "html": "<emu-clause id=\"sec-get-set-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-set-@@species\">#sec-get-set-@@species</span> get Set [ @@species ]</h1>\n        <p><code>Set[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Methods that create derived collection objects should call @@species to determine the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use to create the derived objects. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride @@species to change the default <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> assignment.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-function-definitions-runtime-semantics-evaluation": {"num": "14.1.22", "title": "#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-function-definitions-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-runtime-semantics-evaluation\">#sec-function-definitions-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>An alternative semantics is provided in  <emu-xref href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\"><a href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" class=\"excluded-xref\" excluded-id=\"sec-block-level-function-declarations-web-legacy-compatibility-semantics\">#sec-block-level-function-declarations-web-legacy-compatibility-semantics</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>scope</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"FunctionCreate\"><a href=\"#sec-functioncreate\">FunctionCreate</a></emu-xref>(<emu-const>Normal</emu-const>, <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <var>scope</var>).</li><li>Perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>closure</var>).</li><li>Set <var>closure</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>.</li><li>Return <var>closure</var>.\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>funcEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>scope</var>).</li><li>Let <var>envRec</var> be <var>funcEnv</var>'s <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">EnvironmentRecord</a></emu-xref>.</li><li>Let <var>name</var> be StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Perform <var>envRec</var>.CreateImmutableBinding(<var>name</var>, <emu-val>false</emu-val>).</li><li>Let <var>closure</var> be <emu-xref aoid=\"FunctionCreate\"><a href=\"#sec-functioncreate\">FunctionCreate</a></emu-xref>(<emu-const>Normal</emu-const>, <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <var>funcEnv</var>).</li><li>Perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>closure</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>name</var>).</li><li>Set <var>closure</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>.</li><li>Perform <var>envRec</var>.InitializeBinding(<var>name</var>, <var>closure</var>).</li><li>Return <var>closure</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> can be referenced from inside the <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>'s <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> to allow the function to call itself recursively. However, unlike in a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> cannot be referenced from and does not affect the scope enclosing the <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>A <code>prototype</code> property is automatically created for every function defined using a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, to allow for the possibility that the function will be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionStatementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-boolean-constructor": {"num": "19.3.1", "title": "#sec-boolean-constructor The Boolean Constructor", "html": "<emu-clause id=\"sec-boolean-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</span> The Boolean Constructor</h1>\n      <p>The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Boolean%</dfn>.</li>\n        <li>is the initial value of the <code>Boolean</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Boolean object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Boolean</code> behaviour must include a <code>super</code> call to the <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[BooleanData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-boolean-constructor-boolean-value\"><h1><span class=\"secnum\">19.3.1.1</span>#sec-boolean-constructor-boolean-value Boolean ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-__proto__-property-names-in-object-initializers": {"num": "B.3.1", "title": "#sec-__proto__-property-names-in-object-initializers __proto__ Property Names in Object Initializers", "html": "<emu-annex id=\"sec-__proto__-property-names-in-object-initializers\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-__proto__-property-names-in-object-initializers\">#sec-__proto__-property-names-in-object-initializers</span> __proto__ Property Names in Object Initializers</h1>\n      <p>The following Early Error rule is added to those in  <emu-xref href=\"#sec-object-initializer-static-semantics-early-errors\"><a href=\"#sec-object-initializer-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-static-semantics-early-errors\">#sec-object-initializer-static-semantics-early-errors</a></emu-xref>. When <emu-nt><a href=\"#prod-annexB-ObjectLiteral\">ObjectLiteral</a></emu-nt> appears in a context where <emu-nt><a href=\"#prod-ObjectAssignmentPattern\">ObjectAssignmentPattern</a></emu-nt> is required the Early Error rule is  <b>not</b> applied. In addition, it is not applied when initially parsing a <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> or a <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</p>\n      <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\" id=\"prod-annexB-ObjectLiteral\">\n    <emu-nt><a href=\"#prod-annexB-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if PropertyNameList of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> contains any duplicate entries for <code>\"__proto__\"</code> and at least two of those entries were obtained from productions of the form  <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\" id=\"prod-annexB-PropertyDefinition\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>.\n        \n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> returned by PropertyNameList does not include string literal property names defined as using a <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt>.</p>\n      </div></emu-note>\n      <p>In  <emu-xref href=\"#sec-object-initializer-runtime-semantics-propertydefinitionevaluation\"><a href=\"#sec-object-initializer-runtime-semantics-propertydefinitionevaluation\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-runtime-semantics-propertydefinitionevaluation\">#sec-object-initializer-runtime-semantics-propertydefinitionevaluation</a></emu-xref> the PropertyDefinitionEvaluation algorithm for the production\n        \n        <br>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <br>\n        is replaced with the following definition:</p>\n      <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>If <var>propKey</var> is the String value <code>\"__proto__\"</code> and if IsComputedPropertyKey(<emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>) is <emu-val>false</emu-val>, then<ol><li>Let <var>isProtoSetter</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>isProtoSetter</var> be <emu-val>false</emu-val>.</li></ol></li><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>) is <emu-val>true</emu-val> and <var>isProtoSetter</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>propValue</var> be NamedEvaluation of <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> with argument <var>propKey</var>.</li></ol></li><li>Else,<ol><li>Let <var>exprValueRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValueRef</var>).</li></ol></li><li>If <var>isProtoSetter</var> is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>propValue</var>) is either Object or Null, then<ol><li>Return <var>object</var>.[[SetPrototypeOf]](<var>propValue</var>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>enumerable</var> is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>object</var> is an ordinary, extensible object with no non-configurable properties.</li><li>Return !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>object</var>, <var>propKey</var>, <var>propValue</var>).\n      </li></ol></emu-alg>\n    </emu-annex>\n\n    "}, "sec-async-function-constructor-properties": {"num": "25.7.2", "title": "#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor-properties\">#sec-async-function-constructor-properties</span> Properties of the AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"AsyncFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-length\"><h1><span class=\"secnum\">25.7.2.1</span>#sec-async-function-constructor-length AsyncFunction.length</h1>...</div><div id=\"excluded-sec-async-function-constructor-prototype\"><h1><span class=\"secnum\">25.7.2.2</span>#sec-async-function-constructor-prototype AsyncFunction.prototype</h1>...</div></emu-clause>\n    "}, "sec-built-in-function-objects": {"num": "9.3", "title": "#sec-built-in-function-objects Built-in Function Objects", "html": "<emu-clause id=\"sec-built-in-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</span> Built-in Function Objects</h1>\n    <p>The built-in function objects defined in this specification may be implemented as either ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) whose behaviour is provided using ECMAScript code or as implementation provided function exotic objects whose behaviour is provided in some other manner. In either case, the effect of calling such functions must conform to their specifications. An implementation may also provide additional built-in function objects that are not defined in this specification.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> it must have the ordinary object behaviour specified in  <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. All such function exotic objects also have [[Prototype]], [[Extensible]], [[Realm]], and [[ScriptOrModule]] internal slots.</p>\n    <p>Unless otherwise specified every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref> object as the initial value of its [[Prototype]] internal slot.</p>\n    <p>The behaviour specified for each built-in function via algorithm steps or other means is the specification of the function body behaviour for both [[Call]] and [[Construct]] invocations of the function. However, [[Construct]] invocation is not supported by all built-in functions. For each built-in function, when invoked with [[Call]], the [[Call]] <var>thisArgument</var> provides the <emu-val>this</emu-val> value, the [[Call]] <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>. When invoked with [[Construct]], the <emu-val>this</emu-val> value is uninitialized, the [[Construct]] <var>argumentsList</var> provides the named parameters, and the [[Construct]] <var>newTarget</var> parameter provides the NewTarget value. If the built-in function is implemented as an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> then this specified behaviour must be implemented by the ECMAScript code that is the body of the function. Built-in functions that are ECMAScript function objects must be strict functions. If a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has any [[Call]] behaviour other than throwing a <emu-val>TypeError</emu-val> exception, an ECMAScript implementation of the function must be done in a manner that does not cause the function's [[FunctionKind]] internal slot to have the value <code>\"classConstructor\"</code>.</p>\n    <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function. When a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called as part of a <code>new</code> expression the <var>argumentsList</var> parameter of the invoked [[Construct]] internal method provides the values for the built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s named parameters.</p>\n    <p>Built-in functions that are not constructors do not have a <code>prototype</code> property unless otherwise specified in the description of a particular function.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is not implemented as an ECMAScript function it must provide [[Call]] and [[Construct]] internal methods that conform to the following definitions:</p>\n\n    <div id=\"excluded-sec-built-in-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.3.1</span>#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-built-in-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.3.2</span>#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-createbuiltinfunction\"><h1><span class=\"secnum\">9.3.3</span>#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )</h1>...</div></emu-clause>\n\n  "}, "sec-regexp.prototype-@@search": {"num": "21.2.5.11", "title": "#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )", "html": "<emu-clause id=\"sec-regexp.prototype-@@search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@search\">#sec-regexp.prototype-@@search</span> RegExp.prototype [ @@search ] ( <var>string</var> )</h1>\n        <p>When the <code>@@search</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>previousLastIndex</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>previousLastIndex</var>, 0) is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>Let <var>currentLastIndex</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>currentLastIndex</var>, <var>previousLastIndex</var>) is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, <var>previousLastIndex</var>, <emu-val>true</emu-val>).</li></ol></li><li>If <var>result</var> is <emu-val>null</emu-val>, return -1.</li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"index\"</code>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.search]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>lastIndex</code> and <code>global</code> properties of this RegExp object are ignored when performing the search. The <code>lastIndex</code> property is left unchanged.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number.max_safe_integer": {"num": "20.1.2.6", "title": "#sec-number.max_safe_integer Number.MAX_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.max_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.max_safe_integer\">#sec-number.max_safe_integer</span> Number.MAX_SAFE_INTEGER</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Number.MAX_SAFE_INTEGER</code> is the largest <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> n such that n and n + 1 are both exactly representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>The value of Number.MAX_SAFE_INTEGER is 9007199254740991 (2<sup>53</sup> - 1).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-createdynamicfunction": {"num": "19.2.1.1.1", "title": "#sec-createdynamicfunction Runtime Semantics: CreateDynamicFunction ( constructor, newTarget, kind, args )", "html": "<emu-clause id=\"sec-createdynamicfunction\" aoid=\"CreateDynamicFunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</span> Runtime Semantics: CreateDynamicFunction ( <var>constructor</var>, <var>newTarget</var>, <var>kind</var>, <var>args</var> )</h1>\n          <p>The abstract operation CreateDynamicFunction is called with arguments <var>constructor</var>, <var>newTarget</var>, <var>kind</var>, and <var>args</var>. <var>constructor</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is performing this action, <var>newTarget</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that <code>new</code> was initially applied to, <var>kind</var> is either <code>\"normal\"</code>, <code>\"generator\"</code>, <code>\"async\"</code>, or <code>\"async generator\"</code>, and <var>args</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the actual argument values that were passed to <var>constructor</var>. The following steps are taken:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> has at least two elements.</li><li>Let <var>callerContext</var> be the second to top element of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Let <var>callerRealm</var> be <var>callerContext</var>'s <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref>.</li><li>Let <var>calleeRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Perform ?&#160;<emu-xref aoid=\"HostEnsureCanCompileStrings\"><a href=\"#sec-hostensurecancompilestrings\">HostEnsureCanCompileStrings</a></emu-xref>(<var>callerRealm</var>, <var>calleeRealm</var>).</li><li>If <var>newTarget</var> is <emu-val>undefined</emu-val>, set <var>newTarget</var> to <var>constructor</var>.</li><li>If <var>kind</var> is <code>\"normal\"</code>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%Function.prototype%\"</code>.</li></ol></li><li>Else if <var>kind</var> is <code>\"generator\"</code>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%Generator%\"</code>.</li></ol></li><li>Else if <var>kind</var> is <code>\"async\"</code>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%AsyncFunction.prototype%\"</code>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>kind</var> is <code>\"async generator\"</code>.</li><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%AsyncGenerator%\"</code>.</li></ol></li><li>Let <var>argCount</var> be the number of elements in <var>args</var>.</li><li>Let <var>P</var> be the empty String.</li><li>If <var>argCount</var> = 0, let <var>bodyText</var> be the empty String.</li><li>Else if <var>argCount</var> = 1, let <var>bodyText</var> be <var>args</var>[0].</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>argCount</var> &gt; 1.</li><li>Let <var>firstArg</var> be <var>args</var>[0].</li><li>Set <var>P</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>firstArg</var>).</li><li>Let <var>k</var> be 1.</li><li>Repeat, while <var>k</var> &lt; <var>argCount</var> - 1<ol><li>Let <var>nextArg</var> be <var>args</var>[<var>k</var>].</li><li>Let <var>nextArgString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextArg</var>).</li><li>Set <var>P</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the previous value of <var>P</var>, <code>\",\"</code> (a comma), and <var>nextArgString</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Let <var>bodyText</var> be <var>args</var>[<var>k</var>].</li></ol></li><li>Set <var>bodyText</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>bodyText</var>).</li><li>Perform the following substeps in an implementation-dependent order, possibly interleaving parsing and error detection:<ol><li>Let <var>parameters</var> be the result of parsing <var>P</var>, interpreted as UTF-16 encoded Unicode text as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, using <var>parameterGoal</var> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>. Throw a <emu-val>SyntaxError</emu-val> exception if the parse fails.</li><li>Let <var>body</var> be the result of parsing <var>bodyText</var>, interpreted as UTF-16 encoded Unicode text as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, using <var>goal</var> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>. Throw a <emu-val>SyntaxError</emu-val> exception if the parse fails.</li><li>Let <var>strict</var> be ContainsUseStrict of <var>body</var>.</li><li>If any <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> errors are detected for <var>parameters</var> or <var>body</var>, throw a <emu-val>SyntaxError</emu-val> exception. If <var>strict</var> is <emu-val>true</emu-val>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> are applied.</li><li>If <var>strict</var> is <emu-val>true</emu-val> and IsSimpleParameterList of <var>parameters</var> is <emu-val>false</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If any element of the BoundNames of <var>parameters</var> also occurs in the LexicallyDeclaredNames of <var>body</var>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>kind</var> is <code>\"generator\"</code> or <code>\"async generator\"</code>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>kind</var> is <code>\"async\"</code> or <code>\"async generator\"</code>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val>, then<ol><li>If BoundNames of <var>parameters</var> contains any duplicate elements, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li></ol></li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>fallbackProto</var>).</li><li>Let <var>F</var> be <emu-xref aoid=\"FunctionAllocate\"><a href=\"#sec-functionallocate\">FunctionAllocate</a></emu-xref>(<var>proto</var>, <var>kind</var>).</li><li>Let <var>realmF</var> be <var>F</var>.[[Realm]].</li><li>Let <var>scope</var> be <var>realmF</var>.[[GlobalEnv]].</li><li>Perform <emu-xref aoid=\"FunctionInitialize\"><a href=\"#sec-functioninitialize\">FunctionInitialize</a></emu-xref>(<var>F</var>, <emu-const>Normal</emu-const>, <var>parameters</var>, <var>body</var>, <var>scope</var>).</li><li>If <var>kind</var> is <code>\"generator\"</code>, then<ol><li>Let <var>prototype</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Generator.prototype%).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"prototype\"</code>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <code>\"async generator\"</code>, then<ol><li>Let <var>prototype</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%AsyncGenerator.prototype%).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"prototype\"</code>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <code>\"normal\"</code>, perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>).</li><li>NOTE: Async functions are not constructable and do not have a [[Construct]] internal method or a <code>\"prototype\"</code> property.</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <code>\"anonymous\"</code>).</li><li>Let <var>prefix</var> be the prefix associated with <var>kind</var> in <emu-xref href=\"#table-dynamic-function-sourcetext-prefixes\"><a href=\"#table-dynamic-function-sourcetext-prefixes\" class=\"excluded-xref\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</a></emu-xref>.</li><li>Let <var>sourceText</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>prefix</var>, <code>\" anonymous(\"</code>, <var>P</var>, 0x000A (LINE FEED), <code>\") {\"</code>, 0x000A (LINE FEED), <var>bodyText</var>, 0x000A (LINE FEED), and <code>\"}\"</code>.</li><li>Set <var>F</var>.[[SourceText]] to <var>sourceText</var>.</li><li>Return <var>F</var>.\n          </li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>A <code>prototype</code> property is created for every non-async function created using CreateDynamicFunction to provide for the possibility that the function will be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n          </div></emu-note>\n\n          <emu-table id=\"table-dynamic-function-sourcetext-prefixes\" caption=\"Dynamic Function SourceText Prefixes\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</span>: Dynamic Function SourceText Prefixes</figcaption>\n            <table>\n              <tbody>\n                <tr><th>Kind</th><th>Prefix</th></tr>\n                <tr><td><code>\"normal\"</code></td><td><code>\"function\"</code></td></tr>\n                <tr><td><code>\"generator\"</code></td><td><code>\"function*\"</code></td></tr>\n                <tr><td><code>\"async\"</code></td><td><code>\"async function\"</code></td></tr>\n                <tr><td><code>\"async generator\"</code></td><td><code>\"async function*\"</code></td></tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </emu-clause>\n      "}, "sec-map-constructor": {"num": "23.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <code>Map</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Map</code> behaviour must include a <code>super</code> call to the <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">23.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-additional-properties-of-the-string.prototype-object": {"num": "B.2.3", "title": "#sec-additional-properties-of-the-string.prototype-object Additional Properties of the String.prototype Object", "html": "<emu-annex id=\"sec-additional-properties-of-the-string.prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additional-properties-of-the-string.prototype-object\">#sec-additional-properties-of-the-string.prototype-object</span> Additional Properties of the String.prototype Object</h1>\n\n      <div id=\"excluded-sec-string.prototype.substr\"><h1><span class=\"secnum\">B.2.3.1</span>#sec-string.prototype.substr String.prototype.substr ( start, length )</h1>...</div><div id=\"excluded-sec-string.prototype.anchor\"><h1><span class=\"secnum\">B.2.3.2</span>#sec-string.prototype.anchor String.prototype.anchor ( name )</h1>...</div><div id=\"excluded-sec-string.prototype.big\"><h1><span class=\"secnum\">B.2.3.3</span>#sec-string.prototype.big String.prototype.big ( )</h1>...</div><div id=\"excluded-sec-string.prototype.blink\"><h1><span class=\"secnum\">B.2.3.4</span>#sec-string.prototype.blink String.prototype.blink ( )</h1>...</div><div id=\"excluded-sec-string.prototype.bold\"><h1><span class=\"secnum\">B.2.3.5</span>#sec-string.prototype.bold String.prototype.bold ( )</h1>...</div><div id=\"excluded-sec-string.prototype.fixed\"><h1><span class=\"secnum\">B.2.3.6</span>#sec-string.prototype.fixed String.prototype.fixed ( )</h1>...</div><div id=\"excluded-sec-string.prototype.fontcolor\"><h1><span class=\"secnum\">B.2.3.7</span>#sec-string.prototype.fontcolor String.prototype.fontcolor ( color )</h1>...</div><div id=\"excluded-sec-string.prototype.fontsize\"><h1><span class=\"secnum\">B.2.3.8</span>#sec-string.prototype.fontsize String.prototype.fontsize ( size )</h1>...</div><div id=\"excluded-sec-string.prototype.italics\"><h1><span class=\"secnum\">B.2.3.9</span>#sec-string.prototype.italics String.prototype.italics ( )</h1>...</div><div id=\"excluded-sec-string.prototype.link\"><h1><span class=\"secnum\">B.2.3.10</span>#sec-string.prototype.link String.prototype.link ( url )</h1>...</div><div id=\"excluded-sec-string.prototype.small\"><h1><span class=\"secnum\">B.2.3.11</span>#sec-string.prototype.small String.prototype.small ( )</h1>...</div><div id=\"excluded-sec-string.prototype.strike\"><h1><span class=\"secnum\">B.2.3.12</span>#sec-string.prototype.strike String.prototype.strike ( )</h1>...</div><div id=\"excluded-sec-string.prototype.sub\"><h1><span class=\"secnum\">B.2.3.13</span>#sec-string.prototype.sub String.prototype.sub ( )</h1>...</div><div id=\"excluded-sec-string.prototype.sup\"><h1><span class=\"secnum\">B.2.3.14</span>#sec-string.prototype.sup String.prototype.sup ( )</h1>...</div><emu-annex id=\"String.prototype.trimleft\">\n        <h1><span class=\"secnum\">B.2.3.15</span> String.prototype.trimLeft ( )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The property <code>trimStart</code> is preferred. The <code>trimLeft</code> property is provided principally for compatibility with old code. It is recommended that the <code>trimStart</code> property be used in new ECMAScript code.</p>\n        </div></emu-note>\n        <p>The initial value of the <code>trimLeft</code> property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>String.prototype.trimStart</code> property.</p>\n      </emu-annex>\n\n      <emu-annex id=\"String.prototype.trimright\">\n        <h1><span class=\"secnum\">B.2.3.16</span> String.prototype.trimRight ( )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The property <code>trimEnd</code> is preferred. The <code>trimRight</code> property is provided principally for compatibility with old code. It is recommended that the <code>trimEnd</code> property be used in new ECMAScript code.</p>\n        </div></emu-note>\n        <p>The initial value of the <code>trimRight</code> property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>String.prototype.trimEnd</code> property.</p>\n      </emu-annex>\n    </emu-annex>\n\n    "}, "sec-asyncgenerator-prototype-tostringtag": {"num": "25.5.1.5", "title": "#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-asyncgenerator-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-prototype-tostringtag\">#sec-asyncgenerator-prototype-tostringtag</span> AsyncGenerator.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"AsyncGenerator\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n    "}, "sec-arraybuffer-constructor": {"num": "24.1.2", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <code>ArrayBuffer</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>ArrayBuffer</code> behaviour must include a <code>super</code> call to the <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">24.1.2.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-math.sinh": {"num": "20.3.2.31", "title": "#sec-math.sinh Math.sinh ( x )", "html": "<emu-clause id=\"sec-math.sinh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sinh\">#sec-math.sinh</span> Math.sinh ( <var>x</var> )</h1>\n        <p>Returns an implementation-dependent approximation to the hyperbolic sine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          \n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of sinh(x) is the same as  <i>(exp(x) - exp(-x)) / 2</i>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-function.prototype.tostring": {"num": "19.2.3.5", "title": "#sec-function.prototype.tostring Function.prototype.toString ( )", "html": "<emu-clause id=\"sec-function.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.tostring\">#sec-function.prototype.tostring</span> Function.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>func</var> be the <emu-val>this</emu-val> value.</li><li>If <var>func</var> is a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">Bound Function exotic object</a></emu-xref> or a <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\">built-in function object</a></emu-xref>, then return an implementation-dependent String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>. Additionally, if <var>func</var> is a <emu-xref href=\"#sec-well-known-intrinsic-objects\"><a href=\"#sec-well-known-intrinsic-objects\">Well-known Intrinsic Object</a></emu-xref> and is not identified as an anonymous function, the portion of the returned String that would be matched by <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt> must be the initial value of the <code>name</code> property of <var>func</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <var>func</var> has a [[SourceText]] internal slot and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>.[[SourceText]]) is String and !&#160;HostHasSourceTextAvailable(<var>func</var>) is <emu-val>true</emu-val>, then return <var>func</var>.[[SourceText]].</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>func</var>) is <emu-val>true</emu-val>, then return an implementation-dependent String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.\n        </li></ol></emu-alg>\n\n        <emu-grammar type=\"definition\"><emu-production name=\"NativeFunction\" id=\"prod-NativeFunction\">\n    <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1fcbc9e6\"><emu-t>function</emu-t><emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-t>[</emu-t><emu-t>native</emu-t><emu-t>code</emu-t><emu-t>]</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      </emu-clause>\n\n      "}, "sec-get-arraybuffer-@@species": {"num": "24.1.3.3", "title": "#sec-get-arraybuffer-@@species get ArrayBuffer [ @@species ]", "html": "<emu-clause id=\"sec-get-arraybuffer-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-arraybuffer-@@species\">#sec-get-arraybuffer-@@species</span> get ArrayBuffer [ @@species ]</h1>\n        <p><code>ArrayBuffer[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ArrayBuffer prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-number.epsilon": {"num": "20.1.2.1", "title": "#sec-number.epsilon Number.EPSILON", "html": "<emu-clause id=\"sec-number.epsilon\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.epsilon\">#sec-number.epsilon</span> Number.EPSILON</h1>\n        <p>The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1 that is representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>, which is approximately 2.2204460492503130808472633361816 x 10<sup> - 16</sup>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-makeconstructor": {"num": "9.2.10", "title": "#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )", "html": "<emu-clause id=\"sec-makeconstructor\" aoid=\"MakeConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makeconstructor\">#sec-makeconstructor</span> MakeConstructor ( <var>F</var> [ , <var>writablePrototype</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation MakeConstructor requires a Function argument <var>F</var> and optionally, a Boolean <var>writablePrototype</var> and an object <var>prototype</var>. If <var>prototype</var> is provided it is assumed to already contain, if needed, a <code>\"constructor\"</code> property whose value is <var>F</var>. This operation converts <var>F</var> into a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> by performing the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>F</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <code>prototype</code> own property.</li><li>If <var>writablePrototype</var> is not present, set <var>writablePrototype</var> to <emu-val>true</emu-val>.</li><li>If <var>prototype</var> is not present, then<ol><li>Set <var>prototype</var> to <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>prototype</var>, <code>\"constructor\"</code>, PropertyDescriptor { [[Value]]: <var>F</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"prototype\"</code>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-constructor": {"num": "19.2.1", "title": "#sec-function-constructor The Function Constructor", "html": "<emu-clause id=\"sec-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</span> The Function Constructor</h1>\n      <p>The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Function%</dfn>.</li>\n        <li>is the initial value of the <code>Function</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Function(&#8230;)</code> is equivalent to the object creation expression <code>new Function(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Function</code> behaviour must include a <code>super</code> call to the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in function behaviour. All ECMAScript syntactic forms for defining function objects create instances of <code>Function</code>. There is no syntactic means to create instances of <code>Function</code> subclasses except for the built-in <code>GeneratorFunction</code>, <code>AsyncFunction</code>, and <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-function-p1-p2-pn-body\"><h1><span class=\"secnum\">19.2.1.1</span>#sec-function-p1-p2-pn-body Function ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-nativeerror.prototype.constructor": {"num": "19.5.6.3.1", "title": "#sec-nativeerror.prototype.constructor NativeError.prototype.constructor", "html": "<emu-clause id=\"sec-nativeerror.prototype.constructor\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror.prototype.constructor\">#sec-nativeerror.prototype.constructor</span> <var>NativeError</var>.prototype.constructor</h1>\n          <p>The initial value of the <code>constructor</code> property of the prototype for a given <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the corresponding intrinsic object %<var>NativeError</var>% (<emu-xref href=\"#sec-nativeerror-constructors\"><a href=\"#sec-nativeerror-constructors\" class=\"excluded-xref\" excluded-id=\"sec-nativeerror-constructors\">#sec-nativeerror-constructors</a></emu-xref>).</p>\n        </emu-clause>\n\n        "}, "sec-%stringiteratorprototype%-@@tostringtag": {"num": "21.1.5.2.2", "title": "#sec-%stringiteratorprototype%-@@tostringtag %StringIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%stringiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%-@@tostringtag\">#sec-%stringiteratorprototype%-@@tostringtag</span> %StringIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <code>\"String Iterator\"</code>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-properties-of-the-proxy-constructor": {"num": "26.2.2", "title": "#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor", "html": "<emu-clause id=\"sec-properties-of-the-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-proxy-constructor\">#sec-properties-of-the-proxy-constructor</span> Properties of the Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>does not have a <code>prototype</code> property because proxy exotic objects do not have a [[Prototype]] internal slot that requires initialization.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy.revocable\"><h1><span class=\"secnum\">26.2.2.1</span>#sec-proxy.revocable Proxy.revocable ( target, handler )</h1>...</div></emu-clause>\n  "}, "sec-sharedarraybuffer-constructor": {"num": "24.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <code>SharedArrayBuffer</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>SharedArrayBuffer</code> behaviour must include a <code>super</code> call to the <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">24.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-map.prototype-@@iterator": {"num": "23.1.3.12", "title": "#sec-map.prototype-@@iterator Map.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-map.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype-@@iterator\">#sec-map.prototype-@@iterator</span> Map.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>entries</code> property.</p>\n      </emu-clause>\n\n      "}, "sec-number.parseint": {"num": "20.1.2.13", "title": "#sec-number.parseint Number.parseInt ( string, radix )", "html": "<emu-clause id=\"sec-number.parseint\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.parseint\">#sec-number.parseint</span> Number.parseInt ( <var>string</var>, <var>radix</var> )</h1>\n        <p>The value of the <code>Number.parseInt</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is the same built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the value of the <code>parseInt</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> defined in  <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-dataview.prototype-@@tostringtag": {"num": "24.3.4.25", "title": "#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-dataview.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview.prototype-@@tostringtag\">#sec-dataview.prototype-@@tostringtag</span> DataView.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"DataView\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-function.prototype-@@hasinstance": {"num": "19.2.3.6", "title": "#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )", "html": "<emu-clause id=\"sec-function.prototype-@@hasinstance\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype-@@hasinstance\">#sec-function.prototype-@@hasinstance</span> Function.prototype [ @@hasInstance ] ( <var>V</var> )</h1>\n        <p>When the <code>@@hasInstance</code> method of an object <var>F</var> is called with value <var>V</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>F</var> be the <emu-val>this</emu-val> value.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>F</var>, <var>V</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.hasInstance]\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This is the default implementation of <code>@@hasInstance</code> that most functions inherit. <code>@@hasInstance</code> is called by the <code>instanceof</code> operator to determine whether a value is an instance of a specific <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. An expression such as</p>\n          <pre><code class=\"javascript hljs\">v <span class=\"hljs-keyword\">instanceof</span> F</code></pre>\n          <p>evaluates as</p>\n          <pre><code class=\"javascript hljs\">F[@@hasInstance](v)</code></pre>\n          <p>A <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function can control which objects are recognized as its instances by <code>instanceof</code> by exposing a different <code>@@hasInstance</code> method on the function.</p>\n        </div></emu-note>\n        <p>This property is non-writable and non-configurable to prevent tampering that could be used to globally expose the target function of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref>.</p>\n      </emu-clause>\n    "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>.</li>\n        <li>is <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-array-@@species": {"num": "22.1.2.5", "title": "#sec-get-array-@@species get Array [ @@species ]", "html": "<emu-clause id=\"sec-get-array-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-array-@@species\">#sec-get-array-@@species</span> get Array [ @@species ]</h1>\n        <p><code>Array[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Array prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-error-constructor": {"num": "19.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <code>Error</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Error</code> behaviour must include a <code>super</code> call to the <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">19.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-constructor": {"num": "26.2.1", "title": "#sec-proxy-constructor The Proxy Constructor", "html": "<emu-clause id=\"sec-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</span> The Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Proxy%</dfn>.</li>\n        <li>is the initial value of the <code>Proxy</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy-target-handler\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-proxy-target-handler Proxy ( target, handler )</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "24.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <code>Atomics</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events.  When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">24.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">24.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">24.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">24.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">24.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">24.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">24.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">24.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">24.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">24.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">24.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">24.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">24.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">24.4.14</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgenerator-objects": {"num": "25.5", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the value of the <code>prototype</code> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, %AsyncGenerator.prototype%.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">25.5.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">25.5.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">25.5.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-date.prototype.togmtstring": {"num": "B.2.4.3", "title": "#sec-date.prototype.togmtstring Date.prototype.toGMTString ( )", "html": "<emu-annex id=\"sec-date.prototype.togmtstring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.togmtstring\">#sec-date.prototype.togmtstring</span> Date.prototype.toGMTString ( )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The property <code>toUTCString</code> is preferred. The <code>toGMTString</code> property is provided principally for compatibility with old code. It is recommended that the <code>toUTCString</code> property be used in new ECMAScript code.</p>\n        </div></emu-note>\n        <p>The <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of <code>Date.prototype.toGMTString</code> is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of <code>Date.prototype.toUTCString</code>.</p>\n      </emu-annex>\n    "}, "sec-regexp.prototype-@@split": {"num": "21.2.5.13", "title": "#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )", "html": "<emu-clause id=\"sec-regexp.prototype-@@split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@split\">#sec-regexp.prototype-@@split</span> RegExp.prototype [ @@split ] ( <var>string</var>, <var>limit</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Returns an Array object into which substrings of the result of converting <var>string</var> to a String have been stored. The substrings are determined by searching from left to right for matches of the <emu-val>this</emu-val> value regular expression; these occurrences are not part of any substring in the returned array, but serve to divide up the String value.</p>\n          <p>The <emu-val>this</emu-val> value may be an empty regular expression or a regular expression that can match an empty String. In this case, the regular expression does not match the empty substring at the beginning or end of the input String, nor does it match the empty substring at the end of the previous separator match. (For example, if the regular expression matches the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each substring contains one code unit.) Only the first match at a given index of the String is considered, even if backtracking could yield a non-empty-substring match at that index. (For example, <code>/a*?/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"a\", \"b\"]</code>, while <code>/a*/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"\",\"b\"]</code>.)</p>\n          <p>If the <var>string</var> is (or converts to) the empty String, the result depends on whether the regular expression can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If the regular expression contains capturing parentheses, then each time <var>separator</var> is matched the results (including any <emu-val>undefined</emu-val> results) of the capturing parentheses are spliced into the output array. For example,</p>\n          <pre><code class=\"javascript hljs\">/&lt;(\\/)?([^<span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>]+)&gt;/[Symbol.split](\"A<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">B</span>&gt;</span>bold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">B</span>&gt;</span>and<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CODE</span>&gt;</span>coded<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">CODE</span>&gt;</span>\")</span></code></pre>\n          <p>evaluates to the array</p>\n          <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"bold\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"and\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"coded\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"\"</span>]</code></pre>\n          <p>If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <p>When the <code>@@split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"flags\"</code>)).</li><li>If <var>flags</var> contains <code>\"u\"</code>, let <var>unicodeMatching</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>unicodeMatching</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <code>\"y\"</code>, let <var>newFlags</var> be <var>flags</var>.</li><li>Else, let <var>newFlags</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>flags</var> and <code>\"y\"</code>.</li><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>rx</var>, <var>newFlags</var> &#187;).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>).</li><li>Let <var>size</var> be the length of <var>S</var>.</li><li>Let <var>p</var> be 0.</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>If <var>size</var> = 0, then<ol><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is not <emu-val>null</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <code>\"0\"</code>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &lt; <var>size</var><ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>splitter</var>, <code>\"lastIndex\"</code>, <var>q</var>, <emu-val>true</emu-val>).</li><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is <emu-val>null</emu-val>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>e</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>splitter</var>, <code>\"lastIndex\"</code>)).</li><li>Set <var>e</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>size</var>).</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>q</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Let <var>numberOfCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>z</var>).</li><li>Set <var>numberOfCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>numberOfCaptures</var> - 1, 0).</li><li>Let <var>i</var> be 1.</li><li>Repeat, while <var>i</var> &#8804; <var>numberOfCaptures</var>,<ol><li>Let <var>nextCapture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>z</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>i</var>)).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>nextCapture</var>).</li><li>Set <var>i</var> to <var>i</var> + 1.</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li></ol></li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>size</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.split]\"</code>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>@@split</code> method ignores the value of the <code>global</code> and <code>sticky</code> properties of this RegExp object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-asynciteratorprototype-asynciterator": {"num": "25.1.3.1", "title": "#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )", "html": "<emu-clause id=\"sec-asynciteratorprototype-asynciterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype-asynciterator\">#sec-asynciteratorprototype-asynciterator</span> %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.asyncIterator]\"</code>.</p>\n      </emu-clause>\n    "}, "sec-math.tanh": {"num": "20.3.2.34", "title": "#sec-math.tanh Math.tanh ( x )", "html": "<emu-clause id=\"sec-math.tanh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.tanh\">#sec-math.tanh</span> Math.tanh ( <var>x</var> )</h1>\n        <p>Returns an implementation-dependent approximation to the hyperbolic tangent of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is +1.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is -1.\n          \n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of tanh(x) is the same as  <i>(exp(x) - exp(-x))/(exp(x) + exp(-x))</i>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-get-%typedarray%-@@species": {"num": "22.2.2.4", "title": "#sec-get-%typedarray%-@@species get %TypedArray% [ @@species ]", "html": "<emu-clause id=\"sec-get-%typedarray%-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-%typedarray%-@@species\">#sec-get-%typedarray%-@@species</span> get %TypedArray% [ @@species ]</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref> methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-typedarray.prototype.constructor": {"num": "22.2.6.2", "title": "#sec-typedarray.prototype.constructor TypedArray.prototype.constructor", "html": "<emu-clause id=\"sec-typedarray.prototype.constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray.prototype.constructor\">#sec-typedarray.prototype.constructor</span> <var>TypedArray</var>.prototype.constructor</h1>\n        <p>The initial value of a  <code><var>TypedArray</var>.prototype.constructor</code> is the corresponding %<var>TypedArray</var>% intrinsic object.</p>\n      </emu-clause>\n    "}, "sec-object-constructor": {"num": "19.1.1", "title": "#sec-object-constructor The Object Constructor", "html": "<emu-clause id=\"sec-object-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</span> The Object Constructor</h1>\n      <p>The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Object%</dfn>.</li>\n        <li>is the initial value of the <code>Object</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates a new ordinary object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition.</li>\n      </ul>\n\n      <div id=\"excluded-sec-object-value\"><h1><span class=\"secnum\">19.1.1.1</span>#sec-object-value Object ( [ value ] )</h1>...</div></emu-clause>\n\n    "}, "sec-json-@@tostringtag": {"num": "24.5.3", "title": "#sec-json-@@tostringtag JSON [ @@toStringTag ]", "html": "<emu-clause id=\"sec-json-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-@@tostringtag\">#sec-json-@@tostringtag</span> JSON [ @@toStringTag ]</h1>\n      <p>The initial value of the @@toStringTag property is the String value <code>\"JSON\"</code>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-get-promise-@@species": {"num": "25.6.4.7", "title": "#sec-get-promise-@@species get Promise [ @@species ]", "html": "<emu-clause id=\"sec-get-promise-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-promise-@@species\">#sec-get-promise-@@species</span> get Promise [ @@species ]</h1>\n        <p><code>Promise[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"get [Symbol.species]\"</code>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Promise prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-%iteratorprototype%-@@iterator": {"num": "25.1.2.1", "title": "#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-%iteratorprototype%-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-@@iterator\">#sec-%iteratorprototype%-@@iterator</span> %IteratorPrototype% [ @@iterator ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.iterator]\"</code>.</p>\n      </emu-clause>\n    "}, "sec-atomics.islockfree": {"num": "24.4.6", "title": "#sec-atomics.islockfree Atomics.isLockFree ( size )", "html": "<emu-clause id=\"sec-atomics.islockfree\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.islockfree\">#sec-atomics.islockfree</span> Atomics.isLockFree ( <var>size</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>size</var>).</li><li>Let <var>AR</var> be the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</li><li>If <var>n</var> equals 1, return <var>AR</var>.[[IsLockFree1]].</li><li>If <var>n</var> equals 2, return <var>AR</var>.[[IsLockFree2]].</li><li>If <var>n</var> equals 4, return <emu-val>true</emu-val>.</li><li>If <var>n</var> equals 8, return <var>AR</var>.[[IsLockFree8]].</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><code>Atomics.isLockFree</code>() is an optimization primitive. The intuition is that if the atomic step of an atomic primitive (<code>compareExchange</code>, <code>load</code>, <code>store</code>, <code>add</code>, <code>sub</code>, <code>and</code>, <code>or</code>, <code>xor</code>, or <code>exchange</code>) on a datum of size <var>n</var> bytes will be performed without the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> acquiring a lock outside the <var>n</var> bytes comprising the datum, then <code>Atomics.isLockFree</code>(<var>n</var>) will return <emu-val>true</emu-val>. High-performance algorithms will use Atomics.isLockFree to determine whether to use locks or atomic operations in critical sections. If an atomic primitive is not lock-free then it is often more efficient for an algorithm to provide its own locking.</p>\n        <p><code>Atomics.isLockFree</code>(4) always returns <emu-val>true</emu-val> as that can be supported on all known relevant hardware. Being able to assume this will generally simplify programs.</p>\n        <p>Regardless of the value of <code>Atomics.isLockFree</code>, all atomic operations are guaranteed to be atomic. For example, they will never have a visible operation take place in the middle of the operation (e.g., \"tearing\").</p>\n      </div></emu-note>\n    </emu-clause>\n    "}, "sec-sharedarraybuffer.prototype.toString": {"num": "24.2.4.4", "title": "#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-sharedarraybuffer.prototype.toString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer.prototype.toString\">#sec-sharedarraybuffer.prototype.toString</span> SharedArrayBuffer.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"SharedArrayBuffer\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-map.prototype-@@tostringtag": {"num": "23.1.3.13", "title": "#sec-map.prototype-@@tostringtag Map.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-map.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype-@@tostringtag\">#sec-map.prototype-@@tostringtag</span> Map.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"Map\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-json.stringify": {"num": "24.5.2", "title": "#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )", "html": "<emu-clause id=\"sec-json.stringify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json.stringify\">#sec-json.stringify</span> JSON.stringify ( <var>value</var> [ , <var>replacer</var> [ , <var>space</var> ] ] )</h1>\n      <p>The <code>stringify</code> function returns a String in UTF-16 encoded JSON format representing an ECMAScript value, or <emu-val>undefined</emu-val>. It can take three parameters. The <var>value</var> parameter is an ECMAScript value, which is usually an object or array, although it can also be a String, Boolean, Number or <emu-val>null</emu-val>. The optional <var>replacer</var> parameter is either a function that alters the way objects and arrays are stringified, or an array of Strings and Numbers that acts as an inclusion list for selecting the object properties that will be stringified. The optional <var>space</var> parameter is a String or Number that allows the result to have white space injected into it to improve human readability.</p>\n      <p>These are the steps in stringifying an object:</p>\n      <emu-alg><ol><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>indent</var> be the empty String.</li><li>Let <var>PropertyList</var> and <var>ReplacerFunction</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replacer</var>) is Object, then<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replacer</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>ReplacerFunction</var> to <var>replacer</var>.</li></ol></li><li>Else,<ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>replacer</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>PropertyList</var> to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>replacer</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>replacer</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>item</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is String, set <var>item</var> to <var>v</var>.</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Number, set <var>item</var> to !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Object, then<ol><li>If <var>v</var> has a [[StringData]] or [[NumberData]] internal slot, set <var>item</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li></ol></li><li>If <var>item</var> is not <emu-val>undefined</emu-val> and <var>item</var> is not currently an element of <var>PropertyList</var>, then<ol><li>Append <var>item</var> to the end of <var>PropertyList</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Object, then<ol><li>If <var>space</var> has a [[NumberData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>space</var>).</li></ol></li><li>Else if <var>space</var> has a [[StringData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>space</var>).</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Number, then<ol><li>Set <var>space</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(10, !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>space</var>)).</li><li>If <var>space</var> &lt; 1, let <var>gap</var> be the empty String; otherwise let <var>gap</var> be the String value containing <var>space</var> occurrences of the code unit 0x0020 (SPACE).</li></ol></li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is String, then<ol><li>If the length of <var>space</var> is 10 or less, let <var>gap</var> be <var>space</var>; otherwise let <var>gap</var> be the String value consisting of the first 10 code units of <var>space</var>.</li></ol></li><li>Else,<ol><li>Let <var>gap</var> be the empty String.</li></ol></li><li>Let <var>wrapper</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>wrapper</var>, the empty String, <var>value</var>).</li><li>Return ?&#160;<emu-xref aoid=\"SerializeJSONProperty\"><a href=\"#sec-serializejsonproperty\">SerializeJSONProperty</a></emu-xref>(the empty String, <var>wrapper</var>).\n      </li></ol></emu-alg>\n      <p>The <code>\"length\"</code> property of the <code>stringify</code> function is 3.</p>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>JSON structures are allowed to be nested to any depth, but they must be acyclic. If <var>value</var> is or contains a cyclic structure, then the stringify function must throw a <emu-val>TypeError</emu-val> exception. This is an example of a value that cannot be stringified:</p>\n        <pre><code class=\"javascript hljs\">a = [];\na[<span class=\"hljs-number\">0</span>] = a;\nmy_text = <span class=\"hljs-built_in\">JSON</span>.stringify(a); <span class=\"hljs-comment\">// This must throw a TypeError.</span></code></pre>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Symbolic primitive values are rendered as follows:</p>\n        <ul>\n          <li>\n            The <emu-val>null</emu-val> value is rendered in JSON text as the String <code>null</code>.\n          \n          </li>\n          <li>\n            The <emu-val>undefined</emu-val> value is not rendered.\n          \n          </li>\n          <li>\n            The <emu-val>true</emu-val> value is rendered in JSON text as the String <code>true</code>.\n          \n          </li>\n          <li>\n            The <emu-val>false</emu-val> value is rendered in JSON text as the String <code>false</code>.\n          \n          </li>\n        </ul>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>String values are wrapped in QUOTATION MARK (<code>\"</code>) code units. The code units <code>\"</code> and <code>\\</code> are escaped with <code>\\</code> prefixes. Control characters code units are replaced with escape sequences <code>\\u</code>HHHH, or with the shorter forms, <code>\\b</code> (BACKSPACE), <code>\\f</code> (FORM FEED), <code>\\n</code> (LINE FEED), <code>\\r</code> (CARRIAGE RETURN), <code>\\t</code> (CHARACTER TABULATION).</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n        <p>Finite numbers are stringified as if by calling <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>number</var>). <emu-val>NaN</emu-val> and Infinity regardless of sign are represented as the String <code>null</code>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 5</span><div class=\"note-contents\">\n        <p>Values that do not have a JSON representation (such as <emu-val>undefined</emu-val> and functions) do not produce a String. Instead they produce the <emu-val>undefined</emu-val> value. In arrays these values are represented as the String <code>null</code>. In objects an unrepresentable value causes the property to be excluded from stringification.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 6</span><div class=\"note-contents\">\n        <p>An object is rendered as U+007B (LEFT CURLY BRACKET) followed by zero or more properties, separated with a U+002C (COMMA), closed with a U+007D (RIGHT CURLY BRACKET). A property is a quoted String representing the key or <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>, a U+003A (COLON), and then the stringified property value. An array is rendered as an opening U+005B (LEFT SQUARE BRACKET followed by zero or more values, separated with a U+002C (COMMA), closed with a U+005D (RIGHT SQUARE BRACKET).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-serializejsonproperty\"><h1><span class=\"secnum\">24.5.2.1</span>#sec-serializejsonproperty Runtime Semantics: SerializeJSONProperty ( key, holder )</h1>...</div><div id=\"excluded-sec-quotejsonstring\"><h1><span class=\"secnum\">24.5.2.2</span>#sec-quotejsonstring Runtime Semantics: QuoteJSONString ( value )</h1>...</div><div id=\"excluded-sec-unicodeescape\"><h1><span class=\"secnum\">24.5.2.3</span>#sec-unicodeescape Runtime Semantics: UnicodeEscape ( C )</h1>...</div><div id=\"excluded-sec-serializejsonobject\"><h1><span class=\"secnum\">24.5.2.4</span>#sec-serializejsonobject Runtime Semantics: SerializeJSONObject ( value )</h1>...</div><div id=\"excluded-sec-serializejsonarray\"><h1><span class=\"secnum\">24.5.2.5</span>#sec-serializejsonarray Runtime Semantics: SerializeJSONArray ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "22.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <code>Array</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Array <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic <code>Array</code> behaviour must include a <code>super</code> call to the <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <code>this</code> value being an Array <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref>.</li>\n        <li>has a <code>\"length\"</code> property whose value is 1.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array-constructor-array\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-array-constructor-array Array ( )</h1>...</div><div id=\"excluded-sec-array-len\"><h1><span class=\"secnum\">22.1.1.2</span>#sec-array-len Array ( len )</h1>...</div><div id=\"excluded-sec-array-items\"><h1><span class=\"secnum\">22.1.1.3</span>#sec-array-items Array ( ...items )</h1>...</div></emu-clause>\n\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in  <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in  <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              \n              </th>\n              <th>\n                Global Name\n              \n              </th>\n              <th>\n                ECMAScript Language Association\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array</code>\n              \n              </td>\n              <td>\n                The <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>entries</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>forEach</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>keys</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>values</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., %AsyncFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., %AsyncGeneratorFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., %AsyncGenerator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Atomics</code>\n              \n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>BigInt</code>\n              \n              </td>\n              <td>\n                The <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigInt64Array%\n              \n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigInt64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigUint64Array%\n              \n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigUint64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean</code>\n              \n              </td>\n              <td>\n                The <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView</code>\n              \n              </td>\n              <td>\n                The <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date</code>\n              \n              </td>\n              <td>\n                The <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURI</code>\n              \n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURI</code>\n              \n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error</code>\n              \n              </td>\n              <td>\n                The <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>eval</code>\n              \n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalError%\n              \n              </td>\n              <td>\n                <code>EvalError</code>\n              \n              </td>\n              <td>\n                The <code>EvalError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              \n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %EvalError%; i.e., %EvalError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32Array%\n              \n              </td>\n              <td>\n                <code>Float32Array</code>\n              \n              </td>\n              <td>\n                The <code>Float32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float32Array%; i.e., %Float32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64Array%\n              \n              </td>\n              <td>\n                <code>Float64Array</code>\n              \n              </td>\n              <td>\n                The <code>Float64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float64Array%; i.e., %Float64Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Function</code>\n              \n              </td>\n              <td>\n                The <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              \n              </td>\n              <td>\n                <code>Function.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., %Generator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8Array%\n              \n              </td>\n              <td>\n                <code>Int8Array</code>\n              \n              </td>\n              <td>\n                The <code>Int8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int8Array%; i.e., %Int8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16Array%\n              \n              </td>\n              <td>\n                <code>Int16Array</code>\n              \n              </td>\n              <td>\n                The <code>Int16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int16Array%; i.e., %Int16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32Array%\n              \n              </td>\n              <td>\n                <code>Int32Array</code>\n              \n              </td>\n              <td>\n                The <code>Int32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int32Array%; i.e., %Int32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isFinite</code>\n              \n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isNaN</code>\n              \n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON</code>\n              \n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.parse</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>parse</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %JSONStringify%\n              \n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>stringify</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map</code>\n              \n              </td>\n              <td>\n                The <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Math</code>\n              \n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number</code>\n              \n              </td>\n              <td>\n                The <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object</code>\n              \n              </td>\n              <td>\n                The <code>Object</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>toString</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>valueOf</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseFloat</code>\n              \n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseInt</code>\n              \n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise</code>\n              \n              </td>\n              <td>\n                The <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>then</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.all</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>all</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.reject</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>reject</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>resolve</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Proxy</code>\n              \n              </td>\n              <td>\n                The <code>Proxy</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeError%\n              \n              </td>\n              <td>\n                <code>RangeError</code>\n              \n              </td>\n              <td>\n                The <code>RangeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %RangeError%; i.e., %RangeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceError%\n              \n              </td>\n              <td>\n                <code>ReferenceError</code>\n              \n              </td>\n              <td>\n                The <code>ReferenceError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              \n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %ReferenceError%; i.e., %ReferenceError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Reflect</code>\n              \n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp</code>\n              \n              </td>\n              <td>\n                The <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set</code>\n              \n              </td>\n              <td>\n                The <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String</code>\n              \n              </td>\n              <td>\n                The <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol</code>\n              \n              </td>\n              <td>\n                The <code>Symbol</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxError%\n              \n              </td>\n              <td>\n                <code>SyntaxError</code>\n              \n              </td>\n              <td>\n                The <code>SyntaxError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              \n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %SyntaxError%; i.e., %SyntaxError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of %TypeError%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeError%\n              \n              </td>\n              <td>\n                <code>TypeError</code>\n              \n              </td>\n              <td>\n                The <code>TypeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %TypeError%; i.e., %TypeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8Array%\n              \n              </td>\n              <td>\n                <code>Uint8Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8Array%; i.e., %Uint8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArray%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              \n              </td>\n              <td>\n                The <code>Uint8ClampedArray</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8ClampedArray%; i.e., %Uint8ClampedArray.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16Array%\n              \n              </td>\n              <td>\n                <code>Uint16Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint16Array%; i.e., %Uint16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32Array%\n              \n              </td>\n              <td>\n                <code>Uint32Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint32Array%; i.e., %Uint32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIError%\n              \n              </td>\n              <td>\n                <code>URIError</code>\n              \n              </td>\n              <td>\n                The <code>URIError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              \n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %URIError%; i.e., %URIError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap</code>\n              \n              </td>\n              <td>\n                The <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet</code>\n              \n              </td>\n              <td>\n                The <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>prototype</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-set.prototype-@@iterator": {"num": "23.2.3.11", "title": "#sec-set.prototype-@@iterator Set.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-set.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype-@@iterator\">#sec-set.prototype-@@iterator</span> Set.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>values</code> property.</p>\n      </emu-clause>\n\n      "}, "sec-generatorfunction-instances-name": {"num": "25.2.4.2", "title": "#sec-generatorfunction-instances-name name", "html": "<emu-clause id=\"sec-generatorfunction-instances-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances-name\">#sec-generatorfunction-instances-name</span> name</h1>\n        <p>The specification for the <code>name</code> property of Function instances given in  <emu-xref href=\"#sec-function-instances-name\"><a href=\"#sec-function-instances-name\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</a></emu-xref> also applies to GeneratorFunction instances.</p>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-prototype-tostringtag": {"num": "25.3.3.3", "title": "#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">#sec-asyncgeneratorfunction-prototype-tostringtag</span> AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"AsyncGeneratorFunction\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-source-text-module-records": {"num": "15.2.1.17", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A  <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, link, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in  <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in  <emu-xref href=\"#table-38\"><a href=\"#table-38\" class=\"excluded-xref\" excluded-id=\"table-38\">#table-38</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-38\" caption=\"Additional Fields of Source Text Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-38\">#table-38</span>: Additional Fields of Source Text Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              \n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              \n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Context]]\n              \n              </td>\n              <td>\n                An ECMAScript <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> associated with this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from <code>export * as namespace</code> declarations.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to <code>export *</code> declarations that occur within the module, not including <code>export * as namespace</code> declarations.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An  <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-39\"><a href=\"#table-39\" class=\"excluded-xref\" excluded-id=\"table-39\">#table-39</a></emu-xref>:</p>\n        <emu-table id=\"table-39\" caption=\"ImportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-39\">#table-39</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <code>\"*\"</code> indicates that the import request is for the target module's namespace object.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-40\"><a href=\"#table-40\" class=\"excluded-xref\" excluded-id=\"table-40\">#table-40</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-40\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-40\">#table-40</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <code>\"ns\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                \n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An  <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-41\"><a href=\"#table-41\" class=\"excluded-xref\" excluded-id=\"table-41\">#table-41</a></emu-xref>:</p>\n        <emu-table id=\"table-41\" caption=\"ExportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-41\">#table-41</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name used to export this binding by this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <code>\"*\"</code> indicates that the export request is for all exported bindings.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-42\"><a href=\"#table-42\" class=\"excluded-xref\" excluded-id=\"table-42\">#table-42</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-42\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-42\">#table-42</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                \n                </th>\n                <th>\n                  [[ExportName]]\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f() {}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"f\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function () {}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * as ns from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"ns\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">15.2.1.17.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">15.2.1.17.2</span>#sec-getexportednames GetExportedNames ( [ exportStarSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">15.2.1.17.3</span>#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">15.2.1.17.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">15.2.1.17.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-function-prototype-object": {"num": "19.2.3", "title": "#sec-properties-of-the-function-prototype-object Properties of the Function Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-function-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</span> Properties of the Function Prototype Object</h1>\n      <p>The Function prototype object:</p>\n      <ul>\n        <li>is  <dfn>%Function.prototype%</dfn>.</li>\n        <li>is itself a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n        <li>accepts any arguments and returns <emu-val>undefined</emu-val> when invoked.</li>\n        <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>does not have a <code>prototype</code> property.</li>\n        <li>has a <code>\"length\"</code> property whose value is 0.</li>\n        <li>has a <code>name</code> property whose value is the empty String.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Function prototype object is specified to be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-function.prototype.apply\"><h1><span class=\"secnum\">19.2.3.1</span>#sec-function.prototype.apply Function.prototype.apply ( thisArg, argArray )</h1>...</div><div id=\"excluded-sec-function.prototype.bind\"><h1><span class=\"secnum\">19.2.3.2</span>#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.call\"><h1><span class=\"secnum\">19.2.3.3</span>#sec-function.prototype.call Function.prototype.call ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.constructor\"><h1><span class=\"secnum\">19.2.3.4</span>#sec-function.prototype.constructor Function.prototype.constructor</h1>...</div><div id=\"excluded-sec-function.prototype.tostring\"><h1><span class=\"secnum\">19.2.3.5</span>#sec-function.prototype.tostring Function.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-function.prototype-@@hasinstance\"><h1><span class=\"secnum\">19.2.3.6</span>#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )</h1>...</div></emu-clause>\n\n    "}, "sec-number.negative_infinity": {"num": "20.1.2.11", "title": "#sec-number.negative_infinity Number.NEGATIVE_INFINITY", "html": "<emu-clause id=\"sec-number.negative_infinity\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.negative_infinity\">#sec-number.negative_infinity</span> Number.NEGATIVE_INFINITY</h1>\n        <p>The value of Number.NEGATIVE_INFINITY is <emu-val>-&#8734;</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-regexpexec": {"num": "21.2.5.2.1", "title": "#sec-regexpexec Runtime Semantics: RegExpExec ( R, S )", "html": "<emu-clause id=\"sec-regexpexec\" aoid=\"RegExpExec\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexpexec\">#sec-regexpexec</span> Runtime Semantics: RegExpExec ( <var>R</var>, <var>S</var> )</h1>\n          <p>The abstract operation RegExpExec with arguments <var>R</var> and <var>S</var> performs the following steps:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is Object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>S</var>) is String.</li><li>Let <var>exec</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"exec\"</code>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>exec</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>exec</var>, <var>R</var>, &#171; <var>S</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>result</var>.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>R</var>, [[RegExpMatcher]]).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpBuiltinExec\"><a href=\"#sec-regexpbuiltinexec\">RegExpBuiltinExec</a></emu-xref>(<var>R</var>, <var>S</var>).\n          </li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>If a callable <code>exec</code> property is not found this algorithm falls back to attempting to use the built-in RegExp matching algorithm. This provides compatible behaviour for code written for prior editions where most built-in algorithms that use regular expressions did not perform a dynamic property lookup of <code>exec</code>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-atomics-@@tostringtag": {"num": "24.4.14", "title": "#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]", "html": "<emu-clause id=\"sec-atomics-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-@@tostringtag\">#sec-atomics-@@tostringtag</span> Atomics [ @@toStringTag ]</h1>\n      <p>The initial value of the @@toStringTag property is the String value <code>\"Atomics\"</code>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-number.parsefloat": {"num": "20.1.2.12", "title": "#sec-number.parsefloat Number.parseFloat ( string )", "html": "<emu-clause id=\"sec-number.parsefloat\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.parsefloat\">#sec-number.parsefloat</span> Number.parseFloat ( <var>string</var> )</h1>\n        <p>The value of the <code>Number.parseFloat</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is the same built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the value of the <code>parseFloat</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> defined in  <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-%iteratorprototype%-object": {"num": "25.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The  <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an ordinary object.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%.The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-terms-and-definitions-prototype": {"num": "4.3.5", "title": "#sec-terms-and-definitions-prototype prototype", "html": "<emu-clause id=\"sec-terms-and-definitions-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-terms-and-definitions-prototype\">#sec-terms-and-definitions-prototype</span> prototype</h1>\n      <p>object that provides shared properties for other objects</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> creates an object, that object implicitly references the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>prototype</code> property for the purpose of resolving property references. The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>prototype</code> property can be referenced by the program expression  <code><var>constructor</var>.prototype</code>, and properties added to an object's prototype are shared, through inheritance, by all objects sharing the prototype. Alternatively, a new object may be created with an explicitly specified prototype by using the <code>Object.create</code> built-in function.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-iteratorresult-interface": {"num": "25.1.1.5", "title": "#sec-iteratorresult-interface The  IteratorResult Interface", "html": "<emu-clause id=\"sec-iteratorresult-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iteratorresult-interface\">#sec-iteratorresult-interface</span> The  <i>IteratorResult</i> Interface</h1>\n        <p>The  <i>IteratorResult</i> interface includes the properties listed in  <emu-xref href=\"#table-55\"><a href=\"#table-55\" class=\"excluded-xref\" excluded-id=\"table-55\">#table-55</a></emu-xref>:</p>\n        <emu-table id=\"table-55\" caption=\"&lt;i&gt;IteratorResult&lt;/i&gt; Interface Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-55\">#table-55</span>:  <i>IteratorResult</i> Interface Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>done</code>\n              \n              </td>\n              <td>\n                Either <emu-val>true</emu-val> or <emu-val>false</emu-val>.\n              \n              </td>\n              <td>\n                This is the result status of an  <em>iterator</em> <code>next</code> method call. If the end of the iterator was reached <code>done</code> is <emu-val>true</emu-val>. If the end was not reached <code>done</code> is <emu-val>false</emu-val> and a value is available. If a <code>done</code> property (either own or inherited) does not exist, it is consider to have the value <emu-val>false</emu-val>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>value</code>\n              \n              </td>\n              <td>\n                Any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>.\n              \n              </td>\n              <td>\n                If done is <emu-val>false</emu-val>, this is the current iteration element value. If done is <emu-val>true</emu-val>, this is the return value of the iterator, if it supplied one. If the iterator does not have a return value, <code>value</code> is <emu-val>undefined</emu-val>. In that case, the <code>value</code> property may be absent from the conforming object if it does not inherit an explicit <code>value</code> property.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-%arrayiteratorprototype%-@@tostringtag": {"num": "22.1.5.2.2", "title": "#sec-%arrayiteratorprototype%-@@tostringtag %ArrayIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%-@@tostringtag\">#sec-%arrayiteratorprototype%-@@tostringtag</span> %ArrayIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <code>\"Array Iterator\"</code>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-nativeerror.prototype.name": {"num": "19.5.6.3.3", "title": "#sec-nativeerror.prototype.name NativeError.prototype.name", "html": "<emu-clause id=\"sec-nativeerror.prototype.name\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror.prototype.name\">#sec-nativeerror.prototype.name</span> <var>NativeError</var>.prototype.name</h1>\n          <p>The initial value of the <code>name</code> property of the prototype for a given <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the String value consisting of the name of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (the name used instead of <var>NativeError</var>).</p>\n        </emu-clause>\n      "}, "sec-dataview-constructor": {"num": "24.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <code>DataView</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>DataView</code> behaviour must include a <code>super</code> call to the <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">24.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-set.prototype.keys": {"num": "23.2.3.8", "title": "#sec-set.prototype.keys Set.prototype.keys ( )", "html": "<emu-clause id=\"sec-set.prototype.keys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype.keys\">#sec-set.prototype.keys</span> Set.prototype.keys ( )</h1>\n        <p>The initial value of the <code>keys</code> property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>values</code> property.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>For iteration purposes, a Set appears similar to a Map where each entry has the same value for its key and value.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number.positive_infinity": {"num": "20.1.2.14", "title": "#sec-number.positive_infinity Number.POSITIVE_INFINITY", "html": "<emu-clause id=\"sec-number.positive_infinity\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.positive_infinity\">#sec-number.positive_infinity</span> Number.POSITIVE_INFINITY</h1>\n        <p>The value of Number.POSITIVE_INFINITY is <emu-val>+&#8734;</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-%typedarray%-intrinsic-object": {"num": "22.2.2", "title": "#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">#sec-properties-of-the-%typedarray%-intrinsic-object</span> Properties of the %TypedArray% Intrinsic Object</h1>\n      <p>The <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref> intrinsic object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"TypedArray\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-%typedarray%.from\"><h1><span class=\"secnum\">22.2.2.1</span>#sec-%typedarray%.from %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.of\"><h1><span class=\"secnum\">22.2.2.2</span>#sec-%typedarray%.of %TypedArray%.of ( ...items )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype\"><h1><span class=\"secnum\">22.2.2.3</span>#sec-%typedarray%.prototype %TypedArray%.prototype</h1>...</div><div id=\"excluded-sec-get-%typedarray%-@@species\"><h1><span class=\"secnum\">22.2.2.4</span>#sec-get-%typedarray%-@@species get %TypedArray% [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-math.cosh": {"num": "20.3.2.13", "title": "#sec-math.cosh Math.cosh ( x )", "html": "<emu-clause id=\"sec-math.cosh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.cosh\">#sec-math.cosh</span> Math.cosh ( <var>x</var> )</h1>\n        <p>Returns an implementation-dependent approximation to the hyperbolic cosine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is 1.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is 1.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          \n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of cosh(x) is the same as  <i>(exp(x) + exp(-x)) / 2</i>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-%setiteratorprototype%-@@tostringtag": {"num": "23.2.5.2.2", "title": "#sec-%setiteratorprototype%-@@tostringtag %SetIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%setiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%-@@tostringtag\">#sec-%setiteratorprototype%-@@tostringtag</span> %SetIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <code>\"Set Iterator\"</code>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-instanceofoperator": {"num": "12.10.4", "title": "#sec-instanceofoperator Runtime Semantics: InstanceofOperator ( V, target )", "html": "<emu-clause id=\"sec-instanceofoperator\" aoid=\"InstanceofOperator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-instanceofoperator\">#sec-instanceofoperator</span> Runtime Semantics: InstanceofOperator ( <var>V</var>, <var>target</var> )</h1>\n      <p>The abstract operation InstanceofOperator(<var>V</var>, <var>target</var>) implements the generic algorithm for determining if  ECMAScript value <var>V</var> is an instance of object <var>target</var> either by consulting <var>target</var>'s @@hasinstance method or, if absent, determining whether the value of <var>target</var>'s <code>prototype</code> property is present in <var>V</var>'s prototype chain. This abstract operation performs the following steps:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>instOfHandler</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>target</var>, @@hasInstance).</li><li>If <var>instOfHandler</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>instOfHandler</var>, <var>target</var>, &#171; <var>V</var> &#187;)).</li></ol></li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>target</var>, <var>V</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Steps 4 and 5 provide compatibility with previous editions of ECMAScript that did not use a @@hasInstance method to define the <code>instanceof</code> operator semantics. If an object does not define or inherit @@hasInstance it uses the default <code>instanceof</code> semantics.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-weakset-constructor": {"num": "23.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <code>WeakSet</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakSet</code> behaviour must include a <code>super</code> call to the <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">23.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref> (the AsyncGeneratorFunction.prototype).</li>\n        <li>is an ordinary object.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol-constructor": {"num": "19.4.1", "title": "#sec-symbol-constructor The Symbol Constructor", "html": "<emu-clause id=\"sec-symbol-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</span> The Symbol Constructor</h1>\n      <p>The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Symbol%</dfn>.</li>\n        <li>is the initial value of the <code>Symbol</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>returns a new Symbol value when called as a function.</li>\n        <li>is not intended to be used with the <code>new</code> operator.</li>\n        <li>is not intended to be subclassed.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to it will cause an exception.</li>\n      </ul>\n\n      <div id=\"excluded-sec-symbol-description\"><h1><span class=\"secnum\">19.4.1.1</span>#sec-symbol-description Symbol ( [ description ] )</h1>...</div></emu-clause>\n\n    "}, "sec-function-instances-prototype": {"num": "19.2.4.3", "title": "#sec-function-instances-prototype prototype", "html": "<emu-clause id=\"sec-function-instances-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-instances-prototype\">#sec-function-instances-prototype</span> prototype</h1>\n        <p>Function instances that can be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> have a <code>prototype</code> property. Whenever such a Function instance is created another ordinary object is also created and is the initial value of the function's <code>prototype</code> property. Unless otherwise specified, the value of the <code>prototype</code> property is used to initialize the [[Prototype]] internal slot of the object created when that function is invoked as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Function objects created using <code>Function.prototype.bind</code>, or by evaluating a <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> (that is not a <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt>) or an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> do not have a <code>prototype</code> property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-%mapiteratorprototype%-@@tostringtag": {"num": "23.1.5.2.2", "title": "#sec-%mapiteratorprototype%-@@tostringtag %MapIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%mapiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%-@@tostringtag\">#sec-%mapiteratorprototype%-@@tostringtag</span> %MapIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <code>\"Map Iterator\"</code>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-arraybuffer.prototype-@@tostringtag": {"num": "24.1.4.4", "title": "#sec-arraybuffer.prototype-@@tostringtag ArrayBuffer.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-arraybuffer.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer.prototype-@@tostringtag\">#sec-arraybuffer.prototype-@@tostringtag</span> ArrayBuffer.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"ArrayBuffer\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-generator-prototype": {"num": "25.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>prototype</code> property of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref> (the GeneratorFunction.prototype).</li>\n        <li>is an ordinary object.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-string-constructor": {"num": "21.1.1", "title": "#sec-string-constructor The String Constructor", "html": "<emu-clause id=\"sec-string-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</span> The String Constructor</h1>\n      <p>The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%String%</dfn>.</li>\n        <li>is the initial value of the <code>String</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new String object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>String</code> behaviour must include a <code>super</code> call to the <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[StringData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-string-constructor-string-value\"><h1><span class=\"secnum\">21.1.1.1</span>#sec-string-constructor-string-value String ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-arrayspeciescreate": {"num": "9.4.2.3", "title": "#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )", "html": "<emu-clause id=\"sec-arrayspeciescreate\" aoid=\"ArraySpeciesCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrayspeciescreate\">#sec-arrayspeciescreate</span> ArraySpeciesCreate ( <var>originalArray</var>, <var>length</var> )</h1>\n        <p>The abstract operation ArraySpeciesCreate with arguments <var>originalArray</var> and <var>length</var> is used to specify the creation of a new Array object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>originalArray</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>length</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> Number &#8805; 0.</li><li>If <var>length</var> is <emu-val>-0</emu-val>, set <var>length</var> to <emu-val>+0</emu-val>.</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>originalArray</var>).</li><li>If <var>isArray</var> is <emu-val>false</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>originalArray</var>, <code>\"constructor\"</code>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>thisRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>realmC</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>C</var>).</li><li>If <var>thisRealm</var> and <var>realmC</var> are not the same <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>C</var>, <var>realmC</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>]]) is <emu-val>true</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is Object, then<ol><li>Set <var>C</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, @@species).</li><li>If <var>C</var> is <emu-val>null</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>length</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If <var>originalArray</var> was created using the standard built-in Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> that is not the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, then a new Array is created using the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. This maintains compatibility with Web browsers that have historically had that behaviour for the Array.prototype methods that now are defined using ArraySpeciesCreate.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-function.prototype.bind": {"num": "19.2.3.2", "title": "#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )", "html": "<emu-clause id=\"sec-function.prototype.bind\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</span> Function.prototype.bind ( <var>thisArg</var>, ...<var>args</var> )</h1>\n        <p>When the <code>bind</code> method is called with argument <var>thisArg</var> and zero or more <var>args</var>, it performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>Target</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>Target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>args</var> be a new (possibly empty) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of all of the argument values provided after <var>thisArg</var> in order.</li><li>Let <var>F</var> be ?&#160;<emu-xref aoid=\"BoundFunctionCreate\"><a href=\"#sec-boundfunctioncreate\">BoundFunctionCreate</a></emu-xref>(<var>Target</var>, <var>thisArg</var>, <var>args</var>).</li><li>Let <var>targetHasLength</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>Target</var>, <code>\"length\"</code>).</li><li>If <var>targetHasLength</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>targetLen</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <code>\"length\"</code>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetLen</var>) is not Number, let <var>L</var> be 0.</li><li>Else,<ol><li>Set <var>targetLen</var> to !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>targetLen</var>).</li><li>Let <var>L</var> be the larger of 0 and the result of <var>targetLen</var> minus the number of elements of <var>args</var>.</li></ol></li></ol></li><li>Else, let <var>L</var> be 0.</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionLength\"><a href=\"#sec-setfunctionlength\">SetFunctionLength</a></emu-xref>(<var>F</var>, <var>L</var>).</li><li>Let <var>targetName</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <code>\"name\"</code>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetName</var>) is not String, set <var>targetName</var> to the empty string.</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>targetName</var>, <code>\"bound\"</code>).</li><li>Return <var>F</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Function objects created using <code>Function.prototype.bind</code> are exotic objects. They also do not have a <code>prototype</code> property.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>Target</var> is an arrow function or a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref> then the <var>thisArg</var> passed to this method will not be used by subsequent calls to <var>F</var>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>name</code> property whose value is <code>\"GeneratorFunction\"</code>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-instance-prototype": {"num": "25.3.4.3", "title": "#sec-asyncgeneratorfunction-instance-prototype prototype", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instance-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instance-prototype\">#sec-asyncgeneratorfunction-instance-prototype</span> prototype</h1>\n        <p>Whenever an AsyncGeneratorFunction instance is created another ordinary object is also created and is the initial value of the async generator function's <code>prototype</code> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created AsyncGenerator object when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike function instances, the object that is the value of the an AsyncGeneratorFunction's <code>prototype</code> property does not have a <code>constructor</code> property whose value is the AsyncGeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-function-instances-name": {"num": "19.2.4.2", "title": "#sec-function-instances-name name", "html": "<emu-clause id=\"sec-function-instances-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</span> name</h1>\n        <p>The value of the <code>name</code> property is a String that is descriptive of the function. The name has no semantic significance but is typically a variable or <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> that is used to refer to the function at its point of definition in ECMAScript code. This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <p>Anonymous functions objects that do not have a contextual name associated with them by this specification do not have a <code>name</code> own property but inherit the <code>name</code> property of <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-nativeerror.prototype.message": {"num": "19.5.6.3.2", "title": "#sec-nativeerror.prototype.message NativeError.prototype.message", "html": "<emu-clause id=\"sec-nativeerror.prototype.message\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror.prototype.message\">#sec-nativeerror.prototype.message</span> <var>NativeError</var>.prototype.message</h1>\n          <p>The initial value of the <code>message</code> property of the prototype for a given <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the empty String.</p>\n        </emu-clause>\n\n        "}, "sec-strict-mode-of-ecmascript": {"num": "C", "title": "#sec-strict-mode-of-ecmascript The Strict Mode of EMAScript", "html": "<emu-annex id=\"sec-strict-mode-of-ecmascript\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-of-ecmascript\">#sec-strict-mode-of-ecmascript</span> The Strict Mode of ECMAScript</h1>\n  <p><b>The strict mode restriction and exceptions</b></p>\n  <ul>\n    <li>\n      <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code> are reserved words within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. (<emu-xref href=\"#sec-reserved-words\"><a href=\"#sec-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-reserved-words\">#sec-reserved-words</a></emu-xref>).\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include <emu-nt>LegacyOctalIntegerLiteral</emu-nt>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include <emu-nt>NonOctalDecimalIntegerLiteral</emu-nt>.\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, may not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-nt>LegacyOctalEscapeSequence</emu-nt> as described in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n    \n    </li>\n    <li>\n      Assignment to an undeclared identifier or otherwise unresolvable reference does not create a property in the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. When a simple assignment occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, its <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> must not evaluate to an unresolvable <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>. If it does a <emu-val>ReferenceError</emu-val> exception is thrown (<emu-xref href=\"#sec-putvalue\"><a href=\"#sec-putvalue\" class=\"excluded-xref\" excluded-id=\"sec-putvalue\">#sec-putvalue</a></emu-xref>). The <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> also may not be a reference to a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> with the attribute value { [[Writable]]: <emu-val>false</emu-val> }, to an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with the attribute value { [[Set]]: <emu-val>undefined</emu-val> }, nor to a non-existent property of an object whose [[Extensible]] internal slot has the value <emu-val>false</emu-val>. In these cases a <code>TypeError</code> exception is thrown (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>).\n    \n    </li>\n    <li>\n      An <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> with the StringValue <code>\"eval\"</code> or <code>\"arguments\"</code> may not appear as the <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> of an Assignment operator (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>) or of an <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt> (<emu-xref href=\"#sec-update-expressions\"><a href=\"#sec-update-expressions\" class=\"excluded-xref\" excluded-id=\"sec-update-expressions\">#sec-update-expressions</a></emu-xref>) or as the <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> operated upon by a Prefix Increment (<emu-xref href=\"#sec-prefix-increment-operator\"><a href=\"#sec-prefix-increment-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-increment-operator\">#sec-prefix-increment-operator</a></emu-xref>) or a Prefix Decrement (<emu-xref href=\"#sec-prefix-decrement-operator\"><a href=\"#sec-prefix-decrement-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-decrement-operator\">#sec-prefix-decrement-operator</a></emu-xref>) operator.\n    \n    </li>\n    <li>\n      Arguments objects for strict functions define a non-configurable <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> <code>\"callee\"</code> which throws a <emu-val>TypeError</emu-val> exception on access (<emu-xref href=\"#sec-createunmappedargumentsobject\"><a href=\"#sec-createunmappedargumentsobject\" class=\"excluded-xref\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</a></emu-xref>).\n    \n    </li>\n    <li>\n      Arguments objects for strict functions do not dynamically share their  <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property values with the corresponding formal parameter bindings of their functions. (<emu-xref href=\"#sec-arguments-exotic-objects\"><a href=\"#sec-arguments-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects\">#sec-arguments-exotic-objects</a></emu-xref>).\n    \n    </li>\n    <li>\n      For strict functions, if an arguments object is created the binding of the local identifier <code>arguments</code> to the arguments object is immutable and hence may not be the target of an assignment expression. (<emu-xref href=\"#sec-functiondeclarationinstantiation\"><a href=\"#sec-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the StringValue of a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <code>\"eval\"</code> or <code>\"arguments\"</code> within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      Strict mode eval code cannot instantiate variables or functions in the variable environment of the caller to eval. Instead, a new variable environment is created and that environment is used for declaration binding instantiation for the eval code (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>).\n    \n    </li>\n    <li>\n      If <emu-val>this</emu-val> is evaluated within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, then the <emu-val>this</emu-val> value is not coerced to an object. A <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is not converted to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> and primitive values are not converted to wrapper objects. The <emu-val>this</emu-val> value passed via a function call (including calls made using <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>) do not coerce the passed this value to an object (<emu-xref href=\"#sec-ordinarycallbindthis\"><a href=\"#sec-ordinarycallbindthis\" class=\"excluded-xref\" excluded-id=\"sec-ordinarycallbindthis\">#sec-ordinarycallbindthis</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.apply\"><a href=\"#sec-function.prototype.apply\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.apply\">#sec-function.prototype.apply</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.call\"><a href=\"#sec-function.prototype.call\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.call\">#sec-function.prototype.call</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name (<emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>TypeError</emu-val> is thrown if the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (<emu-xref href=\"#sec-delete-operator-runtime-semantics-evaluation\"><a href=\"#sec-delete-operator-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</a></emu-xref>).\n    \n    </li>\n    <li>\n      <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">Strict mode code</a></emu-xref> may not include a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt>. The occurrence of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> in such a context is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-with-statement-static-semantics-early-errors\"><a href=\"#sec-with-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-static-semantics-early-errors\">#sec-with-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if a <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and BoundNames of <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> contains either <code>eval</code> or <code>arguments</code> (<emu-xref href=\"#sec-try-statement-static-semantics-early-errors\"><a href=\"#sec-try-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-static-semantics-early-errors\">#sec-try-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> appears more than once in the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>. An attempt to create such a function using a <code>Function</code>, <code>Generator</code>, or <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-function-definitions-static-semantics-early-errors\"><a href=\"#sec-function-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-createdynamicfunction\"><a href=\"#sec-createdynamicfunction\" class=\"excluded-xref\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</a></emu-xref>).\n    \n    </li>\n    <li>\n      An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named <code>caller</code> or <code>arguments</code> of function instances.\n    \n    </li>\n  </ul>\n</emu-annex>\n\n"}, "sec-symbol.prototype-@@tostringtag": {"num": "19.4.3.6", "title": "#sec-symbol.prototype-@@tostringtag Symbol.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-symbol.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype-@@tostringtag\">#sec-symbol.prototype-@@tostringtag</span> Symbol.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"Symbol\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-asyncgeneratorfunction-instance-name": {"num": "25.3.4.2", "title": "#sec-asyncgeneratorfunction-instance-name name", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instance-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instance-name\">#sec-asyncgeneratorfunction-instance-name</span> name</h1>\n        <p>The specification for the <code>name</code> property of Function instances given in  <emu-xref href=\"#sec-function-instances-name\"><a href=\"#sec-function-instances-name\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</a></emu-xref> also applies to AsyncGeneratorFunction instances.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>is the value of the <code>prototype</code> property of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%Generator%</dfn> (see Figure 2).</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-async-from-sync-iterator-value-unwrap-functions": {"num": "25.1.4.2.4", "title": "#sec-async-from-sync-iterator-value-unwrap-functions Async-from-Sync Iterator Value Unwrap Functions", "html": "<emu-clause id=\"sec-async-from-sync-iterator-value-unwrap-functions\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-from-sync-iterator-value-unwrap-functions\">#sec-async-from-sync-iterator-value-unwrap-functions</span> Async-from-Sync Iterator Value Unwrap Functions</h1>\n\n          <p>An async-from-sync iterator value unwrap function is an anonymous built-in function that is used by <emu-xref aoid=\"AsyncFromSyncIteratorContinuation\"><a href=\"#sec-asyncfromsynciteratorcontinuation\">AsyncFromSyncIteratorContinuation</a></emu-xref> when processing the <code>value</code> property of an  <i>IteratorResult</i> object, in order to wait for its value if it is a promise and re-package the result in a new \"unwrapped\"  <i>IteratorResult</i> object. Each async-from-sync iterator value unwrap function has a [[Done]] internal slot.</p>\n\n          <p>When an async-from-sync iterator value unwrap function is called with argument <var>value</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Return !&#160;<emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>value</var>, <var>F</var>.[[Done]]).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-promise.prototype-@@tostringtag": {"num": "25.6.5.5", "title": "#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-promise.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype-@@tostringtag\">#sec-promise.prototype-@@tostringtag</span> Promise.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"Promise\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-regexp.prototype-@@replace": {"num": "21.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"global\"</code>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"unicode\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val><ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"0\"</code>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String value.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each <var>result</var> in <var>results</var>, do<ol><li>Let <var>nCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Set <var>nCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>nCaptures</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"0\"</code>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"index\"</code>)).</li><li>Set <var>position</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>position</var>, <var>lengthS</var>), 0).</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var><ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>)).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"groups\"</code>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in list order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <var>position</var> and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>replacement</var> be <emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the current value of <var>accumulatedResult</var>, the substring of <var>S</var> consisting of the code units from <var>nextSourcePosition</var> (inclusive) up to <var>position</var> (exclusive), and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the substring of <var>S</var> consisting of the code units from <var>nextSourcePosition</var> (inclusive) up through the final code unit of <var>S</var> (inclusive).\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.replace]\"</code>.</p>\n      </emu-clause>\n\n      "}, "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions": {"num": "E", "title": "#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions Additions and Changes That Introduce Incompatibilities with Prior ditions", "html": "<emu-annex id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions</span> Additions and Changes That Introduce Incompatibilities with Prior Editions</h1>\n  <p><emu-xref href=\"#sec-tonumber-applied-to-the-string-type\"><a href=\"#sec-tonumber-applied-to-the-string-type\" class=\"excluded-xref\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</a></emu-xref>: In ECMAScript 2015, <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to a String value now recognizes and converts <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> and <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> numeric strings. In previous editions such strings were converted to <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\" class=\"excluded-xref\" excluded-id=\"sec-reference-specification-type\">#sec-reference-specification-type</a></emu-xref>: In ECMAScript 2015, Function calls are not allowed to return a <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref> value.</p>\n  <p><emu-xref href=\"#sec-names-and-keywords\"><a href=\"#sec-names-and-keywords\" class=\"excluded-xref\" excluded-id=\"sec-names-and-keywords\">#sec-names-and-keywords</a></emu-xref>: In ECMAScript 2015, the valid code points for an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are specified in terms of the Unicode properties &#8220;ID_Start&#8221; and &#8220;ID_Continue&#8221;. In previous editions, the valid <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> or <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> code points were specified by enumerating various Unicode code point categories.</p>\n  <p><emu-xref href=\"#sec-rules-of-automatic-semicolon-insertion\"><a href=\"#sec-rules-of-automatic-semicolon-insertion\" class=\"excluded-xref\" excluded-id=\"sec-rules-of-automatic-semicolon-insertion\">#sec-rules-of-automatic-semicolon-insertion</a></emu-xref>: In ECMAScript 2015, Automatic Semicolon Insertion adds a semicolon at the end of a do-while statement if the semicolon is missing. This change aligns the specification with the actual behaviour of most existing implementations.</p>\n  <p><emu-xref href=\"#sec-object-initializer-static-semantics-early-errors\"><a href=\"#sec-object-initializer-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-static-semantics-early-errors\">#sec-object-initializer-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, it is no longer an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> to have duplicate property names in Object Initializers.</p>\n  <p><emu-xref href=\"#sec-assignment-operators-static-semantics-early-errors\"><a href=\"#sec-assignment-operators-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators-static-semantics-early-errors\">#sec-assignment-operators-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> containing an assignment to an immutable binding such as the function name of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> does not produce an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref>. Instead it produces a runtime error.</p>\n  <p><emu-xref href=\"#sec-block\"><a href=\"#sec-block\" class=\"excluded-xref\" excluded-id=\"sec-block\">#sec-block</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> beginning with the token let followed by the input elements <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> then <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions, automatic semicolon insertion would always insert a semicolon before the <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> input element.</p>\n  <p><emu-xref href=\"#sec-expression-statement\"><a href=\"#sec-expression-statement\" class=\"excluded-xref\" excluded-id=\"sec-expression-statement\">#sec-expression-statement</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt> beginning with the token <code>let</code> followed by the token <code>[</code> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a sequence would be the start of an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-if-statement-runtime-semantics-evaluation\"><a href=\"#sec-if-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-if-statement-runtime-semantics-evaluation\">#sec-if-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of an <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If no <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part is evaluated or if the evaluated <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the <code>(</code> token of a for statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the ( token of a for-in statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: Prior to ECMAScript 2015, an initialization expression could appear as part of the <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> that precedes the <code>in</code> keyword. In ECMAScript 2015, the <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt> in that same position does not allow the occurrence of such an initializer. In ECMAScript 2017, such an initializer is permitted only in <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, the completion value of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is not evaluated or if the final evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-with-statement-runtime-semantics-evaluation\"><a href=\"#sec-with-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-runtime-semantics-evaluation\">#sec-with-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-switch-statement-runtime-semantics-evaluation\"><a href=\"#sec-switch-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-switch-statement-runtime-semantics-evaluation\">#sec-switch-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt> part of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>: In ECMAScript 2015, it is an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> for a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause to contain a <code>var</code> declaration for the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter. In previous editions, such a variable declaration would be instantiated in the enclosing variable environment but the declaration's <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> value would be assigned to the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>,  <emu-xref href=\"#sec-evaldeclarationinstantiation\"><a href=\"#sec-evaldeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-evaldeclarationinstantiation\">#sec-evaldeclarationinstantiation</a></emu-xref>: In ECMAScript 2015, a runtime <emu-val>SyntaxError</emu-val> is thrown if a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause evaluates a non-strict direct <code>eval</code> whose eval code includes a <code>var</code> or <code>FunctionDeclaration</code> declaration that binds the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement-runtime-semantics-evaluation\"><a href=\"#sec-try-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-runtime-semantics-evaluation\">#sec-try-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a throw completion and it has a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> part that evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val> if there is no <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause or if its <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause evaluates to an <emu-const>empty</emu-const> normal completion.</p>\n  <p><emu-xref href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\"><a href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation\">#sec-method-definitions-runtime-semantics-propertydefinitionevaluation</a></emu-xref> In ECMAScript 2015, the function objects that are created as the values of the [[Get]] or [[Set]] attribute of accessor properties in an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> are not <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> functions and they do not have a <code>prototype</code> own property. In the previous edition, they were constructors and had a <code>prototype</code> property.</p>\n  <p><emu-xref href=\"#sec-object.freeze\"><a href=\"#sec-object.freeze\" class=\"excluded-xref\" excluded-id=\"sec-object.freeze\">#sec-object.freeze</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.freeze</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertydescriptor\"><a href=\"#sec-object.getownpropertydescriptor\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertydescriptor\">#sec-object.getownpropertydescriptor</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyDescriptor</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertynames\"><a href=\"#sec-object.getownpropertynames\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertynames\">#sec-object.getownpropertynames</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyNames</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getprototypeof\"><a href=\"#sec-object.getprototypeof\" class=\"excluded-xref\" excluded-id=\"sec-object.getprototypeof\">#sec-object.getprototypeof</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getPrototypeOf</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isextensible\"><a href=\"#sec-object.isextensible\" class=\"excluded-xref\" excluded-id=\"sec-object.isextensible\">#sec-object.isextensible</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isExtensible</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isfrozen\"><a href=\"#sec-object.isfrozen\" class=\"excluded-xref\" excluded-id=\"sec-object.isfrozen\">#sec-object.isfrozen</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isFrozen</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.issealed\"><a href=\"#sec-object.issealed\" class=\"excluded-xref\" excluded-id=\"sec-object.issealed\">#sec-object.issealed</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isSealed</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.keys\"><a href=\"#sec-object.keys\" class=\"excluded-xref\" excluded-id=\"sec-object.keys\">#sec-object.keys</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.keys</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.preventextensions\"><a href=\"#sec-object.preventextensions\" class=\"excluded-xref\" excluded-id=\"sec-object.preventextensions\">#sec-object.preventextensions</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.preventExtensions</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.seal\"><a href=\"#sec-object.seal\" class=\"excluded-xref\" excluded-id=\"sec-object.seal\">#sec-object.seal</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.seal</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-function.prototype.bind\"><a href=\"#sec-function.prototype.bind\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref> is set to the [[GetPrototypeOf]] value of its target function. In the previous edition, [[Prototype]] was always set to <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-function-instances-length\"><a href=\"#sec-function-instances-length\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-length\">#sec-function-instances-length</a></emu-xref>: In ECMAScript 2015, the <code>\"length\"</code> property of function instances is configurable. In previous editions it was non-configurable.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-nativeerror-constructors\"><a href=\"#sec-properties-of-the-nativeerror-constructors\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-nativeerror-constructors\">#sec-properties-of-the-nativeerror-constructors</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. In previous editions it was the Function prototype object.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</a></emu-xref> In ECMAScript 2015, the Date prototype object is not a Date instance. In previous editions it was a Date instance whose TimeValue was <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-string.prototype.localecompare\"><a href=\"#sec-string.prototype.localecompare\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.localecompare\">#sec-string.prototype.localecompare</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.localeCompare</code> function must treat Strings that are canonically equivalent according to the Unicode standard as being identical. In previous editions implementations were permitted to ignore canonical equivalence and could instead use a bit-wise comparison.</p>\n  <p><emu-xref href=\"#sec-string.prototype.tolowercase\"><a href=\"#sec-string.prototype.tolowercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.tolowercase\">#sec-string.prototype.tolowercase</a></emu-xref> and  <emu-xref href=\"#sec-string.prototype.touppercase\"><a href=\"#sec-string.prototype.touppercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.touppercase\">#sec-string.prototype.touppercase</a></emu-xref> In ECMAScript 2015, lowercase/upper conversion processing operates on code points. In previous editions such the conversion processing was only applied to individual code units. The only affected code points are those in the Deseret block of Unicode.</p>\n  <p><emu-xref href=\"#sec-string.prototype.trim\"><a href=\"#sec-string.prototype.trim\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.trim\">#sec-string.prototype.trim</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.trim</code> method is defined to recognize white space code points that may exists outside of the Unicode BMP. However, as of Unicode 7 no such code points are defined. In previous editions such code points would not have been recognized as white space.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref> In ECMAScript 2015, If the <var>pattern</var> argument is a RegExp instance and the <var>flags</var> argument is not <emu-val>undefined</emu-val>, a new RegExp instance is created just like <var>pattern</var> except that <var>pattern</var>'s flags are replaced by the argument <var>flags</var>. In previous editions a <emu-val>TypeError</emu-val> exception was thrown when <var>pattern</var> was a RegExp instance and <var>flags</var> was not <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, the RegExp prototype object is not a RegExp instance. In previous editions it was a RegExp instance whose pattern is the empty string.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, <code>source</code>, <code>global</code>, <code>ignoreCase</code>, and <code>multiline</code> are accessor properties defined on the RegExp prototype object. In previous editions they were data properties defined on RegExp instances.</p>\n</emu-annex>\n"}, "sec-async-function-prototype-properties-toStringTag": {"num": "25.7.3.2", "title": "#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-async-function-prototype-properties-toStringTag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties-toStringTag\">#sec-async-function-prototype-properties-toStringTag</span> AsyncFunction.prototype [ @@toStringTag ]</h1>\n\n        <p>The initial value of the @@toStringTag property is the string value <code>\"AsyncFunction\"</code>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-math-@@tostringtag": {"num": "20.3.1.9", "title": "#sec-math-@@tostringtag Math [ @@toStringTag ]", "html": "<emu-clause id=\"sec-math-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-@@tostringtag\">#sec-math-@@tostringtag</span> Math [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"Math\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-bigint.prototype-@@tostringtag": {"num": "20.2.3.5", "title": "#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-bigint.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint.prototype-@@tostringtag\">#sec-bigint.prototype-@@tostringtag</span> BigInt.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"BigInt\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-regexp-instances": {"num": "21.2.6", "title": "#sec-properties-of-regexp-instances Properties of RegExp Instances", "html": "<emu-clause id=\"sec-properties-of-regexp-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-regexp-instances\">#sec-properties-of-regexp-instances</span> Properties of RegExp Instances</h1>\n      <p>RegExp instances are ordinary objects that inherit properties from the RegExp prototype object. RegExp instances have internal slots [[RegExpMatcher]], [[OriginalSource]], and [[OriginalFlags]]. The value of the [[RegExpMatcher]] internal slot is an implementation-dependent representation of the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> of the RegExp object.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Prior to ECMAScript 2015, <code>RegExp</code> instances were specified as having the own data properties <code>source</code>, <code>global</code>, <code>ignoreCase</code>, and <code>multiline</code>. Those properties are now specified as accessor properties of RegExp.prototype.</p>\n      </div></emu-note>\n      <p>RegExp instances also have the following property:</p>\n\n      <div id=\"excluded-sec-lastindex\"><h1><span class=\"secnum\">21.2.6.1</span>#sec-lastindex lastIndex</h1>...</div></emu-clause>\n\n    "}, "sec-date.prototype-@@toprimitive": {"num": "20.4.4.45", "title": "#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-date.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</span> Date.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Date object to a primitive value. The allowed values for <var>hint</var> are <code>\"default\"</code>, <code>\"number\"</code>, and <code>\"string\"</code>. Date objects, are unique among built-in ECMAScript object in that they treat <code>\"default\"</code> as being equivalent to <code>\"string\"</code>, All other built-in ECMAScript objects treat <code>\"default\"</code> as being equivalent to <code>\"number\"</code>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>hint</var> is the String value <code>\"string\"</code> or the String value <code>\"default\"</code>, then<ol><li>Let <var>tryFirst</var> be <code>\"string\"</code>.</li></ol></li><li>Else if <var>hint</var> is the String value <code>\"number\"</code>, then<ol><li>Let <var>tryFirst</var> be <code>\"number\"</code>.</li></ol></li><li>Else, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>O</var>, <var>tryFirst</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>name</code> property of this function is <code>\"[Symbol.toPrimitive]\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-ecmascript-standard-built-in-objects": {"num": "17", "title": "#sec-ecmascript-standard-built-in-objects ECMAScript Standard Built-in Objects", "html": "<emu-clause id=\"sec-ecmascript-standard-built-in-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-standard-built-in-objects\">#sec-ecmascript-standard-built-in-objects</span> ECMAScript Standard Built-in Objects</h1>\n  <p>There are certain built-in objects available whenever an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> or <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> begins execution. One, the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, is part of the lexical environment of the executing program. Others are accessible as initial properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> or indirectly as properties of accessible built-in objects.</p>\n  <p>Unless specified otherwise, a built-in object that is callable as a function is a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> with the characteristics described in  <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>. Unless specified otherwise, the [[Extensible]] internal slot of a built-in object initially has the value <emu-val>true</emu-val>. Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has a [[Realm]] internal slot whose value is the <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> of the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> for which the object was initially created.</p>\n  <p>Many built-in objects are functions: they can be invoked with arguments. Some of them furthermore are constructors: they are functions intended for use with the <code>new</code> operator. For each built-in function, this specification describes the arguments required by that function and the properties of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. For each built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, this specification furthermore describes properties of the prototype object of that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> and properties of specific object instances returned by a <code>new</code> expression that invokes that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is given fewer arguments than the function is specified to require, the function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> shall behave exactly as if it had been given sufficient additional arguments, each such argument being the <emu-val>undefined</emu-val> value. Such missing arguments are considered to be &#8220;not present&#8221; and may be identified in that manner by specification algorithms. In the description of a particular function, the terms &#8220;<code>this</code> value&#8221; and &#8220;NewTarget&#8221; have the meanings given in  <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> described is given more arguments than the function is specified to allow, the extra arguments are evaluated by the call and then ignored by the function. However, an implementation may define implementation specific behaviour relating to such arguments as long as the behaviour is not the throwing of a <emu-val>TypeError</emu-val> exception that is predicated simply on the presence of an extra argument.</p>\n  <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n    <p>Implementations that add additional capabilities to the set of built-in functions are encouraged to do so by adding new functions rather than adding new parameters to existing functions.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified every built-in function and every built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has the Function prototype object, which is the initial value of the expression <code>Function.prototype</code> (<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot.</p>\n  <p>Unless otherwise specified every built-in prototype object has the Object prototype object, which is the initial value of the expression <code>Object.prototype</code> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot, except the Object prototype object itself.</p>\n  <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function.</p>\n  <p>Each built-in function defined in this specification is created by calling the <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref> abstract operation (<emu-xref href=\"#sec-createbuiltinfunction\"><a href=\"#sec-createbuiltinfunction\" class=\"excluded-xref\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</a></emu-xref>).</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, has a <code>\"length\"</code> property whose value is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. Unless otherwise specified, this value is equal to the largest number of named arguments shown in the subclause headings for the function description. Optional parameters (which are indicated with brackets: <code>[</code> <code>]</code>) or rest parameters (which are shown using the form &#171;...name&#187;) are not included in the default argument count.</p>\n  <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n    <p>For example, the <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of the <code>map</code> property of the Array prototype object is described under the subclause heading &#171;Array.prototype.map (callbackFn [ , thisArg])&#187; which shows the two named arguments callbackFn and thisArg, the latter being optional; therefore the value of the <code>\"length\"</code> property of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is 1.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified, the <code>\"length\"</code> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, that is not identified as an anonymous function has a <code>name</code> property whose value is a String. Unless otherwise specified, this value is the name that is given to the function in this specification. For functions that are specified as properties of objects, the name value is the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string used to access the function. Functions that are specified as get or set accessor functions of built-in properties have <code>\"get \"</code> or <code>\"set \"</code> prepended to the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string. The value of the <code>name</code> property is explicitly specified for each built-in functions whose property key is a Symbol value.</p>\n  <p>Unless otherwise specified, the <code>name</code> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, if it exists, has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every other <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> described in clauses 18 through 26 and in Annex  <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified.</p>\n  <p>Every <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> described in clauses 18 through 26 and in Annex  <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified. If only a get accessor function is described, the set accessor function is the default value, <emu-val>undefined</emu-val>. If only a set accessor is described the get accessor is the default value, <emu-val>undefined</emu-val>.</p>\n</emu-clause>\n\n"}, "sec-object.prototype.tolocalestring": {"num": "19.1.3.5", "title": "#sec-object.prototype.tolocalestring Object.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )", "html": "<emu-clause id=\"sec-object.prototype.tolocalestring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.tolocalestring\">#sec-object.prototype.tolocalestring</span> Object.prototype.toLocaleString ( [ <var>reserved1</var> [ , <var>reserved2</var> ] ] )</h1>\n        <p>When the <code>toLocaleString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>O</var>, <code>\"toString\"</code>).\n        </li></ol></emu-alg>\n        <p>The optional parameters to this function are not used but are intended to correspond to the parameter pattern used by ECMA-402 <code>toLocaleString</code> functions. Implementations that do not include ECMA-402 support must not use those parameter positions for other purposes.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>This function provides a generic <code>toLocaleString</code> implementation for objects that have no locale-specific <code>toString</code> behaviour. <code>Array</code>, <code>Number</code>, <code>Date</code>, and <code>Typed Arrays</code> provide their own locale-sensitive <code>toLocaleString</code> methods.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>ECMA-402 intentionally does not provide an alternative to this default implementation.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-math-object": {"num": "20.3", "title": "#sec-math-object The Math Object", "html": "<emu-clause id=\"sec-math-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-object\">#sec-math-object</span> The Math Object</h1>\n    <p>The Math object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Math%</dfn>.</li>\n      <li>is the initial value of the <code>Math</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In this specification, the phrase &#8220;the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>&#8221; has a technical meaning defined in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-value-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.1</span>#sec-value-properties-of-the-math-object Value Properties of the Math Object</h1>...</div><div id=\"excluded-sec-function-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.2</span>#sec-function-properties-of-the-math-object Function Properties of the Math Object</h1>...</div></emu-clause>\n\n  "}, "sec-asynciteratorprototype": {"num": "25.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The  <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an ordinary object.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%.The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "23.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <code>WeakMap</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakMap</code> behaviour must include a <code>super</code> call to the <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">23.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-%regexpstringiteratorprototype%-@@tostringtag": {"num": "21.2.7.1.2", "title": "#sec-%regexpstringiteratorprototype%-@@tostringtag %RegExpStringIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%regexpstringiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%regexpstringiteratorprototype%-@@tostringtag\">#sec-%regexpstringiteratorprototype%-@@tostringtag</span> %RegExpStringIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <code>\"RegExp String Iterator\"</code>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-generatorfunction.prototype-@@tostringtag": {"num": "25.2.3.3", "title": "#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-generatorfunction.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction.prototype-@@tostringtag\">#sec-generatorfunction.prototype-@@tostringtag</span> GeneratorFunction.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <code>\"GeneratorFunction\"</code>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-generator-objects": {"num": "25.4", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the  <i>Iterator</i> and  <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the value of the <code>prototype</code> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, %Generator.prototype%.</p>\n\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">25.4.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">25.4.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">25.4.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-typedarray.bytes_per_element": {"num": "22.2.5.1", "title": "#sec-typedarray.bytes_per_element TypedArray.BYTES_PER_ELEMENT", "html": "<emu-clause id=\"sec-typedarray.bytes_per_element\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray.bytes_per_element\">#sec-typedarray.bytes_per_element</span> <var>TypedArray</var>.BYTES_PER_ELEMENT</h1>\n        <p>The value of <var>TypedArray</var>.BYTES_PER_ELEMENT is the Element Size value specified in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>TypedArray</var>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-generatorfunction-instances-prototype": {"num": "25.2.4.3", "title": "#sec-generatorfunction-instances-prototype prototype", "html": "<emu-clause id=\"sec-generatorfunction-instances-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances-prototype\">#sec-generatorfunction-instances-prototype</span> prototype</h1>\n        <p>Whenever a GeneratorFunction instance is created another ordinary object is also created and is the initial value of the generator function's <code>prototype</code> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created Generator object when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike Function instances, the object that is the value of the a GeneratorFunction's <code>prototype</code> property does not have a <code>constructor</code> property whose value is the GeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-symbol.matchall": {"num": "19.4.2.8", "title": "#sec-symbol.matchall Symbol.matchAll", "html": "<emu-clause id=\"sec-symbol.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.matchall\">#sec-symbol.matchall</span> Symbol.matchAll</h1>\n        <p>The initial value of <emu-val>Symbol.matchAll</emu-val> is the well-known symbol @@matchAll (<emu-xref href=\"#table-2\"><a href=\"#table-2\" class=\"excluded-xref\" excluded-id=\"table-2\">#table-2</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-lastindex": {"num": "21.2.6.1", "title": "#sec-lastindex lastIndex", "html": "<emu-clause id=\"sec-lastindex\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lastindex\">#sec-lastindex</span> lastIndex</h1>\n        <p>The value of the <code>lastIndex</code> property specifies the String index at which to start the next match. It is coerced to an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> when used (see  <emu-xref href=\"#sec-regexpbuiltinexec\"><a href=\"#sec-regexpbuiltinexec\" class=\"excluded-xref\" excluded-id=\"sec-regexpbuiltinexec\">#sec-regexpbuiltinexec</a></emu-xref>). This property shall have the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-async-function-instances-name": {"num": "25.7.4.2", "title": "#sec-async-function-instances-name name", "html": "<emu-clause id=\"sec-async-function-instances-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-instances-name\">#sec-async-function-instances-name</span> name</h1>\n        <p>The specification for the <code>name</code> property of Function instances given in  <emu-xref href=\"#sec-function-instances-name\"><a href=\"#sec-function-instances-name\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</a></emu-xref> also applies to AsyncFunction instances.</p>\n      </emu-clause>\n    "}, "sec-set-constructor": {"num": "23.2.1", "title": "#sec-set-constructor The Set Constructor", "html": "<emu-clause id=\"sec-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</span> The Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Set%</dfn>.</li>\n        <li>is the initial value of the <code>Set</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Set object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Set</code> behaviour must include a <code>super</code> call to the <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Set.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set-iterable\"><h1><span class=\"secnum\">23.2.1.1</span>#sec-set-iterable Set ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-regexp-constructor": {"num": "21.2.3", "title": "#sec-regexp-constructor The RegExp Constructor", "html": "<emu-clause id=\"sec-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</span> The RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExp%</dfn>.</li>\n        <li>is the initial value of the <code>RegExp</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new RegExp object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>RegExp(&#8230;)</code> is equivalent to the object creation expression <code>new RegExp(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>RegExp</code> behaviour must include a <code>super</code> call to the <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the necessary internal slots.</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp-pattern-flags\"><h1><span class=\"secnum\">21.2.3.1</span>#sec-regexp-pattern-flags RegExp ( pattern, flags )</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-regexp-constructor\"><h1><span class=\"secnum\">21.2.3.2</span>#sec-abstract-operations-for-the-regexp-constructor Abstract Operations for the RegExp Constructor</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.reduceright": {"num": "22.1.3.22", "title": "#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )", "html": "<emu-clause id=\"sec-array.prototype.reduceright\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reduceright\">#sec-array.prototype.reduceright</span> Array.prototype.reduceRight ( <var>callbackfn</var> [ , <var>initialValue</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that takes four arguments. <code>reduceRight</code> calls the callback, as a function, once for each element after the first element present in the array, in descending order.</p>\n          <p><var>callbackfn</var> is called with four arguments: the <var>previousValue</var> (value from the previous call to <var>callbackfn</var>), the <var>currentValue</var> (value of the current element), the <var>currentIndex</var>, and the object being traversed. The first time the function is called, the <var>previousValue</var> and <var>currentValue</var> can be one of two values. If an <var>initialValue</var> was supplied in the call to <code>reduceRight</code>, then <var>previousValue</var> will be equal to <var>initialValue</var> and <var>currentValue</var> will be equal to the last value in the array. If no <var>initialValue</var> was supplied, then <var>previousValue</var> will be equal to the last value in the array and <var>currentValue</var> will be equal to the second-to-last value. It is a <emu-val>TypeError</emu-val> if the array contains no elements and <var>initialValue</var> is not provided.</p>\n          <p><code>reduceRight</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>reduceRight</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>reduceRight</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed by <var>callbackfn</var>, their value as passed to <var>callbackfn</var> will be the value at the time <code>reduceRight</code> visits them; elements that are deleted after the call to <code>reduceRight</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>reduceRight</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>len</var> is 0 and <var>initialValue</var> is not present, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be <var>len</var> - 1.</li><li>Let <var>accumulator</var> be <emu-val>undefined</emu-val>.</li><li>If <var>initialValue</var> is present, then<ol><li>Set <var>accumulator</var> to <var>initialValue</var>.</li></ol></li><li>Else,<ol><li>Let <var>kPresent</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>kPresent</var> is <emu-val>false</emu-val> and <var>k</var> &#8805; 0<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Set <var>kPresent</var> to ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>If <var>kPresent</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <emu-val>undefined</emu-val>, &#171; <var>accumulator</var>, <var>kValue</var>, <var>k</var>, <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return <var>accumulator</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reduceRight</code> function is intentionally generic; it does not require that its this value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-typedarray.prototype.bytes_per_element": {"num": "22.2.6.1", "title": "#sec-typedarray.prototype.bytes_per_element TypedArray.prototype.BYTES_PER_ELEMENT", "html": "<emu-clause id=\"sec-typedarray.prototype.bytes_per_element\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray.prototype.bytes_per_element\">#sec-typedarray.prototype.bytes_per_element</span> <var>TypedArray</var>.prototype.BYTES_PER_ELEMENT</h1>\n        <p>The value of  <code><var>TypedArray</var>.prototype.BYTES_PER_ELEMENT</code> is the Element Size value specified in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>TypedArray</var>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-regexp-prototype-object": {"num": "21.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The RegExp prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExpPrototype%</dfn>.</li>\n        <li>is an ordinary object.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <code>valueOf</code> property of its own; however, it inherits the <code>valueOf</code> property from the Object prototype object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">21.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">21.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">21.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">21.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">21.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">21.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">21.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">21.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">21.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">21.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">21.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">21.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">21.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">21.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">21.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">21.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">21.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}}, "figData": {"figure-1": "Figure 1", "table-1": "Table 1", "table-2": "Table 3", "table-3": "Table 4", "table-5": "Table 6", "table-7": "Table 8", "table-15": "Table 16", "table-16": "Table 17", "table-17": "Table 18", "table-27": "Table 29", "table-cyclic-module-fields": "Table 41", "table-38": "Table 43", "table-39": "Table 44", "table-40": "Table 45", "table-41": "Table 46", "table-42": "Table 47", "table-dynamic-function-sourcetext-prefixes": "Table 49", "table-49": "Table 62", "table-53": "Table 67", "table-54": "Table 68", "table-async-iterator-required": "Table 70", "table-async-iterator-optional": "Table 71", "table-55": "Table 72", "table-56": "Table 74", "table-internal-slots-of-asyncgenerator-instances": "Table 75"}}, "to": {"secList": ["sec-reflect-object", "sec-regexp-prototype-matchall", "sec-ordinarycreatefromconstructor", "sec-set.prototype-@@tostringtag", "sec-json-object", "sec-constructor", "sec-get-%typedarray%.prototype-@@tostringtag", "sec-weakset.prototype-@@tostringtag", "sec-async-function-prototype-properties", "sec-object.prototype.__proto__", "sec-properties-of-the-nativeerror-constructors", "sec-@@tostringtag", "sec-generator.prototype-@@tostringtag", "sec-symbol.prototype-@@toprimitive", "sec-bigint-constructor", "sec-date-constructor", "sec-iterator-interface", "sec-number.min_safe_integer", "sec-properties-of-asyncgeneratorfunction", "sec-regexp.prototype-@@match", "sec-promise-constructor", "sec-get-regexp-@@species", "sec-properties-of-the-typedarray-constructors", "sec-objects", "sec-function-environment-records", "sec-nativeerror-object-structure", "sec-asynciterator-interface", "sec-number-constructor", "sec-globalthis", "sec-hasrestrictedglobalproperty", "sec-getprototypefromconstructor", "sec-sharedarraybuffer-@@species", "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact", "sec-string.prototype-@@iterator", "sec-setfunctionname", "sec-get-map-@@species", "sec-weakmap.prototype-@@tostringtag", "sec-get-set-@@species", "sec-function-definitions-runtime-semantics-evaluation", "sec-boolean-constructor", "sec-__proto__-property-names-in-object-initializers", "sec-async-function-constructor-properties", "sec-built-in-function-objects", "sec-regexp.prototype-@@search", "sec-number.max_safe_integer", "sec-createdynamicfunction", "sec-map-constructor", "sec-additional-properties-of-the-string.prototype-object", "sec-asyncgenerator-prototype-tostringtag", "sec-arraybuffer-constructor", "sec-math.sinh", "sec-function.prototype.tostring", "sec-get-arraybuffer-@@species", "sec-number.epsilon", "sec-makeconstructor", "sec-function-constructor", "sec-nativeerror.prototype.constructor", "sec-%stringiteratorprototype%-@@tostringtag", "sec-properties-of-the-proxy-constructor", "sec-sharedarraybuffer-constructor", "sec-map.prototype-@@iterator", "sec-number.parseint", "sec-dataview.prototype-@@tostringtag", "sec-function.prototype-@@hasinstance", "sec-properties-of-asyncgeneratorfunction-prototype", "sec-get-array-@@species", "sec-error-constructor", "sec-proxy-constructor", "sec-atomics-object", "sec-asyncgenerator-objects", "sec-date.prototype.togmtstring", "sec-regexp.prototype-@@split", "sec-asynciteratorprototype-asynciterator", "sec-math.tanh", "sec-get-%typedarray%-@@species", "sec-typedarray.prototype.constructor", "sec-object-constructor", "sec-json-@@tostringtag", "sec-get-promise-@@species", "sec-%iteratorprototype%-@@iterator", "sec-atomics.islockfree", "sec-sharedarraybuffer.prototype.toString", "sec-map.prototype-@@tostringtag", "sec-json.stringify", "sec-array-constructor", "sec-well-known-intrinsic-objects", "sec-set.prototype-@@iterator", "sec-generatorfunction-instances-name", "sec-asyncgeneratorfunction-prototype-tostringtag", "sec-source-text-module-records", "sec-properties-of-the-function-prototype-object", "sec-number.negative_infinity", "sec-regexpexec", "sec-atomics-@@tostringtag", "sec-number.parsefloat", "sec-%iteratorprototype%-object", "sec-terms-and-definitions-prototype", "sec-iteratorresult-interface", "sec-%arrayiteratorprototype%-@@tostringtag", "sec-nativeerror.prototype.name", "sec-dataview-constructor", "sec-set.prototype.keys", "sec-number.positive_infinity", "sec-properties-of-the-%typedarray%-intrinsic-object", "sec-math.cosh", "sec-%setiteratorprototype%-@@tostringtag", "sec-instanceofoperator", "sec-weakset-constructor", "sec-properties-of-asyncgenerator-prototype", "sec-symbol-constructor", "sec-function-instances-prototype", "sec-%mapiteratorprototype%-@@tostringtag", "sec-arraybuffer.prototype-@@tostringtag", "sec-properties-of-generator-prototype", "sec-string-constructor", "sec-arrayspeciescreate", "sec-function.prototype.bind", "sec-properties-of-the-generatorfunction-constructor", "sec-asyncgeneratorfunction-instance-prototype", "sec-function-instances-name", "sec-nativeerror.prototype.message", "sec-strict-mode-of-ecmascript", "sec-symbol.prototype-@@tostringtag", "sec-asyncgeneratorfunction-instance-name", "sec-properties-of-the-generatorfunction-prototype-object", "sec-async-from-sync-iterator-value-unwrap-functions", "sec-promise.prototype-@@tostringtag", "sec-regexp.prototype-@@replace", "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions", "sec-async-function-prototype-properties-toStringTag", "sec-math-@@tostringtag", "sec-bigint.prototype-@@tostringtag", "sec-properties-of-regexp-instances", "sec-date.prototype-@@toprimitive", "sec-ecmascript-standard-built-in-objects", "sec-object.prototype.tolocalestring", "sec-math-object", "sec-asynciteratorprototype", "sec-weakmap-constructor", "sec-%regexpstringiteratorprototype%-@@tostringtag", "sec-generatorfunction.prototype-@@tostringtag", "sec-generator-objects", "sec-typedarray.bytes_per_element", "sec-generatorfunction-instances-prototype", "sec-symbol.matchall", "sec-lastindex", "sec-async-function-instances-name", "sec-set-constructor", "sec-regexp-constructor", "sec-array.prototype.reduceright", "sec-typedarray.prototype.bytes_per_element", "sec-properties-of-the-regexp-prototype-object"], "secData": {"sec-reflect-object": {"num": "26.1", "title": "#sec-reflect-object The Reflect Object", "html": "<emu-clause id=\"sec-reflect-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</span> The Reflect Object</h1>\n    <p>The Reflect object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Reflect%</dfn>.</li>\n      <li>is the initial value of the <code>\"Reflect\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n\n    <div id=\"excluded-sec-reflect.apply\"><h1><span class=\"secnum\">26.1.1</span>#sec-reflect.apply Reflect.apply ( target, thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-reflect.construct\"><h1><span class=\"secnum\">26.1.2</span>#sec-reflect.construct Reflect.construct ( target, argumentsList [ , newTarget ] )</h1>...</div><div id=\"excluded-sec-reflect.defineproperty\"><h1><span class=\"secnum\">26.1.3</span>#sec-reflect.defineproperty Reflect.defineProperty ( target, propertyKey, attributes )</h1>...</div><div id=\"excluded-sec-reflect.deleteproperty\"><h1><span class=\"secnum\">26.1.4</span>#sec-reflect.deleteproperty Reflect.deleteProperty ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.get\"><h1><span class=\"secnum\">26.1.5</span>#sec-reflect.get Reflect.get ( target, propertyKey [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.getownpropertydescriptor\"><h1><span class=\"secnum\">26.1.6</span>#sec-reflect.getownpropertydescriptor Reflect.getOwnPropertyDescriptor ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.getprototypeof\"><h1><span class=\"secnum\">26.1.7</span>#sec-reflect.getprototypeof Reflect.getPrototypeOf ( target )</h1>...</div><div id=\"excluded-sec-reflect.has\"><h1><span class=\"secnum\">26.1.8</span>#sec-reflect.has Reflect.has ( target, propertyKey )</h1>...</div><div id=\"excluded-sec-reflect.isextensible\"><h1><span class=\"secnum\">26.1.9</span>#sec-reflect.isextensible Reflect.isExtensible ( target )</h1>...</div><div id=\"excluded-sec-reflect.ownkeys\"><h1><span class=\"secnum\">26.1.10</span>#sec-reflect.ownkeys Reflect.ownKeys ( target )</h1>...</div><div id=\"excluded-sec-reflect.preventextensions\"><h1><span class=\"secnum\">26.1.11</span>#sec-reflect.preventextensions Reflect.preventExtensions ( target )</h1>...</div><div id=\"excluded-sec-reflect.set\"><h1><span class=\"secnum\">26.1.12</span>#sec-reflect.set Reflect.set ( target, propertyKey, V [ , receiver ] )</h1>...</div><div id=\"excluded-sec-reflect.setprototypeof\"><h1><span class=\"secnum\">26.1.13</span>#sec-reflect.setprototypeof Reflect.setPrototypeOf ( target, proto )</h1>...</div></emu-clause>\n\n  "}, "sec-regexp-prototype-matchall": {"num": "21.2.5.8", "title": "#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )", "html": "<emu-clause id=\"sec-regexp-prototype-matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-prototype-matchall\">#sec-regexp-prototype-matchall</span> RegExp.prototype [ @@matchAll ] ( <var>string</var> )</h1>\n\n        <p>When the <code>@@matchAll</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>R</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>R</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"flags\"</code>)).</li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>R</var>, <var>flags</var> &#187;).</li><li>Let <var>lastIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"lastIndex\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>matcher</var>, <code>\"lastIndex\"</code>, <var>lastIndex</var>, <emu-val>true</emu-val>).</li><li>If <var>flags</var> contains <code>\"g\"</code>, let <var>global</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>global</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <code>\"u\"</code>, let <var>fullUnicode</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>fullUnicode</var> be <emu-val>false</emu-val>.</li><li>Return !&#160;<emu-xref aoid=\"CreateRegExpStringIterator\"><a href=\"#sec-createregexpstringiterator\">CreateRegExpStringIterator</a></emu-xref>(<var>matcher</var>, <var>S</var>, <var>global</var>, <var>fullUnicode</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.matchAll]\"</emu-val>.</p>\n\n        <div id=\"excluded-sec-createregexpstringiterator\"><h1><span class=\"secnum\">21.2.5.8.1</span>#sec-createregexpstringiterator CreateRegExpStringIterator ( R, S, global, fullUnicode )</h1>...</div></emu-clause>\n\n      "}, "sec-ordinarycreatefromconstructor": {"num": "9.1.13", "title": "#sec-ordinarycreatefromconstructor OrdinaryCreateFromConstructor ( constructor, intrinsicDefaultProto [ , internalSlotsList ] )", "html": "<emu-clause id=\"sec-ordinarycreatefromconstructor\" aoid=\"OrdinaryCreateFromConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinarycreatefromconstructor\">#sec-ordinarycreatefromconstructor</span> OrdinaryCreateFromConstructor ( <var>constructor</var>, <var>intrinsicDefaultProto</var> [ , <var>internalSlotsList</var> ] )</h1>\n      <p>The abstract operation OrdinaryCreateFromConstructor creates an ordinary object whose [[Prototype]] value is retrieved from a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property, if it exists. Otherwise the intrinsic named by <var>intrinsicDefaultProto</var> is used for [[Prototype]]. The optional <var>internalSlotsList</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of the names of additional internal slots that must be defined as part of the object. If the list is not provided, a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> is used. This abstract operation performs the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>intrinsicDefaultProto</var> is a String value that is this specification's name of an intrinsic object. The corresponding object must be an intrinsic that is intended to be used as the [[Prototype]] value of an object.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>constructor</var>, <var>intrinsicDefaultProto</var>).</li><li>Return <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(<var>proto</var>, <var>internalSlotsList</var>).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-set.prototype-@@tostringtag": {"num": "23.2.3.12", "title": "#sec-set.prototype-@@tostringtag Set.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-set.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype-@@tostringtag\">#sec-set.prototype-@@tostringtag</span> Set.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Set\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-json-object": {"num": "24.5", "title": "#sec-json-object The JSON Object", "html": "<emu-clause id=\"sec-json-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-object\">#sec-json-object</span> The JSON Object</h1>\n    <p>The JSON object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%JSON%</dfn>.</li>\n      <li>is the initial value of the <code>\"JSON\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>contains two functions, <code>parse</code> and <code>stringify</code>, that are used to parse and construct JSON texts.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The JSON Data Interchange Format is defined in ECMA-404. The JSON interchange format used in this specification is exactly that described by ECMA-404. Conforming implementations of <code>JSON.parse</code> and <code>JSON.stringify</code> must support the exact interchange format described in the ECMA-404 specification without any deletions or extensions to the format.</p>\n\n    <div id=\"excluded-sec-json.parse\"><h1><span class=\"secnum\">24.5.1</span>#sec-json.parse JSON.parse ( text [ , reviver ] )</h1>...</div><div id=\"excluded-sec-json.stringify\"><h1><span class=\"secnum\">24.5.2</span>#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )</h1>...</div><div id=\"excluded-sec-json-@@tostringtag\"><h1><span class=\"secnum\">24.5.3</span>#sec-json-@@tostringtag JSON [ @@toStringTag ]</h1>...</div></emu-clause>\n"}, "sec-constructor": {"num": "4.3.4", "title": "#sec-constructor constructor", "html": "<emu-clause id=\"sec-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-constructor\">#sec-constructor</span> constructor</h1>\n      <p><emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that creates and initializes objects</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The value of a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property is a prototype object that is used to implement inheritance and shared properties.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-get-%typedarray%.prototype-@@tostringtag": {"num": "22.2.3.32", "title": "#sec-get-%typedarray%.prototype-@@tostringtag get %TypedArray%.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-get-%typedarray%.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-%typedarray%.prototype-@@tostringtag\">#sec-get-%typedarray%.prototype-@@tostringtag</span> get %TypedArray%.prototype [ @@toStringTag ]</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>.prototype[@@toStringTag]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, return <emu-val>undefined</emu-val>.</li><li>If <var>O</var> does not have a [[TypedArrayName]] internal slot, return <emu-val>undefined</emu-val>.</li><li>Let <var>name</var> be <var>O</var>.[[TypedArrayName]].</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is String.</li><li>Return <var>name</var>.\n        </li></ol></emu-alg>\n        <p>This property has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <p>The initial value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.toStringTag]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-weakset.prototype-@@tostringtag": {"num": "23.4.3.5", "title": "#sec-weakset.prototype-@@tostringtag WeakSet.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-weakset.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset.prototype-@@tostringtag\">#sec-weakset.prototype-@@tostringtag</span> WeakSet.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"WeakSet\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-async-function-prototype-properties": {"num": "25.7.3", "title": "#sec-async-function-prototype-properties Properties of the AsyncFunction Prototype Object", "html": "<emu-clause id=\"sec-async-function-prototype-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties\">#sec-async-function-prototype-properties</span> Properties of the AsyncFunction Prototype Object</h1>\n      <p>The AsyncFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref>.</li>\n        <li>is the value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%AsyncFunctionPrototype%</dfn>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-prototype-properties-constructor\"><h1><span class=\"secnum\">25.7.3.1</span>#sec-async-function-prototype-properties-constructor AsyncFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-async-function-prototype-properties-toStringTag\"><h1><span class=\"secnum\">25.7.3.2</span>#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-object.prototype.__proto__": {"num": "B.2.2.1", "title": "#sec-object.prototype.__proto__ Object.prototype.__proto__", "html": "<emu-annex id=\"sec-object.prototype.__proto__\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.__proto__\">#sec-object.prototype.__proto__</span> Object.prototype.__proto__</h1>\n        <p><code>Object.prototype.__proto__</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }. The [[Get]] and [[Set]] attributes are defined as follows:</p>\n\n        <div id=\"excluded-sec-get-object.prototype.__proto__\"><h1><span class=\"secnum\">B.2.2.1.1</span>#sec-get-object.prototype.__proto__ get Object.prototype.__proto__</h1>...</div><div id=\"excluded-sec-set-object.prototype.__proto__\"><h1><span class=\"secnum\">B.2.2.1.2</span>#sec-set-object.prototype.__proto__ set Object.prototype.__proto__</h1>...</div></emu-annex>\n\n      "}, "sec-properties-of-the-nativeerror-constructors": {"num": "19.5.6.2", "title": "#sec-properties-of-the-nativeerror-constructors Properties of the NativeError Constructors", "html": "<emu-clause id=\"sec-properties-of-the-nativeerror-constructors\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-nativeerror-constructors\">#sec-properties-of-the-nativeerror-constructors</span> Properties of the <var>NativeError</var> Constructors</h1>\n        <p>Each <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n        <ul>\n          <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>.</li>\n          <li>has a <code>\"name\"</code> property whose value is the String value <emu-val>\"NativeError\"</emu-val>.</li>\n          <li>has the following properties:</li>\n        </ul>\n\n        <div id=\"excluded-sec-nativeerror.prototype\"><h1><span class=\"secnum\">19.5.6.2.1</span>#sec-nativeerror.prototype NativeError.prototype</h1>...</div></emu-clause>\n\n      "}, "sec-@@tostringtag": {"num": "26.3.1", "title": "#sec-@@tostringtag @@toStringTag", "html": "<emu-clause id=\"sec-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-@@tostringtag\">#sec-@@tostringtag</span> @@toStringTag</h1>\n      <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Module\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-generator.prototype-@@tostringtag": {"num": "25.4.1.5", "title": "#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-generator.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator.prototype-@@tostringtag\">#sec-generator.prototype-@@tostringtag</span> Generator.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Generator\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-symbol.prototype-@@toprimitive": {"num": "19.4.3.5", "title": "#sec-symbol.prototype-@@toprimitive Symbol.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-symbol.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype-@@toprimitive\">#sec-symbol.prototype-@@toprimitive</span> Symbol.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Symbol object to a primitive value. The allowed values for <var>hint</var> are <code>\"default\"</code>, <code>\"number\"</code>, and <code>\"string\"</code>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Return ?&#160;<emu-xref href=\"#sec-thissymbolvalue\"><a href=\"#sec-thissymbolvalue\">thisSymbolValue</a></emu-xref>(<emu-val>this</emu-val> value).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.toPrimitive]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-bigint-constructor": {"num": "20.2.1", "title": "#sec-bigint-constructor The BigInt Constructor", "html": "<emu-clause id=\"sec-bigint-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</span> The BigInt Constructor</h1>\n      <p>The BigInt <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%BigInt%</dfn>.</li>\n        <li>is the initial value of the <code>\"BigInt\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be used with the <code>new</code> operator or to be subclassed. It may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to the <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> will cause an exception.</li>\n      </ul>\n\n      <div id=\"excluded-sec-bigint-constructor-number-value\"><h1><span class=\"secnum\">20.2.1.1</span>#sec-bigint-constructor-number-value BigInt ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-date-constructor": {"num": "20.4.2", "title": "#sec-date-constructor The Date Constructor", "html": "<emu-clause id=\"sec-date-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</span> The Date Constructor</h1>\n      <p>The Date <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Date%</dfn>.</li>\n        <li>is the initial value of the <code>\"Date\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Date object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>returns a String representing the current time (UTC) when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Date</code> behaviour must include a <code>super</code> call to the <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[DateValue]] internal slot.</li>\n        <li>has a <code>\"length\"</code> property whose value is 7.</li>\n      </ul>\n\n      <div id=\"excluded-sec-date-year-month-date-hours-minutes-seconds-ms\"><h1><span class=\"secnum\">20.4.2.1</span>#sec-date-year-month-date-hours-minutes-seconds-ms Date ( year, month [ , date [ , hours [ , minutes [ , seconds [ , ms ] ] ] ] ] )</h1>...</div><div id=\"excluded-sec-date-value\"><h1><span class=\"secnum\">20.4.2.2</span>#sec-date-value Date ( value )</h1>...</div><div id=\"excluded-sec-date-constructor-date\"><h1><span class=\"secnum\">20.4.2.3</span>#sec-date-constructor-date Date ( )</h1>...</div></emu-clause>\n\n    "}, "sec-iterator-interface": {"num": "25.1.1.2", "title": "#sec-iterator-interface The  Iterator Interface", "html": "<emu-clause id=\"sec-iterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</span> The  <i>Iterator</i> Interface</h1>\n        <p>An object that implements the  <i>Iterator</i> interface must include the property in  <emu-xref href=\"#table-53\"><a href=\"#table-53\" class=\"excluded-xref\" excluded-id=\"table-53\">#table-53</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-54\"><a href=\"#table-54\" class=\"excluded-xref\" excluded-id=\"table-54\">#table-54</a></emu-xref>.</p>\n        <emu-table id=\"table-53\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-53\">#table-53</span>:  <i>Iterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\"next\"</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>Iterator</i> has returned an  <i>IteratorResult</i> object whose <code>\"done\"</code> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return an  <i>IteratorResult</i> object whose <code>\"done\"</code> property is <emu-val>true</emu-val>. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the next function but their interpretation and validity is dependent upon the target  <i>Iterator</i>. The for-of statement and other common users of  <em>Iterators</em> do not pass any arguments, so  <i>Iterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-54\" caption=\"&lt;i&gt;Iterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-54\">#table-54</span>:  <i>Iterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\"return\"</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>Iterator</i>. The returned  <i>IteratorResult</i> object will typically have a <code>\"done\"</code> property whose value is <emu-val>true</emu-val>, and a <code>\"value\"</code> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\"throw\"</code>\n              \n              </td>\n              <td>\n                A function that returns an  <i>IteratorResult</i> object.\n              \n              </td>\n              <td>\n                The returned object must conform to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>Iterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to <code>throw</code> the value passed as the argument. If the method does not <code>throw</code>, the returned  <i>IteratorResult</i> object will typically have a <code>\"done\"</code> property whose value is <emu-val>true</emu-val>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>of</code>, <code>yield*</code>, and array destructuring call these methods after performing an existence check. Most ECMAScript library functions that accept  <i>Iterable</i> objects as arguments also conditionally call them.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number.min_safe_integer": {"num": "20.1.2.8", "title": "#sec-number.min_safe_integer Number.MIN_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.min_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.min_safe_integer\">#sec-number.min_safe_integer</span> Number.MIN_SAFE_INTEGER</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Number.MIN_SAFE_INTEGER</code> is the smallest <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> n such that n and n - 1 are both exactly representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>The value of <code>Number.MIN_SAFE_INTEGER</code> is -9007199254740991 (-(2<sup>53</sup> - 1)).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-asyncgeneratorfunction": {"num": "25.3.2", "title": "#sec-properties-of-asyncgeneratorfunction Properties of the AsyncGeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction\">#sec-properties-of-asyncgeneratorfunction</span> Properties of the AsyncGeneratorFunction Constructor</h1>\n      <p>The AsyncGeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>\"name\"</code> property whose value is <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-length\"><h1><span class=\"secnum\">25.3.2.1</span>#sec-asyncgeneratorfunction-length AsyncGeneratorFunction.length</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype\"><h1><span class=\"secnum\">25.3.2.2</span>#sec-asyncgeneratorfunction-prototype AsyncGeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-regexp.prototype-@@match": {"num": "21.2.5.7", "title": "#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )", "html": "<emu-clause id=\"sec-regexp.prototype-@@match\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</span> RegExp.prototype [ @@match ] ( <var>string</var> )</h1>\n        <p>When the <code>@@match</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"global\"</code>)).</li><li>If <var>global</var> is <emu-val>false</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>global</var> is <emu-val>true</emu-val>.</li><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"unicode\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, 0, <emu-val>true</emu-val>).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>n</var> be 0.</li><li>Repeat,<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, then<ol><li>If <var>n</var> = 0, return <emu-val>null</emu-val>.</li><li>Return <var>A</var>.</li></ol></li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"0\"</code>)).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>), <var>matchStr</var>).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li><li>Set <var>n</var> to <var>n</var> + 1.\n        </li></ol></li></ol></li></ol></li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.match]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The @@match property is used by the <emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref> abstract operation to identify objects that have the basic behaviour of regular expressions. The absence of a @@match property or the existence of such a property whose value does not Boolean coerce to <emu-val>true</emu-val> indicates that the object is not intended to be used as a regular expression object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-promise-constructor": {"num": "25.6.3", "title": "#sec-promise-constructor The Promise Constructor", "html": "<emu-clause id=\"sec-promise-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</span> The Promise Constructor</h1>\n      <p>The Promise <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Promise%</dfn>.</li>\n        <li>is the initial value of the <code>\"Promise\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Promise object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Promise</code> behaviour must include a <code>super</code> call to the <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Promise</code> and <code>Promise.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-promise-executor\"><h1><span class=\"secnum\">25.6.3.1</span>#sec-promise-executor Promise ( executor )</h1>...</div></emu-clause>\n\n    "}, "sec-get-regexp-@@species": {"num": "21.2.4.2", "title": "#sec-get-regexp-@@species get RegExp [ @@species ]", "html": "<emu-clause id=\"sec-get-regexp-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-regexp-@@species\">#sec-get-regexp-@@species</span> get RegExp [ @@species ]</h1>\n        <p><code>RegExp[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>RegExp prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-properties-of-the-typedarray-constructors": {"num": "22.2.5", "title": "#sec-properties-of-the-typedarray-constructors Properties of the TypedArray Constructors", "html": "<emu-clause id=\"sec-properties-of-the-typedarray-constructors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-typedarray-constructors\">#sec-properties-of-the-typedarray-constructors</span> Properties of the <var>TypedArray</var> Constructors</h1>\n      <p>Each <var>TypedArray</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>.</li>\n        <li>has a <code>\"name\"</code> property whose value is the String value of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name specified for it in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-typedarray.bytes_per_element\"><h1><span class=\"secnum\">22.2.5.1</span>#sec-typedarray.bytes_per_element TypedArray.BYTES_PER_ELEMENT</h1>...</div><div id=\"excluded-sec-typedarray.prototype\"><h1><span class=\"secnum\">22.2.5.2</span>#sec-typedarray.prototype TypedArray.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-objects": {"num": "4.2.1", "title": "#sec-objects Objects", "html": "<emu-clause id=\"sec-objects\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-objects\">#sec-objects</span> Objects</h1>\n      <p>Even though ECMAScript includes syntax for class definitions, ECMAScript objects are not fundamentally class-based such as those in C++, Smalltalk, or Java. Instead objects may be created in various ways including via a literal notation or via  <em>constructors</em> which create objects and then execute code that initializes all or part of them by assigning initial values to their properties. Each <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a function that has a property named <code>\"prototype\"</code> that is used to implement  <em>prototype-based inheritance</em> and  <em>shared properties</em>. Objects are created by using constructors in  <b>new</b> expressions; for example, <code>new Date(2009, 11)</code> creates a new Date object. Invoking a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> without using  <b>new</b> has consequences that depend on the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. For example, <code>Date()</code> produces a string representation of the current date and time rather than an object.</p>\n      <p>Every object created by a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has an implicit reference (called the object's  <em>prototype</em>) to the value of its <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property. Furthermore, a prototype may have a non-null implicit reference to its prototype, and so on; this is called the  <em>prototype chain</em>. When a reference is made to a property in an object, that reference is to the property of that name in the first object in the prototype chain that contains a property of that name. In other words, first the object mentioned directly is examined for such a property; if that object contains the named property, that is the property to which the reference refers; if that object does not contain the named property, the prototype for that object is examined next; and so on.</p>\n      <emu-figure id=\"figure-1\" caption=\"Object/Prototype Relationships\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"figure-1\">#figure-1</span>: Object/Prototype Relationships</figcaption>\n        <object data=\"img/figure-1.svg\" height=\"354\" type=\"image/svg+xml\" width=\"719\"> <img alt=\"An image of lots of boxes and arrows.\" height=\"354\" src=\"img/figure-1.png\" width=\"719\"> </object>\n      </figure></emu-figure>\n      <p>In a class-based object-oriented language, in general, state is carried by instances, methods are carried by classes, and inheritance is only of structure and behaviour. In ECMAScript, the state and methods are carried by objects, while structure, behaviour, and state are all inherited.</p>\n      <p>All objects that do not directly contain a particular property that their prototype contains share that property and its value. Figure 1 illustrates this:</p>\n      <p><b>CF</b> is a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (and also an object). Five objects have been created by using <code>new</code> expressions:  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, and  <b>cf<sub>5</sub></b>. Each of these objects contains properties named <code>\"q1\"</code> and <code>\"q2\"</code>. The dashed lines represent the implicit prototype relationship; so, for example,  <b>cf<sub>3</sub></b>'s prototype is  <b>CF<sub>p</sub></b>. The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>,  <b>CF</b>, has two properties itself, named <code>\"P1\"</code> and <code>\"P2\"</code>, which are not visible to  <b>CF<sub>p</sub></b>,  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, or  <b>cf<sub>5</sub></b>. The property named <code>\"CFP1\"</code> in  <b>CF<sub>p</sub></b> is shared by  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, and  <b>cf<sub>5</sub></b> (but not by  <b>CF</b>), as are any properties found in  <b>CF<sub>p</sub></b>'s implicit prototype chain that are not named <code>\"q1\"</code>, <code>\"q2\"</code>, or <code>\"CFP1\"</code>. Notice that there is no implicit prototype link between  <b>CF</b> and  <b>CF<sub>p</sub></b>.</p>\n      <p>Unlike most class-based object languages, properties can be added to objects dynamically by assigning values to them. That is, constructors are not required to name or assign values to all or any of the constructed object's properties. In the above diagram, one could add a new shared property for  <b>cf<sub>1</sub></b>,  <b>cf<sub>2</sub></b>,  <b>cf<sub>3</sub></b>,  <b>cf<sub>4</sub></b>, and  <b>cf<sub>5</sub></b> by assigning a new value to the property in  <b>CF<sub>p</sub></b>.</p>\n      <p>Although ECMAScript objects are not inherently class-based, it is often convenient to define class-like abstractions based upon a common pattern of <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> functions, prototype objects, and methods. The ECMAScript built-in objects themselves follow such a class-like pattern. Beginning with ECMAScript 2015, the ECMAScript language includes syntactic class definitions that permit programmers to concisely define objects that conform to the same class-like abstraction pattern used by the built-in objects.</p>\n    </emu-clause>\n\n    "}, "sec-function-environment-records": {"num": "8.1.1.3", "title": "#sec-function-environment-records Function Environment Records", "html": "<emu-clause id=\"sec-function-environment-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records\">#sec-function-environment-records</span> Function Environment Records</h1>\n        <p>A  <dfn>function Environment Record</dfn> is a declarative <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> that is used to represent the top-level scope of a function and, if the function is not an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, provides a <code>this</code> binding. If a function is not an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> function and references <code>super</code>, its function Environment Record also contains the state that is used to perform <code>super</code> method invocations from within the function.</p>\n        <p>Function Environment Records have the additional state fields listed in  <emu-xref href=\"#table-16\"><a href=\"#table-16\" class=\"excluded-xref\" excluded-id=\"table-16\">#table-16</a></emu-xref>.</p>\n        <emu-table id=\"table-16\" caption=\"Additional Fields of Function Environment Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-16\">#table-16</span>: Additional Fields of Function Environment Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ThisValue]]\n              \n              </td>\n              <td>\n                Any\n              \n              </td>\n              <td>\n                This is the <emu-val>this</emu-val> value used for this invocation of the function.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ThisBindingStatus]]\n              \n              </td>\n              <td>\n                <code>\"lexical\"</code> | <code>\"initialized\"</code> | <code>\"uninitialized\"</code>\n              \n              </td>\n              <td>\n                If the value is <code>\"lexical\"</code>, this is an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> and does not have a local <emu-val>this</emu-val> value.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[FunctionObject]]\n              \n              </td>\n              <td>\n                Object\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> whose invocation caused this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> to be created.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[HomeObject]]\n              \n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                If the associated function has <code>super</code> property accesses and is not an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt>, [[HomeObject]] is the object that the function is bound to as a method. The default value for [[HomeObject]] is <emu-val>undefined</emu-val>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[NewTarget]]\n              \n              </td>\n              <td>\n                Object | <emu-val>undefined</emu-val>\n              \n              </td>\n              <td>\n                If this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> was created by the [[Construct]] internal method, [[NewTarget]] is the value of the [[Construct]] <var>newTarget</var> parameter. Otherwise, its value is <emu-val>undefined</emu-val>.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>Function Environment Records support all of the declarative <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> methods listed in  <emu-xref href=\"#table-15\"><a href=\"#table-15\" class=\"excluded-xref\" excluded-id=\"table-15\">#table-15</a></emu-xref> and share the same specifications for all of those methods except for HasThisBinding and HasSuperBinding. In addition, function Environment Records support the methods listed in  <emu-xref href=\"#table-17\"><a href=\"#table-17\" class=\"excluded-xref\" excluded-id=\"table-17\">#table-17</a></emu-xref>:</p>\n        <emu-table id=\"table-17\" caption=\"Additional Methods of Function Environment Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-17\">#table-17</span>: Additional Methods of Function Environment Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Method\n              \n              </th>\n              <th>\n                Purpose\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                BindThisValue(V)\n              \n              </td>\n              <td>\n                Set the [[ThisValue]] and record that it has been initialized.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                GetThisBinding()\n              \n              </td>\n              <td>\n                Return the value of this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s <code>this</code> binding. Throws a <emu-val>ReferenceError</emu-val> if the <code>this</code> binding has not been initialized.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                GetSuperBase()\n              \n              </td>\n              <td>\n                Return the object that is the base for <code>super</code> property accesses bound in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. The object is derived from this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s [[HomeObject]] field. The value <emu-val>undefined</emu-val> indicates that <code>super</code> property accesses will produce runtime errors.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>The behaviour of the additional concrete specification methods for function Environment Records is defined by the following algorithms:</p>\n\n        <div id=\"excluded-sec-bindthisvalue\"><h1><span class=\"secnum\">8.1.1.3.1</span>#sec-bindthisvalue BindThisValue ( V )</h1>...</div><div id=\"excluded-sec-function-environment-records-hasthisbinding\"><h1><span class=\"secnum\">8.1.1.3.2</span>#sec-function-environment-records-hasthisbinding HasThisBinding ( )</h1>...</div><div id=\"excluded-sec-function-environment-records-hassuperbinding\"><h1><span class=\"secnum\">8.1.1.3.3</span>#sec-function-environment-records-hassuperbinding HasSuperBinding ( )</h1>...</div><div id=\"excluded-sec-function-environment-records-getthisbinding\"><h1><span class=\"secnum\">8.1.1.3.4</span>#sec-function-environment-records-getthisbinding GetThisBinding ( )</h1>...</div><div id=\"excluded-sec-getsuperbase\"><h1><span class=\"secnum\">8.1.1.3.5</span>#sec-getsuperbase GetSuperBase ( )</h1>...</div></emu-clause>\n\n      "}, "sec-nativeerror-object-structure": {"num": "19.5.6", "title": "#sec-nativeerror-object-structure NativeError Object Structure", "html": "<emu-clause id=\"sec-nativeerror-object-structure\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror-object-structure\">#sec-nativeerror-object-structure</span> <var>NativeError</var> Object Structure</h1>\n      <p>When an ECMAScript implementation detects a runtime error, it throws a new instance of one of the <var>NativeError</var> objects defined in  <emu-xref href=\"#sec-native-error-types-used-in-this-standard\"><a href=\"#sec-native-error-types-used-in-this-standard\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard\">#sec-native-error-types-used-in-this-standard</a></emu-xref>. Each of these objects has the structure described below, differing only in the name used as the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> name instead of <var>NativeError</var>, in the <code>\"name\"</code> property of the prototype object, and in the implementation-defined <code>\"message\"</code> property of the prototype object.</p>\n      <p>For each error object, references to <var>NativeError</var> in the definition should be replaced with the appropriate error object name from  <emu-xref href=\"#sec-native-error-types-used-in-this-standard\"><a href=\"#sec-native-error-types-used-in-this-standard\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard\">#sec-native-error-types-used-in-this-standard</a></emu-xref>.</p>\n\n      <div id=\"excluded-sec-nativeerror-constructors\"><h1><span class=\"secnum\">19.5.6.1</span>#sec-nativeerror-constructors The NativeError Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-nativeerror-constructors\"><h1><span class=\"secnum\">19.5.6.2</span>#sec-properties-of-the-nativeerror-constructors Properties of the NativeError Constructors</h1>...</div><div id=\"excluded-sec-properties-of-the-nativeerror-prototype-objects\"><h1><span class=\"secnum\">19.5.6.3</span>#sec-properties-of-the-nativeerror-prototype-objects Properties of the NativeError Prototype Objects</h1>...</div><div id=\"excluded-sec-properties-of-nativeerror-instances\"><h1><span class=\"secnum\">19.5.6.4</span>#sec-properties-of-nativeerror-instances Properties of NativeError Instances</h1>...</div></emu-clause>\n  "}, "sec-asynciterator-interface": {"num": "25.1.1.4", "title": "#sec-asynciterator-interface The  AsyncIterator Interface", "html": "<emu-clause id=\"sec-asynciterator-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciterator-interface\">#sec-asynciterator-interface</span> The  <i>AsyncIterator</i> Interface</h1>\n        <p>An object that implements the  <i>AsyncIterator</i> interface must include the properties in  <emu-xref href=\"#table-async-iterator-required\"><a href=\"#table-async-iterator-required\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</a></emu-xref>. Such objects may also implement the properties in  <emu-xref href=\"#table-async-iterator-optional\"><a href=\"#table-async-iterator-optional\" class=\"excluded-xref\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</a></emu-xref>.</p>\n        <emu-table id=\"table-async-iterator-required\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Required Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-required\">#table-async-iterator-required</span>:  <i>AsyncIterator</i> Interface Required Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><code>\"next\"</code></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. If a previous call to the <code>next</code> method of an  <i>AsyncIterator</i> has returned a promise for an  <i>IteratorResult</i> object whose <code>\"done\"</code> property is <emu-val>true</emu-val>, then all subsequent calls to the <code>next</code> method of that object should also return a promise for an  <i>IteratorResult</i> object whose <code>\"done\"</code> property is <emu-val>true</emu-val>. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <code>\"value\"</code> property whose value is not a promise (or \"thenable\"). However, this requirement is also not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Arguments may be passed to the next function but their interpretation and validity is dependent upon the target  <i>AsyncIterator</i>. The <code>for</code>-<code>await</code>-<code>of</code> statement and other common users of  <em>AsyncIterators</em> do not pass any arguments, so  <i>AsyncIterator</i> objects that expect to be used in such a manner must be prepared to deal with being called with no arguments.</p>\n        </div></emu-note>\n        <emu-table id=\"table-async-iterator-optional\" caption=\"&lt;i&gt;AsyncIterator&lt;/i&gt; Interface Optional Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-async-iterator-optional\">#table-async-iterator-optional</span>:  <i>AsyncIterator</i> Interface Optional Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n              <th>Requirements</th>\n            </tr>\n            <tr>\n              <td><code>\"return\"</code></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller does not intend to make any more <code>next</code> method calls to the  <i>AsyncIterator</i>. The returned promise will fulfill with an  <i>IteratorResult</i> object which will typically have a <code>\"done\"</code> property whose value is <emu-val>true</emu-val>, and a <code>\"value\"</code> property with the value passed as the argument of the <code>return</code> method. However, this requirement is not enforced.</p>\n\n                <p>Additionally, the  <i>IteratorResult</i> object that serves as a fulfillment value should have a <code>\"value\"</code> property whose value is not a promise (or \"thenable\"). If the argument value is used in the typical manner, then if it is a rejected promise, a promise rejected with the same reason should be returned; if it is a fulfilled promise, then its fulfillment value should be used as the <code>\"value\"</code> property of the returned promise's  <i>IteratorResult</i> object fulfillment value. However, these requirements are also not enforced.</p>\n              </td>\n            </tr>\n            <tr>\n              <td><code>\"throw\"</code></td>\n              <td>A function that returns a promise for an  <i>IteratorResult</i> object.</td>\n              <td>\n                <p>The returned promise, when fulfilled, must fulfill with an object which conforms to the  <i>IteratorResult</i> interface. Invoking this method notifies the  <i>AsyncIterator</i> object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to return a rejected promise which rejects with the value passed as the argument.</p>\n\n                <p>If the returned promise is fulfilled, the  <i>IteratorResult</i> fulfillment value will typically have a <code>\"done\"</code> property whose value is <emu-val>true</emu-val>. Additionally, it should have a <code>\"value\"</code> property whose value is not a promise (or \"thenable\"), but this requirement is not enforced.</p>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>Typically callers of these methods should check for their existence before invoking them. Certain ECMAScript language features including <code>for</code>-<code>await</code>-<code>of</code> and <code>yield*</code> call these methods after performing an existence check.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number-constructor": {"num": "20.1.1", "title": "#sec-number-constructor The Number Constructor", "html": "<emu-clause id=\"sec-number-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</span> The Number Constructor</h1>\n      <p>The Number <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Number%</dfn>.</li>\n        <li>is the initial value of the <code>\"Number\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Number object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Number</code> behaviour must include a <code>super</code> call to the <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[NumberData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-number-constructor-number-value\"><h1><span class=\"secnum\">20.1.1.1</span>#sec-number-constructor-number-value Number ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-globalthis": {"num": "18.1.1", "title": "#sec-globalthis globalThis", "html": "<emu-clause id=\"sec-globalthis\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-globalthis\">#sec-globalthis</span> globalThis</h1>\n      <p>The initial value of the <code>\"globalThis\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> in a <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> <var>realm</var> is <var>realm</var>.[[GlobalEnv]]'s <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">EnvironmentRecord</a></emu-xref>'s [[GlobalThisValue]].</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n\n    "}, "sec-hasrestrictedglobalproperty": {"num": "8.1.1.4.14", "title": "#sec-hasrestrictedglobalproperty HasRestrictedGlobalProperty ( N )", "html": "<emu-clause id=\"sec-hasrestrictedglobalproperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasrestrictedglobalproperty\">#sec-hasrestrictedglobalproperty</span> HasRestrictedGlobalProperty ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasRestrictedGlobalProperty for global Environment Records determines if the argument identifier is the name of a property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that must not be shadowed by a global lexical binding:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the global <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.\n          </li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Properties may exist upon a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that were directly created rather than being declared using a var or function declaration. A global lexical binding may not be created that has the same name as a non-configurable property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. The global property <code>\"undefined\"</code> is an example of such a property.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-getprototypefromconstructor": {"num": "9.1.14", "title": "#sec-getprototypefromconstructor GetPrototypeFromConstructor ( constructor, intrinsicDefaultProto )", "html": "<emu-clause id=\"sec-getprototypefromconstructor\" aoid=\"GetPrototypeFromConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getprototypefromconstructor\">#sec-getprototypefromconstructor</span> GetPrototypeFromConstructor ( <var>constructor</var>, <var>intrinsicDefaultProto</var> )</h1>\n      <p>The abstract operation GetPrototypeFromConstructor determines the [[Prototype]] value that should be used to create an object corresponding to a specific <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. The value is retrieved from the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property, if it exists. Otherwise the intrinsic named by <var>intrinsicDefaultProto</var> is used for [[Prototype]]. This abstract operation performs the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>intrinsicDefaultProto</var> is a String value that is this specification's name of an intrinsic object. The corresponding object must be an intrinsic that is intended to be used as the [[Prototype]] value of an object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>constructor</var>) is <emu-val>true</emu-val>.</li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>constructor</var>, <code>\"prototype\"</code>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>proto</var>) is not Object, then<ol><li>Let <var>realm</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>constructor</var>).</li><li>Set <var>proto</var> to <var>realm</var>'s intrinsic object named <var>intrinsicDefaultProto</var>.</li></ol></li><li>Return <var>proto</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>If <var>constructor</var> does not supply a [[Prototype]] value, the default value that is used is obtained from the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <var>constructor</var> function rather than from the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-sharedarraybuffer-@@species": {"num": "24.2.3.2", "title": "#sec-sharedarraybuffer-@@species get SharedArrayBuffer [ @@species ]", "html": "<emu-clause id=\"sec-sharedarraybuffer-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-@@species\">#sec-sharedarraybuffer-@@species</span> get SharedArrayBuffer [ @@species ]</h1>\n        <p><code>SharedArrayBuffer[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact": {"num": "D", "title": "#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact", "html": "<emu-annex id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact\">#sec-corrections-and-clarifications-in-ecmascript-2015-with-possible-compatibility-impact</span> Corrections and Clarifications in ECMAScript 2015 with Possible Compatibility Impact</h1>\n  <p><emu-xref href=\"#sec-candeclareglobalvar\"><a href=\"#sec-candeclareglobalvar\" class=\"excluded-xref\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</a></emu-xref>-<emu-xref href=\"#sec-createglobalfunctionbinding\"><a href=\"#sec-createglobalfunctionbinding\" class=\"excluded-xref\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</a></emu-xref> Edition 5 and 5.1 used a property existence test to determine whether a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> property corresponding to a new global declaration already existed. ECMAScript 2015 uses an own property existence test. This corresponds to what has been most commonly implemented by web browsers.</p>\n  <p><emu-xref href=\"#sec-array-exotic-objects-defineownproperty-p-desc\"><a href=\"#sec-array-exotic-objects-defineownproperty-p-desc\" class=\"excluded-xref\" excluded-id=\"sec-array-exotic-objects-defineownproperty-p-desc\">#sec-array-exotic-objects-defineownproperty-p-desc</a></emu-xref>: The 5<sup>th</sup> Edition moved the capture of the current array length prior to the <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> conversion of the <emu-xref href=\"#array-index\"><a href=\"#array-index\">array index</a></emu-xref> or new length value. However, the captured length value could become invalid if the conversion process has the side-effect of changing the array length. ECMAScript 2015 specifies that the current array length must be captured after the possible occurrence of such side-effects.</p>\n  <p><emu-xref href=\"#sec-timeclip\"><a href=\"#sec-timeclip\" class=\"excluded-xref\" excluded-id=\"sec-timeclip\">#sec-timeclip</a></emu-xref>: Previous editions permitted the <emu-xref aoid=\"TimeClip\"><a href=\"#sec-timeclip\">TimeClip</a></emu-xref> abstract operation to return either <emu-val>+0</emu-val> or <emu-val>-0</emu-val> as the representation of a 0 <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref>. ECMAScript 2015 specifies that <emu-val>+0</emu-val> always returned. This means that for ECMAScript 2015 the <emu-xref href=\"#sec-time-values-and-time-range\"><a href=\"#sec-time-values-and-time-range\">time value</a></emu-xref> of a Date object is never observably <emu-val>-0</emu-val> and methods that return time values never return <emu-val>-0</emu-val>.</p>\n  <p><emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref>: If a UTC offset representation is not present, the local time zone is used. Edition 5.1 incorrectly stated that a missing time zone should be interpreted as <code>\"z\"</code>.</p>\n  <p><emu-xref href=\"#sec-date.prototype.toisostring\"><a href=\"#sec-date.prototype.toisostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.toisostring\">#sec-date.prototype.toisostring</a></emu-xref>: If the year cannot be represented using the Date Time String Format specified in  <emu-xref href=\"#sec-date-time-string-format\"><a href=\"#sec-date-time-string-format\" class=\"excluded-xref\" excluded-id=\"sec-date-time-string-format\">#sec-date-time-string-format</a></emu-xref> a RangeError exception is thrown. Previous editions did not specify the behaviour for that case.</p>\n  <p><emu-xref href=\"#sec-date.prototype.tostring\"><a href=\"#sec-date.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-date.prototype.tostring\">#sec-date.prototype.tostring</a></emu-xref>: Previous editions did not specify the value returned by <code>Date.prototype.toString</code> when <emu-xref href=\"#this-time-value\"><a href=\"#this-time-value\">this time value</a></emu-xref> is <emu-val>NaN</emu-val>. ECMAScript 2015 specifies the result to be the String value <emu-val>\"Invalid Date\"</emu-val>.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref>,  <emu-xref href=\"#sec-escaperegexppattern\"><a href=\"#sec-escaperegexppattern\" class=\"excluded-xref\" excluded-id=\"sec-escaperegexppattern\">#sec-escaperegexppattern</a></emu-xref>: Any LineTerminator code points in the value of the <code>\"source\"</code> property of a RegExp instance must be expressed using an escape sequence. Edition 5.1 only required the escaping of <code>\"/\"</code>.</p>\n  <p><emu-xref href=\"#sec-regexp.prototype-@@match\"><a href=\"#sec-regexp.prototype-@@match\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@match\">#sec-regexp.prototype-@@match</a></emu-xref>,  <emu-xref href=\"#sec-regexp.prototype-@@replace\"><a href=\"#sec-regexp.prototype-@@replace\" class=\"excluded-xref\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</a></emu-xref>: In previous editions, the specifications for <code>String.prototype.match</code> and <code>String.prototype.replace</code> was incorrect for cases where the pattern argument was a RegExp value whose <code>global</code> flag is set. The previous specifications stated that for each attempt to match the pattern, if <code>lastIndex</code> did not change it should be incremented by 1. The correct behaviour is that <code>lastIndex</code> should be incremented by one only if the pattern matched the empty string.</p>\n  <p><emu-xref href=\"#sec-array.prototype.sort\"><a href=\"#sec-array.prototype.sort\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.sort\">#sec-array.prototype.sort</a></emu-xref>,  <emu-xref href=\"#sec-sortcompare\"><a href=\"#sec-sortcompare\" class=\"excluded-xref\" excluded-id=\"sec-sortcompare\">#sec-sortcompare</a></emu-xref>: Previous editions did not specify how a <emu-val>NaN</emu-val> value returned by a <var>comparefn</var> was interpreted by <code>Array.prototype.sort</code>. ECMAScript 2015 specifies that such as value is treated as if <emu-val>+0</emu-val> was returned from the <var>comparefn</var>. ECMAScript 2015 also specifies that <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> is applied to the result returned by a <var>comparefn</var>. In previous editions, the effect of a <var>comparefn</var> result that is not a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> was implementation-dependent. In practice, implementations call <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>.</p>\n</emu-annex>\n\n"}, "sec-string.prototype-@@iterator": {"num": "21.1.3.32", "title": "#sec-string.prototype-@@iterator String.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-string.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype-@@iterator\">#sec-string.prototype-@@iterator</span> String.prototype [ @@iterator ] ( )</h1>\n        <p>When the <code>@@iterator</code> method is called it returns an Iterator object (<emu-xref href=\"#sec-iterator-interface\"><a href=\"#sec-iterator-interface\" class=\"excluded-xref\" excluded-id=\"sec-iterator-interface\">#sec-iterator-interface</a></emu-xref>) that iterates over the code points of a String value, returning each code point as a String value. The following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Return <emu-xref aoid=\"CreateStringIterator\"><a href=\"#sec-createstringiterator\">CreateStringIterator</a></emu-xref>(<var>S</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.iterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-setfunctionname": {"num": "9.2.13", "title": "#sec-setfunctionname SetFunctionName ( F, name [ , prefix ] )", "html": "<emu-clause id=\"sec-setfunctionname\" aoid=\"SetFunctionName\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-setfunctionname\">#sec-setfunctionname</span> SetFunctionName ( <var>F</var>, <var>name</var> [ , <var>prefix</var> ] )</h1>\n      <p>The abstract operation SetFunctionName requires a Function argument <var>F</var>, a String or Symbol argument <var>name</var> and optionally a String argument <var>prefix</var>. This operation adds a <code>\"name\"</code> property to <var>F</var> by performing the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <code>\"name\"</code> own property.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is either Symbol or String.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If <var>prefix</var> is present, then <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>prefix</var>) is String.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>name</var>) is Symbol, then<ol><li>Let <var>description</var> be <var>name</var>'s [[Description]] value.</li><li>If <var>description</var> is <emu-val>undefined</emu-val>, set <var>name</var> to the empty String.</li><li>Else, set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <code>\"[\"</code>, <var>description</var>, and <code>\"]\"</code>.</li></ol></li><li>If <var>prefix</var> is present, then<ol><li>Set <var>name</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>prefix</var>, the code unit 0x0020 (SPACE), and <var>name</var>.</li></ol></li><li>Return !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"name\"</code>, PropertyDescriptor { [[Value]]: <var>name</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-get-map-@@species": {"num": "23.1.2.2", "title": "#sec-get-map-@@species get Map [ @@species ]", "html": "<emu-clause id=\"sec-get-map-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-map-@@species\">#sec-get-map-@@species</span> get Map [ @@species ]</h1>\n        <p><code>Map[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Methods that create derived collection objects should call @@species to determine the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use to create the derived objects. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride @@species to change the default <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> assignment.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-weakmap.prototype-@@tostringtag": {"num": "23.3.3.6", "title": "#sec-weakmap.prototype-@@tostringtag WeakMap.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-weakmap.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap.prototype-@@tostringtag\">#sec-weakmap.prototype-@@tostringtag</span> WeakMap.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"WeakMap\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-get-set-@@species": {"num": "23.2.2.2", "title": "#sec-get-set-@@species get Set [ @@species ]", "html": "<emu-clause id=\"sec-get-set-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-set-@@species\">#sec-get-set-@@species</span> get Set [ @@species ]</h1>\n        <p><code>Set[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Methods that create derived collection objects should call @@species to determine the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to use to create the derived objects. Subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride @@species to change the default <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> assignment.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-function-definitions-runtime-semantics-evaluation": {"num": "14.1.22", "title": "#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation", "html": "<emu-clause id=\"sec-function-definitions-runtime-semantics-evaluation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-runtime-semantics-evaluation\">#sec-function-definitions-runtime-semantics-evaluation</span> Runtime Semantics: Evaluation</h1>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>An alternative semantics is provided in  <emu-xref href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\"><a href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" class=\"excluded-xref\" excluded-id=\"sec-block-level-function-declarations-web-legacy-compatibility-semantics\">#sec-block-level-function-declarations-web-legacy-compatibility-semantics</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b26bacea\"><emu-t>function</emu-t><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>scope</var> be the LexicalEnvironment of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>closure</var> be <emu-xref aoid=\"FunctionCreate\"><a href=\"#sec-functioncreate\">FunctionCreate</a></emu-xref>(<emu-const>Normal</emu-const>, <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <var>scope</var>).</li><li>Perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>closure</var>).</li><li>Set <var>closure</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>.</li><li>Return <var>closure</var>.\n      </li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81739a57\"><emu-t>function</emu-t><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt><emu-t>(</emu-t><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>scope</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>'s LexicalEnvironment.</li><li>Let <var>funcEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>scope</var>).</li><li>Let <var>envRec</var> be <var>funcEnv</var>'s <emu-xref href=\"#sec-lexical-environments\"><a href=\"#sec-lexical-environments\">EnvironmentRecord</a></emu-xref>.</li><li>Let <var>name</var> be StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>.</li><li>Perform <var>envRec</var>.CreateImmutableBinding(<var>name</var>, <emu-val>false</emu-val>).</li><li>Let <var>closure</var> be <emu-xref aoid=\"FunctionCreate\"><a href=\"#sec-functioncreate\">FunctionCreate</a></emu-xref>(<emu-const>Normal</emu-const>, <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>, <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>, <var>funcEnv</var>).</li><li>Perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>closure</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>closure</var>, <var>name</var>).</li><li>Set <var>closure</var>.[[SourceText]] to the source text matched by <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>.</li><li>Perform <var>envRec</var>.InitializeBinding(<var>name</var>, <var>closure</var>).</li><li>Return <var>closure</var>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>The <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> can be referenced from inside the <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>'s <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> to allow the function to call itself recursively. However, unlike in a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, the <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> cannot be referenced from and does not affect the scope enclosing the <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>A <code>\"prototype\"</code> property is automatically created for every function defined using a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> or <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt>, to allow for the possibility that the function will be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionStatementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).\n      </li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-boolean-constructor": {"num": "19.3.1", "title": "#sec-boolean-constructor The Boolean Constructor", "html": "<emu-clause id=\"sec-boolean-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</span> The Boolean Constructor</h1>\n      <p>The Boolean <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Boolean%</dfn>.</li>\n        <li>is the initial value of the <code>\"Boolean\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Boolean object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Boolean</code> behaviour must include a <code>super</code> call to the <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[BooleanData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-boolean-constructor-boolean-value\"><h1><span class=\"secnum\">19.3.1.1</span>#sec-boolean-constructor-boolean-value Boolean ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-__proto__-property-names-in-object-initializers": {"num": "B.3.1", "title": "#sec-__proto__-property-names-in-object-initializers __proto__ Property Names in Object Initializers", "html": "<emu-annex id=\"sec-__proto__-property-names-in-object-initializers\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-__proto__-property-names-in-object-initializers\">#sec-__proto__-property-names-in-object-initializers</span> __proto__ Property Names in Object Initializers</h1>\n      <p>The following Early Error rule is added to those in  <emu-xref href=\"#sec-object-initializer-static-semantics-early-errors\"><a href=\"#sec-object-initializer-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-static-semantics-early-errors\">#sec-object-initializer-static-semantics-early-errors</a></emu-xref>. When <emu-nt><a href=\"#prod-annexB-ObjectLiteral\">ObjectLiteral</a></emu-nt> appears in a context where <emu-nt><a href=\"#prod-ObjectAssignmentPattern\">ObjectAssignmentPattern</a></emu-nt> is required the Early Error rule is  <b>not</b> applied. In addition, it is not applied when initially parsing a <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> or a <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</p>\n      <emu-grammar><emu-production name=\"ObjectLiteral\" collapsed=\"\" id=\"prod-annexB-ObjectLiteral\">\n    <emu-nt><a href=\"#prod-annexB-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1bef8ed3\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n<emu-production name=\"ObjectLiteral\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-ObjectLiteral\">ObjectLiteral</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"8703527f\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if PropertyNameList of <emu-nt><a href=\"#prod-PropertyDefinitionList\">PropertyDefinitionList</a></emu-nt> contains any duplicate entries for <code>\"__proto__\"</code> and at least two of those entries were obtained from productions of the form  <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\" id=\"prod-annexB-PropertyDefinition\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>.\n        \n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> returned by PropertyNameList does not include string literal property names defined as using a <emu-nt><a href=\"#prod-ComputedPropertyName\">ComputedPropertyName</a></emu-nt>.</p>\n      </div></emu-note>\n      <p>In  <emu-xref href=\"#sec-object-initializer-runtime-semantics-propertydefinitionevaluation\"><a href=\"#sec-object-initializer-runtime-semantics-propertydefinitionevaluation\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-runtime-semantics-propertydefinitionevaluation\">#sec-object-initializer-runtime-semantics-propertydefinitionevaluation</a></emu-xref> the PropertyDefinitionEvaluation algorithm for the production\n        \n        <br>\n        <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-annexB-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <br>\n        is replaced with the following definition:</p>\n      <emu-grammar><emu-production name=\"PropertyDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-annexB-PropertyDefinition\">PropertyDefinition</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"f2d90b76\"><emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt><emu-t>:</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n      <emu-alg><ol><li>Let <var>propKey</var> be the result of evaluating <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>propKey</var>).</li><li>If <var>propKey</var> is the String value <emu-val>\"__proto__\"</emu-val> and if IsComputedPropertyKey(<emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>) is <emu-val>false</emu-val>, then<ol><li>Let <var>isProtoSetter</var> be <emu-val>true</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>isProtoSetter</var> be <emu-val>false</emu-val>.</li></ol></li><li>If <emu-xref aoid=\"IsAnonymousFunctionDefinition\"><a href=\"#sec-isanonymousfunctiondefinition\">IsAnonymousFunctionDefinition</a></emu-xref>(<emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>) is <emu-val>true</emu-val> and <var>isProtoSetter</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>propValue</var> be NamedEvaluation of <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt> with argument <var>propKey</var>.</li></ol></li><li>Else,<ol><li>Let <var>exprValueRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>propValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>exprValueRef</var>).</li></ol></li><li>If <var>isProtoSetter</var> is <emu-val>true</emu-val>, then<ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>propValue</var>) is either Object or Null, then<ol><li>Return <var>object</var>.[[SetPrototypeOf]](<var>propValue</var>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>enumerable</var> is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>object</var> is an ordinary, extensible object with no non-configurable properties.</li><li>Return !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>object</var>, <var>propKey</var>, <var>propValue</var>).\n      </li></ol></emu-alg>\n    </emu-annex>\n\n    "}, "sec-async-function-constructor-properties": {"num": "25.7.2", "title": "#sec-async-function-constructor-properties Properties of the AsyncFunction Constructor", "html": "<emu-clause id=\"sec-async-function-constructor-properties\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-constructor-properties\">#sec-async-function-constructor-properties</span> Properties of the AsyncFunction Constructor</h1>\n\n      <p>The AsyncFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>\"name\"</code> property whose value is <emu-val>\"AsyncFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-async-function-constructor-length\"><h1><span class=\"secnum\">25.7.2.1</span>#sec-async-function-constructor-length AsyncFunction.length</h1>...</div><div id=\"excluded-sec-async-function-constructor-prototype\"><h1><span class=\"secnum\">25.7.2.2</span>#sec-async-function-constructor-prototype AsyncFunction.prototype</h1>...</div></emu-clause>\n    "}, "sec-built-in-function-objects": {"num": "9.3", "title": "#sec-built-in-function-objects Built-in Function Objects", "html": "<emu-clause id=\"sec-built-in-function-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</span> Built-in Function Objects</h1>\n    <p>The built-in function objects defined in this specification may be implemented as either ECMAScript function objects (<emu-xref href=\"#sec-ecmascript-function-objects\"><a href=\"#sec-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects\">#sec-ecmascript-function-objects</a></emu-xref>) whose behaviour is provided using ECMAScript code or as implementation provided function exotic objects whose behaviour is provided in some other manner. In either case, the effect of calling such functions must conform to their specifications. An implementation may also provide additional built-in function objects that are not defined in this specification.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is implemented as an <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> it must have the ordinary object behaviour specified in  <emu-xref href=\"#sec-ordinary-object-internal-methods-and-internal-slots\"><a href=\"#sec-ordinary-object-internal-methods-and-internal-slots\" class=\"excluded-xref\" excluded-id=\"sec-ordinary-object-internal-methods-and-internal-slots\">#sec-ordinary-object-internal-methods-and-internal-slots</a></emu-xref>. All such function exotic objects also have [[Prototype]], [[Extensible]], [[Realm]], and [[ScriptOrModule]] internal slots.</p>\n    <p>Unless otherwise specified every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref> object as the initial value of its [[Prototype]] internal slot.</p>\n    <p>The behaviour specified for each built-in function via algorithm steps or other means is the specification of the function body behaviour for both [[Call]] and [[Construct]] invocations of the function. However, [[Construct]] invocation is not supported by all built-in functions. For each built-in function, when invoked with [[Call]], the [[Call]] <var>thisArgument</var> provides the <emu-val>this</emu-val> value, the [[Call]] <var>argumentsList</var> provides the named parameters, and the NewTarget value is <emu-val>undefined</emu-val>. When invoked with [[Construct]], the <emu-val>this</emu-val> value is uninitialized, the [[Construct]] <var>argumentsList</var> provides the named parameters, and the [[Construct]] <var>newTarget</var> parameter provides the NewTarget value. If the built-in function is implemented as an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> then this specified behaviour must be implemented by the ECMAScript code that is the body of the function. Built-in functions that are ECMAScript function objects must be strict functions. If a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has any [[Call]] behaviour other than throwing a <emu-val>TypeError</emu-val> exception, an ECMAScript implementation of the function must be done in a manner that does not cause the function's [[FunctionKind]] internal slot to have the value <emu-val>\"classConstructor\"</emu-val>.</p>\n    <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function. When a built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is called as part of a <code>new</code> expression the <var>argumentsList</var> parameter of the invoked [[Construct]] internal method provides the values for the built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s named parameters.</p>\n    <p>Built-in functions that are not constructors do not have a <code>\"prototype\"</code> property unless otherwise specified in the description of a particular function.</p>\n    <p>If a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is not implemented as an ECMAScript function it must provide [[Call]] and [[Construct]] internal methods that conform to the following definitions:</p>\n\n    <div id=\"excluded-sec-built-in-function-objects-call-thisargument-argumentslist\"><h1><span class=\"secnum\">9.3.1</span>#sec-built-in-function-objects-call-thisargument-argumentslist [[Call]] ( thisArgument, argumentsList )</h1>...</div><div id=\"excluded-sec-built-in-function-objects-construct-argumentslist-newtarget\"><h1><span class=\"secnum\">9.3.2</span>#sec-built-in-function-objects-construct-argumentslist-newtarget [[Construct]] ( argumentsList, newTarget )</h1>...</div><div id=\"excluded-sec-createbuiltinfunction\"><h1><span class=\"secnum\">9.3.3</span>#sec-createbuiltinfunction CreateBuiltinFunction ( steps, internalSlotsList [ , realm [ , prototype ] ] )</h1>...</div></emu-clause>\n\n  "}, "sec-regexp.prototype-@@search": {"num": "21.2.5.11", "title": "#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )", "html": "<emu-clause id=\"sec-regexp.prototype-@@search\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@search\">#sec-regexp.prototype-@@search</span> RegExp.prototype [ @@search ] ( <var>string</var> )</h1>\n        <p>When the <code>@@search</code> method is called with argument <var>string</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>previousLastIndex</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>previousLastIndex</var>, 0) is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>Let <var>currentLastIndex</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>).</li><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>currentLastIndex</var>, <var>previousLastIndex</var>) is <emu-val>false</emu-val>, then<ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, <var>previousLastIndex</var>, <emu-val>true</emu-val>).</li></ol></li><li>If <var>result</var> is <emu-val>null</emu-val>, return -1.</li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"index\"</code>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.search]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The <code>\"lastIndex\"</code> and <code>\"global\"</code> properties of this RegExp object are ignored when performing the search. The <code>\"lastIndex\"</code> property is left unchanged.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number.max_safe_integer": {"num": "20.1.2.6", "title": "#sec-number.max_safe_integer Number.MAX_SAFE_INTEGER", "html": "<emu-clause id=\"sec-number.max_safe_integer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.max_safe_integer\">#sec-number.max_safe_integer</span> Number.MAX_SAFE_INTEGER</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Number.MAX_SAFE_INTEGER</code> is the largest <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> n such that n and n + 1 are both exactly representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>.</p>\n        </div></emu-note>\n        <p>The value of <code>Number.MAX_SAFE_INTEGER</code> is 9007199254740991 (2<sup>53</sup> - 1).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-createdynamicfunction": {"num": "19.2.1.1.1", "title": "#sec-createdynamicfunction Runtime Semantics: CreateDynamicFunction ( constructor, newTarget, kind, args )", "html": "<emu-clause id=\"sec-createdynamicfunction\" aoid=\"CreateDynamicFunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</span> Runtime Semantics: CreateDynamicFunction ( <var>constructor</var>, <var>newTarget</var>, <var>kind</var>, <var>args</var> )</h1>\n          <p>The abstract operation CreateDynamicFunction is called with arguments <var>constructor</var>, <var>newTarget</var>, <var>kind</var>, and <var>args</var>. <var>constructor</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is performing this action, <var>newTarget</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that <code>new</code> was initially applied to, <var>kind</var> is either <code>\"normal\"</code>, <code>\"generator\"</code>, <code>\"async\"</code>, or <code>\"async generator\"</code>, and <var>args</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the actual argument values that were passed to <var>constructor</var>. The following steps are taken:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> has at least two elements.</li><li>Let <var>callerContext</var> be the second to top element of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Let <var>callerRealm</var> be <var>callerContext</var>'s <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref>.</li><li>Let <var>calleeRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Perform ?&#160;<emu-xref aoid=\"HostEnsureCanCompileStrings\"><a href=\"#sec-hostensurecancompilestrings\">HostEnsureCanCompileStrings</a></emu-xref>(<var>callerRealm</var>, <var>calleeRealm</var>).</li><li>If <var>newTarget</var> is <emu-val>undefined</emu-val>, set <var>newTarget</var> to <var>constructor</var>.</li><li>If <var>kind</var> is <code>\"normal\"</code>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%Function.prototype%\"</code>.</li></ol></li><li>Else if <var>kind</var> is <code>\"generator\"</code>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%Generator%\"</code>.</li></ol></li><li>Else if <var>kind</var> is <code>\"async\"</code>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%AsyncFunction.prototype%\"</code>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>kind</var> is <code>\"async generator\"</code>.</li><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <code>\"%AsyncGenerator%\"</code>.</li></ol></li><li>Let <var>argCount</var> be the number of elements in <var>args</var>.</li><li>Let <var>P</var> be the empty String.</li><li>If <var>argCount</var> = 0, let <var>bodyText</var> be the empty String.</li><li>Else if <var>argCount</var> = 1, let <var>bodyText</var> be <var>args</var>[0].</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>argCount</var> &gt; 1.</li><li>Let <var>firstArg</var> be <var>args</var>[0].</li><li>Set <var>P</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>firstArg</var>).</li><li>Let <var>k</var> be 1.</li><li>Repeat, while <var>k</var> &lt; <var>argCount</var> - 1<ol><li>Let <var>nextArg</var> be <var>args</var>[<var>k</var>].</li><li>Let <var>nextArgString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextArg</var>).</li><li>Set <var>P</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the previous value of <var>P</var>, <code>\",\"</code> (a comma), and <var>nextArgString</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Let <var>bodyText</var> be <var>args</var>[<var>k</var>].</li></ol></li><li>Set <var>bodyText</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>bodyText</var>).</li><li>Perform the following substeps in an implementation-dependent order, possibly interleaving parsing and error detection:<ol><li>Let <var>parameters</var> be the result of parsing <var>P</var>, interpreted as UTF-16 encoded Unicode text as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, using <var>parameterGoal</var> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>. Throw a <emu-val>SyntaxError</emu-val> exception if the parse fails.</li><li>Let <var>body</var> be the result of parsing <var>bodyText</var>, interpreted as UTF-16 encoded Unicode text as described in <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-string-type\">#sec-ecmascript-language-types-string-type</a></emu-xref>, using <var>goal</var> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>. Throw a <emu-val>SyntaxError</emu-val> exception if the parse fails.</li><li>Let <var>strict</var> be ContainsUseStrict of <var>body</var>.</li><li>If any <emu-xref href=\"#sec-static-semantic-rules\"><a href=\"#sec-static-semantic-rules\">static semantics</a></emu-xref> errors are detected for <var>parameters</var> or <var>body</var>, throw a <emu-val>SyntaxError</emu-val> exception. If <var>strict</var> is <emu-val>true</emu-val>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar> are applied.</li><li>If <var>strict</var> is <emu-val>true</emu-val> and IsSimpleParameterList of <var>parameters</var> is <emu-val>false</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If any element of the BoundNames of <var>parameters</var> also occurs in the LexicallyDeclaredNames of <var>body</var>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>kind</var> is <code>\"generator\"</code> or <code>\"async generator\"</code>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>kind</var> is <code>\"async\"</code> or <code>\"async generator\"</code>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val>, then<ol><li>If BoundNames of <var>parameters</var> contains any duplicate elements, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li></ol></li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>fallbackProto</var>).</li><li>Let <var>F</var> be <emu-xref aoid=\"FunctionAllocate\"><a href=\"#sec-functionallocate\">FunctionAllocate</a></emu-xref>(<var>proto</var>, <var>kind</var>).</li><li>Let <var>realmF</var> be <var>F</var>.[[Realm]].</li><li>Let <var>scope</var> be <var>realmF</var>.[[GlobalEnv]].</li><li>Perform <emu-xref aoid=\"FunctionInitialize\"><a href=\"#sec-functioninitialize\">FunctionInitialize</a></emu-xref>(<var>F</var>, <emu-const>Normal</emu-const>, <var>parameters</var>, <var>body</var>, <var>scope</var>).</li><li>If <var>kind</var> is <code>\"generator\"</code>, then<ol><li>Let <var>prototype</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Generator.prototype%).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"prototype\"</code>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <code>\"async generator\"</code>, then<ol><li>Let <var>prototype</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%AsyncGenerator.prototype%).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"prototype\"</code>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <code>\"normal\"</code>, perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>).</li><li>NOTE: Async functions are not constructable and do not have a [[Construct]] internal method or a <code>\"prototype\"</code> property.</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <code>\"anonymous\"</code>).</li><li>Let <var>prefix</var> be the prefix associated with <var>kind</var> in <emu-xref href=\"#table-dynamic-function-sourcetext-prefixes\"><a href=\"#table-dynamic-function-sourcetext-prefixes\" class=\"excluded-xref\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</a></emu-xref>.</li><li>Let <var>sourceText</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>prefix</var>, <code>\" anonymous(\"</code>, <var>P</var>, 0x000A (LINE FEED), <code>\") {\"</code>, 0x000A (LINE FEED), <var>bodyText</var>, 0x000A (LINE FEED), and <code>\"}\"</code>.</li><li>Set <var>F</var>.[[SourceText]] to <var>sourceText</var>.</li><li>Return <var>F</var>.\n          </li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>A <code>\"prototype\"</code> property is created for every non-async function created using CreateDynamicFunction to provide for the possibility that the function will be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n          </div></emu-note>\n\n          <emu-table id=\"table-dynamic-function-sourcetext-prefixes\" caption=\"Dynamic Function SourceText Prefixes\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</span>: Dynamic Function SourceText Prefixes</figcaption>\n            <table>\n              <tbody>\n                <tr><th>Kind</th><th>Prefix</th></tr>\n                <tr><td><code>\"normal\"</code></td><td><code>\"function\"</code></td></tr>\n                <tr><td><code>\"generator\"</code></td><td><code>\"function*\"</code></td></tr>\n                <tr><td><code>\"async\"</code></td><td><code>\"async function\"</code></td></tr>\n                <tr><td><code>\"async generator\"</code></td><td><code>\"async function*\"</code></td></tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </emu-clause>\n      "}, "sec-map-constructor": {"num": "23.1.1", "title": "#sec-map-constructor The Map Constructor", "html": "<emu-clause id=\"sec-map-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</span> The Map Constructor</h1>\n      <p>The Map <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Map%</dfn>.</li>\n        <li>is the initial value of the <code>\"Map\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Map object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Map</code> behaviour must include a <code>super</code> call to the <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Map.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-map-iterable\"><h1><span class=\"secnum\">23.1.1.1</span>#sec-map-iterable Map ( [ iterable ] )</h1>...</div><div id=\"excluded-sec-add-entries-from-iterable\"><h1><span class=\"secnum\">23.1.1.2</span>#sec-add-entries-from-iterable AddEntriesFromIterable ( target, iterable, adder )</h1>...</div></emu-clause>\n\n    "}, "sec-additional-properties-of-the-string.prototype-object": {"num": "B.2.3", "title": "#sec-additional-properties-of-the-string.prototype-object Additional Properties of the String.prototype Object", "html": "<emu-annex id=\"sec-additional-properties-of-the-string.prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additional-properties-of-the-string.prototype-object\">#sec-additional-properties-of-the-string.prototype-object</span> Additional Properties of the String.prototype Object</h1>\n\n      <div id=\"excluded-sec-string.prototype.substr\"><h1><span class=\"secnum\">B.2.3.1</span>#sec-string.prototype.substr String.prototype.substr ( start, length )</h1>...</div><div id=\"excluded-sec-string.prototype.anchor\"><h1><span class=\"secnum\">B.2.3.2</span>#sec-string.prototype.anchor String.prototype.anchor ( name )</h1>...</div><div id=\"excluded-sec-string.prototype.big\"><h1><span class=\"secnum\">B.2.3.3</span>#sec-string.prototype.big String.prototype.big ( )</h1>...</div><div id=\"excluded-sec-string.prototype.blink\"><h1><span class=\"secnum\">B.2.3.4</span>#sec-string.prototype.blink String.prototype.blink ( )</h1>...</div><div id=\"excluded-sec-string.prototype.bold\"><h1><span class=\"secnum\">B.2.3.5</span>#sec-string.prototype.bold String.prototype.bold ( )</h1>...</div><div id=\"excluded-sec-string.prototype.fixed\"><h1><span class=\"secnum\">B.2.3.6</span>#sec-string.prototype.fixed String.prototype.fixed ( )</h1>...</div><div id=\"excluded-sec-string.prototype.fontcolor\"><h1><span class=\"secnum\">B.2.3.7</span>#sec-string.prototype.fontcolor String.prototype.fontcolor ( color )</h1>...</div><div id=\"excluded-sec-string.prototype.fontsize\"><h1><span class=\"secnum\">B.2.3.8</span>#sec-string.prototype.fontsize String.prototype.fontsize ( size )</h1>...</div><div id=\"excluded-sec-string.prototype.italics\"><h1><span class=\"secnum\">B.2.3.9</span>#sec-string.prototype.italics String.prototype.italics ( )</h1>...</div><div id=\"excluded-sec-string.prototype.link\"><h1><span class=\"secnum\">B.2.3.10</span>#sec-string.prototype.link String.prototype.link ( url )</h1>...</div><div id=\"excluded-sec-string.prototype.small\"><h1><span class=\"secnum\">B.2.3.11</span>#sec-string.prototype.small String.prototype.small ( )</h1>...</div><div id=\"excluded-sec-string.prototype.strike\"><h1><span class=\"secnum\">B.2.3.12</span>#sec-string.prototype.strike String.prototype.strike ( )</h1>...</div><div id=\"excluded-sec-string.prototype.sub\"><h1><span class=\"secnum\">B.2.3.13</span>#sec-string.prototype.sub String.prototype.sub ( )</h1>...</div><div id=\"excluded-sec-string.prototype.sup\"><h1><span class=\"secnum\">B.2.3.14</span>#sec-string.prototype.sup String.prototype.sup ( )</h1>...</div><emu-annex id=\"String.prototype.trimleft\">\n        <h1><span class=\"secnum\">B.2.3.15</span> String.prototype.trimLeft ( )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The property <code>\"trimStart\"</code> is preferred. The <code>\"trimLeft\"</code> property is provided principally for compatibility with old code. It is recommended that the <code>\"trimStart\"</code> property be used in new ECMAScript code.</p>\n        </div></emu-note>\n        <p>The initial value of the <code>\"trimLeft\"</code> property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>String.prototype.trimStart</code> property.</p>\n      </emu-annex>\n\n      <emu-annex id=\"String.prototype.trimright\">\n        <h1><span class=\"secnum\">B.2.3.16</span> String.prototype.trimRight ( )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The property <code>\"trimEnd\"</code> is preferred. The <code>\"trimRight\"</code> property is provided principally for compatibility with old code. It is recommended that the <code>\"trimEnd\"</code> property be used in new ECMAScript code.</p>\n        </div></emu-note>\n        <p>The initial value of the <code>\"trimRight\"</code> property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>String.prototype.trimEnd</code> property.</p>\n      </emu-annex>\n    </emu-annex>\n\n    "}, "sec-asyncgenerator-prototype-tostringtag": {"num": "25.5.1.5", "title": "#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-asyncgenerator-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-prototype-tostringtag\">#sec-asyncgenerator-prototype-tostringtag</span> AsyncGenerator.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"AsyncGenerator\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n\n    "}, "sec-arraybuffer-constructor": {"num": "24.1.2", "title": "#sec-arraybuffer-constructor The ArrayBuffer Constructor", "html": "<emu-clause id=\"sec-arraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</span> The ArrayBuffer Constructor</h1>\n      <p>The ArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%ArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <code>\"ArrayBuffer\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new ArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>ArrayBuffer</code> behaviour must include a <code>super</code> call to the <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>ArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-arraybuffer-length\"><h1><span class=\"secnum\">24.1.2.1</span>#sec-arraybuffer-length ArrayBuffer ( length )</h1>...</div></emu-clause>\n\n    "}, "sec-math.sinh": {"num": "20.3.2.31", "title": "#sec-math.sinh Math.sinh ( x )", "html": "<emu-clause id=\"sec-math.sinh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.sinh\">#sec-math.sinh</span> Math.sinh ( <var>x</var> )</h1>\n        <p>Returns an implementation-dependent approximation to the hyperbolic sine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>-&#8734;</emu-val>.\n          \n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.sinh(x)</code> is the same as the value of <code>(Math.exp(x) - Math.exp(-x)) / 2</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-function.prototype.tostring": {"num": "19.2.3.5", "title": "#sec-function.prototype.tostring Function.prototype.toString ( )", "html": "<emu-clause id=\"sec-function.prototype.tostring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.tostring\">#sec-function.prototype.tostring</span> Function.prototype.toString ( )</h1>\n        <p>When the <code>toString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>func</var> be the <emu-val>this</emu-val> value.</li><li>If <var>func</var> is a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">Bound Function exotic object</a></emu-xref> or a <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\">built-in function object</a></emu-xref>, then return an implementation-dependent String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>. Additionally, if <var>func</var> is a <emu-xref href=\"#sec-well-known-intrinsic-objects\"><a href=\"#sec-well-known-intrinsic-objects\">Well-known Intrinsic Object</a></emu-xref> and is not identified as an anonymous function, the portion of the returned String that would be matched by <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt> must be the initial value of the <code>\"name\"</code> property of <var>func</var>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <var>func</var> has a [[SourceText]] internal slot and <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>.[[SourceText]]) is String and !&#160;HostHasSourceTextAvailable(<var>func</var>) is <emu-val>true</emu-val>, then return <var>func</var>.[[SourceText]].</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>func</var>) is Object and <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>func</var>) is <emu-val>true</emu-val>, then return an implementation-dependent String source code representation of <var>func</var>. The representation must have the syntax of a <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt>.</li><li>Throw a <emu-val>TypeError</emu-val> exception.\n        </li></ol></emu-alg>\n\n        <emu-grammar type=\"definition\"><emu-production name=\"NativeFunction\" id=\"prod-NativeFunction\">\n    <emu-nt><a href=\"#prod-NativeFunction\">NativeFunction</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1fcbc9e6\"><emu-t>function</emu-t><emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-t>(</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t><emu-t>{</emu-t><emu-t>[</emu-t><emu-t>native</emu-t><emu-t>code</emu-t><emu-t>]</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n      </emu-clause>\n\n      "}, "sec-get-arraybuffer-@@species": {"num": "24.1.3.3", "title": "#sec-get-arraybuffer-@@species get ArrayBuffer [ @@species ]", "html": "<emu-clause id=\"sec-get-arraybuffer-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-arraybuffer-@@species\">#sec-get-arraybuffer-@@species</span> get ArrayBuffer [ @@species ]</h1>\n        <p><code>ArrayBuffer[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>ArrayBuffer prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-number.epsilon": {"num": "20.1.2.1", "title": "#sec-number.epsilon Number.EPSILON", "html": "<emu-clause id=\"sec-number.epsilon\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.epsilon\">#sec-number.epsilon</span> Number.EPSILON</h1>\n        <p>The value of <code>Number.EPSILON</code> is the difference between 1 and the smallest value greater than 1 that is representable as a <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref>, which is approximately 2.2204460492503130808472633361816 x 10<sup> - 16</sup>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-makeconstructor": {"num": "9.2.10", "title": "#sec-makeconstructor MakeConstructor ( F [ , writablePrototype [ , prototype ] ] )", "html": "<emu-clause id=\"sec-makeconstructor\" aoid=\"MakeConstructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-makeconstructor\">#sec-makeconstructor</span> MakeConstructor ( <var>F</var> [ , <var>writablePrototype</var> [ , <var>prototype</var> ] ] )</h1>\n      <p>The abstract operation MakeConstructor requires a Function argument <var>F</var> and optionally, a Boolean <var>writablePrototype</var> and an object <var>prototype</var>. If <var>prototype</var> is provided it is assumed to already contain, if needed, a <code>\"constructor\"</code> property whose value is <var>F</var>. This operation converts <var>F</var> into a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> by performing the following steps:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an ECMAScript <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>F</var>) is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>F</var> is an extensible object that does not have a <code>\"prototype\"</code> own property.</li><li>If <var>writablePrototype</var> is not present, set <var>writablePrototype</var> to <emu-val>true</emu-val>.</li><li>If <var>prototype</var> is not present, then<ol><li>Set <var>prototype</var> to <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>prototype</var>, <code>\"constructor\"</code>, PropertyDescriptor { [[Value]]: <var>F</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }).</li></ol></li><li>Perform !&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <code>\"prototype\"</code>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <var>writablePrototype</var>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-val>undefined</emu-val>).\n      </li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-constructor": {"num": "19.2.1", "title": "#sec-function-constructor The Function Constructor", "html": "<emu-clause id=\"sec-function-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</span> The Function Constructor</h1>\n      <p>The Function <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Function%</dfn>.</li>\n        <li>is the initial value of the <code>\"Function\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Function(&#8230;)</code> is equivalent to the object creation expression <code>new Function(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Function</code> behaviour must include a <code>super</code> call to the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize a subclass instance with the internal slots necessary for built-in function behaviour. All ECMAScript syntactic forms for defining function objects create instances of <code>Function</code>. There is no syntactic means to create instances of <code>Function</code> subclasses except for the built-in <code>GeneratorFunction</code>, <code>AsyncFunction</code>, and <code>AsyncGeneratorFunction</code> subclasses.</li>\n      </ul>\n\n      <div id=\"excluded-sec-function-p1-p2-pn-body\"><h1><span class=\"secnum\">19.2.1.1</span>#sec-function-p1-p2-pn-body Function ( p1, p2, &#8230; , pn, body )</h1>...</div></emu-clause>\n\n    "}, "sec-nativeerror.prototype.constructor": {"num": "19.5.6.3.1", "title": "#sec-nativeerror.prototype.constructor NativeError.prototype.constructor", "html": "<emu-clause id=\"sec-nativeerror.prototype.constructor\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror.prototype.constructor\">#sec-nativeerror.prototype.constructor</span> <var>NativeError</var>.prototype.constructor</h1>\n          <p>The initial value of the <code>\"constructor\"</code> property of the prototype for a given <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the corresponding intrinsic object %<var>NativeError</var>% (<emu-xref href=\"#sec-nativeerror-constructors\"><a href=\"#sec-nativeerror-constructors\" class=\"excluded-xref\" excluded-id=\"sec-nativeerror-constructors\">#sec-nativeerror-constructors</a></emu-xref>).</p>\n        </emu-clause>\n\n        "}, "sec-%stringiteratorprototype%-@@tostringtag": {"num": "21.1.5.2.2", "title": "#sec-%stringiteratorprototype%-@@tostringtag %StringIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%stringiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%stringiteratorprototype%-@@tostringtag\">#sec-%stringiteratorprototype%-@@tostringtag</span> %StringIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"String Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-properties-of-the-proxy-constructor": {"num": "26.2.2", "title": "#sec-properties-of-the-proxy-constructor Properties of the Proxy Constructor", "html": "<emu-clause id=\"sec-properties-of-the-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-proxy-constructor\">#sec-properties-of-the-proxy-constructor</span> Properties of the Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>does not have a <code>\"prototype\"</code> property because proxy exotic objects do not have a [[Prototype]] internal slot that requires initialization.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy.revocable\"><h1><span class=\"secnum\">26.2.2.1</span>#sec-proxy.revocable Proxy.revocable ( target, handler )</h1>...</div></emu-clause>\n  "}, "sec-sharedarraybuffer-constructor": {"num": "24.2.2", "title": "#sec-sharedarraybuffer-constructor The SharedArrayBuffer Constructor", "html": "<emu-clause id=\"sec-sharedarraybuffer-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</span> The SharedArrayBuffer Constructor</h1>\n      <p>The SharedArrayBuffer <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%SharedArrayBuffer%</dfn>.</li>\n        <li>is the initial value of the <code>\"SharedArrayBuffer\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new SharedArrayBuffer object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>SharedArrayBuffer</code> behaviour must include a <code>super</code> call to the <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>SharedArrayBuffer.prototype</code> built-in methods.</li>\n      </ul>\n\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Unlike an <code>ArrayBuffer</code>, a <code>SharedArrayBuffer</code> cannot become detached, and its internal [[ArrayBufferData]] slot is never <emu-val>null</emu-val>.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-sharedarraybuffer-length\"><h1><span class=\"secnum\">24.2.2.1</span>#sec-sharedarraybuffer-length SharedArrayBuffer ( [ length ] )</h1>...</div></emu-clause>\n\n    "}, "sec-map.prototype-@@iterator": {"num": "23.1.3.12", "title": "#sec-map.prototype-@@iterator Map.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-map.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype-@@iterator\">#sec-map.prototype-@@iterator</span> Map.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>\"entries\"</code> property.</p>\n      </emu-clause>\n\n      "}, "sec-number.parseint": {"num": "20.1.2.13", "title": "#sec-number.parseint Number.parseInt ( string, radix )", "html": "<emu-clause id=\"sec-number.parseint\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.parseint\">#sec-number.parseint</span> Number.parseInt ( <var>string</var>, <var>radix</var> )</h1>\n        <p>The value of the <code>Number.parseInt</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is the same built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the value of the <code>\"parseInt\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> defined in  <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-dataview.prototype-@@tostringtag": {"num": "24.3.4.25", "title": "#sec-dataview.prototype-@@tostringtag DataView.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-dataview.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview.prototype-@@tostringtag\">#sec-dataview.prototype-@@tostringtag</span> DataView.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"DataView\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-function.prototype-@@hasinstance": {"num": "19.2.3.6", "title": "#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )", "html": "<emu-clause id=\"sec-function.prototype-@@hasinstance\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype-@@hasinstance\">#sec-function.prototype-@@hasinstance</span> Function.prototype [ @@hasInstance ] ( <var>V</var> )</h1>\n        <p>When the <code>@@hasInstance</code> method of an object <var>F</var> is called with value <var>V</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>F</var> be the <emu-val>this</emu-val> value.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>F</var>, <var>V</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.hasInstance]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>This is the default implementation of <code>@@hasInstance</code> that most functions inherit. <code>@@hasInstance</code> is called by the <code>instanceof</code> operator to determine whether a value is an instance of a specific <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. An expression such as</p>\n          <pre><code class=\"javascript hljs\">v <span class=\"hljs-keyword\">instanceof</span> F</code></pre>\n          <p>evaluates as</p>\n          <pre><code class=\"javascript hljs\">F[@@hasInstance](v)</code></pre>\n          <p>A <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function can control which objects are recognized as its instances by <code>instanceof</code> by exposing a different <code>@@hasInstance</code> method on the function.</p>\n        </div></emu-note>\n        <p>This property is non-writable and non-configurable to prevent tampering that could be used to globally expose the target function of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref>.</p>\n      </emu-clause>\n    "}, "sec-properties-of-asyncgeneratorfunction-prototype": {"num": "25.3.3", "title": "#sec-properties-of-asyncgeneratorfunction-prototype Properties of the AsyncGeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgeneratorfunction-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgeneratorfunction-prototype\">#sec-properties-of-asyncgeneratorfunction-prototype</span> Properties of the AsyncGeneratorFunction Prototype Object</h1>\n      <p>The AsyncGeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-internal-slots-of-asyncgenerator-instances\"><a href=\"#table-internal-slots-of-asyncgenerator-instances\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-asyncgenerator-instances\">#table-internal-slots-of-asyncgenerator-instances</a></emu-xref>.</li>\n        <li>is the value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>.</li>\n        <li>is <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgeneratorfunction-prototype-constructor\"><h1><span class=\"secnum\">25.3.3.1</span>#sec-asyncgeneratorfunction-prototype-constructor AsyncGeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-prototype\"><h1><span class=\"secnum\">25.3.3.2</span>#sec-asyncgeneratorfunction-prototype-prototype AsyncGeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-asyncgeneratorfunction-prototype-tostringtag\"><h1><span class=\"secnum\">25.3.3.3</span>#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-get-array-@@species": {"num": "22.1.2.5", "title": "#sec-get-array-@@species get Array [ @@species ]", "html": "<emu-clause id=\"sec-get-array-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-array-@@species\">#sec-get-array-@@species</span> get Array [ @@species ]</h1>\n        <p><code>Array[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Array prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-error-constructor": {"num": "19.5.1", "title": "#sec-error-constructor The Error Constructor", "html": "<emu-clause id=\"sec-error-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</span> The Error Constructor</h1>\n      <p>The Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Error%</dfn>.</li>\n        <li>is the initial value of the <code>\"Error\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Error object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Error(&#8230;)</code> is equivalent to the object creation expression <code>new Error(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Error</code> behaviour must include a <code>super</code> call to the <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with an [[ErrorData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-error-message\"><h1><span class=\"secnum\">19.5.1.1</span>#sec-error-message Error ( message )</h1>...</div></emu-clause>\n\n    "}, "sec-proxy-constructor": {"num": "26.2.1", "title": "#sec-proxy-constructor The Proxy Constructor", "html": "<emu-clause id=\"sec-proxy-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</span> The Proxy Constructor</h1>\n      <p>The Proxy <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Proxy%</dfn>.</li>\n        <li>is the initial value of the <code>\"Proxy\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new proxy <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n      </ul>\n\n      <div id=\"excluded-sec-proxy-target-handler\"><h1><span class=\"secnum\">26.2.1.1</span>#sec-proxy-target-handler Proxy ( target, handler )</h1>...</div></emu-clause>\n\n    "}, "sec-atomics-object": {"num": "24.4", "title": "#sec-atomics-object The Atomics Object", "html": "<emu-clause id=\"sec-atomics-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</span> The Atomics Object</h1>\n    <p>The Atomics object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Atomics%</dfn>.</li>\n      <li>is the initial value of the <code>\"Atomics\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <p>The Atomics object provides functions that operate indivisibly (atomically) on shared memory array cells as well as functions that let agents wait for and dispatch primitive events.  When used with discipline, the Atomics functions allow multi-<emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> programs that communicate through shared memory to execute in a well-understood order even on parallel CPUs. The rules that govern shared-memory communication are provided by the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref>, defined below.</p>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>For informative guidelines for programming and implementing shared memory in ECMAScript, please see the notes at the end of the <emu-xref href=\"#sec-memory-model\"><a href=\"#sec-memory-model\">memory model</a></emu-xref> section.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-abstract-operations-for-atomics\"><h1><span class=\"secnum\">24.4.1</span>#sec-abstract-operations-for-atomics Abstract Operations for Atomics</h1>...</div><div id=\"excluded-sec-atomics.add\"><h1><span class=\"secnum\">24.4.2</span>#sec-atomics.add Atomics.add ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.and\"><h1><span class=\"secnum\">24.4.3</span>#sec-atomics.and Atomics.and ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.compareexchange\"><h1><span class=\"secnum\">24.4.4</span>#sec-atomics.compareexchange Atomics.compareExchange ( typedArray, index, expectedValue, replacementValue )</h1>...</div><div id=\"excluded-sec-atomics.exchange\"><h1><span class=\"secnum\">24.4.5</span>#sec-atomics.exchange Atomics.exchange ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.islockfree\"><h1><span class=\"secnum\">24.4.6</span>#sec-atomics.islockfree Atomics.isLockFree ( size )</h1>...</div><div id=\"excluded-sec-atomics.load\"><h1><span class=\"secnum\">24.4.7</span>#sec-atomics.load Atomics.load ( typedArray, index )</h1>...</div><div id=\"excluded-sec-atomics.or\"><h1><span class=\"secnum\">24.4.8</span>#sec-atomics.or Atomics.or ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.store\"><h1><span class=\"secnum\">24.4.9</span>#sec-atomics.store Atomics.store ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.sub\"><h1><span class=\"secnum\">24.4.10</span>#sec-atomics.sub Atomics.sub ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics.wait\"><h1><span class=\"secnum\">24.4.11</span>#sec-atomics.wait Atomics.wait ( typedArray, index, value, timeout )</h1>...</div><div id=\"excluded-sec-atomics.notify\"><h1><span class=\"secnum\">24.4.12</span>#sec-atomics.notify Atomics.notify ( typedArray, index, count )</h1>...</div><div id=\"excluded-sec-atomics.xor\"><h1><span class=\"secnum\">24.4.13</span>#sec-atomics.xor Atomics.xor ( typedArray, index, value )</h1>...</div><div id=\"excluded-sec-atomics-@@tostringtag\"><h1><span class=\"secnum\">24.4.14</span>#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]</h1>...</div></emu-clause>\n\n  "}, "sec-asyncgenerator-objects": {"num": "25.5", "title": "#sec-asyncgenerator-objects AsyncGenerator Objects", "html": "<emu-clause id=\"sec-asyncgenerator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgenerator-objects\">#sec-asyncgenerator-objects</span> AsyncGenerator Objects</h1>\n    <p>An AsyncGenerator object is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces.</p>\n\n    <p>AsyncGenerator instances directly inherit properties from the object that is the value of the <code>\"prototype\"</code> property of the AsyncGenerator function that created the instance. AsyncGenerator instances indirectly inherit properties from the AsyncGenerator Prototype intrinsic, %AsyncGenerator.prototype%.</p>\n\n    <div id=\"excluded-sec-properties-of-asyncgenerator-prototype\"><h1><span class=\"secnum\">25.5.1</span>#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-asyncgenerator-intances\"><h1><span class=\"secnum\">25.5.2</span>#sec-properties-of-asyncgenerator-intances Properties of AsyncGenerator Instances</h1>...</div><div id=\"excluded-sec-asyncgenerator-abstract-operations\"><h1><span class=\"secnum\">25.5.3</span>#sec-asyncgenerator-abstract-operations AsyncGenerator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-date.prototype.togmtstring": {"num": "B.2.4.3", "title": "#sec-date.prototype.togmtstring Date.prototype.toGMTString ( )", "html": "<emu-annex id=\"sec-date.prototype.togmtstring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype.togmtstring\">#sec-date.prototype.togmtstring</span> Date.prototype.toGMTString ( )</h1>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The property <code>\"toUTCString\"</code> is preferred. The <code>\"toGMTString\"</code> property is provided principally for compatibility with old code. It is recommended that the <code>\"toUTCString\"</code> property be used in new ECMAScript code.</p>\n        </div></emu-note>\n        <p>The <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of <code>Date.prototype.toGMTString</code> is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of <code>Date.prototype.toUTCString</code>.</p>\n      </emu-annex>\n    "}, "sec-regexp.prototype-@@split": {"num": "21.2.5.13", "title": "#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )", "html": "<emu-clause id=\"sec-regexp.prototype-@@split\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@split\">#sec-regexp.prototype-@@split</span> RegExp.prototype [ @@split ] ( <var>string</var>, <var>limit</var> )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Returns an Array object into which substrings of the result of converting <var>string</var> to a String have been stored. The substrings are determined by searching from left to right for matches of the <emu-val>this</emu-val> value regular expression; these occurrences are not part of any substring in the returned array, but serve to divide up the String value.</p>\n          <p>The <emu-val>this</emu-val> value may be an empty regular expression or a regular expression that can match an empty String. In this case, the regular expression does not match the empty substring at the beginning or end of the input String, nor does it match the empty substring at the end of the previous separator match. (For example, if the regular expression matches the empty String, the String is split up into individual code unit elements; the length of the result array equals the length of the String, and each substring contains one code unit.) Only the first match at a given index of the String is considered, even if backtracking could yield a non-empty-substring match at that index. (For example, <code>/a*?/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"a\", \"b\"]</code>, while <code>/a*/[Symbol.split](\"ab\")</code> evaluates to the array <code>[\"\",\"b\"]</code>.)</p>\n          <p>If the <var>string</var> is (or converts to) the empty String, the result depends on whether the regular expression can match the empty String. If it can, the result array contains no elements. Otherwise, the result array contains one element, which is the empty String.</p>\n          <p>If the regular expression contains capturing parentheses, then each time <var>separator</var> is matched the results (including any <emu-val>undefined</emu-val> results) of the capturing parentheses are spliced into the output array. For example,</p>\n          <pre><code class=\"javascript hljs\">/&lt;(\\/)?([^<span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>]+)&gt;/[Symbol.split](\"A<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">B</span>&gt;</span>bold<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">B</span>&gt;</span>and<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CODE</span>&gt;</span>coded<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">CODE</span>&gt;</span>\")</span></code></pre>\n          <p>evaluates to the array</p>\n          <pre><code class=\"javascript hljs\">[<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"bold\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"and\"</span>, <span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"coded\"</span>, <span class=\"hljs-string\">\"/\"</span>, <span class=\"hljs-string\">\"CODE\"</span>, <span class=\"hljs-string\">\"\"</span>]</code></pre>\n          <p>If <var>limit</var> is not <emu-val>undefined</emu-val>, then the output array is truncated so that it contains no more than <var>limit</var> elements.</p>\n        </div></emu-note>\n        <p>When the <code>@@split</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"SpeciesConstructor\"><a href=\"#sec-speciesconstructor\">SpeciesConstructor</a></emu-xref>(<var>rx</var>, <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>).</li><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"flags\"</code>)).</li><li>If <var>flags</var> contains <code>\"u\"</code>, let <var>unicodeMatching</var> be <emu-val>true</emu-val>.</li><li>Else, let <var>unicodeMatching</var> be <emu-val>false</emu-val>.</li><li>If <var>flags</var> contains <code>\"y\"</code>, let <var>newFlags</var> be <var>flags</var>.</li><li>Else, let <var>newFlags</var> be the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>flags</var> and <code>\"y\"</code>.</li><li>Let <var>splitter</var> be ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>rx</var>, <var>newFlags</var> &#187;).</li><li>Let <var>A</var> be !&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(0).</li><li>Let <var>lengthA</var> be 0.</li><li>If <var>limit</var> is <emu-val>undefined</emu-val>, let <var>lim</var> be 2<sup>32</sup> - 1; else let <var>lim</var> be ?&#160;<emu-xref aoid=\"ToUint32\"><a href=\"#sec-touint32\">ToUint32</a></emu-xref>(<var>limit</var>).</li><li>Let <var>size</var> be the length of <var>S</var>.</li><li>Let <var>p</var> be 0.</li><li>If <var>lim</var> = 0, return <var>A</var>.</li><li>If <var>size</var> = 0, then<ol><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is not <emu-val>null</emu-val>, return <var>A</var>.</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, <code>\"0\"</code>, <var>S</var>).</li><li>Return <var>A</var>.</li></ol></li><li>Let <var>q</var> be <var>p</var>.</li><li>Repeat, while <var>q</var> &lt; <var>size</var><ol><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>splitter</var>, <code>\"lastIndex\"</code>, <var>q</var>, <emu-val>true</emu-val>).</li><li>Let <var>z</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>splitter</var>, <var>S</var>).</li><li>If <var>z</var> is <emu-val>null</emu-val>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>e</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>splitter</var>, <code>\"lastIndex\"</code>)).</li><li>Set <var>e</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>e</var>, <var>size</var>).</li><li>If <var>e</var> = <var>p</var>, set <var>q</var> to <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>q</var>, <var>unicodeMatching</var>).</li><li>Else,<ol><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>q</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li><li>Set <var>p</var> to <var>e</var>.</li><li>Let <var>numberOfCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>z</var>).</li><li>Set <var>numberOfCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>numberOfCaptures</var> - 1, 0).</li><li>Let <var>i</var> be 1.</li><li>Repeat, while <var>i</var> &#8804; <var>numberOfCaptures</var>,<ol><li>Let <var>nextCapture</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>z</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>i</var>)).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>nextCapture</var>).</li><li>Set <var>i</var> to <var>i</var> + 1.</li><li>Set <var>lengthA</var> to <var>lengthA</var> + 1.</li><li>If <var>lengthA</var> = <var>lim</var>, return <var>A</var>.</li></ol></li><li>Set <var>q</var> to <var>p</var>.</li></ol></li></ol></li></ol></li><li>Let <var>T</var> be the String value equal to the substring of <var>S</var> consisting of the code units at indices <var>p</var> (inclusive) through <var>size</var> (exclusive).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>A</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>lengthA</var>), <var>T</var>).</li><li>Return <var>A</var>.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.split]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>@@split</code> method ignores the value of the <code>\"global\"</code> and <code>\"sticky\"</code> properties of this RegExp object.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-asynciteratorprototype-asynciterator": {"num": "25.1.3.1", "title": "#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )", "html": "<emu-clause id=\"sec-asynciteratorprototype-asynciterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype-asynciterator\">#sec-asynciteratorprototype-asynciterator</span> %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.asyncIterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-math.tanh": {"num": "20.3.2.34", "title": "#sec-math.tanh Math.tanh ( x )", "html": "<emu-clause id=\"sec-math.tanh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.tanh\">#sec-math.tanh</span> Math.tanh ( <var>x</var> )</h1>\n        <p>Returns an implementation-dependent approximation to the hyperbolic tangent of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is <emu-val>+0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is <emu-val>-0</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is +1.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is -1.\n          \n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.tanh(x)</code> is the same as the value of <code>(Math.exp(x) - Math.exp(-x)) / (Math.exp(x) + Math.exp(-x))</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-get-%typedarray%-@@species": {"num": "22.2.2.4", "title": "#sec-get-%typedarray%-@@species get %TypedArray% [ @@species ]", "html": "<emu-clause id=\"sec-get-%typedarray%-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-%typedarray%-@@species\">#sec-get-%typedarray%-@@species</span> get %TypedArray% [ @@species ]</h1>\n        <p><emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref><code>[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref> methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-typedarray.prototype.constructor": {"num": "22.2.6.2", "title": "#sec-typedarray.prototype.constructor TypedArray.prototype.constructor", "html": "<emu-clause id=\"sec-typedarray.prototype.constructor\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray.prototype.constructor\">#sec-typedarray.prototype.constructor</span> <var>TypedArray</var>.prototype.constructor</h1>\n        <p>The initial value of a <var>TypedArray</var><code>.prototype.constructor</code> is the corresponding <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref> intrinsic object.</p>\n      </emu-clause>\n    "}, "sec-object-constructor": {"num": "19.1.1", "title": "#sec-object-constructor The Object Constructor", "html": "<emu-clause id=\"sec-object-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</span> The Object Constructor</h1>\n      <p>The Object <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Object%</dfn>.</li>\n        <li>is the initial value of the <code>\"Object\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates a new ordinary object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition.</li>\n      </ul>\n\n      <div id=\"excluded-sec-object-value\"><h1><span class=\"secnum\">19.1.1.1</span>#sec-object-value Object ( [ value ] )</h1>...</div></emu-clause>\n\n    "}, "sec-json-@@tostringtag": {"num": "24.5.3", "title": "#sec-json-@@tostringtag JSON [ @@toStringTag ]", "html": "<emu-clause id=\"sec-json-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json-@@tostringtag\">#sec-json-@@tostringtag</span> JSON [ @@toStringTag ]</h1>\n      <p>The initial value of the @@toStringTag property is the String value <emu-val>\"JSON\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-get-promise-@@species": {"num": "25.6.4.7", "title": "#sec-get-promise-@@species get Promise [ @@species ]", "html": "<emu-clause id=\"sec-get-promise-@@species\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-get-promise-@@species\">#sec-get-promise-@@species</span> get Promise [ @@species ]</h1>\n        <p><code>Promise[@@species]</code> is an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> whose set accessor function is <emu-val>undefined</emu-val>. Its get accessor function performs the following steps:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"get [Symbol.species]\"</emu-val>.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Promise prototype methods normally use their <code>this</code> object's <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create a derived object. However, a subclass <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> may over-ride that default behaviour by redefining its @@species property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-%iteratorprototype%-@@iterator": {"num": "25.1.2.1", "title": "#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-%iteratorprototype%-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-@@iterator\">#sec-%iteratorprototype%-@@iterator</span> %IteratorPrototype% [ @@iterator ] ( )</h1>\n        <p>The following steps are taken:</p>\n        <emu-alg><ol><li>Return the <emu-val>this</emu-val> value.\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.iterator]\"</emu-val>.</p>\n      </emu-clause>\n    "}, "sec-atomics.islockfree": {"num": "24.4.6", "title": "#sec-atomics.islockfree Atomics.isLockFree ( size )", "html": "<emu-clause id=\"sec-atomics.islockfree\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics.islockfree\">#sec-atomics.islockfree</span> Atomics.isLockFree ( <var>size</var> )</h1>\n      <p>The following steps are taken:</p>\n      <emu-alg><ol><li>Let <var>n</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>size</var>).</li><li>Let <var>AR</var> be the <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref> of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>.</li><li>If <var>n</var> equals 1, return <var>AR</var>.[[IsLockFree1]].</li><li>If <var>n</var> equals 2, return <var>AR</var>.[[IsLockFree2]].</li><li>If <var>n</var> equals 4, return <emu-val>true</emu-val>.</li><li>If <var>n</var> equals 8, return <var>AR</var>.[[IsLockFree8]].</li><li>Return <emu-val>false</emu-val>.\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p><code>Atomics.isLockFree</code>() is an optimization primitive. The intuition is that if the atomic step of an atomic primitive (<code>compareExchange</code>, <code>load</code>, <code>store</code>, <code>add</code>, <code>sub</code>, <code>and</code>, <code>or</code>, <code>xor</code>, or <code>exchange</code>) on a datum of size <var>n</var> bytes will be performed without the calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> acquiring a lock outside the <var>n</var> bytes comprising the datum, then <code>Atomics.isLockFree</code>(<var>n</var>) will return <emu-val>true</emu-val>. High-performance algorithms will use <code>Atomics.isLockFree</code> to determine whether to use locks or atomic operations in critical sections. If an atomic primitive is not lock-free then it is often more efficient for an algorithm to provide its own locking.</p>\n        <p><code>Atomics.isLockFree</code>(4) always returns <emu-val>true</emu-val> as that can be supported on all known relevant hardware. Being able to assume this will generally simplify programs.</p>\n        <p>Regardless of the value of <code>Atomics.isLockFree</code>, all atomic operations are guaranteed to be atomic. For example, they will never have a visible operation take place in the middle of the operation (e.g., \"tearing\").</p>\n      </div></emu-note>\n    </emu-clause>\n    "}, "sec-sharedarraybuffer.prototype.toString": {"num": "24.2.4.4", "title": "#sec-sharedarraybuffer.prototype.toString SharedArrayBuffer.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-sharedarraybuffer.prototype.toString\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-sharedarraybuffer.prototype.toString\">#sec-sharedarraybuffer.prototype.toString</span> SharedArrayBuffer.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"SharedArrayBuffer\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-map.prototype-@@tostringtag": {"num": "23.1.3.13", "title": "#sec-map.prototype-@@tostringtag Map.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-map.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-map.prototype-@@tostringtag\">#sec-map.prototype-@@tostringtag</span> Map.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Map\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-json.stringify": {"num": "24.5.2", "title": "#sec-json.stringify JSON.stringify ( value [ , replacer [ , space ] ] )", "html": "<emu-clause id=\"sec-json.stringify\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-json.stringify\">#sec-json.stringify</span> JSON.stringify ( <var>value</var> [ , <var>replacer</var> [ , <var>space</var> ] ] )</h1>\n      <p>The <code>stringify</code> function returns a String in UTF-16 encoded JSON format representing an ECMAScript value, or <emu-val>undefined</emu-val>. It can take three parameters. The <var>value</var> parameter is an ECMAScript value, which is usually an object or array, although it can also be a String, Boolean, Number or <emu-val>null</emu-val>. The optional <var>replacer</var> parameter is either a function that alters the way objects and arrays are stringified, or an array of Strings and Numbers that acts as an inclusion list for selecting the object properties that will be stringified. The optional <var>space</var> parameter is a String or Number that allows the result to have white space injected into it to improve human readability.</p>\n      <p>These are the steps in stringifying an object:</p>\n      <emu-alg><ol><li>Let <var>stack</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>indent</var> be the empty String.</li><li>Let <var>PropertyList</var> and <var>ReplacerFunction</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>replacer</var>) is Object, then<ol><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replacer</var>) is <emu-val>true</emu-val>, then<ol><li>Set <var>ReplacerFunction</var> to <var>replacer</var>.</li></ol></li><li>Else,<ol><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>replacer</var>).</li><li>If <var>isArray</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>PropertyList</var> to a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>replacer</var>).</li><li>Let <var>k</var> be 0.</li><li>Repeat, while <var>k</var> &lt; <var>len</var>,<ol><li>Let <var>v</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>replacer</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>)).</li><li>Let <var>item</var> be <emu-val>undefined</emu-val>.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is String, set <var>item</var> to <var>v</var>.</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Number, set <var>item</var> to !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>v</var>) is Object, then<ol><li>If <var>v</var> has a [[StringData]] or [[NumberData]] internal slot, set <var>item</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>v</var>).</li></ol></li><li>If <var>item</var> is not <emu-val>undefined</emu-val> and <var>item</var> is not currently an element of <var>PropertyList</var>, then<ol><li>Append <var>item</var> to the end of <var>PropertyList</var>.</li></ol></li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li></ol></li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Object, then<ol><li>If <var>space</var> has a [[NumberData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref>(<var>space</var>).</li></ol></li><li>Else if <var>space</var> has a [[StringData]] internal slot, then<ol><li>Set <var>space</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>space</var>).</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is Number, then<ol><li>Set <var>space</var> to <emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(10, !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>space</var>)).</li><li>If <var>space</var> &lt; 1, let <var>gap</var> be the empty String; otherwise let <var>gap</var> be the String value containing <var>space</var> occurrences of the code unit 0x0020 (SPACE).</li></ol></li><li>Else if <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>space</var>) is String, then<ol><li>If the length of <var>space</var> is 10 or less, let <var>gap</var> be <var>space</var>; otherwise let <var>gap</var> be the String value consisting of the first 10 code units of <var>space</var>.</li></ol></li><li>Else,<ol><li>Let <var>gap</var> be the empty String.</li></ol></li><li>Let <var>wrapper</var> be <emu-xref aoid=\"ObjectCreate\"><a href=\"#sec-objectcreate\">ObjectCreate</a></emu-xref>(%Object.prototype%).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>wrapper</var>, the empty String, <var>value</var>).</li><li>Return ?&#160;<emu-xref aoid=\"SerializeJSONProperty\"><a href=\"#sec-serializejsonproperty\">SerializeJSONProperty</a></emu-xref>(the empty String, <var>wrapper</var>).\n      </li></ol></emu-alg>\n      <p>The <code>\"length\"</code> property of the <code>stringify</code> function is 3.</p>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>JSON structures are allowed to be nested to any depth, but they must be acyclic. If <var>value</var> is or contains a cyclic structure, then the stringify function must throw a <emu-val>TypeError</emu-val> exception. This is an example of a value that cannot be stringified:</p>\n        <pre><code class=\"javascript hljs\">a = [];\na[<span class=\"hljs-number\">0</span>] = a;\nmy_text = <span class=\"hljs-built_in\">JSON</span>.stringify(a); <span class=\"hljs-comment\">// This must throw a TypeError.</span></code></pre>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p>Symbolic primitive values are rendered as follows:</p>\n        <ul>\n          <li>\n            The <emu-val>null</emu-val> value is rendered in JSON text as the String <code>\"null\"</code>.\n          \n          </li>\n          <li>\n            The <emu-val>undefined</emu-val> value is not rendered.\n          \n          </li>\n          <li>\n            The <emu-val>true</emu-val> value is rendered in JSON text as the String <code>\"true\"</code>.\n          \n          </li>\n          <li>\n            The <emu-val>false</emu-val> value is rendered in JSON text as the String <code>\"false\"</code>.\n          \n          </li>\n        </ul>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>String values are wrapped in QUOTATION MARK (<code>\"</code>) code units. The code units <code>\"</code> and <code>\\</code> are escaped with <code>\\</code> prefixes. Control characters code units are replaced with escape sequences <code>\\u</code>HHHH, or with the shorter forms, <code>\\b</code> (BACKSPACE), <code>\\f</code> (FORM FEED), <code>\\n</code> (LINE FEED), <code>\\r</code> (CARRIAGE RETURN), <code>\\t</code> (CHARACTER TABULATION).</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 4</span><div class=\"note-contents\">\n        <p>Finite numbers are stringified as if by calling <emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>number</var>). <emu-val>NaN</emu-val> and <emu-val>Infinity</emu-val> regardless of sign are represented as the String <code>\"null\"</code>.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 5</span><div class=\"note-contents\">\n        <p>Values that do not have a JSON representation (such as <emu-val>undefined</emu-val> and functions) do not produce a String. Instead they produce the <emu-val>undefined</emu-val> value. In arrays these values are represented as the String <code>\"null\"</code>. In objects an unrepresentable value causes the property to be excluded from stringification.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 6</span><div class=\"note-contents\">\n        <p>An object is rendered as U+007B (LEFT CURLY BRACKET) followed by zero or more properties, separated with a U+002C (COMMA), closed with a U+007D (RIGHT CURLY BRACKET). A property is a quoted String representing the key or <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref>, a U+003A (COLON), and then the stringified property value. An array is rendered as an opening U+005B (LEFT SQUARE BRACKET followed by zero or more values, separated with a U+002C (COMMA), closed with a U+005D (RIGHT SQUARE BRACKET).</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-serializejsonproperty\"><h1><span class=\"secnum\">24.5.2.1</span>#sec-serializejsonproperty Runtime Semantics: SerializeJSONProperty ( key, holder )</h1>...</div><div id=\"excluded-sec-quotejsonstring\"><h1><span class=\"secnum\">24.5.2.2</span>#sec-quotejsonstring Runtime Semantics: QuoteJSONString ( value )</h1>...</div><div id=\"excluded-sec-unicodeescape\"><h1><span class=\"secnum\">24.5.2.3</span>#sec-unicodeescape Runtime Semantics: UnicodeEscape ( C )</h1>...</div><div id=\"excluded-sec-serializejsonobject\"><h1><span class=\"secnum\">24.5.2.4</span>#sec-serializejsonobject Runtime Semantics: SerializeJSONObject ( value )</h1>...</div><div id=\"excluded-sec-serializejsonarray\"><h1><span class=\"secnum\">24.5.2.5</span>#sec-serializejsonarray Runtime Semantics: SerializeJSONArray ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-array-constructor": {"num": "22.1.1", "title": "#sec-array-constructor The Array Constructor", "html": "<emu-clause id=\"sec-array-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</span> The Array Constructor</h1>\n      <p>The Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Array%</dfn>.</li>\n        <li>is the initial value of the <code>\"Array\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Array <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref> when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>also creates and initializes a new Array object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>Array(&#8230;)</code> is equivalent to the object creation expression <code>new Array(&#8230;)</code> with the same arguments.</li>\n        <li>is a single function whose behaviour is overloaded based upon the number and types of its arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the exotic <code>Array</code> behaviour must include a <code>super</code> call to the <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to initialize subclass instances that are Array exotic objects. However, most of the <code>Array.prototype</code> methods are generic methods that are not dependent upon their <emu-val>this</emu-val> value being an Array <emu-xref href=\"#exotic-object\"><a href=\"#exotic-object\">exotic object</a></emu-xref>.</li>\n        <li>has a <code>\"length\"</code> property whose value is 1.</li>\n      </ul>\n\n      <div id=\"excluded-sec-array-constructor-array\"><h1><span class=\"secnum\">22.1.1.1</span>#sec-array-constructor-array Array ( )</h1>...</div><div id=\"excluded-sec-array-len\"><h1><span class=\"secnum\">22.1.1.2</span>#sec-array-len Array ( len )</h1>...</div><div id=\"excluded-sec-array-items\"><h1><span class=\"secnum\">22.1.1.3</span>#sec-array-items Array ( ...items )</h1>...</div></emu-clause>\n\n    "}, "sec-well-known-intrinsic-objects": {"num": "6.1.7.4", "title": "#sec-well-known-intrinsic-objects Well-Known Intrinsic Objects", "html": "<emu-clause id=\"sec-well-known-intrinsic-objects\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-well-known-intrinsic-objects\">#sec-well-known-intrinsic-objects</span> Well-Known Intrinsic Objects</h1>\n        <p>Well-known intrinsics are built-in objects that are explicitly referenced by the algorithms of this specification and which usually have <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>-specific identities. Unless otherwise specified each intrinsic object actually corresponds to a set of similar objects, one per <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>.</p>\n        <p>Within this specification a reference such as %name% means the intrinsic object, associated with the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref>, corresponding to the name. A reference such as %name.a.b% means, as if the \"b\" property of the \"a\" property of the intrinsic object %name% was accessed prior to any ECMAScript code being evaluated. Determination of the current <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> and its intrinsics is described in  <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\" class=\"excluded-xref\" excluded-id=\"sec-execution-contexts\">#sec-execution-contexts</a></emu-xref>. The well-known intrinsics are listed in  <emu-xref href=\"#table-7\"><a href=\"#table-7\" class=\"excluded-xref\" excluded-id=\"table-7\">#table-7</a></emu-xref>.</p>\n        <emu-table id=\"table-7\" caption=\"Well-Known Intrinsic Objects\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-7\">#table-7</span>: Well-Known Intrinsic Objects</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Intrinsic Name\n              \n              </th>\n              <th>\n                Global Name\n              \n              </th>\n              <th>\n                ECMAScript Language Association\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array</code>\n              \n              </td>\n              <td>\n                The <code>Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\" class=\"excluded-xref\" excluded-id=\"sec-array-constructor\">#sec-array-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>ArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-arraybuffer-constructor\">#sec-arraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-arraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-arraybuffer-prototype-object\">%ArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>ArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-arraybuffer-constructor\"><a href=\"#sec-arraybuffer-constructor\">%ArrayBuffer%</a></emu-xref>; i.e., %ArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%arrayiteratorprototype%-object\"><a href=\"#sec-%arrayiteratorprototype%-object\">%ArrayIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Array iterator objects (<emu-xref href=\"#sec-array-iterator-objects\"><a href=\"#sec-array-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-array-iterator-objects\">#sec-array-iterator-objects</a></emu-xref>); i.e., %ArrayIterator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\">%ArrayPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-array-prototype-object\"><a href=\"#sec-properties-of-the-array-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-array-prototype-object\">#sec-properties-of-the-array-prototype-object</a></emu-xref>); i.e., %Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\">%ArrayProto_entries%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.entries</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"entries\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.entries\"><a href=\"#sec-array.prototype.entries\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.entries\">#sec-array.prototype.entries</a></emu-xref>); i.e., %Array.prototype.entries%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\">%ArrayProto_forEach%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.forEach</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"forEach\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.foreach\"><a href=\"#sec-array.prototype.foreach\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.foreach\">#sec-array.prototype.foreach</a></emu-xref>); i.e., %Array.prototype.forEach%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\">%ArrayProto_keys%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.keys</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"keys\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.keys\"><a href=\"#sec-array.prototype.keys\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.keys\">#sec-array.prototype.keys</a></emu-xref>); i.e., %Array.prototype.keys%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\">%ArrayProto_values%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Array.prototype.values</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"values\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Array.prototype% (<emu-xref href=\"#sec-array.prototype.values\"><a href=\"#sec-array.prototype.values\" class=\"excluded-xref\" excluded-id=\"sec-array.prototype.values\">#sec-array.prototype.values</a></emu-xref>); i.e., %Array.prototype.values%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%asyncfromsynciteratorprototype%-object\"><a href=\"#sec-%asyncfromsynciteratorprototype%-object\">%AsyncFromSyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of async-from-sync iterator objects (<emu-xref href=\"#sec-async-from-sync-iterator-objects\"><a href=\"#sec-async-from-sync-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-async-from-sync-iterator-objects\">#sec-async-from-sync-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async function objects (<emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-async-function-constructor\">#sec-async-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-async-function-prototype-properties\"><a href=\"#sec-async-function-prototype-properties\">%AsyncFunctionPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-async-function-constructor\"><a href=\"#sec-async-function-constructor\">%AsyncFunction%</a></emu-xref>; i.e., %AsyncFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>; i.e., %AsyncGeneratorFunction.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\">%AsyncGeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of async iterator objects (<emu-xref href=\"#sec-asyncgeneratorfunction-constructor\"><a href=\"#sec-asyncgeneratorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-asyncgeneratorfunction-constructor\">#sec-asyncgeneratorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref>; i.e., %AsyncGenerator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in async iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\">%Atomics%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Atomics</code>\n              \n              </td>\n              <td>\n                The <code>Atomics</code> object (<emu-xref href=\"#sec-atomics-object\"><a href=\"#sec-atomics-object\" class=\"excluded-xref\" excluded-id=\"sec-atomics-object\">#sec-atomics-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\">%BigInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>BigInt</code>\n              \n              </td>\n              <td>\n                The <code>BigInt</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-bigint-constructor\"><a href=\"#sec-bigint-constructor\" class=\"excluded-xref\" excluded-id=\"sec-bigint-constructor\">#sec-bigint-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigInt64Array%\n              \n              </td>\n              <td>\n                <code>BigInt64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigInt64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %BigUint64Array%\n              \n              </td>\n              <td>\n                <code>BigUint64Array</code>\n              \n              </td>\n              <td>\n                The <code>BigUint64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean</code>\n              \n              </td>\n              <td>\n                The <code>Boolean</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\" class=\"excluded-xref\" excluded-id=\"sec-boolean-constructor\">#sec-boolean-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\">%BooleanPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Boolean.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-boolean-constructor\"><a href=\"#sec-boolean-constructor\">%Boolean%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-boolean-prototype-object\"><a href=\"#sec-properties-of-the-boolean-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-boolean-prototype-object\">#sec-properties-of-the-boolean-prototype-object</a></emu-xref>); i.e., %Boolean.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView</code>\n              \n              </td>\n              <td>\n                The <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\" class=\"excluded-xref\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-dataview-prototype-object\"><a href=\"#sec-properties-of-the-dataview-prototype-object\">%DataViewPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>DataView.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-dataview-constructor\"><a href=\"#sec-dataview-constructor\">%DataView%</a></emu-xref>; i.e., %DataView.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date</code>\n              \n              </td>\n              <td>\n                The <code>Date</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\" class=\"excluded-xref\" excluded-id=\"sec-date-constructor\">#sec-date-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\">%DatePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Date.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-date-constructor\"><a href=\"#sec-date-constructor\">%Date%</a></emu-xref>.; i.e., %Date.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\">%decodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURI</code>\n              \n              </td>\n              <td>\n                The <code>decodeURI</code> function (<emu-xref href=\"#sec-decodeuri-encodeduri\"><a href=\"#sec-decodeuri-encodeduri\" class=\"excluded-xref\" excluded-id=\"sec-decodeuri-encodeduri\">#sec-decodeuri-encodeduri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\">%decodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>decodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>decodeURIComponent</code> function (<emu-xref href=\"#sec-decodeuricomponent-encodeduricomponent\"><a href=\"#sec-decodeuricomponent-encodeduricomponent\" class=\"excluded-xref\" excluded-id=\"sec-decodeuricomponent-encodeduricomponent\">#sec-decodeuricomponent-encodeduricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\">%encodeURI%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURI</code>\n              \n              </td>\n              <td>\n                The <code>encodeURI</code> function (<emu-xref href=\"#sec-encodeuri-uri\"><a href=\"#sec-encodeuri-uri\" class=\"excluded-xref\" excluded-id=\"sec-encodeuri-uri\">#sec-encodeuri-uri</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\">%encodeURIComponent%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>encodeURIComponent</code>\n              \n              </td>\n              <td>\n                The <code>encodeURIComponent</code> function (<emu-xref href=\"#sec-encodeuricomponent-uricomponent\"><a href=\"#sec-encodeuricomponent-uricomponent\" class=\"excluded-xref\" excluded-id=\"sec-encodeuricomponent-uricomponent\">#sec-encodeuricomponent-uricomponent</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error</code>\n              \n              </td>\n              <td>\n                The <code>Error</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\" class=\"excluded-xref\" excluded-id=\"sec-error-constructor\">#sec-error-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-error-prototype-object\"><a href=\"#sec-properties-of-the-error-prototype-object\">%ErrorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Error.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-error-constructor\"><a href=\"#sec-error-constructor\">%Error%</a></emu-xref>; i.e., %Error.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\">%eval%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>eval</code>\n              \n              </td>\n              <td>\n                The <code>eval</code> function (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalError%\n              \n              </td>\n              <td>\n                <code>EvalError</code>\n              \n              </td>\n              <td>\n                The <code>EvalError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-evalerror\"><a href=\"#sec-native-error-types-used-in-this-standard-evalerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-evalerror\">#sec-native-error-types-used-in-this-standard-evalerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %EvalErrorPrototype%\n              \n              </td>\n              <td>\n                <code>EvalError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %EvalError%; i.e., %EvalError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32Array%\n              \n              </td>\n              <td>\n                <code>Float32Array</code>\n              \n              </td>\n              <td>\n                The <code>Float32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float32Array%; i.e., %Float32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64Array%\n              \n              </td>\n              <td>\n                <code>Float64Array</code>\n              \n              </td>\n              <td>\n                The <code>Float64Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Float64ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Float64Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Float64Array%; i.e., %Float64Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Function</code>\n              \n              </td>\n              <td>\n                The <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\" class=\"excluded-xref\" excluded-id=\"sec-function-constructor\">#sec-function-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %FunctionPrototype%\n              \n              </td>\n              <td>\n                <code>Function.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> of generator objects (<emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\" class=\"excluded-xref\" excluded-id=\"sec-generatorfunction-constructor\">#sec-generatorfunction-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref>; i.e., %Generator.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8Array%\n              \n              </td>\n              <td>\n                <code>Int8Array</code>\n              \n              </td>\n              <td>\n                The <code>Int8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int8Array%; i.e., %Int8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16Array%\n              \n              </td>\n              <td>\n                <code>Int16Array</code>\n              \n              </td>\n              <td>\n                The <code>Int16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int16Array%; i.e., %Int16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32Array%\n              \n              </td>\n              <td>\n                <code>Int32Array</code>\n              \n              </td>\n              <td>\n                The <code>Int32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Int32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Int32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Int32Array%; i.e., %Int32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\">%isFinite%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isFinite</code>\n              \n              </td>\n              <td>\n                The <code>isFinite</code> function (<emu-xref href=\"#sec-isfinite-number\"><a href=\"#sec-isfinite-number\" class=\"excluded-xref\" excluded-id=\"sec-isfinite-number\">#sec-isfinite-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\">%isNaN%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>isNaN</code>\n              \n              </td>\n              <td>\n                The <code>isNaN</code> function (<emu-xref href=\"#sec-isnan-number\"><a href=\"#sec-isnan-number\" class=\"excluded-xref\" excluded-id=\"sec-isnan-number\">#sec-isnan-number</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                An object that all standard built-in iterator objects indirectly inherit from\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON</code>\n              \n              </td>\n              <td>\n                The <code>JSON</code> object (<emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\" class=\"excluded-xref\" excluded-id=\"sec-json-object\">#sec-json-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-json.parse\"><a href=\"#sec-json.parse\">%JSONParse%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>JSON.parse</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"parse\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.parse%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %JSONStringify%\n              \n              </td>\n              <td>\n                <code>JSON.stringify</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"stringify\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-json-object\"><a href=\"#sec-json-object\">%JSON%</a></emu-xref>; i.e., %JSON.stringify%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map</code>\n              \n              </td>\n              <td>\n                The <code>Map</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\" class=\"excluded-xref\" excluded-id=\"sec-map-constructor\">#sec-map-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%mapiteratorprototype%-object\"><a href=\"#sec-%mapiteratorprototype%-object\">%MapIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Map iterator objects (<emu-xref href=\"#sec-map-iterator-objects\"><a href=\"#sec-map-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-map-iterator-objects\">#sec-map-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-map-prototype-object\"><a href=\"#sec-properties-of-the-map-prototype-object\">%MapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Map.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-map-constructor\"><a href=\"#sec-map-constructor\">%Map%</a></emu-xref>; i.e., %Map.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\">%Math%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Math</code>\n              \n              </td>\n              <td>\n                The <code>Math</code> object (<emu-xref href=\"#sec-math-object\"><a href=\"#sec-math-object\" class=\"excluded-xref\" excluded-id=\"sec-math-object\">#sec-math-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number</code>\n              \n              </td>\n              <td>\n                The <code>Number</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\" class=\"excluded-xref\" excluded-id=\"sec-number-constructor\">#sec-number-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-number-prototype-object\"><a href=\"#sec-properties-of-the-number-prototype-object\">%NumberPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Number.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-number-constructor\"><a href=\"#sec-number-constructor\">%Number%</a></emu-xref>; i.e., %Number.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object</code>\n              \n              </td>\n              <td>\n                The <code>Object</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\" class=\"excluded-xref\" excluded-id=\"sec-object-constructor\">#sec-object-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\">%ObjectPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-object-constructor\"><a href=\"#sec-object-constructor\">%Object%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>); i.e., %Object.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\">%ObjProto_toString%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.toString</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"toString\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.tostring\"><a href=\"#sec-object.prototype.tostring\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.tostring\">#sec-object.prototype.tostring</a></emu-xref>); i.e., %Object.prototype.toString%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\">%ObjProto_valueOf%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Object.prototype.valueOf</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"valueOf\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Object.prototype% (<emu-xref href=\"#sec-object.prototype.valueof\"><a href=\"#sec-object.prototype.valueof\" class=\"excluded-xref\" excluded-id=\"sec-object.prototype.valueof\">#sec-object.prototype.valueof</a></emu-xref>); i.e., %Object.prototype.valueOf%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\">%parseFloat%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseFloat</code>\n              \n              </td>\n              <td>\n                The <code>parseFloat</code> function (<emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\">%parseInt%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>parseInt</code>\n              \n              </td>\n              <td>\n                The <code>parseInt</code> function (<emu-xref href=\"#sec-parseint-string-radix\"><a href=\"#sec-parseint-string-radix\" class=\"excluded-xref\" excluded-id=\"sec-parseint-string-radix\">#sec-parseint-string-radix</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise</code>\n              \n              </td>\n              <td>\n                The <code>Promise</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\" class=\"excluded-xref\" excluded-id=\"sec-promise-constructor\">#sec-promise-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-promise-prototype-object\"><a href=\"#sec-properties-of-the-promise-prototype-object\">%PromisePrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref>; i.e., %Promise.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\">%PromiseProto_then%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.prototype.then</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"then\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Promise.prototype% (<emu-xref href=\"#sec-promise.prototype.then\"><a href=\"#sec-promise.prototype.then\" class=\"excluded-xref\" excluded-id=\"sec-promise.prototype.then\">#sec-promise.prototype.then</a></emu-xref>); i.e., %Promise.prototype.then%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\">%Promise_all%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.all</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"all\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.all\"><a href=\"#sec-promise.all\" class=\"excluded-xref\" excluded-id=\"sec-promise.all\">#sec-promise.all</a></emu-xref>); i.e., %Promise.all%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\">%Promise_reject%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.reject</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"reject\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.reject\"><a href=\"#sec-promise.reject\" class=\"excluded-xref\" excluded-id=\"sec-promise.reject\">#sec-promise.reject</a></emu-xref>); i.e., %Promise.reject%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\">%Promise_resolve%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Promise.resolve</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"resolve\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-promise-constructor\"><a href=\"#sec-promise-constructor\">%Promise%</a></emu-xref> (<emu-xref href=\"#sec-promise.resolve\"><a href=\"#sec-promise.resolve\" class=\"excluded-xref\" excluded-id=\"sec-promise.resolve\">#sec-promise.resolve</a></emu-xref>); i.e., %Promise.resolve%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\">%Proxy%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Proxy</code>\n              \n              </td>\n              <td>\n                The <code>Proxy</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-proxy-constructor\"><a href=\"#sec-proxy-constructor\" class=\"excluded-xref\" excluded-id=\"sec-proxy-constructor\">#sec-proxy-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeError%\n              \n              </td>\n              <td>\n                <code>RangeError</code>\n              \n              </td>\n              <td>\n                The <code>RangeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-rangeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-rangeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-rangeerror\">#sec-native-error-types-used-in-this-standard-rangeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %RangeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>RangeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %RangeError%; i.e., %RangeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceError%\n              \n              </td>\n              <td>\n                <code>ReferenceError</code>\n              \n              </td>\n              <td>\n                The <code>ReferenceError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-referenceerror\"><a href=\"#sec-native-error-types-used-in-this-standard-referenceerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-referenceerror\">#sec-native-error-types-used-in-this-standard-referenceerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %ReferenceErrorPrototype%\n              \n              </td>\n              <td>\n                <code>ReferenceError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %ReferenceError%; i.e., %ReferenceError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\">%Reflect%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Reflect</code>\n              \n              </td>\n              <td>\n                The <code>Reflect</code> object (<emu-xref href=\"#sec-reflect-object\"><a href=\"#sec-reflect-object\" class=\"excluded-xref\" excluded-id=\"sec-reflect-object\">#sec-reflect-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp</code>\n              \n              </td>\n              <td>\n                The <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\" class=\"excluded-xref\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\">%RegExpPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>RegExp.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-regexp-constructor\"><a href=\"#sec-regexp-constructor\">%RegExp%</a></emu-xref>; i.e., %RegExp.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%regexpstringiteratorprototype%-object\"><a href=\"#sec-%regexpstringiteratorprototype%-object\">%RegExpStringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of RegExp String Iterator objects (<emu-xref href=\"#sec-regexp-string-iterator-objects\"><a href=\"#sec-regexp-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-regexp-string-iterator-objects\">#sec-regexp-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set</code>\n              \n              </td>\n              <td>\n                The <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\" class=\"excluded-xref\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%setiteratorprototype%-object\"><a href=\"#sec-%setiteratorprototype%-object\">%SetIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of Set iterator objects (<emu-xref href=\"#sec-set-iterator-objects\"><a href=\"#sec-set-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-set-iterator-objects\">#sec-set-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-set-prototype-object\"><a href=\"#sec-properties-of-the-set-prototype-object\">%SetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Set.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-set-constructor\"><a href=\"#sec-set-constructor\">%Set%</a></emu-xref>; i.e., %Set.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer</code>\n              \n              </td>\n              <td>\n                The <code>SharedArrayBuffer</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\" class=\"excluded-xref\" excluded-id=\"sec-sharedarraybuffer-constructor\">#sec-sharedarraybuffer-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\"><a href=\"#sec-properties-of-the-sharedarraybuffer-prototype-object\">%SharedArrayBufferPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>SharedArrayBuffer.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-sharedarraybuffer-constructor\"><a href=\"#sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></emu-xref>; i.e., %SharedArrayBuffer.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String</code>\n              \n              </td>\n              <td>\n                The <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\" class=\"excluded-xref\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%stringiteratorprototype%-object\"><a href=\"#sec-%stringiteratorprototype%-object\">%StringIteratorPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The prototype of String iterator objects (<emu-xref href=\"#sec-string-iterator-objects\"><a href=\"#sec-string-iterator-objects\" class=\"excluded-xref\" excluded-id=\"sec-string-iterator-objects\">#sec-string-iterator-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-string-prototype-object\"><a href=\"#sec-properties-of-the-string-prototype-object\">%StringPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>String.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-string-constructor\"><a href=\"#sec-string-constructor\">%String%</a></emu-xref>; i.e., %String.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol</code>\n              \n              </td>\n              <td>\n                The <code>Symbol</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\" class=\"excluded-xref\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\">%SymbolPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>Symbol.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-symbol-constructor\"><a href=\"#sec-symbol-constructor\">%Symbol%</a></emu-xref> (<emu-xref href=\"#sec-properties-of-the-symbol-prototype-object\"><a href=\"#sec-properties-of-the-symbol-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-symbol-prototype-object\">#sec-properties-of-the-symbol-prototype-object</a></emu-xref>); i.e., %Symbol.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxError%\n              \n              </td>\n              <td>\n                <code>SyntaxError</code>\n              \n              </td>\n              <td>\n                The <code>SyntaxError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\"><a href=\"#sec-native-error-types-used-in-this-standard-syntaxerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-syntaxerror\">#sec-native-error-types-used-in-this-standard-syntaxerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %SyntaxErrorPrototype%\n              \n              </td>\n              <td>\n                <code>SyntaxError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %SyntaxError%; i.e., %SyntaxError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%throwtypeerror%\"><a href=\"#sec-%throwtypeerror%\">%ThrowTypeError%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                A <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that unconditionally throws a new instance of %TypeError%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The super class of all typed Array constructors (<emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\" class=\"excluded-xref\" excluded-id=\"sec-%typedarray%-intrinsic-object\">#sec-%typedarray%-intrinsic-object</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypedArrayPrototype%\n              \n              </td>\n              <td>\n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref>; i.e., <emu-xref href=\"#sec-properties-of-the-%typedarrayprototype%-object\"><a href=\"#sec-properties-of-the-%typedarrayprototype%-object\">%TypedArray.prototype%</a></emu-xref>\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeError%\n              \n              </td>\n              <td>\n                <code>TypeError</code>\n              \n              </td>\n              <td>\n                The <code>TypeError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-typeerror\"><a href=\"#sec-native-error-types-used-in-this-standard-typeerror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-typeerror\">#sec-native-error-types-used-in-this-standard-typeerror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %TypeErrorPrototype%\n              \n              </td>\n              <td>\n                <code>TypeError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %TypeError%; i.e., %TypeError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8Array%\n              \n              </td>\n              <td>\n                <code>Uint8Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint8Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8Array%; i.e., %Uint8Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArray%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray</code>\n              \n              </td>\n              <td>\n                The <code>Uint8ClampedArray</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint8ClampedArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint8ClampedArray.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint8ClampedArray%; i.e., %Uint8ClampedArray.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16Array%\n              \n              </td>\n              <td>\n                <code>Uint16Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint16Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint16ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint16Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint16Array%; i.e., %Uint16Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32Array%\n              \n              </td>\n              <td>\n                <code>Uint32Array</code>\n              \n              </td>\n              <td>\n                The <code>Uint32Array</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-typedarray-objects\"><a href=\"#sec-typedarray-objects\" class=\"excluded-xref\" excluded-id=\"sec-typedarray-objects\">#sec-typedarray-objects</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %Uint32ArrayPrototype%\n              \n              </td>\n              <td>\n                <code>Uint32Array.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %Uint32Array%; i.e., %Uint32Array.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIError%\n              \n              </td>\n              <td>\n                <code>URIError</code>\n              \n              </td>\n              <td>\n                The <code>URIError</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-native-error-types-used-in-this-standard-urierror\"><a href=\"#sec-native-error-types-used-in-this-standard-urierror\" class=\"excluded-xref\" excluded-id=\"sec-native-error-types-used-in-this-standard-urierror\">#sec-native-error-types-used-in-this-standard-urierror</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                %URIErrorPrototype%\n              \n              </td>\n              <td>\n                <code>URIError.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of %URIError%; i.e., %URIError.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap</code>\n              \n              </td>\n              <td>\n                The <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakmap-prototype-object\"><a href=\"#sec-properties-of-the-weakmap-prototype-object\">%WeakMapPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakMap.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakmap-constructor\"><a href=\"#sec-weakmap-constructor\">%WeakMap%</a></emu-xref>; i.e., %WeakMap.prototype%\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet</code>\n              \n              </td>\n              <td>\n                The <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (<emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\" class=\"excluded-xref\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</a></emu-xref>)\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <emu-xref href=\"#sec-properties-of-the-weakset-prototype-object\"><a href=\"#sec-properties-of-the-weakset-prototype-object\">%WeakSetPrototype%</a></emu-xref>\n              \n              </td>\n              <td>\n                <code>WeakSet.prototype</code>\n              \n              </td>\n              <td>\n                The initial value of the <code>\"prototype\"</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> of <emu-xref href=\"#sec-weakset-constructor\"><a href=\"#sec-weakset-constructor\">%WeakSet%</a></emu-xref>; i.e., %WeakSet.prototype%\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-set.prototype-@@iterator": {"num": "23.2.3.11", "title": "#sec-set.prototype-@@iterator Set.prototype [ @@iterator ] ( )", "html": "<emu-clause id=\"sec-set.prototype-@@iterator\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype-@@iterator\">#sec-set.prototype-@@iterator</span> Set.prototype [ @@iterator ] ( )</h1>\n        <p>The initial value of the @@iterator property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>\"values\"</code> property.</p>\n      </emu-clause>\n\n      "}, "sec-generatorfunction-instances-name": {"num": "25.2.4.2", "title": "#sec-generatorfunction-instances-name name", "html": "<emu-clause id=\"sec-generatorfunction-instances-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances-name\">#sec-generatorfunction-instances-name</span> name</h1>\n        <p>The specification for the <code>\"name\"</code> property of Function instances given in  <emu-xref href=\"#sec-function-instances-name\"><a href=\"#sec-function-instances-name\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</a></emu-xref> also applies to GeneratorFunction instances.</p>\n      </emu-clause>\n\n      "}, "sec-asyncgeneratorfunction-prototype-tostringtag": {"num": "25.3.3.3", "title": "#sec-asyncgeneratorfunction-prototype-tostringtag AsyncGeneratorFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-prototype-tostringtag\">#sec-asyncgeneratorfunction-prototype-tostringtag</span> AsyncGeneratorFunction.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"AsyncGeneratorFunction\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-source-text-module-records": {"num": "15.2.1.17", "title": "#sec-source-text-module-records Source Text Module Records", "html": "<emu-clause id=\"sec-source-text-module-records\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-source-text-module-records\">#sec-source-text-module-records</span> Source Text Module Records</h1>\n\n        <p>A  <dfn id=\"sourctextmodule-record\">Source Text Module Record</dfn> is used to represent information about a module that was defined from ECMAScript source text (<emu-xref href=\"#sec-ecmascript-language-source-code\"><a href=\"#sec-ecmascript-language-source-code\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-source-code\">#sec-ecmascript-language-source-code</a></emu-xref>) that was parsed using the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref> <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt>. Its fields contain digested information about the names that are imported by the module and its concrete methods use this digest to link, link, and evaluate the module.</p>\n\n        <p>A <emu-xref href=\"#sourctextmodule-record\"><a href=\"#sourctextmodule-record\">Source Text Module Record</a></emu-xref> can exist in a module graph with other subclasses of the abstract <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref> type, and can participate in cycles with other subclasses of the <emu-xref href=\"#cyclic-module-record\"><a href=\"#cyclic-module-record\">Cyclic Module Record</a></emu-xref> type.</p>\n\n        <p>In addition to the fields defined in  <emu-xref href=\"#table-cyclic-module-fields\"><a href=\"#table-cyclic-module-fields\" class=\"excluded-xref\" excluded-id=\"table-cyclic-module-fields\">#table-cyclic-module-fields</a></emu-xref>, Source Text Module Records have the additional fields listed in  <emu-xref href=\"#table-38\"><a href=\"#table-38\" class=\"excluded-xref\" excluded-id=\"table-38\">#table-38</a></emu-xref>. Each of these fields is initially set in <emu-xref aoid=\"ParseModule\"><a href=\"#sec-parsemodule\">ParseModule</a></emu-xref>.</p>\n        <emu-table id=\"table-38\" caption=\"Additional Fields of Source Text Module Records\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-38\">#table-38</span>: Additional Fields of Source Text Module Records</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ECMAScriptCode]]\n              \n              </td>\n              <td>\n                a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>\n              \n              </td>\n              <td>\n                The result of parsing the source text of this module using <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> as the <emu-xref href=\"#sec-context-free-grammars\"><a href=\"#sec-context-free-grammars\">goal symbol</a></emu-xref>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[Context]]\n              \n              </td>\n              <td>\n                An ECMAScript <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref>.\n              \n              </td>\n              <td>\n                The <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> associated with this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ImportEntry records derived from the code of this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[IndirectExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from <code>export * as namespace</code> declarations.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[StarExportEntries]]\n              \n              </td>\n              <td>\n                <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry Records\n              \n              </td>\n              <td>\n                A <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ExportEntry records derived from the code of this module that correspond to <code>export *</code> declarations that occur within the module, not including <code>export * as namespace</code> declarations.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <p>An  <dfn id=\"importentry-record\">ImportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative import. Each <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-39\"><a href=\"#table-39\" class=\"excluded-xref\" excluded-id=\"table-39\">#table-39</a></emu-xref>:</p>\n        <emu-table id=\"table-39\" caption=\"ImportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-39\">#table-39</span>: <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value <emu-val>\"</emu-val>\"* indicates that the import request is for the target module's namespace object.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String\n              \n              </td>\n              <td>\n                The name that is used to locally access the imported value from within the importing module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-40\"><a href=\"#table-40\" class=\"excluded-xref\" excluded-id=\"table-40\">#table-40</a></emu-xref> gives examples of ImportEntry records fields used to represent the syntactic import forms:</p>\n          <emu-table id=\"table-40\" caption=\"Import Forms Mappings to ImportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-40\">#table-40</span> (Informative): Import Forms Mappings to ImportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Import Statement Form\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>import v from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import * as ns from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <code>\"ns\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import {x as v} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>import \"mod\";</code>\n                \n                </td>\n                <td colspan=\"3\">\n                  An <emu-xref href=\"#importentry-record\"><a href=\"#importentry-record\">ImportEntry Record</a></emu-xref> is not created.\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>An  <dfn id=\"exportentry-record\">ExportEntry Record</dfn> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">Record</a></emu-xref> that digests information about a single declarative export. Each <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> has the fields defined in  <emu-xref href=\"#table-41\"><a href=\"#table-41\" class=\"excluded-xref\" excluded-id=\"table-41\">#table-41</a></emu-xref>:</p>\n        <emu-table id=\"table-41\" caption=\"ExportEntry Record Fields\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-41\">#table-41</span>: <emu-xref href=\"#exportentry-record\"><a href=\"#exportentry-record\">ExportEntry Record</a></emu-xref> Fields</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Field Name\n              \n              </th>\n              <th>\n                Value Type\n              \n              </th>\n              <th>\n                Meaning\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                [[ExportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name used to export this binding by this module.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ModuleRequest]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The String value of the <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt> of the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt>. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[ImportName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. <emu-val>null</emu-val> if the <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt> does not have a <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt>. <code>\"*\"</code> indicates that the export request is for all exported bindings.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                [[LocalName]]\n              \n              </td>\n              <td>\n                String | null\n              \n              </td>\n              <td>\n                The name that is used to locally access the exported value from within the importing module. <emu-val>null</emu-val> if the exported value is not locally accessible from within the module.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p><emu-xref href=\"#table-42\"><a href=\"#table-42\" class=\"excluded-xref\" excluded-id=\"table-42\">#table-42</a></emu-xref> gives examples of the ExportEntry record fields used to represent the syntactic export forms:</p>\n          <emu-table id=\"table-42\" caption=\"Export Forms Mappings to ExportEntry Records\" informative=\"\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-42\">#table-42</span> (Informative): Export Forms Mappings to ExportEntry Records</figcaption>\n            <table>\n              <tbody>\n              <tr>\n                <th>\n                  Export Statement Form\n                \n                </th>\n                <th>\n                  [[ExportName]]\n                \n                </th>\n                <th>\n                  [[ModuleRequest]]\n                \n                </th>\n                <th>\n                  [[ImportName]]\n                \n                </th>\n                <th>\n                  [[LocalName]]\n                \n                </th>\n              </tr>\n              <tr>\n                <td>\n                  <code>export var v;</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function f() {}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"f\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default function () {}</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export default 42;</code>\n                \n                </td>\n                <td>\n                  <code>\"default\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"*default*\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x};</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export {v as x} from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"x\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"v\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <code>export * as ns from \"mod\";</code>\n                \n                </td>\n                <td>\n                  <code>\"ns\"</code>\n                \n                </td>\n                <td>\n                  <code>\"mod\"</code>\n                \n                </td>\n                <td>\n                  <code>\"*\"</code>\n                \n                </td>\n                <td>\n                  <emu-val>null</emu-val>\n                \n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </div></emu-note>\n        <p>The following definitions specify the required concrete methods and other <emu-xref href=\"#sec-algorithm-conventions-abstract-operations\"><a href=\"#sec-algorithm-conventions-abstract-operations\">abstract operations</a></emu-xref> for Source Text Module Records</p>\n\n        <div id=\"excluded-sec-parsemodule\"><h1><span class=\"secnum\">15.2.1.17.1</span>#sec-parsemodule ParseModule ( sourceText, realm, hostDefined )</h1>...</div><div id=\"excluded-sec-getexportednames\"><h1><span class=\"secnum\">15.2.1.17.2</span>#sec-getexportednames GetExportedNames ( [ exportStarSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-resolveexport\"><h1><span class=\"secnum\">15.2.1.17.3</span>#sec-resolveexport ResolveExport ( exportName [ , resolveSet ] ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-initialize-environment\"><h1><span class=\"secnum\">15.2.1.17.4</span>#sec-source-text-module-record-initialize-environment InitializeEnvironment ( ) Concrete Method</h1>...</div><div id=\"excluded-sec-source-text-module-record-execute-module\"><h1><span class=\"secnum\">15.2.1.17.5</span>#sec-source-text-module-record-execute-module ExecuteModule ( ) Concrete Method</h1>...</div></emu-clause>\n\n      "}, "sec-properties-of-the-function-prototype-object": {"num": "19.2.3", "title": "#sec-properties-of-the-function-prototype-object Properties of the Function Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-function-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</span> Properties of the Function Prototype Object</h1>\n      <p>The Function prototype object:</p>\n      <ul>\n        <li>is  <dfn>%Function.prototype%</dfn>.</li>\n        <li>is itself a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n        <li>accepts any arguments and returns <emu-val>undefined</emu-val> when invoked.</li>\n        <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>does not have a <code>\"prototype\"</code> property.</li>\n        <li>has a <code>\"length\"</code> property whose value is 0.</li>\n        <li>has a <code>\"name\"</code> property whose value is the empty String.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The Function prototype object is specified to be a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-function.prototype.apply\"><h1><span class=\"secnum\">19.2.3.1</span>#sec-function.prototype.apply Function.prototype.apply ( thisArg, argArray )</h1>...</div><div id=\"excluded-sec-function.prototype.bind\"><h1><span class=\"secnum\">19.2.3.2</span>#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.call\"><h1><span class=\"secnum\">19.2.3.3</span>#sec-function.prototype.call Function.prototype.call ( thisArg, ...args )</h1>...</div><div id=\"excluded-sec-function.prototype.constructor\"><h1><span class=\"secnum\">19.2.3.4</span>#sec-function.prototype.constructor Function.prototype.constructor</h1>...</div><div id=\"excluded-sec-function.prototype.tostring\"><h1><span class=\"secnum\">19.2.3.5</span>#sec-function.prototype.tostring Function.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-function.prototype-@@hasinstance\"><h1><span class=\"secnum\">19.2.3.6</span>#sec-function.prototype-@@hasinstance Function.prototype [ @@hasInstance ] ( V )</h1>...</div></emu-clause>\n\n    "}, "sec-number.negative_infinity": {"num": "20.1.2.11", "title": "#sec-number.negative_infinity Number.NEGATIVE_INFINITY", "html": "<emu-clause id=\"sec-number.negative_infinity\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.negative_infinity\">#sec-number.negative_infinity</span> Number.NEGATIVE_INFINITY</h1>\n        <p>The value of <code>Number.NEGATIVE_INFINITY</code> is <emu-val>-&#8734;</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-regexpexec": {"num": "21.2.5.2.1", "title": "#sec-regexpexec Runtime Semantics: RegExpExec ( R, S )", "html": "<emu-clause id=\"sec-regexpexec\" aoid=\"RegExpExec\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexpexec\">#sec-regexpexec</span> Runtime Semantics: RegExpExec ( <var>R</var>, <var>S</var> )</h1>\n          <p>The abstract operation RegExpExec with arguments <var>R</var> and <var>S</var> performs the following steps:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>R</var>) is Object.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>S</var>) is String.</li><li>Let <var>exec</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>R</var>, <code>\"exec\"</code>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>exec</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>exec</var>, <var>R</var>, &#171; <var>S</var> &#187;).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>result</var>) is neither Object nor Null, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>result</var>.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"RequireInternalSlot\"><a href=\"#sec-requireinternalslot\">RequireInternalSlot</a></emu-xref>(<var>R</var>, [[RegExpMatcher]]).</li><li>Return ?&#160;<emu-xref aoid=\"RegExpBuiltinExec\"><a href=\"#sec-regexpbuiltinexec\">RegExpBuiltinExec</a></emu-xref>(<var>R</var>, <var>S</var>).\n          </li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>If a callable <code>\"exec\"</code> property is not found this algorithm falls back to attempting to use the built-in RegExp matching algorithm. This provides compatible behaviour for code written for prior editions where most built-in algorithms that use regular expressions did not perform a dynamic property lookup of <code>\"exec\"</code>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-atomics-@@tostringtag": {"num": "24.4.14", "title": "#sec-atomics-@@tostringtag Atomics [ @@toStringTag ]", "html": "<emu-clause id=\"sec-atomics-@@tostringtag\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-atomics-@@tostringtag\">#sec-atomics-@@tostringtag</span> Atomics [ @@toStringTag ]</h1>\n      <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Atomics\"</emu-val>.</p>\n      <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n    </emu-clause>\n  "}, "sec-number.parsefloat": {"num": "20.1.2.12", "title": "#sec-number.parsefloat Number.parseFloat ( string )", "html": "<emu-clause id=\"sec-number.parsefloat\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.parsefloat\">#sec-number.parsefloat</span> Number.parseFloat ( <var>string</var> )</h1>\n        <p>The value of the <code>Number.parseFloat</code> <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> is the same built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the value of the <code>\"parseFloat\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> defined in  <emu-xref href=\"#sec-parsefloat-string\"><a href=\"#sec-parsefloat-string\" class=\"excluded-xref\" excluded-id=\"sec-parsefloat-string\">#sec-parsefloat-string</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-%iteratorprototype%-object": {"num": "25.1.2", "title": "#sec-%iteratorprototype%-object The %IteratorPrototype% Object", "html": "<emu-clause id=\"sec-%iteratorprototype%-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%iteratorprototype%-object\">#sec-%iteratorprototype%-object</span> The %IteratorPrototype% Object</h1>\n      <p>The  <dfn>%IteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an ordinary object.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the Iterator interface also inherit from %IteratorPrototype%. ECMAScript code may also define objects that inherit from %IteratorPrototype%. The %IteratorPrototype% object provides a place where additional methods that are applicable to all iterator objects may be added.</p>\n        <p>The following expression is one way that ECMAScript code can access the %IteratorPrototype% object:</p>\n        <pre><code class=\"javascript hljs\"><span class=\"hljs-built_in\">Object</span>.getPrototypeOf(<span class=\"hljs-built_in\">Object</span>.getPrototypeOf([][<span class=\"hljs-built_in\">Symbol</span>.iterator]()))</code></pre>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-%iteratorprototype%-@@iterator\"><h1><span class=\"secnum\">25.1.2.1</span>#sec-%iteratorprototype%-@@iterator %IteratorPrototype% [ @@iterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-terms-and-definitions-prototype": {"num": "4.3.5", "title": "#sec-terms-and-definitions-prototype prototype", "html": "<emu-clause id=\"sec-terms-and-definitions-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-terms-and-definitions-prototype\">#sec-terms-and-definitions-prototype</span> prototype</h1>\n      <p>object that provides shared properties for other objects</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>When a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> creates an object, that object implicitly references the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property for the purpose of resolving property references. The <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>'s <code>\"prototype\"</code> property can be referenced by the program expression  <code><var>constructor</var>.prototype</code>, and properties added to an object's prototype are shared, through inheritance, by all objects sharing the prototype. Alternatively, a new object may be created with an explicitly specified prototype by using the <code>Object.create</code> built-in function.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-iteratorresult-interface": {"num": "25.1.1.5", "title": "#sec-iteratorresult-interface The  IteratorResult Interface", "html": "<emu-clause id=\"sec-iteratorresult-interface\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-iteratorresult-interface\">#sec-iteratorresult-interface</span> The  <i>IteratorResult</i> Interface</h1>\n        <p>The  <i>IteratorResult</i> interface includes the properties listed in  <emu-xref href=\"#table-55\"><a href=\"#table-55\" class=\"excluded-xref\" excluded-id=\"table-55\">#table-55</a></emu-xref>:</p>\n        <emu-table id=\"table-55\" caption=\"&lt;i&gt;IteratorResult&lt;/i&gt; Interface Properties\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-55\">#table-55</span>:  <i>IteratorResult</i> Interface Properties</figcaption>\n          <table>\n            <tbody>\n            <tr>\n              <th>\n                Property\n              \n              </th>\n              <th>\n                Value\n              \n              </th>\n              <th>\n                Requirements\n              \n              </th>\n            </tr>\n            <tr>\n              <td>\n                <code>\"done\"</code>\n              \n              </td>\n              <td>\n                Either <emu-val>true</emu-val> or <emu-val>false</emu-val>.\n              \n              </td>\n              <td>\n                This is the result status of an  <em>iterator</em> <code>next</code> method call. If the end of the iterator was reached <code>\"done\"</code> is <emu-val>true</emu-val>. If the end was not reached <code>\"done\"</code> is <emu-val>false</emu-val> and a value is available. If a <code>\"done\"</code> property (either own or inherited) does not exist, it is consider to have the value <emu-val>false</emu-val>.\n              \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <code>\"value\"</code>\n              \n              </td>\n              <td>\n                Any <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>.\n              \n              </td>\n              <td>\n                If done is <emu-val>false</emu-val>, this is the current iteration element value. If done is <emu-val>true</emu-val>, this is the return value of the iterator, if it supplied one. If the iterator does not have a return value, <code>\"value\"</code> is <emu-val>undefined</emu-val>. In that case, the <code>\"value\"</code> property may be absent from the conforming object if it does not inherit an explicit <code>\"value\"</code> property.\n              \n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </figure></emu-table>\n      </emu-clause>\n    "}, "sec-%arrayiteratorprototype%-@@tostringtag": {"num": "22.1.5.2.2", "title": "#sec-%arrayiteratorprototype%-@@tostringtag %ArrayIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%arrayiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%arrayiteratorprototype%-@@tostringtag\">#sec-%arrayiteratorprototype%-@@tostringtag</span> %ArrayIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Array Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-nativeerror.prototype.name": {"num": "19.5.6.3.3", "title": "#sec-nativeerror.prototype.name NativeError.prototype.name", "html": "<emu-clause id=\"sec-nativeerror.prototype.name\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror.prototype.name\">#sec-nativeerror.prototype.name</span> <var>NativeError</var>.prototype.name</h1>\n          <p>The initial value of the <code>\"name\"</code> property of the prototype for a given <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the String value consisting of the name of the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> (the name used instead of <var>NativeError</var>).</p>\n        </emu-clause>\n      "}, "sec-dataview-constructor": {"num": "24.3.2", "title": "#sec-dataview-constructor The DataView Constructor", "html": "<emu-clause id=\"sec-dataview-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-dataview-constructor\">#sec-dataview-constructor</span> The DataView Constructor</h1>\n      <p>The DataView <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%DataView%</dfn>.</li>\n        <li>is the initial value of the <code>\"DataView\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new DataView object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>DataView</code> behaviour must include a <code>super</code> call to the <code>DataView</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the internal state necessary to support the <code>DataView.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-dataview-buffer-byteoffset-bytelength\"><h1><span class=\"secnum\">24.3.2.1</span>#sec-dataview-buffer-byteoffset-bytelength DataView ( buffer [ , byteOffset [ , byteLength ] ] )</h1>...</div></emu-clause>\n\n    "}, "sec-set.prototype.keys": {"num": "23.2.3.8", "title": "#sec-set.prototype.keys Set.prototype.keys ( )", "html": "<emu-clause id=\"sec-set.prototype.keys\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set.prototype.keys\">#sec-set.prototype.keys</span> Set.prototype.keys ( )</h1>\n        <p>The initial value of the <code>\"keys\"</code> property is the same <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> as the initial value of the <code>\"values\"</code> property.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>For iteration purposes, a Set appears similar to a Map where each entry has the same value for its key and value.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-number.positive_infinity": {"num": "20.1.2.14", "title": "#sec-number.positive_infinity Number.POSITIVE_INFINITY", "html": "<emu-clause id=\"sec-number.positive_infinity\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-number.positive_infinity\">#sec-number.positive_infinity</span> Number.POSITIVE_INFINITY</h1>\n        <p>The value of <code>Number.POSITIVE_INFINITY</code> is <emu-val>+&#8734;</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-%typedarray%-intrinsic-object": {"num": "22.2.2", "title": "#sec-properties-of-the-%typedarray%-intrinsic-object Properties of the %TypedArray% Intrinsic Object", "html": "<emu-clause id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-%typedarray%-intrinsic-object\">#sec-properties-of-the-%typedarray%-intrinsic-object</span> Properties of the %TypedArray% Intrinsic Object</h1>\n      <p>The <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref> intrinsic object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n        <li>has a <code>\"name\"</code> property whose value is <emu-val>\"TypedArray\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-%typedarray%.from\"><h1><span class=\"secnum\">22.2.2.1</span>#sec-%typedarray%.from %TypedArray%.from ( source [ , mapfn [ , thisArg ] ] )</h1>...</div><div id=\"excluded-sec-%typedarray%.of\"><h1><span class=\"secnum\">22.2.2.2</span>#sec-%typedarray%.of %TypedArray%.of ( ...items )</h1>...</div><div id=\"excluded-sec-%typedarray%.prototype\"><h1><span class=\"secnum\">22.2.2.3</span>#sec-%typedarray%.prototype %TypedArray%.prototype</h1>...</div><div id=\"excluded-sec-get-%typedarray%-@@species\"><h1><span class=\"secnum\">22.2.2.4</span>#sec-get-%typedarray%-@@species get %TypedArray% [ @@species ]</h1>...</div></emu-clause>\n\n    "}, "sec-math.cosh": {"num": "20.3.2.13", "title": "#sec-math.cosh Math.cosh ( x )", "html": "<emu-clause id=\"sec-math.cosh\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math.cosh\">#sec-math.cosh</span> Math.cosh ( <var>x</var> )</h1>\n        <p>Returns an implementation-dependent approximation to the hyperbolic cosine of <var>x</var>.</p>\n        <ul>\n          <li>\n            If <var>x</var> is <emu-val>NaN</emu-val>, the result is <emu-val>NaN</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+0</emu-val>, the result is 1.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-0</emu-val>, the result is 1.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>+&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          \n          </li>\n          <li>\n            If <var>x</var> is <emu-val>-&#8734;</emu-val>, the result is <emu-val>+&#8734;</emu-val>.\n          \n          </li>\n        </ul>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>The value of <code>Math.cosh(x)</code> is the same as the value of <code>(Math.exp(x) + Math.exp(-x)) / 2</code>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-%setiteratorprototype%-@@tostringtag": {"num": "23.2.5.2.2", "title": "#sec-%setiteratorprototype%-@@tostringtag %SetIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%setiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%setiteratorprototype%-@@tostringtag\">#sec-%setiteratorprototype%-@@tostringtag</span> %SetIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Set Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-instanceofoperator": {"num": "12.10.4", "title": "#sec-instanceofoperator Runtime Semantics: InstanceofOperator ( V, target )", "html": "<emu-clause id=\"sec-instanceofoperator\" aoid=\"InstanceofOperator\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-instanceofoperator\">#sec-instanceofoperator</span> Runtime Semantics: InstanceofOperator ( <var>V</var>, <var>target</var> )</h1>\n      <p>The abstract operation InstanceofOperator(<var>V</var>, <var>target</var>) implements the generic algorithm for determining if  ECMAScript value <var>V</var> is an instance of object <var>target</var> either by consulting <var>target</var>'s @@hasinstance method or, if absent, determining whether the value of <var>target</var>'s <code>\"prototype\"</code> property is present in <var>V</var>'s prototype chain. This abstract operation performs the following steps:</p>\n      <emu-alg><ol><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>target</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>instOfHandler</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>target</var>, @@hasInstance).</li><li>If <var>instOfHandler</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>instOfHandler</var>, <var>target</var>, &#171; <var>V</var> &#187;)).</li></ol></li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryHasInstance\"><a href=\"#sec-ordinaryhasinstance\">OrdinaryHasInstance</a></emu-xref>(<var>target</var>, <var>V</var>).\n      </li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Steps 4 and 5 provide compatibility with previous editions of ECMAScript that did not use a @@hasInstance method to define the <code>instanceof</code> operator semantics. If an object does not define or inherit @@hasInstance it uses the default <code>instanceof</code> semantics.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-weakset-constructor": {"num": "23.4.1", "title": "#sec-weakset-constructor The WeakSet Constructor", "html": "<emu-clause id=\"sec-weakset-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakset-constructor\">#sec-weakset-constructor</span> The WeakSet Constructor</h1>\n      <p>The WeakSet <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakSet%</dfn>.</li>\n        <li>is the initial value of the <code>\"WeakSet\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakSet object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakSet</code> behaviour must include a <code>super</code> call to the <code>WeakSet</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakSet.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakset-iterable\"><h1><span class=\"secnum\">23.4.1.1</span>#sec-weakset-iterable WeakSet ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-properties-of-asyncgenerator-prototype": {"num": "25.5.1", "title": "#sec-properties-of-asyncgenerator-prototype Properties of the AsyncGenerator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-asyncgenerator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-asyncgenerator-prototype\">#sec-properties-of-asyncgenerator-prototype</span> Properties of the AsyncGenerator Prototype Object</h1>\n      <p>The AsyncGenerator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%AsyncGeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-asyncgeneratorfunction-prototype\"><a href=\"#sec-asyncgeneratorfunction-prototype\">%AsyncGenerator%</a></emu-xref> (the <code>AsyncGeneratorFunction.prototype</code>).</li>\n        <li>is an ordinary object.</li>\n        <li>is not an AsyncGenerator instance and does not have an [[AsyncGeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-asynciteratorprototype\"><a href=\"#sec-asynciteratorprototype\">%AsyncIteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all AsyncGenerator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-asyncgenerator-prototype-constructor\"><h1><span class=\"secnum\">25.5.1.1</span>#sec-asyncgenerator-prototype-constructor AsyncGenerator.prototype.constructor</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-next\"><h1><span class=\"secnum\">25.5.1.2</span>#sec-asyncgenerator-prototype-next AsyncGenerator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-return\"><h1><span class=\"secnum\">25.5.1.3</span>#sec-asyncgenerator-prototype-return AsyncGenerator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-throw\"><h1><span class=\"secnum\">25.5.1.4</span>#sec-asyncgenerator-prototype-throw AsyncGenerator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-asyncgenerator-prototype-tostringtag\"><h1><span class=\"secnum\">25.5.1.5</span>#sec-asyncgenerator-prototype-tostringtag AsyncGenerator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-symbol-constructor": {"num": "19.4.1", "title": "#sec-symbol-constructor The Symbol Constructor", "html": "<emu-clause id=\"sec-symbol-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol-constructor\">#sec-symbol-constructor</span> The Symbol Constructor</h1>\n      <p>The Symbol <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Symbol%</dfn>.</li>\n        <li>is the initial value of the <code>\"Symbol\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>returns a new Symbol value when called as a function.</li>\n        <li>is not intended to be used with the <code>new</code> operator.</li>\n        <li>is not intended to be subclassed.</li>\n        <li>may be used as the value of an <code>extends</code> clause of a class definition but a <code>super</code> call to it will cause an exception.</li>\n      </ul>\n\n      <div id=\"excluded-sec-symbol-description\"><h1><span class=\"secnum\">19.4.1.1</span>#sec-symbol-description Symbol ( [ description ] )</h1>...</div></emu-clause>\n\n    "}, "sec-function-instances-prototype": {"num": "19.2.4.3", "title": "#sec-function-instances-prototype prototype", "html": "<emu-clause id=\"sec-function-instances-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-instances-prototype\">#sec-function-instances-prototype</span> prototype</h1>\n        <p>Function instances that can be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> have a <code>\"prototype\"</code> property. Whenever such a Function instance is created another ordinary object is also created and is the initial value of the function's <code>\"prototype\"</code> property. Unless otherwise specified, the value of the <code>\"prototype\"</code> property is used to initialize the [[Prototype]] internal slot of the object created when that function is invoked as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Function objects created using <code>Function.prototype.bind</code>, or by evaluating a <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> (that is not a <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> or <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt>) or an <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> do not have a <code>\"prototype\"</code> property.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-%mapiteratorprototype%-@@tostringtag": {"num": "23.1.5.2.2", "title": "#sec-%mapiteratorprototype%-@@tostringtag %MapIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%mapiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%mapiteratorprototype%-@@tostringtag\">#sec-%mapiteratorprototype%-@@tostringtag</span> %MapIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Map Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-arraybuffer.prototype-@@tostringtag": {"num": "24.1.4.4", "title": "#sec-arraybuffer.prototype-@@tostringtag ArrayBuffer.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-arraybuffer.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arraybuffer.prototype-@@tostringtag\">#sec-arraybuffer.prototype-@@tostringtag</span> ArrayBuffer.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"ArrayBuffer\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-generator-prototype": {"num": "25.4.1", "title": "#sec-properties-of-generator-prototype Properties of the Generator Prototype Object", "html": "<emu-clause id=\"sec-properties-of-generator-prototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-generator-prototype\">#sec-properties-of-generator-prototype</span> Properties of the Generator Prototype Object</h1>\n      <p>The Generator prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%GeneratorPrototype%</dfn>.</li>\n        <li>is the initial value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-properties-of-the-generatorfunction-prototype-object\"><a href=\"#sec-properties-of-the-generatorfunction-prototype-object\">%Generator%</a></emu-xref> (the <code>GeneratorFunction.prototype</code>).</li>\n        <li>is an ordinary object.</li>\n        <li>is not a Generator instance and does not have a [[GeneratorState]] internal slot.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-%iteratorprototype%-object\"><a href=\"#sec-%iteratorprototype%-object\">%IteratorPrototype%</a></emu-xref>.</li>\n        <li>has properties that are indirectly inherited by all Generator instances.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generator.prototype.constructor\"><h1><span class=\"secnum\">25.4.1.1</span>#sec-generator.prototype.constructor Generator.prototype.constructor</h1>...</div><div id=\"excluded-sec-generator.prototype.next\"><h1><span class=\"secnum\">25.4.1.2</span>#sec-generator.prototype.next Generator.prototype.next ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.return\"><h1><span class=\"secnum\">25.4.1.3</span>#sec-generator.prototype.return Generator.prototype.return ( value )</h1>...</div><div id=\"excluded-sec-generator.prototype.throw\"><h1><span class=\"secnum\">25.4.1.4</span>#sec-generator.prototype.throw Generator.prototype.throw ( exception )</h1>...</div><div id=\"excluded-sec-generator.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.4.1.5</span>#sec-generator.prototype-@@tostringtag Generator.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-string-constructor": {"num": "21.1.1", "title": "#sec-string-constructor The String Constructor", "html": "<emu-clause id=\"sec-string-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string-constructor\">#sec-string-constructor</span> The String Constructor</h1>\n      <p>The String <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%String%</dfn>.</li>\n        <li>is the initial value of the <code>\"String\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new String object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>performs a type conversion when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>String</code> behaviour must include a <code>super</code> call to the <code>String</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with a [[StringData]] internal slot.</li>\n      </ul>\n\n      <div id=\"excluded-sec-string-constructor-string-value\"><h1><span class=\"secnum\">21.1.1.1</span>#sec-string-constructor-string-value String ( value )</h1>...</div></emu-clause>\n\n    "}, "sec-arrayspeciescreate": {"num": "9.4.2.3", "title": "#sec-arrayspeciescreate ArraySpeciesCreate ( originalArray, length )", "html": "<emu-clause id=\"sec-arrayspeciescreate\" aoid=\"ArraySpeciesCreate\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrayspeciescreate\">#sec-arrayspeciescreate</span> ArraySpeciesCreate ( <var>originalArray</var>, <var>length</var> )</h1>\n        <p>The abstract operation ArraySpeciesCreate with arguments <var>originalArray</var> and <var>length</var> is used to specify the creation of a new Array object using a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is derived from <var>originalArray</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>length</var> is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> Number &#8805; 0.</li><li>If <var>length</var> is <emu-val>-0</emu-val>, set <var>length</var> to <emu-val>+0</emu-val>.</li><li>Let <var>isArray</var> be ?&#160;<emu-xref aoid=\"IsArray\"><a href=\"#sec-isarray\">IsArray</a></emu-xref>(<var>originalArray</var>).</li><li>If <var>isArray</var> is <emu-val>false</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>Let <var>C</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>originalArray</var>, <code>\"constructor\"</code>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>true</emu-val>, then<ol><li>Let <var>thisRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>realmC</var> be ?&#160;<emu-xref aoid=\"GetFunctionRealm\"><a href=\"#sec-getfunctionrealm\">GetFunctionRealm</a></emu-xref>(<var>C</var>).</li><li>If <var>thisRealm</var> and <var>realmC</var> are not the same <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref>, then<ol><li>If <emu-xref aoid=\"SameValue\"><a href=\"#sec-samevalue\">SameValue</a></emu-xref>(<var>C</var>, <var>realmC</var>.[[Intrinsics]].[[<emu-xref href=\"#sec-array-constructor\"><a href=\"#sec-array-constructor\">%Array%</a></emu-xref>]]) is <emu-val>true</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li></ol></li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>C</var>) is Object, then<ol><li>Set <var>C</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>C</var>, @@species).</li><li>If <var>C</var> is <emu-val>null</emu-val>, set <var>C</var> to <emu-val>undefined</emu-val>.</li></ol></li><li>If <var>C</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"ArrayCreate\"><a href=\"#sec-arraycreate\">ArrayCreate</a></emu-xref>(<var>length</var>).</li><li>If <emu-xref aoid=\"IsConstructor\"><a href=\"#sec-isconstructor\">IsConstructor</a></emu-xref>(<var>C</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Construct\"><a href=\"#sec-construct\">Construct</a></emu-xref>(<var>C</var>, &#171; <var>length</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>If <var>originalArray</var> was created using the standard built-in Array <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> for a <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> that is not the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>, then a new Array is created using the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> of the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>. This maintains compatibility with Web browsers that have historically had that behaviour for the <code>Array.prototype</code> methods that now are defined using ArraySpeciesCreate.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-function.prototype.bind": {"num": "19.2.3.2", "title": "#sec-function.prototype.bind Function.prototype.bind ( thisArg, ...args )", "html": "<emu-clause id=\"sec-function.prototype.bind\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</span> Function.prototype.bind ( <var>thisArg</var>, ...<var>args</var> )</h1>\n        <p>When the <code>bind</code> method is called with argument <var>thisArg</var> and zero or more <var>args</var>, it performs the following steps:</p>\n        <emu-alg><ol><li>Let <var>Target</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>Target</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>args</var> be a new (possibly empty) <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> consisting of all of the argument values provided after <var>thisArg</var> in order.</li><li>Let <var>F</var> be ?&#160;<emu-xref aoid=\"BoundFunctionCreate\"><a href=\"#sec-boundfunctioncreate\">BoundFunctionCreate</a></emu-xref>(<var>Target</var>, <var>thisArg</var>, <var>args</var>).</li><li>Let <var>targetHasLength</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>Target</var>, <code>\"length\"</code>).</li><li>If <var>targetHasLength</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>targetLen</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <code>\"length\"</code>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetLen</var>) is not Number, let <var>L</var> be 0.</li><li>Else,<ol><li>Set <var>targetLen</var> to !&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(<var>targetLen</var>).</li><li>Let <var>L</var> be the larger of 0 and the result of <var>targetLen</var> minus the number of elements of <var>args</var>.</li></ol></li></ol></li><li>Else, let <var>L</var> be 0.</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionLength\"><a href=\"#sec-setfunctionlength\">SetFunctionLength</a></emu-xref>(<var>F</var>, <var>L</var>).</li><li>Let <var>targetName</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>Target</var>, <code>\"name\"</code>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>targetName</var>) is not String, set <var>targetName</var> to the empty string.</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <var>targetName</var>, <code>\"bound\"</code>).</li><li>Return <var>F</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>Function objects created using <code>Function.prototype.bind</code> are exotic objects. They also do not have a <code>\"prototype\"</code> property.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>If <var>Target</var> is an arrow function or a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref> then the <var>thisArg</var> passed to this method will not be used by subsequent calls to <var>F</var>.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-constructor": {"num": "25.2.2", "title": "#sec-properties-of-the-generatorfunction-constructor Properties of the GeneratorFunction Constructor", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-constructor\">#sec-properties-of-the-generatorfunction-constructor</span> Properties of the GeneratorFunction Constructor</h1>\n      <p>The GeneratorFunction <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is a standard built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that inherits from the <code>Function</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-function-constructor\"><a href=\"#sec-function-constructor\">%Function%</a></emu-xref>.</li>\n        <li>has a <code>\"name\"</code> property whose value is <emu-val>\"GeneratorFunction\"</emu-val>.</li>\n        <li>has the following properties:</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.length\"><h1><span class=\"secnum\">25.2.2.1</span>#sec-generatorfunction.length GeneratorFunction.length</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype\"><h1><span class=\"secnum\">25.2.2.2</span>#sec-generatorfunction.prototype GeneratorFunction.prototype</h1>...</div></emu-clause>\n\n    "}, "sec-asyncgeneratorfunction-instance-prototype": {"num": "25.3.4.3", "title": "#sec-asyncgeneratorfunction-instance-prototype prototype", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instance-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instance-prototype\">#sec-asyncgeneratorfunction-instance-prototype</span> prototype</h1>\n        <p>Whenever an AsyncGeneratorFunction instance is created another ordinary object is also created and is the initial value of the async generator function's <code>\"prototype\"</code> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created AsyncGenerator object when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike function instances, the object that is the value of the an AsyncGeneratorFunction's <code>\"prototype\"</code> property does not have a <code>\"constructor\"</code> property whose value is the AsyncGeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-function-instances-name": {"num": "19.2.4.2", "title": "#sec-function-instances-name name", "html": "<emu-clause id=\"sec-function-instances-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</span> name</h1>\n        <p>The value of the <code>\"name\"</code> property is a String that is descriptive of the function. The name has no semantic significance but is typically a variable or <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> that is used to refer to the function at its point of definition in ECMAScript code. This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        <p>Anonymous functions objects that do not have a contextual name associated with them by this specification do not have a <code>\"name\"</code> own property but inherit the <code>\"name\"</code> property of <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</p>\n      </emu-clause>\n\n      "}, "sec-nativeerror.prototype.message": {"num": "19.5.6.3.2", "title": "#sec-nativeerror.prototype.message NativeError.prototype.message", "html": "<emu-clause id=\"sec-nativeerror.prototype.message\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-nativeerror.prototype.message\">#sec-nativeerror.prototype.message</span> <var>NativeError</var>.prototype.message</h1>\n          <p>The initial value of the <code>\"message\"</code> property of the prototype for a given <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the empty String.</p>\n        </emu-clause>\n\n        "}, "sec-strict-mode-of-ecmascript": {"num": "C", "title": "#sec-strict-mode-of-ecmascript The Strict Mode of EMAScript", "html": "<emu-annex id=\"sec-strict-mode-of-ecmascript\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-strict-mode-of-ecmascript\">#sec-strict-mode-of-ecmascript</span> The Strict Mode of ECMAScript</h1>\n  <p><b>The strict mode restriction and exceptions</b></p>\n  <ul>\n    <li>\n      <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code> are reserved words within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>. (<emu-xref href=\"#sec-reserved-words\"><a href=\"#sec-reserved-words\" class=\"excluded-xref\" excluded-id=\"sec-reserved-words\">#sec-reserved-words</a></emu-xref>).\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, must not extend, as described in  <emu-xref href=\"#sec-additional-syntax-numeric-literals\"><a href=\"#sec-additional-syntax-numeric-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-numeric-literals\">#sec-additional-syntax-numeric-literals</a></emu-xref>, the syntax of <emu-nt><a href=\"#prod-NumericLiteral\">NumericLiteral</a></emu-nt> to include <emu-nt>LegacyOctalIntegerLiteral</emu-nt>, nor extend the syntax of <emu-nt><a href=\"#prod-DecimalIntegerLiteral\">DecimalIntegerLiteral</a></emu-nt> to include <emu-nt>NonOctalDecimalIntegerLiteral</emu-nt>.\n    \n    </li>\n    <li>\n      A conforming implementation, when processing <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, may not extend the syntax of <emu-nt><a href=\"#prod-EscapeSequence\">EscapeSequence</a></emu-nt> to include <emu-nt>LegacyOctalEscapeSequence</emu-nt> as described in  <emu-xref href=\"#sec-additional-syntax-string-literals\"><a href=\"#sec-additional-syntax-string-literals\" class=\"excluded-xref\" excluded-id=\"sec-additional-syntax-string-literals\">#sec-additional-syntax-string-literals</a></emu-xref>.\n    \n    </li>\n    <li>\n      Assignment to an undeclared identifier or otherwise unresolvable reference does not create a property in the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. When a simple assignment occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, its <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> must not evaluate to an unresolvable <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref>. If it does a <emu-val>ReferenceError</emu-val> exception is thrown (<emu-xref href=\"#sec-putvalue\"><a href=\"#sec-putvalue\" class=\"excluded-xref\" excluded-id=\"sec-putvalue\">#sec-putvalue</a></emu-xref>). The <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> also may not be a reference to a <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> with the attribute value { [[Writable]]: <emu-val>false</emu-val> }, to an <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> with the attribute value { [[Set]]: <emu-val>undefined</emu-val> }, nor to a non-existent property of an object whose [[Extensible]] internal slot has the value <emu-val>false</emu-val>. In these cases a <code>TypeError</code> exception is thrown (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>).\n    \n    </li>\n    <li>\n      An <emu-nt><a href=\"#prod-IdentifierReference\">IdentifierReference</a></emu-nt> with the StringValue <code>\"eval\"</code> or <code>\"arguments\"</code> may not appear as the <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt> of an Assignment operator (<emu-xref href=\"#sec-assignment-operators\"><a href=\"#sec-assignment-operators\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators\">#sec-assignment-operators</a></emu-xref>) or of an <emu-nt><a href=\"#prod-UpdateExpression\">UpdateExpression</a></emu-nt> (<emu-xref href=\"#sec-update-expressions\"><a href=\"#sec-update-expressions\" class=\"excluded-xref\" excluded-id=\"sec-update-expressions\">#sec-update-expressions</a></emu-xref>) or as the <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> operated upon by a Prefix Increment (<emu-xref href=\"#sec-prefix-increment-operator\"><a href=\"#sec-prefix-increment-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-increment-operator\">#sec-prefix-increment-operator</a></emu-xref>) or a Prefix Decrement (<emu-xref href=\"#sec-prefix-decrement-operator\"><a href=\"#sec-prefix-decrement-operator\" class=\"excluded-xref\" excluded-id=\"sec-prefix-decrement-operator\">#sec-prefix-decrement-operator</a></emu-xref>) operator.\n    \n    </li>\n    <li>\n      Arguments objects for strict functions define a non-configurable <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> <code>\"callee\"</code> which throws a <emu-val>TypeError</emu-val> exception on access (<emu-xref href=\"#sec-createunmappedargumentsobject\"><a href=\"#sec-createunmappedargumentsobject\" class=\"excluded-xref\" excluded-id=\"sec-createunmappedargumentsobject\">#sec-createunmappedargumentsobject</a></emu-xref>).\n    \n    </li>\n    <li>\n      Arguments objects for strict functions do not dynamically share their  <emu-xref href=\"#array-index\"><a href=\"#array-index\">array-indexed</a></emu-xref> property values with the corresponding formal parameter bindings of their functions. (<emu-xref href=\"#sec-arguments-exotic-objects\"><a href=\"#sec-arguments-exotic-objects\" class=\"excluded-xref\" excluded-id=\"sec-arguments-exotic-objects\">#sec-arguments-exotic-objects</a></emu-xref>).\n    \n    </li>\n    <li>\n      For strict functions, if an arguments object is created the binding of the local identifier <code>arguments</code> to the arguments object is immutable and hence may not be the target of an assignment expression. (<emu-xref href=\"#sec-functiondeclarationinstantiation\"><a href=\"#sec-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the StringValue of a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <code>\"eval\"</code> or <code>\"arguments\"</code> within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> (<emu-xref href=\"#sec-identifiers-static-semantics-early-errors\"><a href=\"#sec-identifiers-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-identifiers-static-semantics-early-errors\">#sec-identifiers-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      Strict mode eval code cannot instantiate variables or functions in the variable environment of the caller to eval. Instead, a new variable environment is created and that environment is used for declaration binding instantiation for the eval code (<emu-xref href=\"#sec-eval-x\"><a href=\"#sec-eval-x\" class=\"excluded-xref\" excluded-id=\"sec-eval-x\">#sec-eval-x</a></emu-xref>).\n    \n    </li>\n    <li>\n      If <emu-val>this</emu-val> is evaluated within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, then the <emu-val>this</emu-val> value is not coerced to an object. A <emu-val>this</emu-val> value of <emu-val>undefined</emu-val> or <emu-val>null</emu-val> is not converted to the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> and primitive values are not converted to wrapper objects. The <emu-val>this</emu-val> value passed via a function call (including calls made using <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>) do not coerce the passed <emu-val>this</emu-val> value to an object (<emu-xref href=\"#sec-ordinarycallbindthis\"><a href=\"#sec-ordinarycallbindthis\" class=\"excluded-xref\" excluded-id=\"sec-ordinarycallbindthis\">#sec-ordinarycallbindthis</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.apply\"><a href=\"#sec-function.prototype.apply\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.apply\">#sec-function.prototype.apply</a></emu-xref>,  <emu-xref href=\"#sec-function.prototype.call\"><a href=\"#sec-function.prototype.call\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.call\">#sec-function.prototype.call</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>SyntaxError</emu-val> is thrown if its <emu-nt><a href=\"#prod-UnaryExpression\">UnaryExpression</a></emu-nt> is a direct reference to a variable, function argument, or function name (<emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      When a <code>delete</code> operator occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, a <emu-val>TypeError</emu-val> is thrown if the property to be deleted has the attribute { [[Configurable]]: <emu-val>false</emu-val> } (<emu-xref href=\"#sec-delete-operator-runtime-semantics-evaluation\"><a href=\"#sec-delete-operator-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-runtime-semantics-evaluation\">#sec-delete-operator-runtime-semantics-evaluation</a></emu-xref>).\n    \n    </li>\n    <li>\n      <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">Strict mode code</a></emu-xref> may not include a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt>. The occurrence of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> in such a context is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-with-statement-static-semantics-early-errors\"><a href=\"#sec-with-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-static-semantics-early-errors\">#sec-with-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if a <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> occurs within <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> and BoundNames of <emu-nt><a href=\"#prod-CatchParameter\">CatchParameter</a></emu-nt> contains either <code>eval</code> or <code>arguments</code> (<emu-xref href=\"#sec-try-statement-static-semantics-early-errors\"><a href=\"#sec-try-statement-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-static-semantics-early-errors\">#sec-try-statement-static-semantics-early-errors</a></emu-xref>).\n    \n    </li>\n    <li>\n      It is a <emu-val>SyntaxError</emu-val> if the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> appears more than once in the <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> of a <emu-xref href=\"#strict-function\"><a href=\"#strict-function\">strict function</a></emu-xref>. An attempt to create such a function using a <code>Function</code>, <code>Generator</code>, or <code>AsyncFunction</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is a <emu-val>SyntaxError</emu-val> (<emu-xref href=\"#sec-function-definitions-static-semantics-early-errors\"><a href=\"#sec-function-definitions-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</a></emu-xref>,  <emu-xref href=\"#sec-createdynamicfunction\"><a href=\"#sec-createdynamicfunction\" class=\"excluded-xref\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</a></emu-xref>).\n    \n    </li>\n    <li>\n      An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named <code>\"caller\"</code> or <code>\"arguments\"</code> of function instances.\n    \n    </li>\n  </ul>\n</emu-annex>\n\n"}, "sec-symbol.prototype-@@tostringtag": {"num": "19.4.3.6", "title": "#sec-symbol.prototype-@@tostringtag Symbol.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-symbol.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.prototype-@@tostringtag\">#sec-symbol.prototype-@@tostringtag</span> Symbol.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Symbol\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-asyncgeneratorfunction-instance-name": {"num": "25.3.4.2", "title": "#sec-asyncgeneratorfunction-instance-name name", "html": "<emu-clause id=\"sec-asyncgeneratorfunction-instance-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asyncgeneratorfunction-instance-name\">#sec-asyncgeneratorfunction-instance-name</span> name</h1>\n        <p>The specification for the <code>\"name\"</code> property of Function instances given in  <emu-xref href=\"#sec-function-instances-name\"><a href=\"#sec-function-instances-name\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</a></emu-xref> also applies to AsyncGeneratorFunction instances.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-generatorfunction-prototype-object": {"num": "25.2.3", "title": "#sec-properties-of-the-generatorfunction-prototype-object Properties of the GeneratorFunction Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-generatorfunction-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-generatorfunction-prototype-object\">#sec-properties-of-the-generatorfunction-prototype-object</span> Properties of the GeneratorFunction Prototype Object</h1>\n      <p>The GeneratorFunction prototype object:</p>\n      <ul>\n        <li>is an ordinary object.</li>\n        <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> and does not have an [[ECMAScriptCode]] internal slot or any other of the internal slots listed in  <emu-xref href=\"#table-27\"><a href=\"#table-27\" class=\"excluded-xref\" excluded-id=\"table-27\">#table-27</a></emu-xref> or  <emu-xref href=\"#table-56\"><a href=\"#table-56\" class=\"excluded-xref\" excluded-id=\"table-56\">#table-56</a></emu-xref>.</li>\n        <li>is the value of the <code>\"prototype\"</code> property of <emu-xref href=\"#sec-generatorfunction-constructor\"><a href=\"#sec-generatorfunction-constructor\">%GeneratorFunction%</a></emu-xref>.</li>\n        <li>is the intrinsic object  <dfn>%Generator%</dfn> (see Figure 2).</li>\n        <li>has a [[Prototype]] internal slot whose value is <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</li>\n      </ul>\n\n      <div id=\"excluded-sec-generatorfunction.prototype.constructor\"><h1><span class=\"secnum\">25.2.3.1</span>#sec-generatorfunction.prototype.constructor GeneratorFunction.prototype.constructor</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype.prototype\"><h1><span class=\"secnum\">25.2.3.2</span>#sec-generatorfunction.prototype.prototype GeneratorFunction.prototype.prototype</h1>...</div><div id=\"excluded-sec-generatorfunction.prototype-@@tostringtag\"><h1><span class=\"secnum\">25.2.3.3</span>#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]</h1>...</div></emu-clause>\n\n    "}, "sec-async-from-sync-iterator-value-unwrap-functions": {"num": "25.1.4.2.4", "title": "#sec-async-from-sync-iterator-value-unwrap-functions Async-from-Sync Iterator Value Unwrap Functions", "html": "<emu-clause id=\"sec-async-from-sync-iterator-value-unwrap-functions\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-from-sync-iterator-value-unwrap-functions\">#sec-async-from-sync-iterator-value-unwrap-functions</span> Async-from-Sync Iterator Value Unwrap Functions</h1>\n\n          <p>An async-from-sync iterator value unwrap function is an anonymous built-in function that is used by <emu-xref aoid=\"AsyncFromSyncIteratorContinuation\"><a href=\"#sec-asyncfromsynciteratorcontinuation\">AsyncFromSyncIteratorContinuation</a></emu-xref> when processing the <code>\"value\"</code> property of an  <i>IteratorResult</i> object, in order to wait for its value if it is a promise and re-package the result in a new \"unwrapped\"  <i>IteratorResult</i> object. Each async-from-sync iterator value unwrap function has a [[Done]] internal slot.</p>\n\n          <p>When an async-from-sync iterator value unwrap function is called with argument <var>value</var>, the following steps are taken:</p>\n\n          <emu-alg><ol><li>Let <var>F</var> be the <emu-xref href=\"#active-function-object\"><a href=\"#active-function-object\">active function object</a></emu-xref>.</li><li>Return !&#160;<emu-xref aoid=\"CreateIterResultObject\"><a href=\"#sec-createiterresultobject\">CreateIterResultObject</a></emu-xref>(<var>value</var>, <var>F</var>.[[Done]]).\n          </li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-promise.prototype-@@tostringtag": {"num": "25.6.5.5", "title": "#sec-promise.prototype-@@tostringtag Promise.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-promise.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-promise.prototype-@@tostringtag\">#sec-promise.prototype-@@tostringtag</span> Promise.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Promise\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-regexp.prototype-@@replace": {"num": "21.2.5.10", "title": "#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )", "html": "<emu-clause id=\"sec-regexp.prototype-@@replace\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp.prototype-@@replace\">#sec-regexp.prototype-@@replace</span> RegExp.prototype [ @@replace ] ( <var>string</var>, <var>replaceValue</var> )</h1>\n        <p>When the <code>@@replace</code> method is called with arguments <var>string</var> and <var>replaceValue</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>rx</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>rx</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>string</var>).</li><li>Let <var>lengthS</var> be the number of code unit elements in <var>S</var>.</li><li>Let <var>functionalReplace</var> be <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>replaceValue</var>).</li><li>If <var>functionalReplace</var> is <emu-val>false</emu-val>, then<ol><li>Set <var>replaceValue</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replaceValue</var>).</li></ol></li><li>Let <var>global</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"global\"</code>)).</li><li>If <var>global</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>fullUnicode</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"unicode\"</code>)).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, 0, <emu-val>true</emu-val>).</li></ol></li><li>Let <var>results</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>done</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>done</var> is <emu-val>false</emu-val><ol><li>Let <var>result</var> be ?&#160;<emu-xref aoid=\"RegExpExec\"><a href=\"#sec-regexpexec\">RegExpExec</a></emu-xref>(<var>rx</var>, <var>S</var>).</li><li>If <var>result</var> is <emu-val>null</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Append <var>result</var> to the end of <var>results</var>.</li><li>If <var>global</var> is <emu-val>false</emu-val>, set <var>done</var> to <emu-val>true</emu-val>.</li><li>Else,<ol><li>Let <var>matchStr</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"0\"</code>)).</li><li>If <var>matchStr</var> is the empty String, then<ol><li>Let <var>thisIndex</var> be ?&#160;<emu-xref aoid=\"ToLength\"><a href=\"#sec-tolength\">ToLength</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>)).</li><li>Let <var>nextIndex</var> be <emu-xref aoid=\"AdvanceStringIndex\"><a href=\"#sec-advancestringindex\">AdvanceStringIndex</a></emu-xref>(<var>S</var>, <var>thisIndex</var>, <var>fullUnicode</var>).</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>rx</var>, <code>\"lastIndex\"</code>, <var>nextIndex</var>, <emu-val>true</emu-val>).</li></ol></li></ol></li></ol></li></ol></li><li>Let <var>accumulatedResult</var> be the empty String value.</li><li>Let <var>nextSourcePosition</var> be 0.</li><li>For each <var>result</var> in <var>results</var>, do<ol><li>Let <var>nCaptures</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>result</var>).</li><li>Set <var>nCaptures</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<var>nCaptures</var> - 1, 0).</li><li>Let <var>matched</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"0\"</code>)).</li><li>Let <var>matchLength</var> be the number of code units in <var>matched</var>.</li><li>Let <var>position</var> be ?&#160;<emu-xref aoid=\"ToInteger\"><a href=\"#sec-tointeger\">ToInteger</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"index\"</code>)).</li><li>Set <var>position</var> to <emu-xref aoid=\"max\"><a href=\"#eqn-max\">max</a></emu-xref>(<emu-xref aoid=\"min\"><a href=\"#eqn-min\">min</a></emu-xref>(<var>position</var>, <var>lengthS</var>), 0).</li><li>Let <var>n</var> be 1.</li><li>Let <var>captures</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Repeat, while <var>n</var> &#8804; <var>nCaptures</var><ol><li>Let <var>capN</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>n</var>)).</li><li>If <var>capN</var> is not <emu-val>undefined</emu-val>, then<ol><li>Set <var>capN</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>capN</var>).</li></ol></li><li>Append <var>capN</var> as the last element of <var>captures</var>.</li><li>Set <var>n</var> to <var>n</var> + 1.</li></ol></li><li>Let <var>namedCaptures</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>result</var>, <code>\"groups\"</code>).</li><li>If <var>functionalReplace</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>replacerArgs</var> be &#171; <var>matched</var> &#187;.</li><li>Append in list order the elements of <var>captures</var> to the end of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>replacerArgs</var>.</li><li>Append <var>position</var> and <var>S</var> to <var>replacerArgs</var>.</li><li>If <var>namedCaptures</var> is not <emu-val>undefined</emu-val>, then<ol><li>Append <var>namedCaptures</var> as the last element of <var>replacerArgs</var>.</li></ol></li><li>Let <var>replValue</var> be ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>replaceValue</var>, <emu-val>undefined</emu-val>, <var>replacerArgs</var>).</li><li>Let <var>replacement</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>replValue</var>).</li></ol></li><li>Else,<ol><li>Let <var>replacement</var> be <emu-xref aoid=\"GetSubstitution\"><a href=\"#sec-getsubstitution\">GetSubstitution</a></emu-xref>(<var>matched</var>, <var>S</var>, <var>position</var>, <var>captures</var>, <var>namedCaptures</var>, <var>replaceValue</var>).</li></ol></li><li>If <var>position</var> &#8805; <var>nextSourcePosition</var>, then<ol><li>NOTE: <var>position</var> should not normally move backwards. If it does, it is an indication of an ill-behaving RegExp subclass or use of an access triggered side-effect to change the global flag or other characteristics of <var>rx</var>. In such cases, the corresponding substitution is ignored.</li><li>Set <var>accumulatedResult</var> to the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of the current value of <var>accumulatedResult</var>, the substring of <var>S</var> consisting of the code units from <var>nextSourcePosition</var> (inclusive) up to <var>position</var> (exclusive), and <var>replacement</var>.</li><li>Set <var>nextSourcePosition</var> to <var>position</var> + <var>matchLength</var>.</li></ol></li></ol></li><li>If <var>nextSourcePosition</var> &#8805; <var>lengthS</var>, return <var>accumulatedResult</var>.</li><li>Return the <emu-xref href=\"#sec-ecmascript-language-types-string-type\"><a href=\"#sec-ecmascript-language-types-string-type\">string-concatenation</a></emu-xref> of <var>accumulatedResult</var> and the substring of <var>S</var> consisting of the code units from <var>nextSourcePosition</var> (inclusive) up through the final code unit of <var>S</var> (inclusive).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.replace]\"</emu-val>.</p>\n      </emu-clause>\n\n      "}, "sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions": {"num": "E", "title": "#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions Additions and Changes That Introduce Incompatibilities with Prior ditions", "html": "<emu-annex id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions\">#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions</span> Additions and Changes That Introduce Incompatibilities with Prior Editions</h1>\n  <p><emu-xref href=\"#sec-tonumber-applied-to-the-string-type\"><a href=\"#sec-tonumber-applied-to-the-string-type\" class=\"excluded-xref\" excluded-id=\"sec-tonumber-applied-to-the-string-type\">#sec-tonumber-applied-to-the-string-type</a></emu-xref>: In ECMAScript 2015, <emu-xref aoid=\"ToNumber\"><a href=\"#sec-tonumber\">ToNumber</a></emu-xref> applied to a String value now recognizes and converts <emu-nt><a href=\"#prod-BinaryIntegerLiteral\">BinaryIntegerLiteral</a></emu-nt> and <emu-nt><a href=\"#prod-OctalIntegerLiteral\">OctalIntegerLiteral</a></emu-nt> numeric strings. In previous editions such strings were converted to <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\" class=\"excluded-xref\" excluded-id=\"sec-reference-specification-type\">#sec-reference-specification-type</a></emu-xref>: In ECMAScript 2015, Function calls are not allowed to return a <emu-xref href=\"#sec-reference-specification-type\"><a href=\"#sec-reference-specification-type\">Reference</a></emu-xref> value.</p>\n  <p><emu-xref href=\"#sec-names-and-keywords\"><a href=\"#sec-names-and-keywords\" class=\"excluded-xref\" excluded-id=\"sec-names-and-keywords\">#sec-names-and-keywords</a></emu-xref>: In ECMAScript 2015, the valid code points for an <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> are specified in terms of the Unicode properties &#8220;ID_Start&#8221; and &#8220;ID_Continue&#8221;. In previous editions, the valid <emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt> or <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> code points were specified by enumerating various Unicode code point categories.</p>\n  <p><emu-xref href=\"#sec-rules-of-automatic-semicolon-insertion\"><a href=\"#sec-rules-of-automatic-semicolon-insertion\" class=\"excluded-xref\" excluded-id=\"sec-rules-of-automatic-semicolon-insertion\">#sec-rules-of-automatic-semicolon-insertion</a></emu-xref>: In ECMAScript 2015, Automatic Semicolon Insertion adds a semicolon at the end of a do-while statement if the semicolon is missing. This change aligns the specification with the actual behaviour of most existing implementations.</p>\n  <p><emu-xref href=\"#sec-object-initializer-static-semantics-early-errors\"><a href=\"#sec-object-initializer-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-object-initializer-static-semantics-early-errors\">#sec-object-initializer-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, it is no longer an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> to have duplicate property names in Object Initializers.</p>\n  <p><emu-xref href=\"#sec-assignment-operators-static-semantics-early-errors\"><a href=\"#sec-assignment-operators-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-assignment-operators-static-semantics-early-errors\">#sec-assignment-operators-static-semantics-early-errors</a></emu-xref>: In ECMAScript 2015, <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref> containing an assignment to an immutable binding such as the function name of a <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> does not produce an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref>. Instead it produces a runtime error.</p>\n  <p><emu-xref href=\"#sec-block\"><a href=\"#sec-block\" class=\"excluded-xref\" excluded-id=\"sec-block\">#sec-block</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementList\">StatementList</a></emu-nt> beginning with the token let followed by the input elements <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> then <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions, automatic semicolon insertion would always insert a semicolon before the <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> input element.</p>\n  <p><emu-xref href=\"#sec-expression-statement\"><a href=\"#sec-expression-statement\" class=\"excluded-xref\" excluded-id=\"sec-expression-statement\">#sec-expression-statement</a></emu-xref>: In ECMAScript 2015, a <emu-nt><a href=\"#prod-StatementListItem\">StatementListItem</a></emu-nt> beginning with the token <code>let</code> followed by the token <code>[</code> is the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a sequence would be the start of an <emu-nt><a href=\"#prod-ExpressionStatement\">ExpressionStatement</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-if-statement-runtime-semantics-evaluation\"><a href=\"#sec-if-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-if-statement-runtime-semantics-evaluation\">#sec-if-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of an <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If no <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part is evaluated or if the evaluated <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IfStatement\">IfStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the <code>(</code> token of a for statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-Expression\">Expression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, if the ( token of a for-in statement is immediately followed by the token sequence <code>let [</code> then the <code>let</code> is treated as the start of a <emu-nt><a href=\"#prod-ForDeclaration\">ForDeclaration</a></emu-nt>. In previous editions such a token sequence would be the start of an <emu-nt><a href=\"#prod-LeftHandSideExpression\">LeftHandSideExpression</a></emu-nt>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: Prior to ECMAScript 2015, an initialization expression could appear as part of the <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> that precedes the <code>in</code> keyword. In ECMAScript 2015, the <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt> in that same position does not allow the occurrence of such an initializer. In ECMAScript 2017, such an initializer is permitted only in <emu-xref href=\"#non-strict-code\"><a href=\"#non-strict-code\">non-strict code</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-iteration-statements\"><a href=\"#sec-iteration-statements\" class=\"excluded-xref\" excluded-id=\"sec-iteration-statements\">#sec-iteration-statements</a></emu-xref>: In ECMAScript 2015, the completion value of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of an <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is not evaluated or if the final evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-IterationStatement\">IterationStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-with-statement-runtime-semantics-evaluation\"><a href=\"#sec-with-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-with-statement-runtime-semantics-evaluation\">#sec-with-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the normal completion value of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If evaluation of the <emu-nt><a href=\"#prod-Statement\">Statement</a></emu-nt> part of a <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> produces a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-WithStatement\">WithStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-switch-statement-runtime-semantics-evaluation\"><a href=\"#sec-switch-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-switch-statement-runtime-semantics-evaluation\">#sec-switch-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-CaseBlock\">CaseBlock</a></emu-nt> part of a <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> produces a completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-SwitchStatement\">SwitchStatement</a></emu-nt> is <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>: In ECMAScript 2015, it is an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> for a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause to contain a <code>var</code> declaration for the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter. In previous editions, such a variable declaration would be instantiated in the enclosing variable environment but the declaration's <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt> value would be assigned to the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement\"><a href=\"#sec-try-statement\" class=\"excluded-xref\" excluded-id=\"sec-try-statement\">#sec-try-statement</a></emu-xref>,  <emu-xref href=\"#sec-evaldeclarationinstantiation\"><a href=\"#sec-evaldeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-evaldeclarationinstantiation\">#sec-evaldeclarationinstantiation</a></emu-xref>: In ECMAScript 2015, a runtime <emu-val>SyntaxError</emu-val> is thrown if a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause evaluates a non-strict direct <code>eval</code> whose eval code includes a <code>var</code> or <code>FunctionDeclaration</code> declaration that binds the same <emu-nt><a href=\"#prod-Identifier\">Identifier</a></emu-nt> that appears as the <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> clause parameter.</p>\n  <p><emu-xref href=\"#sec-try-statement-runtime-semantics-evaluation\"><a href=\"#sec-try-statement-runtime-semantics-evaluation\" class=\"excluded-xref\" excluded-id=\"sec-try-statement-runtime-semantics-evaluation\">#sec-try-statement-runtime-semantics-evaluation</a></emu-xref>: In ECMAScript 2015, the completion value of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is never the value <emu-const>empty</emu-const>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val>. If the <emu-nt><a href=\"#prod-Block\">Block</a></emu-nt> part of a <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> evaluates to a throw completion and it has a <emu-nt><a href=\"#prod-Catch\">Catch</a></emu-nt> part that evaluates to a normal completion whose value is <emu-const>empty</emu-const>, the completion value of the <emu-nt><a href=\"#prod-TryStatement\">TryStatement</a></emu-nt> is <emu-val>undefined</emu-val> if there is no <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause or if its <emu-nt><a href=\"#prod-Finally\">Finally</a></emu-nt> clause evaluates to an <emu-const>empty</emu-const> normal completion.</p>\n  <p><emu-xref href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\"><a href=\"#sec-method-definitions-runtime-semantics-propertydefinitionevaluation\" class=\"excluded-xref\" excluded-id=\"sec-method-definitions-runtime-semantics-propertydefinitionevaluation\">#sec-method-definitions-runtime-semantics-propertydefinitionevaluation</a></emu-xref> In ECMAScript 2015, the function objects that are created as the values of the [[Get]] or [[Set]] attribute of accessor properties in an <emu-nt><a href=\"#prod-ObjectLiteral\">ObjectLiteral</a></emu-nt> are not <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> functions and they do not have a <code>\"prototype\"</code> own property. In the previous edition, they were constructors and had a <code>\"prototype\"</code> property.</p>\n  <p><emu-xref href=\"#sec-object.freeze\"><a href=\"#sec-object.freeze\" class=\"excluded-xref\" excluded-id=\"sec-object.freeze\">#sec-object.freeze</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.freeze</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertydescriptor\"><a href=\"#sec-object.getownpropertydescriptor\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertydescriptor\">#sec-object.getownpropertydescriptor</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyDescriptor</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getownpropertynames\"><a href=\"#sec-object.getownpropertynames\" class=\"excluded-xref\" excluded-id=\"sec-object.getownpropertynames\">#sec-object.getownpropertynames</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getOwnPropertyNames</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.getprototypeof\"><a href=\"#sec-object.getprototypeof\" class=\"excluded-xref\" excluded-id=\"sec-object.getprototypeof\">#sec-object.getprototypeof</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.getPrototypeOf</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isextensible\"><a href=\"#sec-object.isextensible\" class=\"excluded-xref\" excluded-id=\"sec-object.isextensible\">#sec-object.isextensible</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isExtensible</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.isfrozen\"><a href=\"#sec-object.isfrozen\" class=\"excluded-xref\" excluded-id=\"sec-object.isfrozen\">#sec-object.isfrozen</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isFrozen</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.issealed\"><a href=\"#sec-object.issealed\" class=\"excluded-xref\" excluded-id=\"sec-object.issealed\">#sec-object.issealed</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.isSealed</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.keys\"><a href=\"#sec-object.keys\" class=\"excluded-xref\" excluded-id=\"sec-object.keys\">#sec-object.keys</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.keys</code> is not an object an attempt is made to coerce the argument using <emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>. If the coercion is successful the result is used in place of the original argument value. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.preventextensions\"><a href=\"#sec-object.preventextensions\" class=\"excluded-xref\" excluded-id=\"sec-object.preventextensions\">#sec-object.preventextensions</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.preventExtensions</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-object.seal\"><a href=\"#sec-object.seal\" class=\"excluded-xref\" excluded-id=\"sec-object.seal\">#sec-object.seal</a></emu-xref>: In ECMAScript 2015, if the argument to <code>Object.seal</code> is not an object it is treated as if it was a non-extensible ordinary object with no own properties. In the previous edition, a non-object argument always causes a <emu-val>TypeError</emu-val> to be thrown.</p>\n  <p><emu-xref href=\"#sec-function.prototype.bind\"><a href=\"#sec-function.prototype.bind\" class=\"excluded-xref\" excluded-id=\"sec-function.prototype.bind\">#sec-function.prototype.bind</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <emu-xref href=\"#sec-bound-function-exotic-objects\"><a href=\"#sec-bound-function-exotic-objects\">bound function</a></emu-xref> is set to the [[GetPrototypeOf]] value of its target function. In the previous edition, [[Prototype]] was always set to <emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></emu-xref>.</p>\n  <p><emu-xref href=\"#sec-function-instances-length\"><a href=\"#sec-function-instances-length\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-length\">#sec-function-instances-length</a></emu-xref>: In ECMAScript 2015, the <code>\"length\"</code> property of function instances is configurable. In previous editions it was non-configurable.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-nativeerror-constructors\"><a href=\"#sec-properties-of-the-nativeerror-constructors\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-nativeerror-constructors\">#sec-properties-of-the-nativeerror-constructors</a></emu-xref>: In ECMAScript 2015, the [[Prototype]] internal slot of a <var>NativeError</var> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is the Error <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. In previous editions it was the Function prototype object.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-date-prototype-object\"><a href=\"#sec-properties-of-the-date-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-date-prototype-object\">#sec-properties-of-the-date-prototype-object</a></emu-xref> In ECMAScript 2015, the Date prototype object is not a Date instance. In previous editions it was a Date instance whose TimeValue was <emu-val>NaN</emu-val>.</p>\n  <p><emu-xref href=\"#sec-string.prototype.localecompare\"><a href=\"#sec-string.prototype.localecompare\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.localecompare\">#sec-string.prototype.localecompare</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.localeCompare</code> function must treat Strings that are canonically equivalent according to the Unicode standard as being identical. In previous editions implementations were permitted to ignore canonical equivalence and could instead use a bit-wise comparison.</p>\n  <p><emu-xref href=\"#sec-string.prototype.tolowercase\"><a href=\"#sec-string.prototype.tolowercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.tolowercase\">#sec-string.prototype.tolowercase</a></emu-xref> and  <emu-xref href=\"#sec-string.prototype.touppercase\"><a href=\"#sec-string.prototype.touppercase\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.touppercase\">#sec-string.prototype.touppercase</a></emu-xref> In ECMAScript 2015, lowercase/upper conversion processing operates on code points. In previous editions such the conversion processing was only applied to individual code units. The only affected code points are those in the Deseret block of Unicode.</p>\n  <p><emu-xref href=\"#sec-string.prototype.trim\"><a href=\"#sec-string.prototype.trim\" class=\"excluded-xref\" excluded-id=\"sec-string.prototype.trim\">#sec-string.prototype.trim</a></emu-xref> In ECMAScript 2015, the <code>String.prototype.trim</code> method is defined to recognize white space code points that may exists outside of the Unicode BMP. However, as of Unicode 7 no such code points are defined. In previous editions such code points would not have been recognized as white space.</p>\n  <p><emu-xref href=\"#sec-regexp-pattern-flags\"><a href=\"#sec-regexp-pattern-flags\" class=\"excluded-xref\" excluded-id=\"sec-regexp-pattern-flags\">#sec-regexp-pattern-flags</a></emu-xref> In ECMAScript 2015, If the <var>pattern</var> argument is a RegExp instance and the <var>flags</var> argument is not <emu-val>undefined</emu-val>, a new RegExp instance is created just like <var>pattern</var> except that <var>pattern</var>'s flags are replaced by the argument <var>flags</var>. In previous editions a <emu-val>TypeError</emu-val> exception was thrown when <var>pattern</var> was a RegExp instance and <var>flags</var> was not <emu-val>undefined</emu-val>.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, the RegExp prototype object is not a RegExp instance. In previous editions it was a RegExp instance whose pattern is the empty string.</p>\n  <p><emu-xref href=\"#sec-properties-of-the-regexp-prototype-object\"><a href=\"#sec-properties-of-the-regexp-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</a></emu-xref> In ECMAScript 2015, <code>\"source\"</code>, <code>\"global\"</code>, <code>\"ignoreCase\"</code>, and <code>\"multiline\"</code> are accessor properties defined on the RegExp prototype object. In previous editions they were data properties defined on RegExp instances.</p>\n</emu-annex>\n"}, "sec-async-function-prototype-properties-toStringTag": {"num": "25.7.3.2", "title": "#sec-async-function-prototype-properties-toStringTag AsyncFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-async-function-prototype-properties-toStringTag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-prototype-properties-toStringTag\">#sec-async-function-prototype-properties-toStringTag</span> AsyncFunction.prototype [ @@toStringTag ]</h1>\n\n        <p>The initial value of the @@toStringTag property is the string value <emu-val>\"AsyncFunction\"</emu-val>.</p>\n\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-math-@@tostringtag": {"num": "20.3.1.9", "title": "#sec-math-@@tostringtag Math [ @@toStringTag ]", "html": "<emu-clause id=\"sec-math-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-@@tostringtag\">#sec-math-@@tostringtag</span> Math [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"Math\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-bigint.prototype-@@tostringtag": {"num": "20.2.3.5", "title": "#sec-bigint.prototype-@@tostringtag BigInt.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-bigint.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bigint.prototype-@@tostringtag\">#sec-bigint.prototype-@@tostringtag</span> BigInt.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"BigInt\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-properties-of-regexp-instances": {"num": "21.2.6", "title": "#sec-properties-of-regexp-instances Properties of RegExp Instances", "html": "<emu-clause id=\"sec-properties-of-regexp-instances\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-regexp-instances\">#sec-properties-of-regexp-instances</span> Properties of RegExp Instances</h1>\n      <p>RegExp instances are ordinary objects that inherit properties from the RegExp prototype object. RegExp instances have internal slots [[RegExpMatcher]], [[OriginalSource]], and [[OriginalFlags]]. The value of the [[RegExpMatcher]] internal slot is an implementation-dependent representation of the <emu-nt><a href=\"#prod-Pattern\">Pattern</a></emu-nt> of the RegExp object.</p>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Prior to ECMAScript 2015, <code>RegExp</code> instances were specified as having the own data properties <code>\"source\"</code>, <code>\"global\"</code>, <code>\"ignoreCase\"</code>, and <code>\"multiline\"</code>. Those properties are now specified as accessor properties of <code>RegExp.prototype</code>.</p>\n      </div></emu-note>\n      <p>RegExp instances also have the following property:</p>\n\n      <div id=\"excluded-sec-lastindex\"><h1><span class=\"secnum\">21.2.6.1</span>#sec-lastindex lastIndex</h1>...</div></emu-clause>\n\n    "}, "sec-date.prototype-@@toprimitive": {"num": "20.4.4.45", "title": "#sec-date.prototype-@@toprimitive Date.prototype [ @@toPrimitive ] ( hint )", "html": "<emu-clause id=\"sec-date.prototype-@@toprimitive\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-date.prototype-@@toprimitive\">#sec-date.prototype-@@toprimitive</span> Date.prototype [ @@toPrimitive ] ( <var>hint</var> )</h1>\n        <p>This function is called by ECMAScript language operators to convert a Date object to a primitive value. The allowed values for <var>hint</var> are <code>\"default\"</code>, <code>\"number\"</code>, and <code>\"string\"</code>. Date objects, are unique among built-in ECMAScript object in that they treat <code>\"default\"</code> as being equivalent to <code>\"string\"</code>, All other built-in ECMAScript objects treat <code>\"default\"</code> as being equivalent to <code>\"number\"</code>.</p>\n        <p>When the <code>@@toPrimitive</code> method is called with argument <var>hint</var>, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>O</var>) is not Object, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>hint</var> is the String value <emu-val>\"string\"</emu-val> or the String value <emu-val>\"default\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-val>\"string\"</emu-val>.</li></ol></li><li>Else if <var>hint</var> is the String value <emu-val>\"number\"</emu-val>, then<ol><li>Let <var>tryFirst</var> be <emu-val>\"number\"</emu-val>.</li></ol></li><li>Else, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"OrdinaryToPrimitive\"><a href=\"#sec-ordinarytoprimitive\">OrdinaryToPrimitive</a></emu-xref>(<var>O</var>, <var>tryFirst</var>).\n        </li></ol></emu-alg>\n        <p>The value of the <code>\"name\"</code> property of this function is <emu-val>\"[Symbol.toPrimitive]\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-ecmascript-standard-built-in-objects": {"num": "17", "title": "#sec-ecmascript-standard-built-in-objects ECMAScript Standard Built-in Objects", "html": "<emu-clause id=\"sec-ecmascript-standard-built-in-objects\">\n  <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ecmascript-standard-built-in-objects\">#sec-ecmascript-standard-built-in-objects</span> ECMAScript Standard Built-in Objects</h1>\n  <p>There are certain built-in objects available whenever an ECMAScript <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt> or <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> begins execution. One, the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>, is part of the lexical environment of the executing program. Others are accessible as initial properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> or indirectly as properties of accessible built-in objects.</p>\n  <p>Unless specified otherwise, a built-in object that is callable as a function is a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> with the characteristics described in  <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>. Unless specified otherwise, the [[Extensible]] internal slot of a built-in object initially has the value <emu-val>true</emu-val>. Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has a [[Realm]] internal slot whose value is the <emu-xref href=\"#realm-record\"><a href=\"#realm-record\">Realm Record</a></emu-xref> of the <emu-xref href=\"#realm\"><a href=\"#realm\">realm</a></emu-xref> for which the object was initially created.</p>\n  <p>Many built-in objects are functions: they can be invoked with arguments. Some of them furthermore are constructors: they are functions intended for use with the <code>new</code> operator. For each built-in function, this specification describes the arguments required by that function and the properties of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>. For each built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>, this specification furthermore describes properties of the prototype object of that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> and properties of specific object instances returned by a <code>new</code> expression that invokes that <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> is given fewer arguments than the function is specified to require, the function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> shall behave exactly as if it had been given sufficient additional arguments, each such argument being the <emu-val>undefined</emu-val> value. Such missing arguments are considered to be &#8220;not present&#8221; and may be identified in that manner by specification algorithms. In the description of a particular function, the terms &#8220;<emu-val>this</emu-val> value&#8221; and &#8220;NewTarget&#8221; have the meanings given in  <emu-xref href=\"#sec-built-in-function-objects\"><a href=\"#sec-built-in-function-objects\" class=\"excluded-xref\" excluded-id=\"sec-built-in-function-objects\">#sec-built-in-function-objects</a></emu-xref>.</p>\n  <p>Unless otherwise specified in the description of a particular function, if a built-in function or <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> described is given more arguments than the function is specified to allow, the extra arguments are evaluated by the call and then ignored by the function. However, an implementation may define implementation specific behaviour relating to such arguments as long as the behaviour is not the throwing of a <emu-val>TypeError</emu-val> exception that is predicated simply on the presence of an extra argument.</p>\n  <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n    <p>Implementations that add additional capabilities to the set of built-in functions are encouraged to do so by adding new functions rather than adding new parameters to existing functions.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified every built-in function and every built-in <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> has the Function prototype object, which is the initial value of the expression <code>Function.prototype</code> (<emu-xref href=\"#sec-properties-of-the-function-prototype-object\"><a href=\"#sec-properties-of-the-function-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-function-prototype-object\">#sec-properties-of-the-function-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot.</p>\n  <p>Unless otherwise specified every built-in prototype object has the Object prototype object, which is the initial value of the expression <code>Object.prototype</code> (<emu-xref href=\"#sec-properties-of-the-object-prototype-object\"><a href=\"#sec-properties-of-the-object-prototype-object\" class=\"excluded-xref\" excluded-id=\"sec-properties-of-the-object-prototype-object\">#sec-properties-of-the-object-prototype-object</a></emu-xref>), as the value of its [[Prototype]] internal slot, except the Object prototype object itself.</p>\n  <p>Built-in function objects that are not identified as constructors do not implement the [[Construct]] internal method unless otherwise specified in the description of a particular function.</p>\n  <p>Each built-in function defined in this specification is created by calling the <emu-xref aoid=\"CreateBuiltinFunction\"><a href=\"#sec-createbuiltinfunction\">CreateBuiltinFunction</a></emu-xref> abstract operation (<emu-xref href=\"#sec-createbuiltinfunction\"><a href=\"#sec-createbuiltinfunction\" class=\"excluded-xref\" excluded-id=\"sec-createbuiltinfunction\">#sec-createbuiltinfunction</a></emu-xref>).</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, has a <code>\"length\"</code> property whose value is an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref>. Unless otherwise specified, this value is equal to the largest number of named arguments shown in the subclause headings for the function description. Optional parameters (which are indicated with brackets: <code>[</code> <code>]</code>) or rest parameters (which are shown using the form &#171;...name&#187;) are not included in the default argument count.</p>\n  <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n    <p>For example, the <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> that is the initial value of the <code>\"map\"</code> property of the Array prototype object is described under the subclause heading &#171;Array.prototype.map (callbackFn [ , thisArg])&#187; which shows the two named arguments callbackFn and thisArg, the latter being optional; therefore the value of the <code>\"length\"</code> property of that <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is 1.</p>\n  </div></emu-note>\n  <p>Unless otherwise specified, the <code>\"length\"</code> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, including constructors, that is not identified as an anonymous function has a <code>\"name\"</code> property whose value is a String. Unless otherwise specified, this value is the name that is given to the function in this specification. For functions that are specified as properties of objects, the name value is the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string used to access the function. Functions that are specified as get or set accessor functions of built-in properties have <code>\"get \"</code> or <code>\"set \"</code> prepended to the <emu-xref href=\"#property-name\"><a href=\"#property-name\">property name</a></emu-xref> string. The value of the <code>\"name\"</code> property is explicitly specified for each built-in functions whose property key is a Symbol value.</p>\n  <p>Unless otherwise specified, the <code>\"name\"</code> property of a built-in <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>, if it exists, has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n  <p>Every other <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">data property</a></emu-xref> described in clauses 18 through 26 and in Annex  <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified.</p>\n  <p>Every <emu-xref href=\"#sec-object-type\"><a href=\"#sec-object-type\">accessor property</a></emu-xref> described in clauses 18 through 26 and in Annex  <emu-xref href=\"#sec-additional-built-in-properties\"><a href=\"#sec-additional-built-in-properties\" class=\"excluded-xref\" excluded-id=\"sec-additional-built-in-properties\">#sec-additional-built-in-properties</a></emu-xref> has the attributes { [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> } unless otherwise specified. If only a get accessor function is described, the set accessor function is the default value, <emu-val>undefined</emu-val>. If only a set accessor is described the get accessor is the default value, <emu-val>undefined</emu-val>.</p>\n</emu-clause>\n\n"}, "sec-object.prototype.tolocalestring": {"num": "19.1.3.5", "title": "#sec-object.prototype.tolocalestring Object.prototype.toLocaleString ( [ reserved1 [ , reserved2 ] ] )", "html": "<emu-clause id=\"sec-object.prototype.tolocalestring\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object.prototype.tolocalestring\">#sec-object.prototype.tolocalestring</span> Object.prototype.toLocaleString ( [ <var>reserved1</var> [ , <var>reserved2</var> ] ] )</h1>\n        <p>When the <code>toLocaleString</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be the <emu-val>this</emu-val> value.</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>O</var>, <code>\"toString\"</code>).\n        </li></ol></emu-alg>\n        <p>The optional parameters to this function are not used but are intended to correspond to the parameter pattern used by ECMA-402 <code>toLocaleString</code> functions. Implementations that do not include ECMA-402 support must not use those parameter positions for other purposes.</p>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p>This function provides a generic <code>toLocaleString</code> implementation for objects that have no locale-specific <code>toString</code> behaviour. <code>Array</code>, <code>Number</code>, <code>Date</code>, and <emu-xref href=\"#sec-%typedarray%-intrinsic-object\"><a href=\"#sec-%typedarray%-intrinsic-object\">%TypedArray%</a></emu-xref> provide their own locale-sensitive <code>toLocaleString</code> methods.</p>\n        </div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>ECMA-402 intentionally does not provide an alternative to this default implementation.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-math-object": {"num": "20.3", "title": "#sec-math-object The Math Object", "html": "<emu-clause id=\"sec-math-object\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-math-object\">#sec-math-object</span> The Math Object</h1>\n    <p>The Math object:</p>\n    <ul>\n      <li>is the intrinsic object  <dfn>%Math%</dfn>.</li>\n      <li>is the initial value of the <code>\"Math\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n      <li>is an ordinary object.</li>\n      <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      <li>is not a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>.</li>\n      <li>does not have a [[Construct]] internal method; it cannot be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> with the <code>new</code> operator.</li>\n      <li>does not have a [[Call]] internal method; it cannot be invoked as a function.</li>\n    </ul>\n    <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n      <p>In this specification, the phrase &#8220;the <emu-xref href=\"#number-value\"><a href=\"#number-value\">Number value</a></emu-xref> for <var>x</var>&#8221; has a technical meaning defined in  <emu-xref href=\"#sec-ecmascript-language-types-number-type\"><a href=\"#sec-ecmascript-language-types-number-type\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-language-types-number-type\">#sec-ecmascript-language-types-number-type</a></emu-xref>.</p>\n    </div></emu-note>\n\n    <div id=\"excluded-sec-value-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.1</span>#sec-value-properties-of-the-math-object Value Properties of the Math Object</h1>...</div><div id=\"excluded-sec-function-properties-of-the-math-object\"><h1><span class=\"secnum\">20.3.2</span>#sec-function-properties-of-the-math-object Function Properties of the Math Object</h1>...</div></emu-clause>\n\n  "}, "sec-asynciteratorprototype": {"num": "25.1.3", "title": "#sec-asynciteratorprototype The %AsyncIteratorPrototype% Object", "html": "<emu-clause id=\"sec-asynciteratorprototype\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-asynciteratorprototype\">#sec-asynciteratorprototype</span> The %AsyncIteratorPrototype% Object</h1>\n      <p>The  <dfn>%AsyncIteratorPrototype%</dfn> object:</p>\n      <ul>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n        <li>is an ordinary object.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>All objects defined in this specification that implement the AsyncIterator interface also inherit from %AsyncIteratorPrototype%. ECMAScript code may also define objects that inherit from %AsyncIteratorPrototype%. The %AsyncIteratorPrototype% object provides a place where additional methods that are applicable to all async iterator objects may be added.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-asynciteratorprototype-asynciterator\"><h1><span class=\"secnum\">25.1.3.1</span>#sec-asynciteratorprototype-asynciterator %AsyncIteratorPrototype% [ @@asyncIterator ] ( )</h1>...</div></emu-clause>\n\n    "}, "sec-weakmap-constructor": {"num": "23.3.1", "title": "#sec-weakmap-constructor The WeakMap Constructor", "html": "<emu-clause id=\"sec-weakmap-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-weakmap-constructor\">#sec-weakmap-constructor</span> The WeakMap Constructor</h1>\n      <p>The WeakMap <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%WeakMap%</dfn>.</li>\n        <li>is the initial value of the <code>\"WeakMap\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new WeakMap object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>WeakMap</code> behaviour must include a <code>super</code> call to the <code>WeakMap</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>WeakMap.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-weakmap-iterable\"><h1><span class=\"secnum\">23.3.1.1</span>#sec-weakmap-iterable WeakMap ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-%regexpstringiteratorprototype%-@@tostringtag": {"num": "21.2.7.1.2", "title": "#sec-%regexpstringiteratorprototype%-@@tostringtag %RegExpStringIteratorPrototype% [ @@toStringTag ]", "html": "<emu-clause id=\"sec-%regexpstringiteratorprototype%-@@tostringtag\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-%regexpstringiteratorprototype%-@@tostringtag\">#sec-%regexpstringiteratorprototype%-@@tostringtag</span> %RegExpStringIteratorPrototype% [ @@toStringTag ]</h1>\n          <p>The initial value of the @@toStringTag property is the String value <emu-val>\"RegExp String Iterator\"</emu-val>.</p>\n          <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n        </emu-clause>\n      "}, "sec-generatorfunction.prototype-@@tostringtag": {"num": "25.2.3.3", "title": "#sec-generatorfunction.prototype-@@tostringtag GeneratorFunction.prototype [ @@toStringTag ]", "html": "<emu-clause id=\"sec-generatorfunction.prototype-@@tostringtag\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction.prototype-@@tostringtag\">#sec-generatorfunction.prototype-@@tostringtag</span> GeneratorFunction.prototype [ @@toStringTag ]</h1>\n        <p>The initial value of the @@toStringTag property is the String value <emu-val>\"GeneratorFunction\"</emu-val>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-generator-objects": {"num": "25.4", "title": "#sec-generator-objects Generator Objects", "html": "<emu-clause id=\"sec-generator-objects\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-objects\">#sec-generator-objects</span> Generator Objects</h1>\n    <p>A Generator object is an instance of a generator function and conforms to both the  <i>Iterator</i> and  <i>Iterable</i> interfaces.</p>\n    <p>Generator instances directly inherit properties from the object that is the value of the <code>\"prototype\"</code> property of the Generator function that created the instance. Generator instances indirectly inherit properties from the Generator Prototype intrinsic, %Generator.prototype%.</p>\n\n    <div id=\"excluded-sec-properties-of-generator-prototype\"><h1><span class=\"secnum\">25.4.1</span>#sec-properties-of-generator-prototype Properties of the Generator Prototype Object</h1>...</div><div id=\"excluded-sec-properties-of-generator-instances\"><h1><span class=\"secnum\">25.4.2</span>#sec-properties-of-generator-instances Properties of Generator Instances</h1>...</div><div id=\"excluded-sec-generator-abstract-operations\"><h1><span class=\"secnum\">25.4.3</span>#sec-generator-abstract-operations Generator Abstract Operations</h1>...</div></emu-clause>\n\n  "}, "sec-typedarray.bytes_per_element": {"num": "22.2.5.1", "title": "#sec-typedarray.bytes_per_element TypedArray.BYTES_PER_ELEMENT", "html": "<emu-clause id=\"sec-typedarray.bytes_per_element\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray.bytes_per_element\">#sec-typedarray.bytes_per_element</span> <var>TypedArray</var>.BYTES_PER_ELEMENT</h1>\n        <p>The value of <var>TypedArray</var><code>.BYTES_PER_ELEMENT</code> is the Element Size value specified in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>TypedArray</var>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-generatorfunction-instances-prototype": {"num": "25.2.4.3", "title": "#sec-generatorfunction-instances-prototype prototype", "html": "<emu-clause id=\"sec-generatorfunction-instances-prototype\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generatorfunction-instances-prototype\">#sec-generatorfunction-instances-prototype</span> prototype</h1>\n        <p>Whenever a GeneratorFunction instance is created another ordinary object is also created and is the initial value of the generator function's <code>\"prototype\"</code> property. The value of the prototype property is used to initialize the [[Prototype]] internal slot of a newly created Generator object when the generator <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> is invoked using [[Call]].</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p>Unlike Function instances, the object that is the value of the a GeneratorFunction's <code>\"prototype\"</code> property does not have a <code>\"constructor\"</code> property whose value is the GeneratorFunction instance.</p>\n        </div></emu-note>\n      </emu-clause>\n    "}, "sec-symbol.matchall": {"num": "19.4.2.8", "title": "#sec-symbol.matchall Symbol.matchAll", "html": "<emu-clause id=\"sec-symbol.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-symbol.matchall\">#sec-symbol.matchall</span> Symbol.matchAll</h1>\n        <p>The initial value of <code>Symbol.matchAll</code> is the well-known symbol @@matchAll (<emu-xref href=\"#table-2\"><a href=\"#table-2\" class=\"excluded-xref\" excluded-id=\"table-2\">#table-2</a></emu-xref>).</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-lastindex": {"num": "21.2.6.1", "title": "#sec-lastindex lastIndex", "html": "<emu-clause id=\"sec-lastindex\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-lastindex\">#sec-lastindex</span> lastIndex</h1>\n        <p>The value of the <code>\"lastIndex\"</code> property specifies the String index at which to start the next match. It is coerced to an <emu-xref href=\"#integer\"><a href=\"#integer\">integer</a></emu-xref> when used (see  <emu-xref href=\"#sec-regexpbuiltinexec\"><a href=\"#sec-regexpbuiltinexec\" class=\"excluded-xref\" excluded-id=\"sec-regexpbuiltinexec\">#sec-regexpbuiltinexec</a></emu-xref>). This property shall have the attributes { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n    "}, "sec-async-function-instances-name": {"num": "25.7.4.2", "title": "#sec-async-function-instances-name name", "html": "<emu-clause id=\"sec-async-function-instances-name\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-instances-name\">#sec-async-function-instances-name</span> name</h1>\n        <p>The specification for the <code>\"name\"</code> property of Function instances given in  <emu-xref href=\"#sec-function-instances-name\"><a href=\"#sec-function-instances-name\" class=\"excluded-xref\" excluded-id=\"sec-function-instances-name\">#sec-function-instances-name</a></emu-xref> also applies to AsyncFunction instances.</p>\n      </emu-clause>\n    "}, "sec-set-constructor": {"num": "23.2.1", "title": "#sec-set-constructor The Set Constructor", "html": "<emu-clause id=\"sec-set-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-set-constructor\">#sec-set-constructor</span> The Set Constructor</h1>\n      <p>The Set <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%Set%</dfn>.</li>\n        <li>is the initial value of the <code>\"Set\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new Set object when called as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</li>\n        <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>\n        <li>is designed to be subclassable. It may be used as the value in an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>Set</code> behaviour must include a <code>super</code> call to the <code>Set</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize the subclass instance with the internal state necessary to support the <code>Set.prototype</code> built-in methods.</li>\n      </ul>\n\n      <div id=\"excluded-sec-set-iterable\"><h1><span class=\"secnum\">23.2.1.1</span>#sec-set-iterable Set ( [ iterable ] )</h1>...</div></emu-clause>\n\n    "}, "sec-regexp-constructor": {"num": "21.2.3", "title": "#sec-regexp-constructor The RegExp Constructor", "html": "<emu-clause id=\"sec-regexp-constructor\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-regexp-constructor\">#sec-regexp-constructor</span> The RegExp Constructor</h1>\n      <p>The RegExp <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExp%</dfn>.</li>\n        <li>is the initial value of the <code>\"RegExp\"</code> property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>.</li>\n        <li>creates and initializes a new RegExp object when called as a function rather than as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>. Thus the function call <code>RegExp(&#8230;)</code> is equivalent to the object creation expression <code>new RegExp(&#8230;)</code> with the same arguments.</li>\n        <li>is designed to be subclassable. It may be used as the value of an <code>extends</code> clause of a class definition. Subclass constructors that intend to inherit the specified <code>RegExp</code> behaviour must include a <code>super</code> call to the <code>RegExp</code> <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> to create and initialize subclass instances with the necessary internal slots.</li>\n      </ul>\n\n      <div id=\"excluded-sec-regexp-pattern-flags\"><h1><span class=\"secnum\">21.2.3.1</span>#sec-regexp-pattern-flags RegExp ( pattern, flags )</h1>...</div><div id=\"excluded-sec-abstract-operations-for-the-regexp-constructor\"><h1><span class=\"secnum\">21.2.3.2</span>#sec-abstract-operations-for-the-regexp-constructor Abstract Operations for the RegExp Constructor</h1>...</div></emu-clause>\n\n    "}, "sec-array.prototype.reduceright": {"num": "22.1.3.22", "title": "#sec-array.prototype.reduceright Array.prototype.reduceRight ( callbackfn [ , initialValue ] )", "html": "<emu-clause id=\"sec-array.prototype.reduceright\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-array.prototype.reduceright\">#sec-array.prototype.reduceright</span> Array.prototype.reduceRight ( <var>callbackfn</var> [ , <var>initialValue</var> ] )</h1>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n          <p><var>callbackfn</var> should be a function that takes four arguments. <code>reduceRight</code> calls the callback, as a function, once for each element after the first element present in the array, in descending order.</p>\n          <p><var>callbackfn</var> is called with four arguments: the <var>previousValue</var> (value from the previous call to <var>callbackfn</var>), the <var>currentValue</var> (value of the current element), the <var>currentIndex</var>, and the object being traversed. The first time the function is called, the <var>previousValue</var> and <var>currentValue</var> can be one of two values. If an <var>initialValue</var> was supplied in the call to <code>reduceRight</code>, then <var>previousValue</var> will be equal to <var>initialValue</var> and <var>currentValue</var> will be equal to the last value in the array. If no <var>initialValue</var> was supplied, then <var>previousValue</var> will be equal to the last value in the array and <var>currentValue</var> will be equal to the second-to-last value. It is a <emu-val>TypeError</emu-val> if the array contains no elements and <var>initialValue</var> is not provided.</p>\n          <p><code>reduceRight</code> does not directly mutate the object on which it is called but the object may be mutated by the calls to <var>callbackfn</var>.</p>\n          <p>The range of elements processed by <code>reduceRight</code> is set before the first call to <var>callbackfn</var>. Elements that are appended to the array after the call to <code>reduceRight</code> begins will not be visited by <var>callbackfn</var>. If existing elements of the array are changed by <var>callbackfn</var>, their value as passed to <var>callbackfn</var> will be the value at the time <code>reduceRight</code> visits them; elements that are deleted after the call to <code>reduceRight</code> begins and before being visited are not visited.</p>\n        </div></emu-note>\n        <p>When the <code>reduceRight</code> method is called with one or two arguments, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"ToObject\"><a href=\"#sec-toobject\">ToObject</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>Let <var>len</var> be ?&#160;<emu-xref aoid=\"LengthOfArrayLike\"><a href=\"#sec-lengthofarraylike\">LengthOfArrayLike</a></emu-xref>(<var>O</var>).</li><li>If <emu-xref aoid=\"IsCallable\"><a href=\"#sec-iscallable\">IsCallable</a></emu-xref>(<var>callbackfn</var>) is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>If <var>len</var> is 0 and <var>initialValue</var> is not present, throw a <emu-val>TypeError</emu-val> exception.</li><li>Let <var>k</var> be <var>len</var> - 1.</li><li>Let <var>accumulator</var> be <emu-val>undefined</emu-val>.</li><li>If <var>initialValue</var> is present, then<ol><li>Set <var>accumulator</var> to <var>initialValue</var>.</li></ol></li><li>Else,<ol><li>Let <var>kPresent</var> be <emu-val>false</emu-val>.</li><li>Repeat, while <var>kPresent</var> is <emu-val>false</emu-val> and <var>k</var> &#8805; 0<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Set <var>kPresent</var> to ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>If <var>kPresent</var> is <emu-val>false</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Repeat, while <var>k</var> &#8805; 0<ol><li>Let <var>Pk</var> be !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>k</var>).</li><li>Let <var>kPresent</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>If <var>kPresent</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>kValue</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>O</var>, <var>Pk</var>).</li><li>Set <var>accumulator</var> to ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>callbackfn</var>, <emu-val>undefined</emu-val>, &#171; <var>accumulator</var>, <var>kValue</var>, <var>k</var>, <var>O</var> &#187;).</li></ol></li><li>Set <var>k</var> to <var>k</var> - 1.</li></ol></li><li>Return <var>accumulator</var>.\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n          <p>The <code>reduceRight</code> function is intentionally generic; it does not require that its <emu-val>this</emu-val> value be an Array object. Therefore it can be transferred to other kinds of objects for use as a method.</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-typedarray.prototype.bytes_per_element": {"num": "22.2.6.1", "title": "#sec-typedarray.prototype.bytes_per_element TypedArray.prototype.BYTES_PER_ELEMENT", "html": "<emu-clause id=\"sec-typedarray.prototype.bytes_per_element\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-typedarray.prototype.bytes_per_element\">#sec-typedarray.prototype.bytes_per_element</span> <var>TypedArray</var>.prototype.BYTES_PER_ELEMENT</h1>\n        <p>The value of <var>TypedArray</var><code>.prototype.BYTES_PER_ELEMENT</code> is the Element Size value specified in  <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for <var>TypedArray</var>.</p>\n        <p>This property has the attributes { [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }.</p>\n      </emu-clause>\n\n      "}, "sec-properties-of-the-regexp-prototype-object": {"num": "21.2.5", "title": "#sec-properties-of-the-regexp-prototype-object Properties of the RegExp Prototype Object", "html": "<emu-clause id=\"sec-properties-of-the-regexp-prototype-object\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-properties-of-the-regexp-prototype-object\">#sec-properties-of-the-regexp-prototype-object</span> Properties of the RegExp Prototype Object</h1>\n      <p>The RegExp prototype object:</p>\n      <ul>\n        <li>is the intrinsic object  <dfn>%RegExpPrototype%</dfn>.</li>\n        <li>is an ordinary object.</li>\n        <li>is not a RegExp instance and does not have a [[RegExpMatcher]] internal slot or any of the other internal slots of RegExp instance objects.</li>\n        <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The RegExp prototype object does not have a <code>\"valueOf\"</code> property of its own; however, it inherits the <code>\"valueOf\"</code> property from the Object prototype object.</p>\n      </div></emu-note>\n\n      <div id=\"excluded-sec-regexp.prototype.constructor\"><h1><span class=\"secnum\">21.2.5.1</span>#sec-regexp.prototype.constructor RegExp.prototype.constructor</h1>...</div><div id=\"excluded-sec-regexp.prototype.exec\"><h1><span class=\"secnum\">21.2.5.2</span>#sec-regexp.prototype.exec RegExp.prototype.exec ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.dotAll\"><h1><span class=\"secnum\">21.2.5.3</span>#sec-get-regexp.prototype.dotAll get RegExp.prototype.dotAll</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.flags\"><h1><span class=\"secnum\">21.2.5.4</span>#sec-get-regexp.prototype.flags get RegExp.prototype.flags</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.global\"><h1><span class=\"secnum\">21.2.5.5</span>#sec-get-regexp.prototype.global get RegExp.prototype.global</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.ignorecase\"><h1><span class=\"secnum\">21.2.5.6</span>#sec-get-regexp.prototype.ignorecase get RegExp.prototype.ignoreCase</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@match\"><h1><span class=\"secnum\">21.2.5.7</span>#sec-regexp.prototype-@@match RegExp.prototype [ @@match ] ( string )</h1>...</div><div id=\"excluded-sec-regexp-prototype-matchall\"><h1><span class=\"secnum\">21.2.5.8</span>#sec-regexp-prototype-matchall RegExp.prototype [ @@matchAll ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.multiline\"><h1><span class=\"secnum\">21.2.5.9</span>#sec-get-regexp.prototype.multiline get RegExp.prototype.multiline</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@replace\"><h1><span class=\"secnum\">21.2.5.10</span>#sec-regexp.prototype-@@replace RegExp.prototype [ @@replace ] ( string, replaceValue )</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@search\"><h1><span class=\"secnum\">21.2.5.11</span>#sec-regexp.prototype-@@search RegExp.prototype [ @@search ] ( string )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.source\"><h1><span class=\"secnum\">21.2.5.12</span>#sec-get-regexp.prototype.source get RegExp.prototype.source</h1>...</div><div id=\"excluded-sec-regexp.prototype-@@split\"><h1><span class=\"secnum\">21.2.5.13</span>#sec-regexp.prototype-@@split RegExp.prototype [ @@split ] ( string, limit )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.sticky\"><h1><span class=\"secnum\">21.2.5.14</span>#sec-get-regexp.prototype.sticky get RegExp.prototype.sticky</h1>...</div><div id=\"excluded-sec-regexp.prototype.test\"><h1><span class=\"secnum\">21.2.5.15</span>#sec-regexp.prototype.test RegExp.prototype.test ( S )</h1>...</div><div id=\"excluded-sec-regexp.prototype.tostring\"><h1><span class=\"secnum\">21.2.5.16</span>#sec-regexp.prototype.tostring RegExp.prototype.toString ( )</h1>...</div><div id=\"excluded-sec-get-regexp.prototype.unicode\"><h1><span class=\"secnum\">21.2.5.17</span>#sec-get-regexp.prototype.unicode get RegExp.prototype.unicode</h1>...</div></emu-clause>\n\n    "}}, "figData": {"figure-1": "Figure 1", "table-1": "Table 1", "table-2": "Table 3", "table-3": "Table 4", "table-5": "Table 6", "table-7": "Table 8", "table-15": "Table 16", "table-16": "Table 17", "table-17": "Table 18", "table-27": "Table 29", "table-cyclic-module-fields": "Table 41", "table-38": "Table 43", "table-39": "Table 44", "table-40": "Table 45", "table-41": "Table 46", "table-42": "Table 47", "table-dynamic-function-sourcetext-prefixes": "Table 49", "table-49": "Table 62", "table-53": "Table 67", "table-54": "Table 68", "table-async-iterator-required": "Table 70", "table-async-iterator-optional": "Table 71", "table-55": "Table 72", "table-56": "Table 74", "table-internal-slots-of-asyncgenerator-instances": "Table 75"}}}