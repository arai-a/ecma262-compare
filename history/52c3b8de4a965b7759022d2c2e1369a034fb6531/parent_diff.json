{"from": {"secList": ["sec-module-environment-records-hasthisbinding", "sec-global-environment-records-createmutablebinding-n-d", "sec-object-environment-records-hasbinding-n", "sec-hasrestrictedglobalproperty", "sec-object-environment-records-hasthisbinding", "sec-declarative-environment-records-getbindingvalue-n-s", "sec-global-environment-records-setmutablebinding-n-v-s", "sec-object-environment-records-hassuperbinding", "sec-declarative-environment-records-createimmutablebinding-n-s", "sec-candeclareglobalvar", "sec-module-environment-records-getthisbinding", "sec-function-environment-records-hasthisbinding", "sec-declarative-environment-records-hassuperbinding", "sec-object-environment-records-setmutablebinding-n-v-s", "sec-createimportbinding", "sec-declarative-environment-records-deletebinding-n", "sec-object-environment-records-getbindingvalue-n-s", "sec-module-environment-records-deletebinding-n", "sec-object-environment-records-deletebinding-n", "sec-global-environment-records-hassuperbinding", "sec-global-environment-records-hasbinding-n", "sec-candeclareglobalfunction", "sec-declarative-environment-records-initializebinding-n-v", "sec-global-environment-records-hasthisbinding", "sec-createglobalfunctionbinding", "sec-global-environment-records-deletebinding-n", "sec-object-environment-records-createmutablebinding-n-d", "sec-getsuperbase", "sec-global-environment-records-createimmutablebinding-n-s", "sec-declarative-environment-records-hasbinding-n", "sec-global-environment-records-getbindingvalue-n-s", "sec-declarative-environment-records-setmutablebinding-n-v-s", "sec-object-environment-records-withbaseobject", "sec-haslexicaldeclaration", "sec-declarative-environment-records-withbaseobject", "sec-hasvardeclaration", "sec-module-environment-records-getbindingvalue-n-s", "sec-declarative-environment-records-hasthisbinding", "sec-global-environment-records-initializebinding-n-v", "sec-declarative-environment-records-createmutablebinding-n-d", "sec-object-environment-records-createimmutablebinding-n-s", "sec-global-environment-records-withbaseobject", "sec-object-environment-records-initializebinding-n-v", "sec-createglobalvarbinding", "sec-function-environment-records-getthisbinding", "sec-global-environment-records-getthisbinding", "sec-bindthisvalue", "sec-function-environment-records-hassuperbinding"], "secData": {"sec-module-environment-records-hasthisbinding": {"num": "8.1.1.5.3", "title": "#sec-module-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-module-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-hasthisbinding\">#sec-module-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>Module Environment Records provide a <code>this</code> binding.</p>\n          <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-createmutablebinding-n-d": {"num": "8.1.1.4.2", "title": "#sec-global-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-global-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-createmutablebinding-n-d\">#sec-global-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateMutableBinding for global Environment Records creates a new mutable binding for the name <var>N</var> that is uninitialized. The binding is created in the associated DeclarativeRecord. A binding for <var>N</var> must not already exist in the DeclarativeRecord. If Boolean argument <var>D</var> has the value <emu-val>true</emu-val> the new binding is marked as being subject to deletion.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>DclRec</var>.CreateMutableBinding(<var>N</var>, <var>D</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hasbinding-n": {"num": "8.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasBinding for object Environment Records determines if its associated binding object has a property whose name is the value of the argument <var>N</var>:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-hasrestrictedglobalproperty": {"num": "8.1.1.4.14", "title": "#sec-hasrestrictedglobalproperty HasRestrictedGlobalProperty ( N )", "html": "<emu-clause id=\"sec-hasrestrictedglobalproperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasrestrictedglobalproperty\">#sec-hasrestrictedglobalproperty</span> HasRestrictedGlobalProperty ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasRestrictedGlobalProperty for global Environment Records determines if the argument identifier is the name of a property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that must not be shadowed by a global lexical binding:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Properties may exist upon a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that were directly created rather than being declared using a var or function declaration. A global lexical binding may not be created that has the same name as a non-configurable property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. The global property <emu-val>\"undefined\"</emu-val> is an example of such a property.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hasthisbinding": {"num": "8.1.1.2.8", "title": "#sec-object-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-object-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasthisbinding\">#sec-object-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>Regular object Environment Records do not provide a <code>this</code> binding.</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-getbindingvalue-n-s": {"num": "8.1.1.1.6", "title": "#sec-declarative-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-getbindingvalue-n-s\">#sec-declarative-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method GetBindingValue for declarative Environment Records simply returns the value of its bound identifier whose name is the value of the argument <var>N</var>. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown, regardless of the value of <var>S</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for <var>N</var>.</li><li>If the binding for <var>N</var> in <var>envRec</var> is an uninitialized binding, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return the value currently bound to <var>N</var> in <var>envRec</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-setmutablebinding-n-v-s": {"num": "8.1.1.4.5", "title": "#sec-global-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-global-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-setmutablebinding-n-v-s\">#sec-global-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method SetMutableBinding for global Environment Records attempts to change the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. If the binding is an immutable binding, a <emu-val>TypeError</emu-val> is thrown if <var>S</var> is <emu-val>true</emu-val>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by the value of the Boolean argument <var>S</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <var>S</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hassuperbinding": {"num": "8.1.1.2.9", "title": "#sec-object-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-object-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hassuperbinding\">#sec-object-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <p>Regular object Environment Records do not provide a <code>super</code> binding.</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-createimmutablebinding-n-s": {"num": "8.1.1.1.3", "title": "#sec-declarative-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">#sec-declarative-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateImmutableBinding for declarative Environment Records creates a new immutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If the Boolean argument <var>S</var> has the value <emu-val>true</emu-val> the new binding is marked as a strict binding.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li>Create an immutable binding in <var>envRec</var> for <var>N</var> and record that it is uninitialized. If <var>S</var> is <emu-val>true</emu-val>, record that the newly created binding is a strict binding.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalvar": {"num": "8.1.1.4.15", "title": "#sec-candeclareglobalvar CanDeclareGlobalVar ( N )", "html": "<emu-clause id=\"sec-candeclareglobalvar\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</span> CanDeclareGlobalVar ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CanDeclareGlobalVar for global Environment Records determines if a corresponding CreateGlobalVarBinding call would succeed if called for the same argument <var>N</var>. Redundant var declarations and var declarations for pre-existing <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> properties are allowed.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>hasProperty</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-module-environment-records-getthisbinding": {"num": "8.1.1.5.4", "title": "#sec-module-environment-records-getthisbinding GetThisBinding ( )", "html": "<emu-clause id=\"sec-module-environment-records-getthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-getthisbinding\">#sec-module-environment-records-getthisbinding</span> GetThisBinding ( )</h1>\n          <emu-alg><ol><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-function-environment-records-hasthisbinding": {"num": "8.1.1.3.2", "title": "#sec-function-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-function-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records-hasthisbinding\">#sec-function-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>lexical</emu-const>, return <emu-val>false</emu-val>; otherwise, return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hassuperbinding": {"num": "8.1.1.1.9", "title": "#sec-declarative-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-declarative-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hassuperbinding\">#sec-declarative-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <p>Regular declarative Environment Records do not provide a <code>super</code> binding.</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-setmutablebinding-n-v-s": {"num": "8.1.1.2.5", "title": "#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-object-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-setmutablebinding-n-v-s\">#sec-object-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method SetMutableBinding for object Environment Records attempts to set the value of the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object's property whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by the value of the Boolean argument <var>S</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>stillExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>stillExists</var> is <emu-val>false</emu-val> and <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>bindings</var>, <var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createimportbinding": {"num": "8.1.1.5.5", "title": "#sec-createimportbinding CreateImportBinding ( N, M, N2 )", "html": "<emu-clause id=\"sec-createimportbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createimportbinding\">#sec-createimportbinding</span> CreateImportBinding ( <var>N</var>, <var>M</var>, <var>N2</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateImportBinding for module Environment Records creates a new initialized immutable indirect binding for the name <var>N</var>. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>, and <var>N2</var> is the name of a binding that exists in <var>M</var>'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>. Accesses to the value of the new binding will indirectly access the bound value of the target binding.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When <var>M</var>.[[Environment]] is instantiated it will have a direct binding for <var>N2</var>.</li><li>Create an immutable indirect binding in <var>envRec</var> for <var>N</var> that references <var>M</var> and <var>N2</var> as its target binding and record that the binding is initialized.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-declarative-environment-records-deletebinding-n": {"num": "8.1.1.1.7", "title": "#sec-declarative-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-deletebinding-n\">#sec-declarative-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method DeleteBinding for declarative Environment Records can only delete bindings that have been explicitly designated as being subject to deletion.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for the name that is the value of <var>N</var>.</li><li>If the binding for <var>N</var> in <var>envRec</var> cannot be deleted, return <emu-val>false</emu-val>.</li><li>Remove the binding for <var>N</var> from <var>envRec</var>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-getbindingvalue-n-s": {"num": "8.1.1.2.6", "title": "#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-getbindingvalue-n-s\">#sec-object-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method GetBindingValue for object Environment Records returns the value of its associated binding object's property whose name is the String value of the argument identifier <var>N</var>. The property should already exist but if it does not the result depends upon the value of the <var>S</var> argument:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>value</var> is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>false</emu-val>, return the value <emu-val>undefined</emu-val>; otherwise throw a <emu-val>ReferenceError</emu-val> exception.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-module-environment-records-deletebinding-n": {"num": "8.1.1.5.2", "title": "#sec-module-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-module-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-deletebinding-n\">#sec-module-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method DeleteBinding for module Environment Records refuses to delete bindings.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This method is never invoked. See <emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Module Environment Records are only used within strict code and an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rule prevents the delete operator, in strict code, from being applied to a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> that would resolve to a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> binding. See <emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-deletebinding-n": {"num": "8.1.1.2.7", "title": "#sec-object-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-deletebinding-n\">#sec-object-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method DeleteBinding for object Environment Records can only delete bindings that correspond to properties of the environment object whose [[Configurable]] attribute have the value <emu-val>true</emu-val>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Return ? <var>bindings</var>.[[Delete]](<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-hassuperbinding": {"num": "8.1.1.4.9", "title": "#sec-global-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-global-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-hassuperbinding\">#sec-global-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-hasbinding-n": {"num": "8.1.1.4.1", "title": "#sec-global-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-global-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-hasbinding-n\">#sec-global-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasBinding for global Environment Records simply determines if the argument identifier is one of the identifiers bound by the record:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.HasBinding(<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalfunction": {"num": "8.1.1.4.16", "title": "#sec-candeclareglobalfunction CanDeclareGlobalFunction ( N )", "html": "<emu-clause id=\"sec-candeclareglobalfunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalfunction\">#sec-candeclareglobalfunction</span> CanDeclareGlobalFunction ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CanDeclareGlobalFunction for global Environment Records determines if a corresponding CreateGlobalFunctionBinding call would succeed if called for the same argument <var>N</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>existingProp</var>) is <emu-val>true</emu-val> and <var>existingProp</var> has attribute values { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val> }, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-initializebinding-n-v": {"num": "8.1.1.1.4", "title": "#sec-declarative-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-declarative-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-initializebinding-n-v\">#sec-declarative-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method InitializeBinding for declarative Environment Records is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> must have an uninitialized binding for <var>N</var>.</li><li>Set the bound value for <var>N</var> in <var>envRec</var> to <var>V</var>.</li><li><emu-not-ref>Record</emu-not-ref> that the binding for <var>N</var> in <var>envRec</var> has been initialized.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-hasthisbinding": {"num": "8.1.1.4.8", "title": "#sec-global-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-global-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-hasthisbinding\">#sec-global-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createglobalfunctionbinding": {"num": "8.1.1.4.18", "title": "#sec-createglobalfunctionbinding CreateGlobalFunctionBinding ( N, V, D )", "html": "<emu-clause id=\"sec-createglobalfunctionbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</span> CreateGlobalFunctionBinding ( <var>N</var>, <var>V</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateGlobalFunctionBinding for global Environment Records creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is replaced.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val> or <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var> }.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>desc</var>).</li><li id=\"step-createglobalfunctionbinding-set\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global function declarations are always represented as own properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. If possible, an existing own property is reconfigured to have a standard set of attribute values. Step <emu-xref href=\"#step-createglobalfunctionbinding-set\"><a href=\"#step-createglobalfunctionbinding-set\" class=\"excluded-xref\" excluded-id=\"step-createglobalfunctionbinding-set\">#step-createglobalfunctionbinding-set</a></emu-xref> is equivalent to what calling the InitializeBinding concrete method would do and if <var>globalObject</var> is a Proxy will produce the same sequence of Proxy trap calls.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-global-environment-records-deletebinding-n": {"num": "8.1.1.4.7", "title": "#sec-global-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-global-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-deletebinding-n\">#sec-global-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method DeleteBinding for global Environment Records can only delete bindings that have been explicitly designated as being subject to deletion.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.DeleteBinding(<var>N</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>status</var> be ? <var>ObjRec</var>.DeleteBinding(<var>N</var>).</li><li>If <var>status</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>varNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>N</var> is an element of <var>varNames</var>, remove that element from the <var>varNames</var>.</li></ol></li><li>Return <var>status</var>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-createmutablebinding-n-d": {"num": "8.1.1.2.2", "title": "#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-object-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createmutablebinding-n-d\">#sec-object-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateMutableBinding for object Environment Records creates in an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object a property whose name is the String value and initializes it to the value <emu-val>undefined</emu-val>. If Boolean argument <var>D</var> has the value <emu-val>true</emu-val> the new property's [[Configurable]] attribute is set to <emu-val>true</emu-val>; otherwise it is set to <emu-val>false</emu-val>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>bindings</var>, <var>N</var>, PropertyDescriptor { [[Value]]: <emu-val>undefined</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Normally <var>envRec</var> will not have a binding for <var>N</var> but if it does, the semantics of <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref> may result in an existing binding being replaced or shadowed or cause an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> to be returned.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-getsuperbase": {"num": "8.1.1.3.5", "title": "#sec-getsuperbase GetSuperBase ( )", "html": "<emu-clause id=\"sec-getsuperbase\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getsuperbase\">#sec-getsuperbase</span> GetSuperBase ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>home</var> be <var>envRec</var>.[[FunctionObject]].[[HomeObject]].</li><li>If <var>home</var> has the value <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>home</var>) is Object.</li><li>Return ? <var>home</var>.[[GetPrototypeOf]]().</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-global-environment-records-createimmutablebinding-n-s": {"num": "8.1.1.4.3", "title": "#sec-global-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-global-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-createimmutablebinding-n-s\">#sec-global-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateImmutableBinding for global Environment Records creates a new immutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If the Boolean argument <var>S</var> has the value <emu-val>true</emu-val> the new binding is marked as a strict binding.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>DclRec</var>.CreateImmutableBinding(<var>N</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hasbinding-n": {"num": "8.1.1.1.1", "title": "#sec-declarative-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hasbinding-n\">#sec-declarative-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasBinding for declarative Environment Records simply determines if the argument identifier is one of the identifiers bound by the record:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li>If <var>envRec</var> has a binding for the name that is the value of <var>N</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-getbindingvalue-n-s": {"num": "8.1.1.4.6", "title": "#sec-global-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-global-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-getbindingvalue-n-s\">#sec-global-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method GetBindingValue for global Environment Records returns the value of its bound identifier whose name is the value of the argument <var>N</var>. If the binding is an uninitialized binding throw a <emu-val>ReferenceError</emu-val> exception. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by the value of the Boolean argument <var>S</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.GetBindingValue(<var>N</var>, <var>S</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.GetBindingValue(<var>N</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-setmutablebinding-n-v-s": {"num": "8.1.1.1.5", "title": "#sec-declarative-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">#sec-declarative-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method SetMutableBinding for declarative Environment Records attempts to change the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A binding for <var>N</var> normally already exists, but in rare cases it may not. If the binding is an immutable binding, a <emu-val>TypeError</emu-val> is thrown if <var>S</var> is <emu-val>true</emu-val>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li id=\"step-setmutablebinding-missing-binding\">If <var>envRec</var> does not have a binding for <var>N</var>, then<ol><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Perform <var>envRec</var>.CreateMutableBinding(<var>N</var>, <emu-val>true</emu-val>).</li><li>Perform <var>envRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></li><li>If the binding for <var>N</var> in <var>envRec</var> is a strict binding, set <var>S</var> to <emu-val>true</emu-val>.</li><li>If the binding for <var>N</var> in <var>envRec</var> has not yet been initialized, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Else if the binding for <var>N</var> in <var>envRec</var> is a mutable binding, change its bound value to <var>V</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is an attempt to change the value of an immutable binding.</li><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>An example of ECMAScript code that results in a missing binding at step <emu-xref href=\"#step-setmutablebinding-missing-binding\"><a href=\"#step-setmutablebinding-missing-binding\" class=\"excluded-xref\" excluded-id=\"step-setmutablebinding-missing-binding\">#step-setmutablebinding-missing-binding</a></emu-xref> is:</p>\n            <pre><code class=\"javascript hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">f</span>(<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-built_in\">eval</span>(<span class=\"hljs-string\">\"var x; x = (delete x, 0);\"</span>); }</code></pre>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-withbaseobject": {"num": "8.1.1.2.10", "title": "#sec-object-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-object-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-withbaseobject\">#sec-object-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>Object Environment Records return <emu-val>undefined</emu-val> as their WithBaseObject unless their <var>withEnvironment</var> flag is <emu-val>true</emu-val>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>true</emu-val>, return the binding object for <var>envRec</var>.</li><li>Otherwise, return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-haslexicaldeclaration": {"num": "8.1.1.4.13", "title": "#sec-haslexicaldeclaration HasLexicalDeclaration ( N )", "html": "<emu-clause id=\"sec-haslexicaldeclaration\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-haslexicaldeclaration\">#sec-haslexicaldeclaration</span> HasLexicalDeclaration ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasLexicalDeclaration for global Environment Records determines if the argument identifier has a binding in this record that was created using a lexical declaration such as a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>Return <var>DclRec</var>.HasBinding(<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-withbaseobject": {"num": "8.1.1.1.10", "title": "#sec-declarative-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-declarative-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-withbaseobject\">#sec-declarative-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>Declarative Environment Records always return <emu-val>undefined</emu-val> as their WithBaseObject.</p>\n          <emu-alg><ol><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-hasvardeclaration": {"num": "8.1.1.4.12", "title": "#sec-hasvardeclaration HasVarDeclaration ( N )", "html": "<emu-clause id=\"sec-hasvardeclaration\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasvardeclaration\">#sec-hasvardeclaration</span> HasVarDeclaration ( <var>N</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method HasVarDeclaration for global Environment Records determines if the argument identifier has a binding in this record that was created using a <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt> or a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>:</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> contains <var>N</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-module-environment-records-getbindingvalue-n-s": {"num": "8.1.1.5.1", "title": "#sec-module-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-module-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-getbindingvalue-n-s\">#sec-module-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method GetBindingValue for module Environment Records returns the value of its bound identifier whose name is the value of the argument <var>N</var>. However, if the binding is an indirect binding the value of the target binding is returned. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown.</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>S</var> is <emu-val>true</emu-val>.</li><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for <var>N</var>.</li><li>If the binding for <var>N</var> is an indirect binding, then<ol><li>Let <var>M</var> and <var>N2</var> be the indirection values provided when this binding for <var>N</var> was created.</li><li>Let <var>targetEnv</var> be <var>M</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-val>undefined</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>N2</var>, <emu-val>true</emu-val>).</li></ol></li><li>If the binding for <var>N</var> in <var>envRec</var> is an uninitialized binding, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return the value currently bound to <var>N</var> in <var>envRec</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p><var>S</var> will always be <emu-val>true</emu-val> because a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is always <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hasthisbinding": {"num": "8.1.1.1.8", "title": "#sec-declarative-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-declarative-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hasthisbinding\">#sec-declarative-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>Regular declarative Environment Records do not provide a <code>this</code> binding.</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-initializebinding-n-v": {"num": "8.1.1.4.4", "title": "#sec-global-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-global-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-initializebinding-n-v\">#sec-global-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method InitializeBinding for global Environment Records is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If the binding exists, it must be in the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref>.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-createmutablebinding-n-d": {"num": "8.1.1.1.2", "title": "#sec-declarative-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-declarative-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createmutablebinding-n-d\">#sec-declarative-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateMutableBinding for declarative Environment Records creates a new mutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If Boolean argument <var>D</var> has the value <emu-val>true</emu-val> the new binding is marked as being subject to deletion.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li>Create a mutable binding in <var>envRec</var> for <var>N</var> and record that it is uninitialized. If <var>D</var> is <emu-val>true</emu-val>, record that the newly created binding may be deleted by a subsequent DeleteBinding call.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-createimmutablebinding-n-s": {"num": "8.1.1.2.3", "title": "#sec-object-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createimmutablebinding-n-s\">#sec-object-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateImmutableBinding is never used within this specification in association with object Environment Records.</p>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-withbaseobject": {"num": "8.1.1.4.10", "title": "#sec-global-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-global-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-withbaseobject\">#sec-global-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>Global Environment Records always return <emu-val>undefined</emu-val> as their WithBaseObject.</p>\n          <emu-alg><ol><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-initializebinding-n-v": {"num": "8.1.1.2.4", "title": "#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-object-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-initializebinding-n-v\">#sec-object-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method InitializeBinding for object Environment Records is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> for which the method was invoked.</li><li>Return ? <var>envRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>In this specification, all uses of CreateMutableBinding for object Environment Records are immediately followed by a call to InitializeBinding for the same name. Hence, this specification does not explicitly track the initialization state of bindings in object Environment Records.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-createglobalvarbinding": {"num": "8.1.1.4.17", "title": "#sec-createglobalvarbinding CreateGlobalVarBinding ( N, D )", "html": "<emu-clause id=\"sec-createglobalvarbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalvarbinding\">#sec-createglobalvarbinding</span> CreateGlobalVarBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The concrete <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> method CreateGlobalVarBinding for global Environment Records creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is reused and assumed to be initialized.</p>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>Let <var>extensible</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>hasProperty</var> is <emu-val>false</emu-val> and <var>extensible</var> is <emu-val>true</emu-val>, then<ol><li>Perform ? <var>ObjRec</var>.CreateMutableBinding(<var>N</var>, <var>D</var>).</li><li>Perform ? <var>ObjRec</var>.InitializeBinding(<var>N</var>, <emu-val>undefined</emu-val>).</li></ol></li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-function-environment-records-getthisbinding": {"num": "8.1.1.3.4", "title": "#sec-function-environment-records-getthisbinding GetThisBinding ( )", "html": "<emu-clause id=\"sec-function-environment-records-getthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records-getthisbinding\">#sec-function-environment-records-getthisbinding</span> GetThisBinding ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.[[ThisBindingStatus]] is not <emu-const>lexical</emu-const>.</li><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>uninitialized</emu-const>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return <var>envRec</var>.[[ThisValue]].</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-getthisbinding": {"num": "8.1.1.4.11", "title": "#sec-global-environment-records-getthisbinding GetThisBinding ( )", "html": "<emu-clause id=\"sec-global-environment-records-getthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-getthisbinding\">#sec-global-environment-records-getthisbinding</span> GetThisBinding ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> for which the method was invoked.</li><li>Return <var>envRec</var>.[[GlobalThisValue]].</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-bindthisvalue": {"num": "8.1.1.3.1", "title": "#sec-bindthisvalue BindThisValue ( V )", "html": "<emu-clause id=\"sec-bindthisvalue\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bindthisvalue\">#sec-bindthisvalue</span> BindThisValue ( <var>V</var> )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.[[ThisBindingStatus]] is not <emu-const>lexical</emu-const>.</li><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>initialized</emu-const>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Set <var>envRec</var>.[[ThisValue]] to <var>V</var>.</li><li>Set <var>envRec</var>.[[ThisBindingStatus]] to <emu-const>initialized</emu-const>.</li><li>Return <var>V</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-function-environment-records-hassuperbinding": {"num": "8.1.1.3.3", "title": "#sec-function-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-function-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records-hassuperbinding\">#sec-function-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <emu-alg><ol><li>Let <var>envRec</var> be the <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> for which the method was invoked.</li><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>lexical</emu-const>, return <emu-val>false</emu-val>.</li><li>If <var>envRec</var>.[[FunctionObject]].[[HomeObject]] has the value <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>; otherwise, return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}}, "figData": {}}, "to": {"secList": ["sec-module-environment-records-hasthisbinding", "sec-global-environment-records-createmutablebinding-n-d", "sec-object-environment-records-hasbinding-n", "sec-hasrestrictedglobalproperty", "sec-object-environment-records-hasthisbinding", "sec-declarative-environment-records-getbindingvalue-n-s", "sec-global-environment-records-setmutablebinding-n-v-s", "sec-object-environment-records-hassuperbinding", "sec-declarative-environment-records-createimmutablebinding-n-s", "sec-candeclareglobalvar", "sec-module-environment-records-getthisbinding", "sec-function-environment-records-hasthisbinding", "sec-declarative-environment-records-hassuperbinding", "sec-object-environment-records-setmutablebinding-n-v-s", "sec-createimportbinding", "sec-declarative-environment-records-deletebinding-n", "sec-object-environment-records-getbindingvalue-n-s", "sec-module-environment-records-deletebinding-n", "sec-object-environment-records-deletebinding-n", "sec-global-environment-records-hassuperbinding", "sec-global-environment-records-hasbinding-n", "sec-candeclareglobalfunction", "sec-declarative-environment-records-initializebinding-n-v", "sec-global-environment-records-hasthisbinding", "sec-createglobalfunctionbinding", "sec-global-environment-records-deletebinding-n", "sec-object-environment-records-createmutablebinding-n-d", "sec-getsuperbase", "sec-global-environment-records-createimmutablebinding-n-s", "sec-declarative-environment-records-hasbinding-n", "sec-global-environment-records-getbindingvalue-n-s", "sec-declarative-environment-records-setmutablebinding-n-v-s", "sec-object-environment-records-withbaseobject", "sec-haslexicaldeclaration", "sec-declarative-environment-records-withbaseobject", "sec-hasvardeclaration", "sec-module-environment-records-getbindingvalue-n-s", "sec-declarative-environment-records-hasthisbinding", "sec-global-environment-records-initializebinding-n-v", "sec-declarative-environment-records-createmutablebinding-n-d", "sec-object-environment-records-createimmutablebinding-n-s", "sec-global-environment-records-withbaseobject", "sec-object-environment-records-initializebinding-n-v", "sec-createglobalvarbinding", "sec-function-environment-records-getthisbinding", "sec-global-environment-records-getthisbinding", "sec-bindthisvalue", "sec-function-environment-records-hassuperbinding"], "secData": {"sec-module-environment-records-hasthisbinding": {"num": "8.1.1.5.3", "title": "#sec-module-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-module-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-hasthisbinding\">#sec-module-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>The HasThisBinding concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Module Environment Records always provide a <code>this</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-createmutablebinding-n-d": {"num": "8.1.1.4.2", "title": "#sec-global-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-global-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-createmutablebinding-n-d\">#sec-global-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates a new mutable binding for the name <var>N</var> that is uninitialized. The binding is created in the associated DeclarativeRecord. A binding for <var>N</var> must not already exist in the DeclarativeRecord. If <var>D</var> has the value <emu-val>true</emu-val>, the new binding is marked as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>DclRec</var>.CreateMutableBinding(<var>N</var>, <var>D</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hasbinding-n": {"num": "8.1.1.2.1", "title": "#sec-object-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasbinding-n\">#sec-object-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if its associated binding object has a property whose name is the value of the argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>foundBinding</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>foundBinding</var> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>false</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>unscopables</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <emu-xref href=\"#sec-well-known-symbols\"><a href=\"#sec-well-known-symbols\">@@unscopables</a></emu-xref>).</li><li>If <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>unscopables</var>) is Object, then<ol><li>Let <var>blocked</var> be !&#160;<emu-xref aoid=\"ToBoolean\"><a href=\"#sec-toboolean\">ToBoolean</a></emu-xref>(? <emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>unscopables</var>, <var>N</var>)).</li><li>If <var>blocked</var> is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-hasrestrictedglobalproperty": {"num": "8.1.1.4.14", "title": "#sec-hasrestrictedglobalproperty HasRestrictedGlobalProperty ( N )", "html": "<emu-clause id=\"sec-hasrestrictedglobalproperty\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasrestrictedglobalproperty\">#sec-hasrestrictedglobalproperty</span> HasRestrictedGlobalProperty ( <var>N</var> )</h1>\n          <p>The HasRestrictedGlobalProperty concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is the name of a property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that must not be shadowed by a global lexical binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>.</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Properties may exist upon a <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> that were directly created rather than being declared using a var or function declaration. A global lexical binding may not be created that has the same name as a non-configurable property of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. The global property <emu-val>\"undefined\"</emu-val> is an example of such a property.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hasthisbinding": {"num": "8.1.1.2.8", "title": "#sec-object-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-object-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hasthisbinding\">#sec-object-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>The HasThisBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Object Environment Records do not provide a <code>this</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-getbindingvalue-n-s": {"num": "8.1.1.1.6", "title": "#sec-declarative-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-getbindingvalue-n-s\">#sec-declarative-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown, regardless of the value of <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for <var>N</var>.</li><li>If the binding for <var>N</var> in <var>envRec</var> is an uninitialized binding, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return the value currently bound to <var>N</var> in <var>envRec</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-setmutablebinding-n-v-s": {"num": "8.1.1.4.5", "title": "#sec-global-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-global-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-setmutablebinding-n-v-s\">#sec-global-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to change the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. If the binding is an immutable binding, a <emu-val>TypeError</emu-val> is thrown if <var>S</var> is <emu-val>true</emu-val>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <var>S</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-hassuperbinding": {"num": "8.1.1.2.9", "title": "#sec-object-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-object-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-hassuperbinding\">#sec-object-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <p>The HasSuperBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Object Environment Records do not provide a <code>super</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-createimmutablebinding-n-s": {"num": "8.1.1.1.3", "title": "#sec-declarative-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createimmutablebinding-n-s\">#sec-declarative-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The CreateImmutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It creates a new immutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>S</var> has the value <emu-val>true</emu-val>, the new binding is marked as a strict binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li>Create an immutable binding in <var>envRec</var> for <var>N</var> and record that it is uninitialized. If <var>S</var> is <emu-val>true</emu-val>, record that the newly created binding is a strict binding.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalvar": {"num": "8.1.1.4.15", "title": "#sec-candeclareglobalvar CanDeclareGlobalVar ( N )", "html": "<emu-clause id=\"sec-candeclareglobalvar\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalvar\">#sec-candeclareglobalvar</span> CanDeclareGlobalVar ( <var>N</var> )</h1>\n          <p>The CanDeclareGlobalVar concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if a corresponding CreateGlobalVarBinding call would succeed if called for the same argument <var>N</var>. Redundant var declarations and var declarations for pre-existing <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref> properties are allowed. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>hasProperty</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-module-environment-records-getthisbinding": {"num": "8.1.1.5.4", "title": "#sec-module-environment-records-getthisbinding GetThisBinding ( )", "html": "<emu-clause id=\"sec-module-environment-records-getthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-getthisbinding\">#sec-module-environment-records-getthisbinding</span> GetThisBinding ( )</h1>\n          <p>The GetThisBinding concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-function-environment-records-hasthisbinding": {"num": "8.1.1.3.2", "title": "#sec-function-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-function-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records-hasthisbinding\">#sec-function-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>The HasThisBinding concrete method of a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>lexical</emu-const>, return <emu-val>false</emu-val>; otherwise, return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hassuperbinding": {"num": "8.1.1.1.9", "title": "#sec-declarative-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-declarative-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hassuperbinding\">#sec-declarative-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <p>The HasSuperBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>A regular <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> (i.e., one that is neither a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> nor a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>) does not provide a <code>super</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-setmutablebinding-n-v-s": {"num": "8.1.1.2.5", "title": "#sec-object-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-object-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-setmutablebinding-n-v-s\">#sec-object-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to set the value of the <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object's property whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>stillExists</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>stillExists</var> is <emu-val>false</emu-val> and <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>bindings</var>, <var>N</var>, <var>V</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-createimportbinding": {"num": "8.1.1.5.5", "title": "#sec-createimportbinding CreateImportBinding ( N, M, N2 )", "html": "<emu-clause id=\"sec-createimportbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createimportbinding\">#sec-createimportbinding</span> CreateImportBinding ( <var>N</var>, <var>M</var>, <var>N2</var> )</h1>\n          <p>The CreateImportBinding concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>M</var> (a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>), and <var>N2</var> (a String). It creates a new initialized immutable indirect binding for the name <var>N</var>. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. <var>N2</var> is the name of a binding that exists in <var>M</var>'s <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>. Accesses to the value of the new binding will indirectly access the bound value of the target binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>M</var> is a <emu-xref href=\"#sec-abstract-module-records\"><a href=\"#sec-abstract-module-records\">Module Record</a></emu-xref>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: When <var>M</var>.[[Environment]] is instantiated it will have a direct binding for <var>N2</var>.</li><li>Create an immutable indirect binding in <var>envRec</var> for <var>N</var> that references <var>M</var> and <var>N2</var> as its target binding and record that the binding is initialized.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-declarative-environment-records-deletebinding-n": {"num": "8.1.1.1.7", "title": "#sec-declarative-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-deletebinding-n\">#sec-declarative-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that have been explicitly designated as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for the name that is the value of <var>N</var>.</li><li>If the binding for <var>N</var> in <var>envRec</var> cannot be deleted, return <emu-val>false</emu-val>.</li><li>Remove the binding for <var>N</var> from <var>envRec</var>.</li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-getbindingvalue-n-s": {"num": "8.1.1.2.6", "title": "#sec-object-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-getbindingvalue-n-s\">#sec-object-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its associated binding object's property whose name is the String value of the argument identifier <var>N</var>. The property should already exist but if it does not the result depends upon <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Let <var>value</var> be ?&#160;<emu-xref aoid=\"HasProperty\"><a href=\"#sec-hasproperty\">HasProperty</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li><li>If <var>value</var> is <emu-val>false</emu-val>, then<ol><li>If <var>S</var> is <emu-val>false</emu-val>, return the value <emu-val>undefined</emu-val>; otherwise throw a <emu-val>ReferenceError</emu-val> exception.</li></ol></li><li>Return ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>bindings</var>, <var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-module-environment-records-deletebinding-n": {"num": "8.1.1.5.2", "title": "#sec-module-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-module-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-deletebinding-n\">#sec-module-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> is never used within this specification.</p>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Module Environment Records are only used within strict code and an <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rule prevents the delete operator, in strict code, from being applied to a <emu-xref href=\"#sec-reference-record-specification-type\"><a href=\"#sec-reference-record-specification-type\">Reference Record</a></emu-xref> that would resolve to a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> binding. See <emu-xref href=\"#sec-delete-operator-static-semantics-early-errors\"><a href=\"#sec-delete-operator-static-semantics-early-errors\" class=\"excluded-xref\" excluded-id=\"sec-delete-operator-static-semantics-early-errors\">#sec-delete-operator-static-semantics-early-errors</a></emu-xref>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-deletebinding-n": {"num": "8.1.1.2.7", "title": "#sec-object-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-object-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-deletebinding-n\">#sec-object-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that correspond to properties of the environment object whose [[Configurable]] attribute have the value <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Return ? <var>bindings</var>.[[Delete]](<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-hassuperbinding": {"num": "8.1.1.4.9", "title": "#sec-global-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-global-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-hassuperbinding\">#sec-global-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <p>The HasSuperBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global Environment Records do not provide a <code>super</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-hasbinding-n": {"num": "8.1.1.4.1", "title": "#sec-global-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-global-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-hasbinding-n\">#sec-global-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is one of the identifiers bound by the record. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.HasBinding(<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-candeclareglobalfunction": {"num": "8.1.1.4.16", "title": "#sec-candeclareglobalfunction CanDeclareGlobalFunction ( N )", "html": "<emu-clause id=\"sec-candeclareglobalfunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-candeclareglobalfunction\">#sec-candeclareglobalfunction</span> CanDeclareGlobalFunction ( <var>N</var> )</h1>\n          <p>The CanDeclareGlobalFunction concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if a corresponding CreateGlobalFunctionBinding call would succeed if called for the same argument <var>N</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val>, return ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>If <emu-xref aoid=\"IsDataDescriptor\"><a href=\"#sec-isdatadescriptor\">IsDataDescriptor</a></emu-xref>(<var>existingProp</var>) is <emu-val>true</emu-val> and <var>existingProp</var> has attribute values { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val> }, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-initializebinding-n-v": {"num": "8.1.1.1.4", "title": "#sec-declarative-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-declarative-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-initializebinding-n-v\">#sec-declarative-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The InitializeBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> must have an uninitialized binding for <var>N</var>.</li><li>Set the bound value for <var>N</var> in <var>envRec</var> to <var>V</var>.</li><li><emu-not-ref>Record</emu-not-ref> that the binding for <var>N</var> in <var>envRec</var> has been initialized.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-hasthisbinding": {"num": "8.1.1.4.8", "title": "#sec-global-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-global-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-hasthisbinding\">#sec-global-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>The HasThisBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global Environment Records always provide a <code>this</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-createglobalfunctionbinding": {"num": "8.1.1.4.18", "title": "#sec-createglobalfunctionbinding CreateGlobalFunctionBinding ( N, V, D )", "html": "<emu-clause id=\"sec-createglobalfunctionbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalfunctionbinding\">#sec-createglobalfunctionbinding</span> CreateGlobalFunctionBinding ( <var>N</var>, <var>V</var>, <var>D</var> )</h1>\n          <p>The CreateGlobalFunctionBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>D</var> (a Boolean). It creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is replaced. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ? <var>globalObject</var>.[[GetOwnProperty]](<var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>undefined</emu-val> or <var>existingProp</var>.[[Configurable]] is <emu-val>true</emu-val>, then<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }.</li></ol></li><li>Else,<ol><li>Let <var>desc</var> be the PropertyDescriptor { [[Value]]: <var>V</var> }.</li></ol></li><li>Perform ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>desc</var>).</li><li id=\"step-createglobalfunctionbinding-set\">Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>globalObject</var>, <var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Global function declarations are always represented as own properties of the <emu-xref href=\"#sec-global-object\"><a href=\"#sec-global-object\">global object</a></emu-xref>. If possible, an existing own property is reconfigured to have a standard set of attribute values. Step <emu-xref href=\"#step-createglobalfunctionbinding-set\"><a href=\"#step-createglobalfunctionbinding-set\" class=\"excluded-xref\" excluded-id=\"step-createglobalfunctionbinding-set\">#step-createglobalfunctionbinding-set</a></emu-xref> is equivalent to what calling the InitializeBinding concrete method would do and if <var>globalObject</var> is a Proxy will produce the same sequence of Proxy trap calls.</p>\n          </div></emu-note>\n        </emu-clause>\n      "}, "sec-global-environment-records-deletebinding-n": {"num": "8.1.1.4.7", "title": "#sec-global-environment-records-deletebinding-n DeleteBinding ( N )", "html": "<emu-clause id=\"sec-global-environment-records-deletebinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-deletebinding-n\">#sec-global-environment-records-deletebinding-n</span> DeleteBinding ( <var>N</var> )</h1>\n          <p>The DeleteBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It can only delete bindings that have been explicitly designated as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.DeleteBinding(<var>N</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>existingProp</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>If <var>existingProp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>status</var> be ? <var>ObjRec</var>.DeleteBinding(<var>N</var>).</li><li>If <var>status</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>varNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>N</var> is an element of <var>varNames</var>, remove that element from the <var>varNames</var>.</li></ol></li><li>Return <var>status</var>.</li></ol></li><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-createmutablebinding-n-d": {"num": "8.1.1.2.2", "title": "#sec-object-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-object-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createmutablebinding-n-d\">#sec-object-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates in an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>'s associated binding object a property whose name is the String value and initializes it to the value <emu-val>undefined</emu-val>. If <var>D</var> has the value <emu-val>true</emu-val>, the new property's [[Configurable]] attribute is set to <emu-val>true</emu-val>; otherwise it is set to <emu-val>false</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>bindings</var> be the binding object for <var>envRec</var>.</li><li>Return ?&#160;<emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>bindings</var>, <var>N</var>, PropertyDescriptor { [[Value]]: <emu-val>undefined</emu-val>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>D</var> }).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>Normally <var>envRec</var> will not have a binding for <var>N</var> but if it does, the semantics of <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref> may result in an existing binding being replaced or shadowed or cause an <emu-xref href=\"#sec-completion-record-specification-type\"><a href=\"#sec-completion-record-specification-type\">abrupt completion</a></emu-xref> to be returned.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-getsuperbase": {"num": "8.1.1.3.5", "title": "#sec-getsuperbase GetSuperBase ( )", "html": "<emu-clause id=\"sec-getsuperbase\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-getsuperbase\">#sec-getsuperbase</span> GetSuperBase ( )</h1>\n          <p>The GetSuperBase concrete method of a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>home</var> be <var>envRec</var>.[[FunctionObject]].[[HomeObject]].</li><li>If <var>home</var> has the value <emu-val>undefined</emu-val>, return <emu-val>undefined</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>home</var>) is Object.</li><li>Return ? <var>home</var>.[[GetPrototypeOf]]().</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-global-environment-records-createimmutablebinding-n-s": {"num": "8.1.1.4.3", "title": "#sec-global-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-global-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-createimmutablebinding-n-s\">#sec-global-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The CreateImmutableBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It creates a new immutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>S</var> has the value <emu-val>true</emu-val>, the new binding is marked as a strict binding. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li><li>Return <var>DclRec</var>.CreateImmutableBinding(<var>N</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hasbinding-n": {"num": "8.1.1.1.1", "title": "#sec-declarative-environment-records-hasbinding-n HasBinding ( N )", "html": "<emu-clause id=\"sec-declarative-environment-records-hasbinding-n\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hasbinding-n\">#sec-declarative-environment-records-hasbinding-n</span> HasBinding ( <var>N</var> )</h1>\n          <p>The HasBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier is one of the identifiers bound by the record. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>envRec</var> has a binding for the name that is the value of <var>N</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-getbindingvalue-n-s": {"num": "8.1.1.4.6", "title": "#sec-global-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-global-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-getbindingvalue-n-s\">#sec-global-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. If the binding is an uninitialized binding throw a <emu-val>ReferenceError</emu-val> exception. A property named <var>N</var> normally already exists but if it does not or is not currently writable, error handling is determined by <var>S</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.GetBindingValue(<var>N</var>, <var>S</var>).</li></ol></li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.GetBindingValue(<var>N</var>, <var>S</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-setmutablebinding-n-v-s": {"num": "8.1.1.1.5", "title": "#sec-declarative-environment-records-setmutablebinding-n-v-s SetMutableBinding ( N, V, S )", "html": "<emu-clause id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-setmutablebinding-n-v-s\">#sec-declarative-environment-records-setmutablebinding-n-v-s</span> SetMutableBinding ( <var>N</var>, <var>V</var>, <var>S</var> )</h1>\n          <p>The SetMutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String), <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>), and <var>S</var> (a Boolean). It attempts to change the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. A binding for <var>N</var> normally already exists, but in rare cases it may not. If the binding is an immutable binding, a <emu-val>TypeError</emu-val> is thrown if <var>S</var> is <emu-val>true</emu-val>. It performs the following steps when called:</p>\n          <emu-alg><ol><li id=\"step-setmutablebinding-missing-binding\">If <var>envRec</var> does not have a binding for <var>N</var>, then<ol><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Perform <var>envRec</var>.CreateMutableBinding(<var>N</var>, <emu-val>true</emu-val>).</li><li>Perform <var>envRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></li><li>If the binding for <var>N</var> in <var>envRec</var> is a strict binding, set <var>S</var> to <emu-val>true</emu-val>.</li><li>If the binding for <var>N</var> in <var>envRec</var> has not yet been initialized, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Else if the binding for <var>N</var> in <var>envRec</var> is a mutable binding, change its bound value to <var>V</var>.</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: This is an attempt to change the value of an immutable binding.</li><li>If <var>S</var> is <emu-val>true</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>An example of ECMAScript code that results in a missing binding at step <emu-xref href=\"#step-setmutablebinding-missing-binding\"><a href=\"#step-setmutablebinding-missing-binding\" class=\"excluded-xref\" excluded-id=\"step-setmutablebinding-missing-binding\">#step-setmutablebinding-missing-binding</a></emu-xref> is:</p>\n            <pre><code class=\"javascript hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">f</span>(<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-built_in\">eval</span>(<span class=\"hljs-string\">\"var x; x = (delete x, 0);\"</span>); }</code></pre>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-withbaseobject": {"num": "8.1.1.2.10", "title": "#sec-object-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-object-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-withbaseobject\">#sec-object-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>The WithBaseObject concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If the <var>withEnvironment</var> flag of <var>envRec</var> is <emu-val>true</emu-val>, return the binding object for <var>envRec</var>.</li><li>Otherwise, return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-haslexicaldeclaration": {"num": "8.1.1.4.13", "title": "#sec-haslexicaldeclaration HasLexicalDeclaration ( N )", "html": "<emu-clause id=\"sec-haslexicaldeclaration\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-haslexicaldeclaration\">#sec-haslexicaldeclaration</span> HasLexicalDeclaration ( <var>N</var> )</h1>\n          <p>The HasLexicalDeclaration concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier has a binding in this record that was created using a lexical declaration such as a <emu-nt><a href=\"#prod-LexicalDeclaration\">LexicalDeclaration</a></emu-nt> or a <emu-nt><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a></emu-nt>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>Return <var>DclRec</var>.HasBinding(<var>N</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-withbaseobject": {"num": "8.1.1.1.10", "title": "#sec-declarative-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-declarative-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-withbaseobject\">#sec-declarative-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>The WithBaseObject concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n      "}, "sec-hasvardeclaration": {"num": "8.1.1.4.12", "title": "#sec-hasvardeclaration HasVarDeclaration ( N )", "html": "<emu-clause id=\"sec-hasvardeclaration\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-hasvardeclaration\">#sec-hasvardeclaration</span> HasVarDeclaration ( <var>N</var> )</h1>\n          <p>The HasVarDeclaration concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>N</var> (a String). It determines if the argument identifier has a binding in this record that was created using a <emu-nt><a href=\"#prod-VariableStatement\">VariableStatement</a></emu-nt> or a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> contains <var>N</var>, return <emu-val>true</emu-val>.</li><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-module-environment-records-getbindingvalue-n-s": {"num": "8.1.1.5.1", "title": "#sec-module-environment-records-getbindingvalue-n-s GetBindingValue ( N, S )", "html": "<emu-clause id=\"sec-module-environment-records-getbindingvalue-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-module-environment-records-getbindingvalue-n-s\">#sec-module-environment-records-getbindingvalue-n-s</span> GetBindingValue ( <var>N</var>, <var>S</var> )</h1>\n          <p>The GetBindingValue concrete method of a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>S</var> (a Boolean). It returns the value of its bound identifier whose name is the value of the argument <var>N</var>. However, if the binding is an indirect binding the value of the target binding is returned. If the binding exists but is uninitialized a <emu-val>ReferenceError</emu-val> is thrown. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>S</var> is <emu-val>true</emu-val>.</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> has a binding for <var>N</var>.</li><li>If the binding for <var>N</var> is an indirect binding, then<ol><li>Let <var>M</var> and <var>N2</var> be the indirection values provided when this binding for <var>N</var> was created.</li><li>Let <var>targetEnv</var> be <var>M</var>.[[Environment]].</li><li>If <var>targetEnv</var> is <emu-val>undefined</emu-val>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return ? <var>targetEnv</var>.GetBindingValue(<var>N2</var>, <emu-val>true</emu-val>).</li></ol></li><li>If the binding for <var>N</var> in <var>envRec</var> is an uninitialized binding, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return the value currently bound to <var>N</var> in <var>envRec</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p><var>S</var> will always be <emu-val>true</emu-val> because a <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt> is always <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-hasthisbinding": {"num": "8.1.1.1.8", "title": "#sec-declarative-environment-records-hasthisbinding HasThisBinding ( )", "html": "<emu-clause id=\"sec-declarative-environment-records-hasthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-hasthisbinding\">#sec-declarative-environment-records-hasthisbinding</span> HasThisBinding ( )</h1>\n          <p>The HasThisBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>A regular <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> (i.e., one that is neither a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> nor a <emu-xref href=\"#sec-module-environment-records\"><a href=\"#sec-module-environment-records\">module Environment Record</a></emu-xref>) does not provide a <code>this</code> binding.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-initializebinding-n-v": {"num": "8.1.1.4.4", "title": "#sec-global-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-global-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-initializebinding-n-v\">#sec-global-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The InitializeBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. An uninitialized binding for <var>N</var> must already exist. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>DclRec</var> be <var>envRec</var>.[[DeclarativeRecord]].</li><li>If <var>DclRec</var>.HasBinding(<var>N</var>) is <emu-val>true</emu-val>, then<ol><li>Return <var>DclRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li></ol></li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: If the binding exists, it must be in the <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref>.</li><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Return ? <var>ObjRec</var>.InitializeBinding(<var>N</var>, <var>V</var>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-declarative-environment-records-createmutablebinding-n-d": {"num": "8.1.1.1.2", "title": "#sec-declarative-environment-records-createmutablebinding-n-d CreateMutableBinding ( N, D )", "html": "<emu-clause id=\"sec-declarative-environment-records-createmutablebinding-n-d\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-declarative-environment-records-createmutablebinding-n-d\">#sec-declarative-environment-records-createmutablebinding-n-d</span> CreateMutableBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateMutableBinding concrete method of a <emu-xref href=\"#sec-declarative-environment-records\"><a href=\"#sec-declarative-environment-records\">declarative Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates a new mutable binding for the name <var>N</var> that is uninitialized. A binding must not already exist in this <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for <var>N</var>. If <var>D</var> has the value <emu-val>true</emu-val>, the new binding is marked as being subject to deletion. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var> does not already have a binding for <var>N</var>.</li><li>Create a mutable binding in <var>envRec</var> for <var>N</var> and record that it is uninitialized. If <var>D</var> is <emu-val>true</emu-val>, record that the newly created binding may be deleted by a subsequent DeleteBinding call.</li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-createimmutablebinding-n-s": {"num": "8.1.1.2.3", "title": "#sec-object-environment-records-createimmutablebinding-n-s CreateImmutableBinding ( N, S )", "html": "<emu-clause id=\"sec-object-environment-records-createimmutablebinding-n-s\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-createimmutablebinding-n-s\">#sec-object-environment-records-createimmutablebinding-n-s</span> CreateImmutableBinding ( <var>N</var>, <var>S</var> )</h1>\n          <p>The CreateImmutableBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> is never used within this specification.</p>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-withbaseobject": {"num": "8.1.1.4.10", "title": "#sec-global-environment-records-withbaseobject WithBaseObject ( )", "html": "<emu-clause id=\"sec-global-environment-records-withbaseobject\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-withbaseobject\">#sec-global-environment-records-withbaseobject</span> WithBaseObject ( )</h1>\n          <p>The WithBaseObject concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <emu-val>undefined</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-object-environment-records-initializebinding-n-v": {"num": "8.1.1.2.4", "title": "#sec-object-environment-records-initializebinding-n-v InitializeBinding ( N, V )", "html": "<emu-clause id=\"sec-object-environment-records-initializebinding-n-v\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-object-environment-records-initializebinding-n-v\">#sec-object-environment-records-initializebinding-n-v</span> InitializeBinding ( <var>N</var>, <var>V</var> )</h1>\n          <p>The InitializeBinding concrete method of an <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It is used to set the bound value of the current binding of the identifier whose name is the value of the argument <var>N</var> to the value of argument <var>V</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return ? <var>envRec</var>.SetMutableBinding(<var>N</var>, <var>V</var>, <emu-val>false</emu-val>).</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>In this specification, all uses of CreateMutableBinding for object Environment Records are immediately followed by a call to InitializeBinding for the same name. Hence, this specification does not explicitly track the initialization state of bindings in object Environment Records.</p>\n          </div></emu-note>\n        </emu-clause>\n\n        "}, "sec-createglobalvarbinding": {"num": "8.1.1.4.17", "title": "#sec-createglobalvarbinding CreateGlobalVarBinding ( N, D )", "html": "<emu-clause id=\"sec-createglobalvarbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createglobalvarbinding\">#sec-createglobalvarbinding</span> CreateGlobalVarBinding ( <var>N</var>, <var>D</var> )</h1>\n          <p>The CreateGlobalVarBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes arguments <var>N</var> (a String) and <var>D</var> (a Boolean). It creates and initializes a mutable binding in the associated <emu-xref href=\"#sec-object-environment-records\"><a href=\"#sec-object-environment-records\">object Environment Record</a></emu-xref> and records the bound name in the associated [[VarNames]] <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>. If a binding already exists, it is reused and assumed to be initialized. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Let <var>ObjRec</var> be <var>envRec</var>.[[ObjectRecord]].</li><li>Let <var>globalObject</var> be the binding object for <var>ObjRec</var>.</li><li>Let <var>hasProperty</var> be ?&#160;<emu-xref aoid=\"HasOwnProperty\"><a href=\"#sec-hasownproperty\">HasOwnProperty</a></emu-xref>(<var>globalObject</var>, <var>N</var>).</li><li>Let <var>extensible</var> be ?&#160;<emu-xref aoid=\"IsExtensible\"><a href=\"#sec-isextensible-o\">IsExtensible</a></emu-xref>(<var>globalObject</var>).</li><li>If <var>hasProperty</var> is <emu-val>false</emu-val> and <var>extensible</var> is <emu-val>true</emu-val>, then<ol><li>Perform ? <var>ObjRec</var>.CreateMutableBinding(<var>N</var>, <var>D</var>).</li><li>Perform ? <var>ObjRec</var>.InitializeBinding(<var>N</var>, <emu-val>undefined</emu-val>).</li></ol></li><li>Let <var>varDeclaredNames</var> be <var>envRec</var>.[[VarNames]].</li><li>If <var>varDeclaredNames</var> does not contain <var>N</var>, then<ol><li>Append <var>N</var> to <var>varDeclaredNames</var>.</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-function-environment-records-getthisbinding": {"num": "8.1.1.3.4", "title": "#sec-function-environment-records-getthisbinding GetThisBinding ( )", "html": "<emu-clause id=\"sec-function-environment-records-getthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records-getthisbinding\">#sec-function-environment-records-getthisbinding</span> GetThisBinding ( )</h1>\n          <p>The GetThisBinding concrete method of a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.[[ThisBindingStatus]] is not <emu-const>lexical</emu-const>.</li><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>uninitialized</emu-const>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Return <var>envRec</var>.[[ThisValue]].</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-global-environment-records-getthisbinding": {"num": "8.1.1.4.11", "title": "#sec-global-environment-records-getthisbinding GetThisBinding ( )", "html": "<emu-clause id=\"sec-global-environment-records-getthisbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-global-environment-records-getthisbinding\">#sec-global-environment-records-getthisbinding</span> GetThisBinding ( )</h1>\n          <p>The GetThisBinding concrete method of a <emu-xref href=\"#sec-global-environment-records\"><a href=\"#sec-global-environment-records\">global Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>Return <var>envRec</var>.[[GlobalThisValue]].</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-bindthisvalue": {"num": "8.1.1.3.1", "title": "#sec-bindthisvalue BindThisValue ( V )", "html": "<emu-clause id=\"sec-bindthisvalue\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-bindthisvalue\">#sec-bindthisvalue</span> BindThisValue ( <var>V</var> )</h1>\n          <p>The BindThisValue concrete method of a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> <var>envRec</var> takes argument <var>V</var> (an <emu-xref href=\"#sec-ecmascript-language-types\"><a href=\"#sec-ecmascript-language-types\">ECMAScript language value</a></emu-xref>). It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>envRec</var>.[[ThisBindingStatus]] is not <emu-const>lexical</emu-const>.</li><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>initialized</emu-const>, throw a <emu-val>ReferenceError</emu-val> exception.</li><li>Set <var>envRec</var>.[[ThisValue]] to <var>V</var>.</li><li>Set <var>envRec</var>.[[ThisBindingStatus]] to <emu-const>initialized</emu-const>.</li><li>Return <var>V</var>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}, "sec-function-environment-records-hassuperbinding": {"num": "8.1.1.3.3", "title": "#sec-function-environment-records-hassuperbinding HasSuperBinding ( )", "html": "<emu-clause id=\"sec-function-environment-records-hassuperbinding\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-environment-records-hassuperbinding\">#sec-function-environment-records-hassuperbinding</span> HasSuperBinding ( )</h1>\n          <p>The HasSuperBinding concrete method of a <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> <var>envRec</var> takes no arguments. It performs the following steps when called:</p>\n          <emu-alg><ol><li>If <var>envRec</var>.[[ThisBindingStatus]] is <emu-const>lexical</emu-const>, return <emu-val>false</emu-val>.</li><li>If <var>envRec</var>.[[FunctionObject]].[[HomeObject]] has the value <emu-val>undefined</emu-val>, return <emu-val>false</emu-val>; otherwise, return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        </emu-clause>\n\n        "}}, "figData": {}}}