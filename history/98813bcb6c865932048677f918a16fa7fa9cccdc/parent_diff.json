{"from": {"secList": ["sec-numerictorawbytes", "sec-scripts-and-modules", "sec-abstract-operations-for-the-memory-model", "sec-string.prototype.matchall", "sec-runtime-semantics-arrayaccumulation", "sec-entercriticalsection"], "secData": {"sec-numerictorawbytes": {"num": "24.1.1.11", "title": "#sec-numerictorawbytes NumericToRawBytes ( type, value, isLittleEndian )", "html": "<emu-clause id=\"sec-numerictorawbytes\" aoid=\"NumericToRawBytes\" oldids=\"sec-numbertorawbytes\">\n        <span id=\"sec-numbertorawbytes\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numerictorawbytes\">#sec-numerictorawbytes</span> NumericToRawBytes ( <var>type</var>, <var>value</var>, <var>isLittleEndian</var> )</h1>\n        <p>The abstract operation NumericToRawBytes takes three parameters, a String <var>type</var>, a BigInt or a Number <var>value</var>, and a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li>If <var>type</var> is <code>\"Float32\"</code>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the 4 bytes that are the result of converting <var>value</var> to IEEE 754-2008 binary32 format using roundTiesToEven mode. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are arranged in big endian order. Otherwise, the bytes are arranged in little endian order. If <var>value</var> is <emu-val>NaN</emu-val>, <var>rawBytes</var> may be set to any implementation chosen IEEE 754-2008 binary32 format Not-a-Number encoding. An implementation must always choose the same encoding for each implementation distinguishable <emu-val>NaN</emu-val> value.</li></ol></li><li>Else if <var>type</var> is <code>\"Float64\"</code>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the 8 bytes that are the IEEE 754-2008 binary64 format encoding of <var>value</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are arranged in big endian order. Otherwise, the bytes are arranged in little endian order. If <var>value</var> is <emu-val>NaN</emu-val>, <var>rawBytes</var> may be set to any implementation chosen IEEE 754-2008 binary64 format Not-a-Number encoding. An implementation must always choose the same encoding for each implementation distinguishable <emu-val>NaN</emu-val> value.</li></ol></li><li>Else,<ol><li>Let <var>n</var> be the Element Size specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>Let <var>convOp</var> be the abstract operation named in the Conversion Operation column in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>Let <var>intValue</var> be <var>convOp</var>(<var>value</var>) treated as a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref>, whether the result is a BigInt or Number.</li><li>If <var>intValue</var> &#8805; 0, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <var>n</var>-byte binary encoding of <var>intValue</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are ordered in big endian order. Otherwise, the bytes are ordered in little endian order.</li></ol></li><li>Else,<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <var>n</var>-byte binary 2's complement encoding of <var>intValue</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are ordered in big endian order. Otherwise, the bytes are ordered in little endian order.</li></ol></li></ol></li><li>Return <var>rawBytes</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08c8df8e\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"98de0f78\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"52f49b96\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"029ec31e\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"75ddb725\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b8d22333\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a2f22cc\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f35b66f8\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cdf0063c\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"835252f8\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"6f18d3a2\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ac457a7a\"><emu-t>from</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5292cb55\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06cca55e\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"696b8d6e\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6bc99b97\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d298e1ba\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ae276654\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e2a585b6\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann><emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"29b1414e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"c16c88fe\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-abstract-operations-for-the-memory-model": {"num": "27.5", "title": "#sec-abstract-operations-for-the-memory-model Abstract Operations for the Memory Model", "html": "<emu-clause id=\"sec-abstract-operations-for-the-memory-model\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-the-memory-model\">#sec-abstract-operations-for-the-memory-model</span> Abstract Operations for the Memory Model</h1>\n    <div id=\"excluded-sec-event-set\"><h1><span class=\"secnum\">27.5.1</span>#sec-event-set EventSet ( execution )</h1>...</div><div id=\"excluded-sec-sharedatablockeventset\"><h1><span class=\"secnum\">27.5.2</span>#sec-sharedatablockeventset SharedDataBlockEventSet ( execution )</h1>...</div><div id=\"excluded-sec-hosteventset\"><h1><span class=\"secnum\">27.5.3</span>#sec-hosteventset HostEventSet ( execution )</h1>...</div><div id=\"excluded-sec-composewriteeventbytes\"><h1><span class=\"secnum\">27.5.4</span>#sec-composewriteeventbytes ComposeWriteEventBytes ( execution, byteIndex, Ws )</h1>...</div><div id=\"excluded-sec-valueofreadevent\"><h1><span class=\"secnum\">27.5.5</span>#sec-valueofreadevent ValueOfReadEvent ( execution, R )</h1>...</div></emu-clause>\n\n  "}, "sec-string.prototype.matchall": {"num": "21.1.3.12", "title": "#sec-string.prototype.matchall String.prototype.matchAll ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.matchall\">#sec-string.prototype.matchall</span> String.prototype.matchAll ( <var>regexp</var> )</h1>\n\n        <p>Performs a regular expression match of the String representing the <emu-val>this</emu-val> value against <var>regexp</var> and returns an iterator. Each iteration result's value is an Array object containing the results of the match, or <emu-val>null</emu-val> if the String did not match.</p>\n\n        <p>When the <code>matchAll</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>regexp</var>).</li><li>If <var>isRegExp</var> is true, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>regexp</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, @@matchAll).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <code>\"g\"</code>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, @@matchAll, &#171; <var>S</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">The <code>matchAll</code> function is intentionally generic, it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">Similarly to <code>String.prototype.split</code>, <code>String.prototype.matchAll</code> is designed to typically act without mutating its inputs.</div></emu-note>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-arrayaccumulation": {"num": "12.2.5.1", "title": "#sec-runtime-semantics-arrayaccumulation Runtime Semantics: ArrayAccumulation", "html": "<emu-clause id=\"sec-runtime-semantics-arrayaccumulation\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-arrayaccumulation\">#sec-runtime-semantics-arrayaccumulation</span> Runtime Semantics: ArrayAccumulation</h1>\n        <p>With parameters <var>array</var> and <var>nextIndex</var>.</p>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9471f753\"><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>len</var> be <var>nextIndex</var> + 1.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>array</var>, <code>\"length\"</code>, <var>len</var>, <emu-val>true</emu-val>).</li><li>NOTE: The above Set throws if <var>len</var> exceeds 2<sup>32</sup>-1.</li><li>Return <var>len</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"806d0124\"><emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var> + 1.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d806b57a\"><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Let <var>initResult</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>initValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>initResult</var>).</li><li>Let <var>created</var> be !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>), <var>initValue</var>).</li><li>Return <var>nextIndex</var> + 1.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"141a73d1\"><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Return the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fd2af9b1\"><emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-t>,</emu-t><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Let <var>initResult</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>initValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>initResult</var>).</li><li>Let <var>created</var> be !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>), <var>initValue</var>).</li><li>Return <var>nextIndex</var> + 1.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6a579a6a\"><emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-t>,</emu-t><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Return the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SpreadElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>spreadRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>spreadObj</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>spreadRef</var>).</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>spreadObj</var>).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>nextIndex</var>.</li><li>Let <var>nextValue</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>), <var>nextValue</var>).</li><li>Set <var>nextIndex</var> to <var>nextIndex</var> + 1.\n        </li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref> is used to ensure that own properties are defined for the array even if the standard built-in Array prototype object has been modified in a manner that would preclude the creation of new own properties using [[Set]].</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-entercriticalsection": {"num": "24.4.1.4", "title": "#sec-entercriticalsection EnterCriticalSection ( WL )", "html": "<emu-clause id=\"sec-entercriticalsection\" aoid=\"EnterCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-entercriticalsection\">#sec-entercriticalsection</span> EnterCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation EnterCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is not in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Wait until no <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>, then enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var> (without allowing any other <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to enter).</li><li>If <var>WL</var> has a <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>, then<ol><li>NOTE: A <var>WL</var> whose <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> has been entered at least once has a <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref> set by <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>.</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventsRecord</var> be the <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>entererEventList</var> be <var>eventsRecord</var>.[[EventList]].</li><li>Let <var>enterEvent</var> be a new <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>.</li><li>Append <var>enterEvent</var> to <var>entererEventList</var>.</li><li>Let <var>leaveEvent</var> be the <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref> in <var>WL</var>.</li><li>Append (<var>leaveEvent</var>, <var>enterEvent</var>) to <var>eventRecords</var>.[[AgentSynchronizesWith]].\n        </li></ol></li></ol></emu-alg>\n        <p>EnterCriticalSection has  <dfn>contention</dfn> when an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> attempting to enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> must wait for another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to leave it. When there is no contention, FIFO order of EnterCriticalSection calls is observable. When there is contention, an implementation may choose an arbitrary order but may not cause an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to wait indefinitely.</p>\n      </emu-clause>\n\n      "}}, "figData": {"table-49": "Table 62"}}, "to": {"secList": ["sec-numerictorawbytes", "sec-scripts-and-modules", "sec-abstract-operations-for-the-memory-model", "sec-string.prototype.matchall", "sec-runtime-semantics-arrayaccumulation", "sec-entercriticalsection"], "secData": {"sec-numerictorawbytes": {"num": "24.1.1.11", "title": "#sec-numerictorawbytes NumericToRawBytes ( type, value, isLittleEndian )", "html": "<emu-clause id=\"sec-numerictorawbytes\" aoid=\"NumericToRawBytes\" oldids=\"sec-numbertorawbytes\">\n        <span id=\"sec-numbertorawbytes\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-numerictorawbytes\">#sec-numerictorawbytes</span> NumericToRawBytes ( <var>type</var>, <var>value</var>, <var>isLittleEndian</var> )</h1>\n        <p>The abstract operation NumericToRawBytes takes three parameters, a String <var>type</var>, a BigInt or a Number <var>value</var>, and a Boolean <var>isLittleEndian</var>. This operation performs the following steps:</p>\n        <emu-alg><ol><li>If <var>type</var> is <code>\"Float32\"</code>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the 4 bytes that are the result of converting <var>value</var> to IEEE 754-2008 binary32 format using roundTiesToEven mode. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are arranged in big endian order. Otherwise, the bytes are arranged in little endian order. If <var>value</var> is <emu-val>NaN</emu-val>, <var>rawBytes</var> may be set to any implementation chosen IEEE 754-2008 binary32 format Not-a-Number encoding. An implementation must always choose the same encoding for each implementation distinguishable <emu-val>NaN</emu-val> value.</li></ol></li><li>Else if <var>type</var> is <code>\"Float64\"</code>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the 8 bytes that are the IEEE 754-2008 binary64 format encoding of <var>value</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are arranged in big endian order. Otherwise, the bytes are arranged in little endian order. If <var>value</var> is <emu-val>NaN</emu-val>, <var>rawBytes</var> may be set to any implementation chosen IEEE 754-2008 binary64 format Not-a-Number encoding. An implementation must always choose the same encoding for each implementation distinguishable <emu-val>NaN</emu-val> value.</li></ol></li><li>Else,<ol><li>Let <var>n</var> be the Element Size specified in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>Let <var>convOp</var> be the abstract operation named in the Conversion Operation column in <emu-xref href=\"#table-49\"><a href=\"#table-49\" class=\"excluded-xref\" excluded-id=\"table-49\">#table-49</a></emu-xref> for Element Type <var>type</var>.</li><li>Let <var>intValue</var> be <var>convOp</var>(<var>value</var>) treated as a <emu-xref href=\"#mathematical-value\"><a href=\"#mathematical-value\">mathematical value</a></emu-xref>, whether the result is a BigInt or Number.</li><li>If <var>intValue</var> &#8805; 0<sub><emu-xref href=\"#%E2%84%9D\"><a href=\"#%E2%84%9D\">&#8477;</a></emu-xref></sub>, then<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <var>n</var>-byte binary encoding of <var>intValue</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are ordered in big endian order. Otherwise, the bytes are ordered in little endian order.</li></ol></li><li>Else,<ol><li>Let <var>rawBytes</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> containing the <var>n</var>-byte binary 2's complement encoding of <var>intValue</var>. If <var>isLittleEndian</var> is <emu-val>false</emu-val>, the bytes are ordered in big endian order. Otherwise, the bytes are ordered in little endian order.</li></ol></li></ol></li><li>Return <var>rawBytes</var>.\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-scripts-and-modules": {"num": "A.5", "title": "#sec-scripts-and-modules Scripts and Modules", "html": "<emu-annex id=\"sec-scripts-and-modules\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-scripts-and-modules\">#sec-scripts-and-modules</span> Scripts and Modules</h1>\n    <emu-production name=\"Script\">\n    <emu-nt><a href=\"#prod-Script\">Script</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"08c8df8e\"><emu-nt optional=\"\"><a href=\"#prod-ScriptBody\">ScriptBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ScriptBody\">\n    <emu-nt><a href=\"#prod-ScriptBody\">ScriptBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"98de0f78\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"Module\">\n    <emu-nt><a href=\"#prod-Module\">Module</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"52f49b96\"><emu-nt optional=\"\"><a href=\"#prod-ModuleBody\">ModuleBody</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleBody\">\n    <emu-nt><a href=\"#prod-ModuleBody\">ModuleBody</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"89010d7d\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItemList\">\n    <emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"029ec31e\"><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"75ddb725\"><emu-nt><a href=\"#prod-ModuleItemList\">ModuleItemList</a></emu-nt><emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleItem\">\n    <emu-nt><a href=\"#prod-ModuleItem\">ModuleItem</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0559377\"><emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"298e81b0\"><emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"b8d22333\"><emu-nt params=\"~Yield, ~Await, ~Return\"><a href=\"#prod-StatementListItem\">StatementListItem</a><emu-mods><emu-params>[~Yield, ~Await, ~Return]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportDeclaration\">\n    <emu-nt><a href=\"#prod-ImportDeclaration\">ImportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"1a51d4c5\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"a1d094cc\"><emu-t>import</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportClause\">\n    <emu-nt><a href=\"#prod-ImportClause\">ImportClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"3a2f22cc\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"f35b66f8\"><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cdf0063c\"><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"cbd47597\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"8a1f1182\"><emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedDefaultBinding\">\n    <emu-nt><a href=\"#prod-ImportedDefaultBinding\">ImportedDefaultBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NameSpaceImport\">\n    <emu-nt><a href=\"#prod-NameSpaceImport\">NameSpaceImport</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b7641ff3\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedImports\">\n    <emu-nt><a href=\"#prod-NamedImports\">NamedImports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"835252f8\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"6f18d3a2\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"FromClause\">\n    <emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"ac457a7a\"><emu-t>from</emu-t><emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportsList\">\n    <emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5292cb55\"><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"82009fbc\"><emu-nt><a href=\"#prod-ImportsList\">ImportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportSpecifier\">\n    <emu-nt><a href=\"#prod-ImportSpecifier\">ImportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"bedec05a\"><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"38da6908\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ModuleSpecifier\">\n    <emu-nt><a href=\"#prod-ModuleSpecifier\">ModuleSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5c74e54d\"><emu-nt><a href=\"#prod-StringLiteral\">StringLiteral</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ImportedBinding\">\n    <emu-nt><a href=\"#prod-ImportedBinding\">ImportedBinding</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"06cca55e\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportDeclaration\">\n    <emu-nt><a href=\"#prod-ExportDeclaration\">ExportDeclaration</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"e0a40575\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-nt><a href=\"#prod-FromClause\">FromClause</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"2762c7fe\"><emu-t>export</emu-t><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-t>;</emu-t></emu-rhs>\n    <emu-rhs a=\"696b8d6e\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-VariableStatement\">VariableStatement</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"6bc99b97\"><emu-t>export</emu-t><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-Declaration\">Declaration</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d298e1ba\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-HoistableDeclaration\">HoistableDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"ae276654\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-nt params=\"~Yield, ~Await, +Default\"><a href=\"#prod-ClassDeclaration\">ClassDeclaration</a><emu-mods><emu-params>[~Yield, ~Await, +Default]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e2a585b6\"><emu-t>export</emu-t><emu-t>default</emu-t><emu-gann>[lookahead &#8713; { <emu-t>function</emu-t>, <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>function</emu-t>, <emu-t>class</emu-t> }]</emu-gann><emu-nt params=\"+In, ~Yield, ~Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[+In, ~Yield, ~Await]</emu-params></emu-mods></emu-nt><emu-t>;</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportFromClause\">\n    <emu-nt><a href=\"#prod-ExportFromClause\">ExportFromClause</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"b01e734d\"><emu-t>*</emu-t></emu-rhs>\n    <emu-rhs a=\"76d083ed\"><emu-t>*</emu-t><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"fd74b9b6\"><emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"NamedExports\">\n    <emu-nt><a href=\"#prod-NamedExports\">NamedExports</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"81ba5a4a\"><emu-t>{</emu-t><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"29b1414e\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>}</emu-t></emu-rhs>\n    <emu-rhs a=\"c16c88fe\"><emu-t>{</emu-t><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-t>}</emu-t></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportsList\">\n    <emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5b554fef\"><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"1907cd0c\"><emu-nt><a href=\"#prod-ExportsList\">ExportsList</a></emu-nt><emu-t>,</emu-t><emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt></emu-rhs>\n</emu-production>\n    <emu-production name=\"ExportSpecifier\">\n    <emu-nt><a href=\"#prod-ExportSpecifier\">ExportSpecifier</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"0ebb31e2\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n    <emu-rhs a=\"a9552c46\"><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt><emu-t>as</emu-t><emu-nt><a href=\"#prod-IdentifierName\">IdentifierName</a></emu-nt></emu-rhs>\n</emu-production>\n  </emu-annex>\n\n  "}, "sec-abstract-operations-for-the-memory-model": {"num": "27.5", "title": "#sec-abstract-operations-for-the-memory-model Abstract Operations for the Memory Model", "html": "<emu-clause id=\"sec-abstract-operations-for-the-memory-model\" oldids=\"sec-synchronizeeventset\">\n    <span id=\"sec-synchronizeeventset\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-abstract-operations-for-the-memory-model\">#sec-abstract-operations-for-the-memory-model</span> Abstract Operations for the Memory Model</h1>\n    <div id=\"excluded-sec-event-set\"><h1><span class=\"secnum\">27.5.1</span>#sec-event-set EventSet ( execution )</h1>...</div><div id=\"excluded-sec-sharedatablockeventset\"><h1><span class=\"secnum\">27.5.2</span>#sec-sharedatablockeventset SharedDataBlockEventSet ( execution )</h1>...</div><div id=\"excluded-sec-hosteventset\"><h1><span class=\"secnum\">27.5.3</span>#sec-hosteventset HostEventSet ( execution )</h1>...</div><div id=\"excluded-sec-composewriteeventbytes\"><h1><span class=\"secnum\">27.5.4</span>#sec-composewriteeventbytes ComposeWriteEventBytes ( execution, byteIndex, Ws )</h1>...</div><div id=\"excluded-sec-valueofreadevent\"><h1><span class=\"secnum\">27.5.5</span>#sec-valueofreadevent ValueOfReadEvent ( execution, R )</h1>...</div></emu-clause>\n\n  "}, "sec-string.prototype.matchall": {"num": "21.1.3.12", "title": "#sec-string.prototype.matchall String.prototype.matchAll ( regexp )", "html": "<emu-clause id=\"sec-string.prototype.matchall\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-string.prototype.matchall\">#sec-string.prototype.matchall</span> String.prototype.matchAll ( <var>regexp</var> )</h1>\n\n        <p>Performs a regular expression match of the String representing the <emu-val>this</emu-val> value against <var>regexp</var> and returns an iterator. Each iteration result's value is an Array object containing the results of the match, or <emu-val>null</emu-val> if the String did not match.</p>\n\n        <p>When the <code>matchAll</code> method is called, the following steps are taken:</p>\n        <emu-alg><ol><li>Let <var>O</var> be ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<emu-val>this</emu-val> value).</li><li>If <var>regexp</var> is neither <emu-val>undefined</emu-val> nor <emu-val>null</emu-val>, then<ol><li>Let <var>isRegExp</var> be ?&#160;<emu-xref aoid=\"IsRegExp\"><a href=\"#sec-isregexp\">IsRegExp</a></emu-xref>(<var>regexp</var>).</li><li>If <var>isRegExp</var> is <emu-val>true</emu-val>, then<ol><li>Let <var>flags</var> be ?&#160;<emu-xref aoid=\"Get\"><a href=\"#sec-get-o-p\">Get</a></emu-xref>(<var>regexp</var>, <emu-val>\"flags\"</emu-val>).</li><li>Perform ?&#160;<emu-xref aoid=\"RequireObjectCoercible\"><a href=\"#sec-requireobjectcoercible\">RequireObjectCoercible</a></emu-xref>(<var>flags</var>).</li><li>If ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>flags</var>) does not contain <emu-val>\"g\"</emu-val>, throw a <emu-val>TypeError</emu-val> exception.</li></ol></li><li>Let <var>matcher</var> be ?&#160;<emu-xref aoid=\"GetMethod\"><a href=\"#sec-getmethod\">GetMethod</a></emu-xref>(<var>regexp</var>, @@matchAll).</li><li>If <var>matcher</var> is not <emu-val>undefined</emu-val>, then<ol><li>Return ?&#160;<emu-xref aoid=\"Call\"><a href=\"#sec-call\">Call</a></emu-xref>(<var>matcher</var>, <var>regexp</var>, &#171; <var>O</var> &#187;).</li></ol></li></ol></li><li>Let <var>S</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>O</var>).</li><li>Let <var>rx</var> be ?&#160;<emu-xref aoid=\"RegExpCreate\"><a href=\"#sec-regexpcreate\">RegExpCreate</a></emu-xref>(<var>regexp</var>, <code>\"g\"</code>).</li><li>Return ?&#160;<emu-xref aoid=\"Invoke\"><a href=\"#sec-invoke\">Invoke</a></emu-xref>(<var>rx</var>, @@matchAll, &#171; <var>S</var> &#187;).\n        </li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">The <code>matchAll</code> function is intentionally generic, it does not require that its <emu-val>this</emu-val> value be a String object. Therefore, it can be transferred to other kinds of objects for use as a method.</div></emu-note>\n        <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">Similarly to <code>String.prototype.split</code>, <code>String.prototype.matchAll</code> is designed to typically act without mutating its inputs.</div></emu-note>\n      </emu-clause>\n\n      "}, "sec-runtime-semantics-arrayaccumulation": {"num": "12.2.5.1", "title": "#sec-runtime-semantics-arrayaccumulation Runtime Semantics: ArrayAccumulation", "html": "<emu-clause id=\"sec-runtime-semantics-arrayaccumulation\" oldids=\"sec-static-semantics-elisionwidth\">\n        <span id=\"sec-static-semantics-elisionwidth\"></span><h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-runtime-semantics-arrayaccumulation\">#sec-runtime-semantics-arrayaccumulation</span> Runtime Semantics: ArrayAccumulation</h1>\n        <p>With parameters <var>array</var> and <var>nextIndex</var>.</p>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"9471f753\"><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>len</var> be <var>nextIndex</var> + 1.</li><li>Perform ?&#160;<emu-xref aoid=\"Set\"><a href=\"#sec-set-o-p-v-throw\">Set</a></emu-xref>(<var>array</var>, <code>\"length\"</code>, <var>len</var>, <emu-val>true</emu-val>).</li><li>NOTE: The above Set throws if <var>len</var> exceeds 2<sup>32</sup>-1.</li><li>Return <var>len</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"Elision\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"806d0124\"><emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt><emu-t>,</emu-t></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Return the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var> + 1.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"d806b57a\"><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Let <var>initResult</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>initValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>initResult</var>).</li><li>Let <var>created</var> be !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>), <var>initValue</var>).</li><li>Return <var>nextIndex</var> + 1.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"141a73d1\"><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Return the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"fd2af9b1\"><emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-t>,</emu-t><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Let <var>initResult</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>initValue</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>initResult</var>).</li><li>Let <var>created</var> be !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>), <var>initValue</var>).</li><li>Return <var>nextIndex</var> + 1.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"6a579a6a\"><emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt><emu-t>,</emu-t><emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt><emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-ElementList\">ElementList</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li><li>If <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> is present, then<ol><li>Set <var>nextIndex</var> to the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-Elision\">Elision</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.</li><li><emu-xref aoid=\"ReturnIfAbrupt\"><a href=\"#sec-returnifabrupt\">ReturnIfAbrupt</a></emu-xref>(<var>nextIndex</var>).</li></ol></li><li>Return the result of performing ArrayAccumulation for <emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt> with arguments <var>array</var> and <var>nextIndex</var>.\n        </li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SpreadElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SpreadElement\">SpreadElement</a></emu-nt><emu-geq>:</emu-geq><emu-rhs a=\"5bb8853e\"><emu-t>...</emu-t><emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt></emu-rhs>\n</emu-production></emu-grammar>\n        <emu-alg><ol><li>Let <var>spreadRef</var> be the result of evaluating <emu-nt><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a></emu-nt>.</li><li>Let <var>spreadObj</var> be ?&#160;<emu-xref aoid=\"GetValue\"><a href=\"#sec-getvalue\">GetValue</a></emu-xref>(<var>spreadRef</var>).</li><li>Let <var>iteratorRecord</var> be ?&#160;<emu-xref aoid=\"GetIterator\"><a href=\"#sec-getiterator\">GetIterator</a></emu-xref>(<var>spreadObj</var>).</li><li>Repeat,<ol><li>Let <var>next</var> be ?&#160;<emu-xref aoid=\"IteratorStep\"><a href=\"#sec-iteratorstep\">IteratorStep</a></emu-xref>(<var>iteratorRecord</var>).</li><li>If <var>next</var> is <emu-val>false</emu-val>, return <var>nextIndex</var>.</li><li>Let <var>nextValue</var> be ?&#160;<emu-xref aoid=\"IteratorValue\"><a href=\"#sec-iteratorvalue\">IteratorValue</a></emu-xref>(<var>next</var>).</li><li>Perform !&#160;<emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref>(<var>array</var>, !&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextIndex</var>), <var>nextValue</var>).</li><li>Set <var>nextIndex</var> to <var>nextIndex</var> + 1.\n        </li></ol></li></ol></emu-alg>\n        <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n          <p><emu-xref aoid=\"CreateDataPropertyOrThrow\"><a href=\"#sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a></emu-xref> is used to ensure that own properties are defined for the array even if the standard built-in Array prototype object has been modified in a manner that would preclude the creation of new own properties using [[Set]].</p>\n        </div></emu-note>\n      </emu-clause>\n\n      "}, "sec-entercriticalsection": {"num": "24.4.1.4", "title": "#sec-entercriticalsection EnterCriticalSection ( WL )", "html": "<emu-clause id=\"sec-entercriticalsection\" aoid=\"EnterCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-entercriticalsection\">#sec-entercriticalsection</span> EnterCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation EnterCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is not in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Wait until no <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>, then enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var> (without allowing any other <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to enter).</li><li>If <var>WL</var> has a <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>, then<ol><li>NOTE: A <var>WL</var> whose <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> has been entered at least once has a <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref> set by <emu-xref aoid=\"LeaveCriticalSection\"><a href=\"#sec-leavecriticalsection\">LeaveCriticalSection</a></emu-xref>.</li><li>Let <var>execution</var> be the [[CandidateExecution]] field of the <emu-xref href=\"#surrounding-agent\"><a href=\"#surrounding-agent\">surrounding agent</a></emu-xref>'s <emu-xref href=\"#agent-record\"><a href=\"#agent-record\">Agent Record</a></emu-xref>.</li><li>Let <var>eventsRecord</var> be the <emu-xref href=\"#sec-agent-event-records\"><a href=\"#sec-agent-event-records\">Agent Events Record</a></emu-xref> in <var>execution</var>.[[EventsRecords]] whose [[AgentSignifier]] is <emu-xref aoid=\"AgentSignifier\"><a href=\"#sec-agentsignifier\">AgentSignifier</a></emu-xref>().</li><li>Let <var>entererEventList</var> be <var>eventsRecord</var>.[[EventList]].</li><li>Let <var>enterEvent</var> be a new <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref>.</li><li>Append <var>enterEvent</var> to <var>entererEventList</var>.</li><li>Let <var>leaveEvent</var> be the <emu-xref href=\"#sec-memory-model-fundamentals\"><a href=\"#sec-memory-model-fundamentals\">Synchronize event</a></emu-xref> in <var>WL</var>.</li><li>Append (<var>leaveEvent</var>, <var>enterEvent</var>) to <var>eventsRecord</var>.[[AgentSynchronizesWith]].\n        </li></ol></li></ol></emu-alg>\n        <p>EnterCriticalSection has  <dfn>contention</dfn> when an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> attempting to enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> must wait for another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to leave it. When there is no contention, FIFO order of EnterCriticalSection calls is observable. When there is contention, an implementation may choose an arbitrary order but may not cause an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to wait indefinitely.</p>\n      </emu-clause>\n\n      "}}, "figData": {"table-49": "Table 62"}}}