{"from": {"secList": ["sec-arrow-function-definitions-static-semantics-expectedargumentcount", "sec-destructuring-binding-patterns", "sec-function-definitions-static-semantics-containsexpression", "sec-async-arrow-function-definitions-static-semantics-ContainsExpression", "sec-arrow-function-definitions", "sec-method-definitions-static-semantics-expectedargumentcount", "sec-parameter-lists-static-semantics-early-errors", "sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList", "sec-function-definitions-static-semantics-expectedargumentcount", "sec-arrow-function-definitions-static-semantics-early-errors", "sec-async-generator-function-definitions-static-semantics-early-errors", "sec-function-definitions-static-semantics-hasinitializer", "sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount", "sec-ordinaryfunctioncreate", "sec-function-definitions-static-semantics-issimpleparameterlist", "sec-method-definitions", "sec-functiondeclarationinstantiation", "sec-function-definitions-static-semantics-early-errors", "sec-async-arrow-function-definitions-static-semantics-early-errors", "sec-destructuring-binding-patterns-static-semantics-containsexpression", "sec-generator-function-definitions-static-semantics-early-errors", "sec-createdynamicfunction", "sec-arrow-function-definitions-static-semantics-issimpleparameterlist", "sec-arrow-function-definitions-static-semantics-containsexpression", "sec-function-definitions", "sec-async-function-definitions-static-semantics-early-errors", "sec-async-arrow-function-definitions", "sec-method-definitions-static-semantics-early-errors", "sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist", "sec-destructuring-binding-patterns-static-semantics-hasinitializer", "sec-parameter-lists"], "secData": {"sec-arrow-function-definitions-static-semantics-expectedargumentcount": {"num": "14.3.6", "title": "#sec-arrow-function-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount", "html": "<emu-clause id=\"sec-arrow-function-definitions-static-semantics-expectedargumentcount\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions-static-semantics-expectedargumentcount\">#sec-arrow-function-definitions-static-semantics-expectedargumentcount</span> Static Semantics: ExpectedArgumentCount</h1>\n      <emu-see-also-para op=\"ExpectedArgumentCount\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return 1.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return ExpectedArgumentCount of <var>formals</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-destructuring-binding-patterns": {"num": "13.3.3", "title": "#sec-destructuring-binding-patterns Destructuring Binding Patterns", "html": "<emu-clause id=\"sec-destructuring-binding-patterns\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns\">#sec-destructuring-binding-patterns</span> Destructuring Binding Patterns</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"BindingPattern\" params=\"Yield, Await\" id=\"prod-BindingPattern\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingPattern\">BindingPattern</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7d60f68c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"869ca7d6\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ObjectBindingPattern\" params=\"Yield, Await\" id=\"prod-ObjectBindingPattern\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"539d4408\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"b1dfec5e\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"f7cb1385\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ArrayBindingPattern\" params=\"Yield, Await\" id=\"prod-ArrayBindingPattern\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f36c8065\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"4f3da32d\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"799161ee\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingRestProperty\" params=\"Yield, Await\" id=\"prod-BindingRestProperty\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"34b0d77b\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingPropertyList\" params=\"Yield, Await\" id=\"prod-BindingPropertyList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f1b6880e\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingProperty\">BindingProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"79695f7a\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingProperty\">BindingProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingElementList\" params=\"Yield, Await\" id=\"prod-BindingElementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2e96b0e0\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e73f33c3\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingElisionElement\" params=\"Yield, Await\" id=\"prod-BindingElisionElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e636dca9\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingProperty\" params=\"Yield, Await\" id=\"prod-BindingProperty\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingProperty\">BindingProperty</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"d3526702\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5c291273\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>:</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingElement\" params=\"Yield, Await\" id=\"prod-BindingElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"d3526702\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"132bf94f\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPattern\">BindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"SingleNameBinding\" params=\"Yield, Await\" id=\"prod-SingleNameBinding\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"306ee631\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingRestElement\" params=\"Yield, Await\" id=\"prod-BindingRestElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"34b0d77b\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"2dbec6ac\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPattern\">BindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-destructuring-binding-patterns-static-semantics-boundnames\"><h1><span class=\"secnum\">13.3.3.1</span>#sec-destructuring-binding-patterns-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-static-semantics-containsexpression\"><h1><span class=\"secnum\">13.3.3.2</span>#sec-destructuring-binding-patterns-static-semantics-containsexpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-static-semantics-hasinitializer\"><h1><span class=\"secnum\">13.3.3.3</span>#sec-destructuring-binding-patterns-static-semantics-hasinitializer Static Semantics: HasInitializer</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist\"><h1><span class=\"secnum\">13.3.3.4</span>#sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization\"><h1><span class=\"secnum\">13.3.3.5</span>#sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization Runtime Semantics: BindingInitialization</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\"><h1><span class=\"secnum\">13.3.3.6</span>#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization Runtime Semantics: PropertyBindingInitialization</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\"><h1><span class=\"secnum\">13.3.3.7</span>#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization Runtime Semantics: RestBindingInitialization</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">13.3.3.8</span>#sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-runtime-semantics-keyedbindinginitialization\"><h1><span class=\"secnum\">13.3.3.9</span>#sec-runtime-semantics-keyedbindinginitialization Runtime Semantics: KeyedBindingInitialization</h1>...</div></emu-clause>\n  "}, "sec-function-definitions-static-semantics-containsexpression": {"num": "14.2.5", "title": "#sec-function-definitions-static-semantics-containsexpression Static Semantics: ContainsExpression", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-containsexpression\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-containsexpression\">#sec-function-definitions-static-semantics-containsexpression</span> Static Semantics: ContainsExpression</h1>\n      <emu-see-also-para op=\"ContainsExpression\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b9079b6b\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If ContainsExpression of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ContainsExpression of <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If ContainsExpression of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ContainsExpression of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions-static-semantics-ContainsExpression": {"num": "14.9.5", "title": "#sec-async-arrow-function-definitions-static-semantics-ContainsExpression Static Semantics: ContainsExpression", "html": "<emu-clause id=\"sec-async-arrow-function-definitions-static-semantics-ContainsExpression\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions-static-semantics-ContainsExpression\">#sec-async-arrow-function-definitions-static-semantics-ContainsExpression</span> Static Semantics: ContainsExpression</h1>\n      <emu-grammar><emu-production name=\"AsyncArrowBindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-arrow-function-definitions": {"num": "14.3", "title": "#sec-arrow-function-definitions Arrow Function Definitions", "html": "<emu-clause id=\"sec-arrow-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions\">#sec-arrow-function-definitions</span> Arrow Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"ArrowFunction\" params=\"In, Yield, Await\" id=\"prod-ArrowFunction\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-ArrowFunction\">ArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bdca54b2\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ArrowParameters\" params=\"Yield, Await\" id=\"prod-ArrowParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"22bf917e\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"parencover\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ConciseBody\" params=\"In\" id=\"prod-ConciseBody\">\n    <emu-nt params=\"In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7a8157ec\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, ~Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6f7b95b3\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExpressionBody\" params=\"In, Await\" id=\"prod-ExpressionBody\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"21c2a074\"><emu-nt params=\"?In, ~Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, ~Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <h2>Supplemental Syntax</h2>\n    <p>When processing an instance of the production\n      <br>\n      <emu-grammar><emu-production name=\"ArrowParameters\" params=\"Yield, Await\" collapsed=\"\" class=\" inline\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"29cadaef\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> is refined using the following grammar:</p>\n    <emu-grammar type=\"definition\"><emu-production name=\"ArrowFormalParameters\" params=\"Yield, Await\" id=\"prod-ArrowFormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b7561ab3\">\n        <emu-t>(</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-arrow-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.3.1</span>#sec-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-boundnames\"><h1><span class=\"secnum\">14.3.2</span>#sec-arrow-function-definitions-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-contains\"><h1><span class=\"secnum\">14.3.3</span>#sec-arrow-function-definitions-static-semantics-contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-containsexpression\"><h1><span class=\"secnum\">14.3.4</span>#sec-arrow-function-definitions-static-semantics-containsexpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.3.5</span>#sec-arrow-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-expectedargumentcount\"><h1><span class=\"secnum\">14.3.6</span>#sec-arrow-function-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-hasname\"><h1><span class=\"secnum\">14.3.7</span>#sec-arrow-function-definitions-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-issimpleparameterlist\"><h1><span class=\"secnum\">14.3.8</span>#sec-arrow-function-definitions-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-static-semantics-coveredformalslist\"><h1><span class=\"secnum\">14.3.9</span>#sec-static-semantics-coveredformalslist Static Semantics: CoveredFormalsList</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">14.3.10</span>#sec-arrow-function-definitions-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">14.3.11</span>#sec-arrow-function-definitions-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">14.3.12</span>#sec-arrow-function-definitions-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">14.3.13</span>#sec-arrow-function-definitions-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">14.3.14</span>#sec-arrow-function-definitions-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">14.3.15</span>#sec-arrow-function-definitions-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.3.16</span>#sec-arrow-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.3.17</span>#sec-arrow-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-method-definitions-static-semantics-expectedargumentcount": {"num": "14.4.3", "title": "#sec-method-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount", "html": "<emu-clause id=\"sec-method-definitions-static-semantics-expectedargumentcount\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-method-definitions-static-semantics-expectedargumentcount\">#sec-method-definitions-static-semantics-expectedargumentcount</span> Static Semantics: ExpectedArgumentCount</h1>\n      <emu-see-also-para op=\"ExpectedArgumentCount\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"PropertySetParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"497954f5\"><emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If HasInitializer of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> is <emu-val>true</emu-val>, return 0.</li><li>Return 1.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-parameter-lists-static-semantics-early-errors": {"num": "14.1.1", "title": "#sec-parameter-lists-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-parameter-lists-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-parameter-lists-static-semantics-early-errors\">#sec-parameter-lists-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"32e3c3aa\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>false</emu-val> and BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Multiple occurrences of the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is only allowed for functions which have simple parameter lists and which are not defined in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList": {"num": "14.9.9", "title": "#sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList Static Semantics: IsSimpleParameterList", "html": "<emu-clause id=\"sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList\">#sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList</span> Static Semantics: IsSimpleParameterList</h1>\n      <emu-grammar><emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\" collapsed=\"\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"614a19b0\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"be44becf\">\n        <emu-nt><a href=\"#prod-MemberExpression\">MemberExpression</a></emu-nt>\n        <emu-nt><a href=\"#prod-Arguments\">Arguments</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>head</var> be CoveredAsyncArrowHead of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</li><li>Return IsSimpleParameterList of <var>head</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-definitions-static-semantics-expectedargumentcount": {"num": "14.2.9", "title": "#sec-function-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-expectedargumentcount\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-expectedargumentcount\">#sec-function-definitions-static-semantics-expectedargumentcount</span> Static Semantics: ExpectedArgumentCount</h1>\n      <emu-see-also-para op=\"ExpectedArgumentCount\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"FormalParameters\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"74d26704\"><emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return 0.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b9079b6b\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return ExpectedArgumentCount of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The ExpectedArgumentCount of a <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is the number of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> to the left of either the rest parameter or the first <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> with an Initializer. A <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> without an initializer is allowed after the first parameter with an initializer but such parameters are considered to be optional with <emu-val>undefined</emu-val> as their default value.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"497954f5\"><emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If HasInitializer of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> is <emu-val>true</emu-val>, return 0.</li><li>Return 1.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>count</var> be ExpectedArgumentCount of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>If HasInitializer of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val> or HasInitializer of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> is <emu-val>true</emu-val>, return <var>count</var>.</li><li>Return <var>count</var> + 1.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-arrow-function-definitions-static-semantics-early-errors": {"num": "14.3.1", "title": "#sec-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-arrow-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions-static-semantics-early-errors\">#sec-arrow-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"ArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2a7a3456\">\n        <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> is not <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covering</a></emu-xref> an <emu-nt><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a></emu-nt>.\n        </li>\n        <li>\n          All <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <emu-nt><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a></emu-nt> and its derived productions also apply to CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-async-generator-function-definitions-static-semantics-early-errors": {"num": "14.6.1", "title": "#sec-async-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-async-generator-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-generator-function-definitions-static-semantics-early-errors\">#sec-async-generator-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"AsyncGeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"be384400\">\n        <emu-t>async</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if HasDirectSuper of <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li>\n      </ul>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"13d2cc33\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c51514e0\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"9cf94eaf\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.</li>\n        <li>If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.</li>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-function-definitions-static-semantics-hasinitializer": {"num": "14.2.10", "title": "#sec-function-definitions-static-semantics-hasinitializer Static Semantics: HasInitializer", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-hasinitializer\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-hasinitializer\">#sec-function-definitions-static-semantics-hasinitializer</span> Static Semantics: HasInitializer</h1>\n      <emu-see-also-para op=\"HasInitializer\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If HasInitializer of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return HasInitializer of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount": {"num": "14.9.7", "title": "#sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount Static Semantics: ExpectedArgumentCount", "html": "<emu-clause id=\"sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount\">#sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount</span> Static Semantics: ExpectedArgumentCount</h1>\n      <emu-grammar><emu-production name=\"AsyncArrowBindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return 1.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ordinaryfunctioncreate": {"num": "9.2.3", "title": "#sec-ordinaryfunctioncreate OrdinaryFunctionCreate ( functionPrototype, sourceText, ParameterList, Body, thisMode, Scope )", "html": "<emu-clause id=\"sec-ordinaryfunctioncreate\" aoid=\"OrdinaryFunctionCreate\" oldids=\"sec-functionallocate,sec-functioninitialize,sec-functioncreate,sec-generatorfunctioncreate,sec-asyncgeneratorfunctioncreate,sec-async-functions-abstract-operations-async-function-create\"><span id=\"sec-async-functions-abstract-operations-async-function-create\"></span><span id=\"sec-asyncgeneratorfunctioncreate\"></span><span id=\"sec-generatorfunctioncreate\"></span><span id=\"sec-functioncreate\"></span><span id=\"sec-functioninitialize\"></span><span id=\"sec-functionallocate\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinaryfunctioncreate\">#sec-ordinaryfunctioncreate</span> OrdinaryFunctionCreate ( <var>functionPrototype</var>, <var>sourceText</var>, <var>ParameterList</var>, <var>Body</var>, <var>thisMode</var>, <var>Scope</var> )</h1>\n      <p>The abstract operation OrdinaryFunctionCreate takes arguments <var>functionPrototype</var> (an Object), <var>sourceText</var> (a sequence of Unicode code points), <var>ParameterList</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>Body</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>thisMode</var> (either <emu-const>lexical-this</emu-const> or <emu-const>non-lexical-this</emu-const>), and <var>Scope</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). <var>sourceText</var> is the source text of the syntactic definition of the function to be created. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>functionPrototype</var>) is Object.</li><li>Let <var>internalSlotsList</var> be the internal slots listed in <emu-xref href=\"#table-internal-slots-of-ecmascript-function-objects\"><a href=\"#table-internal-slots-of-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</a></emu-xref>.</li><li>Let <var>F</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>functionPrototype</var>, <var>internalSlotsList</var>).</li><li>Set <var>F</var>.[[Call]] to the definition specified in <emu-xref href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\"><a href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</a></emu-xref>.</li><li>Set <var>F</var>.[[SourceText]] to <var>sourceText</var>.</li><li>Set <var>F</var>.[[FormalParameters]] to <var>ParameterList</var>.</li><li>Set <var>F</var>.[[ECMAScriptCode]] to <var>Body</var>.</li><li>If the source text matching <var>Body</var> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, let <var>Strict</var> be <emu-val>true</emu-val>; else let <var>Strict</var> be <emu-val>false</emu-val>.</li><li>Set <var>F</var>.[[Strict]] to <var>Strict</var>.</li><li>If <var>thisMode</var> is <emu-const>lexical-this</emu-const>, set <var>F</var>.[[ThisMode]] to <emu-const>lexical</emu-const>.</li><li>Else if <var>Strict</var> is <emu-val>true</emu-val>, set <var>F</var>.[[ThisMode]] to <emu-const>strict</emu-const>.</li><li>Else, set <var>F</var>.[[ThisMode]] to <emu-const>global</emu-const>.</li><li>Set <var>F</var>.[[IsClassConstructor]] to <emu-val>false</emu-val>.</li><li>Set <var>F</var>.[[Environment]] to <var>Scope</var>.</li><li>Set <var>F</var>.[[ScriptOrModule]] to <emu-xref aoid=\"GetActiveScriptOrModule\"><a href=\"#sec-getactivescriptormodule\">GetActiveScriptOrModule</a></emu-xref>().</li><li>Set <var>F</var>.[[Realm]] to <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Set <var>F</var>.[[HomeObject]] to <emu-val>undefined</emu-val>.</li><li>Let <var>len</var> be the ExpectedArgumentCount of <var>ParameterList</var>.</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionLength\"><a href=\"#sec-setfunctionlength\">SetFunctionLength</a></emu-xref>(<var>F</var>, <var>len</var>).</li><li>Return <var>F</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-definitions-static-semantics-issimpleparameterlist": {"num": "14.2.15", "title": "#sec-function-definitions-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-issimpleparameterlist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-issimpleparameterlist\">#sec-function-definitions-static-semantics-issimpleparameterlist</span> Static Semantics: IsSimpleParameterList</h1>\n      <emu-see-also-para op=\"IsSimpleParameterList\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"74d26704\"><emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b9079b6b\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Return IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameter\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"03366b31\"><emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return IsSimpleParameterList of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-method-definitions": {"num": "14.4", "title": "#sec-method-definitions Method Definitions", "html": "<emu-clause id=\"sec-method-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-method-definitions\">#sec-method-definitions</span> Method Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"MethodDefinition\" params=\"Yield, Await\" id=\"prod-MethodDefinition\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"19d49312\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"b8854ce2\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"978adba9\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d8d5f4bb\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"044ecd0b\">\n        <emu-t>get</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"55774850\">\n        <emu-t>set</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"PropertySetParameterList\" id=\"prod-PropertySetParameterList\">\n    <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"3f4952d7\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-method-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.4.1</span>#sec-method-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-computedpropertycontains\"><h1><span class=\"secnum\">14.4.2</span>#sec-method-definitions-static-semantics-computedpropertycontains Static Semantics: ComputedPropertyContains</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-expectedargumentcount\"><h1><span class=\"secnum\">14.4.3</span>#sec-method-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-hasdirectsuper\"><h1><span class=\"secnum\">14.4.4</span>#sec-method-definitions-static-semantics-hasdirectsuper Static Semantics: HasDirectSuper</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-propname\"><h1><span class=\"secnum\">14.4.5</span>#sec-method-definitions-static-semantics-propname Static Semantics: PropName</h1>...</div><div id=\"excluded-sec-static-semantics-specialmethod\"><h1><span class=\"secnum\">14.4.6</span>#sec-static-semantics-specialmethod Static Semantics: SpecialMethod</h1>...</div><div id=\"excluded-sec-runtime-semantics-definemethod\"><h1><span class=\"secnum\">14.4.7</span>#sec-runtime-semantics-definemethod Runtime Semantics: DefineMethod</h1>...</div><div id=\"excluded-sec-runtime-semantics-methoddefinitionevaluation\"><h1><span class=\"secnum\">14.4.8</span>#sec-runtime-semantics-methoddefinitionevaluation Runtime Semantics: MethodDefinitionEvaluation</h1>...</div></emu-clause>\n\n  "}, "sec-functiondeclarationinstantiation": {"num": "9.2.10", "title": "#sec-functiondeclarationinstantiation FunctionDeclarationInstantiation ( func, argumentsList )", "html": "<emu-clause id=\"sec-functiondeclarationinstantiation\" aoid=\"FunctionDeclarationInstantiation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</span> FunctionDeclarationInstantiation ( <var>func</var>, <var>argumentsList</var> )</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>When an <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is established for evaluating an ECMAScript function a new <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> is created and bindings for each formal parameter are instantiated in that <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. Each declaration in the function body is also instantiated. If the function's formal parameters do not include any default value initializers then the body declarations are instantiated in the same <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> as the parameters. If default value parameter initializers exist, a second <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is created for the body declarations. Formal parameters and functions are initialized as part of FunctionDeclarationInstantiation. All other bindings are initialized during evaluation of the function body.</p>\n      </div></emu-note>\n      <p>The abstract operation FunctionDeclarationInstantiation takes arguments <var>func</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>) and <var>argumentsList</var>. <var>func</var> is the <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> for which the <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is being established. It performs the following steps when called:</p>\n      <!--\n        WARNING: If you add, remove, rename, or repurpose any variable names\n                 within this algorithm, you may need to update\n                 #sec-web-compat-functiondeclarationinstantiation accordingly.\n      -->\n      <emu-alg><ol><li>Let <var>calleeContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>code</var> be <var>func</var>.[[ECMAScriptCode]].</li><li>Let <var>strict</var> be <var>func</var>.[[Strict]].</li><li>Let <var>formals</var> be <var>func</var>.[[FormalParameters]].</li><li>Let <var>parameterNames</var> be the BoundNames of <var>formals</var>.</li><li>If <var>parameterNames</var> has any duplicate entries, let <var>hasDuplicates</var> be <emu-val>true</emu-val>. Otherwise, let <var>hasDuplicates</var> be <emu-val>false</emu-val>.</li><li>Let <var>simpleParameterList</var> be IsSimpleParameterList of <var>formals</var>.</li><li>Let <var>hasParameterExpressions</var> be ContainsExpression of <var>formals</var>.</li><li>Let <var>varNames</var> be the VarDeclaredNames of <var>code</var>.</li><li>Let <var>varDeclarations</var> be the VarScopedDeclarations of <var>code</var>.</li><li>Let <var>lexicalNames</var> be the LexicallyDeclaredNames of <var>code</var>.</li><li>Let <var>functionNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>functionsToInitialize</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>d</var> of <var>varDeclarations</var>, in reverse <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>If <var>d</var> is neither a <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> nor a <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt> nor a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>d</var> is either a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, or an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>.</li><li>Let <var>fn</var> be the sole element of the BoundNames of <var>d</var>.</li><li>If <var>fn</var> is not an element of <var>functionNames</var>, then<ol><li>Insert <var>fn</var> as the first element of <var>functionNames</var>.</li><li>NOTE: If there are multiple function declarations for the same name, the last declaration is used.</li><li>Insert <var>d</var> as the first element of <var>functionsToInitialize</var>.</li></ol></li></ol></li></ol></li><li>Let <var>argumentsObjectNeeded</var> be <emu-val>true</emu-val>.</li><li>If <var>func</var>.[[ThisMode]] is <emu-const>lexical</emu-const>, then<ol><li>NOTE: Arrow functions never have an arguments objects.</li><li>Set <var>argumentsObjectNeeded</var> to <emu-val>false</emu-val>.</li></ol></li><li>Else if <emu-val>\"arguments\"</emu-val> is an element of <var>parameterNames</var>, then<ol><li>Set <var>argumentsObjectNeeded</var> to <emu-val>false</emu-val>.</li></ol></li><li>Else if <var>hasParameterExpressions</var> is <emu-val>false</emu-val>, then<ol><li>If <emu-val>\"arguments\"</emu-val> is an element of <var>functionNames</var> or if <emu-val>\"arguments\"</emu-val> is an element of <var>lexicalNames</var>, then<ol><li>Set <var>argumentsObjectNeeded</var> to <emu-val>false</emu-val>.</li></ol></li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val> or if <var>hasParameterExpressions</var> is <emu-val>false</emu-val>, then<ol><li>NOTE: Only a single <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed for the parameters and top-level vars.</li><li>Let <var>env</var> be the LexicalEnvironment of <var>calleeContext</var>.</li></ol></li><li>Else,<ol><li>NOTE: A separate <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed to ensure that bindings created by <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> calls in the formal parameter list are outside the environment where parameters are declared.</li><li>Let <var>calleeEnv</var> be the LexicalEnvironment of <var>calleeContext</var>.</li><li>Let <var>env</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>calleeEnv</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The VariableEnvironment of <var>calleeContext</var> is <var>calleeEnv</var>.</li><li>Set the LexicalEnvironment of <var>calleeContext</var> to <var>env</var>.</li></ol></li><li>For each String <var>paramName</var> of <var>parameterNames</var>, do<ol><li>Let <var>alreadyDeclared</var> be <var>env</var>.HasBinding(<var>paramName</var>).</li><li>NOTE: Early errors ensure that duplicate parameter names can only occur in non-strict functions that do not have parameter default values or rest parameters.</li><li>If <var>alreadyDeclared</var> is <emu-val>false</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>paramName</var>, <emu-val>false</emu-val>).</li><li>If <var>hasDuplicates</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>env</var>.InitializeBinding(<var>paramName</var>, <emu-val>undefined</emu-val>).</li></ol></li></ol></li></ol></li><li>If <var>argumentsObjectNeeded</var> is <emu-val>true</emu-val>, then<ol><li>If <var>strict</var> is <emu-val>true</emu-val> or if <var>simpleParameterList</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>ao</var> be <emu-xref aoid=\"CreateUnmappedArgumentsObject\"><a href=\"#sec-createunmappedargumentsobject\">CreateUnmappedArgumentsObject</a></emu-xref>(<var>argumentsList</var>).</li></ol></li><li>Else,<ol><li>NOTE: A mapped argument object is only provided for non-strict functions that don't have a rest parameter, any parameter default value initializers, or any destructured parameters.</li><li>Let <var>ao</var> be <emu-xref aoid=\"CreateMappedArgumentsObject\"><a href=\"#sec-createmappedargumentsobject\">CreateMappedArgumentsObject</a></emu-xref>(<var>func</var>, <var>formals</var>, <var>argumentsList</var>, <var>env</var>).</li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateImmutableBinding(<emu-val>\"arguments\"</emu-val>, <emu-val>false</emu-val>).</li></ol></li><li>Else,<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<emu-val>\"arguments\"</emu-val>, <emu-val>false</emu-val>).</li></ol></li><li>Call <var>env</var>.InitializeBinding(<emu-val>\"arguments\"</emu-val>, <var>ao</var>).</li><li>Let <var>parameterBindings</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>parameterNames</var>, followed by <emu-val>\"arguments\"</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>parameterBindings</var> be <var>parameterNames</var>.</li></ol></li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"CreateListIteratorRecord\"><a href=\"#sec-createlistiteratorRecord\">CreateListIteratorRecord</a></emu-xref>(<var>argumentsList</var>).</li><li>If <var>hasDuplicates</var> is <emu-val>true</emu-val>, then<ol><li>Perform ? IteratorBindingInitialization for <var>formals</var> with <var>iteratorRecord</var> and <emu-val>undefined</emu-val> as arguments.</li></ol></li><li>Else,<ol><li>Perform ? IteratorBindingInitialization for <var>formals</var> with <var>iteratorRecord</var> and <var>env</var> as arguments.</li></ol></li><li>If <var>hasParameterExpressions</var> is <emu-val>false</emu-val>, then<ol><li>NOTE: Only a single <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed for the parameters and top-level vars.</li><li>Let <var>instantiatedVarNames</var> be a copy of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>parameterBindings</var>.</li><li>For each element <var>n</var> of <var>varNames</var>, do<ol><li>If <var>n</var> is not an element of <var>instantiatedVarNames</var>, then<ol><li>Append <var>n</var> to <var>instantiatedVarNames</var>.</li><li>Perform ! <var>env</var>.CreateMutableBinding(<var>n</var>, <emu-val>false</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>n</var>, <emu-val>undefined</emu-val>).</li></ol></li></ol></li><li>Let <var>varEnv</var> be <var>env</var>.</li></ol></li><li>Else,<ol><li>NOTE: A separate <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed to ensure that closures created by expressions in the formal parameter list do not have visibility of declarations in the function body.</li><li>Let <var>varEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>env</var>).</li><li>Set the VariableEnvironment of <var>calleeContext</var> to <var>varEnv</var>.</li><li>Let <var>instantiatedVarNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>n</var> of <var>varNames</var>, do<ol><li>If <var>n</var> is not an element of <var>instantiatedVarNames</var>, then<ol><li>Append <var>n</var> to <var>instantiatedVarNames</var>.</li><li>Perform ! <var>varEnv</var>.CreateMutableBinding(<var>n</var>, <emu-val>false</emu-val>).</li><li>If <var>n</var> is not an element of <var>parameterBindings</var> or if <var>n</var> is an element of <var>functionNames</var>, let <var>initialValue</var> be <emu-val>undefined</emu-val>.</li><li>Else,<ol><li>Let <var>initialValue</var> be ! <var>env</var>.GetBindingValue(<var>n</var>, <emu-val>false</emu-val>).</li></ol></li><li>Call <var>varEnv</var>.InitializeBinding(<var>n</var>, <var>initialValue</var>).</li><li>NOTE: A var with the same name as a formal parameter initially has the same value as the corresponding initialized parameter.</li></ol></li></ol></li></ol></li><li id=\"step-functiondeclarationinstantiation-web-compat-insertion-point\">NOTE: Annex <emu-xref href=\"#sec-web-compat-functiondeclarationinstantiation\"><a href=\"#sec-web-compat-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-web-compat-functiondeclarationinstantiation\">#sec-web-compat-functiondeclarationinstantiation</a></emu-xref> adds additional steps at this point.</li><li>If <var>strict</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>lexEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>varEnv</var>).</li><li>NOTE: Non-strict functions use a separate <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for top-level lexical declarations so that a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> can determine whether any var scoped declarations introduced by the eval code conflict with pre-existing top-level lexically scoped declarations. This is not needed for strict functions because a strict <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> always places all declarations into a new <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li></ol></li><li>Else, let <var>lexEnv</var> be <var>varEnv</var>.</li><li>Set the LexicalEnvironment of <var>calleeContext</var> to <var>lexEnv</var>.</li><li>Let <var>lexDeclarations</var> be the LexicallyScopedDeclarations of <var>code</var>.</li><li>For each element <var>d</var> of <var>lexDeclarations</var>, do<ol><li>NOTE: A lexically declared name cannot be the same as a function/generator declaration, formal parameter, or a var name. Lexically declared names are only instantiated here but not initialized.</li><li>For each element <var>dn</var> of the BoundNames of <var>d</var>, do<ol><li>If IsConstantDeclaration of <var>d</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>lexEnv</var>.CreateImmutableBinding(<var>dn</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li>Perform ! <var>lexEnv</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li></ol></li></ol></li></ol></li><li>For each <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> <var>f</var> of <var>functionsToInitialize</var>, do<ol><li>Let <var>fn</var> be the sole element of the BoundNames of <var>f</var>.</li><li>Let <var>fo</var> be InstantiateFunctionObject of <var>f</var> with argument <var>lexEnv</var>.</li><li>Perform ! <var>varEnv</var>.SetMutableBinding(<var>fn</var>, <var>fo</var>, <emu-val>false</emu-val>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p><emu-xref href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\"><a href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" class=\"excluded-xref\" excluded-id=\"sec-block-level-function-declarations-web-legacy-compatibility-semantics\">#sec-block-level-function-declarations-web-legacy-compatibility-semantics</a></emu-xref> provides an extension to the above algorithm that is necessary for backwards compatibility with web browser implementations of ECMAScript that predate ECMAScript 2015.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>Parameter <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>s may contain <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> expressions. Any top level declarations of such evals are only visible to the eval code (<emu-xref href=\"#sec-types-of-source-code\"><a href=\"#sec-types-of-source-code\" class=\"excluded-xref\" excluded-id=\"sec-types-of-source-code\">#sec-types-of-source-code</a></emu-xref>). The creation of the environment for such declarations is described in <emu-xref href=\"#sec-function-definitions-runtime-semantics-iteratorbindinginitialization\"><a href=\"#sec-function-definitions-runtime-semantics-iteratorbindinginitialization\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-runtime-semantics-iteratorbindinginitialization\">#sec-function-definitions-runtime-semantics-iteratorbindinginitialization</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-function-definitions-static-semantics-early-errors": {"num": "14.2.1", "title": "#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81739a57\">\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b26bacea\">\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"8379937e\">\n        <emu-t>function</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.\n        </li>\n        <li>\n          If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The LexicallyDeclaredNames of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> does not include identifiers bound using var or function declarations.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5cdf1a9f\"><emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> contains any duplicate entries.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions-static-semantics-early-errors": {"num": "14.9.1", "title": "#sec-async-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-async-arrow-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions-static-semantics-early-errors\">#sec-async-arrow-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7505c63a\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>.</li>\n      </ul>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"694c2ff0\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is not <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covering</a></emu-xref> an <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>.</li>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>All Early Error rules for <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> and its derived productions apply to CoveredAsyncArrowHead of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-destructuring-binding-patterns-static-semantics-containsexpression": {"num": "13.3.3.2", "title": "#sec-destructuring-binding-patterns-static-semantics-containsexpression Static Semantics: ContainsExpression", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-static-semantics-containsexpression\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-static-semantics-containsexpression\">#sec-destructuring-binding-patterns-static-semantics-containsexpression</span> Static Semantics: ContainsExpression</h1>\n        <emu-see-also-para op=\"ContainsExpression\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"ObjectBindingPattern\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"1131455e\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ObjectBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ba52f35d\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"906e476b\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0c457c16\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"8f1a867e\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ee591d49\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>has</var> be ContainsExpression of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0730de3b\">\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>has</var> be ContainsExpression of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1e2c0030\">\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>has</var> be ContainsExpression of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5a8f4d01\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"987bd1c2\">\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>:</emu-t>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Let <var>has</var> be IsComputedPropertyKey of <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ddd53e5\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89becb83\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingRestElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"145844de\">\n        <emu-t>...</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingRestElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1e627394\">\n        <emu-t>...</emu-t>\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-generator-function-definitions-static-semantics-early-errors": {"num": "14.5.1", "title": "#sec-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-generator-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-function-definitions-static-semantics-early-errors\">#sec-generator-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"GeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5c757ac\">\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if HasDirectSuper of <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7dbc99b6\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d271960\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"df68213a\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.\n        </li>\n        <li>\n          If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-createdynamicfunction": {"num": "19.2.1.1.1", "title": "#sec-createdynamicfunction CreateDynamicFunction ( constructor, newTarget, kind, args )", "html": "<emu-clause id=\"sec-createdynamicfunction\" aoid=\"CreateDynamicFunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</span> CreateDynamicFunction ( <var>constructor</var>, <var>newTarget</var>, <var>kind</var>, <var>args</var> )</h1>\n          <p>The abstract operation CreateDynamicFunction takes arguments <var>constructor</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>), <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>), <var>kind</var> (either <emu-const>normal</emu-const>, <emu-const>generator</emu-const>, <emu-const>async</emu-const>, or <emu-const>asyncGenerator</emu-const>), and <var>args</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values). <var>constructor</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is performing this action. <var>newTarget</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that <code>new</code> was initially applied to. <var>args</var> is the argument values that were passed to <var>constructor</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> has at least two elements.</li><li>Let <var>callerContext</var> be the second to top element of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Let <var>callerRealm</var> be <var>callerContext</var>'s <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref>.</li><li>Let <var>calleeRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Perform ?&#160;<emu-xref aoid=\"HostEnsureCanCompileStrings\"><a href=\"#sec-hostensurecancompilestrings\">HostEnsureCanCompileStrings</a></emu-xref>(<var>callerRealm</var>, <var>calleeRealm</var>).</li><li>If <var>newTarget</var> is <emu-val>undefined</emu-val>, set <var>newTarget</var> to <var>constructor</var>.</li><li>If <var>kind</var> is <emu-const>normal</emu-const>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%Function.prototype%\"</emu-val>.</li></ol></li><li>Else if <var>kind</var> is <emu-const>generator</emu-const>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%GeneratorFunction.prototype%\"</emu-val>.</li></ol></li><li>Else if <var>kind</var> is <emu-const>async</emu-const>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%AsyncFunction.prototype%\"</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>kind</var> is <emu-const>asyncGenerator</emu-const>.</li><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%AsyncGeneratorFunction.prototype%\"</emu-val>.</li></ol></li><li>Let <var>argCount</var> be the number of elements in <var>args</var>.</li><li>Let <var>P</var> be the empty String.</li><li>If <var>argCount</var> = 0, let <var>bodyArg</var> be the empty String.</li><li>Else if <var>argCount</var> = 1, let <var>bodyArg</var> be <var>args</var>[0].</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>argCount</var> &gt; 1.</li><li>Let <var>firstArg</var> be <var>args</var>[0].</li><li>Set <var>P</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>firstArg</var>).</li><li>Let <var>k</var> be 1.</li><li>Repeat, while <var>k</var> &lt; <var>argCount</var> - 1,<ol><li>Let <var>nextArg</var> be <var>args</var>[<var>k</var>].</li><li>Let <var>nextArgString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextArg</var>).</li><li>Set <var>P</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>P</var>, <emu-val>\",\"</emu-val> (a comma), and <var>nextArgString</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Let <var>bodyArg</var> be <var>args</var>[<var>k</var>].</li></ol></li><li>Let <var>bodyString</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of 0x000A (LINE FEED), ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>bodyArg</var>), and 0x000A (LINE FEED).</li><li>Let <var>prefix</var> be the prefix associated with <var>kind</var> in <emu-xref href=\"#table-dynamic-function-sourcetext-prefixes\"><a href=\"#table-dynamic-function-sourcetext-prefixes\" class=\"excluded-xref\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</a></emu-xref>.</li><li>Let <var>sourceString</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>prefix</var>, <emu-val>\" anonymous(\"</emu-val>, <var>P</var>, 0x000A (LINE FEED), <emu-val>\") {\"</emu-val>, <var>bodyString</var>, and <emu-val>\"}\"</emu-val>.</li><li>Let <var>sourceText</var> be !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>sourceString</var>).</li><li>Perform the following substeps in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> order, possibly interleaving parsing and error detection:<ol><li>Let <var>parameters</var> be <emu-xref aoid=\"ParseText\"><a href=\"#sec-parsetext\">ParseText</a></emu-xref>(! <emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>P</var>), <var>parameterGoal</var>).</li><li>If <var>parameters</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>Let <var>body</var> be <emu-xref aoid=\"ParseText\"><a href=\"#sec-parsetext\">ParseText</a></emu-xref>(! <emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>bodyString</var>), <var>goal</var>).</li><li>If <var>body</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>Let <var>strict</var> be ContainsUseStrict of <var>body</var>.</li><li>If <var>strict</var> is <emu-val>true</emu-val>, apply the <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> to <var>parameters</var>.</li><li>If <var>strict</var> is <emu-val>true</emu-val> and IsSimpleParameterList of <var>parameters</var> is <emu-val>false</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If any element of the BoundNames of <var>parameters</var> also occurs in the LexicallyDeclaredNames of <var>body</var>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>kind</var> is <emu-const>generator</emu-const> or <emu-const>asyncGenerator</emu-const>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>kind</var> is <emu-const>async</emu-const> or <emu-const>asyncGenerator</emu-const>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val>, then<ol><li>If BoundNames of <var>parameters</var> contains any duplicate elements, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li></ol></li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>fallbackProto</var>).</li><li>Let <var>realmF</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>scope</var> be <var>realmF</var>.[[GlobalEnv]].</li><li>Let <var>F</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<var>proto</var>, <var>sourceText</var>, <var>parameters</var>, <var>body</var>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <emu-val>\"anonymous\"</emu-val>).</li><li>If <var>kind</var> is <emu-const>generator</emu-const>, then<ol><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <emu-const>asyncGenerator</emu-const>, then<ol><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <emu-const>normal</emu-const>, perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>).</li><li>NOTE: Functions whose <var>kind</var> is <emu-const>async</emu-const> are not constructible and do not have a [[Construct]] internal method or a <emu-val>\"prototype\"</emu-val> property.</li><li>Return <var>F</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>CreateDynamicFunction defines a <emu-val>\"prototype\"</emu-val> property on any function it creates whose <var>kind</var> is not <emu-const>async</emu-const> to provide for the possibility that the function will be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n          </div></emu-note>\n\n          <emu-table id=\"table-dynamic-function-sourcetext-prefixes\" caption=\"Dynamic Function SourceText Prefixes\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</span>: Dynamic Function SourceText Prefixes</figcaption>\n            <table>\n              <tbody>\n                <tr><th>Kind</th><th>Prefix</th></tr>\n                <tr><td><emu-const>normal</emu-const></td><td><emu-val>\"function\"</emu-val></td></tr>\n                <tr><td><emu-const>generator</emu-const></td><td><emu-val>\"function*\"</emu-val></td></tr>\n                <tr><td><emu-const>async</emu-const></td><td><emu-val>\"async function\"</emu-val></td></tr>\n                <tr><td><emu-const>asyncGenerator</emu-const></td><td><emu-val>\"async function*\"</emu-val></td></tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </emu-clause>\n      "}, "sec-arrow-function-definitions-static-semantics-issimpleparameterlist": {"num": "14.3.8", "title": "#sec-arrow-function-definitions-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList", "html": "<emu-clause id=\"sec-arrow-function-definitions-static-semantics-issimpleparameterlist\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions-static-semantics-issimpleparameterlist\">#sec-arrow-function-definitions-static-semantics-issimpleparameterlist</span> Static Semantics: IsSimpleParameterList</h1>\n      <emu-see-also-para op=\"IsSimpleParameterList\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return IsSimpleParameterList of <var>formals</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-arrow-function-definitions-static-semantics-containsexpression": {"num": "14.3.4", "title": "#sec-arrow-function-definitions-static-semantics-containsexpression Static Semantics: ContainsExpression", "html": "<emu-clause id=\"sec-arrow-function-definitions-static-semantics-containsexpression\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions-static-semantics-containsexpression\">#sec-arrow-function-definitions-static-semantics-containsexpression</span> Static Semantics: ContainsExpression</h1>\n      <emu-see-also-para op=\"ContainsExpression\"></emu-see-also-para>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return ContainsExpression of <var>formals</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-function-definitions": {"num": "14.2", "title": "#sec-function-definitions Function Definitions", "html": "<emu-clause id=\"sec-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</span> Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-FunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7c02f6b3\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"ff05b860\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" id=\"prod-FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1faafdcc\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionBody\" params=\"Yield, Await\" id=\"prod-FunctionBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"82527203\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionStatementList\" params=\"Yield, Await\" id=\"prod-FunctionStatementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2267baf8\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.2.1</span>#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-boundnames\"><h1><span class=\"secnum\">14.2.2</span>#sec-function-definitions-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-contains\"><h1><span class=\"secnum\">14.2.3</span>#sec-function-definitions-static-semantics-contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsduplicatelabels\"><h1><span class=\"secnum\">14.2.4</span>#sec-function-definitions-static-semantics-containsduplicatelabels Static Semantics: ContainsDuplicateLabels</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsexpression\"><h1><span class=\"secnum\">14.2.5</span>#sec-function-definitions-static-semantics-containsexpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedbreaktarget\"><h1><span class=\"secnum\">14.2.6</span>#sec-function-definitions-static-semantics-containsundefinedbreaktarget Static Semantics: ContainsUndefinedBreakTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedcontinuetarget\"><h1><span class=\"secnum\">14.2.7</span>#sec-function-definitions-static-semantics-containsundefinedcontinuetarget Static Semantics: ContainsUndefinedContinueTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.2.8</span>#sec-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-expectedargumentcount\"><h1><span class=\"secnum\">14.2.9</span>#sec-function-definitions-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasinitializer\"><h1><span class=\"secnum\">14.2.10</span>#sec-function-definitions-static-semantics-hasinitializer Static Semantics: HasInitializer</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasname\"><h1><span class=\"secnum\">14.2.11</span>#sec-function-definitions-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-isanonymousfunctiondefinition\"><h1><span class=\"secnum\">14.2.12</span>#sec-isanonymousfunctiondefinition Static Semantics: IsAnonymousFunctionDefinition ( expr )</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isconstantdeclaration\"><h1><span class=\"secnum\">14.2.13</span>#sec-function-definitions-static-semantics-isconstantdeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">14.2.14</span>#sec-function-definitions-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-issimpleparameterlist\"><h1><span class=\"secnum\">14.2.15</span>#sec-function-definitions-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">14.2.16</span>#sec-function-definitions-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">14.2.17</span>#sec-function-definitions-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">14.2.18</span>#sec-function-definitions-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">14.2.19</span>#sec-function-definitions-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">14.2.20</span>#sec-function-definitions-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">14.2.21</span>#sec-function-definitions-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-instantiatefunctionobject\"><h1><span class=\"secnum\">14.2.22</span>#sec-function-definitions-runtime-semantics-instantiatefunctionobject Runtime Semantics: InstantiateFunctionObject</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.2.23</span>#sec-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.2.24</span>#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-async-function-definitions-static-semantics-early-errors": {"num": "14.8.1", "title": "#sec-async-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-async-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions-static-semantics-early-errors\">#sec-async-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"AsyncMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"759e5682\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if HasDirectSuper of <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n      </ul>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e2632ddf\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6a076671\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6a076671\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e2632ddf\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.</li>\n        <li>If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions": {"num": "14.9", "title": "#sec-async-arrow-function-definitions Async Arrow Function Definitions", "html": "<emu-clause id=\"sec-async-arrow-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</span> Async Arrow Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\" id=\"prod-AsyncArrowFunction\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bb50dce4\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"callcover\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncConciseBody\" params=\"In\" id=\"prod-AsyncConciseBody\">\n    <emu-nt params=\"In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6cf537fe\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, +Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6ccf9be6\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\" id=\"prod-AsyncArrowBindingIdentifier\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"614a19b0\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" params=\"Yield, Await\" id=\"prod-CoverCallExpressionAndAsyncArrowHead\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f747be5d\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MemberExpression\">MemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <h2>Supplemental Syntax</h2>\n    <p>When processing an instance of the production\n      <br>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"694c2ff0\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is refined using the following grammar:</p>\n\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowHead\" id=\"prod-AsyncArrowHead\">\n    <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c9d14bfe\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.9.1</span>#sec-async-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-CoveredAsyncArrowHead\"><h1><span class=\"secnum\">14.9.2</span>#sec-async-arrow-function-definitions-static-semantics-CoveredAsyncArrowHead Static Semantics: CoveredAsyncArrowHead</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-BoundNames\"><h1><span class=\"secnum\">14.9.3</span>#sec-async-arrow-function-definitions-static-semantics-BoundNames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-Contains\"><h1><span class=\"secnum\">14.9.4</span>#sec-async-arrow-function-definitions-static-semantics-Contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-ContainsExpression\"><h1><span class=\"secnum\">14.9.5</span>#sec-async-arrow-function-definitions-static-semantics-ContainsExpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.9.6</span>#sec-async-arrow-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount\"><h1><span class=\"secnum\">14.9.7</span>#sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount Static Semantics: ExpectedArgumentCount</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-HasName\"><h1><span class=\"secnum\">14.9.8</span>#sec-async-arrow-function-definitions-static-semantics-HasName Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList\"><h1><span class=\"secnum\">14.9.9</span>#sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-LexicallyDeclaredNames\"><h1><span class=\"secnum\">14.9.10</span>#sec-async-arrow-function-definitions-static-semantics-LexicallyDeclaredNames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-LexicallyScopedDeclarations\"><h1><span class=\"secnum\">14.9.11</span>#sec-async-arrow-function-definitions-static-semantics-LexicallyScopedDeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-VarDeclaredNames\"><h1><span class=\"secnum\">14.9.12</span>#sec-async-arrow-function-definitions-static-semantics-VarDeclaredNames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-VarScopedDeclarations\"><h1><span class=\"secnum\">14.9.13</span>#sec-async-arrow-function-definitions-static-semantics-VarScopedDeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-IteratorBindingInitialization\"><h1><span class=\"secnum\">14.9.14</span>#sec-async-arrow-function-definitions-IteratorBindingInitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-EvaluateBody\"><h1><span class=\"secnum\">14.9.15</span>#sec-async-arrow-function-definitions-EvaluateBody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.9.16</span>#sec-async-arrow-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.9.17</span>#sec-async-arrow-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-method-definitions-static-semantics-early-errors": {"num": "14.4.1", "title": "#sec-method-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-method-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-method-definitions-static-semantics-early-errors\">#sec-method-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cb8e53e9\">\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4402354c\">\n        <emu-t>set</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if BoundNames of <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> contains any duplicate elements.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and IsSimpleParameterList of <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist": {"num": "13.3.3.4", "title": "#sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist\">#sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist</span> Static Semantics: IsSimpleParameterList</h1>\n        <emu-see-also-para op=\"IsSimpleParameterList\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"983adfc8\"><emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ddd53e5\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89becb83\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-destructuring-binding-patterns-static-semantics-hasinitializer": {"num": "13.3.3.3", "title": "#sec-destructuring-binding-patterns-static-semantics-hasinitializer Static Semantics: HasInitializer", "html": "<emu-clause id=\"sec-destructuring-binding-patterns-static-semantics-hasinitializer\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns-static-semantics-hasinitializer\">#sec-destructuring-binding-patterns-static-semantics-hasinitializer</span> Static Semantics: HasInitializer</h1>\n        <emu-see-also-para op=\"HasInitializer\"></emu-see-also-para>\n        <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"983adfc8\"><emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ddd53e5\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n        <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89becb83\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n        <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      </emu-clause>\n\n      "}, "sec-parameter-lists": {"num": "14.1", "title": "#sec-parameter-lists Parameter Lists", "html": "<emu-clause id=\"sec-parameter-lists\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-parameter-lists\">#sec-parameter-lists</span> Parameter Lists</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"UniqueFormalParameters\" params=\"Yield, Await\" id=\"prod-UniqueFormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"900b794a\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameters\" params=\"Yield, Await\" id=\"prod-FormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"c52f7805\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e5fdd15f\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"58349494\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"607f4086\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameterList\" params=\"Yield, Await\" id=\"prod-FormalParameterList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd0854fb\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"30b35c7e\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionRestParameter\" params=\"Yield, Await\" id=\"prod-FunctionRestParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"216da14c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameter\" params=\"Yield, Await\" id=\"prod-FormalParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c6930e11\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <div id=\"excluded-sec-parameter-lists-static-semantics-early-errors\"><h1><span class=\"secnum\">14.1.1</span>#sec-parameter-lists-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-internal-slots-of-ecmascript-function-objects": "Table 29", "table-dynamic-function-sourcetext-prefixes": "Table 50"}}, "to": {"secList": ["sec-destructuring-binding-patterns", "sec-arrow-function-definitions", "sec-parameter-lists-static-semantics-early-errors", "sec-arrow-function-definitions-static-semantics-early-errors", "sec-static-semantics-expectedargumentcount", "sec-async-generator-function-definitions-static-semantics-early-errors", "sec-static-semantics-hasinitializer", "sec-ordinaryfunctioncreate", "sec-method-definitions", "sec-functiondeclarationinstantiation", "sec-function-definitions-static-semantics-early-errors", "sec-static-semantics-issimpleparameterlist", "sec-async-arrow-function-definitions-static-semantics-early-errors", "sec-generator-function-definitions-static-semantics-early-errors", "sec-createdynamicfunction", "sec-function-definitions", "sec-async-function-definitions-static-semantics-early-errors", "sec-async-arrow-function-definitions", "sec-static-semantics-containsexpression", "sec-method-definitions-static-semantics-early-errors", "sec-parameter-lists"], "secData": {"sec-destructuring-binding-patterns": {"num": "13.3.3", "title": "#sec-destructuring-binding-patterns Destructuring Binding Patterns", "html": "<emu-clause id=\"sec-destructuring-binding-patterns\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-destructuring-binding-patterns\">#sec-destructuring-binding-patterns</span> Destructuring Binding Patterns</h1>\n      <h2>Syntax</h2>\n      <emu-grammar type=\"definition\"><emu-production name=\"BindingPattern\" params=\"Yield, Await\" id=\"prod-BindingPattern\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingPattern\">BindingPattern</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7d60f68c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"869ca7d6\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ObjectBindingPattern\" params=\"Yield, Await\" id=\"prod-ObjectBindingPattern\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"539d4408\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"b1dfec5e\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"f7cb1385\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ArrayBindingPattern\" params=\"Yield, Await\" id=\"prod-ArrayBindingPattern\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f36c8065\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"4f3da32d\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"799161ee\">\n        <emu-t>[</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\" optional=\"\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingRestProperty\" params=\"Yield, Await\" id=\"prod-BindingRestProperty\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"34b0d77b\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingPropertyList\" params=\"Yield, Await\" id=\"prod-BindingPropertyList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f1b6880e\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingProperty\">BindingProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"79695f7a\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingProperty\">BindingProperty</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingElementList\" params=\"Yield, Await\" id=\"prod-BindingElementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2e96b0e0\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e73f33c3\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElementList\">BindingElementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingElisionElement\" params=\"Yield, Await\" id=\"prod-BindingElisionElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e636dca9\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingProperty\" params=\"Yield, Await\" id=\"prod-BindingProperty\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingProperty\">BindingProperty</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"d3526702\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"5c291273\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>:</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingElement\" params=\"Yield, Await\" id=\"prod-BindingElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"d3526702\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"132bf94f\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPattern\">BindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"SingleNameBinding\" params=\"Yield, Await\" id=\"prod-SingleNameBinding\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"306ee631\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"+In, ?Yield, ?Await\" optional=\"\"><a href=\"#prod-Initializer\">Initializer</a><emu-mods><emu-params>[+In, ?Yield, ?Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"BindingRestElement\" params=\"Yield, Await\" id=\"prod-BindingRestElement\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"34b0d77b\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"2dbec6ac\">\n        <emu-t>...</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingPattern\">BindingPattern</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n      <div id=\"excluded-sec-destructuring-binding-patterns-static-semantics-boundnames\"><h1><span class=\"secnum\">13.3.3.1</span>#sec-destructuring-binding-patterns-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization\"><h1><span class=\"secnum\">13.3.3.2</span>#sec-destructuring-binding-patterns-runtime-semantics-bindinginitialization Runtime Semantics: BindingInitialization</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\"><h1><span class=\"secnum\">13.3.3.3</span>#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization Runtime Semantics: PropertyBindingInitialization</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\"><h1><span class=\"secnum\">13.3.3.4</span>#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization Runtime Semantics: RestBindingInitialization</h1>...</div><div id=\"excluded-sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">13.3.3.5</span>#sec-destructuring-binding-patterns-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-runtime-semantics-keyedbindinginitialization\"><h1><span class=\"secnum\">13.3.3.6</span>#sec-runtime-semantics-keyedbindinginitialization Runtime Semantics: KeyedBindingInitialization</h1>...</div></emu-clause>\n  "}, "sec-arrow-function-definitions": {"num": "14.3", "title": "#sec-arrow-function-definitions Arrow Function Definitions", "html": "<emu-clause id=\"sec-arrow-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions\">#sec-arrow-function-definitions</span> Arrow Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"ArrowFunction\" params=\"In, Yield, Await\" id=\"prod-ArrowFunction\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-ArrowFunction\">ArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bdca54b2\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ArrowParameters\" params=\"Yield, Await\" id=\"prod-ArrowParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"22bf917e\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"parencover\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"ConciseBody\" params=\"In\" id=\"prod-ConciseBody\">\n    <emu-nt params=\"In\"><a href=\"#prod-ConciseBody\">ConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7a8157ec\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, ~Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, ~Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6f7b95b3\">\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"ExpressionBody\" params=\"In, Await\" id=\"prod-ExpressionBody\">\n    <emu-nt params=\"In, Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[In, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"21c2a074\"><emu-nt params=\"?In, ~Yield, ?Await\"><a href=\"#prod-AssignmentExpression\">AssignmentExpression</a><emu-mods><emu-params>[?In, ~Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <h2>Supplemental Syntax</h2>\n    <p>When processing an instance of the production\n      <br>\n      <emu-grammar><emu-production name=\"ArrowParameters\" params=\"Yield, Await\" collapsed=\"\" class=\" inline\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowParameters\">ArrowParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"29cadaef\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> is refined using the following grammar:</p>\n    <emu-grammar type=\"definition\"><emu-production name=\"ArrowFormalParameters\" params=\"Yield, Await\" id=\"prod-ArrowFormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b7561ab3\">\n        <emu-t>(</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-arrow-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.3.1</span>#sec-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-boundnames\"><h1><span class=\"secnum\">14.3.2</span>#sec-arrow-function-definitions-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-contains\"><h1><span class=\"secnum\">14.3.3</span>#sec-arrow-function-definitions-static-semantics-contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.3.4</span>#sec-arrow-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-hasname\"><h1><span class=\"secnum\">14.3.5</span>#sec-arrow-function-definitions-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-static-semantics-coveredformalslist\"><h1><span class=\"secnum\">14.3.6</span>#sec-static-semantics-coveredformalslist Static Semantics: CoveredFormalsList</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">14.3.7</span>#sec-arrow-function-definitions-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">14.3.8</span>#sec-arrow-function-definitions-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">14.3.9</span>#sec-arrow-function-definitions-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">14.3.10</span>#sec-arrow-function-definitions-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">14.3.11</span>#sec-arrow-function-definitions-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">14.3.12</span>#sec-arrow-function-definitions-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.3.13</span>#sec-arrow-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-arrow-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.3.14</span>#sec-arrow-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-parameter-lists-static-semantics-early-errors": {"num": "14.1.1", "title": "#sec-parameter-lists-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-parameter-lists-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-parameter-lists-static-semantics-early-errors\">#sec-parameter-lists-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"32e3c3aa\"><emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>false</emu-val> and BoundNames of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> contains any duplicate elements.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>Multiple occurrences of the same <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> in a <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is only allowed for functions which have simple parameter lists and which are not defined in <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n\n    "}, "sec-arrow-function-definitions-static-semantics-early-errors": {"num": "14.3.1", "title": "#sec-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-arrow-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-arrow-function-definitions-static-semantics-early-errors\">#sec-arrow-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"ArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowFunction\">ArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2a7a3456\">\n        <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-ConciseBody\">ConciseBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt> is not <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covering</a></emu-xref> an <emu-nt><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a></emu-nt>.\n        </li>\n        <li>\n          All <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <emu-nt><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a></emu-nt> and its derived productions also apply to CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-static-semantics-expectedargumentcount": {"num": "14.1.5", "title": "#sec-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount", "html": "<emu-clause id=\"sec-static-semantics-expectedargumentcount\" oldids=\"sec-function-definitions-static-semantics-expectedargumentcount,sec-arrow-function-definitions-static-semantics-expectedargumentcount,sec-method-definitions-static-semantics-expectedargumentcount,sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount\" type=\"sdo\" aoid=\"ExpectedArgumentCount\"><span id=\"sec-async-arrow-function-definitions-static-semantics-ExpectedArgumentCount\"></span><span id=\"sec-method-definitions-static-semantics-expectedargumentcount\"></span><span id=\"sec-arrow-function-definitions-static-semantics-expectedargumentcount\"></span><span id=\"sec-function-definitions-static-semantics-expectedargumentcount\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-expectedargumentcount\">#sec-static-semantics-expectedargumentcount</span> Static Semantics: ExpectedArgumentCount</h1>\n      <emu-grammar><emu-production name=\"FormalParameters\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"74d26704\"><emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return 0.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b9079b6b\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ExpectedArgumentCount\"><a href=\"#sec-static-semantics-expectedargumentcount\">ExpectedArgumentCount</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The ExpectedArgumentCount of a <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is the number of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> to the left of either the rest parameter or the first <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> with an Initializer. A <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> without an initializer is allowed after the first parameter with an initializer but such parameters are considered to be optional with <emu-val>undefined</emu-val> as their default value.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"497954f5\"><emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-xref aoid=\"HasInitializer\"><a href=\"#sec-static-semantics-hasinitializer\">HasInitializer</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> is <emu-val>true</emu-val>, return 0.</li><li>Return 1.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>count</var> be <emu-xref aoid=\"ExpectedArgumentCount\"><a href=\"#sec-static-semantics-expectedargumentcount\">ExpectedArgumentCount</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>.</li><li>If <emu-xref aoid=\"HasInitializer\"><a href=\"#sec-static-semantics-hasinitializer\">HasInitializer</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val> or <emu-xref aoid=\"HasInitializer\"><a href=\"#sec-static-semantics-hasinitializer\">HasInitializer</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> is <emu-val>true</emu-val>, return <var>count</var>.</li><li>Return <var>count</var> + 1.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return 1.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return <emu-xref aoid=\"ExpectedArgumentCount\"><a href=\"#sec-static-semantics-expectedargumentcount\">ExpectedArgumentCount</a></emu-xref> of <var>formals</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"PropertySetParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"497954f5\"><emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-xref aoid=\"HasInitializer\"><a href=\"#sec-static-semantics-hasinitializer\">HasInitializer</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> is <emu-val>true</emu-val>, return 0.</li><li>Return 1.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncArrowBindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return 1.</li></ol></emu-alg>\n    </emu-clause>\n  "}, "sec-async-generator-function-definitions-static-semantics-early-errors": {"num": "14.6.1", "title": "#sec-async-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-async-generator-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-generator-function-definitions-static-semantics-early-errors\">#sec-async-generator-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"AsyncGeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"be384400\">\n        <emu-t>async</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if HasDirectSuper of <emu-nt><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li>\n      </ul>\n      <emu-grammar><emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"13d2cc33\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c51514e0\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncGeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncGeneratorExpression\">AsyncGeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"9cf94eaf\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.</li>\n        <li>If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.</li>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-static-semantics-hasinitializer": {"num": "14.1.4", "title": "#sec-static-semantics-hasinitializer Static Semantics: HasInitializer", "html": "<emu-clause id=\"sec-static-semantics-hasinitializer\" oldids=\"sec-destructuring-binding-patterns-static-semantics-hasinitializer,sec-function-definitions-static-semantics-hasinitializer\" type=\"sdo\" aoid=\"HasInitializer\"><span id=\"sec-function-definitions-static-semantics-hasinitializer\"></span><span id=\"sec-destructuring-binding-patterns-static-semantics-hasinitializer\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-hasinitializer\">#sec-static-semantics-hasinitializer</span> Static Semantics: HasInitializer</h1>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"983adfc8\"><emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ddd53e5\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89becb83\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-xref aoid=\"HasInitializer\"><a href=\"#sec-static-semantics-hasinitializer\">HasInitializer</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"HasInitializer\"><a href=\"#sec-static-semantics-hasinitializer\">HasInitializer</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-ordinaryfunctioncreate": {"num": "9.2.3", "title": "#sec-ordinaryfunctioncreate OrdinaryFunctionCreate ( functionPrototype, sourceText, ParameterList, Body, thisMode, Scope )", "html": "<emu-clause id=\"sec-ordinaryfunctioncreate\" aoid=\"OrdinaryFunctionCreate\" oldids=\"sec-functionallocate,sec-functioninitialize,sec-functioncreate,sec-generatorfunctioncreate,sec-asyncgeneratorfunctioncreate,sec-async-functions-abstract-operations-async-function-create\"><span id=\"sec-async-functions-abstract-operations-async-function-create\"></span><span id=\"sec-asyncgeneratorfunctioncreate\"></span><span id=\"sec-generatorfunctioncreate\"></span><span id=\"sec-functioncreate\"></span><span id=\"sec-functioninitialize\"></span><span id=\"sec-functionallocate\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-ordinaryfunctioncreate\">#sec-ordinaryfunctioncreate</span> OrdinaryFunctionCreate ( <var>functionPrototype</var>, <var>sourceText</var>, <var>ParameterList</var>, <var>Body</var>, <var>thisMode</var>, <var>Scope</var> )</h1>\n      <p>The abstract operation OrdinaryFunctionCreate takes arguments <var>functionPrototype</var> (an Object), <var>sourceText</var> (a sequence of Unicode code points), <var>ParameterList</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>Body</var> (a <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref>), <var>thisMode</var> (either <emu-const>lexical-this</emu-const> or <emu-const>non-lexical-this</emu-const>), and <var>Scope</var> (an <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>). <var>sourceText</var> is the source text of the syntactic definition of the function to be created. It performs the following steps when called:</p>\n      <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <emu-xref aoid=\"Type\"><a href=\"#sec-ecmascript-data-types-and-values\">Type</a></emu-xref>(<var>functionPrototype</var>) is Object.</li><li>Let <var>internalSlotsList</var> be the internal slots listed in <emu-xref href=\"#table-internal-slots-of-ecmascript-function-objects\"><a href=\"#table-internal-slots-of-ecmascript-function-objects\" class=\"excluded-xref\" excluded-id=\"table-internal-slots-of-ecmascript-function-objects\">#table-internal-slots-of-ecmascript-function-objects</a></emu-xref>.</li><li>Let <var>F</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<var>functionPrototype</var>, <var>internalSlotsList</var>).</li><li>Set <var>F</var>.[[Call]] to the definition specified in <emu-xref href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\"><a href=\"#sec-ecmascript-function-objects-call-thisargument-argumentslist\" class=\"excluded-xref\" excluded-id=\"sec-ecmascript-function-objects-call-thisargument-argumentslist\">#sec-ecmascript-function-objects-call-thisargument-argumentslist</a></emu-xref>.</li><li>Set <var>F</var>.[[SourceText]] to <var>sourceText</var>.</li><li>Set <var>F</var>.[[FormalParameters]] to <var>ParameterList</var>.</li><li>Set <var>F</var>.[[ECMAScriptCode]] to <var>Body</var>.</li><li>If the source text matching <var>Body</var> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, let <var>Strict</var> be <emu-val>true</emu-val>; else let <var>Strict</var> be <emu-val>false</emu-val>.</li><li>Set <var>F</var>.[[Strict]] to <var>Strict</var>.</li><li>If <var>thisMode</var> is <emu-const>lexical-this</emu-const>, set <var>F</var>.[[ThisMode]] to <emu-const>lexical</emu-const>.</li><li>Else if <var>Strict</var> is <emu-val>true</emu-val>, set <var>F</var>.[[ThisMode]] to <emu-const>strict</emu-const>.</li><li>Else, set <var>F</var>.[[ThisMode]] to <emu-const>global</emu-const>.</li><li>Set <var>F</var>.[[IsClassConstructor]] to <emu-val>false</emu-val>.</li><li>Set <var>F</var>.[[Environment]] to <var>Scope</var>.</li><li>Set <var>F</var>.[[ScriptOrModule]] to <emu-xref aoid=\"GetActiveScriptOrModule\"><a href=\"#sec-getactivescriptormodule\">GetActiveScriptOrModule</a></emu-xref>().</li><li>Set <var>F</var>.[[Realm]] to <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Set <var>F</var>.[[HomeObject]] to <emu-val>undefined</emu-val>.</li><li>Let <var>len</var> be the <emu-xref aoid=\"ExpectedArgumentCount\"><a href=\"#sec-static-semantics-expectedargumentcount\">ExpectedArgumentCount</a></emu-xref> of <var>ParameterList</var>.</li><li>Perform !&#160;<emu-xref aoid=\"SetFunctionLength\"><a href=\"#sec-setfunctionlength\">SetFunctionLength</a></emu-xref>(<var>F</var>, <var>len</var>).</li><li>Return <var>F</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-method-definitions": {"num": "14.4", "title": "#sec-method-definitions Method Definitions", "html": "<emu-clause id=\"sec-method-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-method-definitions\">#sec-method-definitions</span> Method Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"MethodDefinition\" params=\"Yield, Await\" id=\"prod-MethodDefinition\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-MethodDefinition\">MethodDefinition</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"19d49312\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"b8854ce2\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"978adba9\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncMethod\">AsyncMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"d8d5f4bb\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-AsyncGeneratorMethod\">AsyncGeneratorMethod</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"044ecd0b\">\n        <emu-t>get</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"55774850\">\n        <emu-t>set</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-PropertyName\">PropertyName</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"PropertySetParameterList\" id=\"prod-PropertySetParameterList\">\n    <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"3f4952d7\"><emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-method-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.4.1</span>#sec-method-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-computedpropertycontains\"><h1><span class=\"secnum\">14.4.2</span>#sec-method-definitions-static-semantics-computedpropertycontains Static Semantics: ComputedPropertyContains</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-hasdirectsuper\"><h1><span class=\"secnum\">14.4.3</span>#sec-method-definitions-static-semantics-hasdirectsuper Static Semantics: HasDirectSuper</h1>...</div><div id=\"excluded-sec-method-definitions-static-semantics-propname\"><h1><span class=\"secnum\">14.4.4</span>#sec-method-definitions-static-semantics-propname Static Semantics: PropName</h1>...</div><div id=\"excluded-sec-static-semantics-specialmethod\"><h1><span class=\"secnum\">14.4.5</span>#sec-static-semantics-specialmethod Static Semantics: SpecialMethod</h1>...</div><div id=\"excluded-sec-runtime-semantics-definemethod\"><h1><span class=\"secnum\">14.4.6</span>#sec-runtime-semantics-definemethod Runtime Semantics: DefineMethod</h1>...</div><div id=\"excluded-sec-runtime-semantics-methoddefinitionevaluation\"><h1><span class=\"secnum\">14.4.7</span>#sec-runtime-semantics-methoddefinitionevaluation Runtime Semantics: MethodDefinitionEvaluation</h1>...</div></emu-clause>\n\n  "}, "sec-functiondeclarationinstantiation": {"num": "9.2.10", "title": "#sec-functiondeclarationinstantiation FunctionDeclarationInstantiation ( func, argumentsList )", "html": "<emu-clause id=\"sec-functiondeclarationinstantiation\" aoid=\"FunctionDeclarationInstantiation\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-functiondeclarationinstantiation\">#sec-functiondeclarationinstantiation</span> FunctionDeclarationInstantiation ( <var>func</var>, <var>argumentsList</var> )</h1>\n      <emu-note><span class=\"note\">Note 1</span><div class=\"note-contents\">\n        <p>When an <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is established for evaluating an ECMAScript function a new <emu-xref href=\"#sec-function-environment-records\"><a href=\"#sec-function-environment-records\">function Environment Record</a></emu-xref> is created and bindings for each formal parameter are instantiated in that <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>. Each declaration in the function body is also instantiated. If the function's formal parameters do not include any default value initializers then the body declarations are instantiated in the same <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> as the parameters. If default value parameter initializers exist, a second <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is created for the body declarations. Formal parameters and functions are initialized as part of FunctionDeclarationInstantiation. All other bindings are initialized during evaluation of the function body.</p>\n      </div></emu-note>\n      <p>The abstract operation FunctionDeclarationInstantiation takes arguments <var>func</var> (a <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref>) and <var>argumentsList</var>. <var>func</var> is the <emu-xref href=\"#function-object\"><a href=\"#function-object\">function object</a></emu-xref> for which the <emu-xref href=\"#sec-execution-contexts\"><a href=\"#sec-execution-contexts\">execution context</a></emu-xref> is being established. It performs the following steps when called:</p>\n      <!--\n        WARNING: If you add, remove, rename, or repurpose any variable names\n                 within this algorithm, you may need to update\n                 #sec-web-compat-functiondeclarationinstantiation accordingly.\n      -->\n      <emu-alg><ol><li>Let <var>calleeContext</var> be the <emu-xref href=\"#running-execution-context\"><a href=\"#running-execution-context\">running execution context</a></emu-xref>.</li><li>Let <var>code</var> be <var>func</var>.[[ECMAScriptCode]].</li><li>Let <var>strict</var> be <var>func</var>.[[Strict]].</li><li>Let <var>formals</var> be <var>func</var>.[[FormalParameters]].</li><li>Let <var>parameterNames</var> be the BoundNames of <var>formals</var>.</li><li>If <var>parameterNames</var> has any duplicate entries, let <var>hasDuplicates</var> be <emu-val>true</emu-val>. Otherwise, let <var>hasDuplicates</var> be <emu-val>false</emu-val>.</li><li>Let <var>simpleParameterList</var> be <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <var>formals</var>.</li><li>Let <var>hasParameterExpressions</var> be <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <var>formals</var>.</li><li>Let <var>varNames</var> be the VarDeclaredNames of <var>code</var>.</li><li>Let <var>varDeclarations</var> be the VarScopedDeclarations of <var>code</var>.</li><li>Let <var>lexicalNames</var> be the LexicallyDeclaredNames of <var>code</var>.</li><li>Let <var>functionNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>Let <var>functionsToInitialize</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>d</var> of <var>varDeclarations</var>, in reverse <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> order, do<ol><li>If <var>d</var> is neither a <emu-nt><a href=\"#prod-VariableDeclaration\">VariableDeclaration</a></emu-nt> nor a <emu-nt><a href=\"#prod-ForBinding\">ForBinding</a></emu-nt> nor a <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>, then<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>d</var> is either a <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt>, a <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt>, an <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt>, or an <emu-nt><a href=\"#prod-AsyncGeneratorDeclaration\">AsyncGeneratorDeclaration</a></emu-nt>.</li><li>Let <var>fn</var> be the sole element of the BoundNames of <var>d</var>.</li><li>If <var>fn</var> is not an element of <var>functionNames</var>, then<ol><li>Insert <var>fn</var> as the first element of <var>functionNames</var>.</li><li>NOTE: If there are multiple function declarations for the same name, the last declaration is used.</li><li>Insert <var>d</var> as the first element of <var>functionsToInitialize</var>.</li></ol></li></ol></li></ol></li><li>Let <var>argumentsObjectNeeded</var> be <emu-val>true</emu-val>.</li><li>If <var>func</var>.[[ThisMode]] is <emu-const>lexical</emu-const>, then<ol><li>NOTE: Arrow functions never have an arguments objects.</li><li>Set <var>argumentsObjectNeeded</var> to <emu-val>false</emu-val>.</li></ol></li><li>Else if <emu-val>\"arguments\"</emu-val> is an element of <var>parameterNames</var>, then<ol><li>Set <var>argumentsObjectNeeded</var> to <emu-val>false</emu-val>.</li></ol></li><li>Else if <var>hasParameterExpressions</var> is <emu-val>false</emu-val>, then<ol><li>If <emu-val>\"arguments\"</emu-val> is an element of <var>functionNames</var> or if <emu-val>\"arguments\"</emu-val> is an element of <var>lexicalNames</var>, then<ol><li>Set <var>argumentsObjectNeeded</var> to <emu-val>false</emu-val>.</li></ol></li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val> or if <var>hasParameterExpressions</var> is <emu-val>false</emu-val>, then<ol><li>NOTE: Only a single <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed for the parameters and top-level vars.</li><li>Let <var>env</var> be the LexicalEnvironment of <var>calleeContext</var>.</li></ol></li><li>Else,<ol><li>NOTE: A separate <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed to ensure that bindings created by <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> calls in the formal parameter list are outside the environment where parameters are declared.</li><li>Let <var>calleeEnv</var> be the LexicalEnvironment of <var>calleeContext</var>.</li><li>Let <var>env</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>calleeEnv</var>).</li><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The VariableEnvironment of <var>calleeContext</var> is <var>calleeEnv</var>.</li><li>Set the LexicalEnvironment of <var>calleeContext</var> to <var>env</var>.</li></ol></li><li>For each String <var>paramName</var> of <var>parameterNames</var>, do<ol><li>Let <var>alreadyDeclared</var> be <var>env</var>.HasBinding(<var>paramName</var>).</li><li>NOTE: Early errors ensure that duplicate parameter names can only occur in non-strict functions that do not have parameter default values or rest parameters.</li><li>If <var>alreadyDeclared</var> is <emu-val>false</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<var>paramName</var>, <emu-val>false</emu-val>).</li><li>If <var>hasDuplicates</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>env</var>.InitializeBinding(<var>paramName</var>, <emu-val>undefined</emu-val>).</li></ol></li></ol></li></ol></li><li>If <var>argumentsObjectNeeded</var> is <emu-val>true</emu-val>, then<ol><li>If <var>strict</var> is <emu-val>true</emu-val> or if <var>simpleParameterList</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>ao</var> be <emu-xref aoid=\"CreateUnmappedArgumentsObject\"><a href=\"#sec-createunmappedargumentsobject\">CreateUnmappedArgumentsObject</a></emu-xref>(<var>argumentsList</var>).</li></ol></li><li>Else,<ol><li>NOTE: A mapped argument object is only provided for non-strict functions that don't have a rest parameter, any parameter default value initializers, or any destructured parameters.</li><li>Let <var>ao</var> be <emu-xref aoid=\"CreateMappedArgumentsObject\"><a href=\"#sec-createmappedargumentsobject\">CreateMappedArgumentsObject</a></emu-xref>(<var>func</var>, <var>formals</var>, <var>argumentsList</var>, <var>env</var>).</li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>env</var>.CreateImmutableBinding(<emu-val>\"arguments\"</emu-val>, <emu-val>false</emu-val>).</li></ol></li><li>Else,<ol><li>Perform ! <var>env</var>.CreateMutableBinding(<emu-val>\"arguments\"</emu-val>, <emu-val>false</emu-val>).</li></ol></li><li>Call <var>env</var>.InitializeBinding(<emu-val>\"arguments\"</emu-val>, <var>ao</var>).</li><li>Let <var>parameterBindings</var> be a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> whose elements are the elements of <var>parameterNames</var>, followed by <emu-val>\"arguments\"</emu-val>.</li></ol></li><li>Else,<ol><li>Let <var>parameterBindings</var> be <var>parameterNames</var>.</li></ol></li><li>Let <var>iteratorRecord</var> be <emu-xref aoid=\"CreateListIteratorRecord\"><a href=\"#sec-createlistiteratorRecord\">CreateListIteratorRecord</a></emu-xref>(<var>argumentsList</var>).</li><li>If <var>hasDuplicates</var> is <emu-val>true</emu-val>, then<ol><li>Perform ? IteratorBindingInitialization for <var>formals</var> with <var>iteratorRecord</var> and <emu-val>undefined</emu-val> as arguments.</li></ol></li><li>Else,<ol><li>Perform ? IteratorBindingInitialization for <var>formals</var> with <var>iteratorRecord</var> and <var>env</var> as arguments.</li></ol></li><li>If <var>hasParameterExpressions</var> is <emu-val>false</emu-val>, then<ol><li>NOTE: Only a single <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed for the parameters and top-level vars.</li><li>Let <var>instantiatedVarNames</var> be a copy of the <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> <var>parameterBindings</var>.</li><li>For each element <var>n</var> of <var>varNames</var>, do<ol><li>If <var>n</var> is not an element of <var>instantiatedVarNames</var>, then<ol><li>Append <var>n</var> to <var>instantiatedVarNames</var>.</li><li>Perform ! <var>env</var>.CreateMutableBinding(<var>n</var>, <emu-val>false</emu-val>).</li><li>Call <var>env</var>.InitializeBinding(<var>n</var>, <emu-val>undefined</emu-val>).</li></ol></li></ol></li><li>Let <var>varEnv</var> be <var>env</var>.</li></ol></li><li>Else,<ol><li>NOTE: A separate <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> is needed to ensure that closures created by expressions in the formal parameter list do not have visibility of declarations in the function body.</li><li>Let <var>varEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>env</var>).</li><li>Set the VariableEnvironment of <var>calleeContext</var> to <var>varEnv</var>.</li><li>Let <var>instantiatedVarNames</var> be a new empty <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref>.</li><li>For each element <var>n</var> of <var>varNames</var>, do<ol><li>If <var>n</var> is not an element of <var>instantiatedVarNames</var>, then<ol><li>Append <var>n</var> to <var>instantiatedVarNames</var>.</li><li>Perform ! <var>varEnv</var>.CreateMutableBinding(<var>n</var>, <emu-val>false</emu-val>).</li><li>If <var>n</var> is not an element of <var>parameterBindings</var> or if <var>n</var> is an element of <var>functionNames</var>, let <var>initialValue</var> be <emu-val>undefined</emu-val>.</li><li>Else,<ol><li>Let <var>initialValue</var> be ! <var>env</var>.GetBindingValue(<var>n</var>, <emu-val>false</emu-val>).</li></ol></li><li>Call <var>varEnv</var>.InitializeBinding(<var>n</var>, <var>initialValue</var>).</li><li>NOTE: A var with the same name as a formal parameter initially has the same value as the corresponding initialized parameter.</li></ol></li></ol></li></ol></li><li id=\"step-functiondeclarationinstantiation-web-compat-insertion-point\">NOTE: Annex <emu-xref href=\"#sec-web-compat-functiondeclarationinstantiation\"><a href=\"#sec-web-compat-functiondeclarationinstantiation\" class=\"excluded-xref\" excluded-id=\"sec-web-compat-functiondeclarationinstantiation\">#sec-web-compat-functiondeclarationinstantiation</a></emu-xref> adds additional steps at this point.</li><li>If <var>strict</var> is <emu-val>false</emu-val>, then<ol><li>Let <var>lexEnv</var> be <emu-xref aoid=\"NewDeclarativeEnvironment\"><a href=\"#sec-newdeclarativeenvironment\">NewDeclarativeEnvironment</a></emu-xref>(<var>varEnv</var>).</li><li>NOTE: Non-strict functions use a separate <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref> for top-level lexical declarations so that a <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> can determine whether any var scoped declarations introduced by the eval code conflict with pre-existing top-level lexically scoped declarations. This is not needed for strict functions because a strict <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> always places all declarations into a new <emu-xref href=\"#sec-environment-records\"><a href=\"#sec-environment-records\">Environment Record</a></emu-xref>.</li></ol></li><li>Else, let <var>lexEnv</var> be <var>varEnv</var>.</li><li>Set the LexicalEnvironment of <var>calleeContext</var> to <var>lexEnv</var>.</li><li>Let <var>lexDeclarations</var> be the LexicallyScopedDeclarations of <var>code</var>.</li><li>For each element <var>d</var> of <var>lexDeclarations</var>, do<ol><li>NOTE: A lexically declared name cannot be the same as a function/generator declaration, formal parameter, or a var name. Lexically declared names are only instantiated here but not initialized.</li><li>For each element <var>dn</var> of the BoundNames of <var>d</var>, do<ol><li>If IsConstantDeclaration of <var>d</var> is <emu-val>true</emu-val>, then<ol><li>Perform ! <var>lexEnv</var>.CreateImmutableBinding(<var>dn</var>, <emu-val>true</emu-val>).</li></ol></li><li>Else,<ol><li>Perform ! <var>lexEnv</var>.CreateMutableBinding(<var>dn</var>, <emu-val>false</emu-val>).</li></ol></li></ol></li></ol></li><li>For each <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">Parse Node</a></emu-xref> <var>f</var> of <var>functionsToInitialize</var>, do<ol><li>Let <var>fn</var> be the sole element of the BoundNames of <var>f</var>.</li><li>Let <var>fo</var> be InstantiateFunctionObject of <var>f</var> with argument <var>lexEnv</var>.</li><li>Perform ! <var>varEnv</var>.SetMutableBinding(<var>fn</var>, <var>fo</var>, <emu-val>false</emu-val>).</li></ol></li><li>Return <emu-xref aoid=\"NormalCompletion\"><a href=\"#sec-normalcompletion\">NormalCompletion</a></emu-xref>(<emu-const>empty</emu-const>).</li></ol></emu-alg>\n      <emu-note><span class=\"note\">Note 2</span><div class=\"note-contents\">\n        <p><emu-xref href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\"><a href=\"#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" class=\"excluded-xref\" excluded-id=\"sec-block-level-function-declarations-web-legacy-compatibility-semantics\">#sec-block-level-function-declarations-web-legacy-compatibility-semantics</a></emu-xref> provides an extension to the above algorithm that is necessary for backwards compatibility with web browser implementations of ECMAScript that predate ECMAScript 2015.</p>\n      </div></emu-note>\n      <emu-note><span class=\"note\">Note 3</span><div class=\"note-contents\">\n        <p>Parameter <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>s may contain <emu-xref href=\"#sec-function-calls-runtime-semantics-evaluation\"><a href=\"#sec-function-calls-runtime-semantics-evaluation\">direct eval</a></emu-xref> expressions. Any top level declarations of such evals are only visible to the eval code (<emu-xref href=\"#sec-types-of-source-code\"><a href=\"#sec-types-of-source-code\" class=\"excluded-xref\" excluded-id=\"sec-types-of-source-code\">#sec-types-of-source-code</a></emu-xref>). The creation of the environment for such declarations is described in <emu-xref href=\"#sec-function-definitions-runtime-semantics-iteratorbindinginitialization\"><a href=\"#sec-function-definitions-runtime-semantics-iteratorbindinginitialization\" class=\"excluded-xref\" excluded-id=\"sec-function-definitions-runtime-semantics-iteratorbindinginitialization\">#sec-function-definitions-runtime-semantics-iteratorbindinginitialization</a></emu-xref>.</p>\n      </div></emu-note>\n    </emu-clause>\n  "}, "sec-function-definitions-static-semantics-early-errors": {"num": "14.2.1", "title": "#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions-static-semantics-early-errors\">#sec-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81739a57\">\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b26bacea\">\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"8379937e\">\n        <emu-t>function</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.\n        </li>\n        <li>\n          If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n      <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n        <p>The LexicallyDeclaredNames of a <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> does not include identifiers bound using var or function declarations.</p>\n      </div></emu-note>\n      <emu-grammar><emu-production name=\"FunctionBody\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5cdf1a9f\"><emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> contains any duplicate entries.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> also occurs in the VarDeclaredNames of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsDuplicateLabels of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedBreakTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with argument &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUndefinedContinueTarget of <emu-nt><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a></emu-nt> with arguments &#171; &#187; and &#171; &#187; is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-static-semantics-issimpleparameterlist": {"num": "14.1.3", "title": "#sec-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList", "html": "<emu-clause id=\"sec-static-semantics-issimpleparameterlist\" oldids=\"sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist,sec-function-definitions-static-semantics-issimpleparameterlist,sec-arrow-function-definitions-static-semantics-issimpleparameterlist,sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList\" type=\"sdo\" aoid=\"IsSimpleParameterList\"><span id=\"sec-async-arrow-function-definitions-static-semantics-IsSimpleParameterList\"></span><span id=\"sec-arrow-function-definitions-static-semantics-issimpleparameterlist\"></span><span id=\"sec-function-definitions-static-semantics-issimpleparameterlist\"></span><span id=\"sec-destructuring-binding-patterns-static-semantics-issimpleparameterlist\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-issimpleparameterlist\">#sec-static-semantics-issimpleparameterlist</span> Static Semantics: IsSimpleParameterList</h1>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"983adfc8\"><emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ddd53e5\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89becb83\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"74d26704\"><emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b9079b6b\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>false</emu-val>, return <emu-val>false</emu-val>.</li><li>Return <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameter\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"03366b31\"><emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <var>formals</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\" collapsed=\"\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"614a19b0\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"be44becf\">\n        <emu-nt><a href=\"#prod-MemberExpression\">MemberExpression</a></emu-nt>\n        <emu-nt><a href=\"#prod-Arguments\">Arguments</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>head</var> be CoveredAsyncArrowHead of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</li><li>Return <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <var>head</var>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions-static-semantics-early-errors": {"num": "14.9.1", "title": "#sec-async-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-async-arrow-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions-static-semantics-early-errors\">#sec-async-arrow-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7505c63a\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>.</li>\n      </ul>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"694c2ff0\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is not <emu-xref href=\"#sec-syntactic-grammar\"><a href=\"#sec-syntactic-grammar\">covering</a></emu-xref> an <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>.</li>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>All Early Error rules for <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> and its derived productions apply to CoveredAsyncArrowHead of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-generator-function-definitions-static-semantics-early-errors": {"num": "14.5.1", "title": "#sec-generator-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-generator-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-generator-function-definitions-static-semantics-early-errors\">#sec-generator-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"GeneratorMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c5c757ac\">\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if HasDirectSuper of <emu-nt><a href=\"#prod-GeneratorMethod\">GeneratorMethod</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7dbc99b6\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorDeclaration\">GeneratorDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0d271960\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"GeneratorExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-GeneratorExpression\">GeneratorExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"df68213a\">\n        <emu-t>function</emu-t>\n        <emu-t>*</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.\n        </li>\n        <li>\n          If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-createdynamicfunction": {"num": "19.2.1.1.1", "title": "#sec-createdynamicfunction CreateDynamicFunction ( constructor, newTarget, kind, args )", "html": "<emu-clause id=\"sec-createdynamicfunction\" aoid=\"CreateDynamicFunction\">\n          <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-createdynamicfunction\">#sec-createdynamicfunction</span> CreateDynamicFunction ( <var>constructor</var>, <var>newTarget</var>, <var>kind</var>, <var>args</var> )</h1>\n          <p>The abstract operation CreateDynamicFunction takes arguments <var>constructor</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>), <var>newTarget</var> (a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>), <var>kind</var> (either <emu-const>normal</emu-const>, <emu-const>generator</emu-const>, <emu-const>async</emu-const>, or <emu-const>asyncGenerator</emu-const>), and <var>args</var> (a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of ECMAScript language values). <var>constructor</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> function that is performing this action. <var>newTarget</var> is the <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref> that <code>new</code> was initially applied to. <var>args</var> is the argument values that were passed to <var>constructor</var>. It performs the following steps when called:</p>\n          <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref> has at least two elements.</li><li>Let <var>callerContext</var> be the second to top element of the <emu-xref href=\"#execution-context-stack\"><a href=\"#execution-context-stack\">execution context stack</a></emu-xref>.</li><li>Let <var>callerRealm</var> be <var>callerContext</var>'s <emu-xref href=\"#realm\"><a href=\"#realm\">Realm</a></emu-xref>.</li><li>Let <var>calleeRealm</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Perform ?&#160;<emu-xref aoid=\"HostEnsureCanCompileStrings\"><a href=\"#sec-hostensurecancompilestrings\">HostEnsureCanCompileStrings</a></emu-xref>(<var>callerRealm</var>, <var>calleeRealm</var>).</li><li>If <var>newTarget</var> is <emu-val>undefined</emu-val>, set <var>newTarget</var> to <var>constructor</var>.</li><li>If <var>kind</var> is <emu-const>normal</emu-const>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%Function.prototype%\"</emu-val>.</li></ol></li><li>Else if <var>kind</var> is <emu-const>generator</emu-const>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-GeneratorBody\">GeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, ~Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%GeneratorFunction.prototype%\"</emu-val>.</li></ol></li><li>Else if <var>kind</var> is <emu-const>async</emu-const>, then<ol><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%AsyncFunction.prototype%\"</emu-val>.</li></ol></li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>kind</var> is <emu-const>asyncGenerator</emu-const>.</li><li>Let <var>goal</var> be the grammar symbol <emu-nt><a href=\"#prod-AsyncGeneratorBody\">AsyncGeneratorBody</a></emu-nt>.</li><li>Let <var>parameterGoal</var> be the grammar symbol <emu-nt params=\"+Yield, +Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[+Yield, +Await]</emu-params></emu-mods></emu-nt>.</li><li>Let <var>fallbackProto</var> be <emu-val>\"%AsyncGeneratorFunction.prototype%\"</emu-val>.</li></ol></li><li>Let <var>argCount</var> be the number of elements in <var>args</var>.</li><li>Let <var>P</var> be the empty String.</li><li>If <var>argCount</var> = 0, let <var>bodyArg</var> be the empty String.</li><li>Else if <var>argCount</var> = 1, let <var>bodyArg</var> be <var>args</var>[0].</li><li>Else,<ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: <var>argCount</var> &gt; 1.</li><li>Let <var>firstArg</var> be <var>args</var>[0].</li><li>Set <var>P</var> to ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>firstArg</var>).</li><li>Let <var>k</var> be 1.</li><li>Repeat, while <var>k</var> &lt; <var>argCount</var> - 1,<ol><li>Let <var>nextArg</var> be <var>args</var>[<var>k</var>].</li><li>Let <var>nextArgString</var> be ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>nextArg</var>).</li><li>Set <var>P</var> to the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>P</var>, <emu-val>\",\"</emu-val> (a comma), and <var>nextArgString</var>.</li><li>Set <var>k</var> to <var>k</var> + 1.</li></ol></li><li>Let <var>bodyArg</var> be <var>args</var>[<var>k</var>].</li></ol></li><li>Let <var>bodyString</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of 0x000A (LINE FEED), ?&#160;<emu-xref aoid=\"ToString\"><a href=\"#sec-tostring\">ToString</a></emu-xref>(<var>bodyArg</var>), and 0x000A (LINE FEED).</li><li>Let <var>prefix</var> be the prefix associated with <var>kind</var> in <emu-xref href=\"#table-dynamic-function-sourcetext-prefixes\"><a href=\"#table-dynamic-function-sourcetext-prefixes\" class=\"excluded-xref\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</a></emu-xref>.</li><li>Let <var>sourceString</var> be the <emu-xref href=\"#string-concatenation\"><a href=\"#string-concatenation\">string-concatenation</a></emu-xref> of <var>prefix</var>, <emu-val>\" anonymous(\"</emu-val>, <var>P</var>, 0x000A (LINE FEED), <emu-val>\") {\"</emu-val>, <var>bodyString</var>, and <emu-val>\"}\"</emu-val>.</li><li>Let <var>sourceText</var> be !&#160;<emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>sourceString</var>).</li><li>Perform the following substeps in an <emu-xref href=\"#implementation-defined\"><a href=\"#implementation-defined\">implementation-defined</a></emu-xref> order, possibly interleaving parsing and error detection:<ol><li>Let <var>parameters</var> be <emu-xref aoid=\"ParseText\"><a href=\"#sec-parsetext\">ParseText</a></emu-xref>(! <emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>P</var>), <var>parameterGoal</var>).</li><li>If <var>parameters</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>Let <var>body</var> be <emu-xref aoid=\"ParseText\"><a href=\"#sec-parsetext\">ParseText</a></emu-xref>(! <emu-xref aoid=\"StringToCodePoints\"><a href=\"#sec-stringtocodepoints\">StringToCodePoints</a></emu-xref>(<var>bodyString</var>), <var>goal</var>).</li><li>If <var>body</var> is a <emu-xref href=\"#sec-list-and-record-specification-type\"><a href=\"#sec-list-and-record-specification-type\">List</a></emu-xref> of errors, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>Let <var>strict</var> be ContainsUseStrict of <var>body</var>.</li><li>If <var>strict</var> is <emu-val>true</emu-val>, apply the <emu-xref href=\"#early-error\"><a href=\"#early-error\">early error</a></emu-xref> rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> to <var>parameters</var>.</li><li>If <var>strict</var> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <var>parameters</var> is <emu-val>false</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If any element of the BoundNames of <var>parameters</var> also occurs in the LexicallyDeclaredNames of <var>body</var>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>body</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li><li>If <var>kind</var> is <emu-const>generator</emu-const> or <emu-const>asyncGenerator</emu-const>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-YieldExpression\">YieldExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>kind</var> is <emu-const>async</emu-const> or <emu-const>asyncGenerator</emu-const>, then<ol><li>If <var>parameters</var> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li><li>If <var>strict</var> is <emu-val>true</emu-val>, then<ol><li>If BoundNames of <var>parameters</var> contains any duplicate elements, throw a <emu-val>SyntaxError</emu-val> exception.</li></ol></li></ol></li><li>Let <var>proto</var> be ?&#160;<emu-xref aoid=\"GetPrototypeFromConstructor\"><a href=\"#sec-getprototypefromconstructor\">GetPrototypeFromConstructor</a></emu-xref>(<var>newTarget</var>, <var>fallbackProto</var>).</li><li>Let <var>realmF</var> be <emu-xref href=\"#current-realm\"><a href=\"#current-realm\">the current Realm Record</a></emu-xref>.</li><li>Let <var>scope</var> be <var>realmF</var>.[[GlobalEnv]].</li><li>Let <var>F</var> be !&#160;<emu-xref aoid=\"OrdinaryFunctionCreate\"><a href=\"#sec-ordinaryfunctioncreate\">OrdinaryFunctionCreate</a></emu-xref>(<var>proto</var>, <var>sourceText</var>, <var>parameters</var>, <var>body</var>, <emu-const>non-lexical-this</emu-const>, <var>scope</var>).</li><li>Perform <emu-xref aoid=\"SetFunctionName\"><a href=\"#sec-setfunctionname\">SetFunctionName</a></emu-xref>(<var>F</var>, <emu-val>\"anonymous\"</emu-val>).</li><li>If <var>kind</var> is <emu-const>generator</emu-const>, then<ol><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-generator-prototype\"><a href=\"#sec-properties-of-generator-prototype\">%GeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <emu-const>asyncGenerator</emu-const>, then<ol><li>Let <var>prototype</var> be !&#160;<emu-xref aoid=\"OrdinaryObjectCreate\"><a href=\"#sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a></emu-xref>(<emu-xref href=\"#sec-properties-of-asyncgenerator-prototype\"><a href=\"#sec-properties-of-asyncgenerator-prototype\">%AsyncGeneratorFunction.prototype.prototype%</a></emu-xref>).</li><li>Perform <emu-xref aoid=\"DefinePropertyOrThrow\"><a href=\"#sec-definepropertyorthrow\">DefinePropertyOrThrow</a></emu-xref>(<var>F</var>, <emu-val>\"prototype\"</emu-val>, PropertyDescriptor { [[Value]]: <var>prototype</var>, [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val> }).</li></ol></li><li>Else if <var>kind</var> is <emu-const>normal</emu-const>, perform <emu-xref aoid=\"MakeConstructor\"><a href=\"#sec-makeconstructor\">MakeConstructor</a></emu-xref>(<var>F</var>).</li><li>NOTE: Functions whose <var>kind</var> is <emu-const>async</emu-const> are not constructible and do not have a [[Construct]] internal method or a <emu-val>\"prototype\"</emu-val> property.</li><li>Return <var>F</var>.</li></ol></emu-alg>\n          <emu-note><span class=\"note\">Note</span><div class=\"note-contents\">\n            <p>CreateDynamicFunction defines a <emu-val>\"prototype\"</emu-val> property on any function it creates whose <var>kind</var> is not <emu-const>async</emu-const> to provide for the possibility that the function will be used as a <emu-xref href=\"#constructor\"><a href=\"#constructor\">constructor</a></emu-xref>.</p>\n          </div></emu-note>\n\n          <emu-table id=\"table-dynamic-function-sourcetext-prefixes\" caption=\"Dynamic Function SourceText Prefixes\"><figure><figcaption><span class=\"excluded-caption-num\" excluded-id=\"table-dynamic-function-sourcetext-prefixes\">#table-dynamic-function-sourcetext-prefixes</span>: Dynamic Function SourceText Prefixes</figcaption>\n            <table>\n              <tbody>\n                <tr><th>Kind</th><th>Prefix</th></tr>\n                <tr><td><emu-const>normal</emu-const></td><td><emu-val>\"function\"</emu-val></td></tr>\n                <tr><td><emu-const>generator</emu-const></td><td><emu-val>\"function*\"</emu-val></td></tr>\n                <tr><td><emu-const>async</emu-const></td><td><emu-val>\"async function\"</emu-val></td></tr>\n                <tr><td><emu-const>asyncGenerator</emu-const></td><td><emu-val>\"async function*\"</emu-val></td></tr>\n              </tbody>\n            </table>\n          </figure></emu-table>\n        </emu-clause>\n      "}, "sec-function-definitions": {"num": "14.2", "title": "#sec-function-definitions Function Definitions", "html": "<emu-clause id=\"sec-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-function-definitions\">#sec-function-definitions</span> Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"FunctionDeclaration\" params=\"Yield, Await, Default\" id=\"prod-FunctionDeclaration\">\n    <emu-nt params=\"Yield, Await, Default\"><a href=\"#prod-FunctionDeclaration\">FunctionDeclaration</a><emu-mods><emu-params>[Yield, Await, Default]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"7c02f6b3\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"ff05b860\" constraints=\"+Default\"><emu-constraints>[+Default]</emu-constraints>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionExpression\" id=\"prod-FunctionExpression\">\n    <emu-nt><a href=\"#prod-FunctionExpression\">FunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1faafdcc\">\n        <emu-t>function</emu-t>\n        <emu-nt params=\"~Yield, ~Await\" optional=\"\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt params=\"~Yield, ~Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[~Yield, ~Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionBody\" params=\"Yield, Await\" id=\"prod-FunctionBody\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionBody\">FunctionBody</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"82527203\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionStatementList\" params=\"Yield, Await\" id=\"prod-FunctionStatementList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionStatementList\">FunctionStatementList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"2267baf8\"><emu-nt params=\"?Yield, ?Await, +Return\" optional=\"\"><a href=\"#prod-StatementList\">StatementList</a><emu-mods><emu-params>[?Yield, ?Await, +Return]</emu-params><emu-opt>opt</emu-opt></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.2.1</span>#sec-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-boundnames\"><h1><span class=\"secnum\">14.2.2</span>#sec-function-definitions-static-semantics-boundnames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-contains\"><h1><span class=\"secnum\">14.2.3</span>#sec-function-definitions-static-semantics-contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsduplicatelabels\"><h1><span class=\"secnum\">14.2.4</span>#sec-function-definitions-static-semantics-containsduplicatelabels Static Semantics: ContainsDuplicateLabels</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedbreaktarget\"><h1><span class=\"secnum\">14.2.5</span>#sec-function-definitions-static-semantics-containsundefinedbreaktarget Static Semantics: ContainsUndefinedBreakTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsundefinedcontinuetarget\"><h1><span class=\"secnum\">14.2.6</span>#sec-function-definitions-static-semantics-containsundefinedcontinuetarget Static Semantics: ContainsUndefinedContinueTarget</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.2.7</span>#sec-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-hasname\"><h1><span class=\"secnum\">14.2.8</span>#sec-function-definitions-static-semantics-hasname Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-isanonymousfunctiondefinition\"><h1><span class=\"secnum\">14.2.9</span>#sec-isanonymousfunctiondefinition Static Semantics: IsAnonymousFunctionDefinition ( expr )</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isconstantdeclaration\"><h1><span class=\"secnum\">14.2.10</span>#sec-function-definitions-static-semantics-isconstantdeclaration Static Semantics: IsConstantDeclaration</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-isfunctiondefinition\"><h1><span class=\"secnum\">14.2.11</span>#sec-function-definitions-static-semantics-isfunctiondefinition Static Semantics: IsFunctionDefinition</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallydeclarednames\"><h1><span class=\"secnum\">14.2.12</span>#sec-function-definitions-static-semantics-lexicallydeclarednames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-lexicallyscopeddeclarations\"><h1><span class=\"secnum\">14.2.13</span>#sec-function-definitions-static-semantics-lexicallyscopeddeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-vardeclarednames\"><h1><span class=\"secnum\">14.2.14</span>#sec-function-definitions-static-semantics-vardeclarednames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-function-definitions-static-semantics-varscopeddeclarations\"><h1><span class=\"secnum\">14.2.15</span>#sec-function-definitions-static-semantics-varscopeddeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluatebody\"><h1><span class=\"secnum\">14.2.16</span>#sec-function-definitions-runtime-semantics-evaluatebody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-iteratorbindinginitialization\"><h1><span class=\"secnum\">14.2.17</span>#sec-function-definitions-runtime-semantics-iteratorbindinginitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-instantiatefunctionobject\"><h1><span class=\"secnum\">14.2.18</span>#sec-function-definitions-runtime-semantics-instantiatefunctionobject Runtime Semantics: InstantiateFunctionObject</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.2.19</span>#sec-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.2.20</span>#sec-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-async-function-definitions-static-semantics-early-errors": {"num": "14.8.1", "title": "#sec-async-function-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-async-function-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-function-definitions-static-semantics-early-errors\">#sec-async-function-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"AsyncMethod\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"759e5682\">\n        <emu-t>async</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if HasDirectSuper of <emu-nt><a href=\"#prod-AsyncMethod\">AsyncMethod</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n      </ul>\n      <emu-grammar><emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e2632ddf\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionDeclaration\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionDeclaration\">AsyncFunctionDeclaration</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6a076671\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6a076671\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncFunctionExpression\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncFunctionExpression\">AsyncFunctionExpression</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"e2632ddf\">\n        <emu-t>async</emu-t>\n        <emu-t>function</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-val>false</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-AwaitExpression\">AwaitExpression</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>If the source code matching <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, the Early Error rules for <emu-grammar><emu-production name=\"UniqueFormalParameters\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0218c6f5\"><emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar> are applied.</li>\n        <li>If <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is present and the source code matching <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-xref href=\"#sec-strict-mode-code\"><a href=\"#sec-strict-mode-code\">strict mode code</a></emu-xref>, it is a Syntax Error if the StringValue of <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt> is <emu-val>\"eval\"</emu-val> or <emu-val>\"arguments\"</emu-val>.</li>\n        <li>It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperProperty\">SuperProperty</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n        <li>It is a Syntax Error if <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt> Contains <emu-nt><a href=\"#prod-SuperCall\">SuperCall</a></emu-nt> is <emu-val>true</emu-val>.</li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-async-arrow-function-definitions": {"num": "14.9", "title": "#sec-async-arrow-function-definitions Async Arrow Function Definitions", "html": "<emu-clause id=\"sec-async-arrow-function-definitions\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-async-arrow-function-definitions\">#sec-async-arrow-function-definitions</span> Async Arrow Function Definitions</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowFunction\" params=\"In, Yield, Await\" id=\"prod-AsyncArrowFunction\">\n    <emu-nt params=\"In, Yield, Await\"><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a><emu-mods><emu-params>[In, Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"bb50dce4\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"?Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"callcover\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt params=\"?In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[?In]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncConciseBody\" params=\"In\" id=\"prod-AsyncConciseBody\">\n    <emu-nt params=\"In\"><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a><emu-mods><emu-params>[In]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"6cf537fe\">\n        <emu-gann>[lookahead &#8800; <emu-t>{</emu-t>]</emu-gann>\n        <emu-nt params=\"?In, +Await\"><a href=\"#prod-ExpressionBody\">ExpressionBody</a><emu-mods><emu-params>[?In, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n    <emu-rhs a=\"6ccf9be6\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-AsyncFunctionBody\">AsyncFunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"AsyncArrowBindingIdentifier\" params=\"Yield\" id=\"prod-AsyncArrowBindingIdentifier\">\n    <emu-nt params=\"Yield\"><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"614a19b0\"><emu-nt params=\"?Yield, +Await\"><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a><emu-mods><emu-params>[?Yield, +Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"CoverCallExpressionAndAsyncArrowHead\" params=\"Yield, Await\" id=\"prod-CoverCallExpressionAndAsyncArrowHead\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"f747be5d\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-MemberExpression\">MemberExpression</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-Arguments\">Arguments</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n    <h2>Supplemental Syntax</h2>\n    <p>When processing an instance of the production\n      <br>\n      <emu-grammar><emu-production name=\"AsyncArrowFunction\" collapsed=\"\" class=\" inline\">\n    <emu-nt><a href=\"#prod-AsyncArrowFunction\">AsyncArrowFunction</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"694c2ff0\">\n        <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt>\n        <emu-t>=&gt;</emu-t>\n        <emu-nt><a href=\"#prod-AsyncConciseBody\">AsyncConciseBody</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <br>\n      the interpretation of <emu-nt><a href=\"#prod-CoverCallExpressionAndAsyncArrowHead\">CoverCallExpressionAndAsyncArrowHead</a></emu-nt> is refined using the following grammar:</p>\n\n    <emu-grammar type=\"definition\"><emu-production name=\"AsyncArrowHead\" id=\"prod-AsyncArrowHead\">\n    <emu-nt><a href=\"#prod-AsyncArrowHead\">AsyncArrowHead</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c9d14bfe\">\n        <emu-t>async</emu-t>\n        <emu-gann>[no <emu-nt><a href=\"#prod-LineTerminator\">LineTerminator</a></emu-nt> here]</emu-gann>\n        <emu-nt params=\"~Yield, +Await\"><a href=\"#prod-ArrowFormalParameters\">ArrowFormalParameters</a><emu-mods><emu-params>[~Yield, +Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n\n    <div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-early-errors\"><h1><span class=\"secnum\">14.9.1</span>#sec-async-arrow-function-definitions-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-CoveredAsyncArrowHead\"><h1><span class=\"secnum\">14.9.2</span>#sec-async-arrow-function-definitions-static-semantics-CoveredAsyncArrowHead Static Semantics: CoveredAsyncArrowHead</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-BoundNames\"><h1><span class=\"secnum\">14.9.3</span>#sec-async-arrow-function-definitions-static-semantics-BoundNames Static Semantics: BoundNames</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-Contains\"><h1><span class=\"secnum\">14.9.4</span>#sec-async-arrow-function-definitions-static-semantics-Contains Static Semantics: Contains</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-containsusestrict\"><h1><span class=\"secnum\">14.9.5</span>#sec-async-arrow-function-definitions-static-semantics-containsusestrict Static Semantics: ContainsUseStrict</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-HasName\"><h1><span class=\"secnum\">14.9.6</span>#sec-async-arrow-function-definitions-static-semantics-HasName Static Semantics: HasName</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-LexicallyDeclaredNames\"><h1><span class=\"secnum\">14.9.7</span>#sec-async-arrow-function-definitions-static-semantics-LexicallyDeclaredNames Static Semantics: LexicallyDeclaredNames</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-LexicallyScopedDeclarations\"><h1><span class=\"secnum\">14.9.8</span>#sec-async-arrow-function-definitions-static-semantics-LexicallyScopedDeclarations Static Semantics: LexicallyScopedDeclarations</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-VarDeclaredNames\"><h1><span class=\"secnum\">14.9.9</span>#sec-async-arrow-function-definitions-static-semantics-VarDeclaredNames Static Semantics: VarDeclaredNames</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-static-semantics-VarScopedDeclarations\"><h1><span class=\"secnum\">14.9.10</span>#sec-async-arrow-function-definitions-static-semantics-VarScopedDeclarations Static Semantics: VarScopedDeclarations</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-IteratorBindingInitialization\"><h1><span class=\"secnum\">14.9.11</span>#sec-async-arrow-function-definitions-IteratorBindingInitialization Runtime Semantics: IteratorBindingInitialization</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-EvaluateBody\"><h1><span class=\"secnum\">14.9.12</span>#sec-async-arrow-function-definitions-EvaluateBody Runtime Semantics: EvaluateBody</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-runtime-semantics-namedevaluation\"><h1><span class=\"secnum\">14.9.13</span>#sec-async-arrow-function-definitions-runtime-semantics-namedevaluation Runtime Semantics: NamedEvaluation</h1>...</div><div id=\"excluded-sec-async-arrow-function-definitions-runtime-semantics-evaluation\"><h1><span class=\"secnum\">14.9.14</span>#sec-async-arrow-function-definitions-runtime-semantics-evaluation Runtime Semantics: Evaluation</h1>...</div></emu-clause>\n\n  "}, "sec-static-semantics-containsexpression": {"num": "14.1.2", "title": "#sec-static-semantics-containsexpression Static Semantics: ContainsExpression", "html": "<emu-clause id=\"sec-static-semantics-containsexpression\" oldids=\"sec-destructuring-binding-patterns-static-semantics-containsexpression,sec-function-definitions-static-semantics-containsexpression,sec-arrow-function-definitions-static-semantics-containsexpression,sec-async-arrow-function-definitions-static-semantics-ContainsExpression\" type=\"sdo\" aoid=\"ContainsExpression\"><span id=\"sec-async-arrow-function-definitions-static-semantics-ContainsExpression\"></span><span id=\"sec-arrow-function-definitions-static-semantics-containsexpression\"></span><span id=\"sec-function-definitions-static-semantics-containsexpression\"></span><span id=\"sec-destructuring-binding-patterns-static-semantics-containsexpression\"></span>\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-static-semantics-containsexpression\">#sec-static-semantics-containsexpression</span> Static Semantics: ContainsExpression</h1>\n      <emu-grammar><emu-production name=\"ObjectBindingPattern\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"81ba5a4a\">\n        <emu-t>{</emu-t>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"1131455e\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ObjectBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ObjectBindingPattern\">ObjectBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ba52f35d\">\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingRestProperty\">BindingRestProperty</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"906e476b\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0c457c16\">\n        <emu-t>[</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"8f1a867e\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrayBindingPattern\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrayBindingPattern\">ArrayBindingPattern</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"ee591d49\">\n        <emu-t>[</emu-t>\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>\n        <emu-t>]</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>has</var> be <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingPropertyList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0730de3b\">\n        <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>has</var> be <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPropertyList\">BindingPropertyList</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElementList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1e2c0030\">\n        <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>has</var> be <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElementList\">BindingElementList</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElisionElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElisionElement\">BindingElisionElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"5a8f4d01\">\n        <emu-nt optional=\"\"><a href=\"#prod-Elision\">Elision</a><emu-mods><emu-opt>opt</emu-opt></emu-mods></emu-nt>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingProperty\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingProperty\">BindingProperty</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"987bd1c2\">\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>:</emu-t>\n        <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>has</var> be IsComputedPropertyKey of <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>.</li><li>If <var>has</var> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingElement\">BindingElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"0ddd53e5\">\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"SingleNameBinding\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-SingleNameBinding\">SingleNameBinding</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"89becb83\">\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n        <emu-nt><a href=\"#prod-Initializer\">Initializer</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>true</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingRestElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"145844de\">\n        <emu-t>...</emu-t>\n        <emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"BindingRestElement\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-BindingRestElement\">BindingRestElement</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"1e627394\">\n        <emu-t>...</emu-t>\n        <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-BindingPattern\">BindingPattern</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameters\">FormalParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"b9079b6b\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"FormalParameterList\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"209ae310\">\n        <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>If <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameterList\">FormalParameterList</a></emu-nt> is <emu-val>true</emu-val>, return <emu-val>true</emu-val>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <emu-nt><a href=\"#prod-FormalParameter\">FormalParameter</a></emu-nt>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"ArrowParameters\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-ArrowParameters\">ArrowParameters</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cab6f5d7\"><emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Let <var>formals</var> be CoveredFormalsList of <emu-nt><a href=\"#prod-CoverParenthesizedExpressionAndArrowParameterList\">CoverParenthesizedExpressionAndArrowParameterList</a></emu-nt>.</li><li>Return <emu-xref aoid=\"ContainsExpression\"><a href=\"#sec-static-semantics-containsexpression\">ContainsExpression</a></emu-xref> of <var>formals</var>.</li></ol></emu-alg>\n      <emu-grammar><emu-production name=\"AsyncArrowBindingIdentifier\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-AsyncArrowBindingIdentifier\">AsyncArrowBindingIdentifier</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"50e97238\"><emu-nt><a href=\"#prod-BindingIdentifier\">BindingIdentifier</a></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n      <emu-alg><ol><li>Return <emu-val>false</emu-val>.</li></ol></emu-alg>\n    </emu-clause>\n\n    "}, "sec-method-definitions-static-semantics-early-errors": {"num": "14.4.1", "title": "#sec-method-definitions-static-semantics-early-errors Static Semantics: Early Errors", "html": "<emu-clause id=\"sec-method-definitions-static-semantics-early-errors\">\n      <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-method-definitions-static-semantics-early-errors\">#sec-method-definitions-static-semantics-early-errors</span> Static Semantics: Early Errors</h1>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"cb8e53e9\">\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n      </ul>\n      <emu-grammar><emu-production name=\"MethodDefinition\" collapsed=\"\">\n    <emu-nt><a href=\"#prod-MethodDefinition\">MethodDefinition</a></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"4402354c\">\n        <emu-t>set</emu-t>\n        <emu-nt><a href=\"#prod-PropertyName\">PropertyName</a></emu-nt>\n        <emu-t>(</emu-t>\n        <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt>\n        <emu-t>)</emu-t>\n        <emu-t>{</emu-t>\n        <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>\n        <emu-t>}</emu-t>\n    </emu-rhs>\n</emu-production>\n</emu-grammar>\n      <ul>\n        <li>\n          It is a Syntax Error if BoundNames of <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> contains any duplicate elements.\n        </li>\n        <li>\n          It is a Syntax Error if ContainsUseStrict of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt> is <emu-val>true</emu-val> and <emu-xref aoid=\"IsSimpleParameterList\"><a href=\"#sec-static-semantics-issimpleparameterlist\">IsSimpleParameterList</a></emu-xref> of <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> is <emu-val>false</emu-val>.\n        </li>\n        <li>\n          It is a Syntax Error if any element of the BoundNames of <emu-nt><a href=\"#prod-PropertySetParameterList\">PropertySetParameterList</a></emu-nt> also occurs in the LexicallyDeclaredNames of <emu-nt><a href=\"#prod-FunctionBody\">FunctionBody</a></emu-nt>.\n        </li>\n      </ul>\n    </emu-clause>\n\n    "}, "sec-parameter-lists": {"num": "14.1", "title": "#sec-parameter-lists Parameter Lists", "html": "<emu-clause id=\"sec-parameter-lists\">\n    <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-parameter-lists\">#sec-parameter-lists</span> Parameter Lists</h1>\n    <h2>Syntax</h2>\n    <emu-grammar type=\"definition\"><emu-production name=\"UniqueFormalParameters\" params=\"Yield, Await\" id=\"prod-UniqueFormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-UniqueFormalParameters\">UniqueFormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"900b794a\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameters\" params=\"Yield, Await\" id=\"prod-FormalParameters\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameters\">FormalParameters</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"37b9c04c\"><emu-gann>[empty]</emu-gann></emu-rhs>\n    <emu-rhs a=\"c52f7805\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"e5fdd15f\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"58349494\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n    </emu-rhs>\n    <emu-rhs a=\"607f4086\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameterList\" params=\"Yield, Await\" id=\"prod-FormalParameterList\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"dd0854fb\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n    <emu-rhs a=\"30b35c7e\">\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameterList\">FormalParameterList</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n        <emu-t>,</emu-t>\n        <emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt>\n    </emu-rhs>\n</emu-production>\n<emu-production name=\"FunctionRestParameter\" params=\"Yield, Await\" id=\"prod-FunctionRestParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FunctionRestParameter\">FunctionRestParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"216da14c\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingRestElement\">BindingRestElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n<emu-production name=\"FormalParameter\" params=\"Yield, Await\" id=\"prod-FormalParameter\">\n    <emu-nt params=\"Yield, Await\"><a href=\"#prod-FormalParameter\">FormalParameter</a><emu-mods><emu-params>[Yield, Await]</emu-params></emu-mods></emu-nt> <emu-geq>:</emu-geq> <emu-rhs a=\"c6930e11\"><emu-nt params=\"?Yield, ?Await\"><a href=\"#prod-BindingElement\">BindingElement</a><emu-mods><emu-params>[?Yield, ?Await]</emu-params></emu-mods></emu-nt></emu-rhs>\n</emu-production>\n</emu-grammar>\n    <div id=\"excluded-sec-parameter-lists-static-semantics-early-errors\"><h1><span class=\"secnum\">14.1.1</span>#sec-parameter-lists-static-semantics-early-errors Static Semantics: Early Errors</h1>...</div><div id=\"excluded-sec-static-semantics-containsexpression\"><h1><span class=\"secnum\">14.1.2</span>#sec-static-semantics-containsexpression Static Semantics: ContainsExpression</h1>...</div><div id=\"excluded-sec-static-semantics-issimpleparameterlist\"><h1><span class=\"secnum\">14.1.3</span>#sec-static-semantics-issimpleparameterlist Static Semantics: IsSimpleParameterList</h1>...</div><div id=\"excluded-sec-static-semantics-hasinitializer\"><h1><span class=\"secnum\">14.1.4</span>#sec-static-semantics-hasinitializer Static Semantics: HasInitializer</h1>...</div><div id=\"excluded-sec-static-semantics-expectedargumentcount\"><h1><span class=\"secnum\">14.1.5</span>#sec-static-semantics-expectedargumentcount Static Semantics: ExpectedArgumentCount</h1>...</div></emu-clause>\n\n  "}}, "figData": {"table-internal-slots-of-ecmascript-function-objects": "Table 29", "table-dynamic-function-sourcetext-prefixes": "Table 50"}}}