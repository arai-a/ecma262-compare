{"from": {"secList": ["sec-entercriticalsection"], "secData": {"sec-entercriticalsection": {"num": "24.4.1.4", "title": "#sec-entercriticalsection EnterCriticalSection ( WL )", "html": "<emu-clause id=\"sec-entercriticalsection\" aoid=\"EnterCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-entercriticalsection\">#sec-entercriticalsection</span> EnterCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation EnterCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is not in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Wait until no <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>, then enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var> (without allowing any other <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to enter).\n        </li></ol></emu-alg>\n      </emu-clause>\n\n      "}}, "figData": {}}, "to": {"secList": ["sec-entercriticalsection"], "secData": {"sec-entercriticalsection": {"num": "24.4.1.4", "title": "#sec-entercriticalsection EnterCriticalSection ( WL )", "html": "<emu-clause id=\"sec-entercriticalsection\" aoid=\"EnterCriticalSection\">\n        <h1><span class=\"secnum excluded-secnum\" excluded-id=\"sec-entercriticalsection\">#sec-entercriticalsection</span> EnterCriticalSection ( <var>WL</var> )</h1>\n        <p>The abstract operation EnterCriticalSection takes one argument, a <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref> <var>WL</var>. It performs the following steps:</p>\n        <emu-alg><ol><li><emu-xref href=\"#assert\"><a href=\"#assert\">Assert</a></emu-xref>: The calling <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is not in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for any <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">WaiterList</a></emu-xref>.</li><li>Wait until no <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> is in the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var>, then enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> for <var>WL</var> (without allowing any other <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to enter).\n        </li></ol></emu-alg>\n        <p>EnterCriticalSection has  <dfn>contention</dfn> when an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> attempting to enter the <emu-xref href=\"#sec-getwaiterlist\"><a href=\"#sec-getwaiterlist\">critical section</a></emu-xref> must wait for another <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to leave it. When there is no contention, FIFO order of EnterCriticalSection calls is observable. When there is contention, an implementation may choose an arbitrary order but may not cause an <emu-xref href=\"#agent\"><a href=\"#agent\">agent</a></emu-xref> to wait indefinitely.</p>\n      </emu-clause>\n\n      "}}, "figData": {}}}